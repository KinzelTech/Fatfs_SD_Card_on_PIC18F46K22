

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Feb 09 17:24:43 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1
    80                           	psect	text66,global,reloc=2,class=CODE,delta=1
    81                           	psect	text67,global,reloc=2,class=CODE,delta=1
    82                           	psect	text68,global,reloc=2,class=CODE,delta=1
    83                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text70,global,reloc=2,class=CODE,delta=1
    85                           	psect	text71,global,reloc=2,class=CODE,delta=1
    86                           	psect	text72,global,reloc=2,class=CODE,delta=1
    87                           	psect	text73,global,reloc=2,class=CODE,delta=1
    88                           	psect	text74,global,reloc=2,class=CODE,delta=1
    89                           	psect	text75,global,reloc=2,class=CODE,delta=1
    90                           	psect	text76,global,reloc=2,class=CODE,delta=1
    91                           	psect	text77,global,reloc=2,class=CODE,delta=1
    92                           	psect	text78,global,reloc=2,class=CODE,delta=1
    93                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    94                           	psect	text79,global,reloc=2,class=CODE,delta=1
    95                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    96                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    97                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    98   000000                     
    99                           ; Generated 06/04/2022 GMT
   100                           ; 
   101                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   102                           ; All rights reserved.
   103                           ; 
   104                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   105                           ; 
   106                           ; Redistribution and use in source and binary forms, with or without modification, are
   107                           ; permitted provided that the following conditions are met:
   108                           ; 
   109                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   110                           ;        conditions and the following disclaimer.
   111                           ; 
   112                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   113                           ;        of conditions and the following disclaimer in the documentation and/or other
   114                           ;        materials provided with the distribution. Publication is not required when
   115                           ;        this file is used in an embedded application.
   116                           ; 
   117                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   118                           ;        software without specific prior written permission.
   119                           ; 
   120                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   121                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   122                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   123                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   124                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   125                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   126                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   127                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   128                           ; 
   129                           ; 
   130                           ; Code-generator required, PIC18F46K22 Definitions
   131                           ; 
   132                           ; SFR Addresses
   133   000000                     
   134 ;; Function _SPI1_WriteBlock is unused but had its address taken
   135   000000                     
   136 ;; Function _SPI1_ReadBlock is unused but had its address taken
   137   000000                     
   138 ;; Function _SPI1_WriteByte is unused but had its address taken
   139   000000                     
   140 ;; Function _SPI1_ReadByte is unused but had its address taken
   141   000000                     
   142                           	psect	idataBANK1
   143   007CA8                     __pidataBANK1:
   144                           	callstack 0
   145                           
   146                           ;initializer for FatFsDemo_Tasks@F259
   147   007CA8  48                 	db	72
   148   007CA9  65                 	db	101
   149   007CAA  6C                 	db	108
   150   007CAB  6C                 	db	108
   151   007CAC  6F                 	db	111
   152   007CAD  20                 	db	32
   153   007CAE  57                 	db	87
   154   007CAF  6F                 	db	111
   155   007CB0  72                 	db	114
   156   007CB1  6C                 	db	108
   157   007CB2  64                 	db	100
   158   007CB3  21                 	db	33
   159   007CB4  00                 	db	0
   160                           
   161                           ;initializer for _mediaInformation
   162   007CB5  00                 	db	0
   163   007CB6  0200               	dw	512
   164   007CB8  00                 	db	0
   165   007CB9  0000               	dw	0
   166   007CBB  0000               	dw	0
   167   007CBD  00                 	db	0
   168                           
   169                           	psect	mediumconst
   170   00FE86                     __pmediumconst:
   171                           	callstack 0
   172   00FE86  00                 	db	0
   173   00FE87                     _ExCvt:
   174                           	callstack 0
   175   00FE87  80                 	db	128
   176   00FE88  9A                 	db	154
   177   00FE89  45                 	db	69
   178   00FE8A  41                 	db	65
   179   00FE8B  8E                 	db	142
   180   00FE8C  41                 	db	65
   181   00FE8D  8F                 	db	143
   182   00FE8E  80                 	db	128
   183   00FE8F  45                 	db	69
   184   00FE90  45                 	db	69
   185   00FE91  45                 	db	69
   186   00FE92  49                 	db	73
   187   00FE93  49                 	db	73
   188   00FE94  49                 	db	73
   189   00FE95  8E                 	db	142
   190   00FE96  8F                 	db	143
   191   00FE97  90                 	db	144
   192   00FE98  92                 	db	146
   193   00FE99  92                 	db	146
   194   00FE9A  4F                 	db	79
   195   00FE9B  99                 	db	153
   196   00FE9C  4F                 	db	79
   197   00FE9D  55                 	db	85
   198   00FE9E  55                 	db	85
   199   00FE9F  59                 	db	89
   200   00FEA0  99                 	db	153
   201   00FEA1  9A                 	db	154
   202   00FEA2  9B                 	db	155
   203   00FEA3  9C                 	db	156
   204   00FEA4  9D                 	db	157
   205   00FEA5  9E                 	db	158
   206   00FEA6  9F                 	db	159
   207   00FEA7  41                 	db	65
   208   00FEA8  49                 	db	73
   209   00FEA9  4F                 	db	79
   210   00FEAA  55                 	db	85
   211   00FEAB  A5                 	db	165
   212   00FEAC  A5                 	db	165
   213   00FEAD  A6                 	db	166
   214   00FEAE  A7                 	db	167
   215   00FEAF  A8                 	db	168
   216   00FEB0  A9                 	db	169
   217   00FEB1  AA                 	db	170
   218   00FEB2  AB                 	db	171
   219   00FEB3  AC                 	db	172
   220   00FEB4  AD                 	db	173
   221   00FEB5  AE                 	db	174
   222   00FEB6  AF                 	db	175
   223   00FEB7  B0                 	db	176
   224   00FEB8  B1                 	db	177
   225   00FEB9  B2                 	db	178
   226   00FEBA  B3                 	db	179
   227   00FEBB  B4                 	db	180
   228   00FEBC  B5                 	db	181
   229   00FEBD  B6                 	db	182
   230   00FEBE  B7                 	db	183
   231   00FEBF  B8                 	db	184
   232   00FEC0  B9                 	db	185
   233   00FEC1  BA                 	db	186
   234   00FEC2  BB                 	db	187
   235   00FEC3  BC                 	db	188
   236   00FEC4  BD                 	db	189
   237   00FEC5  BE                 	db	190
   238   00FEC6  BF                 	db	191
   239   00FEC7  C0                 	db	192
   240   00FEC8  C1                 	db	193
   241   00FEC9  C2                 	db	194
   242   00FECA  C3                 	db	195
   243   00FECB  C4                 	db	196
   244   00FECC  C5                 	db	197
   245   00FECD  C6                 	db	198
   246   00FECE  C7                 	db	199
   247   00FECF  C8                 	db	200
   248   00FED0  C9                 	db	201
   249   00FED1  CA                 	db	202
   250   00FED2  CB                 	db	203
   251   00FED3  CC                 	db	204
   252   00FED4  CD                 	db	205
   253   00FED5  CE                 	db	206
   254   00FED6  CF                 	db	207
   255   00FED7  D0                 	db	208
   256   00FED8  D1                 	db	209
   257   00FED9  D2                 	db	210
   258   00FEDA  D3                 	db	211
   259   00FEDB  D4                 	db	212
   260   00FEDC  D5                 	db	213
   261   00FEDD  D6                 	db	214
   262   00FEDE  D7                 	db	215
   263   00FEDF  D8                 	db	216
   264   00FEE0  D9                 	db	217
   265   00FEE1  DA                 	db	218
   266   00FEE2  DB                 	db	219
   267   00FEE3  DC                 	db	220
   268   00FEE4  DD                 	db	221
   269   00FEE5  DE                 	db	222
   270   00FEE6  DF                 	db	223
   271   00FEE7  E0                 	db	224
   272   00FEE8  E1                 	db	225
   273   00FEE9  E2                 	db	226
   274   00FEEA  E3                 	db	227
   275   00FEEB  E4                 	db	228
   276   00FEEC  E5                 	db	229
   277   00FEED  E6                 	db	230
   278   00FEEE  E7                 	db	231
   279   00FEEF  E8                 	db	232
   280   00FEF0  E9                 	db	233
   281   00FEF1  EA                 	db	234
   282   00FEF2  EB                 	db	235
   283   00FEF3  EC                 	db	236
   284   00FEF4  ED                 	db	237
   285   00FEF5  EE                 	db	238
   286   00FEF6  EF                 	db	239
   287   00FEF7  F0                 	db	240
   288   00FEF8  F1                 	db	241
   289   00FEF9  F2                 	db	242
   290   00FEFA  F3                 	db	243
   291   00FEFB  F4                 	db	244
   292   00FEFC  F5                 	db	245
   293   00FEFD  F6                 	db	246
   294   00FEFE  F7                 	db	247
   295   00FEFF  F8                 	db	248
   296   00FF00  F9                 	db	249
   297   00FF01  FA                 	db	250
   298   00FF02  FB                 	db	251
   299   00FF03  FC                 	db	252
   300   00FF04  FD                 	db	253
   301   00FF05  FE                 	db	254
   302   00FF06  FF                 	db	255
   303   00FF07                     __end_of_ExCvt:
   304                           	callstack 0
   305   00FF07                     _sdmmc_cmdtable:
   306                           	callstack 0
   307   00FF07  00                 	db	0
   308   00FF08  95                 	db	149
   309   00FF09  00                 	db	0
   310   00FF0A  00                 	db	0
   311   00FF0B  01                 	db	1
   312   00FF0C  F9                 	db	249
   313   00FF0D  00                 	db	0
   314   00FF0E  00                 	db	0
   315   00FF0F  08                 	db	8
   316   00FF10  87                 	db	135
   317   00FF11  04                 	db	4
   318   00FF12  00                 	db	0
   319   00FF13  09                 	db	9
   320   00FF14  AF                 	db	175
   321   00FF15  00                 	db	0
   322   00FF16  01                 	db	1
   323   00FF17  0A                 	db	10
   324   00FF18  1B                 	db	27
   325   00FF19  00                 	db	0
   326   00FF1A  01                 	db	1
   327   00FF1B  0C                 	db	12
   328   00FF1C  C3                 	db	195
   329   00FF1D  01                 	db	1
   330   00FF1E  00                 	db	0
   331   00FF1F  0D                 	db	13
   332   00FF20  AF                 	db	175
   333   00FF21  02                 	db	2
   334   00FF22  00                 	db	0
   335   00FF23  10                 	db	16
   336   00FF24  FF                 	db	255
   337   00FF25  00                 	db	0
   338   00FF26  00                 	db	0
   339   00FF27  11                 	db	17
   340   00FF28  FF                 	db	255
   341   00FF29  00                 	db	0
   342   00FF2A  01                 	db	1
   343   00FF2B  12                 	db	18
   344   00FF2C  FF                 	db	255
   345   00FF2D  00                 	db	0
   346   00FF2E  01                 	db	1
   347   00FF2F  18                 	db	24
   348   00FF30  FF                 	db	255
   349   00FF31  00                 	db	0
   350   00FF32  01                 	db	1
   351   00FF33  19                 	db	25
   352   00FF34  FF                 	db	255
   353   00FF35  00                 	db	0
   354   00FF36  01                 	db	1
   355   00FF37  20                 	db	32
   356   00FF38  FF                 	db	255
   357   00FF39  00                 	db	0
   358   00FF3A  00                 	db	0
   359   00FF3B  21                 	db	33
   360   00FF3C  FF                 	db	255
   361   00FF3D  00                 	db	0
   362   00FF3E  00                 	db	0
   363   00FF3F  26                 	db	38
   364   00FF40  DF                 	db	223
   365   00FF41  01                 	db	1
   366   00FF42  00                 	db	0
   367   00FF43  37                 	db	55
   368   00FF44  73                 	db	115
   369   00FF45  00                 	db	0
   370   00FF46  00                 	db	0
   371   00FF47  3A                 	db	58
   372   00FF48  25                 	db	37
   373   00FF49  04                 	db	4
   374   00FF4A  00                 	db	0
   375   00FF4B  3B                 	db	59
   376   00FF4C  25                 	db	37
   377   00FF4D  00                 	db	0
   378   00FF4E  00                 	db	0
   379   00FF4F  29                 	db	41
   380   00FF50  FF                 	db	255
   381   00FF51  04                 	db	4
   382   00FF52  00                 	db	0
   383   00FF53  17                 	db	23
   384   00FF54  FF                 	db	255
   385   00FF55  00                 	db	0
   386   00FF56  00                 	db	0
   387   00FF57                     __end_of_sdmmc_cmdtable:
   388                           	callstack 0
   389   00FF57                     _spiMaster:
   390                           	callstack 0
   391   00FF57  14                 	db	low _SPI1_Close
   392   00FF58  7C                 	db	high _SPI1_Close
   393   00FF59  28                 	db	low _SDFAST_open
   394   00FF5A  7C                 	db	high _SDFAST_open
   395   00FF5B  D6                 	db	low _SPI1_ExchangeByte
   396   00FF5C  7C                 	db	high _SPI1_ExchangeByte
   397   00FF5D  4A                 	db	low _SPI1_ExchangeBlock
   398   00FF5E  7F                 	db	high _SPI1_ExchangeBlock
   399   00FF5F  00                 	db	0
   400   00FF60  00                 	db	0
   401   00FF61  00                 	db	0
   402   00FF62  00                 	db	0
   403   00FF63  00                 	db	0
   404   00FF64  00                 	db	0
   405   00FF65  00                 	db	0
   406   00FF66  00                 	db	0
   407   00FF67  00                 	db	0
   408   00FF68  00                 	db	0
   409   00FF69  00                 	db	0
   410   00FF6A  00                 	db	0
   411   00FF6B  14                 	db	low _SPI1_Close
   412   00FF6C  7C                 	db	high _SPI1_Close
   413   00FF6D  20                 	db	low _SDSLOW_open
   414   00FF6E  7C                 	db	high _SDSLOW_open
   415   00FF6F  D6                 	db	low _SPI1_ExchangeByte
   416   00FF70  7C                 	db	high _SPI1_ExchangeByte
   417   00FF71  4A                 	db	low _SPI1_ExchangeBlock
   418   00FF72  7F                 	db	high _SPI1_ExchangeBlock
   419   00FF73  00                 	db	0
   420   00FF74  00                 	db	0
   421   00FF75  00                 	db	0
   422   00FF76  00                 	db	0
   423   00FF77  00                 	db	0
   424   00FF78  00                 	db	0
   425   00FF79  00                 	db	0
   426   00FF7A  00                 	db	0
   427   00FF7B  00                 	db	0
   428   00FF7C  00                 	db	0
   429   00FF7D  00                 	db	0
   430   00FF7E  00                 	db	0
   431   00FF7F                     __end_of_spiMaster:
   432                           	callstack 0
   433   00FF7F                     _spi1_configuration:
   434                           	callstack 0
   435   00FF7F  1A                 	db	26
   436   00FF80  00                 	db	0
   437   00FF81  01                 	db	1
   438   00FF82  00                 	db	0
   439   00FF83  1A                 	db	26
   440   00FF84  00                 	db	0
   441   00FF85  04                 	db	4
   442   00FF86  00                 	db	0
   443   00FF87  00                 	db	0
   444   00FF88  40                 	db	64
   445   00FF89  01                 	db	1
   446   00FF8A  00                 	db	0
   447   00FF8B                     __end_of_spi1_configuration:
   448                           	callstack 0
   449   000000                     _ANSELA	set	3896
   450   000000                     _ANSELB	set	3897
   451   000000                     _ANSELC	set	3898
   452   000000                     _ANSELD	set	3899
   453   000000                     _TRISD	set	3989
   454   000000                     _TRISC	set	3988
   455   000000                     _TRISB	set	3987
   456   000000                     _LATB	set	3978
   457   000000                     _LATA	set	3977
   458   000000                     _LATD	set	3980
   459   000000                     _LATE	set	3981
   460   000000                     _LATCbits	set	3979
   461   000000                     _SSP1CON1bits	set	4038
   462   000000                     _TRISCbits	set	3988
   463   000000                     _LATC	set	3979
   464   000000                     _TRISA	set	3986
   465   000000                     _TRISE	set	3990
   466   000000                     _OSCTUNE	set	3995
   467   000000                     _PIR1bits	set	3998
   468   000000                     _SSP1CON2	set	4037
   469   000000                     _SSP1CON1	set	4038
   470   000000                     _SSP1STAT	set	4039
   471   000000                     _INTCON2bits	set	4081
   472   000000                     _WPUB	set	3937
   473   000000                     _ANSELE	set	3900
   474   000000                     _INTCONbits	set	4082
   475   000000                     _OSCCON2	set	4050
   476   000000                     _OSCCON	set	4051
   477   000000                     _SSP1BUF	set	4041
   478   000000                     _SSP1ADD	set	4040
   479   00FF8B                     STR_4:
   480   00FF8B  22                 	db	34
   481   00FF8C  2A                 	db	42
   482   00FF8D  2B                 	db	43
   483   00FF8E  2C                 	db	44
   484   00FF8F  3A                 	db	58	;':'
   485   00FF90  3B                 	db	59	;';'
   486   00FF91  3C                 	db	60	;'<'
   487   00FF92  3D                 	db	61	;'='
   488   00FF93  3E                 	db	62	;'>'
   489   00FF94  3F                 	db	63	;'?'
   490   00FF95  5B                 	db	91	;'['
   491   00FF96  5D                 	db	93	;']'
   492   00FF97  7C                 	db	124
   493   00FF98  7F                 	db	127
   494   00FF99  00                 	db	0
   495   00FF9A                     STR_11:
   496   00FF9A  61                 	db	97	;'a'
   497   00FF9B  6C                 	db	108	;'l'
   498   00FF9C  74                 	db	116	;'t'
   499   00FF9D  69                 	db	105	;'i'
   500   00FF9E  74                 	db	116	;'t'
   501   00FF9F  75                 	db	117	;'u'
   502   00FFA0  64                 	db	100	;'d'
   503   00FFA1  65                 	db	101	;'e'
   504   00FFA2  2E                 	db	46
   505   00FFA3  74                 	db	116	;'t'
   506   00FFA4  78                 	db	120	;'x'
   507   00FFA5  74                 	db	116	;'t'
   508   00FFA6  00                 	db	0
   509   00FFA7                     STR_13:
   510   00FFA7  76                 	db	118	;'v'
   511   00FFA8  65                 	db	101	;'e'
   512   00FFA9  6C                 	db	108	;'l'
   513   00FFAA  6F                 	db	111	;'o'
   514   00FFAB  63                 	db	99	;'c'
   515   00FFAC  69                 	db	105	;'i'
   516   00FFAD  74                 	db	116	;'t'
   517   00FFAE  79                 	db	121	;'y'
   518   00FFAF  2E                 	db	46
   519   00FFB0  74                 	db	116	;'t'
   520   00FFB1  78                 	db	120	;'x'
   521   00FFB2  74                 	db	116	;'t'
   522   00FFB3  00                 	db	0
   523   00FFB4                     STR_12:
   524   00FFB4  68                 	db	104	;'h'
   525   00FFB5  75                 	db	117	;'u'
   526   00FFB6  6D                 	db	109	;'m'
   527   00FFB7  69                 	db	105	;'i'
   528   00FFB8  64                 	db	100	;'d'
   529   00FFB9  69                 	db	105	;'i'
   530   00FFBA  74                 	db	116	;'t'
   531   00FFBB  79                 	db	121	;'y'
   532   00FFBC  2E                 	db	46
   533   00FFBD  74                 	db	116	;'t'
   534   00FFBE  78                 	db	120	;'x'
   535   00FFBF  74                 	db	116	;'t'
   536   00FFC0  00                 	db	0
   537   00FFC1                     STR_16:
   538   00FFC1  37                 	db	55	;'7'
   539   00FFC2  37                 	db	55	;'7'
   540   00FFC3  20                 	db	32
   541   00FFC4  64                 	db	100	;'d'
   542   00FFC5  65                 	db	101	;'e'
   543   00FFC6  67                 	db	103	;'g'
   544   00FFC7  72                 	db	114	;'r'
   545   00FFC8  65                 	db	101	;'e'
   546   00FFC9  65                 	db	101	;'e'
   547   00FFCA  73                 	db	115	;'s'
   548   00FFCB  00                 	db	0
   549   00FFCC  48                 	db	72	;'H'
   550   00FFCD  45                 	db	69	;'E'
   551   00FFCE  4C                 	db	76	;'L'
   552   00FFCF  4C                 	db	76	;'L'
   553   00FFD0  4F                 	db	79	;'O'
   554   00FFD1  2E                 	db	46
   555   00FFD2  54                 	db	84	;'T'
   556   00FFD3  58                 	db	88	;'X'
   557   00FFD4  54                 	db	84	;'T'
   558   00FFD5  00                 	db	0
   559   00FFD6                     STR_10:
   560   00FFD6  74                 	db	116	;'t'
   561   00FFD7  65                 	db	101	;'e'
   562   00FFD8  6D                 	db	109	;'m'
   563   00FFD9  70                 	db	112	;'p'
   564   00FFDA  2E                 	db	46
   565   00FFDB  74                 	db	116	;'t'
   566   00FFDC  78                 	db	120	;'x'
   567   00FFDD  74                 	db	116	;'t'
   568   00FFDE  00                 	db	0
   569   00FFDF                     STR_20:
   570   00FFDF  31                 	db	49	;'1'
   571   00FFE0  30                 	db	48	;'0'
   572   00FFE1  6D                 	db	109	;'m'
   573   00FFE2  2F                 	db	47
   574   00FFE3  73                 	db	115	;'s'
   575   00FFE4  00                 	db	0
   576   00FFE5                     STR_8:
   577   00FFE5  46                 	db	70	;'F'
   578   00FFE6  41                 	db	65	;'A'
   579   00FFE7  54                 	db	84	;'T'
   580   00FFE8  33                 	db	51	;'3'
   581   00FFE9  32                 	db	50	;'2'
   582   00FFEA  00                 	db	0
   583   00FFEB                     STR_18:
   584   00FFEB  32                 	db	50	;'2'
   585   00FFEC  30                 	db	48	;'0'
   586   00FFED  30                 	db	48	;'0'
   587   00FFEE  6D                 	db	109	;'m'
   588   00FFEF  00                 	db	0
   589   00FFF0                     STR_19:
   590   00FFF0  39                 	db	57	;'9'
   591   00FFF1  35                 	db	53	;'5'
   592   00FFF2  25                 	db	37
   593   00FFF3  00                 	db	0
   594   00FFF4                     STR_6:
   595   00FFF4  46                 	db	70	;'F'
   596   00FFF5  41                 	db	65	;'A'
   597   00FFF6  54                 	db	84	;'T'
   598   00FFF7  00                 	db	0
   599   00FFF8                     STR_14:
   600   00FFF8  0D                 	db	13
   601   00FFF9  0A                 	db	10
   602   00FFFA  00                 	db	0
   603   00FFFB                     STR_1:
   604   00FFFB  30                 	db	48	;'0'
   605   00FFFC  3A                 	db	58	;':'
   606   00FFFD  00                 	db	0
   607   00FFFE  00                 	db	0	; dummy byte at the end
   608   000000                     
   609                           ; #config settings
   610                           
   611                           	psect	cinit
   612   007E18                     __pcinit:
   613                           	callstack 0
   614   007E18                     start_initialization:
   615                           	callstack 0
   616   007E18                     __initialization:
   617                           	callstack 0
   618                           
   619                           ; Initialize objects allocated to BANK1 (22 bytes)
   620                           ; load TBLPTR registers with __pidataBANK1
   621   007E18  0EA8               	movlw	low __pidataBANK1
   622   007E1A  6EF6               	movwf	tblptrl,c
   623   007E1C  0E7C               	movlw	high __pidataBANK1
   624   007E1E  6EF7               	movwf	tblptrh,c
   625   007E20  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   626   007E22  6EF8               	movwf	tblptru,c
   627   007E24  EE01  F0CA         	lfsr	0,__pdataBANK1
   628   007E28  EE10 F016          	lfsr	1,22
   629   007E2C                     copy_data0:
   630   007E2C  0009               	tblrd		*+
   631   007E2E  CFF5 FFEE          	movff	tablat,postinc0
   632   007E32  50E5               	movf	postdec1,w,c
   633   007E34  50E1               	movf	fsr1l,w,c
   634   007E36  E1FA               	bnz	copy_data0
   635                           
   636                           ; Clear objects allocated to BIGRAM (2218 bytes)
   637   007E38  EE06  F08E         	lfsr	0,__pbssBIGRAM
   638   007E3C  EE18 F0AA          	lfsr	1,2218
   639   007E40                     clear_0:
   640   007E40  6AEE               	clrf	postinc0,c
   641   007E42  50E5               	movf	postdec1,w,c
   642   007E44  50E1               	movf	fsr1l,w,c
   643   007E46  E1FC               	bnz	clear_0
   644   007E48  50E2               	movf	fsr1h,w,c
   645   007E4A  E1FA               	bnz	clear_0
   646                           
   647                           ; Clear objects allocated to BANK1 (127 bytes)
   648   007E4C  EE01  F000         	lfsr	0,__pbssBANK1
   649   007E50  0E7F               	movlw	127
   650   007E52                     clear_1:
   651   007E52  6AEE               	clrf	postinc0,c
   652   007E54  06E8               	decf	wreg,f,c
   653   007E56  E1FD               	bnz	clear_1
   654   007E58                     end_of_initialization:
   655                           	callstack 0
   656   007E58                     __end_of__initialization:
   657                           	callstack 0
   658   007E58  0100               	movlb	0
   659   007E5A  EFEA  F042         	goto	_main	;jump to C main() function
   660                           
   661                           	psect	bssBANK1
   662   000100                     __pbssBANK1:
   663                           	callstack 0
   664   000100                     _ioInfo:
   665                           	callstack 0
   666   000100                     	ds	13
   667   00010D                     malloc@lock:
   668                           	callstack 0
   669   00010D                     	ds	4
   670   000111                     SD_SPI_AsyncWriteTasks@WriteTimeout:
   671                           	callstack 0
   672   000111                     	ds	4
   673   000115                     SD_SPI_AsyncReadTasks@longTimeoutCounter:
   674                           	callstack 0
   675   000115                     	ds	4
   676   000119                     ___freelist:
   677                           	callstack 0
   678   000119                     	ds	2
   679   00011B                     _brkp:
   680                           	callstack 0
   681   00011B                     	ds	2
   682   00011D                     _errno:
   683                           	callstack 0
   684   00011D                     	ds	2
   685   00011F                     malloc@end:
   686                           	callstack 0
   687   00011F                     	ds	2
   688   000121                     malloc@cur:
   689                           	callstack 0
   690   000121                     	ds	2
   691   000123                     SD_SPI_AsyncWriteTasks@blockCounter:
   692                           	callstack 0
   693   000123                     	ds	2
   694   000125                     SD_SPI_AsyncReadTasks@blockCounter:
   695                           	callstack 0
   696   000125                     	ds	2
   697   000127                     _Fsid:
   698                           	callstack 0
   699   000127                     	ds	2
   700   000129                     _FatFs@ff$F442:
   701                           	callstack 0
   702   000129                     	ds	2
   703   00012B                     SD_SPI_AsyncWriteTasks@command:
   704                           	callstack 0
   705   00012B                     	ds	1
   706   00012C                     SD_SPI_AsyncWriteTasks@data_byte:
   707                           	callstack 0
   708   00012C                     	ds	1
   709   00012D                     SD_SPI_AsyncReadTasks@SingleBlockRead:
   710                           	callstack 0
   711   00012D                     	ds	1
   712   00012E                     _CurrVol:
   713                           	callstack 0
   714   00012E                     	ds	1
   715   00012F                     _vel_data:
   716                           	callstack 0
   717   00012F                     	ds	20
   718   000143                     _hum_data:
   719                           	callstack 0
   720   000143                     	ds	20
   721   000157                     _alt_data:
   722                           	callstack 0
   723   000157                     	ds	20
   724   00016B                     _temp_data:
   725                           	callstack 0
   726   00016B                     	ds	20
   727                           
   728                           	psect	dataBANK1
   729   0001CA                     __pdataBANK1:
   730                           	callstack 0
   731   0001CA                     FatFsDemo_Tasks@F259:
   732                           	callstack 0
   733   0001CA                     	ds	13
   734   0001D7                     _mediaInformation:
   735                           	callstack 0
   736   0001D7                     	ds	9
   737                           
   738                           	psect	bssBIGRAM
   739   00068E                     __pbssBIGRAM:
   740                           	callstack 0
   741   00068E                     _FatFs:
   742                           	callstack 0
   743   00068E                     	ds	563
   744   0008C1                     _drive:
   745                           	callstack 0
   746   0008C1                     	ds	563
   747   000AF4                     _Fil:
   748                           	callstack 0
   749   000AF4                     	ds	546
   750   000D16                     _file:
   751                           	callstack 0
   752   000D16                     	ds	546
   753                           
   754                           	psect	cstackBANK1
   755   00017F                     __pcstackBANK1:
   756                           	callstack 0
   757   00017F                     f_open@dw:
   758                           	callstack 0
   759                           
   760                           ; 4 bytes @ 0x0
   761   00017F                     	ds	4
   762   000183                     f_open@sc:
   763                           	callstack 0
   764                           
   765                           ; 4 bytes @ 0x4
   766   000183                     	ds	4
   767   000187                     f_open@bcs:
   768                           	callstack 0
   769                           
   770                           ; 4 bytes @ 0x8
   771   000187                     	ds	4
   772   00018B                     f_open@cl:
   773                           	callstack 0
   774                           
   775                           ; 4 bytes @ 0xC
   776   00018B                     	ds	4
   777   00018F                     f_open@ofs:
   778                           	callstack 0
   779                           
   780                           ; 4 bytes @ 0x10
   781   00018F                     	ds	4
   782   000193                     f_open@clst:
   783                           	callstack 0
   784                           
   785                           ; 4 bytes @ 0x14
   786   000193                     	ds	4
   787   000197                     f_open@fs:
   788                           	callstack 0
   789                           
   790                           ; 2 bytes @ 0x18
   791   000197                     	ds	2
   792   000199                     f_open@res:
   793                           	callstack 0
   794                           
   795                           ; 1 bytes @ 0x1A
   796   000199                     	ds	1
   797   00019A                     f_open@dj:
   798                           	callstack 0
   799                           
   800                           ; 40 bytes @ 0x1B
   801   00019A                     	ds	40
   802   0001C2                     main@temp_file:
   803                           	callstack 0
   804                           
   805                           ; 2 bytes @ 0x43
   806   0001C2                     	ds	2
   807   0001C4                     main@alt_file:
   808                           	callstack 0
   809                           
   810                           ; 2 bytes @ 0x45
   811   0001C4                     	ds	2
   812   0001C6                     main@hum_file:
   813                           	callstack 0
   814                           
   815                           ; 2 bytes @ 0x47
   816   0001C6                     	ds	2
   817   0001C8                     main@vel_file:
   818                           	callstack 0
   819                           
   820                           ; 2 bytes @ 0x49
   821   0001C8                     	ds	2
   822                           
   823                           	psect	cstackBANK0
   824   000060                     __pcstackBANK0:
   825                           	callstack 0
   826   000060                     ??_sync_window:
   827                           
   828                           ; 1 bytes @ 0x0
   829   000060                     	ds	16
   830   000070                     ??_sync_fs:
   831   000070                     move_window@fs:
   832                           	callstack 0
   833   000070                     dir_clear@fs:
   834                           	callstack 0
   835                           
   836                           ; 2 bytes @ 0x10
   837   000070                     	ds	2
   838   000072                     move_window@sector:
   839                           	callstack 0
   840   000072                     dir_clear@clst:
   841                           	callstack 0
   842                           
   843                           ; 4 bytes @ 0x12
   844   000072                     	ds	4
   845   000076                     move_window@res:
   846                           	callstack 0
   847   000076                     dir_clear@ibuf:
   848                           	callstack 0
   849                           
   850                           ; 2 bytes @ 0x16
   851   000076                     	ds	1
   852   000077                     ?_get_fat:
   853                           	callstack 0
   854   000077                     get_fat@obj:
   855                           	callstack 0
   856   000077                     put_fat@fs:
   857                           	callstack 0
   858   000077                     check_fs@fs:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0x17
   862   000077                     	ds	1
   863   000078                     f_sync@fp:
   864                           	callstack 0
   865   000078                     dir_clear@sect:
   866                           	callstack 0
   867                           
   868                           ; 4 bytes @ 0x18
   869   000078                     	ds	1
   870   000079                     get_fat@clst:
   871                           	callstack 0
   872   000079                     put_fat@clst:
   873                           	callstack 0
   874   000079                     check_fs@sect:
   875                           	callstack 0
   876                           
   877                           ; 4 bytes @ 0x19
   878   000079                     	ds	1
   879   00007A                     f_sync@res:
   880                           	callstack 0
   881                           
   882                           ; 1 bytes @ 0x1A
   883   00007A                     	ds	1
   884   00007B                     f_sync@dir:
   885                           	callstack 0
   886                           
   887                           ; 2 bytes @ 0x1B
   888   00007B                     	ds	1
   889   00007C                     dir_clear@szb:
   890                           	callstack 0
   891                           
   892                           ; 2 bytes @ 0x1C
   893   00007C                     	ds	1
   894   00007D                     ??_get_fat:
   895   00007D                     f_sync@fs:
   896                           	callstack 0
   897   00007D                     put_fat@val:
   898                           	callstack 0
   899                           
   900                           ; 4 bytes @ 0x1D
   901   00007D                     	ds	1
   902   00007E                     dir_clear@n:
   903                           	callstack 0
   904   00007E                     find_volume@path:
   905                           	callstack 0
   906                           
   907                           ; 2 bytes @ 0x1E
   908   00007E                     	ds	1
   909   00007F                     f_close@fp:
   910                           	callstack 0
   911                           
   912                           ; 2 bytes @ 0x1F
   913   00007F                     	ds	1
   914   000080                     find_volume@rfs:
   915                           	callstack 0
   916                           
   917                           ; 2 bytes @ 0x20
   918   000080                     	ds	1
   919   000081                     ??_put_fat:
   920   000081                     f_close@fs:
   921                           	callstack 0
   922                           
   923                           ; 2 bytes @ 0x21
   924   000081                     	ds	1
   925   000082                     find_volume@mode:
   926                           	callstack 0
   927                           
   928                           ; 1 bytes @ 0x22
   929   000082                     	ds	1
   930   000083                     ??_find_volume:
   931   000083                     f_close@res:
   932                           	callstack 0
   933                           
   934                           ; 1 bytes @ 0x23
   935   000083                     	ds	2
   936   000085                     _get_fat$612:
   937                           	callstack 0
   938                           
   939                           ; 2 bytes @ 0x25
   940   000085                     	ds	2
   941   000087                     get_fat@val:
   942                           	callstack 0
   943                           
   944                           ; 4 bytes @ 0x27
   945   000087                     	ds	4
   946   00008B                     get_fat@wc:
   947                           	callstack 0
   948   00008B                     find_volume@br:
   949                           	callstack 0
   950                           
   951                           ; 16 bytes @ 0x2B
   952   00008B                     	ds	2
   953   00008D                     get_fat@bc:
   954                           	callstack 0
   955                           
   956                           ; 2 bytes @ 0x2D
   957   00008D                     	ds	2
   958   00008F                     get_fat@fs:
   959                           	callstack 0
   960   00008F                     _put_fat$641:
   961                           	callstack 0
   962                           
   963                           ; 2 bytes @ 0x2F
   964   00008F                     	ds	2
   965   000091                     _put_fat$642:
   966                           	callstack 0
   967   000091                     dir_sdi@dp:
   968                           	callstack 0
   969                           
   970                           ; 2 bytes @ 0x31
   971   000091                     	ds	2
   972   000093                     put_fat@p:
   973                           	callstack 0
   974   000093                     dir_sdi@ofs:
   975                           	callstack 0
   976                           
   977                           ; 4 bytes @ 0x33
   978   000093                     	ds	2
   979   000095                     put_fat@bc:
   980                           	callstack 0
   981                           
   982                           ; 2 bytes @ 0x35
   983   000095                     	ds	2
   984   000097                     ??_dir_sdi:
   985   000097                     put_fat@res:
   986                           	callstack 0
   987                           
   988                           ; 1 bytes @ 0x37
   989   000097                     	ds	1
   990   000098                     ?_create_chain:
   991                           	callstack 0
   992   000098                     remove_chain@obj:
   993                           	callstack 0
   994   000098                     create_chain@obj:
   995                           	callstack 0
   996                           
   997                           ; 2 bytes @ 0x38
   998   000098                     	ds	2
   999   00009A                     remove_chain@clst:
  1000                           	callstack 0
  1001   00009A                     create_chain@clst:
  1002                           	callstack 0
  1003                           
  1004                           ; 4 bytes @ 0x3A
  1005   00009A                     	ds	1
  1006   00009B                     _find_volume$1230:
  1007                           	callstack 0
  1008                           
  1009                           ; 4 bytes @ 0x3B
  1010   00009B                     	ds	3
  1011   00009E                     ??_create_chain:
  1012   00009E                     remove_chain@pclst:
  1013                           	callstack 0
  1014                           
  1015                           ; 4 bytes @ 0x3E
  1016   00009E                     	ds	1
  1017   00009F                     _find_volume$1231:
  1018                           	callstack 0
  1019                           
  1020                           ; 2 bytes @ 0x3F
  1021   00009F                     	ds	2
  1022   0000A1                     dir_sdi@csz:
  1023                           	callstack 0
  1024   0000A1                     find_volume@szbfat:
  1025                           	callstack 0
  1026                           
  1027                           ; 4 bytes @ 0x41
  1028   0000A1                     	ds	1
  1029   0000A2                     ??_remove_chain:
  1030                           
  1031                           ; 1 bytes @ 0x42
  1032   0000A2                     	ds	3
  1033   0000A5                     find_volume@pt:
  1034                           	callstack 0
  1035   0000A5                     dir_sdi@clst:
  1036                           	callstack 0
  1037                           
  1038                           ; 4 bytes @ 0x45
  1039   0000A5                     	ds	1
  1040   0000A6                     create_chain@res:
  1041                           	callstack 0
  1042                           
  1043                           ; 1 bytes @ 0x46
  1044   0000A6                     	ds	1
  1045   0000A7                     create_chain@scl:
  1046                           	callstack 0
  1047   0000A7                     find_volume@sysect:
  1048                           	callstack 0
  1049                           
  1050                           ; 4 bytes @ 0x47
  1051   0000A7                     	ds	2
  1052   0000A9                     dir_sdi@fs:
  1053                           	callstack 0
  1054                           
  1055                           ; 2 bytes @ 0x49
  1056   0000A9                     	ds	1
  1057   0000AA                     remove_chain@nxt:
  1058                           	callstack 0
  1059                           
  1060                           ; 4 bytes @ 0x4A
  1061   0000AA                     	ds	1
  1062   0000AB                     find_volume@vol:
  1063                           	callstack 0
  1064   0000AB                     create_chain@ncl:
  1065                           	callstack 0
  1066                           
  1067                           ; 4 bytes @ 0x4B
  1068   0000AB                     	ds	2
  1069   0000AD                     find_volume@nrsv:
  1070                           	callstack 0
  1071                           
  1072                           ; 2 bytes @ 0x4D
  1073   0000AD                     	ds	1
  1074   0000AE                     remove_chain@res:
  1075                           	callstack 0
  1076                           
  1077                           ; 1 bytes @ 0x4E
  1078   0000AE                     	ds	1
  1079   0000AF                     remove_chain@fs:
  1080                           	callstack 0
  1081   0000AF                     create_chain@fs:
  1082                           	callstack 0
  1083   0000AF                     find_volume@tsect:
  1084                           	callstack 0
  1085                           
  1086                           ; 4 bytes @ 0x4F
  1087   0000AF                     	ds	2
  1088   0000B1                     create_chain@cs:
  1089                           	callstack 0
  1090                           
  1091                           ; 4 bytes @ 0x51
  1092   0000B1                     	ds	2
  1093   0000B3                     find_volume@stat:
  1094                           	callstack 0
  1095                           
  1096                           ; 1 bytes @ 0x53
  1097   0000B3                     	ds	1
  1098   0000B4                     find_volume@nclst:
  1099                           	callstack 0
  1100                           
  1101                           ; 4 bytes @ 0x54
  1102   0000B4                     	ds	1
  1103   0000B5                     dir_next@dp:
  1104                           	callstack 0
  1105   0000B5                     f_write@fp:
  1106                           	callstack 0
  1107   0000B5                     f_lseek@fp:
  1108                           	callstack 0
  1109                           
  1110                           ; 2 bytes @ 0x55
  1111   0000B5                     	ds	2
  1112   0000B7                     dir_next@stretch:
  1113                           	callstack 0
  1114   0000B7                     f_write@buff:
  1115                           	callstack 0
  1116   0000B7                     f_lseek@ofs:
  1117                           	callstack 0
  1118                           
  1119                           ; 4 bytes @ 0x57
  1120   0000B7                     	ds	1
  1121   0000B8                     find_volume@fasize:
  1122                           	callstack 0
  1123                           
  1124                           ; 4 bytes @ 0x58
  1125   0000B8                     	ds	1
  1126   0000B9                     ??_dir_next:
  1127   0000B9                     f_write@btw:
  1128                           	callstack 0
  1129                           
  1130                           ; 2 bytes @ 0x59
  1131   0000B9                     	ds	2
  1132   0000BB                     ??_f_lseek:
  1133   0000BB                     f_write@bw:
  1134                           	callstack 0
  1135                           
  1136                           ; 2 bytes @ 0x5B
  1137   0000BB                     	ds	1
  1138   0000BC                     find_volume@bsect:
  1139                           	callstack 0
  1140                           
  1141                           ; 4 bytes @ 0x5C
  1142   0000BC                     	ds	1
  1143   0000BD                     ??_f_write:
  1144                           
  1145                           ; 1 bytes @ 0x5D
  1146   0000BD                     	ds	3
  1147   0000C0                     find_volume@i:
  1148                           	callstack 0
  1149                           
  1150                           ; 2 bytes @ 0x60
  1151   0000C0                     	ds	2
  1152   0000C2                     find_volume@fmt:
  1153                           	callstack 0
  1154                           
  1155                           ; 1 bytes @ 0x62
  1156   0000C2                     	ds	1
  1157   0000C3                     find_volume@fs:
  1158                           	callstack 0
  1159                           
  1160                           ; 2 bytes @ 0x63
  1161   0000C3                     	ds	2
  1162   0000C5                     f_mount@fs:
  1163                           	callstack 0
  1164   0000C5                     dir_next@ofs:
  1165                           	callstack 0
  1166                           
  1167                           ; 4 bytes @ 0x65
  1168   0000C5                     	ds	2
  1169   0000C7                     f_mount@path:
  1170                           	callstack 0
  1171                           
  1172                           ; 2 bytes @ 0x67
  1173   0000C7                     	ds	2
  1174   0000C9                     f_mount@opt:
  1175                           	callstack 0
  1176   0000C9                     dir_next@fs:
  1177                           	callstack 0
  1178   0000C9                     _f_write$1546:
  1179                           	callstack 0
  1180                           
  1181                           ; 4 bytes @ 0x69
  1182   0000C9                     	ds	1
  1183   0000CA                     f_mount@res:
  1184                           	callstack 0
  1185                           
  1186                           ; 1 bytes @ 0x6A
  1187   0000CA                     	ds	1
  1188   0000CB                     f_lseek@res:
  1189                           	callstack 0
  1190   0000CB                     f_mount@rp:
  1191                           	callstack 0
  1192   0000CB                     dir_next@clst:
  1193                           	callstack 0
  1194                           
  1195                           ; 4 bytes @ 0x6B
  1196   0000CB                     	ds	1
  1197   0000CC                     f_lseek@ifptr:
  1198                           	callstack 0
  1199                           
  1200                           ; 4 bytes @ 0x6C
  1201   0000CC                     	ds	1
  1202   0000CD                     f_write@res:
  1203                           	callstack 0
  1204   0000CD                     f_mount@cfs:
  1205                           	callstack 0
  1206                           
  1207                           ; 2 bytes @ 0x6D
  1208   0000CD                     	ds	1
  1209   0000CE                     f_write@wbuff:
  1210                           	callstack 0
  1211                           
  1212                           ; 2 bytes @ 0x6E
  1213   0000CE                     	ds	1
  1214   0000CF                     dir_alloc@dp:
  1215                           	callstack 0
  1216   0000CF                     dir_find@dp:
  1217                           	callstack 0
  1218   0000CF                     f_mount@vol:
  1219                           	callstack 0
  1220                           
  1221                           ; 2 bytes @ 0x6F
  1222   0000CF                     	ds	1
  1223   0000D0                     f_write@csect:
  1224                           	callstack 0
  1225   0000D0                     f_lseek@nsect:
  1226                           	callstack 0
  1227                           
  1228                           ; 4 bytes @ 0x70
  1229   0000D0                     	ds	1
  1230   0000D1                     ??_dir_find:
  1231   0000D1                     dir_alloc@nent:
  1232                           	callstack 0
  1233                           
  1234                           ; 2 bytes @ 0x71
  1235   0000D1                     	ds	1
  1236   0000D2                     f_write@cc:
  1237                           	callstack 0
  1238                           
  1239                           ; 2 bytes @ 0x72
  1240   0000D2                     	ds	1
  1241   0000D3                     ??_dir_alloc:
  1242   0000D3                     dir_find@fs:
  1243                           	callstack 0
  1244                           
  1245                           ; 2 bytes @ 0x73
  1246   0000D3                     	ds	1
  1247   0000D4                     f_write@clst:
  1248                           	callstack 0
  1249   0000D4                     f_lseek@bcs:
  1250                           	callstack 0
  1251                           
  1252                           ; 4 bytes @ 0x74
  1253   0000D4                     	ds	1
  1254   0000D5                     dir_find@c:
  1255                           	callstack 0
  1256                           
  1257                           ; 1 bytes @ 0x75
  1258   0000D5                     	ds	1
  1259   0000D6                     dir_find@res:
  1260                           	callstack 0
  1261   0000D6                     dir_alloc@fs:
  1262                           	callstack 0
  1263                           
  1264                           ; 2 bytes @ 0x76
  1265   0000D6                     	ds	1
  1266   0000D7                     follow_path@dp:
  1267                           	callstack 0
  1268                           
  1269                           ; 2 bytes @ 0x77
  1270   0000D7                     	ds	1
  1271   0000D8                     dir_alloc@n:
  1272                           	callstack 0
  1273   0000D8                     f_write@wcnt:
  1274                           	callstack 0
  1275   0000D8                     f_lseek@fs:
  1276                           	callstack 0
  1277                           
  1278                           ; 2 bytes @ 0x78
  1279   0000D8                     	ds	1
  1280   0000D9                     follow_path@path:
  1281                           	callstack 0
  1282                           
  1283                           ; 2 bytes @ 0x79
  1284   0000D9                     	ds	1
  1285   0000DA                     dir_alloc@res:
  1286                           	callstack 0
  1287   0000DA                     f_write@sect:
  1288                           	callstack 0
  1289   0000DA                     f_lseek@clst:
  1290                           	callstack 0
  1291                           
  1292                           ; 4 bytes @ 0x7A
  1293   0000DA                     	ds	1
  1294   0000DB                     ??_follow_path:
  1295   0000DB                     dir_register@dp:
  1296                           	callstack 0
  1297                           
  1298                           ; 2 bytes @ 0x7B
  1299   0000DB                     	ds	2
  1300   0000DD                     dir_register@fs:
  1301                           	callstack 0
  1302                           
  1303                           ; 2 bytes @ 0x7D
  1304   0000DD                     	ds	1
  1305   0000DE                     f_write@fs:
  1306                           	callstack 0
  1307                           
  1308                           ; 2 bytes @ 0x7E
  1309   0000DE                     	ds	1
  1310   0000DF                     dir_register@res:
  1311                           	callstack 0
  1312                           
  1313                           ; 1 bytes @ 0x7F
  1314   0000DF                     	ds	2
  1315   0000E1                     follow_path@fs:
  1316                           	callstack 0
  1317                           
  1318                           ; 2 bytes @ 0x81
  1319   0000E1                     	ds	2
  1320   0000E3                     follow_path@ns:
  1321                           	callstack 0
  1322                           
  1323                           ; 1 bytes @ 0x83
  1324   0000E3                     	ds	1
  1325   0000E4                     follow_path@res:
  1326                           	callstack 0
  1327                           
  1328                           ; 1 bytes @ 0x84
  1329   0000E4                     	ds	1
  1330   0000E5                     f_open@fp:
  1331                           	callstack 0
  1332                           
  1333                           ; 2 bytes @ 0x85
  1334   0000E5                     	ds	2
  1335   0000E7                     f_open@path:
  1336                           	callstack 0
  1337                           
  1338                           ; 2 bytes @ 0x87
  1339   0000E7                     	ds	2
  1340   0000E9                     f_open@mode:
  1341                           	callstack 0
  1342                           
  1343                           ; 1 bytes @ 0x89
  1344   0000E9                     	ds	1
  1345   0000EA                     ??_f_open:
  1346                           
  1347                           ; 1 bytes @ 0x8A
  1348   0000EA                     	ds	8
  1349   0000F2                     write_to_file@file_name:
  1350                           	callstack 0
  1351                           
  1352                           ; 2 bytes @ 0x92
  1353   0000F2                     	ds	2
  1354   0000F4                     write_to_file@data:
  1355                           	callstack 0
  1356                           
  1357                           ; 2 bytes @ 0x94
  1358   0000F4                     	ds	2
  1359   0000F6                     
  1360                           ; 1 bytes @ 0x96
  1361   0000F6                     	ds	4
  1362   0000FA                     write_to_file@data_size:
  1363                           	callstack 0
  1364                           
  1365                           ; 2 bytes @ 0x9A
  1366   0000FA                     	ds	2
  1367   0000FC                     write_to_file@bw:
  1368                           	callstack 0
  1369                           
  1370                           ; 2 bytes @ 0x9C
  1371   0000FC                     	ds	2
  1372   0000FE                     write_to_file@formatted_data:
  1373                           	callstack 0
  1374                           
  1375                           ; 2 bytes @ 0x9E
  1376   0000FE                     	ds	2
  1377                           
  1378                           	psect	cstackCOMRAM
  1379   000001                     __pcstackCOMRAM:
  1380                           	callstack 0
  1381   000001                     ??_SPI1_Open:
  1382   000001                     ??_disk_status:
  1383   000001                     ?_get_alt_data:
  1384                           	callstack 0
  1385   000001                     ?_get_hum_data:
  1386                           	callstack 0
  1387   000001                     ?_get_vel_data:
  1388                           	callstack 0
  1389   000001                     ?_strlen:
  1390                           	callstack 0
  1391   000001                     ?___simple_search_fl:
  1392                           	callstack 0
  1393   000001                     ?___expand_heap:
  1394                           	callstack 0
  1395   000001                     ?_ld_word:
  1396                           	callstack 0
  1397   000001                     ?_mem_cmp:
  1398                           	callstack 0
  1399   000001                     ?_chk_chr:
  1400                           	callstack 0
  1401   000001                     ?_dbc_1st:
  1402                           	callstack 0
  1403   000001                     ?_dbc_2nd:
  1404                           	callstack 0
  1405   000001                     ?_get_ldnumber:
  1406                           	callstack 0
  1407   000001                     ?_ld_dword:
  1408                           	callstack 0
  1409   000001                     ?___lmul:
  1410                           	callstack 0
  1411   000001                     ?___lldiv:
  1412                           	callstack 0
  1413   000001                     disk_ioctl@cmd:
  1414                           	callstack 0
  1415   000001                     SPI1_ExchangeByte@data:
  1416                           	callstack 0
  1417   000001                     ld_word@ptr:
  1418                           	callstack 0
  1419   000001                     ld_dword@ptr:
  1420                           	callstack 0
  1421   000001                     st_word@ptr:
  1422                           	callstack 0
  1423   000001                     st_dword@ptr:
  1424                           	callstack 0
  1425   000001                     mem_cpy@dst:
  1426                           	callstack 0
  1427   000001                     mem_set@dst:
  1428                           	callstack 0
  1429   000001                     mem_cmp@dst:
  1430                           	callstack 0
  1431   000001                     chk_chr@str:
  1432                           	callstack 0
  1433   000001                     get_ldnumber@path:
  1434                           	callstack 0
  1435   000001                     SPI1_ExchangeBlock@block:
  1436                           	callstack 0
  1437   000001                     get_alt_data@alt_string:
  1438                           	callstack 0
  1439   000001                     get_hum_data@hum_string:
  1440                           	callstack 0
  1441   000001                     get_vel_data@vel_string:
  1442                           	callstack 0
  1443   000001                     string_copy@dest:
  1444                           	callstack 0
  1445   000001                     ___expand_heap@pn:
  1446                           	callstack 0
  1447   000001                     ___simple_search_fl@n:
  1448                           	callstack 0
  1449   000001                     memcpy@d1:
  1450                           	callstack 0
  1451   000001                     memset@dest:
  1452                           	callstack 0
  1453   000001                     strlen@s:
  1454                           	callstack 0
  1455   000001                     ___lmul@multiplier:
  1456                           	callstack 0
  1457   000001                     ___lldiv@dividend:
  1458                           	callstack 0
  1459                           
  1460                           ; 4 bytes @ 0x0
  1461   000001                     	ds	1
  1462   000002                     ??_SD_SPI_DelayMilliseconds:
  1463   000002                     SPI1_Open@spi1UniqueConfiguration:
  1464                           	callstack 0
  1465   000002                     disk_ioctl@buff:
  1466                           	callstack 0
  1467                           
  1468                           ; 2 bytes @ 0x1
  1469   000002                     	ds	1
  1470   000003                     ??___simple_search_fl:
  1471   000003                     ??___expand_heap:
  1472   000003                     ??_ld_word:
  1473   000003                     ??_get_ldnumber:
  1474   000003                     disk_status@pdrv:
  1475                           	callstack 0
  1476   000003                     dbc_1st@c:
  1477                           	callstack 0
  1478   000003                     dbc_2nd@c:
  1479                           	callstack 0
  1480   000003                     st_word@val:
  1481                           	callstack 0
  1482   000003                     mem_cpy@src:
  1483                           	callstack 0
  1484   000003                     mem_set@val:
  1485                           	callstack 0
  1486   000003                     mem_cmp@src:
  1487                           	callstack 0
  1488   000003                     chk_chr@chr:
  1489                           	callstack 0
  1490   000003                     SPI1_ExchangeBlock@blockSize:
  1491                           	callstack 0
  1492   000003                     string_copy@source:
  1493                           	callstack 0
  1494   000003                     memcpy@s1:
  1495                           	callstack 0
  1496   000003                     memset@c:
  1497                           	callstack 0
  1498   000003                     strlen@a:
  1499                           	callstack 0
  1500   000003                     st_dword@val:
  1501                           	callstack 0
  1502                           
  1503                           ; 4 bytes @ 0x2
  1504   000003                     	ds	1
  1505   000004                     ??_disk_ioctl:
  1506   000004                     disk_status@stat:
  1507                           	callstack 0
  1508   000004                     SD_SPI_DelayMilliseconds@timeout:
  1509                           	callstack 0
  1510                           
  1511                           ; 2 bytes @ 0x3
  1512   000004                     	ds	1
  1513   000005                     ??_string_copy:
  1514   000005                     ??_ld_dword:
  1515   000005                     ??_chk_chr:
  1516   000005                     mem_cpy@cnt:
  1517                           	callstack 0
  1518   000005                     mem_set@cnt:
  1519                           	callstack 0
  1520   000005                     mem_cmp@cnt:
  1521                           	callstack 0
  1522   000005                     st_clust@fs:
  1523                           	callstack 0
  1524   000005                     get_ldnumber@i:
  1525                           	callstack 0
  1526   000005                     validate@obj:
  1527                           	callstack 0
  1528   000005                     SPI1_ExchangeBlock@data:
  1529                           	callstack 0
  1530   000005                     append@result:
  1531                           	callstack 0
  1532   000005                     ___expand_heap@n:
  1533                           	callstack 0
  1534   000005                     memcpy@n:
  1535                           	callstack 0
  1536   000005                     memset@n:
  1537                           	callstack 0
  1538   000005                     ___lmul@multiplicand:
  1539                           	callstack 0
  1540   000005                     ___lldiv@divisor:
  1541                           	callstack 0
  1542                           
  1543                           ; 4 bytes @ 0x4
  1544   000005                     	ds	1
  1545   000006                     disk_ioctl@pdrv:
  1546                           	callstack 0
  1547   000006                     SD_SPI_DelayMilliseconds@milliseconds:
  1548                           	callstack 0
  1549   000006                     ld_word@rv:
  1550                           	callstack 0
  1551                           
  1552                           ; 2 bytes @ 0x5
  1553   000006                     	ds	1
  1554   000007                     ??_memset:
  1555   000007                     ??_mem_cmp:
  1556   000007                     mem_cpy@d:
  1557                           	callstack 0
  1558   000007                     mem_set@d:
  1559                           	callstack 0
  1560   000007                     st_clust@dir:
  1561                           	callstack 0
  1562   000007                     get_ldnumber@tt:
  1563                           	callstack 0
  1564   000007                     validate@rfs:
  1565                           	callstack 0
  1566   000007                     append@dest:
  1567                           	callstack 0
  1568   000007                     ___expand_heap@new_brkp:
  1569                           	callstack 0
  1570   000007                     ___simple_search_fl@remaining_size:
  1571                           	callstack 0
  1572   000007                     memcpy@d:
  1573                           	callstack 0
  1574                           
  1575                           ; 2 bytes @ 0x6
  1576   000007                     	ds	1
  1577   000008                     ?_ld_clust:
  1578                           	callstack 0
  1579   000008                     ld_clust@fs:
  1580                           	callstack 0
  1581                           
  1582                           ; 2 bytes @ 0x7
  1583   000008                     	ds	1
  1584   000009                     ??_validate:
  1585   000009                     get_ldnumber@tc:
  1586                           	callstack 0
  1587   000009                     mem_cpy@s:
  1588                           	callstack 0
  1589   000009                     mem_cmp@d:
  1590                           	callstack 0
  1591   000009                     create_name@dp:
  1592                           	callstack 0
  1593   000009                     append@source:
  1594                           	callstack 0
  1595   000009                     ___simple_search_fl@best_last:
  1596                           	callstack 0
  1597   000009                     memcpy@s:
  1598                           	callstack 0
  1599   000009                     memset@k:
  1600                           	callstack 0
  1601   000009                     st_clust@cl:
  1602                           	callstack 0
  1603   000009                     ___lmul@product:
  1604                           	callstack 0
  1605   000009                     ___lldiv@quotient:
  1606                           	callstack 0
  1607                           
  1608                           ; 4 bytes @ 0x8
  1609   000009                     	ds	1
  1610   00000A                     ld_clust@dir:
  1611                           	callstack 0
  1612   00000A                     get_ldnumber@vol:
  1613                           	callstack 0
  1614   00000A                     string_copy@counter:
  1615                           	callstack 0
  1616   00000A                     ld_dword@rv:
  1617                           	callstack 0
  1618                           
  1619                           ; 4 bytes @ 0x9
  1620   00000A                     	ds	1
  1621   00000B                     ??_append:
  1622   00000B                     memcpy@tmp:
  1623                           	callstack 0
  1624   00000B                     mem_cmp@s:
  1625                           	callstack 0
  1626   00000B                     create_name@path:
  1627                           	callstack 0
  1628   00000B                     ___simple_search_fl@split:
  1629                           	callstack 0
  1630   00000B                     memset@s:
  1631                           	callstack 0
  1632                           
  1633                           ; 2 bytes @ 0xA
  1634   00000B                     	ds	1
  1635   00000C                     ??_ld_clust:
  1636   00000C                     ?_get_temp_data:
  1637                           	callstack 0
  1638   00000C                     ?_SD_SendCmd:
  1639                           	callstack 0
  1640   00000C                     get_ldnumber@tp:
  1641                           	callstack 0
  1642   00000C                     get_temp_data@temp_string:
  1643                           	callstack 0
  1644   00000C                     SD_SendCmd@address:
  1645                           	callstack 0
  1646                           
  1647                           ; 4 bytes @ 0xB
  1648   00000C                     	ds	1
  1649   00000D                     ??_create_name:
  1650   00000D                     ?_clst2sect:
  1651                           	callstack 0
  1652   00000D                     ___lldiv@counter:
  1653                           	callstack 0
  1654   00000D                     mem_cmp@r:
  1655                           	callstack 0
  1656   00000D                     clst2sect@fs:
  1657                           	callstack 0
  1658   00000D                     _validate$1262:
  1659                           	callstack 0
  1660   00000D                     ___simple_search_fl@last:
  1661                           	callstack 0
  1662                           
  1663                           ; 2 bytes @ 0xC
  1664   00000D                     	ds	1
  1665   00000E                     
  1666                           ; 1 bytes @ 0xD
  1667   00000E                     	ds	1
  1668   00000F                     validate@res:
  1669                           	callstack 0
  1670   00000F                     _create_name$1092:
  1671                           	callstack 0
  1672   00000F                     append@source_size:
  1673                           	callstack 0
  1674   00000F                     ___simple_search_fl@next:
  1675                           	callstack 0
  1676   00000F                     clst2sect@clst:
  1677                           	callstack 0
  1678                           
  1679                           ; 4 bytes @ 0xE
  1680   00000F                     	ds	1
  1681   000010                     ld_clust@cl:
  1682                           	callstack 0
  1683                           
  1684                           ; 4 bytes @ 0xF
  1685   000010                     	ds	1
  1686   000011                     ??_SD_SendCmd:
  1687   000011                     _create_name$1097:
  1688                           	callstack 0
  1689   000011                     append@dest_size:
  1690                           	callstack 0
  1691   000011                     ___simple_search_fl@c:
  1692                           	callstack 0
  1693                           
  1694                           ; 2 bytes @ 0x10
  1695   000011                     	ds	2
  1696   000013                     ??_clst2sect:
  1697   000013                     create_name@d:
  1698                           	callstack 0
  1699   000013                     append@counter:
  1700                           	callstack 0
  1701   000013                     ___simple_search_fl@best:
  1702                           	callstack 0
  1703   000013                     SD_SendCmd@longTimeout:
  1704                           	callstack 0
  1705                           
  1706                           ; 4 bytes @ 0x12
  1707   000013                     	ds	1
  1708   000014                     create_name@ni:
  1709                           	callstack 0
  1710                           
  1711                           ; 2 bytes @ 0x13
  1712   000014                     	ds	1
  1713   000015                     ?_malloc:
  1714                           	callstack 0
  1715   000015                     malloc@n:
  1716                           	callstack 0
  1717                           
  1718                           ; 2 bytes @ 0x14
  1719   000015                     	ds	1
  1720   000016                     create_name@p:
  1721                           	callstack 0
  1722                           
  1723                           ; 2 bytes @ 0x15
  1724   000016                     	ds	1
  1725   000017                     ??_malloc:
  1726   000017                     SD_SendCmd@address_bytes:
  1727                           	callstack 0
  1728                           
  1729                           ; 4 bytes @ 0x16
  1730   000017                     	ds	1
  1731   000018                     create_name@i:
  1732                           	callstack 0
  1733                           
  1734                           ; 2 bytes @ 0x17
  1735   000018                     	ds	1
  1736   000019                     malloc@m:
  1737                           	callstack 0
  1738                           
  1739                           ; 2 bytes @ 0x18
  1740   000019                     	ds	1
  1741   00001A                     create_name@sfn:
  1742                           	callstack 0
  1743                           
  1744                           ; 2 bytes @ 0x19
  1745   00001A                     	ds	1
  1746   00001B                     SD_SendCmd@timeout:
  1747                           	callstack 0
  1748   00001B                     malloc@sz:
  1749                           	callstack 0
  1750                           
  1751                           ; 2 bytes @ 0x1A
  1752   00001B                     	ds	1
  1753   00001C                     create_name@si:
  1754                           	callstack 0
  1755                           
  1756                           ; 2 bytes @ 0x1B
  1757   00001C                     	ds	1
  1758   00001D                     SD_SendCmd@cmd:
  1759                           	callstack 0
  1760   00001D                     malloc@p:
  1761                           	callstack 0
  1762                           
  1763                           ; 2 bytes @ 0x1C
  1764   00001D                     	ds	1
  1765   00001E                     create_name@c:
  1766                           	callstack 0
  1767   00001E                     SD_SendCmd@response:
  1768                           	callstack 0
  1769                           
  1770                           ; 5 bytes @ 0x1D
  1771   00001E                     	ds	1
  1772   00001F                     malloc@new:
  1773                           	callstack 0
  1774                           
  1775                           ; 2 bytes @ 0x1E
  1776   00001F                     	ds	4
  1777   000023                     ??_SD_SPI_MediaInitialize:
  1778   000023                     SD_SPI_AsyncReadTasks@info:
  1779                           	callstack 0
  1780   000023                     SD_SPI_AsyncWriteTasks@info:
  1781                           	callstack 0
  1782                           
  1783                           ; 2 bytes @ 0x22
  1784   000023                     	ds	2
  1785   000025                     ??_SD_SPI_AsyncReadTasks:
  1786   000025                     ??_SD_SPI_AsyncWriteTasks:
  1787                           
  1788                           ; 1 bytes @ 0x24
  1789   000025                     	ds	4
  1790   000029                     SD_SPI_AsyncReadTasks@response:
  1791                           	callstack 0
  1792   000029                     SD_SPI_AsyncWriteTasks@response:
  1793                           	callstack 0
  1794                           
  1795                           ; 5 bytes @ 0x28
  1796   000029                     	ds	5
  1797   00002E                     SD_SPI_AsyncReadTasks@bData:
  1798                           	callstack 0
  1799   00002E                     SD_SPI_AsyncWriteTasks@preEraseBlockCount:
  1800                           	callstack 0
  1801   00002E                     SD_SPI_MediaInitialize@CSDResponse:
  1802                           	callstack 0
  1803                           
  1804                           ; 20 bytes @ 0x2D
  1805   00002E                     	ds	1
  1806   00002F                     SD_SPI_SectorRead@sector_address:
  1807                           	callstack 0
  1808                           
  1809                           ; 4 bytes @ 0x2E
  1810   00002F                     	ds	3
  1811   000032                     SD_SPI_SectorWrite@sector_address:
  1812                           	callstack 0
  1813                           
  1814                           ; 4 bytes @ 0x31
  1815   000032                     	ds	1
  1816   000033                     SD_SPI_SectorRead@buffer:
  1817                           	callstack 0
  1818                           
  1819                           ; 2 bytes @ 0x32
  1820   000033                     	ds	2
  1821   000035                     SD_SPI_SectorRead@sector_count:
  1822                           	callstack 0
  1823                           
  1824                           ; 2 bytes @ 0x34
  1825   000035                     	ds	1
  1826   000036                     SD_SPI_SectorWrite@buffer:
  1827                           	callstack 0
  1828                           
  1829                           ; 2 bytes @ 0x35
  1830   000036                     	ds	1
  1831   000037                     ??_SD_SPI_SectorRead:
  1832                           
  1833                           ; 1 bytes @ 0x36
  1834   000037                     	ds	1
  1835   000038                     SD_SPI_SectorWrite@sector_count:
  1836                           	callstack 0
  1837                           
  1838                           ; 2 bytes @ 0x37
  1839   000038                     	ds	1
  1840   000039                     SD_SPI_SectorRead@result:
  1841                           	callstack 0
  1842                           
  1843                           ; 1 bytes @ 0x38
  1844   000039                     	ds	1
  1845   00003A                     ??_SD_SPI_SectorWrite:
  1846   00003A                     SD_SPI_SectorRead@status:
  1847                           	callstack 0
  1848                           
  1849                           ; 1 bytes @ 0x39
  1850   00003A                     	ds	1
  1851   00003B                     SD_SPI_SectorRead@i:
  1852                           	callstack 0
  1853                           
  1854                           ; 2 bytes @ 0x3A
  1855   00003B                     	ds	1
  1856   00003C                     SD_SPI_SectorWrite@result:
  1857                           	callstack 0
  1858                           
  1859                           ; 1 bytes @ 0x3B
  1860   00003C                     	ds	1
  1861   00003D                     SD_SPI_SectorWrite@status:
  1862                           	callstack 0
  1863   00003D                     SD_SPI_SectorRead@info:
  1864                           	callstack 0
  1865                           
  1866                           ; 13 bytes @ 0x3C
  1867   00003D                     	ds	1
  1868   00003E                     SD_SPI_SectorWrite@i:
  1869                           	callstack 0
  1870                           
  1871                           ; 2 bytes @ 0x3D
  1872   00003E                     	ds	2
  1873   000040                     SD_SPI_SectorWrite@info:
  1874                           	callstack 0
  1875                           
  1876                           ; 13 bytes @ 0x3F
  1877   000040                     	ds	2
  1878   000042                     _SD_SPI_MediaInitialize$4529:
  1879                           	callstack 0
  1880                           
  1881                           ; 4 bytes @ 0x41
  1882   000042                     	ds	4
  1883   000046                     SD_SPI_MediaInitialize@c_size_mult:
  1884                           	callstack 0
  1885                           
  1886                           ; 1 bytes @ 0x45
  1887   000046                     	ds	1
  1888   000047                     SD_SPI_MediaInitialize@index:
  1889                           	callstack 0
  1890                           
  1891                           ; 1 bytes @ 0x46
  1892   000047                     	ds	1
  1893   000048                     SD_SPI_MediaInitialize@block_len:
  1894                           	callstack 0
  1895                           
  1896                           ; 1 bytes @ 0x47
  1897   000048                     	ds	1
  1898   000049                     SD_SPI_MediaInitialize@count:
  1899                           	callstack 0
  1900                           
  1901                           ; 1 bytes @ 0x48
  1902   000049                     	ds	1
  1903   00004A                     disk_read@buff:
  1904                           	callstack 0
  1905   00004A                     SD_SPI_MediaInitialize@c_size:
  1906                           	callstack 0
  1907                           
  1908                           ; 4 bytes @ 0x49
  1909   00004A                     	ds	2
  1910   00004C                     disk_read@sector:
  1911                           	callstack 0
  1912                           
  1913                           ; 4 bytes @ 0x4B
  1914   00004C                     	ds	1
  1915   00004D                     disk_write@buff:
  1916                           	callstack 0
  1917                           
  1918                           ; 2 bytes @ 0x4C
  1919   00004D                     	ds	1
  1920   00004E                     SD_SPI_MediaInitialize@response:
  1921                           	callstack 0
  1922                           
  1923                           ; 5 bytes @ 0x4D
  1924   00004E                     	ds	1
  1925   00004F                     disk_write@sector:
  1926                           	callstack 0
  1927                           
  1928                           ; 4 bytes @ 0x4E
  1929   00004F                     	ds	1
  1930   000050                     disk_read@count:
  1931                           	callstack 0
  1932                           
  1933                           ; 2 bytes @ 0x4F
  1934   000050                     	ds	2
  1935   000052                     ??_disk_read:
  1936                           
  1937                           ; 1 bytes @ 0x51
  1938   000052                     	ds	1
  1939   000053                     disk_write@count:
  1940                           	callstack 0
  1941   000053                     SD_SPI_MediaInitialize@timeout:
  1942                           	callstack 0
  1943                           
  1944                           ; 2 bytes @ 0x52
  1945   000053                     	ds	1
  1946   000054                     disk_read@pdrv:
  1947                           	callstack 0
  1948                           
  1949                           ; 1 bytes @ 0x53
  1950   000054                     	ds	1
  1951   000055                     ??_disk_initialize:
  1952   000055                     ??_disk_write:
  1953   000055                     disk_read@res:
  1954                           	callstack 0
  1955                           
  1956                           ; 1 bytes @ 0x54
  1957   000055                     	ds	2
  1958   000057                     disk_initialize@pdrv:
  1959                           	callstack 0
  1960   000057                     disk_write@pdrv:
  1961                           	callstack 0
  1962                           
  1963                           ; 1 bytes @ 0x56
  1964   000057                     	ds	1
  1965   000058                     disk_initialize@stat:
  1966                           	callstack 0
  1967   000058                     disk_write@res:
  1968                           	callstack 0
  1969                           
  1970                           ; 1 bytes @ 0x57
  1971   000058                     	ds	1
  1972   000059                     sync_window@fs:
  1973                           	callstack 0
  1974                           
  1975                           ; 2 bytes @ 0x58
  1976   000059                     	ds	2
  1977   00005B                     sync_window@res:
  1978                           	callstack 0
  1979                           
  1980                           ; 1 bytes @ 0x5A
  1981   00005B                     	ds	1
  1982   00005C                     sync_fs@fs:
  1983                           	callstack 0
  1984                           
  1985                           ; 2 bytes @ 0x5B
  1986   00005C                     	ds	2
  1987   00005E                     sync_fs@res:
  1988                           	callstack 0
  1989                           
  1990                           ; 1 bytes @ 0x5D
  1991   00005E                     	ds	2
  1992   000060                     
  1993                           ; 1 bytes @ 0x5F
  1994 ;;
  1995 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1996 ;;
  1997 ;; *************** function _main *****************
  1998 ;; Defined at:
  1999 ;;		line 68 in file "main.c"
  2000 ;; Parameters:    Size  Location     Type
  2001 ;;		None
  2002 ;; Auto vars:     Size  Location     Type
  2003 ;;  vel_file        2   73[BANK1 ] PTR unsigned char 
  2004 ;;		 -> STR_13(13), 
  2005 ;;  hum_file        2   71[BANK1 ] PTR unsigned char 
  2006 ;;		 -> STR_12(13), 
  2007 ;;  alt_file        2   69[BANK1 ] PTR unsigned char 
  2008 ;;		 -> STR_11(13), 
  2009 ;;  temp_file       2   67[BANK1 ] PTR unsigned char 
  2010 ;;		 -> STR_10(9), 
  2011 ;; Return value:  Size  Location     Type
  2012 ;;                  1    wreg      void 
  2013 ;; Registers used:
  2014 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  2015 ;; Tracked objects:
  2016 ;;		On entry : 0/0
  2017 ;;		On exit  : 0/0
  2018 ;;		Unchanged: 0/0
  2019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2021 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2023 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2024 ;;Total ram usage:        8 bytes
  2025 ;; Hardware stack levels required when called: 14
  2026 ;; This function calls:
  2027 ;;		_SYSTEM_Initialize
  2028 ;;		_get_alt_data
  2029 ;;		_get_hum_data
  2030 ;;		_get_temp_data
  2031 ;;		_get_vel_data
  2032 ;;		_write_to_file
  2033 ;; This function is called by:
  2034 ;;		Startup code after reset
  2035 ;; This function uses a non-reentrant model
  2036 ;;
  2037                           
  2038                           	psect	text0
  2039   0085D4                     __ptext0:
  2040                           	callstack 0
  2041   0085D4                     _main:
  2042                           	callstack 17
  2043   0085D4                     
  2044                           ;main.c: 72:     SYSTEM_Initialize();
  2045   0085D4  EC29  F03E         	call	_SYSTEM_Initialize	;wreg free
  2046   0085D8                     
  2047                           ;main.c: 76:     char* temp_file = "temp.txt";
  2048   0085D8  0ED6               	movlw	low STR_10
  2049   0085DA  0101               	movlb	1	; () banked
  2050   0085DC  6FC2               	movwf	main@temp_file& (0+255),b
  2051   0085DE  0EFF               	movlw	high STR_10
  2052   0085E0  6FC3               	movwf	(main@temp_file+1)& (0+255),b
  2053   0085E2                     
  2054                           ; BSR set to: 1
  2055                           ;main.c: 77:     char* alt_file = "altitude.txt";
  2056   0085E2  0E9A               	movlw	low STR_11
  2057   0085E4  6FC4               	movwf	main@alt_file& (0+255),b
  2058   0085E6  0EFF               	movlw	high STR_11
  2059   0085E8  6FC5               	movwf	(main@alt_file+1)& (0+255),b
  2060   0085EA                     
  2061                           ; BSR set to: 1
  2062                           ;main.c: 78:     char* hum_file = "humidity.txt";
  2063   0085EA  0EB4               	movlw	low STR_12
  2064   0085EC  6FC6               	movwf	main@hum_file& (0+255),b
  2065   0085EE  0EFF               	movlw	high STR_12
  2066   0085F0  6FC7               	movwf	(main@hum_file+1)& (0+255),b
  2067   0085F2                     
  2068                           ; BSR set to: 1
  2069                           ;main.c: 79:     char* vel_file = "velocity.txt";
  2070   0085F2  0EA7               	movlw	low STR_13
  2071   0085F4  6FC8               	movwf	main@vel_file& (0+255),b
  2072   0085F6  0EFF               	movlw	high STR_13
  2073   0085F8  6FC9               	movwf	(main@vel_file+1)& (0+255),b
  2074   0085FA                     
  2075                           ; BSR set to: 1
  2076                           ;main.c: 82:     write_to_file(alt_file, get_alt_data (alt_data));
  2077   0085FA  C1C4  F0F2         	movff	main@alt_file,write_to_file@file_name
  2078   0085FE  C1C5  F0F3         	movff	main@alt_file+1,write_to_file@file_name+1
  2079   008602  0E57               	movlw	low _alt_data
  2080   008604  6E01               	movwf	get_alt_data@alt_string^0,c
  2081   008606  0E01               	movlw	high _alt_data
  2082   008608  6E02               	movwf	(get_alt_data@alt_string+1)^0,c
  2083   00860A  EC39  F03E         	call	_get_alt_data	;wreg free
  2084   00860E  C001  F0F4         	movff	?_get_alt_data,write_to_file@data
  2085   008612  C002  F0F5         	movff	?_get_alt_data+1,write_to_file@data+1
  2086   008616  EC02  F047         	call	_write_to_file	;wreg free
  2087   00861A                     
  2088                           ;main.c: 83:     write_to_file(hum_file, get_hum_data (hum_data));
  2089   00861A  C1C6  F0F2         	movff	main@hum_file,write_to_file@file_name
  2090   00861E  C1C7  F0F3         	movff	main@hum_file+1,write_to_file@file_name+1
  2091   008622  0E43               	movlw	low _hum_data
  2092   008624  6E01               	movwf	get_hum_data@hum_string^0,c
  2093   008626  0E01               	movlw	high _hum_data
  2094   008628  6E02               	movwf	(get_hum_data@hum_string+1)^0,c
  2095   00862A  EC42  F03E         	call	_get_hum_data	;wreg free
  2096   00862E  C001  F0F4         	movff	?_get_hum_data,write_to_file@data
  2097   008632  C002  F0F5         	movff	?_get_hum_data+1,write_to_file@data+1
  2098   008636  EC02  F047         	call	_write_to_file	;wreg free
  2099   00863A                     
  2100                           ;main.c: 84:     write_to_file(vel_file, get_vel_data (vel_data));
  2101   00863A  C1C8  F0F2         	movff	main@vel_file,write_to_file@file_name
  2102   00863E  C1C9  F0F3         	movff	main@vel_file+1,write_to_file@file_name+1
  2103   008642  0E2F               	movlw	low _vel_data
  2104   008644  6E01               	movwf	get_vel_data@vel_string^0,c
  2105   008646  0E01               	movlw	high _vel_data
  2106   008648  6E02               	movwf	(get_vel_data@vel_string+1)^0,c
  2107   00864A  EC4B  F03E         	call	_get_vel_data	;wreg free
  2108   00864E  C001  F0F4         	movff	?_get_vel_data,write_to_file@data
  2109   008652  C002  F0F5         	movff	?_get_vel_data+1,write_to_file@data+1
  2110   008656  EC02  F047         	call	_write_to_file	;wreg free
  2111   00865A                     
  2112                           ;main.c: 85:     write_to_file(temp_file, get_temp_data(temp_data));
  2113   00865A  C1C2  F0F2         	movff	main@temp_file,write_to_file@file_name
  2114   00865E  C1C3  F0F3         	movff	main@temp_file+1,write_to_file@file_name+1
  2115   008662  0E6B               	movlw	low _temp_data
  2116   008664  6E0C               	movwf	get_temp_data@temp_string^0,c
  2117   008666  0E01               	movlw	high _temp_data
  2118   008668  6E0D               	movwf	(get_temp_data@temp_string+1)^0,c
  2119   00866A  EC78  F03E         	call	_get_temp_data	;wreg free
  2120   00866E  C00C  F0F4         	movff	?_get_temp_data,write_to_file@data
  2121   008672  C00D  F0F5         	movff	?_get_temp_data+1,write_to_file@data+1
  2122   008676  EC02  F047         	call	_write_to_file	;wreg free
  2123   00867A                     l1420:
  2124   00867A  EF3D  F043         	goto	l1420
  2125   00867E  EF00  F000         	goto	start
  2126   008682                     __end_of_main:
  2127                           	callstack 0
  2128                           
  2129 ;; *************** function _write_to_file *****************
  2130 ;; Defined at:
  2131 ;;		line 96 in file "main.c"
  2132 ;; Parameters:    Size  Location     Type
  2133 ;;  file_name       2  146[BANK0 ] PTR unsigned char 
  2134 ;;		 -> STR_13(13), STR_12(13), STR_11(13), STR_10(9), 
  2135 ;;  data            2  148[BANK0 ] PTR unsigned char 
  2136 ;;		 -> STR_20(6), STR_19(4), STR_18(5), STR_17(11), 
  2137 ;;		 -> temp_data(20), vel_data(20), hum_data(20), alt_data(20), 
  2138 ;; Auto vars:     Size  Location     Type
  2139 ;;  formatted_da    2  158[BANK0 ] PTR unsigned char 
  2140 ;;		 -> __heap_hi(0), RAM(3895), NULL(0), 
  2141 ;;  bw              2  156[BANK0 ] unsigned int 
  2142 ;;  data_size       2  154[BANK0 ] unsigned int 
  2143 ;; Return value:  Size  Location     Type
  2144 ;;                  1    wreg      void 
  2145 ;; Registers used:
  2146 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  2147 ;; Tracked objects:
  2148 ;;		On entry : 0/0
  2149 ;;		On exit  : 0/0
  2150 ;;		Unchanged: 0/0
  2151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2152 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2153 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2154 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2155 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2156 ;;Total ram usage:       14 bytes
  2157 ;; Hardware stack levels used: 1
  2158 ;; Hardware stack levels required when called: 13
  2159 ;; This function calls:
  2160 ;;		_append
  2161 ;;		_f_close
  2162 ;;		_f_lseek
  2163 ;;		_f_mount
  2164 ;;		_f_open
  2165 ;;		_f_write
  2166 ;;		_malloc
  2167 ;;		_strlen
  2168 ;; This function is called by:
  2169 ;;		_main
  2170 ;; This function uses a non-reentrant model
  2171 ;;
  2172                           
  2173                           	psect	text1
  2174   008E04                     __ptext1:
  2175                           	callstack 0
  2176   008E04                     _write_to_file:
  2177                           	callstack 17
  2178   008E04                     
  2179                           ;main.c: 96: void write_to_file(char* file_name, char* data);main.c: 97: {;main.c: 98:  
      +                             UINT bw;;main.c: 99:     char* formatted_data;;main.c: 100:     UINT data_size;;main.
      +                          c: 103:     formatted_data = (char*) malloc(strlen(data) + 1);
  2180   008E04  C0F4  F001         	movff	write_to_file@data,strlen@s
  2181   008E08  C0F5  F002         	movff	write_to_file@data+1,strlen@s+1
  2182   008E0C  EC55  F03F         	call	_strlen	;wreg free
  2183   008E10  0E01               	movlw	1
  2184   008E12  2401               	addwf	?_strlen^0,w,c
  2185   008E14  6E15               	movwf	malloc@n^0,c
  2186   008E16  0E00               	movlw	0
  2187   008E18  2002               	addwfc	(?_strlen+1)^0,w,c
  2188   008E1A  6E16               	movwf	(malloc@n+1)^0,c
  2189   008E1C  ECC5  F048         	call	_malloc	;wreg free
  2190   008E20  C015  F0FE         	movff	?_malloc,write_to_file@formatted_data
  2191   008E24  C016  F0FF         	movff	?_malloc+1,write_to_file@formatted_data+1
  2192   008E28                     
  2193                           ;main.c: 104:     append(formatted_data, data, "\r\n");
  2194   008E28  C0FE  F005         	movff	write_to_file@formatted_data,append@result
  2195   008E2C  C0FF  F006         	movff	write_to_file@formatted_data+1,append@result+1
  2196   008E30  C0F4  F007         	movff	write_to_file@data,append@dest
  2197   008E34  C0F5  F008         	movff	write_to_file@data+1,append@dest+1
  2198   008E38  0EF8               	movlw	low STR_14
  2199   008E3A  6E09               	movwf	append@source^0,c
  2200   008E3C  0EFF               	movlw	high STR_14
  2201   008E3E  6E0A               	movwf	(append@source+1)^0,c
  2202   008E40  EC79  F046         	call	_append	;wreg free
  2203   008E44                     
  2204                           ;main.c: 105:     data_size = (UINT) strlen(formatted_data);
  2205   008E44  C0FE  F001         	movff	write_to_file@formatted_data,strlen@s
  2206   008E48  C0FF  F002         	movff	write_to_file@formatted_data+1,strlen@s+1
  2207   008E4C  EC55  F03F         	call	_strlen	;wreg free
  2208   008E50  C001  F0FA         	movff	?_strlen,write_to_file@data_size
  2209   008E54  C002  F0FB         	movff	?_strlen+1,write_to_file@data_size+1
  2210   008E58                     
  2211                           ;main.c: 108:     if (f_mount(&FatFs, "", 1) == FR_OK)
  2212   008E58  0E8E               	movlw	low _FatFs
  2213   008E5A  0100               	movlb	0	; () banked
  2214   008E5C  6FC5               	movwf	f_mount@fs& (0+255),b
  2215   008E5E  0E06               	movlw	high _FatFs
  2216   008E60  6FC6               	movwf	(f_mount@fs+1)& (0+255),b
  2217   008E62  0EFA               	movlw	low (STR_14+2)
  2218   008E64  6FC7               	movwf	f_mount@path& (0+255),b
  2219   008E66  0EFF               	movlw	high (STR_14+2)
  2220   008E68  6FC8               	movwf	(f_mount@path+1)& (0+255),b
  2221   008E6A  0E01               	movlw	1
  2222   008E6C  6FC9               	movwf	f_mount@opt& (0+255),b
  2223   008E6E  EC1D  F045         	call	_f_mount	;wreg free
  2224   008E72  0900               	iorlw	0
  2225   008E74  A4D8               	btfss	status,2,c
  2226   008E76  EF3F  F047         	goto	u12941
  2227   008E7A  EF41  F047         	goto	u12940
  2228   008E7E                     u12941:
  2229   008E7E  EF8E  F047         	goto	l1429
  2230   008E82                     u12940:
  2231   008E82                     
  2232                           ;main.c: 109:     {;main.c: 111:   if (f_open(&Fil, file_name, 0x10 | 0x01 | 0x02) == FR
      +                          _OK)
  2233   008E82  0EF4               	movlw	low _Fil
  2234   008E84  0100               	movlb	0	; () banked
  2235   008E86  6FE5               	movwf	f_open@fp& (0+255),b
  2236   008E88  0E0A               	movlw	high _Fil
  2237   008E8A  6FE6               	movwf	(f_open@fp+1)& (0+255),b
  2238   008E8C  C0F2  F0E7         	movff	write_to_file@file_name,f_open@path
  2239   008E90  C0F3  F0E8         	movff	write_to_file@file_name+1,f_open@path+1
  2240   008E94  0E13               	movlw	19
  2241   008E96  6FE9               	movwf	f_open@mode& (0+255),b
  2242   008E98  EC08  F069         	call	_f_open	;wreg free
  2243   008E9C  0900               	iorlw	0
  2244   008E9E  A4D8               	btfss	status,2,c
  2245   008EA0  EF54  F047         	goto	u12951
  2246   008EA4  EF56  F047         	goto	u12950
  2247   008EA8                     u12951:
  2248   008EA8  EF8E  F047         	goto	l1429
  2249   008EAC                     u12950:
  2250   008EAC                     
  2251                           ;main.c: 112:         {;main.c: 114:             if (((&Fil)->obj.objsize) != 0)
  2252   008EAC  EE2A  F0FE         	lfsr	2,_Fil+10
  2253   008EB0  50DE               	movf	postinc2,w,c
  2254   008EB2  10DE               	iorwf	postinc2,w,c
  2255   008EB4  10DE               	iorwf	postinc2,w,c
  2256   008EB6  10DE               	iorwf	postinc2,w,c
  2257   008EB8  B4D8               	btfsc	status,2,c
  2258   008EBA  EF61  F047         	goto	u12961
  2259   008EBE  EF63  F047         	goto	u12960
  2260   008EC2                     u12961:
  2261   008EC2  EF72  F047         	goto	l1428
  2262   008EC6                     u12960:
  2263   008EC6                     
  2264                           ;main.c: 115:                 f_lseek(&Fil, ((&Fil)->obj.objsize));
  2265   008EC6  0EF4               	movlw	low _Fil
  2266   008EC8  0100               	movlb	0	; () banked
  2267   008ECA  6FB5               	movwf	f_lseek@fp& (0+255),b
  2268   008ECC  0E0A               	movlw	high _Fil
  2269   008ECE  6FB6               	movwf	(f_lseek@fp+1)& (0+255),b
  2270   008ED0  CAFE  F0B7         	movff	_Fil+10,f_lseek@ofs
  2271   008ED4  CAFF  F0B8         	movff	_Fil+11,f_lseek@ofs+1
  2272   008ED8  CB00  F0B9         	movff	_Fil+12,f_lseek@ofs+2
  2273   008EDC  CB01  F0BA         	movff	_Fil+13,f_lseek@ofs+3
  2274   008EE0  ECCB  F070         	call	_f_lseek	;wreg free
  2275   008EE4                     l1428:
  2276                           
  2277                           ;main.c: 118:    f_write(&Fil, formatted_data, data_size-1 , &bw);
  2278   008EE4  0EF4               	movlw	low _Fil
  2279   008EE6  0100               	movlb	0	; () banked
  2280   008EE8  6FB5               	movwf	f_write@fp& (0+255),b
  2281   008EEA  0E0A               	movlw	high _Fil
  2282   008EEC  6FB6               	movwf	(f_write@fp+1)& (0+255),b
  2283   008EEE  C0FE  F0B7         	movff	write_to_file@formatted_data,f_write@buff
  2284   008EF2  C0FF  F0B8         	movff	write_to_file@formatted_data+1,f_write@buff+1
  2285   008EF6  0EFF               	movlw	255
  2286   008EF8  25FA               	addwf	write_to_file@data_size& (0+255),w,b
  2287   008EFA  6FB9               	movwf	f_write@btw& (0+255),b
  2288   008EFC  0EFF               	movlw	255
  2289   008EFE  21FB               	addwfc	(write_to_file@data_size+1)& (0+255),w,b
  2290   008F00  6FBA               	movwf	(f_write@btw+1)& (0+255),b
  2291   008F02  0EFC               	movlw	low write_to_file@bw
  2292   008F04  6FBB               	movwf	f_write@bw& (0+255),b
  2293   008F06  0E00               	movlw	high write_to_file@bw
  2294   008F08  6FBC               	movwf	(f_write@bw+1)& (0+255),b
  2295   008F0A  ECC6  F074         	call	_f_write	;wreg free
  2296                           
  2297                           ;main.c: 121:    f_close(&Fil);
  2298   008F0E  0EF4               	movlw	low _Fil
  2299   008F10  0100               	movlb	0	; () banked
  2300   008F12  6F7F               	movwf	f_close@fp& (0+255),b
  2301   008F14  0E0A               	movlw	high _Fil
  2302   008F16  6F80               	movwf	(f_close@fp+1)& (0+255),b
  2303   008F18  EC25  F040         	call	_f_close	;wreg free
  2304   008F1C                     l1429:
  2305   008F1C  0012               	return		;funcret
  2306   008F1E                     __end_of_write_to_file:
  2307                           	callstack 0
  2308                           
  2309 ;; *************** function _malloc *****************
  2310 ;; Defined at:
  2311 ;;		line 16 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lite_malloc.c"
  2312 ;; Parameters:    Size  Location     Type
  2313 ;;  n               2   20[COMRAM] unsigned int 
  2314 ;; Auto vars:     Size  Location     Type
  2315 ;;  sz              2   26[COMRAM] PTR unsigned int 
  2316 ;;		 -> __heap_hi(0), RAM(3895), NULL(0), 
  2317 ;;  new             2   30[COMRAM] PTR unsigned char 
  2318 ;;		 -> __heap_hi(0), RAM(3895), NULL(0), 
  2319 ;;  m               2   24[COMRAM] unsigned int 
  2320 ;;  p               2   28[COMRAM] PTR void 
  2321 ;;		 -> __heap_hi(0), RAM(3895), NULL(0), 
  2322 ;;  size            2    0        unsigned int 
  2323 ;; Return value:  Size  Location     Type
  2324 ;;                  2   20[COMRAM] PTR void 
  2325 ;; Registers used:
  2326 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2327 ;; Tracked objects:
  2328 ;;		On entry : 0/0
  2329 ;;		On exit  : 0/0
  2330 ;;		Unchanged: 0/0
  2331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2332 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2333 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2334 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2335 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2336 ;;Total ram usage:       12 bytes
  2337 ;; Hardware stack levels used: 1
  2338 ;; Hardware stack levels required when called: 1
  2339 ;; This function calls:
  2340 ;;		___expand_heap
  2341 ;;		___simple_search_fl
  2342 ;; This function is called by:
  2343 ;;		_write_to_file
  2344 ;; This function uses a non-reentrant model
  2345 ;;
  2346                           
  2347                           	psect	text2
  2348   00918A                     __ptext2:
  2349                           	callstack 0
  2350   00918A                     _malloc:
  2351                           	callstack 28
  2352   00918A  5015               	movf	malloc@n^0,w,c
  2353   00918C  1016               	iorwf	(malloc@n+1)^0,w,c
  2354   00918E  A4D8               	btfss	status,2,c
  2355   009190  EFCC  F048         	goto	u12381
  2356   009194  EFCE  F048         	goto	u12380
  2357   009198                     u12381:
  2358   009198  EFD0  F048         	goto	l9400
  2359   00919C                     u12380:
  2360   00919C  4A15               	infsnz	malloc@n^0,f,c
  2361   00919E  2A16               	incf	(malloc@n+1)^0,f,c
  2362   0091A0                     l9400:
  2363   0091A0  C121  F121         	movff	malloc@cur,malloc@cur
  2364   0091A4  C122  F122         	movff	malloc@cur+1,malloc@cur+1
  2365   0091A8  5016               	movf	(malloc@n+1)^0,w,c
  2366   0091AA  E107               	bnz	u12391
  2367   0091AC  0E04               	movlw	4
  2368   0091AE  5C15               	subwf	malloc@n^0,w,c
  2369   0091B0  B0D8               	btfsc	status,0,c
  2370   0091B2  EFDD  F048         	goto	u12391
  2371   0091B6  EFDF  F048         	goto	u12390
  2372   0091BA                     u12391:
  2373   0091BA  EFE3  F048         	goto	l9408
  2374   0091BE                     u12390:
  2375   0091BE  0E00               	movlw	0
  2376   0091C0  6E16               	movwf	(malloc@n+1)^0,c
  2377   0091C2  0E04               	movlw	4
  2378   0091C4  6E15               	movwf	malloc@n^0,c
  2379   0091C6                     l9408:
  2380   0091C6  C015  F001         	movff	malloc@n,___simple_search_fl@n
  2381   0091CA  C016  F002         	movff	malloc@n+1,___simple_search_fl@n+1
  2382   0091CE  ECAD  F052         	call	___simple_search_fl	;wreg free
  2383   0091D2  C001  F01D         	movff	?___simple_search_fl,malloc@p
  2384   0091D6  C002  F01E         	movff	?___simple_search_fl+1,malloc@p+1
  2385   0091DA  501D               	movf	malloc@p^0,w,c
  2386   0091DC  101E               	iorwf	(malloc@p+1)^0,w,c
  2387   0091DE  A4D8               	btfss	status,2,c
  2388   0091E0  EFF4  F048         	goto	u12401
  2389   0091E4  EFF6  F048         	goto	u12400
  2390   0091E8                     u12401:
  2391   0091E8  EF64  F049         	goto	l9438
  2392   0091EC                     u12400:
  2393   0091EC  0101               	movlb	1	; () banked
  2394   0091EE  5121               	movf	malloc@cur& (0+255),w,b
  2395   0091F0  5D1F               	subwf	malloc@end& (0+255),w,b
  2396   0091F2  6E17               	movwf	??_malloc^0,c
  2397   0091F4  5122               	movf	(malloc@cur+1)& (0+255),w,b
  2398   0091F6  5920               	subwfb	(malloc@end+1)& (0+255),w,b
  2399   0091F8  6E18               	movwf	(??_malloc+1)^0,c
  2400   0091FA  5015               	movf	malloc@n^0,w,c
  2401   0091FC  5C17               	subwf	??_malloc^0,w,c
  2402   0091FE  5016               	movf	(malloc@n+1)^0,w,c
  2403   009200  5818               	subwfb	(??_malloc+1)^0,w,c
  2404   009202  B0D8               	btfsc	status,0,c
  2405   009204  EF06  F049         	goto	u12411
  2406   009208  EF08  F049         	goto	u12410
  2407   00920C                     u12411:
  2408   00920C  EF42  F049         	goto	l2148
  2409   009210                     u12410:
  2410   009210                     
  2411                           ; BSR set to: 1
  2412   009210  0E02               	movlw	2
  2413   009212  2415               	addwf	malloc@n^0,w,c
  2414   009214  6E19               	movwf	malloc@m^0,c
  2415   009216  0E00               	movlw	0
  2416   009218  2016               	addwfc	(malloc@n+1)^0,w,c
  2417   00921A  6E1A               	movwf	(malloc@m+1)^0,c
  2418   00921C                     
  2419                           ; BSR set to: 1
  2420   00921C  0E19               	movlw	low malloc@m
  2421   00921E  6E01               	movwf	___expand_heap@pn^0,c
  2422   009220  0E00               	movlw	high malloc@m
  2423   009222  6E02               	movwf	(___expand_heap@pn+1)^0,c
  2424   009224  EC41  F043         	call	___expand_heap	;wreg free
  2425   009228  C001  F01F         	movff	?___expand_heap,malloc@new
  2426   00922C  C002  F020         	movff	?___expand_heap+1,malloc@new+1
  2427   009230  501F               	movf	malloc@new^0,w,c
  2428   009232  1020               	iorwf	(malloc@new+1)^0,w,c
  2429   009234  A4D8               	btfss	status,2,c
  2430   009236  EF1F  F049         	goto	u12421
  2431   00923A  EF21  F049         	goto	u12420
  2432   00923E                     u12421:
  2433   00923E  EF27  F049         	goto	l9424
  2434   009242                     u12420:
  2435   009242  0E00               	movlw	0
  2436   009244  6E15               	movwf	?_malloc^0,c
  2437   009246  0E00               	movlw	0
  2438   009248  6E16               	movwf	(?_malloc+1)^0,c
  2439   00924A  EF68  F049         	goto	l2150
  2440   00924E                     l9424:
  2441   00924E  C01F  F01F         	movff	malloc@new,malloc@new
  2442   009252  C020  F020         	movff	malloc@new+1,malloc@new+1
  2443   009256  0101               	movlb	1	; () banked
  2444   009258  511F               	movf	malloc@end& (0+255),w,b
  2445   00925A  181F               	xorwf	malloc@new^0,w,c
  2446   00925C  E109               	bnz	u12430
  2447   00925E  5120               	movf	(malloc@end+1)& (0+255),w,b
  2448   009260  1820               	xorwf	(malloc@new+1)^0,w,c
  2449   009262  B4D8               	btfsc	status,2,c
  2450   009264  EF36  F049         	goto	u12431
  2451   009268  EF38  F049         	goto	u12430
  2452   00926C                     u12431:
  2453   00926C  EF3C  F049         	goto	l2151
  2454   009270                     u12430:
  2455   009270                     
  2456                           ; BSR set to: 1
  2457   009270  C01F  F121         	movff	malloc@new,malloc@cur
  2458   009274  C020  F122         	movff	malloc@new+1,malloc@cur+1
  2459   009278                     l2151:
  2460                           
  2461                           ; BSR set to: 1
  2462   009278  5019               	movf	malloc@m^0,w,c
  2463   00927A  241F               	addwf	malloc@new^0,w,c
  2464   00927C  6F1F               	movwf	malloc@end& (0+255),b
  2465   00927E  501A               	movf	(malloc@m+1)^0,w,c
  2466   009280  2020               	addwfc	(malloc@new+1)^0,w,c
  2467   009282  6F20               	movwf	(malloc@end+1)& (0+255),b
  2468   009284                     l2148:
  2469                           
  2470                           ; BSR set to: 1
  2471   009284  C121  F01D         	movff	malloc@cur,malloc@p
  2472   009288  C122  F01E         	movff	malloc@cur+1,malloc@p+1
  2473   00928C                     
  2474                           ; BSR set to: 1
  2475   00928C  C01D  F01B         	movff	malloc@p,malloc@sz
  2476   009290  C01E  F01C         	movff	malloc@p+1,malloc@sz+1
  2477   009294                     
  2478                           ; BSR set to: 1
  2479   009294  C01B  FFD9         	movff	malloc@sz,fsr2l
  2480   009298  C01C  FFDA         	movff	malloc@sz+1,fsr2h
  2481   00929C  C015  FFDE         	movff	malloc@n,postinc2
  2482   0092A0  C016  FFDD         	movff	malloc@n+1,postdec2
  2483   0092A4                     
  2484                           ; BSR set to: 1
  2485   0092A4  0E02               	movlw	2
  2486   0092A6  261B               	addwf	malloc@sz^0,f,c
  2487   0092A8  0E00               	movlw	0
  2488   0092AA  221C               	addwfc	(malloc@sz+1)^0,f,c
  2489   0092AC                     
  2490                           ; BSR set to: 1
  2491   0092AC  C01B  F01D         	movff	malloc@sz,malloc@p
  2492   0092B0  C01C  F01E         	movff	malloc@sz+1,malloc@p+1
  2493   0092B4                     
  2494                           ; BSR set to: 1
  2495   0092B4  0E02               	movlw	2
  2496   0092B6  2415               	addwf	malloc@n^0,w,c
  2497   0092B8  6E17               	movwf	??_malloc^0,c
  2498   0092BA  0E00               	movlw	0
  2499   0092BC  2016               	addwfc	(malloc@n+1)^0,w,c
  2500   0092BE  6E18               	movwf	(??_malloc+1)^0,c
  2501   0092C0  5017               	movf	??_malloc^0,w,c
  2502   0092C2  2721               	addwf	malloc@cur& (0+255),f,b
  2503   0092C4  5018               	movf	(??_malloc+1)^0,w,c
  2504   0092C6  2322               	addwfc	(malloc@cur+1)& (0+255),f,b
  2505   0092C8                     l9438:
  2506   0092C8  C01D  F015         	movff	malloc@p,?_malloc
  2507   0092CC  C01E  F016         	movff	malloc@p+1,?_malloc+1
  2508   0092D0                     l2150:
  2509   0092D0  0012               	return		;funcret
  2510   0092D2                     __end_of_malloc:
  2511                           	callstack 0
  2512                           
  2513 ;; *************** function ___simple_search_fl *****************
  2514 ;; Defined at:
  2515 ;;		line 19 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lite_free.c"
  2516 ;; Parameters:    Size  Location     Type
  2517 ;;  n               2    0[COMRAM] unsigned int 
  2518 ;; Auto vars:     Size  Location     Type
  2519 ;;  split           2   10[COMRAM] PTR struct chunk
  2520 ;;		 -> NULL(0), 
  2521 ;;  remaining_si    2    6[COMRAM] unsigned int 
  2522 ;;  next            2   14[COMRAM] PTR struct chunk
  2523 ;;		 -> NULL(0), 
  2524 ;;  best            2   18[COMRAM] PTR struct chunk
  2525 ;;		 -> NULL(0), 
  2526 ;;  c               2   16[COMRAM] PTR struct chunk
  2527 ;;		 -> NULL(0), 
  2528 ;;  last            2   12[COMRAM] PTR struct chunk
  2529 ;;		 -> NULL(0), 
  2530 ;;  best_last       2    8[COMRAM] PTR struct chunk
  2531 ;;		 -> NULL(0), 
  2532 ;; Return value:  Size  Location     Type
  2533 ;;                  2    0[COMRAM] PTR void 
  2534 ;; Registers used:
  2535 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2536 ;; Tracked objects:
  2537 ;;		On entry : 0/0
  2538 ;;		On exit  : 0/0
  2539 ;;		Unchanged: 0/0
  2540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2541 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2542 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2543 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2544 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2545 ;;Total ram usage:       20 bytes
  2546 ;; Hardware stack levels used: 1
  2547 ;; This function calls:
  2548 ;;		Nothing
  2549 ;; This function is called by:
  2550 ;;		_malloc
  2551 ;; This function uses a non-reentrant model
  2552 ;;
  2553                           
  2554                           	psect	text3
  2555   00A55A                     __ptext3:
  2556                           	callstack 0
  2557   00A55A                     ___simple_search_fl:
  2558                           	callstack 28
  2559   00A55A  0E00               	movlw	0
  2560   00A55C  6E13               	movwf	___simple_search_fl@best^0,c
  2561   00A55E  0E00               	movlw	0
  2562   00A560  6E14               	movwf	(___simple_search_fl@best+1)^0,c
  2563   00A562  0E00               	movlw	0
  2564   00A564  6E09               	movwf	___simple_search_fl@best_last^0,c
  2565   00A566  0E00               	movlw	0
  2566   00A568  6E0A               	movwf	(___simple_search_fl@best_last+1)^0,c
  2567   00A56A  0E00               	movlw	0
  2568   00A56C  6E0D               	movwf	___simple_search_fl@last^0,c
  2569   00A56E  0E00               	movlw	0
  2570   00A570  6E0E               	movwf	(___simple_search_fl@last+1)^0,c
  2571   00A572  0101               	movlb	1	; () banked
  2572   00A574  5119               	movf	___freelist& (0+255),w,b
  2573   00A576  111A               	iorwf	(___freelist+1)& (0+255),w,b
  2574   00A578  A4D8               	btfss	status,2,c
  2575   00A57A  EFC1  F052         	goto	u11261
  2576   00A57E  EFC3  F052         	goto	u11260
  2577   00A582                     u11261:
  2578   00A582  EFC9  F052         	goto	l8778
  2579   00A586                     u11260:
  2580   00A586                     l8774:
  2581   00A586  0E00               	movlw	0
  2582   00A588  6E01               	movwf	?___simple_search_fl^0,c
  2583   00A58A  0E00               	movlw	0
  2584   00A58C  6E02               	movwf	(?___simple_search_fl+1)^0,c
  2585   00A58E  EFE9  F053         	goto	l2176
  2586   00A592                     l8778:
  2587                           
  2588                           ; BSR set to: 1
  2589   00A592  C119  F011         	movff	___freelist,___simple_search_fl@c
  2590   00A596  C11A  F012         	movff	___freelist+1,___simple_search_fl@c+1
  2591   00A59A  EF4F  F053         	goto	l8804
  2592   00A59E                     l8780:
  2593   00A59E  C011  FFD9         	movff	___simple_search_fl@c,fsr2l
  2594   00A5A2  C012  FFDA         	movff	___simple_search_fl@c+1,fsr2h
  2595   00A5A6  5001               	movf	___simple_search_fl@n^0,w,c
  2596   00A5A8  18DE               	xorwf	postinc2,w,c
  2597   00A5AA  E107               	bnz	u11271
  2598   00A5AC  5002               	movf	(___simple_search_fl@n+1)^0,w,c
  2599   00A5AE  18DE               	xorwf	postinc2,w,c
  2600   00A5B0  A4D8               	btfss	status,2,c
  2601   00A5B2  EFDD  F052         	goto	u11271
  2602   00A5B6  EFDF  F052         	goto	u11270
  2603   00A5BA                     u11271:
  2604   00A5BA  EF0C  F053         	goto	l8792
  2605   00A5BE                     u11270:
  2606   00A5BE  500D               	movf	___simple_search_fl@last^0,w,c
  2607   00A5C0  100E               	iorwf	(___simple_search_fl@last+1)^0,w,c
  2608   00A5C2  B4D8               	btfsc	status,2,c
  2609   00A5C4  EFE6  F052         	goto	u11281
  2610   00A5C8  EFE8  F052         	goto	u11280
  2611   00A5CC                     u11281:
  2612   00A5CC  EFFA  F052         	goto	l8786
  2613   00A5D0                     u11280:
  2614   00A5D0  EE20 F002          	lfsr	2,2
  2615   00A5D4  5011               	movf	___simple_search_fl@c^0,w,c
  2616   00A5D6  26D9               	addwf	fsr2l,f,c
  2617   00A5D8  5012               	movf	(___simple_search_fl@c+1)^0,w,c
  2618   00A5DA  22DA               	addwfc	fsr2h,f,c
  2619   00A5DC  EE10 F002          	lfsr	1,2
  2620   00A5E0  500D               	movf	___simple_search_fl@last^0,w,c
  2621   00A5E2  26E1               	addwf	fsr1l,f,c
  2622   00A5E4  500E               	movf	(___simple_search_fl@last+1)^0,w,c
  2623   00A5E6  22E2               	addwfc	fsr1h,f,c
  2624   00A5E8  CFDE FFE6          	movff	postinc2,postinc1
  2625   00A5EC  CFDD FFE5          	movff	postdec2,postdec1
  2626   00A5F0  EF04  F053         	goto	l8788
  2627   00A5F4                     l8786:
  2628   00A5F4  EE20 F002          	lfsr	2,2
  2629   00A5F8  5011               	movf	___simple_search_fl@c^0,w,c
  2630   00A5FA  26D9               	addwf	fsr2l,f,c
  2631   00A5FC  5012               	movf	(___simple_search_fl@c+1)^0,w,c
  2632   00A5FE  22DA               	addwfc	fsr2h,f,c
  2633   00A600  CFDE F119          	movff	postinc2,___freelist
  2634   00A604  CFDD F11A          	movff	postdec2,___freelist+1
  2635   00A608                     l8788:
  2636   00A608  0E02               	movlw	2
  2637   00A60A  2411               	addwf	___simple_search_fl@c^0,w,c
  2638   00A60C  6E01               	movwf	?___simple_search_fl^0,c
  2639   00A60E  0E00               	movlw	0
  2640   00A610  2012               	addwfc	(___simple_search_fl@c+1)^0,w,c
  2641   00A612  6E02               	movwf	(?___simple_search_fl+1)^0,c
  2642   00A614  EFE9  F053         	goto	l2176
  2643   00A618                     l8792:
  2644   00A618  C011  FFD9         	movff	___simple_search_fl@c,fsr2l
  2645   00A61C  C012  FFDA         	movff	___simple_search_fl@c+1,fsr2h
  2646   00A620  50DE               	movf	postinc2,w,c
  2647   00A622  5C01               	subwf	___simple_search_fl@n^0,w,c
  2648   00A624  50DE               	movf	postinc2,w,c
  2649   00A626  5802               	subwfb	(___simple_search_fl@n+1)^0,w,c
  2650   00A628  B0D8               	btfsc	status,0,c
  2651   00A62A  EF19  F053         	goto	u11291
  2652   00A62E  EF1B  F053         	goto	u11290
  2653   00A632                     u11291:
  2654   00A632  EF41  F053         	goto	l2184
  2655   00A636                     u11290:
  2656   00A636  5013               	movf	___simple_search_fl@best^0,w,c
  2657   00A638  1014               	iorwf	(___simple_search_fl@best+1)^0,w,c
  2658   00A63A  B4D8               	btfsc	status,2,c
  2659   00A63C  EF22  F053         	goto	u11301
  2660   00A640  EF24  F053         	goto	u11300
  2661   00A644                     u11301:
  2662   00A644  EF39  F053         	goto	l8800
  2663   00A648                     u11300:
  2664   00A648  C013  FFD9         	movff	___simple_search_fl@best,fsr2l
  2665   00A64C  C014  FFDA         	movff	___simple_search_fl@best+1,fsr2h
  2666   00A650  C011  FFE1         	movff	___simple_search_fl@c,fsr1l
  2667   00A654  C012  FFE2         	movff	___simple_search_fl@c+1,fsr1h
  2668   00A658  50DE               	movf	postinc2,w,c
  2669   00A65A  5CE6               	subwf	postinc1,w,c
  2670   00A65C  50DE               	movf	postinc2,w,c
  2671   00A65E  58E6               	subwfb	postinc1,w,c
  2672   00A660  A0D8               	btfss	status,0,c
  2673   00A662  EF35  F053         	goto	u11311
  2674   00A666  EF37  F053         	goto	u11310
  2675   00A66A                     u11311:
  2676   00A66A  EF39  F053         	goto	l8800
  2677   00A66E                     u11310:
  2678   00A66E  EF41  F053         	goto	l2184
  2679   00A672                     l8800:
  2680   00A672  C011  F013         	movff	___simple_search_fl@c,___simple_search_fl@best
  2681   00A676  C012  F014         	movff	___simple_search_fl@c+1,___simple_search_fl@best+1
  2682   00A67A  C00D  F009         	movff	___simple_search_fl@last,___simple_search_fl@best_last
  2683   00A67E  C00E  F00A         	movff	___simple_search_fl@last+1,___simple_search_fl@best_last+1
  2684   00A682                     l2184:
  2685   00A682  C011  F00D         	movff	___simple_search_fl@c,___simple_search_fl@last
  2686   00A686  C012  F00E         	movff	___simple_search_fl@c+1,___simple_search_fl@last+1
  2687   00A68A  EE20 F002          	lfsr	2,2
  2688   00A68E  5011               	movf	___simple_search_fl@c^0,w,c
  2689   00A690  26D9               	addwf	fsr2l,f,c
  2690   00A692  5012               	movf	(___simple_search_fl@c+1)^0,w,c
  2691   00A694  22DA               	addwfc	fsr2h,f,c
  2692   00A696  CFDE F011          	movff	postinc2,___simple_search_fl@c
  2693   00A69A  CFDD F012          	movff	postdec2,___simple_search_fl@c+1
  2694   00A69E                     l8804:
  2695   00A69E  5011               	movf	___simple_search_fl@c^0,w,c
  2696   00A6A0  1012               	iorwf	(___simple_search_fl@c+1)^0,w,c
  2697   00A6A2  A4D8               	btfss	status,2,c
  2698   00A6A4  EF56  F053         	goto	u11321
  2699   00A6A8  EF58  F053         	goto	u11320
  2700   00A6AC                     u11321:
  2701   00A6AC  EFCF  F052         	goto	l8780
  2702   00A6B0                     u11320:
  2703   00A6B0  5013               	movf	___simple_search_fl@best^0,w,c
  2704   00A6B2  1014               	iorwf	(___simple_search_fl@best+1)^0,w,c
  2705   00A6B4  B4D8               	btfsc	status,2,c
  2706   00A6B6  EF5F  F053         	goto	u11331
  2707   00A6BA  EF61  F053         	goto	u11330
  2708   00A6BE                     u11331:
  2709   00A6BE  EFC3  F052         	goto	l8774
  2710   00A6C2                     u11330:
  2711   00A6C2  EE20 F002          	lfsr	2,2
  2712   00A6C6  5013               	movf	___simple_search_fl@best^0,w,c
  2713   00A6C8  26D9               	addwf	fsr2l,f,c
  2714   00A6CA  5014               	movf	(___simple_search_fl@best+1)^0,w,c
  2715   00A6CC  22DA               	addwfc	fsr2h,f,c
  2716   00A6CE  CFDE F00F          	movff	postinc2,___simple_search_fl@next
  2717   00A6D2  CFDD F010          	movff	postdec2,___simple_search_fl@next+1
  2718   00A6D6  C013  FFD9         	movff	___simple_search_fl@best,fsr2l
  2719   00A6DA  C014  FFDA         	movff	___simple_search_fl@best+1,fsr2h
  2720   00A6DE  CFDE F003          	movff	postinc2,??___simple_search_fl
  2721   00A6E2  CFDD F004          	movff	postdec2,??___simple_search_fl+1
  2722   00A6E6  5001               	movf	___simple_search_fl@n^0,w,c
  2723   00A6E8  5E03               	subwf	??___simple_search_fl^0,f,c
  2724   00A6EA  5002               	movf	(___simple_search_fl@n+1)^0,w,c
  2725   00A6EC  5A04               	subwfb	(??___simple_search_fl+1)^0,f,c
  2726   00A6EE  5004               	movf	(??___simple_search_fl+1)^0,w,c
  2727   00A6F0  E109               	bnz	u11340
  2728   00A6F2  0E05               	movlw	5
  2729   00A6F4  5C03               	subwf	??___simple_search_fl^0,w,c
  2730   00A6F6  A0D8               	btfss	status,0,c
  2731   00A6F8  EF80  F053         	goto	u11341
  2732   00A6FC  EF82  F053         	goto	u11340
  2733   00A700                     u11341:
  2734   00A700  EFC6  F053         	goto	l2187
  2735   00A704                     u11340:
  2736   00A704  C013  FFD9         	movff	___simple_search_fl@best,fsr2l
  2737   00A708  C014  FFDA         	movff	___simple_search_fl@best+1,fsr2h
  2738   00A70C  CFDE F003          	movff	postinc2,??___simple_search_fl
  2739   00A710  CFDD F004          	movff	postdec2,??___simple_search_fl+1
  2740   00A714  5001               	movf	___simple_search_fl@n^0,w,c
  2741   00A716  5E03               	subwf	??___simple_search_fl^0,f,c
  2742   00A718  5002               	movf	(___simple_search_fl@n+1)^0,w,c
  2743   00A71A  5A04               	subwfb	(??___simple_search_fl+1)^0,f,c
  2744   00A71C  0EFE               	movlw	254
  2745   00A71E  2403               	addwf	??___simple_search_fl^0,w,c
  2746   00A720  6E07               	movwf	___simple_search_fl@remaining_size^0,c
  2747   00A722  0EFF               	movlw	255
  2748   00A724  2004               	addwfc	(??___simple_search_fl+1)^0,w,c
  2749   00A726  6E08               	movwf	(___simple_search_fl@remaining_size+1)^0,c
  2750   00A728  C013  FFD9         	movff	___simple_search_fl@best,fsr2l
  2751   00A72C  C014  FFDA         	movff	___simple_search_fl@best+1,fsr2h
  2752   00A730  C001  FFDE         	movff	___simple_search_fl@n,postinc2
  2753   00A734  C002  FFDD         	movff	___simple_search_fl@n+1,postdec2
  2754   00A738  C013  FFD9         	movff	___simple_search_fl@best,fsr2l
  2755   00A73C  C014  FFDA         	movff	___simple_search_fl@best+1,fsr2h
  2756   00A740  CFDE F003          	movff	postinc2,??___simple_search_fl
  2757   00A744  CFDD F004          	movff	postdec2,??___simple_search_fl+1
  2758   00A748  5003               	movf	??___simple_search_fl^0,w,c
  2759   00A74A  2413               	addwf	___simple_search_fl@best^0,w,c
  2760   00A74C  6E05               	movwf	(??___simple_search_fl+2)^0,c
  2761   00A74E  5004               	movf	(??___simple_search_fl+1)^0,w,c
  2762   00A750  2014               	addwfc	(___simple_search_fl@best+1)^0,w,c
  2763   00A752  6E06               	movwf	(??___simple_search_fl+3)^0,c
  2764   00A754  0E02               	movlw	2
  2765   00A756  2405               	addwf	(??___simple_search_fl+2)^0,w,c
  2766   00A758  6E0B               	movwf	___simple_search_fl@split^0,c
  2767   00A75A  0E00               	movlw	0
  2768   00A75C  2006               	addwfc	(??___simple_search_fl+3)^0,w,c
  2769   00A75E  6E0C               	movwf	(___simple_search_fl@split+1)^0,c
  2770   00A760  C00B  FFD9         	movff	___simple_search_fl@split,fsr2l
  2771   00A764  C00C  FFDA         	movff	___simple_search_fl@split+1,fsr2h
  2772   00A768  C007  FFDE         	movff	___simple_search_fl@remaining_size,postinc2
  2773   00A76C  C008  FFDD         	movff	___simple_search_fl@remaining_size+1,postdec2
  2774   00A770  EE20 F002          	lfsr	2,2
  2775   00A774  500B               	movf	___simple_search_fl@split^0,w,c
  2776   00A776  26D9               	addwf	fsr2l,f,c
  2777   00A778  500C               	movf	(___simple_search_fl@split+1)^0,w,c
  2778   00A77A  22DA               	addwfc	fsr2h,f,c
  2779   00A77C  C00F  FFDE         	movff	___simple_search_fl@next,postinc2
  2780   00A780  C010  FFDD         	movff	___simple_search_fl@next+1,postdec2
  2781   00A784  C00B  F00F         	movff	___simple_search_fl@split,___simple_search_fl@next
  2782   00A788  C00C  F010         	movff	___simple_search_fl@split+1,___simple_search_fl@next+1
  2783   00A78C                     l2187:
  2784   00A78C  5013               	movf	___simple_search_fl@best^0,w,c
  2785   00A78E  0101               	movlb	1	; () banked
  2786   00A790  1919               	xorwf	___freelist& (0+255),w,b
  2787   00A792  E107               	bnz	u11351
  2788   00A794  5014               	movf	(___simple_search_fl@best+1)^0,w,c
  2789   00A796  191A               	xorwf	(___freelist+1)& (0+255),w,b
  2790   00A798  A4D8               	btfss	status,2,c
  2791   00A79A  EFD1  F053         	goto	u11351
  2792   00A79E  EFD3  F053         	goto	u11350
  2793   00A7A2                     u11351:
  2794   00A7A2  EFD9  F053         	goto	l8820
  2795   00A7A6                     u11350:
  2796   00A7A6                     
  2797                           ; BSR set to: 1
  2798   00A7A6  C00F  F119         	movff	___simple_search_fl@next,___freelist
  2799   00A7AA  C010  F11A         	movff	___simple_search_fl@next+1,___freelist+1
  2800   00A7AE  EFE3  F053         	goto	l8822
  2801   00A7B2                     l8820:
  2802                           
  2803                           ; BSR set to: 1
  2804   00A7B2  EE20 F002          	lfsr	2,2
  2805   00A7B6  5009               	movf	___simple_search_fl@best_last^0,w,c
  2806   00A7B8  26D9               	addwf	fsr2l,f,c
  2807   00A7BA  500A               	movf	(___simple_search_fl@best_last+1)^0,w,c
  2808   00A7BC  22DA               	addwfc	fsr2h,f,c
  2809   00A7BE  C00F  FFDE         	movff	___simple_search_fl@next,postinc2
  2810   00A7C2  C010  FFDD         	movff	___simple_search_fl@next+1,postdec2
  2811   00A7C6                     l8822:
  2812                           
  2813                           ; BSR set to: 1
  2814   00A7C6  0E02               	movlw	2
  2815   00A7C8  2413               	addwf	___simple_search_fl@best^0,w,c
  2816   00A7CA  6E01               	movwf	?___simple_search_fl^0,c
  2817   00A7CC  0E00               	movlw	0
  2818   00A7CE  2014               	addwfc	(___simple_search_fl@best+1)^0,w,c
  2819   00A7D0  6E02               	movwf	(?___simple_search_fl+1)^0,c
  2820   00A7D2                     l2176:
  2821   00A7D2  0012               	return		;funcret
  2822   00A7D4                     __end_of___simple_search_fl:
  2823                           	callstack 0
  2824                           
  2825 ;; *************** function ___expand_heap *****************
  2826 ;; Defined at:
  2827 ;;		line 14 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\expand_heap.c"
  2828 ;; Parameters:    Size  Location     Type
  2829 ;;  pn              2    0[COMRAM] PTR unsigned int 
  2830 ;;		 -> malloc@m(2), 
  2831 ;; Auto vars:     Size  Location     Type
  2832 ;;  new_brkp        2    6[COMRAM] PTR unsigned char 
  2833 ;;		 -> __heap_hi(0), NULL(0), 
  2834 ;;  n               2    4[COMRAM] unsigned int 
  2835 ;; Return value:  Size  Location     Type
  2836 ;;                  2    0[COMRAM] PTR void 
  2837 ;; Registers used:
  2838 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2839 ;; Tracked objects:
  2840 ;;		On entry : 0/0
  2841 ;;		On exit  : 0/0
  2842 ;;		Unchanged: 0/0
  2843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2844 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2845 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2846 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2847 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2848 ;;Total ram usage:        8 bytes
  2849 ;; Hardware stack levels used: 1
  2850 ;; This function calls:
  2851 ;;		Nothing
  2852 ;; This function is called by:
  2853 ;;		_malloc
  2854 ;; This function uses a non-reentrant model
  2855 ;;
  2856                           
  2857                           	psect	text4
  2858   008682                     __ptext4:
  2859                           	callstack 0
  2860   008682                     ___expand_heap:
  2861                           	callstack 28
  2862   008682  C001  FFD9         	movff	___expand_heap@pn,fsr2l
  2863   008686  C002  FFDA         	movff	___expand_heap@pn+1,fsr2h
  2864   00868A  CFDE F005          	movff	postinc2,___expand_heap@n
  2865   00868E  CFDD F006          	movff	postdec2,___expand_heap@n+1
  2866   008692  0101               	movlb	1	; () banked
  2867   008694  511B               	movf	_brkp& (0+255),w,b
  2868   008696  111C               	iorwf	(_brkp+1)& (0+255),w,b
  2869   008698  A4D8               	btfss	status,2,c
  2870   00869A  EF51  F043         	goto	u11361
  2871   00869E  EF53  F043         	goto	u11360
  2872   0086A2                     u11361:
  2873   0086A2  EF57  F043         	goto	l2163
  2874   0086A6                     u11360:
  2875   0086A6                     
  2876                           ; BSR set to: 1
  2877   0086A6  0E8E               	movlw	low ___heap_hi
  2878   0086A8  6F1B               	movwf	_brkp& (0+255),b
  2879   0086AA  0E06               	movlw	high ___heap_hi
  2880   0086AC  6F1C               	movwf	(_brkp+1)& (0+255),b
  2881   0086AE                     l2163:
  2882                           
  2883                           ; BSR set to: 1
  2884   0086AE  5006               	movf	(___expand_heap@n+1)^0,w,c
  2885   0086B0  E107               	bnz	u11371
  2886   0086B2  0E06               	movlw	6
  2887   0086B4  5C05               	subwf	___expand_heap@n^0,w,c
  2888   0086B6  B0D8               	btfsc	status,0,c
  2889   0086B8  EF60  F043         	goto	u11371
  2890   0086BC  EF62  F043         	goto	u11370
  2891   0086C0                     u11371:
  2892   0086C0  EF66  F043         	goto	l8838
  2893   0086C4                     u11370:
  2894   0086C4                     
  2895                           ; BSR set to: 1
  2896   0086C4  0E00               	movlw	0
  2897   0086C6  6E06               	movwf	(___expand_heap@n+1)^0,c
  2898   0086C8  0E06               	movlw	6
  2899   0086CA  6E05               	movwf	___expand_heap@n^0,c
  2900   0086CC                     l8838:
  2901                           
  2902                           ; BSR set to: 1
  2903   0086CC  5005               	movf	___expand_heap@n^0,w,c
  2904   0086CE  5D1B               	subwf	_brkp& (0+255),w,b
  2905   0086D0  6E07               	movwf	___expand_heap@new_brkp^0,c
  2906   0086D2  5006               	movf	(___expand_heap@n+1)^0,w,c
  2907   0086D4  591C               	subwfb	(_brkp+1)& (0+255),w,b
  2908   0086D6  6E08               	movwf	(___expand_heap@new_brkp+1)^0,c
  2909   0086D8                     
  2910                           ; BSR set to: 1
  2911   0086D8  0EE0               	movlw	low ___heap_lo
  2912   0086DA  6E03               	movwf	??___expand_heap^0,c
  2913   0086DC  0E01               	movlw	high ___heap_lo
  2914   0086DE  6E04               	movwf	(??___expand_heap+1)^0,c
  2915   0086E0  5003               	movf	??___expand_heap^0,w,c
  2916   0086E2  5C07               	subwf	___expand_heap@new_brkp^0,w,c
  2917   0086E4  5004               	movf	(??___expand_heap+1)^0,w,c
  2918   0086E6  5808               	subwfb	(___expand_heap@new_brkp+1)^0,w,c
  2919   0086E8  A0D8               	btfss	status,0,c
  2920   0086EA  EF79  F043         	goto	u11381
  2921   0086EE  EF7B  F043         	goto	u11380
  2922   0086F2                     u11381:
  2923   0086F2  EF86  F043         	goto	l8844
  2924   0086F6                     u11380:
  2925   0086F6                     
  2926                           ; BSR set to: 1
  2927   0086F6  511B               	movf	_brkp& (0+255),w,b
  2928   0086F8  5C07               	subwf	___expand_heap@new_brkp^0,w,c
  2929   0086FA  511C               	movf	(_brkp+1)& (0+255),w,b
  2930   0086FC  5808               	subwfb	(___expand_heap@new_brkp+1)^0,w,c
  2931   0086FE  A0D8               	btfss	status,0,c
  2932   008700  EF84  F043         	goto	u11391
  2933   008704  EF86  F043         	goto	u11390
  2934   008708                     u11391:
  2935   008708  EF90  F043         	goto	l8850
  2936   00870C                     u11390:
  2937   00870C                     l8844:
  2938                           
  2939                           ; BSR set to: 1
  2940   00870C  0E00               	movlw	0
  2941   00870E  6F1E               	movwf	(_errno+1)& (0+255),b
  2942   008710  0E0C               	movlw	12
  2943   008712  6F1D               	movwf	_errno& (0+255),b
  2944   008714                     
  2945                           ; BSR set to: 1
  2946   008714  0E00               	movlw	0
  2947   008716  6E01               	movwf	?___expand_heap^0,c
  2948   008718  0E00               	movlw	0
  2949   00871A  6E02               	movwf	(?___expand_heap+1)^0,c
  2950   00871C  EF98  F043         	goto	l2168
  2951   008720                     l8850:
  2952                           
  2953                           ; BSR set to: 1
  2954   008720  C007  F11B         	movff	___expand_heap@new_brkp,_brkp
  2955   008724  C008  F11C         	movff	___expand_heap@new_brkp+1,_brkp+1
  2956   008728  C11B  F001         	movff	_brkp,?___expand_heap
  2957   00872C  C11C  F002         	movff	_brkp+1,?___expand_heap+1
  2958   008730                     l2168:
  2959                           
  2960                           ; BSR set to: 1
  2961   008730  0012               	return		;funcret
  2962   008732                     __end_of___expand_heap:
  2963                           	callstack 0
  2964                           
  2965 ;; *************** function _f_write *****************
  2966 ;; Defined at:
  2967 ;;		line 3810 in file "mcc_generated_files/fatfs/ff.c"
  2968 ;; Parameters:    Size  Location     Type
  2969 ;;  fp              2   85[BANK0 ] PTR struct .
  2970 ;;		 -> Fil(546), pb.fp(3), pb.fp(3), pb.fp(3), 
  2971 ;;		 -> file(546), 
  2972 ;;  buff            2   87[BANK0 ] PTR const void 
  2973 ;;		 -> pb.buf(64), pb.buf(64), pb.buf(64), __heap_hi(0), 
  2974 ;;		 -> RAM(3895), f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), 
  2975 ;;		 -> FatFsDemo_Tasks@data(13), NULL(0), 
  2976 ;;  btw             2   89[BANK0 ] unsigned int 
  2977 ;;  bw              2   91[BANK0 ] PTR unsigned int 
  2978 ;;		 -> write_to_file@bw(2), putc_flush@nw(2), putc_bfd@n(2), FatFsDemo_Tasks@actualLength(2), 
  2979 ;; Auto vars:     Size  Location     Type
  2980 ;;  sect            4  122[BANK0 ] unsigned long 
  2981 ;;  clst            4  116[BANK0 ] unsigned long 
  2982 ;;  fs              2  126[BANK0 ] PTR struct .
  2983 ;;		 -> FatFs(563), drive(563), NULL(0), 
  2984 ;;  wcnt            2  120[BANK0 ] unsigned int 
  2985 ;;  cc              2  114[BANK0 ] unsigned int 
  2986 ;;  csect           2  112[BANK0 ] unsigned int 
  2987 ;;  wbuff           2  110[BANK0 ] PTR const unsigned char 
  2988 ;;		 -> pb.buf(64), pb.buf(64), pb.buf(64), __heap_hi(0), 
  2989 ;;		 -> RAM(3895), f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), 
  2990 ;;		 -> FatFsDemo_Tasks@data(13), NULL(0), 
  2991 ;;  res             1  109[BANK0 ] enum E68
  2992 ;; Return value:  Size  Location     Type
  2993 ;;                  1    wreg      enum E68
  2994 ;; Registers used:
  2995 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  2996 ;; Tracked objects:
  2997 ;;		On entry : 0/0
  2998 ;;		On exit  : 0/0
  2999 ;;		Unchanged: 0/0
  3000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3001 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3002 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3003 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3004 ;;      Totals:         0      43       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3005 ;;Total ram usage:       43 bytes
  3006 ;; Hardware stack levels used: 1
  3007 ;; Hardware stack levels required when called: 9
  3008 ;; This function calls:
  3009 ;;		_clst2sect
  3010 ;;		_create_chain
  3011 ;;		_disk_read
  3012 ;;		_disk_write
  3013 ;;		_mem_cpy
  3014 ;;		_validate
  3015 ;; This function is called by:
  3016 ;;		_write_to_file
  3017 ;;		_FatFsDemo_Tasks
  3018 ;;		_putc_bfd
  3019 ;;		_putc_flush
  3020 ;; This function uses a non-reentrant model
  3021 ;;
  3022                           
  3023                           	psect	text5
  3024   00E98C                     __ptext5:
  3025                           	callstack 0
  3026   00E98C                     _f_write:
  3027                           	callstack 20
  3028   00E98C                     
  3029                           ;mcc_generated_files/fatfs/ff.c: 3811:  FIL* fp,;mcc_generated_files/fatfs/ff.c: 3812:  
      +                          const void* buff,;mcc_generated_files/fatfs/ff.c: 3813:  UINT btw,;mcc_generated_files/f
      +                          atfs/ff.c: 3814:  UINT* bw;mcc_generated_files/fatfs/ff.c: 3816: {;mcc_generated_files/f
      +                          atfs/ff.c: 3817:  FRESULT res;;mcc_generated_files/fatfs/ff.c: 3818:  FATFS *fs;;mcc_gen
      +                          erated_files/fatfs/ff.c: 3819:  DWORD clst, sect;;mcc_generated_files/fatfs/ff.c: 3820: 
      +                           UINT wcnt, cc, csect;;mcc_generated_files/fatfs/ff.c: 3821:  const BYTE *wbuff = (const
      +                           BYTE*)buff;
  3030   00E98C  C0B7  F0CE         	movff	f_write@buff,f_write@wbuff
  3031   00E990  C0B8  F0CF         	movff	f_write@buff+1,f_write@wbuff+1
  3032   00E994                     
  3033                           ;mcc_generated_files/fatfs/ff.c: 3824:  *bw = 0;
  3034   00E994  C0BB  FFD9         	movff	f_write@bw,fsr2l
  3035   00E998  C0BC  FFDA         	movff	f_write@bw+1,fsr2h
  3036   00E99C  0E00               	movlw	0
  3037   00E99E  6EDE               	movwf	postinc2,c
  3038   00E9A0  0E00               	movlw	0
  3039   00E9A2  6EDD               	movwf	postdec2,c
  3040   00E9A4                     
  3041                           ;mcc_generated_files/fatfs/ff.c: 3825:  res = validate(&fp->obj, &fs);
  3042   00E9A4  C0B5  F005         	movff	f_write@fp,validate@obj
  3043   00E9A8  C0B6  F006         	movff	f_write@fp+1,validate@obj+1
  3044   00E9AC  0EDE               	movlw	low f_write@fs
  3045   00E9AE  6E07               	movwf	validate@rfs^0,c
  3046   00E9B0  0E00               	movlw	high f_write@fs
  3047   00E9B2  6E08               	movwf	(validate@rfs+1)^0,c
  3048   00E9B4  ECFA  F045         	call	_validate	;wreg free
  3049   00E9B8  0100               	movlb	0	; () banked
  3050   00E9BA  6FCD               	movwf	f_write@res& (0+255),b
  3051   00E9BC                     
  3052                           ; BSR set to: 0
  3053                           ;mcc_generated_files/fatfs/ff.c: 3826:  if (res != FR_OK || (res = (FRESULT)fp->err) != 
      +                          FR_OK) return res;
  3054   00E9BC  51CD               	movf	f_write@res& (0+255),w,b
  3055   00E9BE  A4D8               	btfss	status,2,c
  3056   00E9C0  EFE4  F074         	goto	u11771
  3057   00E9C4  EFE6  F074         	goto	u11770
  3058   00E9C8                     u11771:
  3059   00E9C8  EFF6  F074         	goto	l9050
  3060   00E9CC                     u11770:
  3061   00E9CC                     
  3062                           ; BSR set to: 0
  3063   00E9CC  EE20 F00F          	lfsr	2,15
  3064   00E9D0  51B5               	movf	f_write@fp& (0+255),w,b
  3065   00E9D2  26D9               	addwf	fsr2l,f,c
  3066   00E9D4  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  3067   00E9D6  22DA               	addwfc	fsr2h,f,c
  3068   00E9D8  50DF               	movf	indf2,w,c
  3069   00E9DA  6FCD               	movwf	f_write@res& (0+255),b
  3070   00E9DC  51CD               	movf	f_write@res& (0+255),w,b
  3071   00E9DE  B4D8               	btfsc	status,2,c
  3072   00E9E0  EFF4  F074         	goto	u11781
  3073   00E9E4  EFF6  F074         	goto	u11780
  3074   00E9E8                     u11781:
  3075   00E9E8  EFF9  F074         	goto	l9054
  3076   00E9EC                     u11780:
  3077   00E9EC                     l9050:
  3078                           
  3079                           ; BSR set to: 0
  3080   00E9EC  51CD               	movf	f_write@res& (0+255),w,b
  3081   00E9EE  EF02  F079         	goto	l669
  3082   00E9F2                     l9054:
  3083                           
  3084                           ; BSR set to: 0
  3085                           ;mcc_generated_files/fatfs/ff.c: 3827:  if (!(fp->flag & 0x02)) return FR_DENIED;
  3086   00E9F2  EE20 F00E          	lfsr	2,14
  3087   00E9F6  51B5               	movf	f_write@fp& (0+255),w,b
  3088   00E9F8  26D9               	addwf	fsr2l,f,c
  3089   00E9FA  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  3090   00E9FC  22DA               	addwfc	fsr2h,f,c
  3091   00E9FE  B2DF               	btfsc	indf2,1,c
  3092   00EA00  EF04  F075         	goto	u11791
  3093   00EA04  EF06  F075         	goto	u11790
  3094   00EA08                     u11791:
  3095   00EA08  EF09  F075         	goto	l9062
  3096   00EA0C                     u11790:
  3097   00EA0C                     
  3098                           ; BSR set to: 0
  3099   00EA0C  0E07               	movlw	7
  3100   00EA0E  EF02  F079         	goto	l669
  3101   00EA12                     l9062:
  3102                           
  3103                           ; BSR set to: 0
  3104   00EA12  EE20 F010          	lfsr	2,16
  3105   00EA16  51B5               	movf	f_write@fp& (0+255),w,b
  3106   00EA18  26D9               	addwf	fsr2l,f,c
  3107   00EA1A  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  3108   00EA1C  22DA               	addwfc	fsr2h,f,c
  3109   00EA1E  EE10 F010          	lfsr	1,16
  3110   00EA22  51B5               	movf	f_write@fp& (0+255),w,b
  3111   00EA24  26E1               	addwf	fsr1l,f,c
  3112   00EA26  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  3113   00EA28  22E2               	addwfc	fsr1h,f,c
  3114   00EA2A  CFE6 F0C1          	movff	postinc1,??_f_write+4
  3115   00EA2E  CFE6 F0C2          	movff	postinc1,??_f_write+5
  3116   00EA32  CFE6 F0C3          	movff	postinc1,??_f_write+6
  3117   00EA36  CFE6 F0C4          	movff	postinc1,??_f_write+7
  3118   00EA3A  51B9               	movf	f_write@btw& (0+255),w,b
  3119   00EA3C  25C1               	addwf	(??_f_write+4)& (0+255),w,b
  3120   00EA3E  6FC5               	movwf	(??_f_write+8)& (0+255),b
  3121   00EA40  51BA               	movf	(f_write@btw+1)& (0+255),w,b
  3122   00EA42  21C2               	addwfc	(??_f_write+5)& (0+255),w,b
  3123   00EA44  6FC6               	movwf	(??_f_write+9)& (0+255),b
  3124   00EA46  0E00               	movlw	0
  3125   00EA48  21C3               	addwfc	(??_f_write+6)& (0+255),w,b
  3126   00EA4A  6FC7               	movwf	(??_f_write+10)& (0+255),b
  3127   00EA4C  0E00               	movlw	0
  3128   00EA4E  21C4               	addwfc	(??_f_write+7)& (0+255),w,b
  3129   00EA50  6FC8               	movwf	(??_f_write+11)& (0+255),b
  3130   00EA52  50DE               	movf	postinc2,w,c
  3131   00EA54  5DC5               	subwf	(??_f_write+8)& (0+255),w,b
  3132   00EA56  50DE               	movf	postinc2,w,c
  3133   00EA58  59C6               	subwfb	(??_f_write+9)& (0+255),w,b
  3134   00EA5A  50DE               	movf	postinc2,w,c
  3135   00EA5C  59C7               	subwfb	(??_f_write+10)& (0+255),w,b
  3136   00EA5E  50DE               	movf	postinc2,w,c
  3137   00EA60  59C8               	subwfb	(??_f_write+11)& (0+255),w,b
  3138   00EA62  B0D8               	btfsc	status,0,c
  3139   00EA64  EF36  F075         	goto	u11801
  3140   00EA68  EF38  F075         	goto	u11800
  3141   00EA6C                     u11801:
  3142   00EA6C  EFF0  F078         	goto	l9188
  3143   00EA70                     u11800:
  3144   00EA70                     
  3145                           ; BSR set to: 0
  3146                           ;mcc_generated_files/fatfs/ff.c: 3831:   btw = (UINT)(0xFFFFFFFF - (DWORD)fp->fptr);
  3147   00EA70  EE20 F010          	lfsr	2,16
  3148   00EA74  51B5               	movf	f_write@fp& (0+255),w,b
  3149   00EA76  26D9               	addwf	fsr2l,f,c
  3150   00EA78  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  3151   00EA7A  22DA               	addwfc	fsr2h,f,c
  3152   00EA7C  CFDE F0BD          	movff	postinc2,??_f_write
  3153   00EA80  CFDD F0BE          	movff	postdec2,??_f_write+1
  3154   00EA84  1DBD               	comf	??_f_write& (0+255),w,b
  3155   00EA86  6FB9               	movwf	f_write@btw& (0+255),b
  3156   00EA88  1DBE               	comf	(??_f_write+1)& (0+255),w,b
  3157   00EA8A  6FBA               	movwf	(f_write@btw+1)& (0+255),b
  3158   00EA8C  EFF0  F078         	goto	l9188
  3159   00EA90                     l9066:
  3160                           
  3161                           ; BSR set to: 0
  3162                           ;mcc_generated_files/fatfs/ff.c: 3835:   btw -= wcnt, *bw += wcnt, wbuff += wcnt, fp->fp
      +                          tr += wcnt, fp->obj.objsize = (fp->fptr > fp->obj.objsize) ? fp->fptr : fp->obj.objsize)
      +                           {;mcc_generated_files/fatfs/ff.c: 3836:   if (fp->fptr % ((UINT)512) == 0) {
  3163   00EA90  EE20 F010          	lfsr	2,16
  3164   00EA94  51B5               	movf	f_write@fp& (0+255),w,b
  3165   00EA96  26D9               	addwf	fsr2l,f,c
  3166   00EA98  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  3167   00EA9A  22DA               	addwfc	fsr2h,f,c
  3168   00EA9C  0EFF               	movlw	255
  3169   00EA9E  14DE               	andwf	postinc2,w,c
  3170   00EAA0  6FBD               	movwf	??_f_write& (0+255),b
  3171   00EAA2  0E01               	movlw	1
  3172   00EAA4  14DE               	andwf	postinc2,w,c
  3173   00EAA6  6FBE               	movwf	(??_f_write+1)& (0+255),b
  3174   00EAA8  0E00               	movlw	0
  3175   00EAAA  14DE               	andwf	postinc2,w,c
  3176   00EAAC  6FBF               	movwf	(??_f_write+2)& (0+255),b
  3177   00EAAE  0E00               	movlw	0
  3178   00EAB0  14DE               	andwf	postinc2,w,c
  3179   00EAB2  6FC0               	movwf	(??_f_write+3)& (0+255),b
  3180   00EAB4  51BD               	movf	??_f_write& (0+255),w,b
  3181   00EAB6  11BE               	iorwf	(??_f_write+1)& (0+255),w,b
  3182   00EAB8  11BF               	iorwf	(??_f_write+2)& (0+255),w,b
  3183   00EABA  11C0               	iorwf	(??_f_write+3)& (0+255),w,b
  3184   00EABC  A4D8               	btfss	status,2,c
  3185   00EABE  EF63  F075         	goto	u11811
  3186   00EAC2  EF65  F075         	goto	u11810
  3187   00EAC6                     u11811:
  3188   00EAC6  EF36  F078         	goto	l676
  3189   00EACA                     u11810:
  3190   00EACA                     
  3191                           ; BSR set to: 0
  3192                           ;mcc_generated_files/fatfs/ff.c: 3837:    csect = (UINT)(fp->fptr / ((UINT)512)) & (fs->
      +                          csize - 1);
  3193   00EACA  EE20 F010          	lfsr	2,16
  3194   00EACE  51B5               	movf	f_write@fp& (0+255),w,b
  3195   00EAD0  26D9               	addwf	fsr2l,f,c
  3196   00EAD2  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  3197   00EAD4  22DA               	addwfc	fsr2h,f,c
  3198   00EAD6  CFDE F0BD          	movff	postinc2,??_f_write
  3199   00EADA  CFDE F0BE          	movff	postinc2,??_f_write+1
  3200   00EADE  CFDE F0BF          	movff	postinc2,??_f_write+2
  3201   00EAE2  CFDE F0C0          	movff	postinc2,??_f_write+3
  3202   00EAE6  0E0A               	movlw	10
  3203   00EAE8  EF7B  F075         	goto	u11820
  3204   00EAEC                     u11825:
  3205   00EAEC  90D8               	bcf	status,0,c
  3206   00EAEE  33C0               	rrcf	(??_f_write+3)& (0+255),f,b
  3207   00EAF0  33BF               	rrcf	(??_f_write+2)& (0+255),f,b
  3208   00EAF2  33BE               	rrcf	(??_f_write+1)& (0+255),f,b
  3209   00EAF4  33BD               	rrcf	??_f_write& (0+255),f,b
  3210   00EAF6                     u11820:
  3211   00EAF6  2EE8               	decfsz	wreg,f,c
  3212   00EAF8  EF76  F075         	goto	u11825
  3213   00EAFC  EE20 F009          	lfsr	2,9
  3214   00EB00  51DE               	movf	f_write@fs& (0+255),w,b
  3215   00EB02  26D9               	addwf	fsr2l,f,c
  3216   00EB04  51DF               	movf	(f_write@fs+1)& (0+255),w,b
  3217   00EB06  22DA               	addwfc	fsr2h,f,c
  3218   00EB08  CFDE F0C1          	movff	postinc2,??_f_write+4
  3219   00EB0C  CFDD F0C2          	movff	postdec2,??_f_write+5
  3220   00EB10  0EFF               	movlw	255
  3221   00EB12  25C1               	addwf	(??_f_write+4)& (0+255),w,b
  3222   00EB14  6FC3               	movwf	(??_f_write+6)& (0+255),b
  3223   00EB16  0EFF               	movlw	255
  3224   00EB18  21C2               	addwfc	(??_f_write+5)& (0+255),w,b
  3225   00EB1A  6FC4               	movwf	(??_f_write+7)& (0+255),b
  3226   00EB1C  51BD               	movf	??_f_write& (0+255),w,b
  3227   00EB1E  15C3               	andwf	(??_f_write+6)& (0+255),w,b
  3228   00EB20  6FD0               	movwf	f_write@csect& (0+255),b
  3229   00EB22  51BE               	movf	(??_f_write+1)& (0+255),w,b
  3230   00EB24  15C4               	andwf	(??_f_write+7)& (0+255),w,b
  3231   00EB26  6FD1               	movwf	(f_write@csect+1)& (0+255),b
  3232   00EB28                     
  3233                           ; BSR set to: 0
  3234                           ;mcc_generated_files/fatfs/ff.c: 3838:    if (csect == 0) {
  3235   00EB28  51D0               	movf	f_write@csect& (0+255),w,b
  3236   00EB2A  11D1               	iorwf	(f_write@csect+1)& (0+255),w,b
  3237   00EB2C  A4D8               	btfss	status,2,c
  3238   00EB2E  EF9B  F075         	goto	u11831
  3239   00EB32  EF9D  F075         	goto	u11830
  3240   00EB36                     u11831:
  3241   00EB36  EF65  F076         	goto	l677
  3242   00EB3A                     u11830:
  3243   00EB3A                     
  3244                           ; BSR set to: 0
  3245                           ;mcc_generated_files/fatfs/ff.c: 3839:     if (fp->fptr == 0) {
  3246   00EB3A  EE20 F010          	lfsr	2,16
  3247   00EB3E  51B5               	movf	f_write@fp& (0+255),w,b
  3248   00EB40  26D9               	addwf	fsr2l,f,c
  3249   00EB42  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  3250   00EB44  22DA               	addwfc	fsr2h,f,c
  3251   00EB46  50DE               	movf	postinc2,w,c
  3252   00EB48  10DE               	iorwf	postinc2,w,c
  3253   00EB4A  10DE               	iorwf	postinc2,w,c
  3254   00EB4C  10DE               	iorwf	postinc2,w,c
  3255   00EB4E  A4D8               	btfss	status,2,c
  3256   00EB50  EFAC  F075         	goto	u11841
  3257   00EB54  EFAE  F075         	goto	u11840
  3258   00EB58                     u11841:
  3259   00EB58  EFDF  F075         	goto	l9080
  3260   00EB5C                     u11840:
  3261   00EB5C                     
  3262                           ; BSR set to: 0
  3263                           ;mcc_generated_files/fatfs/ff.c: 3840:      clst = fp->obj.sclust;
  3264   00EB5C  EE20 F006          	lfsr	2,6
  3265   00EB60  51B5               	movf	f_write@fp& (0+255),w,b
  3266   00EB62  26D9               	addwf	fsr2l,f,c
  3267   00EB64  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  3268   00EB66  22DA               	addwfc	fsr2h,f,c
  3269   00EB68  CFDE F0D4          	movff	postinc2,f_write@clst
  3270   00EB6C  CFDE F0D5          	movff	postinc2,f_write@clst+1
  3271   00EB70  CFDE F0D6          	movff	postinc2,f_write@clst+2
  3272   00EB74  CFDE F0D7          	movff	postinc2,f_write@clst+3
  3273   00EB78                     
  3274                           ; BSR set to: 0
  3275                           ;mcc_generated_files/fatfs/ff.c: 3841:      if (clst == 0) {
  3276   00EB78  51D4               	movf	f_write@clst& (0+255),w,b
  3277   00EB7A  11D5               	iorwf	(f_write@clst+1)& (0+255),w,b
  3278   00EB7C  11D6               	iorwf	(f_write@clst+2)& (0+255),w,b
  3279   00EB7E  11D7               	iorwf	(f_write@clst+3)& (0+255),w,b
  3280   00EB80  A4D8               	btfss	status,2,c
  3281   00EB82  EFC5  F075         	goto	u11851
  3282   00EB86  EFC7  F075         	goto	u11850
  3283   00EB8A                     u11851:
  3284   00EB8A  EFFB  F075         	goto	l9082
  3285   00EB8E                     u11850:
  3286   00EB8E                     
  3287                           ; BSR set to: 0
  3288                           ;mcc_generated_files/fatfs/ff.c: 3842:       clst = create_chain(&fp->obj, 0);
  3289   00EB8E  C0B5  F098         	movff	f_write@fp,create_chain@obj
  3290   00EB92  C0B6  F099         	movff	f_write@fp+1,create_chain@obj+1
  3291   00EB96  0E00               	movlw	0
  3292   00EB98  6F9A               	movwf	create_chain@clst& (0+255),b
  3293   00EB9A  0E00               	movlw	0
  3294   00EB9C  6F9B               	movwf	(create_chain@clst+1)& (0+255),b
  3295   00EB9E  0E00               	movlw	0
  3296   00EBA0  6F9C               	movwf	(create_chain@clst+2)& (0+255),b
  3297   00EBA2  0E00               	movlw	0
  3298   00EBA4  6F9D               	movwf	(create_chain@clst+3)& (0+255),b
  3299   00EBA6  ECDE  F062         	call	_create_chain	;wreg free
  3300   00EBAA  C098  F0D4         	movff	?_create_chain,f_write@clst
  3301   00EBAE  C099  F0D5         	movff	?_create_chain+1,f_write@clst+1
  3302   00EBB2  C09A  F0D6         	movff	?_create_chain+2,f_write@clst+2
  3303   00EBB6  C09B  F0D7         	movff	?_create_chain+3,f_write@clst+3
  3304   00EBBA  EFFB  F075         	goto	l9082
  3305   00EBBE                     l9080:
  3306                           
  3307                           ; BSR set to: 0
  3308                           ;mcc_generated_files/fatfs/ff.c: 3850:      {;mcc_generated_files/fatfs/ff.c: 3851:     
      +                            clst = create_chain(&fp->obj, fp->clust);
  3309   00EBBE  C0B5  F098         	movff	f_write@fp,create_chain@obj
  3310   00EBC2  C0B6  F099         	movff	f_write@fp+1,create_chain@obj+1
  3311   00EBC6  EE20 F014          	lfsr	2,20
  3312   00EBCA  51B5               	movf	f_write@fp& (0+255),w,b
  3313   00EBCC  26D9               	addwf	fsr2l,f,c
  3314   00EBCE  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  3315   00EBD0  22DA               	addwfc	fsr2h,f,c
  3316   00EBD2  CFDE F09A          	movff	postinc2,create_chain@clst
  3317   00EBD6  CFDE F09B          	movff	postinc2,create_chain@clst+1
  3318   00EBDA  CFDE F09C          	movff	postinc2,create_chain@clst+2
  3319   00EBDE  CFDE F09D          	movff	postinc2,create_chain@clst+3
  3320   00EBE2  ECDE  F062         	call	_create_chain	;wreg free
  3321   00EBE6  C098  F0D4         	movff	?_create_chain,f_write@clst
  3322   00EBEA  C099  F0D5         	movff	?_create_chain+1,f_write@clst+1
  3323   00EBEE  C09A  F0D6         	movff	?_create_chain+2,f_write@clst+2
  3324   00EBF2  C09B  F0D7         	movff	?_create_chain+3,f_write@clst+3
  3325   00EBF6                     l9082:
  3326                           
  3327                           ;mcc_generated_files/fatfs/ff.c: 3854:     if (clst == 0) break;
  3328   00EBF6  0100               	movlb	0	; () banked
  3329   00EBF8  51D4               	movf	f_write@clst& (0+255),w,b
  3330   00EBFA  11D5               	iorwf	(f_write@clst+1)& (0+255),w,b
  3331   00EBFC  11D6               	iorwf	(f_write@clst+2)& (0+255),w,b
  3332   00EBFE  11D7               	iorwf	(f_write@clst+3)& (0+255),w,b
  3333   00EC00  A4D8               	btfss	status,2,c
  3334   00EC02  EF05  F076         	goto	u11861
  3335   00EC06  EF07  F076         	goto	u11860
  3336   00EC0A                     u11861:
  3337   00EC0A  EF09  F076         	goto	l9086
  3338   00EC0E                     u11860:
  3339   00EC0E  EFF9  F078         	goto	l9190
  3340   00EC12                     l9086:
  3341                           
  3342                           ; BSR set to: 0
  3343                           ;mcc_generated_files/fatfs/ff.c: 3855:     if (clst == 1) { fp->err = (BYTE)(FR_INT_ERR)
      +                          ; return FR_INT_ERR; };
  3344   00EC12  05D4               	decf	f_write@clst& (0+255),w,b
  3345   00EC14  11D5               	iorwf	(f_write@clst+1)& (0+255),w,b
  3346   00EC16  11D6               	iorwf	(f_write@clst+2)& (0+255),w,b
  3347   00EC18  11D7               	iorwf	(f_write@clst+3)& (0+255),w,b
  3348   00EC1A  A4D8               	btfss	status,2,c
  3349   00EC1C  EF12  F076         	goto	u11871
  3350   00EC20  EF14  F076         	goto	u11870
  3351   00EC24                     u11871:
  3352   00EC24  EF1F  F076         	goto	l9094
  3353   00EC28                     u11870:
  3354   00EC28                     
  3355                           ; BSR set to: 0
  3356   00EC28  EE20 F00F          	lfsr	2,15
  3357   00EC2C  51B5               	movf	f_write@fp& (0+255),w,b
  3358   00EC2E  26D9               	addwf	fsr2l,f,c
  3359   00EC30  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  3360   00EC32  22DA               	addwfc	fsr2h,f,c
  3361   00EC34  0E02               	movlw	2
  3362   00EC36  6EDF               	movwf	indf2,c
  3363   00EC38                     l9090:
  3364                           
  3365                           ; BSR set to: 0
  3366   00EC38  0E02               	movlw	2
  3367   00EC3A  EF02  F079         	goto	l669
  3368   00EC3E                     l9094:
  3369                           
  3370                           ; BSR set to: 0
  3371                           ;mcc_generated_files/fatfs/ff.c: 3856:     if (clst == 0xFFFFFFFF) { fp->err = (BYTE)(FR
      +                          _DISK_ERR); return FR_DISK_ERR; };
  3372   00EC3E  29D4               	incf	f_write@clst& (0+255),w,b
  3373   00EC40  E10A               	bnz	u11881
  3374   00EC42  29D5               	incf	(f_write@clst+1)& (0+255),w,b
  3375   00EC44  E108               	bnz	u11881
  3376   00EC46  29D6               	incf	(f_write@clst+2)& (0+255),w,b
  3377   00EC48  E106               	bnz	u11881
  3378   00EC4A  29D7               	incf	(f_write@clst+3)& (0+255),w,b
  3379   00EC4C  A4D8               	btfss	status,2,c
  3380   00EC4E  EF2B  F076         	goto	u11881
  3381   00EC52  EF2D  F076         	goto	u11880
  3382   00EC56                     u11881:
  3383   00EC56  EF38  F076         	goto	l9102
  3384   00EC5A                     u11880:
  3385   00EC5A                     
  3386                           ; BSR set to: 0
  3387   00EC5A  EE20 F00F          	lfsr	2,15
  3388   00EC5E  51B5               	movf	f_write@fp& (0+255),w,b
  3389   00EC60  26D9               	addwf	fsr2l,f,c
  3390   00EC62  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  3391   00EC64  22DA               	addwfc	fsr2h,f,c
  3392   00EC66  0E01               	movlw	1
  3393   00EC68  6EDF               	movwf	indf2,c
  3394   00EC6A                     l9098:
  3395                           
  3396                           ; BSR set to: 0
  3397   00EC6A  0E01               	movlw	1
  3398   00EC6C  EF02  F079         	goto	l669
  3399   00EC70                     l9102:
  3400                           
  3401                           ; BSR set to: 0
  3402                           ;mcc_generated_files/fatfs/ff.c: 3857:     fp->clust = clst;
  3403   00EC70  EE20 F014          	lfsr	2,20
  3404   00EC74  51B5               	movf	f_write@fp& (0+255),w,b
  3405   00EC76  26D9               	addwf	fsr2l,f,c
  3406   00EC78  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  3407   00EC7A  22DA               	addwfc	fsr2h,f,c
  3408   00EC7C  C0D4  FFDE         	movff	f_write@clst,postinc2
  3409   00EC80  C0D5  FFDE         	movff	f_write@clst+1,postinc2
  3410   00EC84  C0D6  FFDE         	movff	f_write@clst+2,postinc2
  3411   00EC88  C0D7  FFDE         	movff	f_write@clst+3,postinc2
  3412                           
  3413                           ;mcc_generated_files/fatfs/ff.c: 3858:     if (fp->obj.sclust == 0) fp->obj.sclust = cls
      +                          t;
  3414   00EC8C  EE20 F006          	lfsr	2,6
  3415   00EC90  51B5               	movf	f_write@fp& (0+255),w,b
  3416   00EC92  26D9               	addwf	fsr2l,f,c
  3417   00EC94  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  3418   00EC96  22DA               	addwfc	fsr2h,f,c
  3419   00EC98  50DE               	movf	postinc2,w,c
  3420   00EC9A  10DE               	iorwf	postinc2,w,c
  3421   00EC9C  10DE               	iorwf	postinc2,w,c
  3422   00EC9E  10DE               	iorwf	postinc2,w,c
  3423   00ECA0  A4D8               	btfss	status,2,c
  3424   00ECA2  EF55  F076         	goto	u11891
  3425   00ECA6  EF57  F076         	goto	u11890
  3426   00ECAA                     u11891:
  3427   00ECAA  EF65  F076         	goto	l677
  3428   00ECAE                     u11890:
  3429   00ECAE                     
  3430                           ; BSR set to: 0
  3431   00ECAE  EE20 F006          	lfsr	2,6
  3432   00ECB2  51B5               	movf	f_write@fp& (0+255),w,b
  3433   00ECB4  26D9               	addwf	fsr2l,f,c
  3434   00ECB6  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  3435   00ECB8  22DA               	addwfc	fsr2h,f,c
  3436   00ECBA  C0D4  FFDE         	movff	f_write@clst,postinc2
  3437   00ECBE  C0D5  FFDE         	movff	f_write@clst+1,postinc2
  3438   00ECC2  C0D6  FFDE         	movff	f_write@clst+2,postinc2
  3439   00ECC6  C0D7  FFDE         	movff	f_write@clst+3,postinc2
  3440   00ECCA                     l677:
  3441                           
  3442                           ; BSR set to: 0
  3443                           ;mcc_generated_files/fatfs/ff.c: 3863:    if (fp->flag & 0x80) {
  3444   00ECCA  EE20 F00E          	lfsr	2,14
  3445   00ECCE  51B5               	movf	f_write@fp& (0+255),w,b
  3446   00ECD0  26D9               	addwf	fsr2l,f,c
  3447   00ECD2  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  3448   00ECD4  22DA               	addwfc	fsr2h,f,c
  3449   00ECD6  AEDF               	btfss	indf2,7,c
  3450   00ECD8  EF70  F076         	goto	u11901
  3451   00ECDC  EF72  F076         	goto	u11900
  3452   00ECE0                     u11901:
  3453   00ECE0  EFAF  F076         	goto	l9116
  3454   00ECE4                     u11900:
  3455   00ECE4                     
  3456                           ; BSR set to: 0
  3457                           ;mcc_generated_files/fatfs/ff.c: 3864:     if (disk_write(fs->pdrv, fp->buf, fp->sect, 1
      +                          ) != RES_OK) { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
  3458   00ECE4  0E22               	movlw	34
  3459   00ECE6  25B5               	addwf	f_write@fp& (0+255),w,b
  3460   00ECE8  6E4D               	movwf	disk_write@buff^0,c
  3461   00ECEA  0E00               	movlw	0
  3462   00ECEC  21B6               	addwfc	(f_write@fp+1)& (0+255),w,b
  3463   00ECEE  6E4E               	movwf	(disk_write@buff+1)^0,c
  3464   00ECF0  EE20 F018          	lfsr	2,24
  3465   00ECF4  51B5               	movf	f_write@fp& (0+255),w,b
  3466   00ECF6  26D9               	addwf	fsr2l,f,c
  3467   00ECF8  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  3468   00ECFA  22DA               	addwfc	fsr2h,f,c
  3469   00ECFC  CFDE F04F          	movff	postinc2,disk_write@sector
  3470   00ED00  CFDE F050          	movff	postinc2,disk_write@sector+1
  3471   00ED04  CFDE F051          	movff	postinc2,disk_write@sector+2
  3472   00ED08  CFDE F052          	movff	postinc2,disk_write@sector+3
  3473   00ED0C  0E00               	movlw	0
  3474   00ED0E  6E54               	movwf	(disk_write@count+1)^0,c
  3475   00ED10  0E01               	movlw	1
  3476   00ED12  6E53               	movwf	disk_write@count^0,c
  3477   00ED14  EE20 F001          	lfsr	2,1
  3478   00ED18  51DE               	movf	f_write@fs& (0+255),w,b
  3479   00ED1A  26D9               	addwf	fsr2l,f,c
  3480   00ED1C  51DF               	movf	(f_write@fs+1)& (0+255),w,b
  3481   00ED1E  22DA               	addwfc	fsr2h,f,c
  3482   00ED20  50DF               	movf	indf2,w,c
  3483   00ED22  EC59  F041         	call	_disk_write
  3484   00ED26  0900               	iorlw	0
  3485   00ED28  B4D8               	btfsc	status,2,c
  3486   00ED2A  EF99  F076         	goto	u11911
  3487   00ED2E  EF9B  F076         	goto	u11910
  3488   00ED32                     u11911:
  3489   00ED32  EFA6  F076         	goto	l9114
  3490   00ED36                     u11910:
  3491   00ED36  0100               	movlb	0	; () banked
  3492   00ED38  EE20 F00F          	lfsr	2,15
  3493   00ED3C  51B5               	movf	f_write@fp& (0+255),w,b
  3494   00ED3E  26D9               	addwf	fsr2l,f,c
  3495   00ED40  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  3496   00ED42  22DA               	addwfc	fsr2h,f,c
  3497   00ED44  0E01               	movlw	1
  3498   00ED46  6EDF               	movwf	indf2,c
  3499   00ED48  EF35  F076         	goto	l9098
  3500   00ED4C                     l9114:
  3501                           
  3502                           ;mcc_generated_files/fatfs/ff.c: 3865:     fp->flag &= (BYTE)~0x80;
  3503   00ED4C  0100               	movlb	0	; () banked
  3504   00ED4E  EE20 F00E          	lfsr	2,14
  3505   00ED52  51B5               	movf	f_write@fp& (0+255),w,b
  3506   00ED54  26D9               	addwf	fsr2l,f,c
  3507   00ED56  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  3508   00ED58  22DA               	addwfc	fsr2h,f,c
  3509   00ED5A  0E7F               	movlw	127
  3510   00ED5C  16DF               	andwf	indf2,f,c
  3511   00ED5E                     l9116:
  3512                           
  3513                           ; BSR set to: 0
  3514                           ;mcc_generated_files/fatfs/ff.c: 3868:    sect = clst2sect(fs, fp->clust);
  3515   00ED5E  C0DE  F00D         	movff	f_write@fs,clst2sect@fs
  3516   00ED62  C0DF  F00E         	movff	f_write@fs+1,clst2sect@fs+1
  3517   00ED66  EE20 F014          	lfsr	2,20
  3518   00ED6A  51B5               	movf	f_write@fp& (0+255),w,b
  3519   00ED6C  26D9               	addwf	fsr2l,f,c
  3520   00ED6E  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  3521   00ED70  22DA               	addwfc	fsr2h,f,c
  3522   00ED72  CFDE F00F          	movff	postinc2,clst2sect@clst
  3523   00ED76  CFDE F010          	movff	postinc2,clst2sect@clst+1
  3524   00ED7A  CFDE F011          	movff	postinc2,clst2sect@clst+2
  3525   00ED7E  CFDE F012          	movff	postinc2,clst2sect@clst+3
  3526   00ED82  ECB7  F044         	call	_clst2sect	;wreg free
  3527   00ED86  C00D  F0DA         	movff	?_clst2sect,f_write@sect
  3528   00ED8A  C00E  F0DB         	movff	?_clst2sect+1,f_write@sect+1
  3529   00ED8E  C00F  F0DC         	movff	?_clst2sect+2,f_write@sect+2
  3530   00ED92  C010  F0DD         	movff	?_clst2sect+3,f_write@sect+3
  3531   00ED96                     
  3532                           ;mcc_generated_files/fatfs/ff.c: 3869:    if (sect == 0) { fp->err = (BYTE)(FR_INT_ERR);
      +                           return FR_INT_ERR; };
  3533   00ED96  0100               	movlb	0	; () banked
  3534   00ED98  51DA               	movf	f_write@sect& (0+255),w,b
  3535   00ED9A  11DB               	iorwf	(f_write@sect+1)& (0+255),w,b
  3536   00ED9C  11DC               	iorwf	(f_write@sect+2)& (0+255),w,b
  3537   00ED9E  11DD               	iorwf	(f_write@sect+3)& (0+255),w,b
  3538   00EDA0  A4D8               	btfss	status,2,c
  3539   00EDA2  EFD5  F076         	goto	u11921
  3540   00EDA6  EFD7  F076         	goto	u11920
  3541   00EDAA                     u11921:
  3542   00EDAA  EFE1  F076         	goto	l9126
  3543   00EDAE                     u11920:
  3544   00EDAE                     
  3545                           ; BSR set to: 0
  3546   00EDAE  EE20 F00F          	lfsr	2,15
  3547   00EDB2  51B5               	movf	f_write@fp& (0+255),w,b
  3548   00EDB4  26D9               	addwf	fsr2l,f,c
  3549   00EDB6  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  3550   00EDB8  22DA               	addwfc	fsr2h,f,c
  3551   00EDBA  0E02               	movlw	2
  3552   00EDBC  6EDF               	movwf	indf2,c
  3553   00EDBE  EF1C  F076         	goto	l9090
  3554   00EDC2                     l9126:
  3555                           
  3556                           ; BSR set to: 0
  3557                           ;mcc_generated_files/fatfs/ff.c: 3870:    sect += csect;
  3558   00EDC2  51D0               	movf	f_write@csect& (0+255),w,b
  3559   00EDC4  27DA               	addwf	f_write@sect& (0+255),f,b
  3560   00EDC6  51D1               	movf	(f_write@csect+1)& (0+255),w,b
  3561   00EDC8  23DB               	addwfc	(f_write@sect+1)& (0+255),f,b
  3562   00EDCA  0E00               	movlw	0
  3563   00EDCC  23DC               	addwfc	(f_write@sect+2)& (0+255),f,b
  3564   00EDCE  0E00               	movlw	0
  3565   00EDD0  23DD               	addwfc	(f_write@sect+3)& (0+255),f,b
  3566   00EDD2                     
  3567                           ; BSR set to: 0
  3568                           ;mcc_generated_files/fatfs/ff.c: 3871:    cc = btw / ((UINT)512);
  3569   00EDD2  C0B9  F0BD         	movff	f_write@btw,??_f_write
  3570   00EDD6  C0BA  F0BE         	movff	f_write@btw+1,??_f_write+1
  3571   00EDDA  0E09               	movlw	9
  3572   00EDDC  6FBF               	movwf	(??_f_write+2)& (0+255),b
  3573   00EDDE                     u11935:
  3574   00EDDE  90D8               	bcf	status,0,c
  3575   00EDE0  33BE               	rrcf	(??_f_write+1)& (0+255),f,b
  3576   00EDE2  33BD               	rrcf	??_f_write& (0+255),f,b
  3577   00EDE4  2FBF               	decfsz	(??_f_write+2)& (0+255),f,b
  3578   00EDE6  EFEF  F076         	goto	u11935
  3579   00EDEA  C0BD  F0D2         	movff	??_f_write,f_write@cc
  3580   00EDEE  C0BE  F0D3         	movff	??_f_write+1,f_write@cc+1
  3581   00EDF2                     
  3582                           ; BSR set to: 0
  3583                           ;mcc_generated_files/fatfs/ff.c: 3872:    if (cc > 0) {
  3584   00EDF2  51D2               	movf	f_write@cc& (0+255),w,b
  3585   00EDF4  11D3               	iorwf	(f_write@cc+1)& (0+255),w,b
  3586   00EDF6  B4D8               	btfsc	status,2,c
  3587   00EDF8  EF00  F077         	goto	u11941
  3588   00EDFC  EF02  F077         	goto	u11940
  3589   00EE00                     u11941:
  3590   00EE00  EFC6  F077         	goto	l9152
  3591   00EE04                     u11940:
  3592   00EE04                     
  3593                           ; BSR set to: 0
  3594                           ;mcc_generated_files/fatfs/ff.c: 3873:     if (csect + cc > fs->csize) {
  3595   00EE04  51D2               	movf	f_write@cc& (0+255),w,b
  3596   00EE06  25D0               	addwf	f_write@csect& (0+255),w,b
  3597   00EE08  6FBD               	movwf	??_f_write& (0+255),b
  3598   00EE0A  51D3               	movf	(f_write@cc+1)& (0+255),w,b
  3599   00EE0C  21D1               	addwfc	(f_write@csect+1)& (0+255),w,b
  3600   00EE0E  6FBE               	movwf	(??_f_write+1)& (0+255),b
  3601   00EE10  EE20 F009          	lfsr	2,9
  3602   00EE14  51DE               	movf	f_write@fs& (0+255),w,b
  3603   00EE16  26D9               	addwf	fsr2l,f,c
  3604   00EE18  51DF               	movf	(f_write@fs+1)& (0+255),w,b
  3605   00EE1A  22DA               	addwfc	fsr2h,f,c
  3606   00EE1C  51BD               	movf	??_f_write& (0+255),w,b
  3607   00EE1E  5CDE               	subwf	postinc2,w,c
  3608   00EE20  51BE               	movf	(??_f_write+1)& (0+255),w,b
  3609   00EE22  58DE               	subwfb	postinc2,w,c
  3610   00EE24  B0D8               	btfsc	status,0,c
  3611   00EE26  EF17  F077         	goto	u11951
  3612   00EE2A  EF19  F077         	goto	u11950
  3613   00EE2E                     u11951:
  3614   00EE2E  EF29  F077         	goto	l9136
  3615   00EE32                     u11950:
  3616   00EE32                     
  3617                           ; BSR set to: 0
  3618                           ;mcc_generated_files/fatfs/ff.c: 3874:      cc = fs->csize - csect;
  3619   00EE32  EE20 F009          	lfsr	2,9
  3620   00EE36  51DE               	movf	f_write@fs& (0+255),w,b
  3621   00EE38  26D9               	addwf	fsr2l,f,c
  3622   00EE3A  51DF               	movf	(f_write@fs+1)& (0+255),w,b
  3623   00EE3C  22DA               	addwfc	fsr2h,f,c
  3624   00EE3E  CFDE F0BD          	movff	postinc2,??_f_write
  3625   00EE42  CFDD F0BE          	movff	postdec2,??_f_write+1
  3626   00EE46  51D0               	movf	f_write@csect& (0+255),w,b
  3627   00EE48  5DBD               	subwf	??_f_write& (0+255),w,b
  3628   00EE4A  6FD2               	movwf	f_write@cc& (0+255),b
  3629   00EE4C  51D1               	movf	(f_write@csect+1)& (0+255),w,b
  3630   00EE4E  59BE               	subwfb	(??_f_write+1)& (0+255),w,b
  3631   00EE50  6FD3               	movwf	(f_write@cc+1)& (0+255),b
  3632   00EE52                     l9136:
  3633                           
  3634                           ; BSR set to: 0
  3635                           ;mcc_generated_files/fatfs/ff.c: 3876:     if (disk_write(fs->pdrv, wbuff, sect, cc) != 
      +                          RES_OK) { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
  3636   00EE52  C0CE  F04D         	movff	f_write@wbuff,disk_write@buff
  3637   00EE56  C0CF  F04E         	movff	f_write@wbuff+1,disk_write@buff+1
  3638   00EE5A  C0DA  F04F         	movff	f_write@sect,disk_write@sector
  3639   00EE5E  C0DB  F050         	movff	f_write@sect+1,disk_write@sector+1
  3640   00EE62  C0DC  F051         	movff	f_write@sect+2,disk_write@sector+2
  3641   00EE66  C0DD  F052         	movff	f_write@sect+3,disk_write@sector+3
  3642   00EE6A  C0D2  F053         	movff	f_write@cc,disk_write@count
  3643   00EE6E  C0D3  F054         	movff	f_write@cc+1,disk_write@count+1
  3644   00EE72  EE20 F001          	lfsr	2,1
  3645   00EE76  51DE               	movf	f_write@fs& (0+255),w,b
  3646   00EE78  26D9               	addwf	fsr2l,f,c
  3647   00EE7A  51DF               	movf	(f_write@fs+1)& (0+255),w,b
  3648   00EE7C  22DA               	addwfc	fsr2h,f,c
  3649   00EE7E  50DF               	movf	indf2,w,c
  3650   00EE80  EC59  F041         	call	_disk_write
  3651   00EE84  0900               	iorlw	0
  3652   00EE86  B4D8               	btfsc	status,2,c
  3653   00EE88  EF48  F077         	goto	u11961
  3654   00EE8C  EF4A  F077         	goto	u11960
  3655   00EE90                     u11961:
  3656   00EE90  EF55  F077         	goto	l9144
  3657   00EE94                     u11960:
  3658   00EE94  0100               	movlb	0	; () banked
  3659   00EE96  EE20 F00F          	lfsr	2,15
  3660   00EE9A  51B5               	movf	f_write@fp& (0+255),w,b
  3661   00EE9C  26D9               	addwf	fsr2l,f,c
  3662   00EE9E  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  3663   00EEA0  22DA               	addwfc	fsr2h,f,c
  3664   00EEA2  0E01               	movlw	1
  3665   00EEA4  6EDF               	movwf	indf2,c
  3666   00EEA6  EF35  F076         	goto	l9098
  3667   00EEAA                     l9144:
  3668                           
  3669                           ;mcc_generated_files/fatfs/ff.c: 3884:     if (fp->sect - sect < cc) {
  3670   00EEAA  0100               	movlb	0	; () banked
  3671   00EEAC  51D2               	movf	f_write@cc& (0+255),w,b
  3672   00EEAE  6FBD               	movwf	??_f_write& (0+255),b
  3673   00EEB0  51D3               	movf	(f_write@cc+1)& (0+255),w,b
  3674   00EEB2  6FBE               	movwf	(??_f_write+1)& (0+255),b
  3675   00EEB4  6BBF               	clrf	(??_f_write+2)& (0+255),b
  3676   00EEB6  6BC0               	clrf	(??_f_write+3)& (0+255),b
  3677   00EEB8  EE20 F018          	lfsr	2,24
  3678   00EEBC  51B5               	movf	f_write@fp& (0+255),w,b
  3679   00EEBE  26D9               	addwf	fsr2l,f,c
  3680   00EEC0  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  3681   00EEC2  22DA               	addwfc	fsr2h,f,c
  3682   00EEC4  CFDE F0C1          	movff	postinc2,??_f_write+4
  3683   00EEC8  CFDE F0C2          	movff	postinc2,??_f_write+5
  3684   00EECC  CFDE F0C3          	movff	postinc2,??_f_write+6
  3685   00EED0  CFDE F0C4          	movff	postinc2,??_f_write+7
  3686   00EED4  51DA               	movf	f_write@sect& (0+255),w,b
  3687   00EED6  5DC1               	subwf	(??_f_write+4)& (0+255),w,b
  3688   00EED8  6FC5               	movwf	(??_f_write+8)& (0+255),b
  3689   00EEDA  51DB               	movf	(f_write@sect+1)& (0+255),w,b
  3690   00EEDC  59C2               	subwfb	(??_f_write+5)& (0+255),w,b
  3691   00EEDE  6FC6               	movwf	(??_f_write+9)& (0+255),b
  3692   00EEE0  51DC               	movf	(f_write@sect+2)& (0+255),w,b
  3693   00EEE2  59C3               	subwfb	(??_f_write+6)& (0+255),w,b
  3694   00EEE4  6FC7               	movwf	(??_f_write+10)& (0+255),b
  3695   00EEE6  51DD               	movf	(f_write@sect+3)& (0+255),w,b
  3696   00EEE8  59C4               	subwfb	(??_f_write+7)& (0+255),w,b
  3697   00EEEA  6FC8               	movwf	(??_f_write+11)& (0+255),b
  3698   00EEEC  51BD               	movf	??_f_write& (0+255),w,b
  3699   00EEEE  5DC5               	subwf	(??_f_write+8)& (0+255),w,b
  3700   00EEF0  51BE               	movf	(??_f_write+1)& (0+255),w,b
  3701   00EEF2  59C6               	subwfb	(??_f_write+9)& (0+255),w,b
  3702   00EEF4  51BF               	movf	(??_f_write+2)& (0+255),w,b
  3703   00EEF6  59C7               	subwfb	(??_f_write+10)& (0+255),w,b
  3704   00EEF8  51C0               	movf	(??_f_write+3)& (0+255),w,b
  3705   00EEFA  59C8               	subwfb	(??_f_write+11)& (0+255),w,b
  3706   00EEFC  B0D8               	btfsc	status,0,c
  3707   00EEFE  EF83  F077         	goto	u11971
  3708   00EF02  EF85  F077         	goto	u11970
  3709   00EF06                     u11971:
  3710   00EF06  EFB5  F077         	goto	l9150
  3711   00EF0A                     u11970:
  3712   00EF0A                     
  3713                           ; BSR set to: 0
  3714                           ;mcc_generated_files/fatfs/ff.c: 3885:      mem_cpy(fp->buf, wbuff + ((fp->sect - sect) 
      +                          * ((UINT)512)), ((UINT)512));
  3715   00EF0A  0E22               	movlw	34
  3716   00EF0C  25B5               	addwf	f_write@fp& (0+255),w,b
  3717   00EF0E  6E01               	movwf	mem_cpy@dst^0,c
  3718   00EF10  0E00               	movlw	0
  3719   00EF12  21B6               	addwfc	(f_write@fp+1)& (0+255),w,b
  3720   00EF14  6E02               	movwf	(mem_cpy@dst+1)^0,c
  3721   00EF16  EE20 F018          	lfsr	2,24
  3722   00EF1A  51B5               	movf	f_write@fp& (0+255),w,b
  3723   00EF1C  26D9               	addwf	fsr2l,f,c
  3724   00EF1E  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  3725   00EF20  22DA               	addwfc	fsr2h,f,c
  3726   00EF22  CFDE F0BD          	movff	postinc2,??_f_write
  3727   00EF26  CFDD F0BE          	movff	postdec2,??_f_write+1
  3728   00EF2A  51DA               	movf	f_write@sect& (0+255),w,b
  3729   00EF2C  5FBD               	subwf	??_f_write& (0+255),f,b
  3730   00EF2E  51DB               	movf	(f_write@sect+1)& (0+255),w,b
  3731   00EF30  5BBE               	subwfb	(??_f_write+1)& (0+255),f,b
  3732   00EF32  0E09               	movlw	9
  3733   00EF34                     u11985:
  3734   00EF34  90D8               	bcf	status,0,c
  3735   00EF36  37BD               	rlcf	??_f_write& (0+255),f,b
  3736   00EF38  37BE               	rlcf	(??_f_write+1)& (0+255),f,b
  3737   00EF3A  2EE8               	decfsz	wreg,f,c
  3738   00EF3C  EF9A  F077         	goto	u11985
  3739   00EF40  51BD               	movf	??_f_write& (0+255),w,b
  3740   00EF42  25CE               	addwf	f_write@wbuff& (0+255),w,b
  3741   00EF44  6E03               	movwf	mem_cpy@src^0,c
  3742   00EF46  51BE               	movf	(??_f_write+1)& (0+255),w,b
  3743   00EF48  21CF               	addwfc	(f_write@wbuff+1)& (0+255),w,b
  3744   00EF4A  6E04               	movwf	(mem_cpy@src+1)^0,c
  3745   00EF4C  0E02               	movlw	2
  3746   00EF4E  6E06               	movwf	(mem_cpy@cnt+1)^0,c
  3747   00EF50  0E00               	movlw	0
  3748   00EF52  6E05               	movwf	mem_cpy@cnt^0,c
  3749   00EF54  ECF9  F03F         	call	_mem_cpy	;wreg free
  3750   00EF58                     
  3751                           ;mcc_generated_files/fatfs/ff.c: 3886:      fp->flag &= (BYTE)~0x80;
  3752   00EF58  0100               	movlb	0	; () banked
  3753   00EF5A  EE20 F00E          	lfsr	2,14
  3754   00EF5E  51B5               	movf	f_write@fp& (0+255),w,b
  3755   00EF60  26D9               	addwf	fsr2l,f,c
  3756   00EF62  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  3757   00EF64  22DA               	addwfc	fsr2h,f,c
  3758   00EF66  0E7F               	movlw	127
  3759   00EF68  16DF               	andwf	indf2,f,c
  3760   00EF6A                     l9150:
  3761                           
  3762                           ; BSR set to: 0
  3763                           ;mcc_generated_files/fatfs/ff.c: 3890:     wcnt = ((UINT)512) * cc;
  3764   00EF6A  C0D2  F0BD         	movff	f_write@cc,??_f_write
  3765   00EF6E  C0D3  F0BE         	movff	f_write@cc+1,??_f_write+1
  3766   00EF72  0E09               	movlw	9
  3767   00EF74                     u11995:
  3768   00EF74  90D8               	bcf	status,0,c
  3769   00EF76  37BD               	rlcf	??_f_write& (0+255),f,b
  3770   00EF78  37BE               	rlcf	(??_f_write+1)& (0+255),f,b
  3771   00EF7A  2EE8               	decfsz	wreg,f,c
  3772   00EF7C  EFBA  F077         	goto	u11995
  3773   00EF80  C0BD  F0D8         	movff	??_f_write,f_write@wcnt
  3774   00EF84  C0BE  F0D9         	movff	??_f_write+1,f_write@wcnt+1
  3775                           
  3776                           ;mcc_generated_files/fatfs/ff.c: 3891:     continue;
  3777   00EF88  EF8C  F078         	goto	l9174
  3778   00EF8C                     l9152:
  3779                           
  3780                           ; BSR set to: 0
  3781                           ;mcc_generated_files/fatfs/ff.c: 3899:    if (fp->sect != sect &&
  3782   00EF8C  EE20 F018          	lfsr	2,24
  3783   00EF90  51B5               	movf	f_write@fp& (0+255),w,b
  3784   00EF92  26D9               	addwf	fsr2l,f,c
  3785   00EF94  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  3786   00EF96  22DA               	addwfc	fsr2h,f,c
  3787   00EF98  51DA               	movf	f_write@sect& (0+255),w,b
  3788   00EF9A  18DE               	xorwf	postinc2,w,c
  3789   00EF9C  E10F               	bnz	u12000
  3790   00EF9E  51DB               	movf	(f_write@sect+1)& (0+255),w,b
  3791   00EFA0  18DE               	xorwf	postinc2,w,c
  3792   00EFA2  E10C               	bnz	u12000
  3793   00EFA4  51DC               	movf	(f_write@sect+2)& (0+255),w,b
  3794   00EFA6  18DE               	xorwf	postinc2,w,c
  3795   00EFA8  E109               	bnz	u12000
  3796   00EFAA  51DD               	movf	(f_write@sect+3)& (0+255),w,b
  3797   00EFAC  18DE               	xorwf	postinc2,w,c
  3798   00EFAE  B4D8               	btfsc	status,2,c
  3799   00EFB0  EFDC  F077         	goto	u12001
  3800   00EFB4  EFDE  F077         	goto	u12000
  3801   00EFB8                     u12001:
  3802   00EFB8  EF27  F078         	goto	l9164
  3803   00EFBC                     u12000:
  3804   00EFBC                     
  3805                           ; BSR set to: 0
  3806   00EFBC  EE20 F00A          	lfsr	2,10
  3807   00EFC0  51B5               	movf	f_write@fp& (0+255),w,b
  3808   00EFC2  26D9               	addwf	fsr2l,f,c
  3809   00EFC4  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  3810   00EFC6  22DA               	addwfc	fsr2h,f,c
  3811   00EFC8  EE10 F010          	lfsr	1,16
  3812   00EFCC  51B5               	movf	f_write@fp& (0+255),w,b
  3813   00EFCE  26E1               	addwf	fsr1l,f,c
  3814   00EFD0  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  3815   00EFD2  22E2               	addwfc	fsr1h,f,c
  3816   00EFD4  50DE               	movf	postinc2,w,c
  3817   00EFD6  5CE6               	subwf	postinc1,w,c
  3818   00EFD8  50DE               	movf	postinc2,w,c
  3819   00EFDA  58E6               	subwfb	postinc1,w,c
  3820   00EFDC  50DE               	movf	postinc2,w,c
  3821   00EFDE  58E6               	subwfb	postinc1,w,c
  3822   00EFE0  50DE               	movf	postinc2,w,c
  3823   00EFE2  58E6               	subwfb	postinc1,w,c
  3824   00EFE4  B0D8               	btfsc	status,0,c
  3825   00EFE6  EFF7  F077         	goto	u12011
  3826   00EFEA  EFF9  F077         	goto	u12010
  3827   00EFEE                     u12011:
  3828   00EFEE  EF27  F078         	goto	l9164
  3829   00EFF2                     u12010:
  3830   00EFF2                     
  3831                           ; BSR set to: 0
  3832   00EFF2  0E22               	movlw	34
  3833   00EFF4  25B5               	addwf	f_write@fp& (0+255),w,b
  3834   00EFF6  6E4A               	movwf	disk_read@buff^0,c
  3835   00EFF8  0E00               	movlw	0
  3836   00EFFA  21B6               	addwfc	(f_write@fp+1)& (0+255),w,b
  3837   00EFFC  6E4B               	movwf	(disk_read@buff+1)^0,c
  3838   00EFFE  C0DA  F04C         	movff	f_write@sect,disk_read@sector
  3839   00F002  C0DB  F04D         	movff	f_write@sect+1,disk_read@sector+1
  3840   00F006  C0DC  F04E         	movff	f_write@sect+2,disk_read@sector+2
  3841   00F00A  C0DD  F04F         	movff	f_write@sect+3,disk_read@sector+3
  3842   00F00E  0E00               	movlw	0
  3843   00F010  6E51               	movwf	(disk_read@count+1)^0,c
  3844   00F012  0E01               	movlw	1
  3845   00F014  6E50               	movwf	disk_read@count^0,c
  3846   00F016  EE20 F001          	lfsr	2,1
  3847   00F01A  51DE               	movf	f_write@fs& (0+255),w,b
  3848   00F01C  26D9               	addwf	fsr2l,f,c
  3849   00F01E  51DF               	movf	(f_write@fs+1)& (0+255),w,b
  3850   00F020  22DA               	addwfc	fsr2h,f,c
  3851   00F022  50DF               	movf	indf2,w,c
  3852   00F024  EC1F  F041         	call	_disk_read
  3853   00F028  0900               	iorlw	0
  3854   00F02A  B4D8               	btfsc	status,2,c
  3855   00F02C  EF1A  F078         	goto	u12021
  3856   00F030  EF1C  F078         	goto	u12020
  3857   00F034                     u12021:
  3858   00F034  EF27  F078         	goto	l9164
  3859   00F038                     u12020:
  3860   00F038                     
  3861                           ;mcc_generated_files/fatfs/ff.c: 3901:     disk_read(fs->pdrv, fp->buf, sect, 1) != RES_
      +                          OK) {;mcc_generated_files/fatfs/ff.c: 3902:      { fp->err = (BYTE)(FR_DISK_ERR); return
      +                           FR_DISK_ERR; };
  3862   00F038  0100               	movlb	0	; () banked
  3863   00F03A  EE20 F00F          	lfsr	2,15
  3864   00F03E  51B5               	movf	f_write@fp& (0+255),w,b
  3865   00F040  26D9               	addwf	fsr2l,f,c
  3866   00F042  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  3867   00F044  22DA               	addwfc	fsr2h,f,c
  3868   00F046  0E01               	movlw	1
  3869   00F048  6EDF               	movwf	indf2,c
  3870   00F04A  EF35  F076         	goto	l9098
  3871   00F04E                     l9164:
  3872                           
  3873                           ;mcc_generated_files/fatfs/ff.c: 3905:    fp->sect = sect;
  3874   00F04E  0100               	movlb	0	; () banked
  3875   00F050  EE20 F018          	lfsr	2,24
  3876   00F054  51B5               	movf	f_write@fp& (0+255),w,b
  3877   00F056  26D9               	addwf	fsr2l,f,c
  3878   00F058  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  3879   00F05A  22DA               	addwfc	fsr2h,f,c
  3880   00F05C  C0DA  FFDE         	movff	f_write@sect,postinc2
  3881   00F060  C0DB  FFDE         	movff	f_write@sect+1,postinc2
  3882   00F064  C0DC  FFDE         	movff	f_write@sect+2,postinc2
  3883   00F068  C0DD  FFDE         	movff	f_write@sect+3,postinc2
  3884   00F06C                     l676:
  3885                           
  3886                           ; BSR set to: 0
  3887                           ;mcc_generated_files/fatfs/ff.c: 3907:   wcnt = ((UINT)512) - (UINT)fp->fptr % ((UINT)51
      +                          2);
  3888   00F06C  EE20 F010          	lfsr	2,16
  3889   00F070  51B5               	movf	f_write@fp& (0+255),w,b
  3890   00F072  26D9               	addwf	fsr2l,f,c
  3891   00F074  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  3892   00F076  22DA               	addwfc	fsr2h,f,c
  3893   00F078  CFDE F0BD          	movff	postinc2,??_f_write
  3894   00F07C  CFDD F0BE          	movff	postdec2,??_f_write+1
  3895   00F080  0EFF               	movlw	255
  3896   00F082  15BD               	andwf	??_f_write& (0+255),w,b
  3897   00F084  6FBF               	movwf	(??_f_write+2)& (0+255),b
  3898   00F086  0E01               	movlw	1
  3899   00F088  15BE               	andwf	(??_f_write+1)& (0+255),w,b
  3900   00F08A  6FC0               	movwf	(??_f_write+3)& (0+255),b
  3901   00F08C  51BF               	movf	(??_f_write+2)& (0+255),w,b
  3902   00F08E  0800               	sublw	0
  3903   00F090  6FD8               	movwf	f_write@wcnt& (0+255),b
  3904   00F092  51C0               	movf	(??_f_write+3)& (0+255),w,b
  3905   00F094  A0D8               	btfss	status,0,c
  3906   00F096  2AE8               	incf	wreg,f,c
  3907   00F098  0802               	sublw	2
  3908   00F09A  6FD9               	movwf	(f_write@wcnt+1)& (0+255),b
  3909   00F09C                     
  3910                           ; BSR set to: 0
  3911                           ;mcc_generated_files/fatfs/ff.c: 3908:   if (wcnt > btw) wcnt = btw;
  3912   00F09C  51D8               	movf	f_write@wcnt& (0+255),w,b
  3913   00F09E  5DB9               	subwf	f_write@btw& (0+255),w,b
  3914   00F0A0  51D9               	movf	(f_write@wcnt+1)& (0+255),w,b
  3915   00F0A2  59BA               	subwfb	(f_write@btw+1)& (0+255),w,b
  3916   00F0A4  B0D8               	btfsc	status,0,c
  3917   00F0A6  EF57  F078         	goto	u12031
  3918   00F0AA  EF59  F078         	goto	u12030
  3919   00F0AE                     u12031:
  3920   00F0AE  EF5D  F078         	goto	l9170
  3921   00F0B2                     u12030:
  3922   00F0B2                     
  3923                           ; BSR set to: 0
  3924   00F0B2  C0B9  F0D8         	movff	f_write@btw,f_write@wcnt
  3925   00F0B6  C0BA  F0D9         	movff	f_write@btw+1,f_write@wcnt+1
  3926   00F0BA                     l9170:
  3927                           
  3928                           ; BSR set to: 0
  3929                           ;mcc_generated_files/fatfs/ff.c: 3914:   mem_cpy(fp->buf + fp->fptr % ((UINT)512), wbuff
      +                          , wcnt);
  3930   00F0BA  EE20 F010          	lfsr	2,16
  3931   00F0BE  51B5               	movf	f_write@fp& (0+255),w,b
  3932   00F0C0  26D9               	addwf	fsr2l,f,c
  3933   00F0C2  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  3934   00F0C4  22DA               	addwfc	fsr2h,f,c
  3935   00F0C6  CFDE F0BD          	movff	postinc2,??_f_write
  3936   00F0CA  CFDD F0BE          	movff	postdec2,??_f_write+1
  3937   00F0CE  0EFF               	movlw	255
  3938   00F0D0  15BD               	andwf	??_f_write& (0+255),w,b
  3939   00F0D2  6FBF               	movwf	(??_f_write+2)& (0+255),b
  3940   00F0D4  0E01               	movlw	1
  3941   00F0D6  15BE               	andwf	(??_f_write+1)& (0+255),w,b
  3942   00F0D8  6FC0               	movwf	(??_f_write+3)& (0+255),b
  3943   00F0DA  51BF               	movf	(??_f_write+2)& (0+255),w,b
  3944   00F0DC  25B5               	addwf	f_write@fp& (0+255),w,b
  3945   00F0DE  6FC1               	movwf	(??_f_write+4)& (0+255),b
  3946   00F0E0  51C0               	movf	(??_f_write+3)& (0+255),w,b
  3947   00F0E2  21B6               	addwfc	(f_write@fp+1)& (0+255),w,b
  3948   00F0E4  6FC2               	movwf	(??_f_write+5)& (0+255),b
  3949   00F0E6  0E22               	movlw	34
  3950   00F0E8  25C1               	addwf	(??_f_write+4)& (0+255),w,b
  3951   00F0EA  6E01               	movwf	mem_cpy@dst^0,c
  3952   00F0EC  0E00               	movlw	0
  3953   00F0EE  21C2               	addwfc	(??_f_write+5)& (0+255),w,b
  3954   00F0F0  6E02               	movwf	(mem_cpy@dst+1)^0,c
  3955   00F0F2  C0CE  F003         	movff	f_write@wbuff,mem_cpy@src
  3956   00F0F6  C0CF  F004         	movff	f_write@wbuff+1,mem_cpy@src+1
  3957   00F0FA  C0D8  F005         	movff	f_write@wcnt,mem_cpy@cnt
  3958   00F0FE  C0D9  F006         	movff	f_write@wcnt+1,mem_cpy@cnt+1
  3959   00F102  ECF9  F03F         	call	_mem_cpy	;wreg free
  3960   00F106                     
  3961                           ;mcc_generated_files/fatfs/ff.c: 3915:   fp->flag |= 0x80;
  3962   00F106  0100               	movlb	0	; () banked
  3963   00F108  EE20 F00E          	lfsr	2,14
  3964   00F10C  51B5               	movf	f_write@fp& (0+255),w,b
  3965   00F10E  26D9               	addwf	fsr2l,f,c
  3966   00F110  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  3967   00F112  22DA               	addwfc	fsr2h,f,c
  3968   00F114  0E00               	movlw	0
  3969   00F116  8EDB               	bsf	plusw2,7,c
  3970   00F118                     l9174:
  3971                           
  3972                           ; BSR set to: 0
  3973   00F118  51D8               	movf	f_write@wcnt& (0+255),w,b
  3974   00F11A  5FB9               	subwf	f_write@btw& (0+255),f,b
  3975   00F11C  51D9               	movf	(f_write@wcnt+1)& (0+255),w,b
  3976   00F11E  5BBA               	subwfb	(f_write@btw+1)& (0+255),f,b
  3977   00F120                     
  3978                           ; BSR set to: 0
  3979   00F120  C0BB  FFD9         	movff	f_write@bw,fsr2l
  3980   00F124  C0BC  FFDA         	movff	f_write@bw+1,fsr2h
  3981   00F128  51D8               	movf	f_write@wcnt& (0+255),w,b
  3982   00F12A  26DE               	addwf	postinc2,f,c
  3983   00F12C  51D9               	movf	(f_write@wcnt+1)& (0+255),w,b
  3984   00F12E  22DD               	addwfc	postdec2,f,c
  3985   00F130                     
  3986                           ; BSR set to: 0
  3987   00F130  51D8               	movf	f_write@wcnt& (0+255),w,b
  3988   00F132  27CE               	addwf	f_write@wbuff& (0+255),f,b
  3989   00F134  51D9               	movf	(f_write@wcnt+1)& (0+255),w,b
  3990   00F136  23CF               	addwfc	(f_write@wbuff+1)& (0+255),f,b
  3991   00F138                     
  3992                           ; BSR set to: 0
  3993   00F138  EE20 F010          	lfsr	2,16
  3994   00F13C  51B5               	movf	f_write@fp& (0+255),w,b
  3995   00F13E  26D9               	addwf	fsr2l,f,c
  3996   00F140  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  3997   00F142  22DA               	addwfc	fsr2h,f,c
  3998   00F144  51D8               	movf	f_write@wcnt& (0+255),w,b
  3999   00F146  26DE               	addwf	postinc2,f,c
  4000   00F148  51D9               	movf	(f_write@wcnt+1)& (0+255),w,b
  4001   00F14A  22DE               	addwfc	postinc2,f,c
  4002   00F14C  0E00               	movlw	0
  4003   00F14E  22DE               	addwfc	postinc2,f,c
  4004   00F150  22DE               	addwfc	postinc2,f,c
  4005   00F152                     
  4006                           ; BSR set to: 0
  4007   00F152  EE20 F010          	lfsr	2,16
  4008   00F156  51B5               	movf	f_write@fp& (0+255),w,b
  4009   00F158  26D9               	addwf	fsr2l,f,c
  4010   00F15A  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  4011   00F15C  22DA               	addwfc	fsr2h,f,c
  4012   00F15E  EE10 F00A          	lfsr	1,10
  4013   00F162  51B5               	movf	f_write@fp& (0+255),w,b
  4014   00F164  26E1               	addwf	fsr1l,f,c
  4015   00F166  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  4016   00F168  22E2               	addwfc	fsr1h,f,c
  4017   00F16A  50DE               	movf	postinc2,w,c
  4018   00F16C  5CE6               	subwf	postinc1,w,c
  4019   00F16E  50DE               	movf	postinc2,w,c
  4020   00F170  58E6               	subwfb	postinc1,w,c
  4021   00F172  50DE               	movf	postinc2,w,c
  4022   00F174  58E6               	subwfb	postinc1,w,c
  4023   00F176  50DE               	movf	postinc2,w,c
  4024   00F178  58E6               	subwfb	postinc1,w,c
  4025   00F17A  A0D8               	btfss	status,0,c
  4026   00F17C  EFC2  F078         	goto	u12041
  4027   00F180  EFC4  F078         	goto	u12040
  4028   00F184                     u12041:
  4029   00F184  EFD4  F078         	goto	l9186
  4030   00F188                     u12040:
  4031   00F188                     
  4032                           ; BSR set to: 0
  4033   00F188  EE20 F00A          	lfsr	2,10
  4034   00F18C  51B5               	movf	f_write@fp& (0+255),w,b
  4035   00F18E  26D9               	addwf	fsr2l,f,c
  4036   00F190  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  4037   00F192  22DA               	addwfc	fsr2h,f,c
  4038   00F194  CFDE F0C9          	movff	postinc2,_f_write$1546
  4039   00F198  CFDE F0CA          	movff	postinc2,_f_write$1546+1
  4040   00F19C  CFDE F0CB          	movff	postinc2,_f_write$1546+2
  4041   00F1A0  CFDE F0CC          	movff	postinc2,_f_write$1546+3
  4042   00F1A4  EFE2  F078         	goto	l699
  4043   00F1A8                     l9186:
  4044                           
  4045                           ; BSR set to: 0
  4046   00F1A8  EE20 F010          	lfsr	2,16
  4047   00F1AC  51B5               	movf	f_write@fp& (0+255),w,b
  4048   00F1AE  26D9               	addwf	fsr2l,f,c
  4049   00F1B0  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  4050   00F1B2  22DA               	addwfc	fsr2h,f,c
  4051   00F1B4  CFDE F0C9          	movff	postinc2,_f_write$1546
  4052   00F1B8  CFDE F0CA          	movff	postinc2,_f_write$1546+1
  4053   00F1BC  CFDE F0CB          	movff	postinc2,_f_write$1546+2
  4054   00F1C0  CFDE F0CC          	movff	postinc2,_f_write$1546+3
  4055   00F1C4                     l699:
  4056                           
  4057                           ; BSR set to: 0
  4058   00F1C4  EE20 F00A          	lfsr	2,10
  4059   00F1C8  51B5               	movf	f_write@fp& (0+255),w,b
  4060   00F1CA  26D9               	addwf	fsr2l,f,c
  4061   00F1CC  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  4062   00F1CE  22DA               	addwfc	fsr2h,f,c
  4063   00F1D0  C0C9  FFDE         	movff	_f_write$1546,postinc2
  4064   00F1D4  C0CA  FFDE         	movff	_f_write$1546+1,postinc2
  4065   00F1D8  C0CB  FFDE         	movff	_f_write$1546+2,postinc2
  4066   00F1DC  C0CC  FFDE         	movff	_f_write$1546+3,postinc2
  4067   00F1E0                     l9188:
  4068                           
  4069                           ; BSR set to: 0
  4070   00F1E0  51B9               	movf	f_write@btw& (0+255),w,b
  4071   00F1E2  11BA               	iorwf	(f_write@btw+1)& (0+255),w,b
  4072   00F1E4  A4D8               	btfss	status,2,c
  4073   00F1E6  EFF7  F078         	goto	u12051
  4074   00F1EA  EFF9  F078         	goto	u12050
  4075   00F1EE                     u12051:
  4076   00F1EE  EF48  F075         	goto	l9066
  4077   00F1F2                     u12050:
  4078   00F1F2                     l9190:
  4079                           
  4080                           ; BSR set to: 0
  4081                           ;mcc_generated_files/fatfs/ff.c: 3919:  fp->flag |= 0x40;
  4082   00F1F2  EE20 F00E          	lfsr	2,14
  4083   00F1F6  51B5               	movf	f_write@fp& (0+255),w,b
  4084   00F1F8  26D9               	addwf	fsr2l,f,c
  4085   00F1FA  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  4086   00F1FC  22DA               	addwfc	fsr2h,f,c
  4087   00F1FE  0E00               	movlw	0
  4088   00F200  8CDB               	bsf	plusw2,6,c
  4089   00F202                     
  4090                           ; BSR set to: 0
  4091                           ;mcc_generated_files/fatfs/ff.c: 3921:  return FR_OK;
  4092   00F202  0E00               	movlw	0
  4093   00F204                     l669:
  4094                           
  4095                           ; BSR set to: 0
  4096   00F204  0012               	return		;funcret
  4097   00F206                     __end_of_f_write:
  4098                           	callstack 0
  4099                           
  4100 ;; *************** function _f_open *****************
  4101 ;; Defined at:
  4102 ;;		line 3520 in file "mcc_generated_files/fatfs/ff.c"
  4103 ;; Parameters:    Size  Location     Type
  4104 ;;  fp              2  133[BANK0 ] PTR struct .
  4105 ;;		 -> Fil(546), file(546), 
  4106 ;;  path            2  135[BANK0 ] PTR const unsigned char 
  4107 ;;		 -> STR_15(1), STR_13(13), STR_12(13), STR_11(13), 
  4108 ;;		 -> STR_10(9), STR_3(3), STR_2(10), STR_1(3), 
  4109 ;;  mode            1  137[BANK0 ] unsigned char 
  4110 ;; Auto vars:     Size  Location     Type
  4111 ;;  dj             40   27[BANK1 ] struct .
  4112 ;;  clst            4   20[BANK1 ] unsigned long 
  4113 ;;  ofs             4   16[BANK1 ] unsigned long 
  4114 ;;  cl              4   12[BANK1 ] unsigned long 
  4115 ;;  bcs             4    8[BANK1 ] unsigned long 
  4116 ;;  sc              4    4[BANK1 ] unsigned long 
  4117 ;;  dw              4    0[BANK1 ] unsigned long 
  4118 ;;  fs              2   24[BANK1 ] PTR struct .
  4119 ;;		 -> FatFs(563), drive(563), NULL(0), 
  4120 ;;  res             1   26[BANK1 ] enum E68
  4121 ;; Return value:  Size  Location     Type
  4122 ;;                  1    wreg      enum E68
  4123 ;; Registers used:
  4124 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  4125 ;; Tracked objects:
  4126 ;;		On entry : 0/0
  4127 ;;		On exit  : 0/0
  4128 ;;		Unchanged: 0/0
  4129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4130 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4131 ;;      Locals:         0       0      67       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4132 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4133 ;;      Totals:         0      13      67       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4134 ;;Total ram usage:       80 bytes
  4135 ;; Hardware stack levels used: 1
  4136 ;; Hardware stack levels required when called: 12
  4137 ;; This function calls:
  4138 ;;		_clst2sect
  4139 ;;		_dir_register
  4140 ;;		_disk_read
  4141 ;;		_find_volume
  4142 ;;		_follow_path
  4143 ;;		_get_fat
  4144 ;;		_ld_clust
  4145 ;;		_ld_dword
  4146 ;;		_mem_set
  4147 ;;		_move_window
  4148 ;;		_remove_chain
  4149 ;;		_st_clust
  4150 ;;		_st_dword
  4151 ;; This function is called by:
  4152 ;;		_write_to_file
  4153 ;;		_FatFsDemo_Tasks
  4154 ;; This function uses a non-reentrant model
  4155 ;;
  4156                           
  4157                           	psect	text6
  4158   00D210                     __ptext6:
  4159                           	callstack 0
  4160   00D210                     _f_open:
  4161                           	callstack 17
  4162   00D210                     
  4163                           ;mcc_generated_files/fatfs/ff.c: 3521:  FIL* fp,;mcc_generated_files/fatfs/ff.c: 3522:  
      +                          const TCHAR* path,;mcc_generated_files/fatfs/ff.c: 3523:  BYTE mode;mcc_generated_files/
      +                          fatfs/ff.c: 3525: {;mcc_generated_files/fatfs/ff.c: 3526:  FRESULT res;;mcc_generated_fi
      +                          les/fatfs/ff.c: 3527:  FFDIR dj;;mcc_generated_files/fatfs/ff.c: 3528:  FATFS *fs;;mcc_g
      +                          enerated_files/fatfs/ff.c: 3530:  DWORD dw, cl, bcs, clst, sc;;mcc_generated_files/fatfs
      +                          /ff.c: 3531:  FSIZE_t ofs;;mcc_generated_files/fatfs/ff.c: 3536:  if (!fp) return FR_INV
      +                          ALID_OBJECT;
  4164   00D210  0100               	movlb	0	; () banked
  4165   00D212  51E5               	movf	f_open@fp& (0+255),w,b
  4166   00D214  11E6               	iorwf	(f_open@fp+1)& (0+255),w,b
  4167   00D216  A4D8               	btfss	status,2,c
  4168   00D218  EF10  F069         	goto	u11441
  4169   00D21C  EF12  F069         	goto	u11440
  4170   00D220                     u11441:
  4171   00D220  EF15  F069         	goto	l8894
  4172   00D224                     u11440:
  4173   00D224                     
  4174                           ; BSR set to: 0
  4175   00D224  0E09               	movlw	9
  4176   00D226  EFE3  F06C         	goto	l597
  4177   00D22A                     l8894:
  4178   00D22A                     
  4179                           ; BSR set to: 0
  4180   00D22A  0E3F               	movlw	63
  4181   00D22C  17E9               	andwf	f_open@mode& (0+255),f,b
  4182   00D22E                     
  4183                           ; BSR set to: 0
  4184                           ;mcc_generated_files/fatfs/ff.c: 3540:  res = find_volume(&path, &fs, mode);
  4185   00D22E  0EE7               	movlw	low f_open@path
  4186   00D230  6F7E               	movwf	find_volume@path& (0+255),b
  4187   00D232  0E00               	movlw	high f_open@path
  4188   00D234  6F7F               	movwf	(find_volume@path+1)& (0+255),b
  4189   00D236  0E97               	movlw	low f_open@fs
  4190   00D238  6F80               	movwf	find_volume@rfs& (0+255),b
  4191   00D23A  0E01               	movlw	high f_open@fs
  4192   00D23C  6F81               	movwf	(find_volume@rfs+1)& (0+255),b
  4193   00D23E  C0E9  F082         	movff	f_open@mode,find_volume@mode
  4194   00D242  EC03  F079         	call	_find_volume	;wreg free
  4195   00D246  0101               	movlb	1	; () banked
  4196   00D248  6F99               	movwf	f_open@res& (0+255),b
  4197   00D24A                     
  4198                           ; BSR set to: 1
  4199                           ;mcc_generated_files/fatfs/ff.c: 3541:  if (res == FR_OK) {
  4200   00D24A  5199               	movf	f_open@res& (0+255),w,b
  4201   00D24C  A4D8               	btfss	status,2,c
  4202   00D24E  EF2B  F069         	goto	u11451
  4203   00D252  EF2D  F069         	goto	u11450
  4204   00D256                     u11451:
  4205   00D256  EFD1  F06C         	goto	l602
  4206   00D25A                     u11450:
  4207   00D25A                     
  4208                           ; BSR set to: 1
  4209                           ;mcc_generated_files/fatfs/ff.c: 3542:   dj.obj.fs = fs;
  4210   00D25A  C197  F19A         	movff	f_open@fs,f_open@dj
  4211   00D25E  C198  F19B         	movff	f_open@fs+1,f_open@dj+1
  4212   00D262                     
  4213                           ; BSR set to: 1
  4214                           ;mcc_generated_files/fatfs/ff.c: 3544:   res = follow_path(&dj, path);
  4215   00D262  0E9A               	movlw	low f_open@dj
  4216   00D264  0100               	movlb	0	; () banked
  4217   00D266  6FD7               	movwf	follow_path@dp& (0+255),b
  4218   00D268  0E01               	movlw	high f_open@dj
  4219   00D26A  6FD8               	movwf	(follow_path@dp+1)& (0+255),b
  4220   00D26C  C0E7  F0D9         	movff	f_open@path,follow_path@path
  4221   00D270  C0E8  F0DA         	movff	f_open@path+1,follow_path@path+1
  4222   00D274  EC71  F051         	call	_follow_path	;wreg free
  4223   00D278  0101               	movlb	1	; () banked
  4224   00D27A  6F99               	movwf	f_open@res& (0+255),b
  4225   00D27C                     
  4226                           ; BSR set to: 1
  4227                           ;mcc_generated_files/fatfs/ff.c: 3546:   if (res == FR_OK) {
  4228   00D27C  5199               	movf	f_open@res& (0+255),w,b
  4229   00D27E  A4D8               	btfss	status,2,c
  4230   00D280  EF44  F069         	goto	u11461
  4231   00D284  EF46  F069         	goto	u11460
  4232   00D288                     u11461:
  4233   00D288  EF4F  F069         	goto	l8914
  4234   00D28C                     u11460:
  4235   00D28C                     
  4236                           ; BSR set to: 1
  4237                           ;mcc_generated_files/fatfs/ff.c: 3547:    if (dj.fn[11] & 0x80) {
  4238   00D28C  AFC1               	btfss	(f_open@dj+39)& (0+255),7,b
  4239   00D28E  EF4B  F069         	goto	u11471
  4240   00D292  EF4D  F069         	goto	u11470
  4241   00D296                     u11471:
  4242   00D296  EF4F  F069         	goto	l8914
  4243   00D29A                     u11470:
  4244   00D29A                     
  4245                           ; BSR set to: 1
  4246                           ;mcc_generated_files/fatfs/ff.c: 3548:     res = FR_INVALID_NAME;
  4247   00D29A  0E06               	movlw	6
  4248   00D29C  6F99               	movwf	f_open@res& (0+255),b
  4249   00D29E                     l8914:
  4250                           
  4251                           ; BSR set to: 1
  4252                           ;mcc_generated_files/fatfs/ff.c: 3557:   if (mode & (0x08 | 0x10 | 0x04)) {
  4253   00D29E  C0E9  F0EA         	movff	f_open@mode,??_f_open
  4254   00D2A2  0E1C               	movlw	28
  4255   00D2A4  0100               	movlb	0	; () banked
  4256   00D2A6  17EA               	andwf	??_f_open& (0+255),f,b
  4257   00D2A8  B4D8               	btfsc	status,2,c
  4258   00D2AA  EF59  F069         	goto	u11481
  4259   00D2AE  EF5B  F069         	goto	u11480
  4260   00D2B2                     u11481:
  4261   00D2B2  EF6C  F06A         	goto	l8954
  4262   00D2B6                     u11480:
  4263   00D2B6                     
  4264                           ; BSR set to: 0
  4265                           ;mcc_generated_files/fatfs/ff.c: 3558:    if (res != FR_OK) {
  4266   00D2B6  0101               	movlb	1	; () banked
  4267   00D2B8  5199               	movf	f_open@res& (0+255),w,b
  4268   00D2BA  B4D8               	btfsc	status,2,c
  4269   00D2BC  EF62  F069         	goto	u11491
  4270   00D2C0  EF64  F069         	goto	u11490
  4271   00D2C4                     u11491:
  4272   00D2C4  EF7A  F069         	goto	l8924
  4273   00D2C8                     u11490:
  4274   00D2C8                     
  4275                           ; BSR set to: 1
  4276                           ;mcc_generated_files/fatfs/ff.c: 3559:     if (res == FR_NO_FILE) {
  4277   00D2C8  0E04               	movlw	4
  4278   00D2CA  1999               	xorwf	f_open@res& (0+255),w,b
  4279   00D2CC  A4D8               	btfss	status,2,c
  4280   00D2CE  EF6B  F069         	goto	u11501
  4281   00D2D2  EF6D  F069         	goto	u11500
  4282   00D2D6                     u11501:
  4283   00D2D6  EF76  F069         	goto	l8922
  4284   00D2DA                     u11500:
  4285   00D2DA                     
  4286                           ; BSR set to: 1
  4287                           ;mcc_generated_files/fatfs/ff.c: 3563:      res = dir_register(&dj);
  4288   00D2DA  0E9A               	movlw	low f_open@dj
  4289   00D2DC  0100               	movlb	0	; () banked
  4290   00D2DE  6FDB               	movwf	dir_register@dp& (0+255),b
  4291   00D2E0  0E01               	movlw	high f_open@dj
  4292   00D2E2  6FDC               	movwf	(dir_register@dp+1)& (0+255),b
  4293   00D2E4  EC89  F045         	call	_dir_register	;wreg free
  4294   00D2E8  0101               	movlb	1	; () banked
  4295   00D2EA  6F99               	movwf	f_open@res& (0+255),b
  4296   00D2EC                     l8922:
  4297                           
  4298                           ; BSR set to: 1
  4299                           ;mcc_generated_files/fatfs/ff.c: 3566:     mode |= 0x08;
  4300   00D2EC  0100               	movlb	0	; () banked
  4301   00D2EE  87E9               	bsf	f_open@mode& (0+255),3,b
  4302                           
  4303                           ;mcc_generated_files/fatfs/ff.c: 3567:    }
  4304   00D2F0  EF95  F069         	goto	l608
  4305   00D2F4                     l8924:
  4306                           
  4307                           ; BSR set to: 1
  4308                           ;mcc_generated_files/fatfs/ff.c: 3569:     if (dj.obj.attr & (0x01 | 0x10)) {
  4309   00D2F4  C19E  F0EA         	movff	f_open@dj+4,??_f_open
  4310   00D2F8  0E11               	movlw	17
  4311   00D2FA  0100               	movlb	0	; () banked
  4312   00D2FC  17EA               	andwf	??_f_open& (0+255),f,b
  4313   00D2FE  B4D8               	btfsc	status,2,c
  4314   00D300  EF84  F069         	goto	u11511
  4315   00D304  EF86  F069         	goto	u11510
  4316   00D308                     u11511:
  4317   00D308  EF8B  F069         	goto	l609
  4318   00D30C                     u11510:
  4319   00D30C                     
  4320                           ; BSR set to: 0
  4321                           ;mcc_generated_files/fatfs/ff.c: 3570:      res = FR_DENIED;
  4322   00D30C  0E07               	movlw	7
  4323   00D30E  0101               	movlb	1	; () banked
  4324   00D310  6F99               	movwf	f_open@res& (0+255),b
  4325                           
  4326                           ;mcc_generated_files/fatfs/ff.c: 3571:     } else {
  4327   00D312  EF95  F069         	goto	l608
  4328   00D316                     l609:
  4329                           
  4330                           ; BSR set to: 0
  4331                           ;mcc_generated_files/fatfs/ff.c: 3572:      if (mode & 0x04) res = FR_EXIST;
  4332   00D316  A5E9               	btfss	f_open@mode& (0+255),2,b
  4333   00D318  EF90  F069         	goto	u11521
  4334   00D31C  EF92  F069         	goto	u11520
  4335   00D320                     u11521:
  4336   00D320  EF95  F069         	goto	l608
  4337   00D324                     u11520:
  4338   00D324                     
  4339                           ; BSR set to: 0
  4340   00D324  0E08               	movlw	8
  4341   00D326  0101               	movlb	1	; () banked
  4342   00D328  6F99               	movwf	f_open@res& (0+255),b
  4343   00D32A                     l608:
  4344                           
  4345                           ;mcc_generated_files/fatfs/ff.c: 3575:    if (res == FR_OK && (mode & 0x08)) {
  4346   00D32A  0101               	movlb	1	; () banked
  4347   00D32C  5199               	movf	f_open@res& (0+255),w,b
  4348   00D32E  A4D8               	btfss	status,2,c
  4349   00D330  EF9C  F069         	goto	u11531
  4350   00D334  EF9E  F069         	goto	u11530
  4351   00D338                     u11531:
  4352   00D338  EF92  F06A         	goto	l615
  4353   00D33C                     u11530:
  4354   00D33C                     
  4355                           ; BSR set to: 1
  4356   00D33C  0100               	movlb	0	; () banked
  4357   00D33E  A7E9               	btfss	f_open@mode& (0+255),3,b
  4358   00D340  EFA4  F069         	goto	u11541
  4359   00D344  EFA6  F069         	goto	u11540
  4360   00D348                     u11541:
  4361   00D348  EF92  F06A         	goto	l615
  4362   00D34C                     u11540:
  4363   00D34C                     
  4364                           ; BSR set to: 0
  4365                           ;mcc_generated_files/fatfs/ff.c: 3594:     {;mcc_generated_files/fatfs/ff.c: 3596:      
      +                          cl = ld_clust(fs, dj.dir);
  4366   00D34C  C197  F008         	movff	f_open@fs,ld_clust@fs
  4367   00D350  C198  F009         	movff	f_open@fs+1,ld_clust@fs+1
  4368   00D354  C1B4  F00A         	movff	f_open@dj+26,ld_clust@dir
  4369   00D358  C1B5  F00B         	movff	f_open@dj+27,ld_clust@dir+1
  4370   00D35C  ECD1  F041         	call	_ld_clust	;wreg free
  4371   00D360  C008  F18B         	movff	?_ld_clust,f_open@cl
  4372   00D364  C009  F18C         	movff	?_ld_clust+1,f_open@cl+1
  4373   00D368  C00A  F18D         	movff	?_ld_clust+2,f_open@cl+2
  4374   00D36C  C00B  F18E         	movff	?_ld_clust+3,f_open@cl+3
  4375                           
  4376                           ;mcc_generated_files/fatfs/ff.c: 3597:      st_dword(dj.dir + 14, ((DWORD)(2023 - 1980) 
      +                          << 25 | (DWORD)2 << 21 | (DWORD)6 << 16));
  4377   00D370  0E0E               	movlw	14
  4378   00D372  0101               	movlb	1	; () banked
  4379   00D374  25B4               	addwf	(f_open@dj+26)& (0+255),w,b
  4380   00D376  6E01               	movwf	st_dword@ptr^0,c
  4381   00D378  0E00               	movlw	0
  4382   00D37A  21B5               	addwfc	(f_open@dj+27)& (0+255),w,b
  4383   00D37C  6E02               	movwf	(st_dword@ptr+1)^0,c
  4384   00D37E  0E00               	movlw	0
  4385   00D380  6E03               	movwf	st_dword@val^0,c
  4386   00D382  0E00               	movlw	0
  4387   00D384  6E04               	movwf	(st_dword@val+1)^0,c
  4388   00D386  0E46               	movlw	70
  4389   00D388  6E05               	movwf	(st_dword@val+2)^0,c
  4390   00D38A  0E56               	movlw	86
  4391   00D38C  6E06               	movwf	(st_dword@val+3)^0,c
  4392   00D38E  ECE9  F040         	call	_st_dword	;wreg free
  4393   00D392                     
  4394                           ;mcc_generated_files/fatfs/ff.c: 3598:      dj.dir[11] = 0x20;
  4395   00D392  0101               	movlb	1	; () banked
  4396   00D394  EE20 F00B          	lfsr	2,11
  4397   00D398  51B4               	movf	(f_open@dj+26)& (0+255),w,b
  4398   00D39A  26D9               	addwf	fsr2l,f,c
  4399   00D39C  51B5               	movf	(f_open@dj+27)& (0+255),w,b
  4400   00D39E  22DA               	addwfc	fsr2h,f,c
  4401   00D3A0  0E20               	movlw	32
  4402   00D3A2  6EDF               	movwf	indf2,c
  4403   00D3A4                     
  4404                           ; BSR set to: 1
  4405                           ;mcc_generated_files/fatfs/ff.c: 3599:      st_clust(fs, dj.dir, 0);
  4406   00D3A4  C197  F005         	movff	f_open@fs,st_clust@fs
  4407   00D3A8  C198  F006         	movff	f_open@fs+1,st_clust@fs+1
  4408   00D3AC  C1B4  F007         	movff	f_open@dj+26,st_clust@dir
  4409   00D3B0  C1B5  F008         	movff	f_open@dj+27,st_clust@dir+1
  4410   00D3B4  0E00               	movlw	0
  4411   00D3B6  6E09               	movwf	st_clust@cl^0,c
  4412   00D3B8  0E00               	movlw	0
  4413   00D3BA  6E0A               	movwf	(st_clust@cl+1)^0,c
  4414   00D3BC  0E00               	movlw	0
  4415   00D3BE  6E0B               	movwf	(st_clust@cl+2)^0,c
  4416   00D3C0  0E00               	movlw	0
  4417   00D3C2  6E0C               	movwf	(st_clust@cl+3)^0,c
  4418   00D3C4  EC2F  F03F         	call	_st_clust	;wreg free
  4419   00D3C8                     
  4420                           ;mcc_generated_files/fatfs/ff.c: 3600:      st_dword(dj.dir + 28, 0);
  4421   00D3C8  0E1C               	movlw	28
  4422   00D3CA  0101               	movlb	1	; () banked
  4423   00D3CC  25B4               	addwf	(f_open@dj+26)& (0+255),w,b
  4424   00D3CE  6E01               	movwf	st_dword@ptr^0,c
  4425   00D3D0  0E00               	movlw	0
  4426   00D3D2  21B5               	addwfc	(f_open@dj+27)& (0+255),w,b
  4427   00D3D4  6E02               	movwf	(st_dword@ptr+1)^0,c
  4428   00D3D6  0E00               	movlw	0
  4429   00D3D8  6E03               	movwf	st_dword@val^0,c
  4430   00D3DA  0E00               	movlw	0
  4431   00D3DC  6E04               	movwf	(st_dword@val+1)^0,c
  4432   00D3DE  0E00               	movlw	0
  4433   00D3E0  6E05               	movwf	(st_dword@val+2)^0,c
  4434   00D3E2  0E00               	movlw	0
  4435   00D3E4  6E06               	movwf	(st_dword@val+3)^0,c
  4436   00D3E6  ECE9  F040         	call	_st_dword	;wreg free
  4437   00D3EA                     
  4438                           ;mcc_generated_files/fatfs/ff.c: 3601:      fs->wflag = 1;
  4439   00D3EA  0101               	movlb	1	; () banked
  4440   00D3EC  EE20 F003          	lfsr	2,3
  4441   00D3F0  5197               	movf	f_open@fs& (0+255),w,b
  4442   00D3F2  26D9               	addwf	fsr2l,f,c
  4443   00D3F4  5198               	movf	(f_open@fs+1)& (0+255),w,b
  4444   00D3F6  22DA               	addwfc	fsr2h,f,c
  4445   00D3F8  0E01               	movlw	1
  4446   00D3FA  6EDF               	movwf	indf2,c
  4447   00D3FC                     
  4448                           ; BSR set to: 1
  4449                           ;mcc_generated_files/fatfs/ff.c: 3602:      if (cl != 0) {
  4450   00D3FC  518B               	movf	f_open@cl& (0+255),w,b
  4451   00D3FE  118C               	iorwf	(f_open@cl+1)& (0+255),w,b
  4452   00D400  118D               	iorwf	(f_open@cl+2)& (0+255),w,b
  4453   00D402  118E               	iorwf	(f_open@cl+3)& (0+255),w,b
  4454   00D404  B4D8               	btfsc	status,2,c
  4455   00D406  EF07  F06A         	goto	u11551
  4456   00D40A  EF09  F06A         	goto	u11550
  4457   00D40E                     u11551:
  4458   00D40E  EF92  F06A         	goto	l615
  4459   00D412                     u11550:
  4460   00D412                     
  4461                           ; BSR set to: 1
  4462                           ;mcc_generated_files/fatfs/ff.c: 3603:       dw = fs->winsect;
  4463   00D412  EE20 F02F          	lfsr	2,47
  4464   00D416  5197               	movf	f_open@fs& (0+255),w,b
  4465   00D418  26D9               	addwf	fsr2l,f,c
  4466   00D41A  5198               	movf	(f_open@fs+1)& (0+255),w,b
  4467   00D41C  22DA               	addwfc	fsr2h,f,c
  4468   00D41E  CFDE F17F          	movff	postinc2,f_open@dw
  4469   00D422  CFDE F180          	movff	postinc2,f_open@dw+1
  4470   00D426  CFDE F181          	movff	postinc2,f_open@dw+2
  4471   00D42A  CFDE F182          	movff	postinc2,f_open@dw+3
  4472   00D42E                     
  4473                           ; BSR set to: 1
  4474                           ;mcc_generated_files/fatfs/ff.c: 3604:       res = remove_chain(&dj.obj, cl, 0);
  4475   00D42E  0E9A               	movlw	low f_open@dj
  4476   00D430  0100               	movlb	0	; () banked
  4477   00D432  6F98               	movwf	remove_chain@obj& (0+255),b
  4478   00D434  0E01               	movlw	high f_open@dj
  4479   00D436  6F99               	movwf	(remove_chain@obj+1)& (0+255),b
  4480   00D438  C18B  F09A         	movff	f_open@cl,remove_chain@clst
  4481   00D43C  C18C  F09B         	movff	f_open@cl+1,remove_chain@clst+1
  4482   00D440  C18D  F09C         	movff	f_open@cl+2,remove_chain@clst+2
  4483   00D444  C18E  F09D         	movff	f_open@cl+3,remove_chain@clst+3
  4484   00D448  0E00               	movlw	0
  4485   00D44A  6F9E               	movwf	remove_chain@pclst& (0+255),b
  4486   00D44C  0E00               	movlw	0
  4487   00D44E  6F9F               	movwf	(remove_chain@pclst+1)& (0+255),b
  4488   00D450  0E00               	movlw	0
  4489   00D452  6FA0               	movwf	(remove_chain@pclst+2)& (0+255),b
  4490   00D454  0E00               	movlw	0
  4491   00D456  6FA1               	movwf	(remove_chain@pclst+3)& (0+255),b
  4492   00D458  EC58  F050         	call	_remove_chain	;wreg free
  4493   00D45C  0101               	movlb	1	; () banked
  4494   00D45E  6F99               	movwf	f_open@res& (0+255),b
  4495   00D460                     
  4496                           ; BSR set to: 1
  4497                           ;mcc_generated_files/fatfs/ff.c: 3605:       if (res == FR_OK) {
  4498   00D460  5199               	movf	f_open@res& (0+255),w,b
  4499   00D462  A4D8               	btfss	status,2,c
  4500   00D464  EF36  F06A         	goto	u11561
  4501   00D468  EF38  F06A         	goto	u11560
  4502   00D46C                     u11561:
  4503   00D46C  EF92  F06A         	goto	l615
  4504   00D470                     u11560:
  4505   00D470                     
  4506                           ; BSR set to: 1
  4507                           ;mcc_generated_files/fatfs/ff.c: 3606:        res = move_window(fs, dw);
  4508   00D470  C197  F070         	movff	f_open@fs,move_window@fs
  4509   00D474  C198  F071         	movff	f_open@fs+1,move_window@fs+1
  4510   00D478  C17F  F072         	movff	f_open@dw,move_window@sector
  4511   00D47C  C180  F073         	movff	f_open@dw+1,move_window@sector+1
  4512   00D480  C181  F074         	movff	f_open@dw+2,move_window@sector+2
  4513   00D484  C182  F075         	movff	f_open@dw+3,move_window@sector+3
  4514   00D488  EC51  F044         	call	_move_window	;wreg free
  4515   00D48C  0101               	movlb	1	; () banked
  4516   00D48E  6F99               	movwf	f_open@res& (0+255),b
  4517   00D490                     
  4518                           ; BSR set to: 1
  4519                           ;mcc_generated_files/fatfs/ff.c: 3607:        fs->last_clst = cl - 1;
  4520   00D490  0EFF               	movlw	255
  4521   00D492  258B               	addwf	f_open@cl& (0+255),w,b
  4522   00D494  0100               	movlb	0	; () banked
  4523   00D496  6FEA               	movwf	??_f_open& (0+255),b
  4524   00D498  0EFF               	movlw	255
  4525   00D49A  0101               	movlb	1	; () banked
  4526   00D49C  218C               	addwfc	(f_open@cl+1)& (0+255),w,b
  4527   00D49E  0100               	movlb	0	; () banked
  4528   00D4A0  6FEB               	movwf	(??_f_open+1)& (0+255),b
  4529   00D4A2  0EFF               	movlw	255
  4530   00D4A4  0101               	movlb	1	; () banked
  4531   00D4A6  218D               	addwfc	(f_open@cl+2)& (0+255),w,b
  4532   00D4A8  0100               	movlb	0	; () banked
  4533   00D4AA  6FEC               	movwf	(??_f_open+2)& (0+255),b
  4534   00D4AC  0EFF               	movlw	255
  4535   00D4AE  0101               	movlb	1	; () banked
  4536   00D4B0  218E               	addwfc	(f_open@cl+3)& (0+255),w,b
  4537   00D4B2  0100               	movlb	0	; () banked
  4538   00D4B4  6FED               	movwf	(??_f_open+3)& (0+255),b
  4539   00D4B6  0101               	movlb	1	; () banked
  4540   00D4B8  EE20 F00B          	lfsr	2,11
  4541   00D4BC  5197               	movf	f_open@fs& (0+255),w,b
  4542   00D4BE  26D9               	addwf	fsr2l,f,c
  4543   00D4C0  5198               	movf	(f_open@fs+1)& (0+255),w,b
  4544   00D4C2  22DA               	addwfc	fsr2h,f,c
  4545   00D4C4  C0EA  FFDE         	movff	??_f_open,postinc2
  4546   00D4C8  C0EB  FFDE         	movff	??_f_open+1,postinc2
  4547   00D4CC  C0EC  FFDE         	movff	??_f_open+2,postinc2
  4548   00D4D0  C0ED  FFDE         	movff	??_f_open+3,postinc2
  4549   00D4D4  EF92  F06A         	goto	l615
  4550   00D4D8                     l8954:
  4551                           
  4552                           ; BSR set to: 0
  4553                           ;mcc_generated_files/fatfs/ff.c: 3614:    if (res == FR_OK) {
  4554   00D4D8  0101               	movlb	1	; () banked
  4555   00D4DA  5199               	movf	f_open@res& (0+255),w,b
  4556   00D4DC  A4D8               	btfss	status,2,c
  4557   00D4DE  EF73  F06A         	goto	u11571
  4558   00D4E2  EF75  F06A         	goto	u11570
  4559   00D4E6                     u11571:
  4560   00D4E6  EF92  F06A         	goto	l615
  4561   00D4EA                     u11570:
  4562   00D4EA                     
  4563                           ; BSR set to: 1
  4564                           ;mcc_generated_files/fatfs/ff.c: 3615:     if (dj.obj.attr & 0x10) {
  4565   00D4EA  A99E               	btfss	(f_open@dj+4)& (0+255),4,b
  4566   00D4EC  EF7A  F06A         	goto	u11581
  4567   00D4F0  EF7C  F06A         	goto	u11580
  4568   00D4F4                     u11581:
  4569   00D4F4  EF80  F06A         	goto	l617
  4570   00D4F8                     u11580:
  4571   00D4F8                     
  4572                           ; BSR set to: 1
  4573                           ;mcc_generated_files/fatfs/ff.c: 3616:      res = FR_NO_FILE;
  4574   00D4F8  0E04               	movlw	4
  4575   00D4FA  6F99               	movwf	f_open@res& (0+255),b
  4576                           
  4577                           ;mcc_generated_files/fatfs/ff.c: 3617:     } else {
  4578   00D4FC  EF92  F06A         	goto	l615
  4579   00D500                     l617:
  4580                           
  4581                           ; BSR set to: 1
  4582                           ;mcc_generated_files/fatfs/ff.c: 3618:      if ((mode & 0x02) && (dj.obj.attr & 0x01)) {
  4583   00D500  0100               	movlb	0	; () banked
  4584   00D502  A3E9               	btfss	f_open@mode& (0+255),1,b
  4585   00D504  EF86  F06A         	goto	u11591
  4586   00D508  EF88  F06A         	goto	u11590
  4587   00D50C                     u11591:
  4588   00D50C  EF92  F06A         	goto	l615
  4589   00D510                     u11590:
  4590   00D510                     
  4591                           ; BSR set to: 0
  4592   00D510  0101               	movlb	1	; () banked
  4593   00D512  A19E               	btfss	(f_open@dj+4)& (0+255),0,b
  4594   00D514  EF8E  F06A         	goto	u11601
  4595   00D518  EF90  F06A         	goto	u11600
  4596   00D51C                     u11601:
  4597   00D51C  EF92  F06A         	goto	l615
  4598   00D520                     u11600:
  4599   00D520                     
  4600                           ; BSR set to: 1
  4601                           ;mcc_generated_files/fatfs/ff.c: 3619:       res = FR_DENIED;
  4602   00D520  0E07               	movlw	7
  4603   00D522  6F99               	movwf	f_open@res& (0+255),b
  4604   00D524                     l615:
  4605                           
  4606                           ;mcc_generated_files/fatfs/ff.c: 3624:   if (res == FR_OK) {
  4607   00D524  0101               	movlb	1	; () banked
  4608   00D526  5199               	movf	f_open@res& (0+255),w,b
  4609   00D528  A4D8               	btfss	status,2,c
  4610   00D52A  EF99  F06A         	goto	u11611
  4611   00D52E  EF9B  F06A         	goto	u11610
  4612   00D532                     u11611:
  4613   00D532  EFC4  F06A         	goto	l8972
  4614   00D536                     u11610:
  4615   00D536                     
  4616                           ; BSR set to: 1
  4617                           ;mcc_generated_files/fatfs/ff.c: 3625:    if (mode & 0x08) mode |= 0x40;
  4618   00D536  0100               	movlb	0	; () banked
  4619   00D538  A7E9               	btfss	f_open@mode& (0+255),3,b
  4620   00D53A  EFA1  F06A         	goto	u11621
  4621   00D53E  EFA3  F06A         	goto	u11620
  4622   00D542                     u11621:
  4623   00D542  EFA4  F06A         	goto	l8968
  4624   00D546                     u11620:
  4625   00D546                     
  4626                           ; BSR set to: 0
  4627   00D546  8DE9               	bsf	f_open@mode& (0+255),6,b
  4628   00D548                     l8968:
  4629                           
  4630                           ; BSR set to: 0
  4631                           ;mcc_generated_files/fatfs/ff.c: 3626:    fp->dir_sect = fs->winsect;
  4632   00D548  0101               	movlb	1	; () banked
  4633   00D54A  EE20 F02F          	lfsr	2,47
  4634   00D54E  5197               	movf	f_open@fs& (0+255),w,b
  4635   00D550  26D9               	addwf	fsr2l,f,c
  4636   00D552  5198               	movf	(f_open@fs+1)& (0+255),w,b
  4637   00D554  22DA               	addwfc	fsr2h,f,c
  4638   00D556  0100               	movlb	0	; () banked
  4639   00D558  EE10 F01C          	lfsr	1,28
  4640   00D55C  51E5               	movf	f_open@fp& (0+255),w,b
  4641   00D55E  26E1               	addwf	fsr1l,f,c
  4642   00D560  51E6               	movf	(f_open@fp+1)& (0+255),w,b
  4643   00D562  22E2               	addwfc	fsr1h,f,c
  4644   00D564  CFDE FFE6          	movff	postinc2,postinc1
  4645   00D568  CFDE FFE6          	movff	postinc2,postinc1
  4646   00D56C  CFDE FFE6          	movff	postinc2,postinc1
  4647   00D570  CFDE FFE6          	movff	postinc2,postinc1
  4648   00D574                     
  4649                           ; BSR set to: 0
  4650                           ;mcc_generated_files/fatfs/ff.c: 3627:    fp->dir_ptr = dj.dir;
  4651   00D574  EE20 F020          	lfsr	2,32
  4652   00D578  51E5               	movf	f_open@fp& (0+255),w,b
  4653   00D57A  26D9               	addwf	fsr2l,f,c
  4654   00D57C  51E6               	movf	(f_open@fp+1)& (0+255),w,b
  4655   00D57E  22DA               	addwfc	fsr2h,f,c
  4656   00D580  C1B4  FFDE         	movff	f_open@dj+26,postinc2
  4657   00D584  C1B5  FFDD         	movff	f_open@dj+27,postdec2
  4658   00D588                     l8972:
  4659                           
  4660                           ;mcc_generated_files/fatfs/ff.c: 3645:   if (res == FR_OK) {
  4661   00D588  0101               	movlb	1	; () banked
  4662   00D58A  5199               	movf	f_open@res& (0+255),w,b
  4663   00D58C  A4D8               	btfss	status,2,c
  4664   00D58E  EFCB  F06A         	goto	u11631
  4665   00D592  EFCD  F06A         	goto	u11630
  4666   00D596                     u11631:
  4667   00D596  EFD1  F06C         	goto	l602
  4668   00D59A                     u11630:
  4669   00D59A                     
  4670                           ; BSR set to: 1
  4671                           ;mcc_generated_files/fatfs/ff.c: 3654:    {;mcc_generated_files/fatfs/ff.c: 3655:     fp
      +                          ->obj.sclust = ld_clust(fs, dj.dir);
  4672   00D59A  C197  F008         	movff	f_open@fs,ld_clust@fs
  4673   00D59E  C198  F009         	movff	f_open@fs+1,ld_clust@fs+1
  4674   00D5A2  C1B4  F00A         	movff	f_open@dj+26,ld_clust@dir
  4675   00D5A6  C1B5  F00B         	movff	f_open@dj+27,ld_clust@dir+1
  4676   00D5AA  ECD1  F041         	call	_ld_clust	;wreg free
  4677   00D5AE  0100               	movlb	0	; () banked
  4678   00D5B0  EE20 F006          	lfsr	2,6
  4679   00D5B4  51E5               	movf	f_open@fp& (0+255),w,b
  4680   00D5B6  26D9               	addwf	fsr2l,f,c
  4681   00D5B8  51E6               	movf	(f_open@fp+1)& (0+255),w,b
  4682   00D5BA  22DA               	addwfc	fsr2h,f,c
  4683   00D5BC  C008  FFDE         	movff	?_ld_clust,postinc2
  4684   00D5C0  C009  FFDE         	movff	?_ld_clust+1,postinc2
  4685   00D5C4  C00A  FFDE         	movff	?_ld_clust+2,postinc2
  4686   00D5C8  C00B  FFDE         	movff	?_ld_clust+3,postinc2
  4687                           
  4688                           ;mcc_generated_files/fatfs/ff.c: 3656:     fp->obj.objsize = ld_dword(dj.dir + 28);
  4689   00D5CC  0E1C               	movlw	28
  4690   00D5CE  0101               	movlb	1	; () banked
  4691   00D5D0  25B4               	addwf	(f_open@dj+26)& (0+255),w,b
  4692   00D5D2  6E01               	movwf	ld_dword@ptr^0,c
  4693   00D5D4  0E00               	movlw	0
  4694   00D5D6  21B5               	addwfc	(f_open@dj+27)& (0+255),w,b
  4695   00D5D8  6E02               	movwf	(ld_dword@ptr+1)^0,c
  4696   00D5DA  ECF5  F043         	call	_ld_dword	;wreg free
  4697   00D5DE  0100               	movlb	0	; () banked
  4698   00D5E0  EE20 F00A          	lfsr	2,10
  4699   00D5E4  51E5               	movf	f_open@fp& (0+255),w,b
  4700   00D5E6  26D9               	addwf	fsr2l,f,c
  4701   00D5E8  51E6               	movf	(f_open@fp+1)& (0+255),w,b
  4702   00D5EA  22DA               	addwfc	fsr2h,f,c
  4703   00D5EC  C001  FFDE         	movff	?_ld_dword,postinc2
  4704   00D5F0  C002  FFDE         	movff	?_ld_dword+1,postinc2
  4705   00D5F4  C003  FFDE         	movff	?_ld_dword+2,postinc2
  4706   00D5F8  C004  FFDE         	movff	?_ld_dword+3,postinc2
  4707   00D5FC                     
  4708                           ; BSR set to: 0
  4709                           ;mcc_generated_files/fatfs/ff.c: 3657:    };mcc_generated_files/fatfs/ff.c: 3661:    fp-
      +                          >obj.fs = fs;
  4710   00D5FC  C0E5  FFD9         	movff	f_open@fp,fsr2l
  4711   00D600  C0E6  FFDA         	movff	f_open@fp+1,fsr2h
  4712   00D604  C197  FFDE         	movff	f_open@fs,postinc2
  4713   00D608  C198  FFDD         	movff	f_open@fs+1,postdec2
  4714   00D60C                     
  4715                           ; BSR set to: 0
  4716                           ;mcc_generated_files/fatfs/ff.c: 3662:    fp->obj.id = fs->id;
  4717   00D60C  0101               	movlb	1	; () banked
  4718   00D60E  EE20 F005          	lfsr	2,5
  4719   00D612  5197               	movf	f_open@fs& (0+255),w,b
  4720   00D614  26D9               	addwf	fsr2l,f,c
  4721   00D616  5198               	movf	(f_open@fs+1)& (0+255),w,b
  4722   00D618  22DA               	addwfc	fsr2h,f,c
  4723   00D61A  0100               	movlb	0	; () banked
  4724   00D61C  EE10 F002          	lfsr	1,2
  4725   00D620  51E5               	movf	f_open@fp& (0+255),w,b
  4726   00D622  26E1               	addwf	fsr1l,f,c
  4727   00D624  51E6               	movf	(f_open@fp+1)& (0+255),w,b
  4728   00D626  22E2               	addwfc	fsr1h,f,c
  4729   00D628  CFDE FFE6          	movff	postinc2,postinc1
  4730   00D62C  CFDD FFE5          	movff	postdec2,postdec1
  4731   00D630                     
  4732                           ; BSR set to: 0
  4733                           ;mcc_generated_files/fatfs/ff.c: 3663:    fp->flag = mode;
  4734   00D630  EE20 F00E          	lfsr	2,14
  4735   00D634  51E5               	movf	f_open@fp& (0+255),w,b
  4736   00D636  26D9               	addwf	fsr2l,f,c
  4737   00D638  51E6               	movf	(f_open@fp+1)& (0+255),w,b
  4738   00D63A  22DA               	addwfc	fsr2h,f,c
  4739   00D63C  C0E9  FFDF         	movff	f_open@mode,indf2
  4740   00D640                     
  4741                           ; BSR set to: 0
  4742                           ;mcc_generated_files/fatfs/ff.c: 3664:    fp->err = 0;
  4743   00D640  EE20 F00F          	lfsr	2,15
  4744   00D644  51E5               	movf	f_open@fp& (0+255),w,b
  4745   00D646  26D9               	addwf	fsr2l,f,c
  4746   00D648  51E6               	movf	(f_open@fp+1)& (0+255),w,b
  4747   00D64A  22DA               	addwfc	fsr2h,f,c
  4748   00D64C  0E00               	movlw	0
  4749   00D64E  6EDF               	movwf	indf2,c
  4750   00D650                     
  4751                           ; BSR set to: 0
  4752                           ;mcc_generated_files/fatfs/ff.c: 3665:    fp->sect = 0;
  4753   00D650  EE20 F018          	lfsr	2,24
  4754   00D654  51E5               	movf	f_open@fp& (0+255),w,b
  4755   00D656  26D9               	addwf	fsr2l,f,c
  4756   00D658  51E6               	movf	(f_open@fp+1)& (0+255),w,b
  4757   00D65A  22DA               	addwfc	fsr2h,f,c
  4758   00D65C  6ADE               	clrf	postinc2,c
  4759   00D65E  6ADE               	clrf	postinc2,c
  4760   00D660  6ADE               	clrf	postinc2,c
  4761   00D662  6ADD               	clrf	postdec2,c
  4762   00D664                     
  4763                           ; BSR set to: 0
  4764                           ;mcc_generated_files/fatfs/ff.c: 3666:    fp->fptr = 0;
  4765   00D664  EE20 F010          	lfsr	2,16
  4766   00D668  51E5               	movf	f_open@fp& (0+255),w,b
  4767   00D66A  26D9               	addwf	fsr2l,f,c
  4768   00D66C  51E6               	movf	(f_open@fp+1)& (0+255),w,b
  4769   00D66E  22DA               	addwfc	fsr2h,f,c
  4770   00D670  6ADE               	clrf	postinc2,c
  4771   00D672  6ADE               	clrf	postinc2,c
  4772   00D674  6ADE               	clrf	postinc2,c
  4773   00D676  6ADD               	clrf	postdec2,c
  4774   00D678                     
  4775                           ; BSR set to: 0
  4776                           ;mcc_generated_files/fatfs/ff.c: 3669:    mem_set(fp->buf, 0, 512);
  4777   00D678  0E22               	movlw	34
  4778   00D67A  25E5               	addwf	f_open@fp& (0+255),w,b
  4779   00D67C  6E01               	movwf	mem_set@dst^0,c
  4780   00D67E  0E00               	movlw	0
  4781   00D680  21E6               	addwfc	(f_open@fp+1)& (0+255),w,b
  4782   00D682  6E02               	movwf	(mem_set@dst+1)^0,c
  4783   00D684  0E00               	movlw	0
  4784   00D686  6E04               	movwf	(mem_set@val+1)^0,c
  4785   00D688  0E00               	movlw	0
  4786   00D68A  6E03               	movwf	mem_set@val^0,c
  4787   00D68C  0E02               	movlw	2
  4788   00D68E  6E06               	movwf	(mem_set@cnt+1)^0,c
  4789   00D690  0E00               	movlw	0
  4790   00D692  6E05               	movwf	mem_set@cnt^0,c
  4791   00D694  ECB8  F03E         	call	_mem_set	;wreg free
  4792   00D698                     
  4793                           ;mcc_generated_files/fatfs/ff.c: 3671:    if ((mode & 0x20) && fp->obj.objsize > 0) {
  4794   00D698  0100               	movlb	0	; () banked
  4795   00D69A  ABE9               	btfss	f_open@mode& (0+255),5,b
  4796   00D69C  EF52  F06B         	goto	u11641
  4797   00D6A0  EF54  F06B         	goto	u11640
  4798   00D6A4                     u11641:
  4799   00D6A4  EFD1  F06C         	goto	l602
  4800   00D6A8                     u11640:
  4801   00D6A8                     
  4802                           ; BSR set to: 0
  4803   00D6A8  EE20 F00A          	lfsr	2,10
  4804   00D6AC  51E5               	movf	f_open@fp& (0+255),w,b
  4805   00D6AE  26D9               	addwf	fsr2l,f,c
  4806   00D6B0  51E6               	movf	(f_open@fp+1)& (0+255),w,b
  4807   00D6B2  22DA               	addwfc	fsr2h,f,c
  4808   00D6B4  50DE               	movf	postinc2,w,c
  4809   00D6B6  10DE               	iorwf	postinc2,w,c
  4810   00D6B8  10DE               	iorwf	postinc2,w,c
  4811   00D6BA  10DE               	iorwf	postinc2,w,c
  4812   00D6BC  B4D8               	btfsc	status,2,c
  4813   00D6BE  EF63  F06B         	goto	u11651
  4814   00D6C2  EF65  F06B         	goto	u11650
  4815   00D6C6                     u11651:
  4816   00D6C6  EFD1  F06C         	goto	l602
  4817   00D6CA                     u11650:
  4818   00D6CA                     
  4819                           ; BSR set to: 0
  4820                           ;mcc_generated_files/fatfs/ff.c: 3672:     fp->fptr = fp->obj.objsize;
  4821   00D6CA  EE20 F00A          	lfsr	2,10
  4822   00D6CE  51E5               	movf	f_open@fp& (0+255),w,b
  4823   00D6D0  26D9               	addwf	fsr2l,f,c
  4824   00D6D2  51E6               	movf	(f_open@fp+1)& (0+255),w,b
  4825   00D6D4  22DA               	addwfc	fsr2h,f,c
  4826   00D6D6  EE10 F010          	lfsr	1,16
  4827   00D6DA  51E5               	movf	f_open@fp& (0+255),w,b
  4828   00D6DC  26E1               	addwf	fsr1l,f,c
  4829   00D6DE  51E6               	movf	(f_open@fp+1)& (0+255),w,b
  4830   00D6E0  22E2               	addwfc	fsr1h,f,c
  4831   00D6E2  CFDE FFE6          	movff	postinc2,postinc1
  4832   00D6E6  CFDE FFE6          	movff	postinc2,postinc1
  4833   00D6EA  CFDE FFE6          	movff	postinc2,postinc1
  4834   00D6EE  CFDE FFE6          	movff	postinc2,postinc1
  4835   00D6F2                     
  4836                           ; BSR set to: 0
  4837                           ;mcc_generated_files/fatfs/ff.c: 3673:     bcs = (DWORD)fs->csize * ((UINT)512);
  4838   00D6F2  0101               	movlb	1	; () banked
  4839   00D6F4  EE20 F009          	lfsr	2,9
  4840   00D6F8  5197               	movf	f_open@fs& (0+255),w,b
  4841   00D6FA  26D9               	addwf	fsr2l,f,c
  4842   00D6FC  5198               	movf	(f_open@fs+1)& (0+255),w,b
  4843   00D6FE  22DA               	addwfc	fsr2h,f,c
  4844   00D700  CFDE F0EA          	movff	postinc2,??_f_open
  4845   00D704  CFDD F0EB          	movff	postdec2,??_f_open+1
  4846   00D708  0100               	movlb	0	; () banked
  4847   00D70A  51EA               	movf	??_f_open& (0+255),w,b
  4848   00D70C  6FEC               	movwf	(??_f_open+2)& (0+255),b
  4849   00D70E  51EB               	movf	(??_f_open+1)& (0+255),w,b
  4850   00D710  6FED               	movwf	(??_f_open+3)& (0+255),b
  4851   00D712  6BEE               	clrf	(??_f_open+4)& (0+255),b
  4852   00D714  6BEF               	clrf	(??_f_open+5)& (0+255),b
  4853   00D716  0E09               	movlw	9
  4854   00D718                     u11665:
  4855   00D718  90D8               	bcf	status,0,c
  4856   00D71A  37EC               	rlcf	(??_f_open+2)& (0+255),f,b
  4857   00D71C  37ED               	rlcf	(??_f_open+3)& (0+255),f,b
  4858   00D71E  37EE               	rlcf	(??_f_open+4)& (0+255),f,b
  4859   00D720  37EF               	rlcf	(??_f_open+5)& (0+255),f,b
  4860   00D722  2EE8               	decfsz	wreg,f,c
  4861   00D724  EF8C  F06B         	goto	u11665
  4862   00D728  C0EC  F187         	movff	??_f_open+2,f_open@bcs
  4863   00D72C  C0ED  F188         	movff	??_f_open+3,f_open@bcs+1
  4864   00D730  C0EE  F189         	movff	??_f_open+4,f_open@bcs+2
  4865   00D734  C0EF  F18A         	movff	??_f_open+5,f_open@bcs+3
  4866   00D738                     
  4867                           ; BSR set to: 0
  4868                           ;mcc_generated_files/fatfs/ff.c: 3674:     clst = fp->obj.sclust;
  4869   00D738  EE20 F006          	lfsr	2,6
  4870   00D73C  51E5               	movf	f_open@fp& (0+255),w,b
  4871   00D73E  26D9               	addwf	fsr2l,f,c
  4872   00D740  51E6               	movf	(f_open@fp+1)& (0+255),w,b
  4873   00D742  22DA               	addwfc	fsr2h,f,c
  4874   00D744  CFDE F193          	movff	postinc2,f_open@clst
  4875   00D748  CFDE F194          	movff	postinc2,f_open@clst+1
  4876   00D74C  CFDE F195          	movff	postinc2,f_open@clst+2
  4877   00D750  CFDE F196          	movff	postinc2,f_open@clst+3
  4878   00D754                     
  4879                           ; BSR set to: 0
  4880                           ;mcc_generated_files/fatfs/ff.c: 3675:     for (ofs = fp->obj.objsize; res == FR_OK && o
      +                          fs > bcs; ofs -= bcs) {
  4881   00D754  EE20 F00A          	lfsr	2,10
  4882   00D758  51E5               	movf	f_open@fp& (0+255),w,b
  4883   00D75A  26D9               	addwf	fsr2l,f,c
  4884   00D75C  51E6               	movf	(f_open@fp+1)& (0+255),w,b
  4885   00D75E  22DA               	addwfc	fsr2h,f,c
  4886   00D760  CFDE F18F          	movff	postinc2,f_open@ofs
  4887   00D764  CFDE F190          	movff	postinc2,f_open@ofs+1
  4888   00D768  CFDE F191          	movff	postinc2,f_open@ofs+2
  4889   00D76C  CFDE F192          	movff	postinc2,f_open@ofs+3
  4890   00D770  EFF8  F06B         	goto	l9014
  4891   00D774                     l9002:
  4892                           
  4893                           ; BSR set to: 1
  4894                           ;mcc_generated_files/fatfs/ff.c: 3676:      clst = get_fat(&fp->obj, clst);
  4895   00D774  C0E5  F077         	movff	f_open@fp,get_fat@obj
  4896   00D778  C0E6  F078         	movff	f_open@fp+1,get_fat@obj+1
  4897   00D77C  C193  F079         	movff	f_open@clst,get_fat@clst
  4898   00D780  C194  F07A         	movff	f_open@clst+1,get_fat@clst+1
  4899   00D784  C195  F07B         	movff	f_open@clst+2,get_fat@clst+2
  4900   00D788  C196  F07C         	movff	f_open@clst+3,get_fat@clst+3
  4901   00D78C  ECAF  F055         	call	_get_fat	;wreg free
  4902   00D790  C077  F193         	movff	?_get_fat,f_open@clst
  4903   00D794  C078  F194         	movff	?_get_fat+1,f_open@clst+1
  4904   00D798  C079  F195         	movff	?_get_fat+2,f_open@clst+2
  4905   00D79C  C07A  F196         	movff	?_get_fat+3,f_open@clst+3
  4906   00D7A0                     
  4907                           ;mcc_generated_files/fatfs/ff.c: 3677:      if (clst <= 1) res = FR_INT_ERR;
  4908   00D7A0  0101               	movlb	1	; () banked
  4909   00D7A2  5196               	movf	(f_open@clst+3)& (0+255),w,b
  4910   00D7A4  1195               	iorwf	(f_open@clst+2)& (0+255),w,b
  4911   00D7A6  1194               	iorwf	(f_open@clst+1)& (0+255),w,b
  4912   00D7A8  E107               	bnz	u11671
  4913   00D7AA  0E02               	movlw	2
  4914   00D7AC  5D93               	subwf	f_open@clst& (0+255),w,b
  4915   00D7AE  B0D8               	btfsc	status,0,c
  4916   00D7B0  EFDC  F06B         	goto	u11671
  4917   00D7B4  EFDE  F06B         	goto	u11670
  4918   00D7B8                     u11671:
  4919   00D7B8  EFE0  F06B         	goto	l9008
  4920   00D7BC                     u11670:
  4921   00D7BC                     
  4922                           ; BSR set to: 1
  4923   00D7BC  0E02               	movlw	2
  4924   00D7BE  6F99               	movwf	f_open@res& (0+255),b
  4925   00D7C0                     l9008:
  4926                           
  4927                           ; BSR set to: 1
  4928                           ;mcc_generated_files/fatfs/ff.c: 3678:      if (clst == 0xFFFFFFFF) res = FR_DISK_ERR;
  4929   00D7C0  2993               	incf	f_open@clst& (0+255),w,b
  4930   00D7C2  E10A               	bnz	u11681
  4931   00D7C4  2994               	incf	(f_open@clst+1)& (0+255),w,b
  4932   00D7C6  E108               	bnz	u11681
  4933   00D7C8  2995               	incf	(f_open@clst+2)& (0+255),w,b
  4934   00D7CA  E106               	bnz	u11681
  4935   00D7CC  2996               	incf	(f_open@clst+3)& (0+255),w,b
  4936   00D7CE  A4D8               	btfss	status,2,c
  4937   00D7D0  EFEC  F06B         	goto	u11681
  4938   00D7D4  EFEE  F06B         	goto	u11680
  4939   00D7D8                     u11681:
  4940   00D7D8  EFF0  F06B         	goto	l9012
  4941   00D7DC                     u11680:
  4942   00D7DC                     
  4943                           ; BSR set to: 1
  4944   00D7DC  0E01               	movlw	1
  4945   00D7DE  6F99               	movwf	f_open@res& (0+255),b
  4946   00D7E0                     l9012:
  4947                           
  4948                           ; BSR set to: 1
  4949                           ;mcc_generated_files/fatfs/ff.c: 3679:     }
  4950   00D7E0  5187               	movf	f_open@bcs& (0+255),w,b
  4951   00D7E2  5F8F               	subwf	f_open@ofs& (0+255),f,b
  4952   00D7E4  5188               	movf	(f_open@bcs+1)& (0+255),w,b
  4953   00D7E6  5B90               	subwfb	(f_open@ofs+1)& (0+255),f,b
  4954   00D7E8  5189               	movf	(f_open@bcs+2)& (0+255),w,b
  4955   00D7EA  5B91               	subwfb	(f_open@ofs+2)& (0+255),f,b
  4956   00D7EC  518A               	movf	(f_open@bcs+3)& (0+255),w,b
  4957   00D7EE  5B92               	subwfb	(f_open@ofs+3)& (0+255),f,b
  4958   00D7F0                     l9014:
  4959   00D7F0  0101               	movlb	1	; () banked
  4960   00D7F2  5199               	movf	f_open@res& (0+255),w,b
  4961   00D7F4  A4D8               	btfss	status,2,c
  4962   00D7F6  EFFF  F06B         	goto	u11691
  4963   00D7FA  EF01  F06C         	goto	u11690
  4964   00D7FE                     u11691:
  4965   00D7FE  EF10  F06C         	goto	l9018
  4966   00D802                     u11690:
  4967   00D802                     
  4968                           ; BSR set to: 1
  4969   00D802  518F               	movf	f_open@ofs& (0+255),w,b
  4970   00D804  5D87               	subwf	f_open@bcs& (0+255),w,b
  4971   00D806  5190               	movf	(f_open@ofs+1)& (0+255),w,b
  4972   00D808  5988               	subwfb	(f_open@bcs+1)& (0+255),w,b
  4973   00D80A  5191               	movf	(f_open@ofs+2)& (0+255),w,b
  4974   00D80C  5989               	subwfb	(f_open@bcs+2)& (0+255),w,b
  4975   00D80E  5192               	movf	(f_open@ofs+3)& (0+255),w,b
  4976   00D810  598A               	subwfb	(f_open@bcs+3)& (0+255),w,b
  4977   00D812  A0D8               	btfss	status,0,c
  4978   00D814  EF0E  F06C         	goto	u11701
  4979   00D818  EF10  F06C         	goto	u11700
  4980   00D81C                     u11701:
  4981   00D81C  EFBA  F06B         	goto	l9002
  4982   00D820                     u11700:
  4983   00D820                     l9018:
  4984                           
  4985                           ; BSR set to: 1
  4986                           ;mcc_generated_files/fatfs/ff.c: 3680:     fp->clust = clst;
  4987   00D820  0100               	movlb	0	; () banked
  4988   00D822  EE20 F014          	lfsr	2,20
  4989   00D826  51E5               	movf	f_open@fp& (0+255),w,b
  4990   00D828  26D9               	addwf	fsr2l,f,c
  4991   00D82A  51E6               	movf	(f_open@fp+1)& (0+255),w,b
  4992   00D82C  22DA               	addwfc	fsr2h,f,c
  4993   00D82E  C193  FFDE         	movff	f_open@clst,postinc2
  4994   00D832  C194  FFDE         	movff	f_open@clst+1,postinc2
  4995   00D836  C195  FFDE         	movff	f_open@clst+2,postinc2
  4996   00D83A  C196  FFDE         	movff	f_open@clst+3,postinc2
  4997   00D83E                     
  4998                           ; BSR set to: 0
  4999                           ;mcc_generated_files/fatfs/ff.c: 3681:     if (res == FR_OK && ofs % ((UINT)512)) {
  5000   00D83E  0101               	movlb	1	; () banked
  5001   00D840  5199               	movf	f_open@res& (0+255),w,b
  5002   00D842  A4D8               	btfss	status,2,c
  5003   00D844  EF26  F06C         	goto	u11711
  5004   00D848  EF28  F06C         	goto	u11710
  5005   00D84C                     u11711:
  5006   00D84C  EFD1  F06C         	goto	l602
  5007   00D850                     u11710:
  5008   00D850                     
  5009                           ; BSR set to: 1
  5010   00D850  0EFF               	movlw	255
  5011   00D852  158F               	andwf	f_open@ofs& (0+255),w,b
  5012   00D854  0100               	movlb	0	; () banked
  5013   00D856  6FEA               	movwf	??_f_open& (0+255),b
  5014   00D858  0E01               	movlw	1
  5015   00D85A  0101               	movlb	1	; () banked
  5016   00D85C  1590               	andwf	(f_open@ofs+1)& (0+255),w,b
  5017   00D85E  0100               	movlb	0	; () banked
  5018   00D860  6FEB               	movwf	(??_f_open+1)& (0+255),b
  5019   00D862  0E00               	movlw	0
  5020   00D864  0101               	movlb	1	; () banked
  5021   00D866  1591               	andwf	(f_open@ofs+2)& (0+255),w,b
  5022   00D868  0100               	movlb	0	; () banked
  5023   00D86A  6FEC               	movwf	(??_f_open+2)& (0+255),b
  5024   00D86C  0E00               	movlw	0
  5025   00D86E  0101               	movlb	1	; () banked
  5026   00D870  1592               	andwf	(f_open@ofs+3)& (0+255),w,b
  5027   00D872  0100               	movlb	0	; () banked
  5028   00D874  6FED               	movwf	(??_f_open+3)& (0+255),b
  5029   00D876  51EA               	movf	??_f_open& (0+255),w,b
  5030   00D878  11EB               	iorwf	(??_f_open+1)& (0+255),w,b
  5031   00D87A  11EC               	iorwf	(??_f_open+2)& (0+255),w,b
  5032   00D87C  11ED               	iorwf	(??_f_open+3)& (0+255),w,b
  5033   00D87E  B4D8               	btfsc	status,2,c
  5034   00D880  EF44  F06C         	goto	u11721
  5035   00D884  EF46  F06C         	goto	u11720
  5036   00D888                     u11721:
  5037   00D888  EFD1  F06C         	goto	l602
  5038   00D88C                     u11720:
  5039   00D88C                     
  5040                           ; BSR set to: 0
  5041                           ;mcc_generated_files/fatfs/ff.c: 3682:      if ((sc = clst2sect(fs, clst)) == 0) {
  5042   00D88C  C197  F00D         	movff	f_open@fs,clst2sect@fs
  5043   00D890  C198  F00E         	movff	f_open@fs+1,clst2sect@fs+1
  5044   00D894  C193  F00F         	movff	f_open@clst,clst2sect@clst
  5045   00D898  C194  F010         	movff	f_open@clst+1,clst2sect@clst+1
  5046   00D89C  C195  F011         	movff	f_open@clst+2,clst2sect@clst+2
  5047   00D8A0  C196  F012         	movff	f_open@clst+3,clst2sect@clst+3
  5048   00D8A4  ECB7  F044         	call	_clst2sect	;wreg free
  5049   00D8A8  C00D  F183         	movff	?_clst2sect,f_open@sc
  5050   00D8AC  C00E  F184         	movff	?_clst2sect+1,f_open@sc+1
  5051   00D8B0  C00F  F185         	movff	?_clst2sect+2,f_open@sc+2
  5052   00D8B4  C010  F186         	movff	?_clst2sect+3,f_open@sc+3
  5053   00D8B8  0101               	movlb	1	; () banked
  5054   00D8BA  5183               	movf	f_open@sc& (0+255),w,b
  5055   00D8BC  1184               	iorwf	(f_open@sc+1)& (0+255),w,b
  5056   00D8BE  1185               	iorwf	(f_open@sc+2)& (0+255),w,b
  5057   00D8C0  1186               	iorwf	(f_open@sc+3)& (0+255),w,b
  5058   00D8C2  A4D8               	btfss	status,2,c
  5059   00D8C4  EF66  F06C         	goto	u11731
  5060   00D8C8  EF68  F06C         	goto	u11730
  5061   00D8CC                     u11731:
  5062   00D8CC  EF6C  F06C         	goto	l9028
  5063   00D8D0                     u11730:
  5064   00D8D0                     
  5065                           ; BSR set to: 1
  5066                           ;mcc_generated_files/fatfs/ff.c: 3683:       res = FR_INT_ERR;
  5067   00D8D0  0E02               	movlw	2
  5068   00D8D2  6F99               	movwf	f_open@res& (0+255),b
  5069                           
  5070                           ;mcc_generated_files/fatfs/ff.c: 3684:      } else {
  5071   00D8D4  EFD1  F06C         	goto	l602
  5072   00D8D8                     l9028:
  5073                           
  5074                           ; BSR set to: 1
  5075                           ;mcc_generated_files/fatfs/ff.c: 3685:       fp->sect = sc + (DWORD)(ofs / ((UINT)512));
  5076   00D8D8  C18F  F0EA         	movff	f_open@ofs,??_f_open
  5077   00D8DC  C190  F0EB         	movff	f_open@ofs+1,??_f_open+1
  5078   00D8E0  C191  F0EC         	movff	f_open@ofs+2,??_f_open+2
  5079   00D8E4  C192  F0ED         	movff	f_open@ofs+3,??_f_open+3
  5080   00D8E8  0E0A               	movlw	10
  5081   00D8EA  EF7D  F06C         	goto	u11740
  5082   00D8EE                     u11745:
  5083   00D8EE  0100               	movlb	0	; () banked
  5084   00D8F0  90D8               	bcf	status,0,c
  5085   00D8F2  33ED               	rrcf	(??_f_open+3)& (0+255),f,b
  5086   00D8F4  33EC               	rrcf	(??_f_open+2)& (0+255),f,b
  5087   00D8F6  33EB               	rrcf	(??_f_open+1)& (0+255),f,b
  5088   00D8F8  33EA               	rrcf	??_f_open& (0+255),f,b
  5089   00D8FA                     u11740:
  5090   00D8FA  2EE8               	decfsz	wreg,f,c
  5091   00D8FC  EF77  F06C         	goto	u11745
  5092   00D900  0101               	movlb	1	; () banked
  5093   00D902  5183               	movf	f_open@sc& (0+255),w,b
  5094   00D904  0100               	movlb	0	; () banked
  5095   00D906  25EA               	addwf	??_f_open& (0+255),w,b
  5096   00D908  6FEE               	movwf	(??_f_open+4)& (0+255),b
  5097   00D90A  0101               	movlb	1	; () banked
  5098   00D90C  5184               	movf	(f_open@sc+1)& (0+255),w,b
  5099   00D90E  0100               	movlb	0	; () banked
  5100   00D910  21EB               	addwfc	(??_f_open+1)& (0+255),w,b
  5101   00D912  6FEF               	movwf	(??_f_open+5)& (0+255),b
  5102   00D914  0101               	movlb	1	; () banked
  5103   00D916  5185               	movf	(f_open@sc+2)& (0+255),w,b
  5104   00D918  0100               	movlb	0	; () banked
  5105   00D91A  21EC               	addwfc	(??_f_open+2)& (0+255),w,b
  5106   00D91C  6FF0               	movwf	(??_f_open+6)& (0+255),b
  5107   00D91E  0101               	movlb	1	; () banked
  5108   00D920  5186               	movf	(f_open@sc+3)& (0+255),w,b
  5109   00D922  0100               	movlb	0	; () banked
  5110   00D924  21ED               	addwfc	(??_f_open+3)& (0+255),w,b
  5111   00D926  6FF1               	movwf	(??_f_open+7)& (0+255),b
  5112   00D928  EE20 F018          	lfsr	2,24
  5113   00D92C  51E5               	movf	f_open@fp& (0+255),w,b
  5114   00D92E  26D9               	addwf	fsr2l,f,c
  5115   00D930  51E6               	movf	(f_open@fp+1)& (0+255),w,b
  5116   00D932  22DA               	addwfc	fsr2h,f,c
  5117   00D934  C0EE  FFDE         	movff	??_f_open+4,postinc2
  5118   00D938  C0EF  FFDE         	movff	??_f_open+5,postinc2
  5119   00D93C  C0F0  FFDE         	movff	??_f_open+6,postinc2
  5120   00D940  C0F1  FFDE         	movff	??_f_open+7,postinc2
  5121   00D944                     
  5122                           ; BSR set to: 0
  5123                           ;mcc_generated_files/fatfs/ff.c: 3687:       if (disk_read(fs->pdrv, fp->buf, fp->sect, 
      +                          1) != RES_OK) res = FR_DISK_ERR;
  5124   00D944  0E22               	movlw	34
  5125   00D946  25E5               	addwf	f_open@fp& (0+255),w,b
  5126   00D948  6E4A               	movwf	disk_read@buff^0,c
  5127   00D94A  0E00               	movlw	0
  5128   00D94C  21E6               	addwfc	(f_open@fp+1)& (0+255),w,b
  5129   00D94E  6E4B               	movwf	(disk_read@buff+1)^0,c
  5130   00D950  EE20 F018          	lfsr	2,24
  5131   00D954  51E5               	movf	f_open@fp& (0+255),w,b
  5132   00D956  26D9               	addwf	fsr2l,f,c
  5133   00D958  51E6               	movf	(f_open@fp+1)& (0+255),w,b
  5134   00D95A  22DA               	addwfc	fsr2h,f,c
  5135   00D95C  CFDE F04C          	movff	postinc2,disk_read@sector
  5136   00D960  CFDE F04D          	movff	postinc2,disk_read@sector+1
  5137   00D964  CFDE F04E          	movff	postinc2,disk_read@sector+2
  5138   00D968  CFDE F04F          	movff	postinc2,disk_read@sector+3
  5139   00D96C  0E00               	movlw	0
  5140   00D96E  6E51               	movwf	(disk_read@count+1)^0,c
  5141   00D970  0E01               	movlw	1
  5142   00D972  6E50               	movwf	disk_read@count^0,c
  5143   00D974  0101               	movlb	1	; () banked
  5144   00D976  EE20 F001          	lfsr	2,1
  5145   00D97A  5197               	movf	f_open@fs& (0+255),w,b
  5146   00D97C  26D9               	addwf	fsr2l,f,c
  5147   00D97E  5198               	movf	(f_open@fs+1)& (0+255),w,b
  5148   00D980  22DA               	addwfc	fsr2h,f,c
  5149   00D982  50DF               	movf	indf2,w,c
  5150   00D984  EC1F  F041         	call	_disk_read
  5151   00D988  0900               	iorlw	0
  5152   00D98A  B4D8               	btfsc	status,2,c
  5153   00D98C  EFCA  F06C         	goto	u11751
  5154   00D990  EFCC  F06C         	goto	u11750
  5155   00D994                     u11751:
  5156   00D994  EFD1  F06C         	goto	l623
  5157   00D998                     u11750:
  5158   00D998  0E01               	movlw	1
  5159   00D99A  0101               	movlb	1	; () banked
  5160   00D99C  6F99               	movwf	f_open@res& (0+255),b
  5161   00D99E  EFD1  F06C         	goto	l602
  5162   00D9A2                     l623:
  5163   00D9A2                     l602:
  5164                           
  5165                           ;mcc_generated_files/fatfs/ff.c: 3698:  if (res != FR_OK) fp->obj.fs = 0;
  5166   00D9A2  0101               	movlb	1	; () banked
  5167   00D9A4  5199               	movf	f_open@res& (0+255),w,b
  5168   00D9A6  B4D8               	btfsc	status,2,c
  5169   00D9A8  EFD8  F06C         	goto	u11761
  5170   00D9AC  EFDA  F06C         	goto	u11760
  5171   00D9B0                     u11761:
  5172   00D9B0  EFE2  F06C         	goto	l9036
  5173   00D9B4                     u11760:
  5174   00D9B4                     
  5175                           ; BSR set to: 1
  5176   00D9B4  C0E5  FFD9         	movff	f_open@fp,fsr2l
  5177   00D9B8  C0E6  FFDA         	movff	f_open@fp+1,fsr2h
  5178   00D9BC  0E00               	movlw	0
  5179   00D9BE  6EDE               	movwf	postinc2,c
  5180   00D9C0  0E00               	movlw	0
  5181   00D9C2  6EDD               	movwf	postdec2,c
  5182   00D9C4                     l9036:
  5183                           
  5184                           ; BSR set to: 1
  5185                           ;mcc_generated_files/fatfs/ff.c: 3700:  return res;
  5186   00D9C4  5199               	movf	f_open@res& (0+255),w,b
  5187   00D9C6                     l597:
  5188   00D9C6  0012               	return		;funcret
  5189   00D9C8                     __end_of_f_open:
  5190                           	callstack 0
  5191                           
  5192 ;; *************** function _remove_chain *****************
  5193 ;; Defined at:
  5194 ;;		line 1408 in file "mcc_generated_files/fatfs/ff.c"
  5195 ;; Parameters:    Size  Location     Type
  5196 ;;  obj             2   56[BANK0 ] PTR struct .
  5197 ;;		 -> f_mkdir@dj(40), f_unlink@dj(40), f_open@dj(40), 
  5198 ;;  clst            4   58[BANK0 ] unsigned long 
  5199 ;;  pclst           4   62[BANK0 ] unsigned long 
  5200 ;; Auto vars:     Size  Location     Type
  5201 ;;  nxt             4   74[BANK0 ] unsigned long 
  5202 ;;  fs              2   79[BANK0 ] PTR struct .
  5203 ;;		 -> FatFs(563), drive(563), NULL(0), 
  5204 ;;  res             1   78[BANK0 ] enum E68
  5205 ;; Return value:  Size  Location     Type
  5206 ;;                  1    wreg      enum E68
  5207 ;; Registers used:
  5208 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  5209 ;; Tracked objects:
  5210 ;;		On entry : 0/0
  5211 ;;		On exit  : 0/0
  5212 ;;		Unchanged: 0/0
  5213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5214 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5215 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5216 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5217 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5218 ;;Total ram usage:       25 bytes
  5219 ;; Hardware stack levels used: 1
  5220 ;; Hardware stack levels required when called: 8
  5221 ;; This function calls:
  5222 ;;		_get_fat
  5223 ;;		_put_fat
  5224 ;; This function is called by:
  5225 ;;		_f_open
  5226 ;;		_f_truncate
  5227 ;;		_f_unlink
  5228 ;;		_f_mkdir
  5229 ;; This function uses a non-reentrant model
  5230 ;;
  5231                           
  5232                           	psect	text7
  5233   00A0B0                     __ptext7:
  5234                           	callstack 0
  5235   00A0B0                     _remove_chain:
  5236                           	callstack 20
  5237   00A0B0                     
  5238                           ;mcc_generated_files/fatfs/ff.c: 1415:  DWORD nxt;;mcc_generated_files/fatfs/ff.c: 1416:
      +                            FATFS *fs = obj->fs;
  5239   00A0B0  C098  FFD9         	movff	remove_chain@obj,fsr2l
  5240   00A0B4  C099  FFDA         	movff	remove_chain@obj+1,fsr2h
  5241   00A0B8  CFDE F0AF          	movff	postinc2,remove_chain@fs
  5242   00A0BC  CFDD F0B0          	movff	postdec2,remove_chain@fs+1
  5243   00A0C0                     
  5244                           ;mcc_generated_files/fatfs/ff.c: 1424:  if (clst < 2 || clst >= fs->n_fatent) return FR_
      +                          INT_ERR;
  5245   00A0C0  0100               	movlb	0	; () banked
  5246   00A0C2  519D               	movf	(remove_chain@clst+3)& (0+255),w,b
  5247   00A0C4  119C               	iorwf	(remove_chain@clst+2)& (0+255),w,b
  5248   00A0C6  119B               	iorwf	(remove_chain@clst+1)& (0+255),w,b
  5249   00A0C8  E109               	bnz	u10460
  5250   00A0CA  0E02               	movlw	2
  5251   00A0CC  5D9A               	subwf	remove_chain@clst& (0+255),w,b
  5252   00A0CE  A0D8               	btfss	status,0,c
  5253   00A0D0  EF6C  F050         	goto	u10461
  5254   00A0D4  EF6E  F050         	goto	u10460
  5255   00A0D8                     u10461:
  5256   00A0D8  EF83  F050         	goto	l8304
  5257   00A0DC                     u10460:
  5258   00A0DC                     
  5259                           ; BSR set to: 0
  5260   00A0DC  EE20 F017          	lfsr	2,23
  5261   00A0E0  51AF               	movf	remove_chain@fs& (0+255),w,b
  5262   00A0E2  26D9               	addwf	fsr2l,f,c
  5263   00A0E4  51B0               	movf	(remove_chain@fs+1)& (0+255),w,b
  5264   00A0E6  22DA               	addwfc	fsr2h,f,c
  5265   00A0E8  50DE               	movf	postinc2,w,c
  5266   00A0EA  5D9A               	subwf	remove_chain@clst& (0+255),w,b
  5267   00A0EC  50DE               	movf	postinc2,w,c
  5268   00A0EE  599B               	subwfb	(remove_chain@clst+1)& (0+255),w,b
  5269   00A0F0  50DE               	movf	postinc2,w,c
  5270   00A0F2  599C               	subwfb	(remove_chain@clst+2)& (0+255),w,b
  5271   00A0F4  50DE               	movf	postinc2,w,c
  5272   00A0F6  599D               	subwfb	(remove_chain@clst+3)& (0+255),w,b
  5273   00A0F8  A0D8               	btfss	status,0,c
  5274   00A0FA  EF81  F050         	goto	u10471
  5275   00A0FE  EF83  F050         	goto	u10470
  5276   00A102                     u10471:
  5277   00A102  EF86  F050         	goto	l8308
  5278   00A106                     u10470:
  5279   00A106                     l8304:
  5280                           
  5281                           ; BSR set to: 0
  5282   00A106  0E02               	movlw	2
  5283   00A108  EF70  F051         	goto	l258
  5284   00A10C                     l8308:
  5285                           
  5286                           ; BSR set to: 0
  5287                           ;mcc_generated_files/fatfs/ff.c: 1427:  if (pclst != 0 && (!0 || fs->fs_type != 4 || obj
      +                          ->stat != 2)) {
  5288   00A10C  519E               	movf	remove_chain@pclst& (0+255),w,b
  5289   00A10E  119F               	iorwf	(remove_chain@pclst+1)& (0+255),w,b
  5290   00A110  11A0               	iorwf	(remove_chain@pclst+2)& (0+255),w,b
  5291   00A112  11A1               	iorwf	(remove_chain@pclst+3)& (0+255),w,b
  5292   00A114  B4D8               	btfsc	status,2,c
  5293   00A116  EF8F  F050         	goto	u10481
  5294   00A11A  EF91  F050         	goto	u10480
  5295   00A11E                     u10481:
  5296   00A11E  EFB4  F050         	goto	l8324
  5297   00A122                     u10480:
  5298   00A122                     
  5299                           ; BSR set to: 0
  5300                           ;mcc_generated_files/fatfs/ff.c: 1428:   res = put_fat(fs, pclst, 0xFFFFFFFF);
  5301   00A122  C0AF  F077         	movff	remove_chain@fs,put_fat@fs
  5302   00A126  C0B0  F078         	movff	remove_chain@fs+1,put_fat@fs+1
  5303   00A12A  C09E  F079         	movff	remove_chain@pclst,put_fat@clst
  5304   00A12E  C09F  F07A         	movff	remove_chain@pclst+1,put_fat@clst+1
  5305   00A132  C0A0  F07B         	movff	remove_chain@pclst+2,put_fat@clst+2
  5306   00A136  C0A1  F07C         	movff	remove_chain@pclst+3,put_fat@clst+3
  5307   00A13A  0EFF               	movlw	255
  5308   00A13C  6F7D               	movwf	put_fat@val& (0+255),b
  5309   00A13E  0EFF               	movlw	255
  5310   00A140  6F7E               	movwf	(put_fat@val+1)& (0+255),b
  5311   00A142  0EFF               	movlw	255
  5312   00A144  6F7F               	movwf	(put_fat@val+2)& (0+255),b
  5313   00A146  0EFF               	movlw	255
  5314   00A148  6F80               	movwf	(put_fat@val+3)& (0+255),b
  5315   00A14A  EC5E  F060         	call	_put_fat	;wreg free
  5316   00A14E  0100               	movlb	0	; () banked
  5317   00A150  6FAE               	movwf	remove_chain@res& (0+255),b
  5318   00A152                     
  5319                           ; BSR set to: 0
  5320                           ;mcc_generated_files/fatfs/ff.c: 1429:   if (res != FR_OK) return res;
  5321   00A152  51AE               	movf	remove_chain@res& (0+255),w,b
  5322   00A154  B4D8               	btfsc	status,2,c
  5323   00A156  EFAF  F050         	goto	u10491
  5324   00A15A  EFB1  F050         	goto	u10490
  5325   00A15E                     u10491:
  5326   00A15E  EFB4  F050         	goto	l8324
  5327   00A162                     u10490:
  5328   00A162                     l8320:
  5329                           
  5330                           ; BSR set to: 0
  5331   00A162  51AE               	movf	remove_chain@res& (0+255),w,b
  5332   00A164  EF70  F051         	goto	l258
  5333   00A168                     l8324:
  5334                           
  5335                           ; BSR set to: 0
  5336                           ;mcc_generated_files/fatfs/ff.c: 1434:   nxt = get_fat(obj, clst);
  5337   00A168  C098  F077         	movff	remove_chain@obj,get_fat@obj
  5338   00A16C  C099  F078         	movff	remove_chain@obj+1,get_fat@obj+1
  5339   00A170  C09A  F079         	movff	remove_chain@clst,get_fat@clst
  5340   00A174  C09B  F07A         	movff	remove_chain@clst+1,get_fat@clst+1
  5341   00A178  C09C  F07B         	movff	remove_chain@clst+2,get_fat@clst+2
  5342   00A17C  C09D  F07C         	movff	remove_chain@clst+3,get_fat@clst+3
  5343   00A180  ECAF  F055         	call	_get_fat	;wreg free
  5344   00A184  C077  F0AA         	movff	?_get_fat,remove_chain@nxt
  5345   00A188  C078  F0AB         	movff	?_get_fat+1,remove_chain@nxt+1
  5346   00A18C  C079  F0AC         	movff	?_get_fat+2,remove_chain@nxt+2
  5347   00A190  C07A  F0AD         	movff	?_get_fat+3,remove_chain@nxt+3
  5348   00A194                     
  5349                           ;mcc_generated_files/fatfs/ff.c: 1435:   if (nxt == 0) break;
  5350   00A194  0100               	movlb	0	; () banked
  5351   00A196  51AA               	movf	remove_chain@nxt& (0+255),w,b
  5352   00A198  11AB               	iorwf	(remove_chain@nxt+1)& (0+255),w,b
  5353   00A19A  11AC               	iorwf	(remove_chain@nxt+2)& (0+255),w,b
  5354   00A19C  11AD               	iorwf	(remove_chain@nxt+3)& (0+255),w,b
  5355   00A19E  A4D8               	btfss	status,2,c
  5356   00A1A0  EFD4  F050         	goto	u10501
  5357   00A1A4  EFD6  F050         	goto	u10500
  5358   00A1A8                     u10501:
  5359   00A1A8  EFD8  F050         	goto	l8330
  5360   00A1AC                     u10500:
  5361   00A1AC  EF6F  F051         	goto	l8358
  5362   00A1B0                     l8330:
  5363                           
  5364                           ; BSR set to: 0
  5365                           ;mcc_generated_files/fatfs/ff.c: 1436:   if (nxt == 1) return FR_INT_ERR;
  5366   00A1B0  05AA               	decf	remove_chain@nxt& (0+255),w,b
  5367   00A1B2  11AB               	iorwf	(remove_chain@nxt+1)& (0+255),w,b
  5368   00A1B4  11AC               	iorwf	(remove_chain@nxt+2)& (0+255),w,b
  5369   00A1B6  11AD               	iorwf	(remove_chain@nxt+3)& (0+255),w,b
  5370   00A1B8  A4D8               	btfss	status,2,c
  5371   00A1BA  EFE1  F050         	goto	u10511
  5372   00A1BE  EFE3  F050         	goto	u10510
  5373   00A1C2                     u10511:
  5374   00A1C2  EFE5  F050         	goto	l8336
  5375   00A1C6                     u10510:
  5376   00A1C6  EF83  F050         	goto	l8304
  5377   00A1CA                     l8336:
  5378                           
  5379                           ; BSR set to: 0
  5380                           ;mcc_generated_files/fatfs/ff.c: 1437:   if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;
  5381   00A1CA  29AA               	incf	remove_chain@nxt& (0+255),w,b
  5382   00A1CC  E10A               	bnz	u10521
  5383   00A1CE  29AB               	incf	(remove_chain@nxt+1)& (0+255),w,b
  5384   00A1D0  E108               	bnz	u10521
  5385   00A1D2  29AC               	incf	(remove_chain@nxt+2)& (0+255),w,b
  5386   00A1D4  E106               	bnz	u10521
  5387   00A1D6  29AD               	incf	(remove_chain@nxt+3)& (0+255),w,b
  5388   00A1D8  A4D8               	btfss	status,2,c
  5389   00A1DA  EFF1  F050         	goto	u10521
  5390   00A1DE  EFF3  F050         	goto	u10520
  5391   00A1E2                     u10521:
  5392   00A1E2  EFF6  F050         	goto	l8344
  5393   00A1E6                     u10520:
  5394   00A1E6                     
  5395                           ; BSR set to: 0
  5396   00A1E6  0E01               	movlw	1
  5397   00A1E8  EF70  F051         	goto	l258
  5398   00A1EC                     l8344:
  5399                           
  5400                           ; BSR set to: 0
  5401                           ;mcc_generated_files/fatfs/ff.c: 1439:    res = put_fat(fs, clst, 0);
  5402   00A1EC  C0AF  F077         	movff	remove_chain@fs,put_fat@fs
  5403   00A1F0  C0B0  F078         	movff	remove_chain@fs+1,put_fat@fs+1
  5404   00A1F4  C09A  F079         	movff	remove_chain@clst,put_fat@clst
  5405   00A1F8  C09B  F07A         	movff	remove_chain@clst+1,put_fat@clst+1
  5406   00A1FC  C09C  F07B         	movff	remove_chain@clst+2,put_fat@clst+2
  5407   00A200  C09D  F07C         	movff	remove_chain@clst+3,put_fat@clst+3
  5408   00A204  0E00               	movlw	0
  5409   00A206  6F7D               	movwf	put_fat@val& (0+255),b
  5410   00A208  0E00               	movlw	0
  5411   00A20A  6F7E               	movwf	(put_fat@val+1)& (0+255),b
  5412   00A20C  0E00               	movlw	0
  5413   00A20E  6F7F               	movwf	(put_fat@val+2)& (0+255),b
  5414   00A210  0E00               	movlw	0
  5415   00A212  6F80               	movwf	(put_fat@val+3)& (0+255),b
  5416   00A214  EC5E  F060         	call	_put_fat	;wreg free
  5417   00A218  0100               	movlb	0	; () banked
  5418   00A21A  6FAE               	movwf	remove_chain@res& (0+255),b
  5419   00A21C                     
  5420                           ; BSR set to: 0
  5421                           ;mcc_generated_files/fatfs/ff.c: 1440:    if (res != FR_OK) return res;
  5422   00A21C  51AE               	movf	remove_chain@res& (0+255),w,b
  5423   00A21E  B4D8               	btfsc	status,2,c
  5424   00A220  EF14  F051         	goto	u10531
  5425   00A224  EF16  F051         	goto	u10530
  5426   00A228                     u10531:
  5427   00A228  EF18  F051         	goto	l8352
  5428   00A22C                     u10530:
  5429   00A22C  EFB1  F050         	goto	l8320
  5430   00A230                     l8352:
  5431                           
  5432                           ; BSR set to: 0
  5433                           ;mcc_generated_files/fatfs/ff.c: 1442:   if (fs->free_clst < fs->n_fatent - 2) {
  5434   00A230  EE20 F017          	lfsr	2,23
  5435   00A234  51AF               	movf	remove_chain@fs& (0+255),w,b
  5436   00A236  26D9               	addwf	fsr2l,f,c
  5437   00A238  51B0               	movf	(remove_chain@fs+1)& (0+255),w,b
  5438   00A23A  22DA               	addwfc	fsr2h,f,c
  5439   00A23C  0EFE               	movlw	254
  5440   00A23E  24DE               	addwf	postinc2,w,c
  5441   00A240  6FA2               	movwf	??_remove_chain& (0+255),b
  5442   00A242  0EFF               	movlw	255
  5443   00A244  20DE               	addwfc	postinc2,w,c
  5444   00A246  6FA3               	movwf	(??_remove_chain+1)& (0+255),b
  5445   00A248  0EFF               	movlw	255
  5446   00A24A  20DE               	addwfc	postinc2,w,c
  5447   00A24C  6FA4               	movwf	(??_remove_chain+2)& (0+255),b
  5448   00A24E  0EFF               	movlw	255
  5449   00A250  20DE               	addwfc	postinc2,w,c
  5450   00A252  6FA5               	movwf	(??_remove_chain+3)& (0+255),b
  5451   00A254  EE20 F00F          	lfsr	2,15
  5452   00A258  51AF               	movf	remove_chain@fs& (0+255),w,b
  5453   00A25A  26D9               	addwf	fsr2l,f,c
  5454   00A25C  51B0               	movf	(remove_chain@fs+1)& (0+255),w,b
  5455   00A25E  22DA               	addwfc	fsr2h,f,c
  5456   00A260  51A2               	movf	??_remove_chain& (0+255),w,b
  5457   00A262  5CDE               	subwf	postinc2,w,c
  5458   00A264  51A3               	movf	(??_remove_chain+1)& (0+255),w,b
  5459   00A266  58DE               	subwfb	postinc2,w,c
  5460   00A268  51A4               	movf	(??_remove_chain+2)& (0+255),w,b
  5461   00A26A  58DE               	subwfb	postinc2,w,c
  5462   00A26C  51A5               	movf	(??_remove_chain+3)& (0+255),w,b
  5463   00A26E  58DE               	subwfb	postinc2,w,c
  5464   00A270  B0D8               	btfsc	status,0,c
  5465   00A272  EF3D  F051         	goto	u10541
  5466   00A276  EF3F  F051         	goto	u10540
  5467   00A27A                     u10541:
  5468   00A27A  EF52  F051         	goto	l8356
  5469   00A27E                     u10540:
  5470   00A27E                     
  5471                           ; BSR set to: 0
  5472                           ;mcc_generated_files/fatfs/ff.c: 1443:    fs->free_clst++;
  5473   00A27E  EE20 F00F          	lfsr	2,15
  5474   00A282  51AF               	movf	remove_chain@fs& (0+255),w,b
  5475   00A284  26D9               	addwf	fsr2l,f,c
  5476   00A286  51B0               	movf	(remove_chain@fs+1)& (0+255),w,b
  5477   00A288  22DA               	addwfc	fsr2h,f,c
  5478   00A28A  2ADE               	incf	postinc2,f,c
  5479   00A28C  0E00               	movlw	0
  5480   00A28E  22DE               	addwfc	postinc2,f,c
  5481   00A290  22DE               	addwfc	postinc2,f,c
  5482   00A292  22DE               	addwfc	postinc2,f,c
  5483                           
  5484                           ;mcc_generated_files/fatfs/ff.c: 1444:    fs->fsi_flag |= 1;
  5485   00A294  EE20 F004          	lfsr	2,4
  5486   00A298  51AF               	movf	remove_chain@fs& (0+255),w,b
  5487   00A29A  26D9               	addwf	fsr2l,f,c
  5488   00A29C  51B0               	movf	(remove_chain@fs+1)& (0+255),w,b
  5489   00A29E  22DA               	addwfc	fsr2h,f,c
  5490   00A2A0  0E00               	movlw	0
  5491   00A2A2  80DB               	bsf	plusw2,0,c
  5492   00A2A4                     l8356:
  5493                           
  5494                           ; BSR set to: 0
  5495                           ;mcc_generated_files/fatfs/ff.c: 1464:   clst = nxt;
  5496   00A2A4  C0AA  F09A         	movff	remove_chain@nxt,remove_chain@clst
  5497   00A2A8  C0AB  F09B         	movff	remove_chain@nxt+1,remove_chain@clst+1
  5498   00A2AC  C0AC  F09C         	movff	remove_chain@nxt+2,remove_chain@clst+2
  5499   00A2B0  C0AD  F09D         	movff	remove_chain@nxt+3,remove_chain@clst+3
  5500                           
  5501                           ;mcc_generated_files/fatfs/ff.c: 1465:  } while (clst < fs->n_fatent);
  5502   00A2B4  EE20 F017          	lfsr	2,23
  5503   00A2B8  51AF               	movf	remove_chain@fs& (0+255),w,b
  5504   00A2BA  26D9               	addwf	fsr2l,f,c
  5505   00A2BC  51B0               	movf	(remove_chain@fs+1)& (0+255),w,b
  5506   00A2BE  22DA               	addwfc	fsr2h,f,c
  5507   00A2C0  50DE               	movf	postinc2,w,c
  5508   00A2C2  5D9A               	subwf	remove_chain@clst& (0+255),w,b
  5509   00A2C4  50DE               	movf	postinc2,w,c
  5510   00A2C6  599B               	subwfb	(remove_chain@clst+1)& (0+255),w,b
  5511   00A2C8  50DE               	movf	postinc2,w,c
  5512   00A2CA  599C               	subwfb	(remove_chain@clst+2)& (0+255),w,b
  5513   00A2CC  50DE               	movf	postinc2,w,c
  5514   00A2CE  599D               	subwfb	(remove_chain@clst+3)& (0+255),w,b
  5515   00A2D0  A0D8               	btfss	status,0,c
  5516   00A2D2  EF6D  F051         	goto	u10551
  5517   00A2D6  EF6F  F051         	goto	u10550
  5518   00A2DA                     u10551:
  5519   00A2DA  EFB4  F050         	goto	l8324
  5520   00A2DE                     u10550:
  5521   00A2DE                     l8358:
  5522                           
  5523                           ; BSR set to: 0
  5524                           ;mcc_generated_files/fatfs/ff.c: 1493:  return FR_OK;
  5525   00A2DE  0E00               	movlw	0
  5526   00A2E0                     l258:
  5527                           
  5528                           ; BSR set to: 0
  5529   00A2E0  0012               	return		;funcret
  5530   00A2E2                     __end_of_remove_chain:
  5531                           	callstack 0
  5532                           
  5533 ;; *************** function _follow_path *****************
  5534 ;; Defined at:
  5535 ;;		line 3015 in file "mcc_generated_files/fatfs/ff.c"
  5536 ;; Parameters:    Size  Location     Type
  5537 ;;  dp              2  119[BANK0 ] PTR struct .
  5538 ;;		 -> f_rename@djn(40), f_rename@djo(40), f_mkdir@dj(40), f_unlink@dj(40), 
  5539 ;;		 -> f_stat@dj(40), f_chdir@dj(40), f_open@dj(40), 
  5540 ;;  path            2  121[BANK0 ] PTR const unsigned char 
  5541 ;;		 -> STR_15(1), STR_13(13), STR_12(13), STR_11(13), 
  5542 ;;		 -> STR_10(9), STR_3(3), STR_2(10), STR_1(3), 
  5543 ;; Auto vars:     Size  Location     Type
  5544 ;;  fs              2  129[BANK0 ] PTR struct .
  5545 ;;		 -> FatFs(563), drive(563), NULL(0), 
  5546 ;;  res             1  132[BANK0 ] enum E68
  5547 ;;  ns              1  131[BANK0 ] unsigned char 
  5548 ;; Return value:  Size  Location     Type
  5549 ;;                  1    wreg      enum E68
  5550 ;; Registers used:
  5551 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  5552 ;; Tracked objects:
  5553 ;;		On entry : 0/0
  5554 ;;		On exit  : 0/0
  5555 ;;		Unchanged: 0/0
  5556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5557 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5558 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5559 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5560 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5561 ;;Total ram usage:       14 bytes
  5562 ;; Hardware stack levels used: 1
  5563 ;; Hardware stack levels required when called: 11
  5564 ;; This function calls:
  5565 ;;		_create_name
  5566 ;;		_dir_find
  5567 ;;		_dir_sdi
  5568 ;;		_ld_clust
  5569 ;; This function is called by:
  5570 ;;		_f_open
  5571 ;;		_f_chdir
  5572 ;;		_f_opendir
  5573 ;;		_f_stat
  5574 ;;		_f_unlink
  5575 ;;		_f_mkdir
  5576 ;;		_f_rename
  5577 ;; This function uses a non-reentrant model
  5578 ;;
  5579                           
  5580                           	psect	text8
  5581   00A2E2                     __ptext8:
  5582                           	callstack 0
  5583   00A2E2                     _follow_path:
  5584                           	callstack 17
  5585   00A2E2                     
  5586                           ;mcc_generated_files/fatfs/ff.c: 3016:  FFDIR* dp,;mcc_generated_files/fatfs/ff.c: 3017:
      +                            const TCHAR* path;mcc_generated_files/fatfs/ff.c: 3019: {;mcc_generated_files/fatfs/ff
      +                          .c: 3020:  FRESULT res;;mcc_generated_files/fatfs/ff.c: 3021:  BYTE ns;;mcc_generated_fi
      +                          les/fatfs/ff.c: 3022:  FATFS *fs = dp->obj.fs;
  5587   00A2E2  C0D7  FFD9         	movff	follow_path@dp,fsr2l
  5588   00A2E6  C0D8  FFDA         	movff	follow_path@dp+1,fsr2h
  5589   00A2EA  CFDE F0E1          	movff	postinc2,follow_path@fs
  5590   00A2EE  CFDD F0E2          	movff	postdec2,follow_path@fs+1
  5591   00A2F2                     
  5592                           ;mcc_generated_files/fatfs/ff.c: 3026:  if (*path != '/' && *path != '\\') {
  5593   00A2F2  C0D9  FFF6         	movff	follow_path@path,tblptrl
  5594   00A2F6  C0DA  FFF7         	movff	follow_path@path+1,tblptrh
  5595   00A2FA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5596   00A2FA  6AF8               	clrf	tblptru,c
  5597   00A2FC                     	endif
  5598   00A2FC                     	if	0	;tblptru may be non-zero
  5599   00A2FC                     	endif
  5600   00A2FC  0008               	tblrd		*
  5601   00A2FE  50F5               	movf	tablat,w,c
  5602   00A300  0A2F               	xorlw	47
  5603   00A302  B4D8               	btfsc	status,2,c
  5604   00A304  EF86  F051         	goto	u10581
  5605   00A308  EF88  F051         	goto	u10580
  5606   00A30C                     u10581:
  5607   00A30C  EFB1  F051         	goto	l8392
  5608   00A310                     u10580:
  5609   00A310  C0D9  FFF6         	movff	follow_path@path,tblptrl
  5610   00A314  C0DA  FFF7         	movff	follow_path@path+1,tblptrh
  5611   00A318                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5612   00A318  6AF8               	clrf	tblptru,c
  5613   00A31A                     	endif
  5614   00A31A                     	if	0	;tblptru may be non-zero
  5615   00A31A                     	endif
  5616   00A31A  0008               	tblrd		*
  5617   00A31C  50F5               	movf	tablat,w,c
  5618   00A31E  0A5C               	xorlw	92
  5619   00A320  B4D8               	btfsc	status,2,c
  5620   00A322  EF95  F051         	goto	u10591
  5621   00A326  EF97  F051         	goto	u10590
  5622   00A32A                     u10591:
  5623   00A32A  EFB1  F051         	goto	l8392
  5624   00A32E                     u10590:
  5625   00A32E                     
  5626                           ;mcc_generated_files/fatfs/ff.c: 3027:   dp->obj.sclust = fs->cdir;
  5627   00A32E  0100               	movlb	0	; () banked
  5628   00A330  EE20 F013          	lfsr	2,19
  5629   00A334  51E1               	movf	follow_path@fs& (0+255),w,b
  5630   00A336  26D9               	addwf	fsr2l,f,c
  5631   00A338  51E2               	movf	(follow_path@fs+1)& (0+255),w,b
  5632   00A33A  22DA               	addwfc	fsr2h,f,c
  5633   00A33C  EE10 F006          	lfsr	1,6
  5634   00A340  51D7               	movf	follow_path@dp& (0+255),w,b
  5635   00A342  26E1               	addwf	fsr1l,f,c
  5636   00A344  51D8               	movf	(follow_path@dp+1)& (0+255),w,b
  5637   00A346  22E2               	addwfc	fsr1h,f,c
  5638   00A348  CFDE FFE6          	movff	postinc2,postinc1
  5639   00A34C  CFDE FFE6          	movff	postinc2,postinc1
  5640   00A350  CFDE FFE6          	movff	postinc2,postinc1
  5641   00A354  CFDE FFE6          	movff	postinc2,postinc1
  5642                           
  5643                           ;mcc_generated_files/fatfs/ff.c: 3028:  } else
  5644   00A358  EFDA  F051         	goto	l8398
  5645   00A35C                     l8390:
  5646   00A35C  0100               	movlb	0	; () banked
  5647   00A35E  4BD9               	infsnz	follow_path@path& (0+255),f,b
  5648   00A360  2BDA               	incf	(follow_path@path+1)& (0+255),f,b
  5649   00A362                     l8392:
  5650   00A362  C0D9  FFF6         	movff	follow_path@path,tblptrl
  5651   00A366  C0DA  FFF7         	movff	follow_path@path+1,tblptrh
  5652   00A36A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5653   00A36A  6AF8               	clrf	tblptru,c
  5654   00A36C                     	endif
  5655   00A36C                     	if	0	;tblptru may be non-zero
  5656   00A36C                     	endif
  5657   00A36C  0008               	tblrd		*
  5658   00A36E  50F5               	movf	tablat,w,c
  5659   00A370  0A2F               	xorlw	47
  5660   00A372  B4D8               	btfsc	status,2,c
  5661   00A374  EFBE  F051         	goto	u10601
  5662   00A378  EFC0  F051         	goto	u10600
  5663   00A37C                     u10601:
  5664   00A37C  EFAE  F051         	goto	l8390
  5665   00A380                     u10600:
  5666   00A380  C0D9  FFF6         	movff	follow_path@path,tblptrl
  5667   00A384  C0DA  FFF7         	movff	follow_path@path+1,tblptrh
  5668   00A388                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5669   00A388  6AF8               	clrf	tblptru,c
  5670   00A38A                     	endif
  5671   00A38A                     	if	0	;tblptru may be non-zero
  5672   00A38A                     	endif
  5673   00A38A  0008               	tblrd		*
  5674   00A38C  50F5               	movf	tablat,w,c
  5675   00A38E  0A5C               	xorlw	92
  5676   00A390  B4D8               	btfsc	status,2,c
  5677   00A392  EFCD  F051         	goto	u10611
  5678   00A396  EFCF  F051         	goto	u10610
  5679   00A39A                     u10611:
  5680   00A39A  EFAE  F051         	goto	l8390
  5681   00A39E                     u10610:
  5682   00A39E                     
  5683                           ;mcc_generated_files/fatfs/ff.c: 3032:   dp->obj.sclust = 0;
  5684   00A39E  0100               	movlb	0	; () banked
  5685   00A3A0  EE20 F006          	lfsr	2,6
  5686   00A3A4  51D7               	movf	follow_path@dp& (0+255),w,b
  5687   00A3A6  26D9               	addwf	fsr2l,f,c
  5688   00A3A8  51D8               	movf	(follow_path@dp+1)& (0+255),w,b
  5689   00A3AA  22DA               	addwfc	fsr2h,f,c
  5690   00A3AC  6ADE               	clrf	postinc2,c
  5691   00A3AE  6ADE               	clrf	postinc2,c
  5692   00A3B0  6ADE               	clrf	postinc2,c
  5693   00A3B2  6ADD               	clrf	postdec2,c
  5694   00A3B4                     l8398:
  5695                           
  5696                           ; BSR set to: 0
  5697                           ;mcc_generated_files/fatfs/ff.c: 3051:  if ((UINT)*path < ' ') {
  5698   00A3B4  C0D9  FFF6         	movff	follow_path@path,tblptrl
  5699   00A3B8  C0DA  FFF7         	movff	follow_path@path+1,tblptrh
  5700   00A3BC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5701   00A3BC  6AF8               	clrf	tblptru,c
  5702   00A3BE                     	endif
  5703   00A3BE                     	if	0	;tblptru may be non-zero
  5704   00A3BE                     	endif
  5705   00A3BE  0E20               	movlw	32
  5706   00A3C0  0008               	tblrd		*
  5707   00A3C2  60F5               	cpfslt	tablat,c
  5708   00A3C4  EFE6  F051         	goto	u10621
  5709   00A3C8  EFE8  F051         	goto	u10620
  5710   00A3CC                     u10621:
  5711   00A3CC  EF02  F052         	goto	l8404
  5712   00A3D0                     u10620:
  5713   00A3D0                     
  5714                           ; BSR set to: 0
  5715                           ;mcc_generated_files/fatfs/ff.c: 3052:   dp->fn[11] = 0x80;
  5716   00A3D0  EE20 F027          	lfsr	2,39
  5717   00A3D4  51D7               	movf	follow_path@dp& (0+255),w,b
  5718   00A3D6  26D9               	addwf	fsr2l,f,c
  5719   00A3D8  51D8               	movf	(follow_path@dp+1)& (0+255),w,b
  5720   00A3DA  22DA               	addwfc	fsr2h,f,c
  5721   00A3DC  0E80               	movlw	128
  5722   00A3DE  6EDF               	movwf	indf2,c
  5723   00A3E0                     
  5724                           ; BSR set to: 0
  5725                           ;mcc_generated_files/fatfs/ff.c: 3053:   res = dir_sdi(dp, 0);
  5726   00A3E0  C0D7  F091         	movff	follow_path@dp,dir_sdi@dp
  5727   00A3E4  C0D8  F092         	movff	follow_path@dp+1,dir_sdi@dp+1
  5728   00A3E8  0E00               	movlw	0
  5729   00A3EA  6F93               	movwf	dir_sdi@ofs& (0+255),b
  5730   00A3EC  0E00               	movlw	0
  5731   00A3EE  6F94               	movwf	(dir_sdi@ofs+1)& (0+255),b
  5732   00A3F0  0E00               	movlw	0
  5733   00A3F2  6F95               	movwf	(dir_sdi@ofs+2)& (0+255),b
  5734   00A3F4  0E00               	movlw	0
  5735   00A3F6  6F96               	movwf	(dir_sdi@ofs+3)& (0+255),b
  5736   00A3F8  ECEA  F053         	call	_dir_sdi	;wreg free
  5737   00A3FC  0100               	movlb	0	; () banked
  5738   00A3FE  6FE4               	movwf	follow_path@res& (0+255),b
  5739                           
  5740                           ;mcc_generated_files/fatfs/ff.c: 3055:  } else {
  5741   00A400  EFAB  F052         	goto	l8438
  5742   00A404                     l8404:
  5743                           
  5744                           ; BSR set to: 0
  5745                           ;mcc_generated_files/fatfs/ff.c: 3057:    res = create_name(dp, &path);
  5746   00A404  C0D7  F009         	movff	follow_path@dp,create_name@dp
  5747   00A408  C0D8  F00A         	movff	follow_path@dp+1,create_name@dp+1
  5748   00A40C  0ED9               	movlw	low follow_path@path
  5749   00A40E  6E0B               	movwf	create_name@path^0,c
  5750   00A410  0E00               	movlw	high follow_path@path
  5751   00A412  6E0C               	movwf	(create_name@path+1)^0,c
  5752   00A414  ECE0  F05B         	call	_create_name	;wreg free
  5753   00A418  0100               	movlb	0	; () banked
  5754   00A41A  6FE4               	movwf	follow_path@res& (0+255),b
  5755   00A41C                     
  5756                           ; BSR set to: 0
  5757                           ;mcc_generated_files/fatfs/ff.c: 3058:    if (res != FR_OK) break;
  5758   00A41C  51E4               	movf	follow_path@res& (0+255),w,b
  5759   00A41E  B4D8               	btfsc	status,2,c
  5760   00A420  EF14  F052         	goto	u10631
  5761   00A424  EF16  F052         	goto	u10630
  5762   00A428                     u10631:
  5763   00A428  EF18  F052         	goto	l8410
  5764   00A42C                     u10630:
  5765   00A42C  EFAB  F052         	goto	l8438
  5766   00A430                     l8410:
  5767                           
  5768                           ; BSR set to: 0
  5769                           ;mcc_generated_files/fatfs/ff.c: 3059:    res = dir_find(dp);
  5770   00A430  C0D7  F0CF         	movff	follow_path@dp,dir_find@dp
  5771   00A434  C0D8  F0D0         	movff	follow_path@dp+1,dir_find@dp+1
  5772   00A438  ECC9  F04C         	call	_dir_find	;wreg free
  5773   00A43C  0100               	movlb	0	; () banked
  5774   00A43E  6FE4               	movwf	follow_path@res& (0+255),b
  5775   00A440                     
  5776                           ; BSR set to: 0
  5777                           ;mcc_generated_files/fatfs/ff.c: 3060:    ns = dp->fn[11];
  5778   00A440  EE20 F027          	lfsr	2,39
  5779   00A444  51D7               	movf	follow_path@dp& (0+255),w,b
  5780   00A446  26D9               	addwf	fsr2l,f,c
  5781   00A448  51D8               	movf	(follow_path@dp+1)& (0+255),w,b
  5782   00A44A  22DA               	addwfc	fsr2h,f,c
  5783   00A44C  50DF               	movf	indf2,w,c
  5784   00A44E  6FE3               	movwf	follow_path@ns& (0+255),b
  5785   00A450                     
  5786                           ; BSR set to: 0
  5787                           ;mcc_generated_files/fatfs/ff.c: 3061:    if (res != FR_OK) {
  5788   00A450  51E4               	movf	follow_path@res& (0+255),w,b
  5789   00A452  B4D8               	btfsc	status,2,c
  5790   00A454  EF2E  F052         	goto	u10641
  5791   00A458  EF30  F052         	goto	u10640
  5792   00A45C                     u10641:
  5793   00A45C  EF60  F052         	goto	l486
  5794   00A460                     u10640:
  5795   00A460                     
  5796                           ; BSR set to: 0
  5797                           ;mcc_generated_files/fatfs/ff.c: 3063:      if (1 && (ns & 0x20)) {
  5798   00A460  0E04               	movlw	4
  5799   00A462  19E4               	xorwf	follow_path@res& (0+255),w,b
  5800   00A464  A4D8               	btfss	status,2,c
  5801   00A466  EF37  F052         	goto	u10651
  5802   00A46A  EF39  F052         	goto	u10650
  5803   00A46E                     u10651:
  5804   00A46E  EFAB  F052         	goto	l8438
  5805   00A472                     u10650:
  5806   00A472                     
  5807                           ; BSR set to: 0
  5808   00A472  ABE3               	btfss	follow_path@ns& (0+255),5,b
  5809   00A474  EF3E  F052         	goto	u10661
  5810   00A478  EF40  F052         	goto	u10660
  5811   00A47C                     u10661:
  5812   00A47C  EF55  F052         	goto	l488
  5813   00A480                     u10660:
  5814   00A480                     
  5815                           ; BSR set to: 0
  5816                           ;mcc_generated_files/fatfs/ff.c: 3064:       if (!(ns & 0x04)) continue;
  5817   00A480  B5E3               	btfsc	follow_path@ns& (0+255),2,b
  5818   00A482  EF45  F052         	goto	u10671
  5819   00A486  EF47  F052         	goto	u10670
  5820   00A48A                     u10671:
  5821   00A48A  EF49  F052         	goto	l8424
  5822   00A48E                     u10670:
  5823   00A48E  EF02  F052         	goto	l8404
  5824   00A492                     l8424:
  5825                           
  5826                           ; BSR set to: 0
  5827                           ;mcc_generated_files/fatfs/ff.c: 3065:       dp->fn[11] = 0x80;
  5828   00A492  EE20 F027          	lfsr	2,39
  5829   00A496  51D7               	movf	follow_path@dp& (0+255),w,b
  5830   00A498  26D9               	addwf	fsr2l,f,c
  5831   00A49A  51D8               	movf	(follow_path@dp+1)& (0+255),w,b
  5832   00A49C  22DA               	addwfc	fsr2h,f,c
  5833   00A49E  0E80               	movlw	128
  5834   00A4A0  6EDF               	movwf	indf2,c
  5835   00A4A2                     
  5836                           ; BSR set to: 0
  5837                           ;mcc_generated_files/fatfs/ff.c: 3066:       res = FR_OK;
  5838   00A4A2  0E00               	movlw	0
  5839   00A4A4  6FE4               	movwf	follow_path@res& (0+255),b
  5840                           
  5841                           ;mcc_generated_files/fatfs/ff.c: 3067:      } else {
  5842   00A4A6  EFAB  F052         	goto	l8438
  5843   00A4AA                     l488:
  5844                           
  5845                           ; BSR set to: 0
  5846                           ;mcc_generated_files/fatfs/ff.c: 3068:       if (!(ns & 0x04)) res = FR_NO_PATH;
  5847   00A4AA  B5E3               	btfsc	follow_path@ns& (0+255),2,b
  5848   00A4AC  EF5A  F052         	goto	u10681
  5849   00A4B0  EF5C  F052         	goto	u10680
  5850   00A4B4                     u10681:
  5851   00A4B4  EFAB  F052         	goto	l8438
  5852   00A4B8                     u10680:
  5853   00A4B8                     l8428:
  5854                           
  5855                           ; BSR set to: 0
  5856   00A4B8  0E05               	movlw	5
  5857   00A4BA  6FE4               	movwf	follow_path@res& (0+255),b
  5858   00A4BC  EFAB  F052         	goto	l8438
  5859   00A4C0                     l486:
  5860                           
  5861                           ; BSR set to: 0
  5862                           ;mcc_generated_files/fatfs/ff.c: 3073:    if (ns & 0x04) break;
  5863   00A4C0  A5E3               	btfss	follow_path@ns& (0+255),2,b
  5864   00A4C2  EF65  F052         	goto	u10691
  5865   00A4C6  EF67  F052         	goto	u10690
  5866   00A4CA                     u10691:
  5867   00A4CA  EF69  F052         	goto	l8432
  5868   00A4CE                     u10690:
  5869   00A4CE  EFAB  F052         	goto	l8438
  5870   00A4D2                     l8432:
  5871                           
  5872                           ; BSR set to: 0
  5873                           ;mcc_generated_files/fatfs/ff.c: 3075:    if (!(dp->obj.attr & 0x10)) {
  5874   00A4D2  EE20 F004          	lfsr	2,4
  5875   00A4D6  51D7               	movf	follow_path@dp& (0+255),w,b
  5876   00A4D8  26D9               	addwf	fsr2l,f,c
  5877   00A4DA  51D8               	movf	(follow_path@dp+1)& (0+255),w,b
  5878   00A4DC  22DA               	addwfc	fsr2h,f,c
  5879   00A4DE  B8DF               	btfsc	indf2,4,c
  5880   00A4E0  EF74  F052         	goto	u10701
  5881   00A4E4  EF76  F052         	goto	u10700
  5882   00A4E8                     u10701:
  5883   00A4E8  EF78  F052         	goto	l8436
  5884   00A4EC                     u10700:
  5885   00A4EC  EF5C  F052         	goto	l8428
  5886   00A4F0                     l8436:
  5887                           
  5888                           ; BSR set to: 0
  5889                           ;mcc_generated_files/fatfs/ff.c: 3086:    {;mcc_generated_files/fatfs/ff.c: 3087:     dp
      +                          ->obj.sclust = ld_clust(fs, fs->win + dp->dptr % ((UINT)512));
  5890   00A4F0  C0E1  F008         	movff	follow_path@fs,ld_clust@fs
  5891   00A4F4  C0E2  F009         	movff	follow_path@fs+1,ld_clust@fs+1
  5892   00A4F8  EE20 F00E          	lfsr	2,14
  5893   00A4FC  51D7               	movf	follow_path@dp& (0+255),w,b
  5894   00A4FE  26D9               	addwf	fsr2l,f,c
  5895   00A500  51D8               	movf	(follow_path@dp+1)& (0+255),w,b
  5896   00A502  22DA               	addwfc	fsr2h,f,c
  5897   00A504  CFDE F0DB          	movff	postinc2,??_follow_path
  5898   00A508  CFDD F0DC          	movff	postdec2,??_follow_path+1
  5899   00A50C  0EFF               	movlw	255
  5900   00A50E  15DB               	andwf	??_follow_path& (0+255),w,b
  5901   00A510  6FDD               	movwf	(??_follow_path+2)& (0+255),b
  5902   00A512  0E01               	movlw	1
  5903   00A514  15DC               	andwf	(??_follow_path+1)& (0+255),w,b
  5904   00A516  6FDE               	movwf	(??_follow_path+3)& (0+255),b
  5905   00A518  51DD               	movf	(??_follow_path+2)& (0+255),w,b
  5906   00A51A  25E1               	addwf	follow_path@fs& (0+255),w,b
  5907   00A51C  6FDF               	movwf	(??_follow_path+4)& (0+255),b
  5908   00A51E  51DE               	movf	(??_follow_path+3)& (0+255),w,b
  5909   00A520  21E2               	addwfc	(follow_path@fs+1)& (0+255),w,b
  5910   00A522  6FE0               	movwf	(??_follow_path+5)& (0+255),b
  5911   00A524  0E33               	movlw	51
  5912   00A526  25DF               	addwf	(??_follow_path+4)& (0+255),w,b
  5913   00A528  6E0A               	movwf	ld_clust@dir^0,c
  5914   00A52A  0E00               	movlw	0
  5915   00A52C  21E0               	addwfc	(??_follow_path+5)& (0+255),w,b
  5916   00A52E  6E0B               	movwf	(ld_clust@dir+1)^0,c
  5917   00A530  ECD1  F041         	call	_ld_clust	;wreg free
  5918   00A534  0100               	movlb	0	; () banked
  5919   00A536  EE20 F006          	lfsr	2,6
  5920   00A53A  51D7               	movf	follow_path@dp& (0+255),w,b
  5921   00A53C  26D9               	addwf	fsr2l,f,c
  5922   00A53E  51D8               	movf	(follow_path@dp+1)& (0+255),w,b
  5923   00A540  22DA               	addwfc	fsr2h,f,c
  5924   00A542  C008  FFDE         	movff	?_ld_clust,postinc2
  5925   00A546  C009  FFDE         	movff	?_ld_clust+1,postinc2
  5926   00A54A  C00A  FFDE         	movff	?_ld_clust+2,postinc2
  5927   00A54E  C00B  FFDE         	movff	?_ld_clust+3,postinc2
  5928   00A552  EF02  F052         	goto	l8404
  5929   00A556                     l8438:
  5930                           
  5931                           ; BSR set to: 0
  5932                           ;mcc_generated_files/fatfs/ff.c: 3092:  return res;
  5933   00A556  51E4               	movf	follow_path@res& (0+255),w,b
  5934   00A558                     
  5935                           ; BSR set to: 0
  5936   00A558  0012               	return		;funcret
  5937   00A55A                     __end_of_follow_path:
  5938                           	callstack 0
  5939                           
  5940 ;; *************** function _ld_clust *****************
  5941 ;; Defined at:
  5942 ;;		line 1825 in file "mcc_generated_files/fatfs/ff.c"
  5943 ;; Parameters:    Size  Location     Type
  5944 ;;  fs              2    7[COMRAM] PTR struct .
  5945 ;;		 -> FatFs(563), drive(563), NULL(0), 
  5946 ;;  dir             2    9[COMRAM] PTR const unsigned char 
  5947 ;;		 -> drive.win(512), FatFs.win(512), FatFs(563), drive(563), 
  5948 ;;		 -> NULL(0), 
  5949 ;; Auto vars:     Size  Location     Type
  5950 ;;  cl              4   15[COMRAM] unsigned long 
  5951 ;; Return value:  Size  Location     Type
  5952 ;;                  4    7[COMRAM] unsigned long 
  5953 ;; Registers used:
  5954 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5955 ;; Tracked objects:
  5956 ;;		On entry : 0/0
  5957 ;;		On exit  : 0/0
  5958 ;;		Unchanged: 0/0
  5959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5960 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5961 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5962 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5963 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5964 ;;Total ram usage:       12 bytes
  5965 ;; Hardware stack levels used: 1
  5966 ;; Hardware stack levels required when called: 1
  5967 ;; This function calls:
  5968 ;;		_ld_word
  5969 ;; This function is called by:
  5970 ;;		_follow_path
  5971 ;;		_f_open
  5972 ;;		_f_chdir
  5973 ;;		_f_opendir
  5974 ;;		_f_unlink
  5975 ;;		_f_rename
  5976 ;; This function uses a non-reentrant model
  5977 ;;
  5978                           
  5979                           	psect	text9
  5980   0083A2                     __ptext9:
  5981                           	callstack 0
  5982   0083A2                     _ld_clust:
  5983                           	callstack 27
  5984   0083A2                     
  5985                           ;mcc_generated_files/fatfs/ff.c: 1826:  FATFS* fs,;mcc_generated_files/fatfs/ff.c: 1827:
      +                            const BYTE* dir;mcc_generated_files/fatfs/ff.c: 1829: {;mcc_generated_files/fatfs/ff.c
      +                          : 1830:  DWORD cl;;mcc_generated_files/fatfs/ff.c: 1832:  cl = ld_word(dir + 26);
  5986   0083A2  0E1A               	movlw	26
  5987   0083A4  240A               	addwf	ld_clust@dir^0,w,c
  5988   0083A6  6E01               	movwf	ld_word@ptr^0,c
  5989   0083A8  0E00               	movlw	0
  5990   0083AA  200B               	addwfc	(ld_clust@dir+1)^0,w,c
  5991   0083AC  6E02               	movwf	(ld_word@ptr+1)^0,c
  5992   0083AE  ECD1  F03E         	call	_ld_word	;wreg free
  5993   0083B2  C001  F010         	movff	?_ld_word,ld_clust@cl
  5994   0083B6  C002  F011         	movff	?_ld_word+1,ld_clust@cl+1
  5995   0083BA  6A12               	clrf	(ld_clust@cl+2)^0,c
  5996   0083BC  6A13               	clrf	(ld_clust@cl+3)^0,c
  5997   0083BE                     
  5998                           ;mcc_generated_files/fatfs/ff.c: 1833:  if (fs->fs_type == 3) {
  5999   0083BE  C008  FFD9         	movff	ld_clust@fs,fsr2l
  6000   0083C2  C009  FFDA         	movff	ld_clust@fs+1,fsr2h
  6001   0083C6  0E03               	movlw	3
  6002   0083C8  18DE               	xorwf	postinc2,w,c
  6003   0083CA  A4D8               	btfss	status,2,c
  6004   0083CC  EFEA  F041         	goto	u9881
  6005   0083D0  EFEC  F041         	goto	u9880
  6006   0083D4                     u9881:
  6007   0083D4  EF08  F042         	goto	l7982
  6008   0083D8                     u9880:
  6009   0083D8                     
  6010                           ;mcc_generated_files/fatfs/ff.c: 1834:   cl |= (DWORD)ld_word(dir + 20) << 16;
  6011   0083D8  0E14               	movlw	20
  6012   0083DA  240A               	addwf	ld_clust@dir^0,w,c
  6013   0083DC  6E01               	movwf	ld_word@ptr^0,c
  6014   0083DE  0E00               	movlw	0
  6015   0083E0  200B               	addwfc	(ld_clust@dir+1)^0,w,c
  6016   0083E2  6E02               	movwf	(ld_word@ptr+1)^0,c
  6017   0083E4  ECD1  F03E         	call	_ld_word	;wreg free
  6018   0083E8  5001               	movf	?_ld_word^0,w,c
  6019   0083EA  6E0C               	movwf	??_ld_clust^0,c
  6020   0083EC  5002               	movf	(?_ld_word+1)^0,w,c
  6021   0083EE  6E0D               	movwf	(??_ld_clust+1)^0,c
  6022   0083F0  6A0E               	clrf	(??_ld_clust+2)^0,c
  6023   0083F2  6A0F               	clrf	(??_ld_clust+3)^0,c
  6024   0083F4  C00D  F00F         	movff	??_ld_clust+1,??_ld_clust+3
  6025   0083F8  C00C  F00E         	movff	??_ld_clust,??_ld_clust+2
  6026   0083FC  6A0D               	clrf	(??_ld_clust+1)^0,c
  6027   0083FE  6A0C               	clrf	??_ld_clust^0,c
  6028   008400  500C               	movf	??_ld_clust^0,w,c
  6029   008402  1210               	iorwf	ld_clust@cl^0,f,c
  6030   008404  500D               	movf	(??_ld_clust+1)^0,w,c
  6031   008406  1211               	iorwf	(ld_clust@cl+1)^0,f,c
  6032   008408  500E               	movf	(??_ld_clust+2)^0,w,c
  6033   00840A  1212               	iorwf	(ld_clust@cl+2)^0,f,c
  6034   00840C  500F               	movf	(??_ld_clust+3)^0,w,c
  6035   00840E  1213               	iorwf	(ld_clust@cl+3)^0,f,c
  6036   008410                     l7982:
  6037                           
  6038                           ;mcc_generated_files/fatfs/ff.c: 1837:  return cl;
  6039   008410  C010  F008         	movff	ld_clust@cl,?_ld_clust
  6040   008414  C011  F009         	movff	ld_clust@cl+1,?_ld_clust+1
  6041   008418  C012  F00A         	movff	ld_clust@cl+2,?_ld_clust+2
  6042   00841C  C013  F00B         	movff	ld_clust@cl+3,?_ld_clust+3
  6043   008420  0012               	return		;funcret
  6044   008422                     __end_of_ld_clust:
  6045                           	callstack 0
  6046                           
  6047 ;; *************** function _dir_find *****************
  6048 ;; Defined at:
  6049 ;;		line 2403 in file "mcc_generated_files/fatfs/ff.c"
  6050 ;; Parameters:    Size  Location     Type
  6051 ;;  dp              2  111[BANK0 ] PTR struct .
  6052 ;;		 -> f_rename@djn(40), f_rename@djo(40), f_mkdir@dj(40), f_unlink@dj(40), 
  6053 ;;		 -> f_stat@dj(40), f_chdir@dj(40), f_open@dj(40), 
  6054 ;; Auto vars:     Size  Location     Type
  6055 ;;  fs              2  115[BANK0 ] PTR struct .
  6056 ;;		 -> FatFs(563), drive(563), NULL(0), 
  6057 ;;  res             1  118[BANK0 ] enum E68
  6058 ;;  c               1  117[BANK0 ] unsigned char 
  6059 ;; Return value:  Size  Location     Type
  6060 ;;                  1    wreg      enum E68
  6061 ;; Registers used:
  6062 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  6063 ;; Tracked objects:
  6064 ;;		On entry : 0/0
  6065 ;;		On exit  : 0/0
  6066 ;;		Unchanged: 0/0
  6067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6068 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6069 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6070 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6071 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6072 ;;Total ram usage:        8 bytes
  6073 ;; Hardware stack levels used: 1
  6074 ;; Hardware stack levels required when called: 10
  6075 ;; This function calls:
  6076 ;;		_dir_next
  6077 ;;		_dir_sdi
  6078 ;;		_mem_cmp
  6079 ;;		_move_window
  6080 ;; This function is called by:
  6081 ;;		_follow_path
  6082 ;; This function uses a non-reentrant model
  6083 ;;
  6084                           
  6085                           	psect	text10
  6086   009992                     __ptext10:
  6087                           	callstack 0
  6088   009992                     _dir_find:
  6089                           	callstack 17
  6090   009992                     
  6091                           ;mcc_generated_files/fatfs/ff.c: 2404:  FFDIR* dp;mcc_generated_files/fatfs/ff.c: 2406: 
      +                          {;mcc_generated_files/fatfs/ff.c: 2407:  FRESULT res;;mcc_generated_files/fatfs/ff.c: 24
      +                          08:  FATFS *fs = dp->obj.fs;
  6092   009992  C0CF  FFD9         	movff	dir_find@dp,fsr2l
  6093   009996  C0D0  FFDA         	movff	dir_find@dp+1,fsr2h
  6094   00999A  CFDE F0D3          	movff	postinc2,dir_find@fs
  6095   00999E  CFDD F0D4          	movff	postdec2,dir_find@fs+1
  6096   0099A2                     
  6097                           ;mcc_generated_files/fatfs/ff.c: 2409:  BYTE c;;mcc_generated_files/fatfs/ff.c: 2414:  r
      +                          es = dir_sdi(dp, 0);
  6098   0099A2  C0CF  F091         	movff	dir_find@dp,dir_sdi@dp
  6099   0099A6  C0D0  F092         	movff	dir_find@dp+1,dir_sdi@dp+1
  6100   0099AA  0E00               	movlw	0
  6101   0099AC  0100               	movlb	0	; () banked
  6102   0099AE  6F93               	movwf	dir_sdi@ofs& (0+255),b
  6103   0099B0  0E00               	movlw	0
  6104   0099B2  6F94               	movwf	(dir_sdi@ofs+1)& (0+255),b
  6105   0099B4  0E00               	movlw	0
  6106   0099B6  6F95               	movwf	(dir_sdi@ofs+2)& (0+255),b
  6107   0099B8  0E00               	movlw	0
  6108   0099BA  6F96               	movwf	(dir_sdi@ofs+3)& (0+255),b
  6109   0099BC  ECEA  F053         	call	_dir_sdi	;wreg free
  6110   0099C0  0100               	movlb	0	; () banked
  6111   0099C2  6FD6               	movwf	dir_find@res& (0+255),b
  6112   0099C4                     
  6113                           ; BSR set to: 0
  6114                           ;mcc_generated_files/fatfs/ff.c: 2415:  if (res != FR_OK) return res;
  6115   0099C4  51D6               	movf	dir_find@res& (0+255),w,b
  6116   0099C6  B4D8               	btfsc	status,2,c
  6117   0099C8  EFE8  F04C         	goto	u9901
  6118   0099CC  EFEA  F04C         	goto	u9900
  6119   0099D0                     u9901:
  6120   0099D0  EFEE  F04C         	goto	l8002
  6121   0099D4                     u9900:
  6122   0099D4                     l7998:
  6123   0099D4  0100               	movlb	0	; () banked
  6124   0099D6  51D6               	movf	dir_find@res& (0+255),w,b
  6125   0099D8  EF8A  F04D         	goto	l405
  6126   0099DC                     l8002:
  6127                           
  6128                           ; BSR set to: 0
  6129                           ;mcc_generated_files/fatfs/ff.c: 2441:   res = move_window(fs, dp->sect);
  6130   0099DC  C0D3  F070         	movff	dir_find@fs,move_window@fs
  6131   0099E0  C0D4  F071         	movff	dir_find@fs+1,move_window@fs+1
  6132   0099E4  EE20 F016          	lfsr	2,22
  6133   0099E8  51CF               	movf	dir_find@dp& (0+255),w,b
  6134   0099EA  26D9               	addwf	fsr2l,f,c
  6135   0099EC  51D0               	movf	(dir_find@dp+1)& (0+255),w,b
  6136   0099EE  22DA               	addwfc	fsr2h,f,c
  6137   0099F0  CFDE F072          	movff	postinc2,move_window@sector
  6138   0099F4  CFDE F073          	movff	postinc2,move_window@sector+1
  6139   0099F8  CFDE F074          	movff	postinc2,move_window@sector+2
  6140   0099FC  CFDE F075          	movff	postinc2,move_window@sector+3
  6141   009A00  EC51  F044         	call	_move_window	;wreg free
  6142   009A04  0100               	movlb	0	; () banked
  6143   009A06  6FD6               	movwf	dir_find@res& (0+255),b
  6144   009A08                     
  6145                           ; BSR set to: 0
  6146                           ;mcc_generated_files/fatfs/ff.c: 2442:   if (res != FR_OK) break;
  6147   009A08  51D6               	movf	dir_find@res& (0+255),w,b
  6148   009A0A  B4D8               	btfsc	status,2,c
  6149   009A0C  EF0A  F04D         	goto	u9911
  6150   009A10  EF0C  F04D         	goto	u9910
  6151   009A14                     u9911:
  6152   009A14  EF0E  F04D         	goto	l8008
  6153   009A18                     u9910:
  6154   009A18  EFEA  F04C         	goto	l7998
  6155   009A1C                     l8008:
  6156                           
  6157                           ; BSR set to: 0
  6158                           ;mcc_generated_files/fatfs/ff.c: 2443:   c = dp->dir[0];
  6159   009A1C  EE20 F01A          	lfsr	2,26
  6160   009A20  51CF               	movf	dir_find@dp& (0+255),w,b
  6161   009A22  26D9               	addwf	fsr2l,f,c
  6162   009A24  51D0               	movf	(dir_find@dp+1)& (0+255),w,b
  6163   009A26  22DA               	addwfc	fsr2h,f,c
  6164   009A28  CFDE F0D1          	movff	postinc2,??_dir_find
  6165   009A2C  CFDD F0D2          	movff	postdec2,??_dir_find+1
  6166   009A30  C0D1  FFD9         	movff	??_dir_find,fsr2l
  6167   009A34  C0D2  FFDA         	movff	??_dir_find+1,fsr2h
  6168   009A38  50DF               	movf	indf2,w,c
  6169   009A3A  6FD5               	movwf	dir_find@c& (0+255),b
  6170   009A3C                     
  6171                           ; BSR set to: 0
  6172                           ;mcc_generated_files/fatfs/ff.c: 2444:   if (c == 0) { res = FR_NO_FILE; break; }
  6173   009A3C  51D5               	movf	dir_find@c& (0+255),w,b
  6174   009A3E  A4D8               	btfss	status,2,c
  6175   009A40  EF24  F04D         	goto	u9921
  6176   009A44  EF26  F04D         	goto	u9920
  6177   009A48                     u9921:
  6178   009A48  EF2A  F04D         	goto	l8014
  6179   009A4C                     u9920:
  6180   009A4C                     
  6181                           ; BSR set to: 0
  6182   009A4C  0E04               	movlw	4
  6183   009A4E  6FD6               	movwf	dir_find@res& (0+255),b
  6184   009A50  EFEA  F04C         	goto	l7998
  6185   009A54                     l8014:
  6186                           
  6187                           ; BSR set to: 0
  6188                           ;mcc_generated_files/fatfs/ff.c: 2467:   dp->obj.attr = dp->dir[11] & 0x3F;
  6189   009A54  EE20 F004          	lfsr	2,4
  6190   009A58  51CF               	movf	dir_find@dp& (0+255),w,b
  6191   009A5A  26D9               	addwf	fsr2l,f,c
  6192   009A5C  51D0               	movf	(dir_find@dp+1)& (0+255),w,b
  6193   009A5E  22DA               	addwfc	fsr2h,f,c
  6194   009A60  EE10 F01A          	lfsr	1,26
  6195   009A64  51CF               	movf	dir_find@dp& (0+255),w,b
  6196   009A66  26E1               	addwf	fsr1l,f,c
  6197   009A68  51D0               	movf	(dir_find@dp+1)& (0+255),w,b
  6198   009A6A  22E2               	addwfc	fsr1h,f,c
  6199   009A6C  EE00 F00B          	lfsr	0,11
  6200   009A70  50E6               	movf	postinc1,w,c
  6201   009A72  26E9               	addwf	fsr0l,f,c
  6202   009A74  50E5               	movf	postdec1,w,c
  6203   009A76  22EA               	addwfc	fsr0h,f,c
  6204   009A78  50EF               	movf	indf0,w,c
  6205   009A7A  0B3F               	andlw	63
  6206   009A7C  6EDF               	movwf	indf2,c
  6207   009A7E                     
  6208                           ; BSR set to: 0
  6209                           ;mcc_generated_files/fatfs/ff.c: 2468:   if (!(dp->dir[11] & 0x08) && !mem_cmp(dp->dir, 
      +                          dp->fn, 11)) break;
  6210   009A7E  EE20 F01A          	lfsr	2,26
  6211   009A82  51CF               	movf	dir_find@dp& (0+255),w,b
  6212   009A84  26D9               	addwf	fsr2l,f,c
  6213   009A86  51D0               	movf	(dir_find@dp+1)& (0+255),w,b
  6214   009A88  22DA               	addwfc	fsr2h,f,c
  6215   009A8A  EE10 F00B          	lfsr	1,11
  6216   009A8E  50DE               	movf	postinc2,w,c
  6217   009A90  26E1               	addwf	fsr1l,f,c
  6218   009A92  50DD               	movf	postdec2,w,c
  6219   009A94  22E2               	addwfc	fsr1h,f,c
  6220   009A96  B6E7               	btfsc	indf1,3,c
  6221   009A98  EF50  F04D         	goto	u9931
  6222   009A9C  EF52  F04D         	goto	u9930
  6223   009AA0                     u9931:
  6224   009AA0  EF73  F04D         	goto	l8022
  6225   009AA4                     u9930:
  6226   009AA4                     
  6227                           ; BSR set to: 0
  6228   009AA4  EE20 F01A          	lfsr	2,26
  6229   009AA8  51CF               	movf	dir_find@dp& (0+255),w,b
  6230   009AAA  26D9               	addwf	fsr2l,f,c
  6231   009AAC  51D0               	movf	(dir_find@dp+1)& (0+255),w,b
  6232   009AAE  22DA               	addwfc	fsr2h,f,c
  6233   009AB0  CFDE F001          	movff	postinc2,mem_cmp@dst
  6234   009AB4  CFDD F002          	movff	postdec2,mem_cmp@dst+1
  6235   009AB8  0E1C               	movlw	28
  6236   009ABA  25CF               	addwf	dir_find@dp& (0+255),w,b
  6237   009ABC  6E03               	movwf	mem_cmp@src^0,c
  6238   009ABE  0E00               	movlw	0
  6239   009AC0  21D0               	addwfc	(dir_find@dp+1)& (0+255),w,b
  6240   009AC2  6E04               	movwf	(mem_cmp@src+1)^0,c
  6241   009AC4  0E00               	movlw	0
  6242   009AC6  6E06               	movwf	(mem_cmp@cnt+1)^0,c
  6243   009AC8  0E0B               	movlw	11
  6244   009ACA  6E05               	movwf	mem_cmp@cnt^0,c
  6245   009ACC  EC54  F042         	call	_mem_cmp	;wreg free
  6246   009AD0  5001               	movf	?_mem_cmp^0,w,c
  6247   009AD2  1002               	iorwf	(?_mem_cmp+1)^0,w,c
  6248   009AD4  A4D8               	btfss	status,2,c
  6249   009AD6  EF6F  F04D         	goto	u9941
  6250   009ADA  EF71  F04D         	goto	u9940
  6251   009ADE                     u9941:
  6252   009ADE  EF73  F04D         	goto	l8022
  6253   009AE2                     u9940:
  6254   009AE2  EFEA  F04C         	goto	l7998
  6255   009AE6                     l8022:
  6256                           
  6257                           ;mcc_generated_files/fatfs/ff.c: 2470:   res = dir_next(dp, 0);
  6258   009AE6  C0CF  F0B5         	movff	dir_find@dp,dir_next@dp
  6259   009AEA  C0D0  F0B6         	movff	dir_find@dp+1,dir_next@dp+1
  6260   009AEE  0E00               	movlw	0
  6261   009AF0  0100               	movlb	0	; () banked
  6262   009AF2  6FB8               	movwf	(dir_next@stretch+1)& (0+255),b
  6263   009AF4  0E00               	movlw	0
  6264   009AF6  6FB7               	movwf	dir_next@stretch& (0+255),b
  6265   009AF8  ECAF  F057         	call	_dir_next	;wreg free
  6266   009AFC  0100               	movlb	0	; () banked
  6267   009AFE  6FD6               	movwf	dir_find@res& (0+255),b
  6268   009B00                     
  6269                           ; BSR set to: 0
  6270                           ;mcc_generated_files/fatfs/ff.c: 2471:  } while (res == FR_OK);
  6271   009B00  51D6               	movf	dir_find@res& (0+255),w,b
  6272   009B02  B4D8               	btfsc	status,2,c
  6273   009B04  EF86  F04D         	goto	u9951
  6274   009B08  EF88  F04D         	goto	u9950
  6275   009B0C                     u9951:
  6276   009B0C  EFEE  F04C         	goto	l8002
  6277   009B10                     u9950:
  6278   009B10  EFEA  F04C         	goto	l7998
  6279   009B14                     l405:
  6280                           
  6281                           ; BSR set to: 0
  6282   009B14  0012               	return		;funcret
  6283   009B16                     __end_of_dir_find:
  6284                           	callstack 0
  6285                           
  6286 ;; *************** function _create_name *****************
  6287 ;; Defined at:
  6288 ;;		line 2818 in file "mcc_generated_files/fatfs/ff.c"
  6289 ;; Parameters:    Size  Location     Type
  6290 ;;  dp              2    8[COMRAM] PTR struct .
  6291 ;;		 -> f_rename@djn(40), f_rename@djo(40), f_mkdir@dj(40), f_unlink@dj(40), 
  6292 ;;		 -> f_stat@dj(40), f_chdir@dj(40), f_open@dj(40), 
  6293 ;;  path            2   10[COMRAM] PTR PTR const unsigned c
  6294 ;;		 -> follow_path@path(2), 
  6295 ;; Auto vars:     Size  Location     Type
  6296 ;;  si              2   27[COMRAM] unsigned int 
  6297 ;;  sfn             2   25[COMRAM] PTR unsigned char 
  6298 ;;		 -> djn.fn(12), f_rename@djn(40), djo.fn(12), f_rename@djo(40), 
  6299 ;;		 -> dj.fn(12), f_mkdir@dj(40), dj.fn(12), f_unlink@dj(40), 
  6300 ;;		 -> dj.fn(12), f_stat@dj(40), dj.fn(12), f_chdir@dj(40), 
  6301 ;;		 -> dj.fn(12), f_open@dj(40), 
  6302 ;;  i               2   23[COMRAM] unsigned int 
  6303 ;;  p               2   21[COMRAM] PTR const unsigned char 
  6304 ;;		 -> STR_15(1), STR_13(13), STR_12(13), STR_11(13), 
  6305 ;;		 -> STR_10(9), STR_3(3), STR_2(10), STR_1(3), 
  6306 ;;  ni              2   19[COMRAM] unsigned int 
  6307 ;;  c               1   29[COMRAM] unsigned char 
  6308 ;;  d               1   18[COMRAM] unsigned char 
  6309 ;; Return value:  Size  Location     Type
  6310 ;;                  1    wreg      enum E68
  6311 ;; Registers used:
  6312 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6313 ;; Tracked objects:
  6314 ;;		On entry : 0/0
  6315 ;;		On exit  : 0/0
  6316 ;;		Unchanged: 0/0
  6317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6318 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6319 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6320 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6321 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6322 ;;Total ram usage:       22 bytes
  6323 ;; Hardware stack levels used: 1
  6324 ;; Hardware stack levels required when called: 1
  6325 ;; This function calls:
  6326 ;;		_chk_chr
  6327 ;;		_dbc_1st
  6328 ;;		_dbc_2nd
  6329 ;;		_mem_set
  6330 ;; This function is called by:
  6331 ;;		_follow_path
  6332 ;; This function uses a non-reentrant model
  6333 ;;
  6334                           
  6335                           	psect	text11
  6336   00B7C0                     __ptext11:
  6337                           	callstack 0
  6338   00B7C0                     _create_name:
  6339                           	callstack 26
  6340   00B7C0                     
  6341                           ;mcc_generated_files/fatfs/ff.c: 2819:  FFDIR* dp,;mcc_generated_files/fatfs/ff.c: 2820:
      +                            const TCHAR** path;mcc_generated_files/fatfs/ff.c: 2822: {;mcc_generated_files/fatfs/f
      +                          f.c: 2945:  BYTE c, d, *sfn;;mcc_generated_files/fatfs/ff.c: 2946:  UINT ni, si, i;;mcc_
      +                          generated_files/fatfs/ff.c: 2947:  const char *p;;mcc_generated_files/fatfs/ff.c: 2950: 
      +                           p = *path; sfn = dp->fn;
  6342   00B7C0  C00B  FFD9         	movff	create_name@path,fsr2l
  6343   00B7C4  C00C  FFDA         	movff	create_name@path+1,fsr2h
  6344   00B7C8  CFDE F016          	movff	postinc2,create_name@p
  6345   00B7CC  CFDD F017          	movff	postdec2,create_name@p+1
  6346   00B7D0  0E1C               	movlw	28
  6347   00B7D2  2409               	addwf	create_name@dp^0,w,c
  6348   00B7D4  6E1A               	movwf	create_name@sfn^0,c
  6349   00B7D6  0E00               	movlw	0
  6350   00B7D8  200A               	addwfc	(create_name@dp+1)^0,w,c
  6351   00B7DA  6E1B               	movwf	(create_name@sfn+1)^0,c
  6352   00B7DC                     
  6353                           ;mcc_generated_files/fatfs/ff.c: 2951:  mem_set(sfn, ' ', 11);
  6354   00B7DC  C01A  F001         	movff	create_name@sfn,mem_set@dst
  6355   00B7E0  C01B  F002         	movff	create_name@sfn+1,mem_set@dst+1
  6356   00B7E4  0E00               	movlw	0
  6357   00B7E6  6E04               	movwf	(mem_set@val+1)^0,c
  6358   00B7E8  0E20               	movlw	32
  6359   00B7EA  6E03               	movwf	mem_set@val^0,c
  6360   00B7EC  0E00               	movlw	0
  6361   00B7EE  6E06               	movwf	(mem_set@cnt+1)^0,c
  6362   00B7F0  0E0B               	movlw	11
  6363   00B7F2  6E05               	movwf	mem_set@cnt^0,c
  6364   00B7F4  ECB8  F03E         	call	_mem_set	;wreg free
  6365   00B7F8                     
  6366                           ;mcc_generated_files/fatfs/ff.c: 2952:  si = i = 0; ni = 8;
  6367   00B7F8  0E00               	movlw	0
  6368   00B7FA  6E19               	movwf	(create_name@i+1)^0,c
  6369   00B7FC  0E00               	movlw	0
  6370   00B7FE  6E18               	movwf	create_name@i^0,c
  6371   00B800  C018  F01C         	movff	create_name@i,create_name@si
  6372   00B804  C019  F01D         	movff	create_name@i+1,create_name@si+1
  6373   00B808  0E00               	movlw	0
  6374   00B80A  6E15               	movwf	(create_name@ni+1)^0,c
  6375   00B80C  0E08               	movlw	8
  6376   00B80E  6E14               	movwf	create_name@ni^0,c
  6377   00B810                     
  6378                           ;mcc_generated_files/fatfs/ff.c: 2954:  if (p[si] == '.') {
  6379   00B810  501C               	movf	create_name@si^0,w,c
  6380   00B812  2416               	addwf	create_name@p^0,w,c
  6381   00B814  6E0D               	movwf	??_create_name^0,c
  6382   00B816  501D               	movf	(create_name@si+1)^0,w,c
  6383   00B818  2017               	addwfc	(create_name@p+1)^0,w,c
  6384   00B81A  6E0E               	movwf	(??_create_name+1)^0,c
  6385   00B81C  C00D  FFF6         	movff	??_create_name,tblptrl
  6386   00B820  C00E  FFF7         	movff	??_create_name+1,tblptrh
  6387   00B824                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6388   00B824  6AF8               	clrf	tblptru,c
  6389   00B826                     	endif
  6390   00B826                     	if	0	;tblptru may be non-zero
  6391   00B826                     	endif
  6392   00B826  0008               	tblrd		*
  6393   00B828  50F5               	movf	tablat,w,c
  6394   00B82A  0A2E               	xorlw	46
  6395   00B82C  A4D8               	btfss	status,2,c
  6396   00B82E  EF1B  F05C         	goto	u9961
  6397   00B832  EF1D  F05C         	goto	u9960
  6398   00B836                     u9961:
  6399   00B836  EF97  F05C         	goto	l8078
  6400   00B83A                     u9960:
  6401   00B83A                     l8042:
  6402                           
  6403                           ;mcc_generated_files/fatfs/ff.c: 2956:    c = (BYTE)p[si++];
  6404   00B83A  501C               	movf	create_name@si^0,w,c
  6405   00B83C  2416               	addwf	create_name@p^0,w,c
  6406   00B83E  6E0D               	movwf	??_create_name^0,c
  6407   00B840  501D               	movf	(create_name@si+1)^0,w,c
  6408   00B842  2017               	addwfc	(create_name@p+1)^0,w,c
  6409   00B844  6E0E               	movwf	(??_create_name+1)^0,c
  6410   00B846  C00D  FFF6         	movff	??_create_name,tblptrl
  6411   00B84A  C00E  FFF7         	movff	??_create_name+1,tblptrh
  6412   00B84E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6413   00B84E  6AF8               	clrf	tblptru,c
  6414   00B850                     	endif
  6415   00B850                     	if	0	;tblptru may be non-zero
  6416   00B850                     	endif
  6417   00B850  0008               	tblrd		*
  6418   00B852  CFF5 F01E          	movff	tablat,create_name@c
  6419   00B856  4A1C               	infsnz	create_name@si^0,f,c
  6420   00B858  2A1D               	incf	(create_name@si+1)^0,f,c
  6421   00B85A                     
  6422                           ;mcc_generated_files/fatfs/ff.c: 2957:    if (c != '.' || si >= 3) break;
  6423   00B85A  0E2E               	movlw	46
  6424   00B85C  181E               	xorwf	create_name@c^0,w,c
  6425   00B85E  A4D8               	btfss	status,2,c
  6426   00B860  EF34  F05C         	goto	u9971
  6427   00B864  EF36  F05C         	goto	u9970
  6428   00B868                     u9971:
  6429   00B868  EF4F  F05C         	goto	l8054
  6430   00B86C                     u9970:
  6431   00B86C  501D               	movf	(create_name@si+1)^0,w,c
  6432   00B86E  E109               	bnz	u9980
  6433   00B870  0E03               	movlw	3
  6434   00B872  5C1C               	subwf	create_name@si^0,w,c
  6435   00B874  A0D8               	btfss	status,0,c
  6436   00B876  EF3F  F05C         	goto	u9981
  6437   00B87A  EF41  F05C         	goto	u9980
  6438   00B87E                     u9981:
  6439   00B87E  EF43  F05C         	goto	l8050
  6440   00B882                     u9980:
  6441   00B882  EF4F  F05C         	goto	l8054
  6442   00B886                     l8050:
  6443                           
  6444                           ;mcc_generated_files/fatfs/ff.c: 2958:    sfn[i++] = c;
  6445   00B886  5018               	movf	create_name@i^0,w,c
  6446   00B888  241A               	addwf	create_name@sfn^0,w,c
  6447   00B88A  6ED9               	movwf	fsr2l,c
  6448   00B88C  5019               	movf	(create_name@i+1)^0,w,c
  6449   00B88E  201B               	addwfc	(create_name@sfn+1)^0,w,c
  6450   00B890  6EDA               	movwf	fsr2h,c
  6451   00B892  C01E  FFDF         	movff	create_name@c,indf2
  6452   00B896  4A18               	infsnz	create_name@i^0,f,c
  6453   00B898  2A19               	incf	(create_name@i+1)^0,f,c
  6454                           
  6455                           ;mcc_generated_files/fatfs/ff.c: 2959:   }
  6456   00B89A  EF1D  F05C         	goto	l8042
  6457   00B89E                     l8054:
  6458                           
  6459                           ;mcc_generated_files/fatfs/ff.c: 2960:   if (c != '/' && c != '\\' && c > ' ') return FR
      +                          _INVALID_NAME;
  6460   00B89E  0E2F               	movlw	47
  6461   00B8A0  181E               	xorwf	create_name@c^0,w,c
  6462   00B8A2  B4D8               	btfsc	status,2,c
  6463   00B8A4  EF56  F05C         	goto	u9991
  6464   00B8A8  EF58  F05C         	goto	u9990
  6465   00B8AC                     u9991:
  6466   00B8AC  EF6C  F05C         	goto	l8064
  6467   00B8B0                     u9990:
  6468   00B8B0  0E5C               	movlw	92
  6469   00B8B2  181E               	xorwf	create_name@c^0,w,c
  6470   00B8B4  B4D8               	btfsc	status,2,c
  6471   00B8B6  EF5F  F05C         	goto	u10001
  6472   00B8BA  EF61  F05C         	goto	u10000
  6473   00B8BE                     u10001:
  6474   00B8BE  EF6C  F05C         	goto	l8064
  6475   00B8C2                     u10000:
  6476   00B8C2  0E20               	movlw	32
  6477   00B8C4  641E               	cpfsgt	create_name@c^0,c
  6478   00B8C6  EF67  F05C         	goto	u10011
  6479   00B8CA  EF69  F05C         	goto	u10010
  6480   00B8CE                     u10011:
  6481   00B8CE  EF6C  F05C         	goto	l8064
  6482   00B8D2                     u10010:
  6483   00B8D2                     l8060:
  6484   00B8D2  0E06               	movlw	6
  6485   00B8D4  EF09  F05E         	goto	l439
  6486   00B8D8                     l8064:
  6487                           
  6488                           ;mcc_generated_files/fatfs/ff.c: 2961:   *path = p + si;
  6489   00B8D8  501C               	movf	create_name@si^0,w,c
  6490   00B8DA  2416               	addwf	create_name@p^0,w,c
  6491   00B8DC  6E0D               	movwf	??_create_name^0,c
  6492   00B8DE  501D               	movf	(create_name@si+1)^0,w,c
  6493   00B8E0  2017               	addwfc	(create_name@p+1)^0,w,c
  6494   00B8E2  6E0E               	movwf	(??_create_name+1)^0,c
  6495   00B8E4  C00B  FFD9         	movff	create_name@path,fsr2l
  6496   00B8E8  C00C  FFDA         	movff	create_name@path+1,fsr2h
  6497   00B8EC  C00D  FFDE         	movff	??_create_name,postinc2
  6498   00B8F0  C00E  FFDD         	movff	??_create_name+1,postdec2
  6499   00B8F4                     
  6500                           ;mcc_generated_files/fatfs/ff.c: 2962:   sfn[11] = (c <= ' ') ? 0x04 | 0x20 : 0x20;
  6501   00B8F4  0E20               	movlw	32
  6502   00B8F6  641E               	cpfsgt	create_name@c^0,c
  6503   00B8F8  EF80  F05C         	goto	u10021
  6504   00B8FC  EF82  F05C         	goto	u10020
  6505   00B900                     u10021:
  6506   00B900  EF88  F05C         	goto	l8070
  6507   00B904                     u10020:
  6508   00B904  0E00               	movlw	0
  6509   00B906  6E10               	movwf	(_create_name$1092+1)^0,c
  6510   00B908  0E20               	movlw	32
  6511   00B90A  6E0F               	movwf	_create_name$1092^0,c
  6512   00B90C  EF8C  F05C         	goto	l8072
  6513   00B910                     l8070:
  6514   00B910  0E00               	movlw	0
  6515   00B912  6E10               	movwf	(_create_name$1092+1)^0,c
  6516   00B914  0E24               	movlw	36
  6517   00B916  6E0F               	movwf	_create_name$1092^0,c
  6518   00B918                     l8072:
  6519   00B918  EE20 F00B          	lfsr	2,11
  6520   00B91C  501A               	movf	create_name@sfn^0,w,c
  6521   00B91E  26D9               	addwf	fsr2l,f,c
  6522   00B920  501B               	movf	(create_name@sfn+1)^0,w,c
  6523   00B922  22DA               	addwfc	fsr2h,f,c
  6524   00B924  C00F  FFDF         	movff	_create_name$1092,indf2
  6525   00B928                     l8074:
  6526                           
  6527                           ;mcc_generated_files/fatfs/ff.c: 2963:   return FR_OK;
  6528   00B928  0E00               	movlw	0
  6529   00B92A  EF09  F05E         	goto	l439
  6530   00B92E                     l8078:
  6531                           
  6532                           ;mcc_generated_files/fatfs/ff.c: 2967:   c = (BYTE)p[si++];
  6533   00B92E  501C               	movf	create_name@si^0,w,c
  6534   00B930  2416               	addwf	create_name@p^0,w,c
  6535   00B932  6E0D               	movwf	??_create_name^0,c
  6536   00B934  501D               	movf	(create_name@si+1)^0,w,c
  6537   00B936  2017               	addwfc	(create_name@p+1)^0,w,c
  6538   00B938  6E0E               	movwf	(??_create_name+1)^0,c
  6539   00B93A  C00D  FFF6         	movff	??_create_name,tblptrl
  6540   00B93E  C00E  FFF7         	movff	??_create_name+1,tblptrh
  6541   00B942                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6542   00B942  6AF8               	clrf	tblptru,c
  6543   00B944                     	endif
  6544   00B944                     	if	0	;tblptru may be non-zero
  6545   00B944                     	endif
  6546   00B944  0008               	tblrd		*
  6547   00B946  CFF5 F01E          	movff	tablat,create_name@c
  6548   00B94A  4A1C               	infsnz	create_name@si^0,f,c
  6549   00B94C  2A1D               	incf	(create_name@si+1)^0,f,c
  6550   00B94E                     
  6551                           ;mcc_generated_files/fatfs/ff.c: 2968:   if (c <= ' ') break;
  6552   00B94E  0E21               	movlw	33
  6553   00B950  601E               	cpfslt	create_name@c^0,c
  6554   00B952  EFAD  F05C         	goto	u10031
  6555   00B956  EFAF  F05C         	goto	u10030
  6556   00B95A                     u10031:
  6557   00B95A  EFB1  F05C         	goto	l8086
  6558   00B95E                     u10030:
  6559   00B95E  EFC1  F05D         	goto	l8150
  6560   00B962                     l8086:
  6561                           
  6562                           ;mcc_generated_files/fatfs/ff.c: 2969:   if (c == '/' || c == '\\') {
  6563   00B962  0E2F               	movlw	47
  6564   00B964  181E               	xorwf	create_name@c^0,w,c
  6565   00B966  B4D8               	btfsc	status,2,c
  6566   00B968  EFB8  F05C         	goto	u10041
  6567   00B96C  EFBA  F05C         	goto	u10040
  6568   00B970                     u10041:
  6569   00B970  EFC7  F05C         	goto	l8092
  6570   00B974                     u10040:
  6571   00B974  0E5C               	movlw	92
  6572   00B976  181E               	xorwf	create_name@c^0,w,c
  6573   00B978  A4D8               	btfss	status,2,c
  6574   00B97A  EFC1  F05C         	goto	u10051
  6575   00B97E  EFC3  F05C         	goto	u10050
  6576   00B982                     u10051:
  6577   00B982  EFF3  F05C         	goto	l8096
  6578   00B986                     u10050:
  6579   00B986  EFC7  F05C         	goto	l8092
  6580   00B98A                     l8090:
  6581   00B98A  4A1C               	infsnz	create_name@si^0,f,c
  6582   00B98C  2A1D               	incf	(create_name@si+1)^0,f,c
  6583   00B98E                     l8092:
  6584   00B98E  501C               	movf	create_name@si^0,w,c
  6585   00B990  2416               	addwf	create_name@p^0,w,c
  6586   00B992  6E0D               	movwf	??_create_name^0,c
  6587   00B994  501D               	movf	(create_name@si+1)^0,w,c
  6588   00B996  2017               	addwfc	(create_name@p+1)^0,w,c
  6589   00B998  6E0E               	movwf	(??_create_name+1)^0,c
  6590   00B99A  C00D  FFF6         	movff	??_create_name,tblptrl
  6591   00B99E  C00E  FFF7         	movff	??_create_name+1,tblptrh
  6592   00B9A2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6593   00B9A2  6AF8               	clrf	tblptru,c
  6594   00B9A4                     	endif
  6595   00B9A4                     	if	0	;tblptru may be non-zero
  6596   00B9A4                     	endif
  6597   00B9A4  0008               	tblrd		*
  6598   00B9A6  50F5               	movf	tablat,w,c
  6599   00B9A8  0A2F               	xorlw	47
  6600   00B9AA  B4D8               	btfsc	status,2,c
  6601   00B9AC  EFDA  F05C         	goto	u10061
  6602   00B9B0  EFDC  F05C         	goto	u10060
  6603   00B9B4                     u10061:
  6604   00B9B4  EFC5  F05C         	goto	l8090
  6605   00B9B8                     u10060:
  6606   00B9B8  501C               	movf	create_name@si^0,w,c
  6607   00B9BA  2416               	addwf	create_name@p^0,w,c
  6608   00B9BC  6E0D               	movwf	??_create_name^0,c
  6609   00B9BE  501D               	movf	(create_name@si+1)^0,w,c
  6610   00B9C0  2017               	addwfc	(create_name@p+1)^0,w,c
  6611   00B9C2  6E0E               	movwf	(??_create_name+1)^0,c
  6612   00B9C4  C00D  FFF6         	movff	??_create_name,tblptrl
  6613   00B9C8  C00E  FFF7         	movff	??_create_name+1,tblptrh
  6614   00B9CC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6615   00B9CC  6AF8               	clrf	tblptru,c
  6616   00B9CE                     	endif
  6617   00B9CE                     	if	0	;tblptru may be non-zero
  6618   00B9CE                     	endif
  6619   00B9CE  0008               	tblrd		*
  6620   00B9D0  50F5               	movf	tablat,w,c
  6621   00B9D2  0A5C               	xorlw	92
  6622   00B9D4  B4D8               	btfsc	status,2,c
  6623   00B9D6  EFEF  F05C         	goto	u10071
  6624   00B9DA  EFF1  F05C         	goto	u10070
  6625   00B9DE                     u10071:
  6626   00B9DE  EFC5  F05C         	goto	l8090
  6627   00B9E2                     u10070:
  6628   00B9E2  EFC1  F05D         	goto	l8150
  6629   00B9E6                     l8096:
  6630                           
  6631                           ;mcc_generated_files/fatfs/ff.c: 2973:   if (c == '.' || i >= ni) {
  6632   00B9E6  0E2E               	movlw	46
  6633   00B9E8  181E               	xorwf	create_name@c^0,w,c
  6634   00B9EA  B4D8               	btfsc	status,2,c
  6635   00B9EC  EFFA  F05C         	goto	u10081
  6636   00B9F0  EFFC  F05C         	goto	u10080
  6637   00B9F4                     u10081:
  6638   00B9F4  EF07  F05D         	goto	l8100
  6639   00B9F8                     u10080:
  6640   00B9F8  5014               	movf	create_name@ni^0,w,c
  6641   00B9FA  5C18               	subwf	create_name@i^0,w,c
  6642   00B9FC  5015               	movf	(create_name@ni+1)^0,w,c
  6643   00B9FE  5819               	subwfb	(create_name@i+1)^0,w,c
  6644   00BA00  A0D8               	btfss	status,0,c
  6645   00BA02  EF05  F05D         	goto	u10091
  6646   00BA06  EF07  F05D         	goto	u10090
  6647   00BA0A                     u10091:
  6648   00BA0A  EF26  F05D         	goto	l8110
  6649   00BA0E                     u10090:
  6650   00BA0E                     l8100:
  6651                           
  6652                           ;mcc_generated_files/fatfs/ff.c: 2974:    if (ni == 11 || c != '.') return FR_INVALID_NA
      +                          ME;
  6653   00BA0E  0E0B               	movlw	11
  6654   00BA10  1814               	xorwf	create_name@ni^0,w,c
  6655   00BA12  1015               	iorwf	(create_name@ni+1)^0,w,c
  6656   00BA14  B4D8               	btfsc	status,2,c
  6657   00BA16  EF0F  F05D         	goto	u10101
  6658   00BA1A  EF11  F05D         	goto	u10100
  6659   00BA1E                     u10101:
  6660   00BA1E  EF69  F05C         	goto	l8060
  6661   00BA22                     u10100:
  6662   00BA22  0E2E               	movlw	46
  6663   00BA24  181E               	xorwf	create_name@c^0,w,c
  6664   00BA26  B4D8               	btfsc	status,2,c
  6665   00BA28  EF18  F05D         	goto	u10111
  6666   00BA2C  EF1A  F05D         	goto	u10110
  6667   00BA30                     u10111:
  6668   00BA30  EF1C  F05D         	goto	l8108
  6669   00BA34                     u10110:
  6670   00BA34  EF69  F05C         	goto	l8060
  6671   00BA38                     l8108:
  6672                           
  6673                           ;mcc_generated_files/fatfs/ff.c: 2975:    i = 8; ni = 11;
  6674   00BA38  0E00               	movlw	0
  6675   00BA3A  6E19               	movwf	(create_name@i+1)^0,c
  6676   00BA3C  0E08               	movlw	8
  6677   00BA3E  6E18               	movwf	create_name@i^0,c
  6678   00BA40  0E00               	movlw	0
  6679   00BA42  6E15               	movwf	(create_name@ni+1)^0,c
  6680   00BA44  0E0B               	movlw	11
  6681   00BA46  6E14               	movwf	create_name@ni^0,c
  6682                           
  6683                           ;mcc_generated_files/fatfs/ff.c: 2976:    continue;
  6684   00BA48  EF97  F05C         	goto	l8078
  6685   00BA4C                     l8110:
  6686                           
  6687                           ;mcc_generated_files/fatfs/ff.c: 2983:   if (c >= 0x80) {
  6688   00BA4C  0E7F               	movlw	127
  6689   00BA4E  641E               	cpfsgt	create_name@c^0,c
  6690   00BA50  EF2C  F05D         	goto	u10121
  6691   00BA54  EF2E  F05D         	goto	u10120
  6692   00BA58                     u10121:
  6693   00BA58  EF3E  F05D         	goto	l8114
  6694   00BA5C                     u10120:
  6695   00BA5C                     
  6696                           ;mcc_generated_files/fatfs/ff.c: 2984:    c = ExCvt[c & 0x7F];
  6697   00BA5C  501E               	movf	create_name@c^0,w,c
  6698   00BA5E  0B7F               	andlw	127
  6699   00BA60  6E0D               	movwf	??_create_name^0,c
  6700   00BA62  6A0E               	clrf	(??_create_name+1)^0,c
  6701   00BA64  0E87               	movlw	low _ExCvt
  6702   00BA66  240D               	addwf	??_create_name^0,w,c
  6703   00BA68  6EF6               	movwf	tblptrl,c
  6704   00BA6A  0EFE               	movlw	high _ExCvt
  6705   00BA6C  200E               	addwfc	(??_create_name+1)^0,w,c
  6706   00BA6E  6EF7               	movwf	tblptrh,c
  6707   00BA70                     	if	1	;There are 3 active tblptr bytes
  6708   00BA70  6AF8               	clrf	tblptru,c
  6709   00BA72  0E00               	movlw	low (__mediumconst shr (0+16))
  6710   00BA74  22F8               	addwfc	tblptru,f,c
  6711   00BA76                     	endif
  6712   00BA76  0008               	tblrd		*
  6713   00BA78  CFF5 F01E          	movff	tablat,create_name@c
  6714   00BA7C                     l8114:
  6715                           
  6716                           ;mcc_generated_files/fatfs/ff.c: 2987:   if (dbc_1st(c)) {
  6717   00BA7C  501E               	movf	create_name@c^0,w,c
  6718   00BA7E  EC18  F03E         	call	_dbc_1st
  6719   00BA82  5001               	movf	?_dbc_1st^0,w,c
  6720   00BA84  1002               	iorwf	(?_dbc_1st+1)^0,w,c
  6721   00BA86  B4D8               	btfsc	status,2,c
  6722   00BA88  EF48  F05D         	goto	u10131
  6723   00BA8C  EF4A  F05D         	goto	u10130
  6724   00BA90                     u10131:
  6725   00BA90  EF8F  F05D         	goto	l8134
  6726   00BA94                     u10130:
  6727   00BA94                     
  6728                           ;mcc_generated_files/fatfs/ff.c: 2988:    d = (BYTE)p[si++];
  6729   00BA94  501C               	movf	create_name@si^0,w,c
  6730   00BA96  2416               	addwf	create_name@p^0,w,c
  6731   00BA98  6E0D               	movwf	??_create_name^0,c
  6732   00BA9A  501D               	movf	(create_name@si+1)^0,w,c
  6733   00BA9C  2017               	addwfc	(create_name@p+1)^0,w,c
  6734   00BA9E  6E0E               	movwf	(??_create_name+1)^0,c
  6735   00BAA0  C00D  FFF6         	movff	??_create_name,tblptrl
  6736   00BAA4  C00E  FFF7         	movff	??_create_name+1,tblptrh
  6737   00BAA8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6738   00BAA8  6AF8               	clrf	tblptru,c
  6739   00BAAA                     	endif
  6740   00BAAA                     	if	0	;tblptru may be non-zero
  6741   00BAAA                     	endif
  6742   00BAAA  0008               	tblrd		*
  6743   00BAAC  CFF5 F013          	movff	tablat,create_name@d
  6744   00BAB0  4A1C               	infsnz	create_name@si^0,f,c
  6745   00BAB2  2A1D               	incf	(create_name@si+1)^0,f,c
  6746   00BAB4                     
  6747                           ;mcc_generated_files/fatfs/ff.c: 2989:    if (!dbc_2nd(d) || i >= ni - 1) return FR_INVA
      +                          LID_NAME;
  6748   00BAB4  5013               	movf	create_name@d^0,w,c
  6749   00BAB6  EC1D  F03E         	call	_dbc_2nd
  6750   00BABA  5001               	movf	?_dbc_2nd^0,w,c
  6751   00BABC  1002               	iorwf	(?_dbc_2nd+1)^0,w,c
  6752   00BABE  B4D8               	btfsc	status,2,c
  6753   00BAC0  EF64  F05D         	goto	u10141
  6754   00BAC4  EF66  F05D         	goto	u10140
  6755   00BAC8                     u10141:
  6756   00BAC8  EF69  F05C         	goto	l8060
  6757   00BACC                     u10140:
  6758   00BACC  0EFF               	movlw	255
  6759   00BACE  2414               	addwf	create_name@ni^0,w,c
  6760   00BAD0  6E0D               	movwf	??_create_name^0,c
  6761   00BAD2  0EFF               	movlw	255
  6762   00BAD4  2015               	addwfc	(create_name@ni+1)^0,w,c
  6763   00BAD6  6E0E               	movwf	(??_create_name+1)^0,c
  6764   00BAD8  500D               	movf	??_create_name^0,w,c
  6765   00BADA  5C18               	subwf	create_name@i^0,w,c
  6766   00BADC  500E               	movf	(??_create_name+1)^0,w,c
  6767   00BADE  5819               	subwfb	(create_name@i+1)^0,w,c
  6768   00BAE0  A0D8               	btfss	status,0,c
  6769   00BAE2  EF75  F05D         	goto	u10151
  6770   00BAE6  EF77  F05D         	goto	u10150
  6771   00BAEA                     u10151:
  6772   00BAEA  EF79  F05D         	goto	l8128
  6773   00BAEE                     u10150:
  6774   00BAEE  EF69  F05C         	goto	l8060
  6775   00BAF2                     l8128:
  6776                           
  6777                           ;mcc_generated_files/fatfs/ff.c: 2990:    sfn[i++] = c;
  6778   00BAF2  5018               	movf	create_name@i^0,w,c
  6779   00BAF4  241A               	addwf	create_name@sfn^0,w,c
  6780   00BAF6  6ED9               	movwf	fsr2l,c
  6781   00BAF8  5019               	movf	(create_name@i+1)^0,w,c
  6782   00BAFA  201B               	addwfc	(create_name@sfn+1)^0,w,c
  6783   00BAFC  6EDA               	movwf	fsr2h,c
  6784   00BAFE  C01E  FFDF         	movff	create_name@c,indf2
  6785   00BB02  4A18               	infsnz	create_name@i^0,f,c
  6786   00BB04  2A19               	incf	(create_name@i+1)^0,f,c
  6787   00BB06                     
  6788                           ;mcc_generated_files/fatfs/ff.c: 2991:    sfn[i++] = d;
  6789   00BB06  5018               	movf	create_name@i^0,w,c
  6790   00BB08  241A               	addwf	create_name@sfn^0,w,c
  6791   00BB0A  6ED9               	movwf	fsr2l,c
  6792   00BB0C  5019               	movf	(create_name@i+1)^0,w,c
  6793   00BB0E  201B               	addwfc	(create_name@sfn+1)^0,w,c
  6794   00BB10  6EDA               	movwf	fsr2h,c
  6795   00BB12  C013  FFDF         	movff	create_name@d,indf2
  6796   00BB16  4A18               	infsnz	create_name@i^0,f,c
  6797   00BB18  2A19               	incf	(create_name@i+1)^0,f,c
  6798                           
  6799                           ;mcc_generated_files/fatfs/ff.c: 2992:   } else {
  6800   00BB1A  EF97  F05C         	goto	l8078
  6801   00BB1E                     l8134:
  6802                           
  6803                           ;mcc_generated_files/fatfs/ff.c: 2993:    if (chk_chr("\"*+,:;<=>\?[]|\x7F", c)) return 
      +                          FR_INVALID_NAME;
  6804   00BB1E  0E8B               	movlw	low STR_4
  6805   00BB20  6E01               	movwf	chk_chr@str^0,c
  6806   00BB22  0EFF               	movlw	high STR_4
  6807   00BB24  6E02               	movwf	(chk_chr@str+1)^0,c
  6808   00BB26  C01E  F003         	movff	create_name@c,chk_chr@chr
  6809   00BB2A  6A04               	clrf	(chk_chr@chr+1)^0,c
  6810   00BB2C  EC82  F040         	call	_chk_chr	;wreg free
  6811   00BB30  5001               	movf	?_chk_chr^0,w,c
  6812   00BB32  1002               	iorwf	(?_chk_chr+1)^0,w,c
  6813   00BB34  B4D8               	btfsc	status,2,c
  6814   00BB36  EF9F  F05D         	goto	u10161
  6815   00BB3A  EFA1  F05D         	goto	u10160
  6816   00BB3E                     u10161:
  6817   00BB3E  EFA3  F05D         	goto	l8140
  6818   00BB42                     u10160:
  6819   00BB42  EF69  F05C         	goto	l8060
  6820   00BB46                     l8140:
  6821                           
  6822                           ;mcc_generated_files/fatfs/ff.c: 2994:    if (((c) >= 'a' && (c) <= 'z')) c -= 0x20;
  6823   00BB46  0E60               	movlw	96
  6824   00BB48  641E               	cpfsgt	create_name@c^0,c
  6825   00BB4A  EFA9  F05D         	goto	u10171
  6826   00BB4E  EFAB  F05D         	goto	u10170
  6827   00BB52                     u10171:
  6828   00BB52  EFB5  F05D         	goto	l8146
  6829   00BB56                     u10170:
  6830   00BB56  0E7B               	movlw	123
  6831   00BB58  601E               	cpfslt	create_name@c^0,c
  6832   00BB5A  EFB1  F05D         	goto	u10181
  6833   00BB5E  EFB3  F05D         	goto	u10180
  6834   00BB62                     u10181:
  6835   00BB62  EFB5  F05D         	goto	l8146
  6836   00BB66                     u10180:
  6837   00BB66  0E20               	movlw	32
  6838   00BB68  5E1E               	subwf	create_name@c^0,f,c
  6839   00BB6A                     l8146:
  6840                           
  6841                           ;mcc_generated_files/fatfs/ff.c: 2995:    sfn[i++] = c;
  6842   00BB6A  5018               	movf	create_name@i^0,w,c
  6843   00BB6C  241A               	addwf	create_name@sfn^0,w,c
  6844   00BB6E  6ED9               	movwf	fsr2l,c
  6845   00BB70  5019               	movf	(create_name@i+1)^0,w,c
  6846   00BB72  201B               	addwfc	(create_name@sfn+1)^0,w,c
  6847   00BB74  6EDA               	movwf	fsr2h,c
  6848   00BB76  C01E  FFDF         	movff	create_name@c,indf2
  6849   00BB7A  4A18               	infsnz	create_name@i^0,f,c
  6850   00BB7C  2A19               	incf	(create_name@i+1)^0,f,c
  6851   00BB7E  EF97  F05C         	goto	l8078
  6852   00BB82                     l8150:
  6853                           
  6854                           ;mcc_generated_files/fatfs/ff.c: 2998:  *path = p + si;
  6855   00BB82  501C               	movf	create_name@si^0,w,c
  6856   00BB84  2416               	addwf	create_name@p^0,w,c
  6857   00BB86  6E0D               	movwf	??_create_name^0,c
  6858   00BB88  501D               	movf	(create_name@si+1)^0,w,c
  6859   00BB8A  2017               	addwfc	(create_name@p+1)^0,w,c
  6860   00BB8C  6E0E               	movwf	(??_create_name+1)^0,c
  6861   00BB8E  C00B  FFD9         	movff	create_name@path,fsr2l
  6862   00BB92  C00C  FFDA         	movff	create_name@path+1,fsr2h
  6863   00BB96  C00D  FFDE         	movff	??_create_name,postinc2
  6864   00BB9A  C00E  FFDD         	movff	??_create_name+1,postdec2
  6865   00BB9E                     
  6866                           ;mcc_generated_files/fatfs/ff.c: 2999:  if (i == 0) return FR_INVALID_NAME;
  6867   00BB9E  5018               	movf	create_name@i^0,w,c
  6868   00BBA0  1019               	iorwf	(create_name@i+1)^0,w,c
  6869   00BBA2  A4D8               	btfss	status,2,c
  6870   00BBA4  EFD6  F05D         	goto	u10191
  6871   00BBA8  EFD8  F05D         	goto	u10190
  6872   00BBAC                     u10191:
  6873   00BBAC  EFDA  F05D         	goto	l8158
  6874   00BBB0                     u10190:
  6875   00BBB0  EF69  F05C         	goto	l8060
  6876   00BBB4                     l8158:
  6877                           
  6878                           ;mcc_generated_files/fatfs/ff.c: 3001:  if (sfn[0] == 0xE5) sfn[0] = 0x05;
  6879   00BBB4  C01A  FFD9         	movff	create_name@sfn,fsr2l
  6880   00BBB8  C01B  FFDA         	movff	create_name@sfn+1,fsr2h
  6881   00BBBC  0EE5               	movlw	229
  6882   00BBBE  18DE               	xorwf	postinc2,w,c
  6883   00BBC0  A4D8               	btfss	status,2,c
  6884   00BBC2  EFE5  F05D         	goto	u10201
  6885   00BBC6  EFE7  F05D         	goto	u10200
  6886   00BBCA                     u10201:
  6887   00BBCA  EFED  F05D         	goto	l8162
  6888   00BBCE                     u10200:
  6889   00BBCE  C01A  FFD9         	movff	create_name@sfn,fsr2l
  6890   00BBD2  C01B  FFDA         	movff	create_name@sfn+1,fsr2h
  6891   00BBD6  0E05               	movlw	5
  6892   00BBD8  6EDF               	movwf	indf2,c
  6893   00BBDA                     l8162:
  6894                           
  6895                           ;mcc_generated_files/fatfs/ff.c: 3002:  sfn[11] = (c <= ' ') ? 0x04 : 0;
  6896   00BBDA  0E20               	movlw	32
  6897   00BBDC  641E               	cpfsgt	create_name@c^0,c
  6898   00BBDE  EFF3  F05D         	goto	u10211
  6899   00BBE2  EFF5  F05D         	goto	u10210
  6900   00BBE6                     u10211:
  6901   00BBE6  EFFB  F05D         	goto	l8166
  6902   00BBEA                     u10210:
  6903   00BBEA  0E00               	movlw	0
  6904   00BBEC  6E12               	movwf	(_create_name$1097+1)^0,c
  6905   00BBEE  0E00               	movlw	0
  6906   00BBF0  6E11               	movwf	_create_name$1097^0,c
  6907   00BBF2  EFFF  F05D         	goto	l8168
  6908   00BBF6                     l8166:
  6909   00BBF6  0E00               	movlw	0
  6910   00BBF8  6E12               	movwf	(_create_name$1097+1)^0,c
  6911   00BBFA  0E04               	movlw	4
  6912   00BBFC  6E11               	movwf	_create_name$1097^0,c
  6913   00BBFE                     l8168:
  6914   00BBFE  EE20 F00B          	lfsr	2,11
  6915   00BC02  501A               	movf	create_name@sfn^0,w,c
  6916   00BC04  26D9               	addwf	fsr2l,f,c
  6917   00BC06  501B               	movf	(create_name@sfn+1)^0,w,c
  6918   00BC08  22DA               	addwfc	fsr2h,f,c
  6919   00BC0A  C011  FFDF         	movff	_create_name$1097,indf2
  6920   00BC0E  EF94  F05C         	goto	l8074
  6921   00BC12                     l439:
  6922   00BC12  0012               	return		;funcret
  6923   00BC14                     __end_of_create_name:
  6924                           	callstack 0
  6925                           
  6926 ;; *************** function _dbc_2nd *****************
  6927 ;; Defined at:
  6928 ;;		line 713 in file "mcc_generated_files/fatfs/ff.c"
  6929 ;; Parameters:    Size  Location     Type
  6930 ;;  c               1    wreg     unsigned char 
  6931 ;; Auto vars:     Size  Location     Type
  6932 ;;  c               1    2[COMRAM] unsigned char 
  6933 ;; Return value:  Size  Location     Type
  6934 ;;                  2    0[COMRAM] int 
  6935 ;; Registers used:
  6936 ;;		wreg, status,2
  6937 ;; Tracked objects:
  6938 ;;		On entry : 0/0
  6939 ;;		On exit  : 0/0
  6940 ;;		Unchanged: 0/0
  6941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6942 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6943 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6945 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6946 ;;Total ram usage:        3 bytes
  6947 ;; Hardware stack levels used: 1
  6948 ;; This function calls:
  6949 ;;		Nothing
  6950 ;; This function is called by:
  6951 ;;		_create_name
  6952 ;; This function uses a non-reentrant model
  6953 ;;
  6954                           
  6955                           	psect	text12
  6956   007C3A                     __ptext12:
  6957                           	callstack 0
  6958   007C3A                     _dbc_2nd:
  6959                           	callstack 26
  6960   007C3A  0E00               	movlw	0
  6961   007C3C  6E02               	movwf	(?_dbc_2nd+1)^0,c
  6962   007C3E  0E00               	movlw	0
  6963   007C40  6E01               	movwf	?_dbc_2nd^0,c
  6964   007C42  0012               	return		;funcret
  6965   007C44                     __end_of_dbc_2nd:
  6966                           	callstack 0
  6967                           
  6968 ;; *************** function _dbc_1st *****************
  6969 ;; Defined at:
  6970 ;;		line 693 in file "mcc_generated_files/fatfs/ff.c"
  6971 ;; Parameters:    Size  Location     Type
  6972 ;;  c               1    wreg     unsigned char 
  6973 ;; Auto vars:     Size  Location     Type
  6974 ;;  c               1    2[COMRAM] unsigned char 
  6975 ;; Return value:  Size  Location     Type
  6976 ;;                  2    0[COMRAM] int 
  6977 ;; Registers used:
  6978 ;;		wreg, status,2
  6979 ;; Tracked objects:
  6980 ;;		On entry : 0/0
  6981 ;;		On exit  : 0/0
  6982 ;;		Unchanged: 0/0
  6983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6984 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6985 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6987 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6988 ;;Total ram usage:        3 bytes
  6989 ;; Hardware stack levels used: 1
  6990 ;; This function calls:
  6991 ;;		Nothing
  6992 ;; This function is called by:
  6993 ;;		_create_name
  6994 ;; This function uses a non-reentrant model
  6995 ;;
  6996                           
  6997                           	psect	text13
  6998   007C30                     __ptext13:
  6999                           	callstack 0
  7000   007C30                     _dbc_1st:
  7001                           	callstack 26
  7002   007C30  0E00               	movlw	0
  7003   007C32  6E02               	movwf	(?_dbc_1st+1)^0,c
  7004   007C34  0E00               	movlw	0
  7005   007C36  6E01               	movwf	?_dbc_1st^0,c
  7006   007C38  0012               	return		;funcret
  7007   007C3A                     __end_of_dbc_1st:
  7008                           	callstack 0
  7009                           
  7010 ;; *************** function _chk_chr *****************
  7011 ;; Defined at:
  7012 ;;		line 685 in file "mcc_generated_files/fatfs/ff.c"
  7013 ;; Parameters:    Size  Location     Type
  7014 ;;  str             2    0[COMRAM] PTR const unsigned char 
  7015 ;;		 -> STR_5(15), 
  7016 ;;  chr             2    2[COMRAM] int 
  7017 ;; Auto vars:     Size  Location     Type
  7018 ;;		None
  7019 ;; Return value:  Size  Location     Type
  7020 ;;                  2    0[COMRAM] int 
  7021 ;; Registers used:
  7022 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  7023 ;; Tracked objects:
  7024 ;;		On entry : 0/0
  7025 ;;		On exit  : 0/0
  7026 ;;		Unchanged: 0/0
  7027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7028 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7030 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7031 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7032 ;;Total ram usage:        6 bytes
  7033 ;; Hardware stack levels used: 1
  7034 ;; This function calls:
  7035 ;;		Nothing
  7036 ;; This function is called by:
  7037 ;;		_create_name
  7038 ;; This function uses a non-reentrant model
  7039 ;;
  7040                           
  7041                           	psect	text14
  7042   008104                     __ptext14:
  7043                           	callstack 0
  7044   008104                     _chk_chr:
  7045                           	callstack 26
  7046   008104                     
  7047                           ;mcc_generated_files/fatfs/ff.c: 685: static int chk_chr (const char* str, int chr);mcc_
      +                          generated_files/fatfs/ff.c: 686: {;mcc_generated_files/fatfs/ff.c: 687:  while (*str && 
      +                          *str != chr) str++;
  7048   008104  EF86  F040         	goto	l7694
  7049   008108                     l7692:
  7050   008108  4A01               	infsnz	chk_chr@str^0,f,c
  7051   00810A  2A02               	incf	(chk_chr@str+1)^0,f,c
  7052   00810C                     l7694:
  7053   00810C  C001  FFF6         	movff	chk_chr@str,tblptrl
  7054   008110  C002  FFF7         	movff	chk_chr@str+1,tblptrh
  7055   008114                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7056   008114  6AF8               	clrf	tblptru,c
  7057   008116                     	endif
  7058   008116                     	if	0	;tblptru may be non-zero
  7059   008116                     	endif
  7060   008116  0008               	tblrd		*
  7061   008118  50F5               	movf	tablat,w,c
  7062   00811A  0900               	iorlw	0
  7063   00811C  B4D8               	btfsc	status,2,c
  7064   00811E  EF93  F040         	goto	u9421
  7065   008122  EF95  F040         	goto	u9420
  7066   008126                     u9421:
  7067   008126  EFAA  F040         	goto	l7698
  7068   00812A                     u9420:
  7069   00812A  C001  FFF6         	movff	chk_chr@str,tblptrl
  7070   00812E  C002  FFF7         	movff	chk_chr@str+1,tblptrh
  7071   008132                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7072   008132  6AF8               	clrf	tblptru,c
  7073   008134                     	endif
  7074   008134                     	if	0	;tblptru may be non-zero
  7075   008134                     	endif
  7076   008134  0008               	tblrd		*
  7077   008136  50F5               	movf	tablat,w,c
  7078   008138  6E05               	movwf	??_chk_chr^0,c
  7079   00813A  6A06               	clrf	(??_chk_chr+1)^0,c
  7080   00813C  5003               	movf	chk_chr@chr^0,w,c
  7081   00813E  1805               	xorwf	??_chk_chr^0,w,c
  7082   008140  E107               	bnz	u9431
  7083   008142  5004               	movf	(chk_chr@chr+1)^0,w,c
  7084   008144  1806               	xorwf	(??_chk_chr+1)^0,w,c
  7085   008146  A4D8               	btfss	status,2,c
  7086   008148  EFA8  F040         	goto	u9431
  7087   00814C  EFAA  F040         	goto	u9430
  7088   008150                     u9431:
  7089   008150  EF84  F040         	goto	l7692
  7090   008154                     u9430:
  7091   008154                     l7698:
  7092                           
  7093                           ;mcc_generated_files/fatfs/ff.c: 688:  return *str;
  7094   008154  C001  FFF6         	movff	chk_chr@str,tblptrl
  7095   008158  C002  FFF7         	movff	chk_chr@str+1,tblptrh
  7096   00815C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7097   00815C  6AF8               	clrf	tblptru,c
  7098   00815E                     	endif
  7099   00815E                     	if	0	;tblptru may be non-zero
  7100   00815E                     	endif
  7101   00815E  0008               	tblrd		*
  7102   008160  50F5               	movf	tablat,w,c
  7103   008162  6E01               	movwf	?_chk_chr^0,c
  7104   008164  6A02               	clrf	(?_chk_chr+1)^0,c
  7105   008166  0012               	return		;funcret
  7106   008168                     __end_of_chk_chr:
  7107                           	callstack 0
  7108                           
  7109 ;; *************** function _dir_register *****************
  7110 ;; Defined at:
  7111 ;;		line 2484 in file "mcc_generated_files/fatfs/ff.c"
  7112 ;; Parameters:    Size  Location     Type
  7113 ;;  dp              2  123[BANK0 ] PTR struct .
  7114 ;;		 -> f_rename@djn(40), f_mkdir@dj(40), f_open@dj(40), 
  7115 ;; Auto vars:     Size  Location     Type
  7116 ;;  fs              2  125[BANK0 ] PTR struct .
  7117 ;;		 -> FatFs(563), drive(563), NULL(0), 
  7118 ;;  res             1  127[BANK0 ] enum E68
  7119 ;; Return value:  Size  Location     Type
  7120 ;;                  1    wreg      enum E68
  7121 ;; Registers used:
  7122 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  7123 ;; Tracked objects:
  7124 ;;		On entry : 0/0
  7125 ;;		On exit  : 0/0
  7126 ;;		Unchanged: 0/0
  7127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7128 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7129 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7131 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7132 ;;Total ram usage:        5 bytes
  7133 ;; Hardware stack levels used: 1
  7134 ;; Hardware stack levels required when called: 11
  7135 ;; This function calls:
  7136 ;;		_dir_alloc
  7137 ;;		_mem_cpy
  7138 ;;		_mem_set
  7139 ;;		_move_window
  7140 ;; This function is called by:
  7141 ;;		_f_open
  7142 ;;		_f_mkdir
  7143 ;;		_f_rename
  7144 ;; This function uses a non-reentrant model
  7145 ;;
  7146                           
  7147                           	psect	text15
  7148   008B12                     __ptext15:
  7149                           	callstack 0
  7150   008B12                     _dir_register:
  7151                           	callstack 17
  7152   008B12                     
  7153                           ;mcc_generated_files/fatfs/ff.c: 2485:  FFDIR* dp;mcc_generated_files/fatfs/ff.c: 2487: 
      +                          {;mcc_generated_files/fatfs/ff.c: 2488:  FRESULT res;;mcc_generated_files/fatfs/ff.c: 24
      +                          89:  FATFS *fs = dp->obj.fs;
  7154   008B12  C0DB  FFD9         	movff	dir_register@dp,fsr2l
  7155   008B16  C0DC  FFDA         	movff	dir_register@dp+1,fsr2h
  7156   008B1A  CFDE F0DD          	movff	postinc2,dir_register@fs
  7157   008B1E  CFDD F0DE          	movff	postdec2,dir_register@fs+1
  7158   008B22                     
  7159                           ;mcc_generated_files/fatfs/ff.c: 2561:  res = dir_alloc(dp, 1);
  7160   008B22  C0DB  F0CF         	movff	dir_register@dp,dir_alloc@dp
  7161   008B26  C0DC  F0D0         	movff	dir_register@dp+1,dir_alloc@dp+1
  7162   008B2A  0E00               	movlw	0
  7163   008B2C  0100               	movlb	0	; () banked
  7164   008B2E  6FD2               	movwf	(dir_alloc@nent+1)& (0+255),b
  7165   008B30  0E01               	movlw	1
  7166   008B32  6FD1               	movwf	dir_alloc@nent& (0+255),b
  7167   008B34  EC0F  F04A         	call	_dir_alloc	;wreg free
  7168   008B38  0100               	movlb	0	; () banked
  7169   008B3A  6FDF               	movwf	dir_register@res& (0+255),b
  7170   008B3C                     
  7171                           ; BSR set to: 0
  7172                           ;mcc_generated_files/fatfs/ff.c: 2566:  if (res == FR_OK) {
  7173   008B3C  51DF               	movf	dir_register@res& (0+255),w,b
  7174   008B3E  A4D8               	btfss	status,2,c
  7175   008B40  EFA4  F045         	goto	u10561
  7176   008B44  EFA6  F045         	goto	u10560
  7177   008B48                     u10561:
  7178   008B48  EFF8  F045         	goto	l8378
  7179   008B4C                     u10560:
  7180   008B4C                     
  7181                           ; BSR set to: 0
  7182                           ;mcc_generated_files/fatfs/ff.c: 2567:   res = move_window(fs, dp->sect);
  7183   008B4C  C0DD  F070         	movff	dir_register@fs,move_window@fs
  7184   008B50  C0DE  F071         	movff	dir_register@fs+1,move_window@fs+1
  7185   008B54  EE20 F016          	lfsr	2,22
  7186   008B58  51DB               	movf	dir_register@dp& (0+255),w,b
  7187   008B5A  26D9               	addwf	fsr2l,f,c
  7188   008B5C  51DC               	movf	(dir_register@dp+1)& (0+255),w,b
  7189   008B5E  22DA               	addwfc	fsr2h,f,c
  7190   008B60  CFDE F072          	movff	postinc2,move_window@sector
  7191   008B64  CFDE F073          	movff	postinc2,move_window@sector+1
  7192   008B68  CFDE F074          	movff	postinc2,move_window@sector+2
  7193   008B6C  CFDE F075          	movff	postinc2,move_window@sector+3
  7194   008B70  EC51  F044         	call	_move_window	;wreg free
  7195   008B74  0100               	movlb	0	; () banked
  7196   008B76  6FDF               	movwf	dir_register@res& (0+255),b
  7197   008B78                     
  7198                           ; BSR set to: 0
  7199                           ;mcc_generated_files/fatfs/ff.c: 2568:   if (res == FR_OK) {
  7200   008B78  51DF               	movf	dir_register@res& (0+255),w,b
  7201   008B7A  A4D8               	btfss	status,2,c
  7202   008B7C  EFC2  F045         	goto	u10571
  7203   008B80  EFC4  F045         	goto	u10570
  7204   008B84                     u10571:
  7205   008B84  EFF8  F045         	goto	l8378
  7206   008B88                     u10570:
  7207   008B88                     
  7208                           ; BSR set to: 0
  7209                           ;mcc_generated_files/fatfs/ff.c: 2569:    mem_set(dp->dir, 0, 32);
  7210   008B88  EE20 F01A          	lfsr	2,26
  7211   008B8C  51DB               	movf	dir_register@dp& (0+255),w,b
  7212   008B8E  26D9               	addwf	fsr2l,f,c
  7213   008B90  51DC               	movf	(dir_register@dp+1)& (0+255),w,b
  7214   008B92  22DA               	addwfc	fsr2h,f,c
  7215   008B94  CFDE F001          	movff	postinc2,mem_set@dst
  7216   008B98  CFDD F002          	movff	postdec2,mem_set@dst+1
  7217   008B9C  0E00               	movlw	0
  7218   008B9E  6E04               	movwf	(mem_set@val+1)^0,c
  7219   008BA0  0E00               	movlw	0
  7220   008BA2  6E03               	movwf	mem_set@val^0,c
  7221   008BA4  0E00               	movlw	0
  7222   008BA6  6E06               	movwf	(mem_set@cnt+1)^0,c
  7223   008BA8  0E20               	movlw	32
  7224   008BAA  6E05               	movwf	mem_set@cnt^0,c
  7225   008BAC  ECB8  F03E         	call	_mem_set	;wreg free
  7226   008BB0                     
  7227                           ;mcc_generated_files/fatfs/ff.c: 2570:    mem_cpy(dp->dir + 0, dp->fn, 11);
  7228   008BB0  0100               	movlb	0	; () banked
  7229   008BB2  EE20 F01A          	lfsr	2,26
  7230   008BB6  51DB               	movf	dir_register@dp& (0+255),w,b
  7231   008BB8  26D9               	addwf	fsr2l,f,c
  7232   008BBA  51DC               	movf	(dir_register@dp+1)& (0+255),w,b
  7233   008BBC  22DA               	addwfc	fsr2h,f,c
  7234   008BBE  CFDE F001          	movff	postinc2,mem_cpy@dst
  7235   008BC2  CFDD F002          	movff	postdec2,mem_cpy@dst+1
  7236   008BC6  0E1C               	movlw	28
  7237   008BC8  25DB               	addwf	dir_register@dp& (0+255),w,b
  7238   008BCA  6E03               	movwf	mem_cpy@src^0,c
  7239   008BCC  0E00               	movlw	0
  7240   008BCE  21DC               	addwfc	(dir_register@dp+1)& (0+255),w,b
  7241   008BD0  6E04               	movwf	(mem_cpy@src+1)^0,c
  7242   008BD2  0E00               	movlw	0
  7243   008BD4  6E06               	movwf	(mem_cpy@cnt+1)^0,c
  7244   008BD6  0E0B               	movlw	11
  7245   008BD8  6E05               	movwf	mem_cpy@cnt^0,c
  7246   008BDA  ECF9  F03F         	call	_mem_cpy	;wreg free
  7247   008BDE                     
  7248                           ;mcc_generated_files/fatfs/ff.c: 2574:    fs->wflag = 1;
  7249   008BDE  0100               	movlb	0	; () banked
  7250   008BE0  EE20 F003          	lfsr	2,3
  7251   008BE4  51DD               	movf	dir_register@fs& (0+255),w,b
  7252   008BE6  26D9               	addwf	fsr2l,f,c
  7253   008BE8  51DE               	movf	(dir_register@fs+1)& (0+255),w,b
  7254   008BEA  22DA               	addwfc	fsr2h,f,c
  7255   008BEC  0E01               	movlw	1
  7256   008BEE  6EDF               	movwf	indf2,c
  7257   008BF0                     l8378:
  7258                           
  7259                           ; BSR set to: 0
  7260                           ;mcc_generated_files/fatfs/ff.c: 2578:  return res;
  7261   008BF0  51DF               	movf	dir_register@res& (0+255),w,b
  7262   008BF2                     
  7263                           ; BSR set to: 0
  7264   008BF2  0012               	return		;funcret
  7265   008BF4                     __end_of_dir_register:
  7266                           	callstack 0
  7267                           
  7268 ;; *************** function _mem_cpy *****************
  7269 ;; Defined at:
  7270 ;;		line 646 in file "mcc_generated_files/fatfs/ff.c"
  7271 ;; Parameters:    Size  Location     Type
  7272 ;;  dst             2    0[COMRAM] PTR void 
  7273 ;;		 -> drive.win(512), file.buf(512), FatFs.win(512), Fil.buf(512), 
  7274 ;;		 -> Fil(546), FatFs(563), pb.fp(3), pb.fp(3), 
  7275 ;;		 -> pb.fp(3), f_gets@s(4), f_rename@djn(40), f_rename@buf(32), 
  7276 ;;		 -> file(546), drive(563), NULL(0), 
  7277 ;;  src             2    2[COMRAM] PTR const void 
  7278 ;;		 -> drive.win(512), djn.fn(12), pb.buf(64), pb.buf(64), 
  7279 ;;		 -> pb.buf(64), FatFs.win(512), __heap_hi(0), RAM(3895), 
  7280 ;;		 -> FatFs(563), f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), 
  7281 ;;		 -> f_rename@djn(40), f_rename@buf(32), f_rename@djo(40), dj.fn(12), 
  7282 ;;		 -> f_mkdir@dj(40), dj.fn(12), f_open@dj(40), drive(563), 
  7283 ;;		 -> FatFsDemo_Tasks@data(13), NULL(0), 
  7284 ;;  cnt             2    4[COMRAM] unsigned int 
  7285 ;; Auto vars:     Size  Location     Type
  7286 ;;  s               2    8[COMRAM] PTR const unsigned char 
  7287 ;;		 -> drive.win(512), djn.fn(12), pb.buf(64), pb.buf(64), 
  7288 ;;		 -> pb.buf(64), FatFs.win(512), __heap_hi(0), RAM(3895), 
  7289 ;;		 -> FatFs(563), f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), 
  7290 ;;		 -> f_rename@djn(40), f_rename@buf(32), f_rename@djo(40), dj.fn(12), 
  7291 ;;		 -> f_mkdir@dj(40), dj.fn(12), f_open@dj(40), drive(563), 
  7292 ;;		 -> FatFsDemo_Tasks@data(13), NULL(0), 
  7293 ;;  d               2    6[COMRAM] PTR unsigned char 
  7294 ;;		 -> drive.win(512), file.buf(512), FatFs.win(512), Fil.buf(512), 
  7295 ;;		 -> Fil(546), FatFs(563), pb.fp(3), pb.fp(3), 
  7296 ;;		 -> pb.fp(3), f_gets@s(4), f_rename@djn(40), f_rename@buf(32), 
  7297 ;;		 -> file(546), drive(563), NULL(0), 
  7298 ;; Return value:  Size  Location     Type
  7299 ;;                  1    wreg      void 
  7300 ;; Registers used:
  7301 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7302 ;; Tracked objects:
  7303 ;;		On entry : 0/0
  7304 ;;		On exit  : 0/0
  7305 ;;		Unchanged: 0/0
  7306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7307 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7308 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7310 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7311 ;;Total ram usage:       10 bytes
  7312 ;; Hardware stack levels used: 1
  7313 ;; This function calls:
  7314 ;;		Nothing
  7315 ;; This function is called by:
  7316 ;;		_dir_register
  7317 ;;		_f_write
  7318 ;;		_f_read
  7319 ;;		_f_mkdir
  7320 ;;		_f_rename
  7321 ;; This function uses a non-reentrant model
  7322 ;;
  7323                           
  7324                           	psect	text16
  7325   007FF2                     __ptext16:
  7326                           	callstack 0
  7327   007FF2                     _mem_cpy:
  7328                           	callstack 28
  7329   007FF2                     
  7330                           ;mcc_generated_files/fatfs/ff.c: 646: static void mem_cpy (void* dst, const void* src, U
      +                          INT cnt);mcc_generated_files/fatfs/ff.c: 647: {;mcc_generated_files/fatfs/ff.c: 648:  BY
      +                          TE *d = (BYTE*)dst;
  7331   007FF2  C001  F007         	movff	mem_cpy@dst,mem_cpy@d
  7332   007FF6  C002  F008         	movff	mem_cpy@dst+1,mem_cpy@d+1
  7333                           
  7334                           ;mcc_generated_files/fatfs/ff.c: 649:  const BYTE *s = (const BYTE*)src;
  7335   007FFA  C003  F009         	movff	mem_cpy@src,mem_cpy@s
  7336   007FFE  C004  F00A         	movff	mem_cpy@src+1,mem_cpy@s+1
  7337                           
  7338                           ;mcc_generated_files/fatfs/ff.c: 651:  if (cnt != 0) {
  7339   008002  5005               	movf	mem_cpy@cnt^0,w,c
  7340   008004  1006               	iorwf	(mem_cpy@cnt+1)^0,w,c
  7341   008006  B4D8               	btfsc	status,2,c
  7342   008008  EF08  F040         	goto	u9751
  7343   00800C  EF0A  F040         	goto	u9750
  7344   008010                     u9751:
  7345   008010  EF24  F040         	goto	l155
  7346   008014                     u9750:
  7347   008014                     l7912:
  7348                           
  7349                           ;mcc_generated_files/fatfs/ff.c: 653:    *d++ = *s++;
  7350   008014  C009  FFD9         	movff	mem_cpy@s,fsr2l
  7351   008018  C00A  FFDA         	movff	mem_cpy@s+1,fsr2h
  7352   00801C  C007  FFE1         	movff	mem_cpy@d,fsr1l
  7353   008020  C008  FFE2         	movff	mem_cpy@d+1,fsr1h
  7354   008024  CFDF FFE7          	movff	indf2,indf1
  7355   008028  4A09               	infsnz	mem_cpy@s^0,f,c
  7356   00802A  2A0A               	incf	(mem_cpy@s+1)^0,f,c
  7357   00802C  4A07               	infsnz	mem_cpy@d^0,f,c
  7358   00802E  2A08               	incf	(mem_cpy@d+1)^0,f,c
  7359   008030                     
  7360                           ;mcc_generated_files/fatfs/ff.c: 654:   } while (--cnt);
  7361   008030  0605               	decf	mem_cpy@cnt^0,f,c
  7362   008032  A0D8               	btfss	status,0,c
  7363   008034  0606               	decf	(mem_cpy@cnt+1)^0,f,c
  7364   008036  5005               	movf	mem_cpy@cnt^0,w,c
  7365   008038  1006               	iorwf	(mem_cpy@cnt+1)^0,w,c
  7366   00803A  A4D8               	btfss	status,2,c
  7367   00803C  EF22  F040         	goto	u9761
  7368   008040  EF24  F040         	goto	u9760
  7369   008044                     u9761:
  7370   008044  EF0A  F040         	goto	l7912
  7371   008048                     u9760:
  7372   008048                     l155:
  7373   008048  0012               	return		;funcret
  7374   00804A                     __end_of_mem_cpy:
  7375                           	callstack 0
  7376                           
  7377 ;; *************** function _dir_alloc *****************
  7378 ;; Defined at:
  7379 ;;		line 1783 in file "mcc_generated_files/fatfs/ff.c"
  7380 ;; Parameters:    Size  Location     Type
  7381 ;;  dp              2  111[BANK0 ] PTR struct .
  7382 ;;		 -> f_rename@djn(40), f_mkdir@dj(40), f_open@dj(40), 
  7383 ;;  nent            2  113[BANK0 ] unsigned int 
  7384 ;; Auto vars:     Size  Location     Type
  7385 ;;  n               2  120[BANK0 ] unsigned int 
  7386 ;;  fs              2  118[BANK0 ] PTR struct .
  7387 ;;		 -> FatFs(563), drive(563), NULL(0), 
  7388 ;;  res             1  122[BANK0 ] enum E68
  7389 ;; Return value:  Size  Location     Type
  7390 ;;                  1    wreg      enum E68
  7391 ;; Registers used:
  7392 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  7393 ;; Tracked objects:
  7394 ;;		On entry : 0/0
  7395 ;;		On exit  : 0/0
  7396 ;;		Unchanged: 0/0
  7397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7398 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7399 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7400 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7401 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7402 ;;Total ram usage:       12 bytes
  7403 ;; Hardware stack levels used: 1
  7404 ;; Hardware stack levels required when called: 10
  7405 ;; This function calls:
  7406 ;;		_dir_next
  7407 ;;		_dir_sdi
  7408 ;;		_move_window
  7409 ;; This function is called by:
  7410 ;;		_dir_register
  7411 ;; This function uses a non-reentrant model
  7412 ;;
  7413                           
  7414                           	psect	text17
  7415   00941E                     __ptext17:
  7416                           	callstack 0
  7417   00941E                     _dir_alloc:
  7418                           	callstack 17
  7419   00941E                     
  7420                           ;mcc_generated_files/fatfs/ff.c: 1784:  FFDIR* dp,;mcc_generated_files/fatfs/ff.c: 1785:
      +                            UINT nent;mcc_generated_files/fatfs/ff.c: 1787: {;mcc_generated_files/fatfs/ff.c: 1788
      +                          :  FRESULT res;;mcc_generated_files/fatfs/ff.c: 1789:  UINT n;;mcc_generated_files/fatfs
      +                          /ff.c: 1790:  FATFS *fs = dp->obj.fs;
  7421   00941E  C0CF  FFD9         	movff	dir_alloc@dp,fsr2l
  7422   009422  C0D0  FFDA         	movff	dir_alloc@dp+1,fsr2h
  7423   009426  CFDE F0D6          	movff	postinc2,dir_alloc@fs
  7424   00942A  CFDD F0D7          	movff	postdec2,dir_alloc@fs+1
  7425   00942E                     
  7426                           ;mcc_generated_files/fatfs/ff.c: 1793:  res = dir_sdi(dp, 0);
  7427   00942E  C0CF  F091         	movff	dir_alloc@dp,dir_sdi@dp
  7428   009432  C0D0  F092         	movff	dir_alloc@dp+1,dir_sdi@dp+1
  7429   009436  0E00               	movlw	0
  7430   009438  0100               	movlb	0	; () banked
  7431   00943A  6F93               	movwf	dir_sdi@ofs& (0+255),b
  7432   00943C  0E00               	movlw	0
  7433   00943E  6F94               	movwf	(dir_sdi@ofs+1)& (0+255),b
  7434   009440  0E00               	movlw	0
  7435   009442  6F95               	movwf	(dir_sdi@ofs+2)& (0+255),b
  7436   009444  0E00               	movlw	0
  7437   009446  6F96               	movwf	(dir_sdi@ofs+3)& (0+255),b
  7438   009448  ECEA  F053         	call	_dir_sdi	;wreg free
  7439   00944C  0100               	movlb	0	; () banked
  7440   00944E  6FDA               	movwf	dir_alloc@res& (0+255),b
  7441   009450                     
  7442                           ; BSR set to: 0
  7443                           ;mcc_generated_files/fatfs/ff.c: 1794:  if (res == FR_OK) {
  7444   009450  51DA               	movf	dir_alloc@res& (0+255),w,b
  7445   009452  A4D8               	btfss	status,2,c
  7446   009454  EF2E  F04A         	goto	u9811
  7447   009458  EF30  F04A         	goto	u9810
  7448   00945C                     u9811:
  7449   00945C  EFA9  F04A         	goto	l7970
  7450   009460                     u9810:
  7451   009460                     
  7452                           ; BSR set to: 0
  7453                           ;mcc_generated_files/fatfs/ff.c: 1795:   n = 0;
  7454   009460  0E00               	movlw	0
  7455   009462  6FD9               	movwf	(dir_alloc@n+1)& (0+255),b
  7456   009464  0E00               	movlw	0
  7457   009466  6FD8               	movwf	dir_alloc@n& (0+255),b
  7458   009468                     l7950:
  7459                           
  7460                           ; BSR set to: 0
  7461                           ;mcc_generated_files/fatfs/ff.c: 1797:    res = move_window(fs, dp->sect);
  7462   009468  C0D6  F070         	movff	dir_alloc@fs,move_window@fs
  7463   00946C  C0D7  F071         	movff	dir_alloc@fs+1,move_window@fs+1
  7464   009470  EE20 F016          	lfsr	2,22
  7465   009474  51CF               	movf	dir_alloc@dp& (0+255),w,b
  7466   009476  26D9               	addwf	fsr2l,f,c
  7467   009478  51D0               	movf	(dir_alloc@dp+1)& (0+255),w,b
  7468   00947A  22DA               	addwfc	fsr2h,f,c
  7469   00947C  CFDE F072          	movff	postinc2,move_window@sector
  7470   009480  CFDE F073          	movff	postinc2,move_window@sector+1
  7471   009484  CFDE F074          	movff	postinc2,move_window@sector+2
  7472   009488  CFDE F075          	movff	postinc2,move_window@sector+3
  7473   00948C  EC51  F044         	call	_move_window	;wreg free
  7474   009490  0100               	movlb	0	; () banked
  7475   009492  6FDA               	movwf	dir_alloc@res& (0+255),b
  7476   009494                     
  7477                           ; BSR set to: 0
  7478                           ;mcc_generated_files/fatfs/ff.c: 1798:    if (res != FR_OK) break;
  7479   009494  51DA               	movf	dir_alloc@res& (0+255),w,b
  7480   009496  B4D8               	btfsc	status,2,c
  7481   009498  EF50  F04A         	goto	u9821
  7482   00949C  EF52  F04A         	goto	u9820
  7483   0094A0                     u9821:
  7484   0094A0  EF54  F04A         	goto	l7956
  7485   0094A4                     u9820:
  7486   0094A4  EFA9  F04A         	goto	l7970
  7487   0094A8                     l7956:
  7488                           
  7489                           ; BSR set to: 0
  7490                           ;mcc_generated_files/fatfs/ff.c: 1802:    if (dp->dir[0] == 0xE5 || dp->dir[0] == 0) {
  7491   0094A8  EE20 F01A          	lfsr	2,26
  7492   0094AC  51CF               	movf	dir_alloc@dp& (0+255),w,b
  7493   0094AE  26D9               	addwf	fsr2l,f,c
  7494   0094B0  51D0               	movf	(dir_alloc@dp+1)& (0+255),w,b
  7495   0094B2  22DA               	addwfc	fsr2h,f,c
  7496   0094B4  CFDE F0D3          	movff	postinc2,??_dir_alloc
  7497   0094B8  CFDD F0D4          	movff	postdec2,??_dir_alloc+1
  7498   0094BC  C0D3  FFD9         	movff	??_dir_alloc,fsr2l
  7499   0094C0  C0D4  FFDA         	movff	??_dir_alloc+1,fsr2h
  7500   0094C4  0EE5               	movlw	229
  7501   0094C6  18DE               	xorwf	postinc2,w,c
  7502   0094C8  B4D8               	btfsc	status,2,c
  7503   0094CA  EF69  F04A         	goto	u9831
  7504   0094CE  EF6B  F04A         	goto	u9830
  7505   0094D2                     u9831:
  7506   0094D2  EF81  F04A         	goto	l7960
  7507   0094D6                     u9830:
  7508   0094D6                     
  7509                           ; BSR set to: 0
  7510   0094D6  EE20 F01A          	lfsr	2,26
  7511   0094DA  51CF               	movf	dir_alloc@dp& (0+255),w,b
  7512   0094DC  26D9               	addwf	fsr2l,f,c
  7513   0094DE  51D0               	movf	(dir_alloc@dp+1)& (0+255),w,b
  7514   0094E0  22DA               	addwfc	fsr2h,f,c
  7515   0094E2  CFDE F0D3          	movff	postinc2,??_dir_alloc
  7516   0094E6  CFDD F0D4          	movff	postdec2,??_dir_alloc+1
  7517   0094EA  C0D3  FFD9         	movff	??_dir_alloc,fsr2l
  7518   0094EE  C0D4  FFDA         	movff	??_dir_alloc+1,fsr2h
  7519   0094F2  50DF               	movf	indf2,w,c
  7520   0094F4  A4D8               	btfss	status,2,c
  7521   0094F6  EF7F  F04A         	goto	u9841
  7522   0094FA  EF81  F04A         	goto	u9840
  7523   0094FE                     u9841:
  7524   0094FE  EF91  F04A         	goto	l7964
  7525   009502                     u9840:
  7526   009502                     l7960:
  7527                           
  7528                           ; BSR set to: 0
  7529                           ;mcc_generated_files/fatfs/ff.c: 1804:     if (++n == nent) break;
  7530   009502  4BD8               	infsnz	dir_alloc@n& (0+255),f,b
  7531   009504  2BD9               	incf	(dir_alloc@n+1)& (0+255),f,b
  7532   009506  51D1               	movf	dir_alloc@nent& (0+255),w,b
  7533   009508  19D8               	xorwf	dir_alloc@n& (0+255),w,b
  7534   00950A  E107               	bnz	u9851
  7535   00950C  51D2               	movf	(dir_alloc@nent+1)& (0+255),w,b
  7536   00950E  19D9               	xorwf	(dir_alloc@n+1)& (0+255),w,b
  7537   009510  A4D8               	btfss	status,2,c
  7538   009512  EF8D  F04A         	goto	u9851
  7539   009516  EF8F  F04A         	goto	u9850
  7540   00951A                     u9851:
  7541   00951A  EF95  F04A         	goto	l7966
  7542   00951E                     u9850:
  7543   00951E  EFA9  F04A         	goto	l7970
  7544   009522                     l7964:
  7545                           
  7546                           ; BSR set to: 0
  7547                           ;mcc_generated_files/fatfs/ff.c: 1806:     n = 0;
  7548   009522  0E00               	movlw	0
  7549   009524  6FD9               	movwf	(dir_alloc@n+1)& (0+255),b
  7550   009526  0E00               	movlw	0
  7551   009528  6FD8               	movwf	dir_alloc@n& (0+255),b
  7552   00952A                     l7966:
  7553                           
  7554                           ; BSR set to: 0
  7555                           ;mcc_generated_files/fatfs/ff.c: 1808:    res = dir_next(dp, 1);
  7556   00952A  C0CF  F0B5         	movff	dir_alloc@dp,dir_next@dp
  7557   00952E  C0D0  F0B6         	movff	dir_alloc@dp+1,dir_next@dp+1
  7558   009532  0E00               	movlw	0
  7559   009534  6FB8               	movwf	(dir_next@stretch+1)& (0+255),b
  7560   009536  0E01               	movlw	1
  7561   009538  6FB7               	movwf	dir_next@stretch& (0+255),b
  7562   00953A  ECAF  F057         	call	_dir_next	;wreg free
  7563   00953E  0100               	movlb	0	; () banked
  7564   009540  6FDA               	movwf	dir_alloc@res& (0+255),b
  7565   009542                     
  7566                           ; BSR set to: 0
  7567                           ;mcc_generated_files/fatfs/ff.c: 1809:   } while (res == FR_OK);
  7568   009542  51DA               	movf	dir_alloc@res& (0+255),w,b
  7569   009544  B4D8               	btfsc	status,2,c
  7570   009546  EFA7  F04A         	goto	u9861
  7571   00954A  EFA9  F04A         	goto	u9860
  7572   00954E                     u9861:
  7573   00954E  EF34  F04A         	goto	l7950
  7574   009552                     u9860:
  7575   009552                     l7970:
  7576                           
  7577                           ; BSR set to: 0
  7578                           ;mcc_generated_files/fatfs/ff.c: 1812:  if (res == FR_NO_FILE) res = FR_DENIED;
  7579   009552  0E04               	movlw	4
  7580   009554  19DA               	xorwf	dir_alloc@res& (0+255),w,b
  7581   009556  A4D8               	btfss	status,2,c
  7582   009558  EFB0  F04A         	goto	u9871
  7583   00955C  EFB2  F04A         	goto	u9870
  7584   009560                     u9871:
  7585   009560  EFB4  F04A         	goto	l381
  7586   009564                     u9870:
  7587   009564                     
  7588                           ; BSR set to: 0
  7589   009564  0E07               	movlw	7
  7590   009566  6FDA               	movwf	dir_alloc@res& (0+255),b
  7591   009568                     l381:
  7592                           
  7593                           ; BSR set to: 0
  7594                           ;mcc_generated_files/fatfs/ff.c: 1813:  return res;
  7595   009568  51DA               	movf	dir_alloc@res& (0+255),w,b
  7596   00956A                     
  7597                           ; BSR set to: 0
  7598   00956A  0012               	return		;funcret
  7599   00956C                     __end_of_dir_alloc:
  7600                           	callstack 0
  7601                           
  7602 ;; *************** function _dir_sdi *****************
  7603 ;; Defined at:
  7604 ;;		line 1675 in file "mcc_generated_files/fatfs/ff.c"
  7605 ;; Parameters:    Size  Location     Type
  7606 ;;  dp              2   49[BANK0 ] PTR struct .
  7607 ;;		 -> f_rename@djn(40), f_rename@djo(40), f_mkdir@dj(40), f_unlink@sdj(40), 
  7608 ;;		 -> f_unlink@dj(40), f_stat@dj(40), f_chdir@dj(40), f_open@dj(40), 
  7609 ;;  ofs             4   51[BANK0 ] unsigned long 
  7610 ;; Auto vars:     Size  Location     Type
  7611 ;;  clst            4   69[BANK0 ] unsigned long 
  7612 ;;  csz             4   65[BANK0 ] unsigned long 
  7613 ;;  fs              2   73[BANK0 ] PTR struct .
  7614 ;;		 -> FatFs(563), drive(563), NULL(0), 
  7615 ;; Return value:  Size  Location     Type
  7616 ;;                  1    wreg      enum E68
  7617 ;; Registers used:
  7618 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  7619 ;; Tracked objects:
  7620 ;;		On entry : 0/0
  7621 ;;		On exit  : 0/0
  7622 ;;		Unchanged: 0/0
  7623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7624 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7625 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7626 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7627 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7628 ;;Total ram usage:       26 bytes
  7629 ;; Hardware stack levels used: 1
  7630 ;; Hardware stack levels required when called: 8
  7631 ;; This function calls:
  7632 ;;		_clst2sect
  7633 ;;		_get_fat
  7634 ;; This function is called by:
  7635 ;;		_dir_alloc
  7636 ;;		_dir_find
  7637 ;;		_follow_path
  7638 ;;		_f_opendir
  7639 ;;		_f_readdir
  7640 ;;		_f_unlink
  7641 ;; This function uses a non-reentrant model
  7642 ;;
  7643                           
  7644                           	psect	text18
  7645   00A7D4                     __ptext18:
  7646                           	callstack 0
  7647   00A7D4                     _dir_sdi:
  7648                           	callstack 19
  7649   00A7D4                     
  7650                           ;mcc_generated_files/fatfs/ff.c: 1676:  FFDIR* dp,;mcc_generated_files/fatfs/ff.c: 1677:
      +                            DWORD ofs;mcc_generated_files/fatfs/ff.c: 1679: {;mcc_generated_files/fatfs/ff.c: 1680
      +                          :  DWORD csz, clst;;mcc_generated_files/fatfs/ff.c: 1681:  FATFS *fs = dp->obj.fs;
  7651   00A7D4  C091  FFD9         	movff	dir_sdi@dp,fsr2l
  7652   00A7D8  C092  FFDA         	movff	dir_sdi@dp+1,fsr2h
  7653   00A7DC  CFDE F0A9          	movff	postinc2,dir_sdi@fs
  7654   00A7E0  CFDD F0AA          	movff	postdec2,dir_sdi@fs+1
  7655   00A7E4  0100               	movlb	0	; () banked
  7656   00A7E6  5196               	movf	(dir_sdi@ofs+3)& (0+255),w,b
  7657   00A7E8  E107               	bnz	u9441
  7658   00A7EA  0E20               	movlw	32
  7659   00A7EC  5D95               	subwf	(dir_sdi@ofs+2)& (0+255),w,b
  7660   00A7EE  B0D8               	btfsc	status,0,c
  7661   00A7F0  EFFC  F053         	goto	u9441
  7662   00A7F4  EFFE  F053         	goto	u9440
  7663   00A7F8                     u9441:
  7664   00A7F8  EF15  F054         	goto	l7734
  7665   00A7FC                     u9440:
  7666   00A7FC                     
  7667                           ; BSR set to: 0
  7668   00A7FC  0E1F               	movlw	31
  7669   00A7FE  1593               	andwf	dir_sdi@ofs& (0+255),w,b
  7670   00A800  6F97               	movwf	??_dir_sdi& (0+255),b
  7671   00A802  0E00               	movlw	0
  7672   00A804  1594               	andwf	(dir_sdi@ofs+1)& (0+255),w,b
  7673   00A806  6F98               	movwf	(??_dir_sdi+1)& (0+255),b
  7674   00A808  0E00               	movlw	0
  7675   00A80A  1595               	andwf	(dir_sdi@ofs+2)& (0+255),w,b
  7676   00A80C  6F99               	movwf	(??_dir_sdi+2)& (0+255),b
  7677   00A80E  0E00               	movlw	0
  7678   00A810  1596               	andwf	(dir_sdi@ofs+3)& (0+255),w,b
  7679   00A812  6F9A               	movwf	(??_dir_sdi+3)& (0+255),b
  7680   00A814  5197               	movf	??_dir_sdi& (0+255),w,b
  7681   00A816  1198               	iorwf	(??_dir_sdi+1)& (0+255),w,b
  7682   00A818  1199               	iorwf	(??_dir_sdi+2)& (0+255),w,b
  7683   00A81A  119A               	iorwf	(??_dir_sdi+3)& (0+255),w,b
  7684   00A81C  B4D8               	btfsc	status,2,c
  7685   00A81E  EF13  F054         	goto	u9451
  7686   00A822  EF15  F054         	goto	u9450
  7687   00A826                     u9451:
  7688   00A826  EF18  F054         	goto	l7738
  7689   00A82A                     u9450:
  7690   00A82A                     l7734:
  7691                           
  7692                           ; BSR set to: 0
  7693                           ;mcc_generated_files/fatfs/ff.c: 1685:   return FR_INT_ERR;
  7694   00A82A  0E02               	movlw	2
  7695   00A82C  EFAE  F055         	goto	l330
  7696   00A830                     l7738:
  7697                           
  7698                           ; BSR set to: 0
  7699                           ;mcc_generated_files/fatfs/ff.c: 1687:  dp->dptr = ofs;
  7700   00A830  EE20 F00E          	lfsr	2,14
  7701   00A834  5191               	movf	dir_sdi@dp& (0+255),w,b
  7702   00A836  26D9               	addwf	fsr2l,f,c
  7703   00A838  5192               	movf	(dir_sdi@dp+1)& (0+255),w,b
  7704   00A83A  22DA               	addwfc	fsr2h,f,c
  7705   00A83C  C093  FFDE         	movff	dir_sdi@ofs,postinc2
  7706   00A840  C094  FFDE         	movff	dir_sdi@ofs+1,postinc2
  7707   00A844  C095  FFDE         	movff	dir_sdi@ofs+2,postinc2
  7708   00A848  C096  FFDE         	movff	dir_sdi@ofs+3,postinc2
  7709                           
  7710                           ;mcc_generated_files/fatfs/ff.c: 1688:  clst = dp->obj.sclust;
  7711   00A84C  EE20 F006          	lfsr	2,6
  7712   00A850  5191               	movf	dir_sdi@dp& (0+255),w,b
  7713   00A852  26D9               	addwf	fsr2l,f,c
  7714   00A854  5192               	movf	(dir_sdi@dp+1)& (0+255),w,b
  7715   00A856  22DA               	addwfc	fsr2h,f,c
  7716   00A858  CFDE F0A5          	movff	postinc2,dir_sdi@clst
  7717   00A85C  CFDE F0A6          	movff	postinc2,dir_sdi@clst+1
  7718   00A860  CFDE F0A7          	movff	postinc2,dir_sdi@clst+2
  7719   00A864  CFDE F0A8          	movff	postinc2,dir_sdi@clst+3
  7720   00A868                     
  7721                           ; BSR set to: 0
  7722                           ;mcc_generated_files/fatfs/ff.c: 1689:  if (clst == 0 && fs->fs_type >= 3) {
  7723   00A868  51A5               	movf	dir_sdi@clst& (0+255),w,b
  7724   00A86A  11A6               	iorwf	(dir_sdi@clst+1)& (0+255),w,b
  7725   00A86C  11A7               	iorwf	(dir_sdi@clst+2)& (0+255),w,b
  7726   00A86E  11A8               	iorwf	(dir_sdi@clst+3)& (0+255),w,b
  7727   00A870  A4D8               	btfss	status,2,c
  7728   00A872  EF3D  F054         	goto	u9461
  7729   00A876  EF3F  F054         	goto	u9460
  7730   00A87A                     u9461:
  7731   00A87A  EF59  F054         	goto	l7748
  7732   00A87E                     u9460:
  7733   00A87E                     
  7734                           ; BSR set to: 0
  7735   00A87E  C0A9  FFD9         	movff	dir_sdi@fs,fsr2l
  7736   00A882  C0AA  FFDA         	movff	dir_sdi@fs+1,fsr2h
  7737   00A886  0E02               	movlw	2
  7738   00A888  64DF               	cpfsgt	indf2,c
  7739   00A88A  EF49  F054         	goto	u9471
  7740   00A88E  EF4B  F054         	goto	u9470
  7741   00A892                     u9471:
  7742   00A892  EF59  F054         	goto	l7748
  7743   00A896                     u9470:
  7744   00A896                     
  7745                           ; BSR set to: 0
  7746                           ;mcc_generated_files/fatfs/ff.c: 1690:   clst = fs->dirbase;
  7747   00A896  EE20 F027          	lfsr	2,39
  7748   00A89A  51A9               	movf	dir_sdi@fs& (0+255),w,b
  7749   00A89C  26D9               	addwf	fsr2l,f,c
  7750   00A89E  51AA               	movf	(dir_sdi@fs+1)& (0+255),w,b
  7751   00A8A0  22DA               	addwfc	fsr2h,f,c
  7752   00A8A2  CFDE F0A5          	movff	postinc2,dir_sdi@clst
  7753   00A8A6  CFDE F0A6          	movff	postinc2,dir_sdi@clst+1
  7754   00A8AA  CFDE F0A7          	movff	postinc2,dir_sdi@clst+2
  7755   00A8AE  CFDE F0A8          	movff	postinc2,dir_sdi@clst+3
  7756   00A8B2                     l7748:
  7757                           
  7758                           ; BSR set to: 0
  7759                           ;mcc_generated_files/fatfs/ff.c: 1694:  if (clst == 0) {
  7760   00A8B2  51A5               	movf	dir_sdi@clst& (0+255),w,b
  7761   00A8B4  11A6               	iorwf	(dir_sdi@clst+1)& (0+255),w,b
  7762   00A8B6  11A7               	iorwf	(dir_sdi@clst+2)& (0+255),w,b
  7763   00A8B8  11A8               	iorwf	(dir_sdi@clst+3)& (0+255),w,b
  7764   00A8BA  A4D8               	btfss	status,2,c
  7765   00A8BC  EF62  F054         	goto	u9481
  7766   00A8C0  EF64  F054         	goto	u9480
  7767   00A8C4                     u9481:
  7768   00A8C4  EFAE  F054         	goto	l7758
  7769   00A8C8                     u9480:
  7770   00A8C8                     
  7771                           ; BSR set to: 0
  7772                           ;mcc_generated_files/fatfs/ff.c: 1695:   if (ofs / 32 >= fs->n_rootdir) return FR_INT_ER
      +                          R;
  7773   00A8C8  EE20 F007          	lfsr	2,7
  7774   00A8CC  51A9               	movf	dir_sdi@fs& (0+255),w,b
  7775   00A8CE  26D9               	addwf	fsr2l,f,c
  7776   00A8D0  51AA               	movf	(dir_sdi@fs+1)& (0+255),w,b
  7777   00A8D2  22DA               	addwfc	fsr2h,f,c
  7778   00A8D4  CFDE F097          	movff	postinc2,??_dir_sdi
  7779   00A8D8  CFDD F098          	movff	postdec2,??_dir_sdi+1
  7780   00A8DC  5197               	movf	??_dir_sdi& (0+255),w,b
  7781   00A8DE  6F99               	movwf	(??_dir_sdi+2)& (0+255),b
  7782   00A8E0  5198               	movf	(??_dir_sdi+1)& (0+255),w,b
  7783   00A8E2  6F9A               	movwf	(??_dir_sdi+3)& (0+255),b
  7784   00A8E4  6B9B               	clrf	(??_dir_sdi+4)& (0+255),b
  7785   00A8E6  6B9C               	clrf	(??_dir_sdi+5)& (0+255),b
  7786   00A8E8  C093  F09D         	movff	dir_sdi@ofs,??_dir_sdi+6
  7787   00A8EC  C094  F09E         	movff	dir_sdi@ofs+1,??_dir_sdi+7
  7788   00A8F0  C095  F09F         	movff	dir_sdi@ofs+2,??_dir_sdi+8
  7789   00A8F4  C096  F0A0         	movff	dir_sdi@ofs+3,??_dir_sdi+9
  7790   00A8F8  0E06               	movlw	6
  7791   00A8FA  EF84  F054         	goto	u9490
  7792   00A8FE                     u9495:
  7793   00A8FE  90D8               	bcf	status,0,c
  7794   00A900  33A0               	rrcf	(??_dir_sdi+9)& (0+255),f,b
  7795   00A902  339F               	rrcf	(??_dir_sdi+8)& (0+255),f,b
  7796   00A904  339E               	rrcf	(??_dir_sdi+7)& (0+255),f,b
  7797   00A906  339D               	rrcf	(??_dir_sdi+6)& (0+255),f,b
  7798   00A908                     u9490:
  7799   00A908  2EE8               	decfsz	wreg,f,c
  7800   00A90A  EF7F  F054         	goto	u9495
  7801   00A90E  5199               	movf	(??_dir_sdi+2)& (0+255),w,b
  7802   00A910  5D9D               	subwf	(??_dir_sdi+6)& (0+255),w,b
  7803   00A912  519A               	movf	(??_dir_sdi+3)& (0+255),w,b
  7804   00A914  599E               	subwfb	(??_dir_sdi+7)& (0+255),w,b
  7805   00A916  519B               	movf	(??_dir_sdi+4)& (0+255),w,b
  7806   00A918  599F               	subwfb	(??_dir_sdi+8)& (0+255),w,b
  7807   00A91A  519C               	movf	(??_dir_sdi+5)& (0+255),w,b
  7808   00A91C  59A0               	subwfb	(??_dir_sdi+9)& (0+255),w,b
  7809   00A91E  A0D8               	btfss	status,0,c
  7810   00A920  EF94  F054         	goto	u9501
  7811   00A924  EF96  F054         	goto	u9500
  7812   00A928                     u9501:
  7813   00A928  EF98  F054         	goto	l7756
  7814   00A92C                     u9500:
  7815   00A92C  EF15  F054         	goto	l7734
  7816   00A930                     l7756:
  7817                           
  7818                           ; BSR set to: 0
  7819                           ;mcc_generated_files/fatfs/ff.c: 1696:   dp->sect = fs->dirbase;
  7820   00A930  EE20 F027          	lfsr	2,39
  7821   00A934  51A9               	movf	dir_sdi@fs& (0+255),w,b
  7822   00A936  26D9               	addwf	fsr2l,f,c
  7823   00A938  51AA               	movf	(dir_sdi@fs+1)& (0+255),w,b
  7824   00A93A  22DA               	addwfc	fsr2h,f,c
  7825   00A93C  EE10 F016          	lfsr	1,22
  7826   00A940  5191               	movf	dir_sdi@dp& (0+255),w,b
  7827   00A942  26E1               	addwf	fsr1l,f,c
  7828   00A944  5192               	movf	(dir_sdi@dp+1)& (0+255),w,b
  7829   00A946  22E2               	addwfc	fsr1h,f,c
  7830   00A948  CFDE FFE6          	movff	postinc2,postinc1
  7831   00A94C  CFDE FFE6          	movff	postinc2,postinc1
  7832   00A950  CFDE FFE6          	movff	postinc2,postinc1
  7833   00A954  CFDE FFE6          	movff	postinc2,postinc1
  7834                           
  7835                           ;mcc_generated_files/fatfs/ff.c: 1698:  } else {
  7836   00A958  EF51  F055         	goto	l7780
  7837   00A95C                     l7758:
  7838                           
  7839                           ; BSR set to: 0
  7840                           ;mcc_generated_files/fatfs/ff.c: 1699:   csz = (DWORD)fs->csize * ((UINT)512);
  7841   00A95C  EE20 F009          	lfsr	2,9
  7842   00A960  51A9               	movf	dir_sdi@fs& (0+255),w,b
  7843   00A962  26D9               	addwf	fsr2l,f,c
  7844   00A964  51AA               	movf	(dir_sdi@fs+1)& (0+255),w,b
  7845   00A966  22DA               	addwfc	fsr2h,f,c
  7846   00A968  CFDE F097          	movff	postinc2,??_dir_sdi
  7847   00A96C  CFDD F098          	movff	postdec2,??_dir_sdi+1
  7848   00A970  5197               	movf	??_dir_sdi& (0+255),w,b
  7849   00A972  6F99               	movwf	(??_dir_sdi+2)& (0+255),b
  7850   00A974  5198               	movf	(??_dir_sdi+1)& (0+255),w,b
  7851   00A976  6F9A               	movwf	(??_dir_sdi+3)& (0+255),b
  7852   00A978  6B9B               	clrf	(??_dir_sdi+4)& (0+255),b
  7853   00A97A  6B9C               	clrf	(??_dir_sdi+5)& (0+255),b
  7854   00A97C  0E09               	movlw	9
  7855   00A97E                     u9515:
  7856   00A97E  90D8               	bcf	status,0,c
  7857   00A980  3799               	rlcf	(??_dir_sdi+2)& (0+255),f,b
  7858   00A982  379A               	rlcf	(??_dir_sdi+3)& (0+255),f,b
  7859   00A984  379B               	rlcf	(??_dir_sdi+4)& (0+255),f,b
  7860   00A986  379C               	rlcf	(??_dir_sdi+5)& (0+255),f,b
  7861   00A988  2EE8               	decfsz	wreg,f,c
  7862   00A98A  EFBF  F054         	goto	u9515
  7863   00A98E  C099  F0A1         	movff	??_dir_sdi+2,dir_sdi@csz
  7864   00A992  C09A  F0A2         	movff	??_dir_sdi+3,dir_sdi@csz+1
  7865   00A996  C09B  F0A3         	movff	??_dir_sdi+4,dir_sdi@csz+2
  7866   00A99A  C09C  F0A4         	movff	??_dir_sdi+5,dir_sdi@csz+3
  7867                           
  7868                           ;mcc_generated_files/fatfs/ff.c: 1700:   while (ofs >= csz) {
  7869   00A99E  EF25  F055         	goto	l336
  7870   00A9A2                     l7760:
  7871                           
  7872                           ; BSR set to: 0
  7873                           ;mcc_generated_files/fatfs/ff.c: 1701:    clst = get_fat(&dp->obj, clst);
  7874   00A9A2  C091  F077         	movff	dir_sdi@dp,get_fat@obj
  7875   00A9A6  C092  F078         	movff	dir_sdi@dp+1,get_fat@obj+1
  7876   00A9AA  C0A5  F079         	movff	dir_sdi@clst,get_fat@clst
  7877   00A9AE  C0A6  F07A         	movff	dir_sdi@clst+1,get_fat@clst+1
  7878   00A9B2  C0A7  F07B         	movff	dir_sdi@clst+2,get_fat@clst+2
  7879   00A9B6  C0A8  F07C         	movff	dir_sdi@clst+3,get_fat@clst+3
  7880   00A9BA  ECAF  F055         	call	_get_fat	;wreg free
  7881   00A9BE  C077  F0A5         	movff	?_get_fat,dir_sdi@clst
  7882   00A9C2  C078  F0A6         	movff	?_get_fat+1,dir_sdi@clst+1
  7883   00A9C6  C079  F0A7         	movff	?_get_fat+2,dir_sdi@clst+2
  7884   00A9CA  C07A  F0A8         	movff	?_get_fat+3,dir_sdi@clst+3
  7885   00A9CE                     
  7886                           ;mcc_generated_files/fatfs/ff.c: 1702:    if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
  7887   00A9CE  0100               	movlb	0	; () banked
  7888   00A9D0  29A5               	incf	dir_sdi@clst& (0+255),w,b
  7889   00A9D2  E10A               	bnz	u9521
  7890   00A9D4  29A6               	incf	(dir_sdi@clst+1)& (0+255),w,b
  7891   00A9D6  E108               	bnz	u9521
  7892   00A9D8  29A7               	incf	(dir_sdi@clst+2)& (0+255),w,b
  7893   00A9DA  E106               	bnz	u9521
  7894   00A9DC  29A8               	incf	(dir_sdi@clst+3)& (0+255),w,b
  7895   00A9DE  A4D8               	btfss	status,2,c
  7896   00A9E0  EFF4  F054         	goto	u9521
  7897   00A9E4  EFF6  F054         	goto	u9520
  7898   00A9E8                     u9521:
  7899   00A9E8  EFF9  F054         	goto	l7768
  7900   00A9EC                     u9520:
  7901   00A9EC                     
  7902                           ; BSR set to: 0
  7903   00A9EC  0E01               	movlw	1
  7904   00A9EE  EFAE  F055         	goto	l330
  7905   00A9F2                     l7768:
  7906                           
  7907                           ; BSR set to: 0
  7908                           ;mcc_generated_files/fatfs/ff.c: 1703:    if (clst < 2 || clst >= fs->n_fatent) return F
      +                          R_INT_ERR;
  7909   00A9F2  51A8               	movf	(dir_sdi@clst+3)& (0+255),w,b
  7910   00A9F4  11A7               	iorwf	(dir_sdi@clst+2)& (0+255),w,b
  7911   00A9F6  11A6               	iorwf	(dir_sdi@clst+1)& (0+255),w,b
  7912   00A9F8  E109               	bnz	u9530
  7913   00A9FA  0E02               	movlw	2
  7914   00A9FC  5DA5               	subwf	dir_sdi@clst& (0+255),w,b
  7915   00A9FE  A0D8               	btfss	status,0,c
  7916   00AA00  EF04  F055         	goto	u9531
  7917   00AA04  EF06  F055         	goto	u9530
  7918   00AA08                     u9531:
  7919   00AA08  EF15  F054         	goto	l7734
  7920   00AA0C                     u9530:
  7921   00AA0C                     
  7922                           ; BSR set to: 0
  7923   00AA0C  EE20 F017          	lfsr	2,23
  7924   00AA10  51A9               	movf	dir_sdi@fs& (0+255),w,b
  7925   00AA12  26D9               	addwf	fsr2l,f,c
  7926   00AA14  51AA               	movf	(dir_sdi@fs+1)& (0+255),w,b
  7927   00AA16  22DA               	addwfc	fsr2h,f,c
  7928   00AA18  50DE               	movf	postinc2,w,c
  7929   00AA1A  5DA5               	subwf	dir_sdi@clst& (0+255),w,b
  7930   00AA1C  50DE               	movf	postinc2,w,c
  7931   00AA1E  59A6               	subwfb	(dir_sdi@clst+1)& (0+255),w,b
  7932   00AA20  50DE               	movf	postinc2,w,c
  7933   00AA22  59A7               	subwfb	(dir_sdi@clst+2)& (0+255),w,b
  7934   00AA24  50DE               	movf	postinc2,w,c
  7935   00AA26  59A8               	subwfb	(dir_sdi@clst+3)& (0+255),w,b
  7936   00AA28  A0D8               	btfss	status,0,c
  7937   00AA2A  EF19  F055         	goto	u9541
  7938   00AA2E  EF1B  F055         	goto	u9540
  7939   00AA32                     u9541:
  7940   00AA32  EF1D  F055         	goto	l7776
  7941   00AA36                     u9540:
  7942   00AA36  EF15  F054         	goto	l7734
  7943   00AA3A                     l7776:
  7944                           
  7945                           ; BSR set to: 0
  7946                           ;mcc_generated_files/fatfs/ff.c: 1704:    ofs -= csz;
  7947   00AA3A  51A1               	movf	dir_sdi@csz& (0+255),w,b
  7948   00AA3C  5F93               	subwf	dir_sdi@ofs& (0+255),f,b
  7949   00AA3E  51A2               	movf	(dir_sdi@csz+1)& (0+255),w,b
  7950   00AA40  5B94               	subwfb	(dir_sdi@ofs+1)& (0+255),f,b
  7951   00AA42  51A3               	movf	(dir_sdi@csz+2)& (0+255),w,b
  7952   00AA44  5B95               	subwfb	(dir_sdi@ofs+2)& (0+255),f,b
  7953   00AA46  51A4               	movf	(dir_sdi@csz+3)& (0+255),w,b
  7954   00AA48  5B96               	subwfb	(dir_sdi@ofs+3)& (0+255),f,b
  7955   00AA4A                     l336:
  7956                           
  7957                           ; BSR set to: 0
  7958                           ;mcc_generated_files/fatfs/ff.c: 1700:   while (ofs >= csz) {
  7959   00AA4A  51A1               	movf	dir_sdi@csz& (0+255),w,b
  7960   00AA4C  5D93               	subwf	dir_sdi@ofs& (0+255),w,b
  7961   00AA4E  51A2               	movf	(dir_sdi@csz+1)& (0+255),w,b
  7962   00AA50  5994               	subwfb	(dir_sdi@ofs+1)& (0+255),w,b
  7963   00AA52  51A3               	movf	(dir_sdi@csz+2)& (0+255),w,b
  7964   00AA54  5995               	subwfb	(dir_sdi@ofs+2)& (0+255),w,b
  7965   00AA56  51A4               	movf	(dir_sdi@csz+3)& (0+255),w,b
  7966   00AA58  5996               	subwfb	(dir_sdi@ofs+3)& (0+255),w,b
  7967   00AA5A  B0D8               	btfsc	status,0,c
  7968   00AA5C  EF32  F055         	goto	u9551
  7969   00AA60  EF34  F055         	goto	u9550
  7970   00AA64                     u9551:
  7971   00AA64  EFD1  F054         	goto	l7760
  7972   00AA68                     u9550:
  7973   00AA68                     
  7974                           ; BSR set to: 0
  7975                           ;mcc_generated_files/fatfs/ff.c: 1706:   dp->sect = clst2sect(fs, clst);
  7976   00AA68  C0A9  F00D         	movff	dir_sdi@fs,clst2sect@fs
  7977   00AA6C  C0AA  F00E         	movff	dir_sdi@fs+1,clst2sect@fs+1
  7978   00AA70  C0A5  F00F         	movff	dir_sdi@clst,clst2sect@clst
  7979   00AA74  C0A6  F010         	movff	dir_sdi@clst+1,clst2sect@clst+1
  7980   00AA78  C0A7  F011         	movff	dir_sdi@clst+2,clst2sect@clst+2
  7981   00AA7C  C0A8  F012         	movff	dir_sdi@clst+3,clst2sect@clst+3
  7982   00AA80  ECB7  F044         	call	_clst2sect	;wreg free
  7983   00AA84  0100               	movlb	0	; () banked
  7984   00AA86  EE20 F016          	lfsr	2,22
  7985   00AA8A  5191               	movf	dir_sdi@dp& (0+255),w,b
  7986   00AA8C  26D9               	addwf	fsr2l,f,c
  7987   00AA8E  5192               	movf	(dir_sdi@dp+1)& (0+255),w,b
  7988   00AA90  22DA               	addwfc	fsr2h,f,c
  7989   00AA92  C00D  FFDE         	movff	?_clst2sect,postinc2
  7990   00AA96  C00E  FFDE         	movff	?_clst2sect+1,postinc2
  7991   00AA9A  C00F  FFDE         	movff	?_clst2sect+2,postinc2
  7992   00AA9E  C010  FFDE         	movff	?_clst2sect+3,postinc2
  7993   00AAA2                     l7780:
  7994                           
  7995                           ; BSR set to: 0
  7996                           ;mcc_generated_files/fatfs/ff.c: 1708:  dp->clust = clst;
  7997   00AAA2  EE20 F012          	lfsr	2,18
  7998   00AAA6  5191               	movf	dir_sdi@dp& (0+255),w,b
  7999   00AAA8  26D9               	addwf	fsr2l,f,c
  8000   00AAAA  5192               	movf	(dir_sdi@dp+1)& (0+255),w,b
  8001   00AAAC  22DA               	addwfc	fsr2h,f,c
  8002   00AAAE  C0A5  FFDE         	movff	dir_sdi@clst,postinc2
  8003   00AAB2  C0A6  FFDE         	movff	dir_sdi@clst+1,postinc2
  8004   00AAB6  C0A7  FFDE         	movff	dir_sdi@clst+2,postinc2
  8005   00AABA  C0A8  FFDE         	movff	dir_sdi@clst+3,postinc2
  8006   00AABE                     
  8007                           ; BSR set to: 0
  8008                           ;mcc_generated_files/fatfs/ff.c: 1709:  if (dp->sect == 0) return FR_INT_ERR;
  8009   00AABE  EE20 F016          	lfsr	2,22
  8010   00AAC2  5191               	movf	dir_sdi@dp& (0+255),w,b
  8011   00AAC4  26D9               	addwf	fsr2l,f,c
  8012   00AAC6  5192               	movf	(dir_sdi@dp+1)& (0+255),w,b
  8013   00AAC8  22DA               	addwfc	fsr2h,f,c
  8014   00AACA  50DE               	movf	postinc2,w,c
  8015   00AACC  10DE               	iorwf	postinc2,w,c
  8016   00AACE  10DE               	iorwf	postinc2,w,c
  8017   00AAD0  10DE               	iorwf	postinc2,w,c
  8018   00AAD2  A4D8               	btfss	status,2,c
  8019   00AAD4  EF6E  F055         	goto	u9561
  8020   00AAD8  EF70  F055         	goto	u9560
  8021   00AADC                     u9561:
  8022   00AADC  EF72  F055         	goto	l7788
  8023   00AAE0                     u9560:
  8024   00AAE0  EF15  F054         	goto	l7734
  8025   00AAE4                     l7788:
  8026                           
  8027                           ; BSR set to: 0
  8028                           ;mcc_generated_files/fatfs/ff.c: 1710:  dp->sect += ofs / ((UINT)512);
  8029   00AAE4  C093  F097         	movff	dir_sdi@ofs,??_dir_sdi
  8030   00AAE8  C094  F098         	movff	dir_sdi@ofs+1,??_dir_sdi+1
  8031   00AAEC  C095  F099         	movff	dir_sdi@ofs+2,??_dir_sdi+2
  8032   00AAF0  C096  F09A         	movff	dir_sdi@ofs+3,??_dir_sdi+3
  8033   00AAF4  0E0A               	movlw	10
  8034   00AAF6  EF82  F055         	goto	u9570
  8035   00AAFA                     u9575:
  8036   00AAFA  90D8               	bcf	status,0,c
  8037   00AAFC  339A               	rrcf	(??_dir_sdi+3)& (0+255),f,b
  8038   00AAFE  3399               	rrcf	(??_dir_sdi+2)& (0+255),f,b
  8039   00AB00  3398               	rrcf	(??_dir_sdi+1)& (0+255),f,b
  8040   00AB02  3397               	rrcf	??_dir_sdi& (0+255),f,b
  8041   00AB04                     u9570:
  8042   00AB04  2EE8               	decfsz	wreg,f,c
  8043   00AB06  EF7D  F055         	goto	u9575
  8044   00AB0A  EE20 F016          	lfsr	2,22
  8045   00AB0E  5191               	movf	dir_sdi@dp& (0+255),w,b
  8046   00AB10  26D9               	addwf	fsr2l,f,c
  8047   00AB12  5192               	movf	(dir_sdi@dp+1)& (0+255),w,b
  8048   00AB14  22DA               	addwfc	fsr2h,f,c
  8049   00AB16  5197               	movf	??_dir_sdi& (0+255),w,b
  8050   00AB18  26DE               	addwf	postinc2,f,c
  8051   00AB1A  5198               	movf	(??_dir_sdi+1)& (0+255),w,b
  8052   00AB1C  22DE               	addwfc	postinc2,f,c
  8053   00AB1E  5199               	movf	(??_dir_sdi+2)& (0+255),w,b
  8054   00AB20  22DE               	addwfc	postinc2,f,c
  8055   00AB22  519A               	movf	(??_dir_sdi+3)& (0+255),w,b
  8056   00AB24  22DE               	addwfc	postinc2,f,c
  8057                           
  8058                           ;mcc_generated_files/fatfs/ff.c: 1711:  dp->dir = fs->win + (ofs % ((UINT)512));
  8059   00AB26  0EFF               	movlw	255
  8060   00AB28  1593               	andwf	dir_sdi@ofs& (0+255),w,b
  8061   00AB2A  6F97               	movwf	??_dir_sdi& (0+255),b
  8062   00AB2C  0E01               	movlw	1
  8063   00AB2E  1594               	andwf	(dir_sdi@ofs+1)& (0+255),w,b
  8064   00AB30  6F98               	movwf	(??_dir_sdi+1)& (0+255),b
  8065   00AB32  5197               	movf	??_dir_sdi& (0+255),w,b
  8066   00AB34  25A9               	addwf	dir_sdi@fs& (0+255),w,b
  8067   00AB36  6F99               	movwf	(??_dir_sdi+2)& (0+255),b
  8068   00AB38  5198               	movf	(??_dir_sdi+1)& (0+255),w,b
  8069   00AB3A  21AA               	addwfc	(dir_sdi@fs+1)& (0+255),w,b
  8070   00AB3C  6F9A               	movwf	(??_dir_sdi+3)& (0+255),b
  8071   00AB3E  0E33               	movlw	51
  8072   00AB40  2799               	addwf	(??_dir_sdi+2)& (0+255),f,b
  8073   00AB42  0E00               	movlw	0
  8074   00AB44  239A               	addwfc	(??_dir_sdi+3)& (0+255),f,b
  8075   00AB46  EE20 F01A          	lfsr	2,26
  8076   00AB4A  5191               	movf	dir_sdi@dp& (0+255),w,b
  8077   00AB4C  26D9               	addwf	fsr2l,f,c
  8078   00AB4E  5192               	movf	(dir_sdi@dp+1)& (0+255),w,b
  8079   00AB50  22DA               	addwfc	fsr2h,f,c
  8080   00AB52  C099  FFDE         	movff	??_dir_sdi+2,postinc2
  8081   00AB56  C09A  FFDD         	movff	??_dir_sdi+3,postdec2
  8082   00AB5A                     
  8083                           ; BSR set to: 0
  8084                           ;mcc_generated_files/fatfs/ff.c: 1713:  return FR_OK;
  8085   00AB5A  0E00               	movlw	0
  8086   00AB5C                     l330:
  8087                           
  8088                           ; BSR set to: 0
  8089   00AB5C  0012               	return		;funcret
  8090   00AB5E                     __end_of_dir_sdi:
  8091                           	callstack 0
  8092                           
  8093 ;; *************** function _dir_next *****************
  8094 ;; Defined at:
  8095 ;;		line 1723 in file "mcc_generated_files/fatfs/ff.c"
  8096 ;; Parameters:    Size  Location     Type
  8097 ;;  dp              2   85[BANK0 ] PTR struct .
  8098 ;;		 -> f_rename@djn(40), f_rename@djo(40), f_mkdir@dj(40), f_unlink@sdj(40), 
  8099 ;;		 -> f_unlink@dj(40), f_stat@dj(40), f_chdir@dj(40), f_open@dj(40), 
  8100 ;;  stretch         2   87[BANK0 ] int 
  8101 ;; Auto vars:     Size  Location     Type
  8102 ;;  clst            4  107[BANK0 ] unsigned long 
  8103 ;;  ofs             4  101[BANK0 ] unsigned long 
  8104 ;;  fs              2  105[BANK0 ] PTR struct .
  8105 ;;		 -> FatFs(563), drive(563), NULL(0), 
  8106 ;; Return value:  Size  Location     Type
  8107 ;;                  1    wreg      enum E68
  8108 ;; Registers used:
  8109 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  8110 ;; Tracked objects:
  8111 ;;		On entry : 0/0
  8112 ;;		On exit  : 0/0
  8113 ;;		Unchanged: 0/0
  8114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8115 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8116 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8117 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8118 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8119 ;;Total ram usage:       26 bytes
  8120 ;; Hardware stack levels used: 1
  8121 ;; Hardware stack levels required when called: 9
  8122 ;; This function calls:
  8123 ;;		_clst2sect
  8124 ;;		_create_chain
  8125 ;;		_dir_clear
  8126 ;;		_get_fat
  8127 ;; This function is called by:
  8128 ;;		_dir_alloc
  8129 ;;		_dir_find
  8130 ;;		_dir_read
  8131 ;;		_f_readdir
  8132 ;; This function uses a non-reentrant model
  8133 ;;
  8134                           
  8135                           	psect	text19
  8136   00AF5E                     __ptext19:
  8137                           	callstack 0
  8138   00AF5E                     _dir_next:
  8139                           	callstack 17
  8140   00AF5E                     
  8141                           ;mcc_generated_files/fatfs/ff.c: 1724:  FFDIR* dp,;mcc_generated_files/fatfs/ff.c: 1725:
      +                            int stretch;mcc_generated_files/fatfs/ff.c: 1727: {;mcc_generated_files/fatfs/ff.c: 17
      +                          28:  DWORD ofs, clst;;mcc_generated_files/fatfs/ff.c: 1729:  FATFS *fs = dp->obj.fs;
  8142   00AF5E  C0B5  FFD9         	movff	dir_next@dp,fsr2l
  8143   00AF62  C0B6  FFDA         	movff	dir_next@dp+1,fsr2h
  8144   00AF66  CFDE F0C9          	movff	postinc2,dir_next@fs
  8145   00AF6A  CFDD F0CA          	movff	postdec2,dir_next@fs+1
  8146   00AF6E                     
  8147                           ;mcc_generated_files/fatfs/ff.c: 1732:  ofs = dp->dptr + 32;
  8148   00AF6E  0100               	movlb	0	; () banked
  8149   00AF70  EE20 F00E          	lfsr	2,14
  8150   00AF74  51B5               	movf	dir_next@dp& (0+255),w,b
  8151   00AF76  26D9               	addwf	fsr2l,f,c
  8152   00AF78  51B6               	movf	(dir_next@dp+1)& (0+255),w,b
  8153   00AF7A  22DA               	addwfc	fsr2h,f,c
  8154   00AF7C  CFDE F0B9          	movff	postinc2,??_dir_next
  8155   00AF80  CFDE F0BA          	movff	postinc2,??_dir_next+1
  8156   00AF84  CFDE F0BB          	movff	postinc2,??_dir_next+2
  8157   00AF88  CFDE F0BC          	movff	postinc2,??_dir_next+3
  8158   00AF8C  0E20               	movlw	32
  8159   00AF8E  25B9               	addwf	??_dir_next& (0+255),w,b
  8160   00AF90  6FC5               	movwf	dir_next@ofs& (0+255),b
  8161   00AF92  0E00               	movlw	0
  8162   00AF94  21BA               	addwfc	(??_dir_next+1)& (0+255),w,b
  8163   00AF96  6FC6               	movwf	(dir_next@ofs+1)& (0+255),b
  8164   00AF98  0E00               	movlw	0
  8165   00AF9A  21BB               	addwfc	(??_dir_next+2)& (0+255),w,b
  8166   00AF9C  6FC7               	movwf	(dir_next@ofs+2)& (0+255),b
  8167   00AF9E  0E00               	movlw	0
  8168   00AFA0  21BC               	addwfc	(??_dir_next+3)& (0+255),w,b
  8169   00AFA2  6FC8               	movwf	(dir_next@ofs+3)& (0+255),b
  8170   00AFA4                     
  8171                           ; BSR set to: 0
  8172                           ;mcc_generated_files/fatfs/ff.c: 1733:  if (dp->sect == 0 || ofs >= (DWORD)((0 && fs->fs
      +                          _type == 4) ? 0x10000000 : 0x200000)) return FR_NO_FILE;
  8173   00AFA4  EE20 F016          	lfsr	2,22
  8174   00AFA8  51B5               	movf	dir_next@dp& (0+255),w,b
  8175   00AFAA  26D9               	addwf	fsr2l,f,c
  8176   00AFAC  51B6               	movf	(dir_next@dp+1)& (0+255),w,b
  8177   00AFAE  22DA               	addwfc	fsr2h,f,c
  8178   00AFB0  50DE               	movf	postinc2,w,c
  8179   00AFB2  10DE               	iorwf	postinc2,w,c
  8180   00AFB4  10DE               	iorwf	postinc2,w,c
  8181   00AFB6  10DE               	iorwf	postinc2,w,c
  8182   00AFB8  B4D8               	btfsc	status,2,c
  8183   00AFBA  EFE1  F057         	goto	u9581
  8184   00AFBE  EFE3  F057         	goto	u9580
  8185   00AFC2                     u9581:
  8186   00AFC2  EFEE  F057         	goto	l7810
  8187   00AFC6                     u9580:
  8188   00AFC6                     
  8189                           ; BSR set to: 0
  8190   00AFC6  51C8               	movf	(dir_next@ofs+3)& (0+255),w,b
  8191   00AFC8  E109               	bnz	u9590
  8192   00AFCA  0E20               	movlw	32
  8193   00AFCC  5DC7               	subwf	(dir_next@ofs+2)& (0+255),w,b
  8194   00AFCE  A0D8               	btfss	status,0,c
  8195   00AFD0  EFEC  F057         	goto	u9591
  8196   00AFD4  EFEE  F057         	goto	u9590
  8197   00AFD8                     u9591:
  8198   00AFD8  EFF1  F057         	goto	l7814
  8199   00AFDC                     u9590:
  8200   00AFDC                     l7810:
  8201                           
  8202                           ; BSR set to: 0
  8203   00AFDC  0E04               	movlw	4
  8204   00AFDE  EFB9  F059         	goto	l355
  8205   00AFE2                     l7814:
  8206                           
  8207                           ; BSR set to: 0
  8208                           ;mcc_generated_files/fatfs/ff.c: 1735:  if (ofs % ((UINT)512) == 0) {
  8209   00AFE2  0EFF               	movlw	255
  8210   00AFE4  15C5               	andwf	dir_next@ofs& (0+255),w,b
  8211   00AFE6  6FB9               	movwf	??_dir_next& (0+255),b
  8212   00AFE8  0E01               	movlw	1
  8213   00AFEA  15C6               	andwf	(dir_next@ofs+1)& (0+255),w,b
  8214   00AFEC  6FBA               	movwf	(??_dir_next+1)& (0+255),b
  8215   00AFEE  0E00               	movlw	0
  8216   00AFF0  15C7               	andwf	(dir_next@ofs+2)& (0+255),w,b
  8217   00AFF2  6FBB               	movwf	(??_dir_next+2)& (0+255),b
  8218   00AFF4  0E00               	movlw	0
  8219   00AFF6  15C8               	andwf	(dir_next@ofs+3)& (0+255),w,b
  8220   00AFF8  6FBC               	movwf	(??_dir_next+3)& (0+255),b
  8221   00AFFA  51B9               	movf	??_dir_next& (0+255),w,b
  8222   00AFFC  11BA               	iorwf	(??_dir_next+1)& (0+255),w,b
  8223   00AFFE  11BB               	iorwf	(??_dir_next+2)& (0+255),w,b
  8224   00B000  11BC               	iorwf	(??_dir_next+3)& (0+255),w,b
  8225   00B002  A4D8               	btfss	status,2,c
  8226   00B004  EF06  F058         	goto	u9601
  8227   00B008  EF08  F058         	goto	u9600
  8228   00B00C                     u9601:
  8229   00B00C  EF90  F059         	goto	l7882
  8230   00B010                     u9600:
  8231   00B010                     
  8232                           ; BSR set to: 0
  8233                           ;mcc_generated_files/fatfs/ff.c: 1736:   dp->sect++;
  8234   00B010  EE20 F016          	lfsr	2,22
  8235   00B014  51B5               	movf	dir_next@dp& (0+255),w,b
  8236   00B016  26D9               	addwf	fsr2l,f,c
  8237   00B018  51B6               	movf	(dir_next@dp+1)& (0+255),w,b
  8238   00B01A  22DA               	addwfc	fsr2h,f,c
  8239   00B01C  2ADE               	incf	postinc2,f,c
  8240   00B01E  0E00               	movlw	0
  8241   00B020  22DE               	addwfc	postinc2,f,c
  8242   00B022  22DE               	addwfc	postinc2,f,c
  8243   00B024  22DE               	addwfc	postinc2,f,c
  8244                           
  8245                           ;mcc_generated_files/fatfs/ff.c: 1738:   if (dp->clust == 0) {
  8246   00B026  EE20 F012          	lfsr	2,18
  8247   00B02A  51B5               	movf	dir_next@dp& (0+255),w,b
  8248   00B02C  26D9               	addwf	fsr2l,f,c
  8249   00B02E  51B6               	movf	(dir_next@dp+1)& (0+255),w,b
  8250   00B030  22DA               	addwfc	fsr2h,f,c
  8251   00B032  50DE               	movf	postinc2,w,c
  8252   00B034  10DE               	iorwf	postinc2,w,c
  8253   00B036  10DE               	iorwf	postinc2,w,c
  8254   00B038  10DE               	iorwf	postinc2,w,c
  8255   00B03A  A4D8               	btfss	status,2,c
  8256   00B03C  EF22  F058         	goto	u9611
  8257   00B040  EF24  F058         	goto	u9610
  8258   00B044                     u9611:
  8259   00B044  EF62  F058         	goto	l7826
  8260   00B048                     u9610:
  8261   00B048                     
  8262                           ; BSR set to: 0
  8263                           ;mcc_generated_files/fatfs/ff.c: 1739:    if (ofs / 32 >= fs->n_rootdir) {
  8264   00B048  EE20 F007          	lfsr	2,7
  8265   00B04C  51C9               	movf	dir_next@fs& (0+255),w,b
  8266   00B04E  26D9               	addwf	fsr2l,f,c
  8267   00B050  51CA               	movf	(dir_next@fs+1)& (0+255),w,b
  8268   00B052  22DA               	addwfc	fsr2h,f,c
  8269   00B054  CFDE F0B9          	movff	postinc2,??_dir_next
  8270   00B058  CFDD F0BA          	movff	postdec2,??_dir_next+1
  8271   00B05C  51B9               	movf	??_dir_next& (0+255),w,b
  8272   00B05E  6FBB               	movwf	(??_dir_next+2)& (0+255),b
  8273   00B060  51BA               	movf	(??_dir_next+1)& (0+255),w,b
  8274   00B062  6FBC               	movwf	(??_dir_next+3)& (0+255),b
  8275   00B064  6BBD               	clrf	(??_dir_next+4)& (0+255),b
  8276   00B066  6BBE               	clrf	(??_dir_next+5)& (0+255),b
  8277   00B068  C0C5  F0BF         	movff	dir_next@ofs,??_dir_next+6
  8278   00B06C  C0C6  F0C0         	movff	dir_next@ofs+1,??_dir_next+7
  8279   00B070  C0C7  F0C1         	movff	dir_next@ofs+2,??_dir_next+8
  8280   00B074  C0C8  F0C2         	movff	dir_next@ofs+3,??_dir_next+9
  8281   00B078  0E06               	movlw	6
  8282   00B07A  EF44  F058         	goto	u9620
  8283   00B07E                     u9625:
  8284   00B07E  90D8               	bcf	status,0,c
  8285   00B080  33C2               	rrcf	(??_dir_next+9)& (0+255),f,b
  8286   00B082  33C1               	rrcf	(??_dir_next+8)& (0+255),f,b
  8287   00B084  33C0               	rrcf	(??_dir_next+7)& (0+255),f,b
  8288   00B086  33BF               	rrcf	(??_dir_next+6)& (0+255),f,b
  8289   00B088                     u9620:
  8290   00B088  2EE8               	decfsz	wreg,f,c
  8291   00B08A  EF3F  F058         	goto	u9625
  8292   00B08E  51BB               	movf	(??_dir_next+2)& (0+255),w,b
  8293   00B090  5DBF               	subwf	(??_dir_next+6)& (0+255),w,b
  8294   00B092  51BC               	movf	(??_dir_next+3)& (0+255),w,b
  8295   00B094  59C0               	subwfb	(??_dir_next+7)& (0+255),w,b
  8296   00B096  51BD               	movf	(??_dir_next+4)& (0+255),w,b
  8297   00B098  59C1               	subwfb	(??_dir_next+8)& (0+255),w,b
  8298   00B09A  51BE               	movf	(??_dir_next+5)& (0+255),w,b
  8299   00B09C  59C2               	subwfb	(??_dir_next+9)& (0+255),w,b
  8300   00B09E  A0D8               	btfss	status,0,c
  8301   00B0A0  EF54  F058         	goto	u9631
  8302   00B0A4  EF56  F058         	goto	u9630
  8303   00B0A8                     u9631:
  8304   00B0A8  EF90  F059         	goto	l7882
  8305   00B0AC                     u9630:
  8306   00B0AC                     
  8307                           ; BSR set to: 0
  8308                           ;mcc_generated_files/fatfs/ff.c: 1740:     dp->sect = 0; return FR_NO_FILE;
  8309   00B0AC  EE20 F016          	lfsr	2,22
  8310   00B0B0  51B5               	movf	dir_next@dp& (0+255),w,b
  8311   00B0B2  26D9               	addwf	fsr2l,f,c
  8312   00B0B4  51B6               	movf	(dir_next@dp+1)& (0+255),w,b
  8313   00B0B6  22DA               	addwfc	fsr2h,f,c
  8314   00B0B8  6ADE               	clrf	postinc2,c
  8315   00B0BA  6ADE               	clrf	postinc2,c
  8316   00B0BC  6ADE               	clrf	postinc2,c
  8317   00B0BE  6ADD               	clrf	postdec2,c
  8318   00B0C0  EFEE  F057         	goto	l7810
  8319   00B0C4                     l7826:
  8320                           
  8321                           ; BSR set to: 0
  8322                           ;mcc_generated_files/fatfs/ff.c: 1744:    if ((ofs / ((UINT)512) & (fs->csize - 1)) == 0
      +                          ) {
  8323   00B0C4  EE20 F009          	lfsr	2,9
  8324   00B0C8  51C9               	movf	dir_next@fs& (0+255),w,b
  8325   00B0CA  26D9               	addwf	fsr2l,f,c
  8326   00B0CC  51CA               	movf	(dir_next@fs+1)& (0+255),w,b
  8327   00B0CE  22DA               	addwfc	fsr2h,f,c
  8328   00B0D0  CFDE F0B9          	movff	postinc2,??_dir_next
  8329   00B0D4  CFDD F0BA          	movff	postdec2,??_dir_next+1
  8330   00B0D8  0EFF               	movlw	255
  8331   00B0DA  25B9               	addwf	??_dir_next& (0+255),w,b
  8332   00B0DC  6FBB               	movwf	(??_dir_next+2)& (0+255),b
  8333   00B0DE  0EFF               	movlw	255
  8334   00B0E0  21BA               	addwfc	(??_dir_next+1)& (0+255),w,b
  8335   00B0E2  6FBC               	movwf	(??_dir_next+3)& (0+255),b
  8336   00B0E4  C0C5  F0BD         	movff	dir_next@ofs,??_dir_next+4
  8337   00B0E8  C0C6  F0BE         	movff	dir_next@ofs+1,??_dir_next+5
  8338   00B0EC  C0C7  F0BF         	movff	dir_next@ofs+2,??_dir_next+6
  8339   00B0F0  C0C8  F0C0         	movff	dir_next@ofs+3,??_dir_next+7
  8340   00B0F4  0E0A               	movlw	10
  8341   00B0F6  EF82  F058         	goto	u9640
  8342   00B0FA                     u9645:
  8343   00B0FA  90D8               	bcf	status,0,c
  8344   00B0FC  33C0               	rrcf	(??_dir_next+7)& (0+255),f,b
  8345   00B0FE  33BF               	rrcf	(??_dir_next+6)& (0+255),f,b
  8346   00B100  33BE               	rrcf	(??_dir_next+5)& (0+255),f,b
  8347   00B102  33BD               	rrcf	(??_dir_next+4)& (0+255),f,b
  8348   00B104                     u9640:
  8349   00B104  2EE8               	decfsz	wreg,f,c
  8350   00B106  EF7D  F058         	goto	u9645
  8351   00B10A  51BB               	movf	(??_dir_next+2)& (0+255),w,b
  8352   00B10C  15BD               	andwf	(??_dir_next+4)& (0+255),w,b
  8353   00B10E  6FC1               	movwf	(??_dir_next+8)& (0+255),b
  8354   00B110  51BC               	movf	(??_dir_next+3)& (0+255),w,b
  8355   00B112  15BE               	andwf	(??_dir_next+5)& (0+255),w,b
  8356   00B114  6FC2               	movwf	(??_dir_next+9)& (0+255),b
  8357   00B116  0E00               	movlw	0
  8358   00B118  15BF               	andwf	(??_dir_next+6)& (0+255),w,b
  8359   00B11A  6FC3               	movwf	(??_dir_next+10)& (0+255),b
  8360   00B11C  0E00               	movlw	0
  8361   00B11E  15C0               	andwf	(??_dir_next+7)& (0+255),w,b
  8362   00B120  6FC4               	movwf	(??_dir_next+11)& (0+255),b
  8363   00B122  51C1               	movf	(??_dir_next+8)& (0+255),w,b
  8364   00B124  11C2               	iorwf	(??_dir_next+9)& (0+255),w,b
  8365   00B126  11C3               	iorwf	(??_dir_next+10)& (0+255),w,b
  8366   00B128  11C4               	iorwf	(??_dir_next+11)& (0+255),w,b
  8367   00B12A  A4D8               	btfss	status,2,c
  8368   00B12C  EF9A  F058         	goto	u9651
  8369   00B130  EF9C  F058         	goto	u9650
  8370   00B134                     u9651:
  8371   00B134  EF90  F059         	goto	l7882
  8372   00B138                     u9650:
  8373   00B138                     
  8374                           ; BSR set to: 0
  8375                           ;mcc_generated_files/fatfs/ff.c: 1745:     clst = get_fat(&dp->obj, dp->clust);
  8376   00B138  C0B5  F077         	movff	dir_next@dp,get_fat@obj
  8377   00B13C  C0B6  F078         	movff	dir_next@dp+1,get_fat@obj+1
  8378   00B140  EE20 F012          	lfsr	2,18
  8379   00B144  51B5               	movf	dir_next@dp& (0+255),w,b
  8380   00B146  26D9               	addwf	fsr2l,f,c
  8381   00B148  51B6               	movf	(dir_next@dp+1)& (0+255),w,b
  8382   00B14A  22DA               	addwfc	fsr2h,f,c
  8383   00B14C  CFDE F079          	movff	postinc2,get_fat@clst
  8384   00B150  CFDE F07A          	movff	postinc2,get_fat@clst+1
  8385   00B154  CFDE F07B          	movff	postinc2,get_fat@clst+2
  8386   00B158  CFDE F07C          	movff	postinc2,get_fat@clst+3
  8387   00B15C  ECAF  F055         	call	_get_fat	;wreg free
  8388   00B160  C077  F0CB         	movff	?_get_fat,dir_next@clst
  8389   00B164  C078  F0CC         	movff	?_get_fat+1,dir_next@clst+1
  8390   00B168  C079  F0CD         	movff	?_get_fat+2,dir_next@clst+2
  8391   00B16C  C07A  F0CE         	movff	?_get_fat+3,dir_next@clst+3
  8392   00B170                     
  8393                           ;mcc_generated_files/fatfs/ff.c: 1746:     if (clst <= 1) return FR_INT_ERR;
  8394   00B170  0100               	movlb	0	; () banked
  8395   00B172  51CE               	movf	(dir_next@clst+3)& (0+255),w,b
  8396   00B174  11CD               	iorwf	(dir_next@clst+2)& (0+255),w,b
  8397   00B176  11CC               	iorwf	(dir_next@clst+1)& (0+255),w,b
  8398   00B178  E107               	bnz	u9661
  8399   00B17A  0E02               	movlw	2
  8400   00B17C  5DCB               	subwf	dir_next@clst& (0+255),w,b
  8401   00B17E  B0D8               	btfsc	status,0,c
  8402   00B180  EFC4  F058         	goto	u9661
  8403   00B184  EFC6  F058         	goto	u9660
  8404   00B188                     u9661:
  8405   00B188  EFC9  F058         	goto	l7836
  8406   00B18C                     u9660:
  8407   00B18C                     l7832:
  8408                           
  8409                           ; BSR set to: 0
  8410   00B18C  0E02               	movlw	2
  8411   00B18E  EFB9  F059         	goto	l355
  8412   00B192                     l7836:
  8413                           
  8414                           ; BSR set to: 0
  8415                           ;mcc_generated_files/fatfs/ff.c: 1747:     if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
  8416   00B192  29CB               	incf	dir_next@clst& (0+255),w,b
  8417   00B194  E10A               	bnz	u9671
  8418   00B196  29CC               	incf	(dir_next@clst+1)& (0+255),w,b
  8419   00B198  E108               	bnz	u9671
  8420   00B19A  29CD               	incf	(dir_next@clst+2)& (0+255),w,b
  8421   00B19C  E106               	bnz	u9671
  8422   00B19E  29CE               	incf	(dir_next@clst+3)& (0+255),w,b
  8423   00B1A0  A4D8               	btfss	status,2,c
  8424   00B1A2  EFD5  F058         	goto	u9671
  8425   00B1A6  EFD7  F058         	goto	u9670
  8426   00B1AA                     u9671:
  8427   00B1AA  EFDA  F058         	goto	l7842
  8428   00B1AE                     u9670:
  8429   00B1AE                     l7838:
  8430   00B1AE  0E01               	movlw	1
  8431   00B1B0  EFB9  F059         	goto	l355
  8432   00B1B4                     l7842:
  8433                           
  8434                           ; BSR set to: 0
  8435                           ;mcc_generated_files/fatfs/ff.c: 1748:     if (clst >= fs->n_fatent) {
  8436   00B1B4  EE20 F017          	lfsr	2,23
  8437   00B1B8  51C9               	movf	dir_next@fs& (0+255),w,b
  8438   00B1BA  26D9               	addwf	fsr2l,f,c
  8439   00B1BC  51CA               	movf	(dir_next@fs+1)& (0+255),w,b
  8440   00B1BE  22DA               	addwfc	fsr2h,f,c
  8441   00B1C0  50DE               	movf	postinc2,w,c
  8442   00B1C2  5DCB               	subwf	dir_next@clst& (0+255),w,b
  8443   00B1C4  50DE               	movf	postinc2,w,c
  8444   00B1C6  59CC               	subwfb	(dir_next@clst+1)& (0+255),w,b
  8445   00B1C8  50DE               	movf	postinc2,w,c
  8446   00B1CA  59CD               	subwfb	(dir_next@clst+2)& (0+255),w,b
  8447   00B1CC  50DE               	movf	postinc2,w,c
  8448   00B1CE  59CE               	subwfb	(dir_next@clst+3)& (0+255),w,b
  8449   00B1D0  A0D8               	btfss	status,0,c
  8450   00B1D2  EFED  F058         	goto	u9681
  8451   00B1D6  EFEF  F058         	goto	u9680
  8452   00B1DA                     u9681:
  8453   00B1DA  EF64  F059         	goto	l363
  8454   00B1DE                     u9680:
  8455   00B1DE                     
  8456                           ; BSR set to: 0
  8457                           ;mcc_generated_files/fatfs/ff.c: 1750:      if (!stretch) {
  8458   00B1DE  51B7               	movf	dir_next@stretch& (0+255),w,b
  8459   00B1E0  11B8               	iorwf	(dir_next@stretch+1)& (0+255),w,b
  8460   00B1E2  A4D8               	btfss	status,2,c
  8461   00B1E4  EFF6  F058         	goto	u9691
  8462   00B1E8  EFF8  F058         	goto	u9690
  8463   00B1EC                     u9691:
  8464   00B1EC  EF04  F059         	goto	l7852
  8465   00B1F0                     u9690:
  8466   00B1F0                     
  8467                           ; BSR set to: 0
  8468                           ;mcc_generated_files/fatfs/ff.c: 1751:       dp->sect = 0; return FR_NO_FILE;
  8469   00B1F0  EE20 F016          	lfsr	2,22
  8470   00B1F4  51B5               	movf	dir_next@dp& (0+255),w,b
  8471   00B1F6  26D9               	addwf	fsr2l,f,c
  8472   00B1F8  51B6               	movf	(dir_next@dp+1)& (0+255),w,b
  8473   00B1FA  22DA               	addwfc	fsr2h,f,c
  8474   00B1FC  6ADE               	clrf	postinc2,c
  8475   00B1FE  6ADE               	clrf	postinc2,c
  8476   00B200  6ADE               	clrf	postinc2,c
  8477   00B202  6ADD               	clrf	postdec2,c
  8478   00B204  EFEE  F057         	goto	l7810
  8479   00B208                     l7852:
  8480                           
  8481                           ; BSR set to: 0
  8482                           ;mcc_generated_files/fatfs/ff.c: 1753:      clst = create_chain(&dp->obj, dp->clust);
  8483   00B208  C0B5  F098         	movff	dir_next@dp,create_chain@obj
  8484   00B20C  C0B6  F099         	movff	dir_next@dp+1,create_chain@obj+1
  8485   00B210  EE20 F012          	lfsr	2,18
  8486   00B214  51B5               	movf	dir_next@dp& (0+255),w,b
  8487   00B216  26D9               	addwf	fsr2l,f,c
  8488   00B218  51B6               	movf	(dir_next@dp+1)& (0+255),w,b
  8489   00B21A  22DA               	addwfc	fsr2h,f,c
  8490   00B21C  CFDE F09A          	movff	postinc2,create_chain@clst
  8491   00B220  CFDE F09B          	movff	postinc2,create_chain@clst+1
  8492   00B224  CFDE F09C          	movff	postinc2,create_chain@clst+2
  8493   00B228  CFDE F09D          	movff	postinc2,create_chain@clst+3
  8494   00B22C  ECDE  F062         	call	_create_chain	;wreg free
  8495   00B230  C098  F0CB         	movff	?_create_chain,dir_next@clst
  8496   00B234  C099  F0CC         	movff	?_create_chain+1,dir_next@clst+1
  8497   00B238  C09A  F0CD         	movff	?_create_chain+2,dir_next@clst+2
  8498   00B23C  C09B  F0CE         	movff	?_create_chain+3,dir_next@clst+3
  8499   00B240                     
  8500                           ;mcc_generated_files/fatfs/ff.c: 1754:      if (clst == 0) return FR_DENIED;
  8501   00B240  0100               	movlb	0	; () banked
  8502   00B242  51CB               	movf	dir_next@clst& (0+255),w,b
  8503   00B244  11CC               	iorwf	(dir_next@clst+1)& (0+255),w,b
  8504   00B246  11CD               	iorwf	(dir_next@clst+2)& (0+255),w,b
  8505   00B248  11CE               	iorwf	(dir_next@clst+3)& (0+255),w,b
  8506   00B24A  A4D8               	btfss	status,2,c
  8507   00B24C  EF2A  F059         	goto	u9701
  8508   00B250  EF2C  F059         	goto	u9700
  8509   00B254                     u9701:
  8510   00B254  EF2F  F059         	goto	l7860
  8511   00B258                     u9700:
  8512   00B258                     
  8513                           ; BSR set to: 0
  8514   00B258  0E07               	movlw	7
  8515   00B25A  EFB9  F059         	goto	l355
  8516   00B25E                     l7860:
  8517                           
  8518                           ; BSR set to: 0
  8519                           ;mcc_generated_files/fatfs/ff.c: 1755:      if (clst == 1) return FR_INT_ERR;
  8520   00B25E  05CB               	decf	dir_next@clst& (0+255),w,b
  8521   00B260  11CC               	iorwf	(dir_next@clst+1)& (0+255),w,b
  8522   00B262  11CD               	iorwf	(dir_next@clst+2)& (0+255),w,b
  8523   00B264  11CE               	iorwf	(dir_next@clst+3)& (0+255),w,b
  8524   00B266  A4D8               	btfss	status,2,c
  8525   00B268  EF38  F059         	goto	u9711
  8526   00B26C  EF3A  F059         	goto	u9710
  8527   00B270                     u9711:
  8528   00B270  EF3C  F059         	goto	l7866
  8529   00B274                     u9710:
  8530   00B274  EFC6  F058         	goto	l7832
  8531   00B278                     l7866:
  8532                           
  8533                           ; BSR set to: 0
  8534                           ;mcc_generated_files/fatfs/ff.c: 1756:      if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
  8535   00B278  29CB               	incf	dir_next@clst& (0+255),w,b
  8536   00B27A  E10A               	bnz	u9721
  8537   00B27C  29CC               	incf	(dir_next@clst+1)& (0+255),w,b
  8538   00B27E  E108               	bnz	u9721
  8539   00B280  29CD               	incf	(dir_next@clst+2)& (0+255),w,b
  8540   00B282  E106               	bnz	u9721
  8541   00B284  29CE               	incf	(dir_next@clst+3)& (0+255),w,b
  8542   00B286  A4D8               	btfss	status,2,c
  8543   00B288  EF48  F059         	goto	u9721
  8544   00B28C  EF4A  F059         	goto	u9720
  8545   00B290                     u9721:
  8546   00B290  EF4C  F059         	goto	l7872
  8547   00B294                     u9720:
  8548   00B294  EFD7  F058         	goto	l7838
  8549   00B298                     l7872:
  8550                           
  8551                           ; BSR set to: 0
  8552                           ;mcc_generated_files/fatfs/ff.c: 1757:      if (dir_clear(fs, clst) != FR_OK) return FR_
      +                          DISK_ERR;
  8553   00B298  C0C9  F070         	movff	dir_next@fs,dir_clear@fs
  8554   00B29C  C0CA  F071         	movff	dir_next@fs+1,dir_clear@fs+1
  8555   00B2A0  C0CB  F072         	movff	dir_next@clst,dir_clear@clst
  8556   00B2A4  C0CC  F073         	movff	dir_next@clst+1,dir_clear@clst+1
  8557   00B2A8  C0CD  F074         	movff	dir_next@clst+2,dir_clear@clst+2
  8558   00B2AC  C0CE  F075         	movff	dir_next@clst+3,dir_clear@clst+3
  8559   00B2B0  ECB6  F04A         	call	_dir_clear	;wreg free
  8560   00B2B4  0900               	iorlw	0
  8561   00B2B6  B4D8               	btfsc	status,2,c
  8562   00B2B8  EF60  F059         	goto	u9731
  8563   00B2BC  EF62  F059         	goto	u9730
  8564   00B2C0                     u9731:
  8565   00B2C0  EF64  F059         	goto	l363
  8566   00B2C4                     u9730:
  8567   00B2C4  EFD7  F058         	goto	l7838
  8568   00B2C8                     l363:
  8569                           
  8570                           ;mcc_generated_files/fatfs/ff.c: 1764:     dp->clust = clst;
  8571   00B2C8  0100               	movlb	0	; () banked
  8572   00B2CA  EE20 F012          	lfsr	2,18
  8573   00B2CE  51B5               	movf	dir_next@dp& (0+255),w,b
  8574   00B2D0  26D9               	addwf	fsr2l,f,c
  8575   00B2D2  51B6               	movf	(dir_next@dp+1)& (0+255),w,b
  8576   00B2D4  22DA               	addwfc	fsr2h,f,c
  8577   00B2D6  C0CB  FFDE         	movff	dir_next@clst,postinc2
  8578   00B2DA  C0CC  FFDE         	movff	dir_next@clst+1,postinc2
  8579   00B2DE  C0CD  FFDE         	movff	dir_next@clst+2,postinc2
  8580   00B2E2  C0CE  FFDE         	movff	dir_next@clst+3,postinc2
  8581   00B2E6                     
  8582                           ; BSR set to: 0
  8583                           ;mcc_generated_files/fatfs/ff.c: 1765:     dp->sect = clst2sect(fs, clst);
  8584   00B2E6  C0C9  F00D         	movff	dir_next@fs,clst2sect@fs
  8585   00B2EA  C0CA  F00E         	movff	dir_next@fs+1,clst2sect@fs+1
  8586   00B2EE  C0CB  F00F         	movff	dir_next@clst,clst2sect@clst
  8587   00B2F2  C0CC  F010         	movff	dir_next@clst+1,clst2sect@clst+1
  8588   00B2F6  C0CD  F011         	movff	dir_next@clst+2,clst2sect@clst+2
  8589   00B2FA  C0CE  F012         	movff	dir_next@clst+3,clst2sect@clst+3
  8590   00B2FE  ECB7  F044         	call	_clst2sect	;wreg free
  8591   00B302  0100               	movlb	0	; () banked
  8592   00B304  EE20 F016          	lfsr	2,22
  8593   00B308  51B5               	movf	dir_next@dp& (0+255),w,b
  8594   00B30A  26D9               	addwf	fsr2l,f,c
  8595   00B30C  51B6               	movf	(dir_next@dp+1)& (0+255),w,b
  8596   00B30E  22DA               	addwfc	fsr2h,f,c
  8597   00B310  C00D  FFDE         	movff	?_clst2sect,postinc2
  8598   00B314  C00E  FFDE         	movff	?_clst2sect+1,postinc2
  8599   00B318  C00F  FFDE         	movff	?_clst2sect+2,postinc2
  8600   00B31C  C010  FFDE         	movff	?_clst2sect+3,postinc2
  8601   00B320                     l7882:
  8602                           
  8603                           ; BSR set to: 0
  8604                           ;mcc_generated_files/fatfs/ff.c: 1769:  dp->dptr = ofs;
  8605   00B320  EE20 F00E          	lfsr	2,14
  8606   00B324  51B5               	movf	dir_next@dp& (0+255),w,b
  8607   00B326  26D9               	addwf	fsr2l,f,c
  8608   00B328  51B6               	movf	(dir_next@dp+1)& (0+255),w,b
  8609   00B32A  22DA               	addwfc	fsr2h,f,c
  8610   00B32C  C0C5  FFDE         	movff	dir_next@ofs,postinc2
  8611   00B330  C0C6  FFDE         	movff	dir_next@ofs+1,postinc2
  8612   00B334  C0C7  FFDE         	movff	dir_next@ofs+2,postinc2
  8613   00B338  C0C8  FFDE         	movff	dir_next@ofs+3,postinc2
  8614   00B33C                     
  8615                           ; BSR set to: 0
  8616                           ;mcc_generated_files/fatfs/ff.c: 1770:  dp->dir = fs->win + ofs % ((UINT)512);
  8617   00B33C  0EFF               	movlw	255
  8618   00B33E  15C5               	andwf	dir_next@ofs& (0+255),w,b
  8619   00B340  6FB9               	movwf	??_dir_next& (0+255),b
  8620   00B342  0E01               	movlw	1
  8621   00B344  15C6               	andwf	(dir_next@ofs+1)& (0+255),w,b
  8622   00B346  6FBA               	movwf	(??_dir_next+1)& (0+255),b
  8623   00B348  51B9               	movf	??_dir_next& (0+255),w,b
  8624   00B34A  25C9               	addwf	dir_next@fs& (0+255),w,b
  8625   00B34C  6FBB               	movwf	(??_dir_next+2)& (0+255),b
  8626   00B34E  51BA               	movf	(??_dir_next+1)& (0+255),w,b
  8627   00B350  21CA               	addwfc	(dir_next@fs+1)& (0+255),w,b
  8628   00B352  6FBC               	movwf	(??_dir_next+3)& (0+255),b
  8629   00B354  0E33               	movlw	51
  8630   00B356  27BB               	addwf	(??_dir_next+2)& (0+255),f,b
  8631   00B358  0E00               	movlw	0
  8632   00B35A  23BC               	addwfc	(??_dir_next+3)& (0+255),f,b
  8633   00B35C  EE20 F01A          	lfsr	2,26
  8634   00B360  51B5               	movf	dir_next@dp& (0+255),w,b
  8635   00B362  26D9               	addwf	fsr2l,f,c
  8636   00B364  51B6               	movf	(dir_next@dp+1)& (0+255),w,b
  8637   00B366  22DA               	addwfc	fsr2h,f,c
  8638   00B368  C0BB  FFDE         	movff	??_dir_next+2,postinc2
  8639   00B36C  C0BC  FFDD         	movff	??_dir_next+3,postdec2
  8640   00B370                     
  8641                           ; BSR set to: 0
  8642                           ;mcc_generated_files/fatfs/ff.c: 1772:  return FR_OK;
  8643   00B370  0E00               	movlw	0
  8644   00B372                     l355:
  8645   00B372  0012               	return		;funcret
  8646   00B374                     __end_of_dir_next:
  8647                           	callstack 0
  8648                           
  8649 ;; *************** function _dir_clear *****************
  8650 ;; Defined at:
  8651 ;;		line 1636 in file "mcc_generated_files/fatfs/ff.c"
  8652 ;; Parameters:    Size  Location     Type
  8653 ;;  fs              2   16[BANK0 ] PTR struct .
  8654 ;;		 -> FatFs(563), drive(563), NULL(0), 
  8655 ;;  clst            4   18[BANK0 ] unsigned long 
  8656 ;; Auto vars:     Size  Location     Type
  8657 ;;  sect            4   24[BANK0 ] unsigned long 
  8658 ;;  n               2   30[BANK0 ] unsigned int 
  8659 ;;  szb             2   28[BANK0 ] unsigned int 
  8660 ;;  ibuf            2   22[BANK0 ] PTR unsigned char 
  8661 ;;		 -> drive.win(512), FatFs.win(512), FatFs(563), drive(563), 
  8662 ;;		 -> NULL(0), 
  8663 ;; Return value:  Size  Location     Type
  8664 ;;                  1    wreg      enum E68
  8665 ;; Registers used:
  8666 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  8667 ;; Tracked objects:
  8668 ;;		On entry : 0/0
  8669 ;;		On exit  : 0/0
  8670 ;;		Unchanged: 0/0
  8671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8672 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8673 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8674 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8675 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8676 ;;Total ram usage:       18 bytes
  8677 ;; Hardware stack levels used: 1
  8678 ;; Hardware stack levels required when called: 6
  8679 ;; This function calls:
  8680 ;;		_clst2sect
  8681 ;;		_disk_write
  8682 ;;		_mem_set
  8683 ;;		_sync_window
  8684 ;; This function is called by:
  8685 ;;		_dir_next
  8686 ;;		_f_mkdir
  8687 ;; This function uses a non-reentrant model
  8688 ;;
  8689                           
  8690                           	psect	text20
  8691   00956C                     __ptext20:
  8692                           	callstack 0
  8693   00956C                     _dir_clear:
  8694                           	callstack 19
  8695   00956C                     
  8696                           ;mcc_generated_files/fatfs/ff.c: 1637:  FATFS *fs,;mcc_generated_files/fatfs/ff.c: 1638:
      +                            DWORD clst;mcc_generated_files/fatfs/ff.c: 1640: {;mcc_generated_files/fatfs/ff.c: 164
      +                          1:  DWORD sect;;mcc_generated_files/fatfs/ff.c: 1642:  UINT n, szb;;mcc_generated_files/
      +                          fatfs/ff.c: 1643:  BYTE *ibuf;;mcc_generated_files/fatfs/ff.c: 1646:  if (sync_window(fs
      +                          ) != FR_OK) return FR_DISK_ERR;
  8697   00956C  C070  F059         	movff	dir_clear@fs,sync_window@fs
  8698   009570  C071  F05A         	movff	dir_clear@fs+1,sync_window@fs+1
  8699   009574  EC8B  F04D         	call	_sync_window	;wreg free
  8700   009578  0900               	iorlw	0
  8701   00957A  B4D8               	btfsc	status,2,c
  8702   00957C  EFC2  F04A         	goto	u8841
  8703   009580  EFC4  F04A         	goto	u8840
  8704   009584                     u8841:
  8705   009584  EFC7  F04A         	goto	l7412
  8706   009588                     u8840:
  8707   009588  0E01               	movlw	1
  8708   00958A  EF5D  F04B         	goto	l313
  8709   00958E                     l7412:
  8710                           
  8711                           ;mcc_generated_files/fatfs/ff.c: 1647:  sect = clst2sect(fs, clst);
  8712   00958E  C070  F00D         	movff	dir_clear@fs,clst2sect@fs
  8713   009592  C071  F00E         	movff	dir_clear@fs+1,clst2sect@fs+1
  8714   009596  C072  F00F         	movff	dir_clear@clst,clst2sect@clst
  8715   00959A  C073  F010         	movff	dir_clear@clst+1,clst2sect@clst+1
  8716   00959E  C074  F011         	movff	dir_clear@clst+2,clst2sect@clst+2
  8717   0095A2  C075  F012         	movff	dir_clear@clst+3,clst2sect@clst+3
  8718   0095A6  ECB7  F044         	call	_clst2sect	;wreg free
  8719   0095AA  C00D  F078         	movff	?_clst2sect,dir_clear@sect
  8720   0095AE  C00E  F079         	movff	?_clst2sect+1,dir_clear@sect+1
  8721   0095B2  C00F  F07A         	movff	?_clst2sect+2,dir_clear@sect+2
  8722   0095B6  C010  F07B         	movff	?_clst2sect+3,dir_clear@sect+3
  8723   0095BA                     
  8724                           ;mcc_generated_files/fatfs/ff.c: 1648:  fs->winsect = sect;
  8725   0095BA  0100               	movlb	0	; () banked
  8726   0095BC  EE20 F02F          	lfsr	2,47
  8727   0095C0  5170               	movf	dir_clear@fs& (0+255),w,b
  8728   0095C2  26D9               	addwf	fsr2l,f,c
  8729   0095C4  5171               	movf	(dir_clear@fs+1)& (0+255),w,b
  8730   0095C6  22DA               	addwfc	fsr2h,f,c
  8731   0095C8  C078  FFDE         	movff	dir_clear@sect,postinc2
  8732   0095CC  C079  FFDE         	movff	dir_clear@sect+1,postinc2
  8733   0095D0  C07A  FFDE         	movff	dir_clear@sect+2,postinc2
  8734   0095D4  C07B  FFDE         	movff	dir_clear@sect+3,postinc2
  8735   0095D8                     
  8736                           ; BSR set to: 0
  8737                           ;mcc_generated_files/fatfs/ff.c: 1649:  mem_set(fs->win, 0, ((UINT)512));
  8738   0095D8  0E33               	movlw	51
  8739   0095DA  2570               	addwf	dir_clear@fs& (0+255),w,b
  8740   0095DC  6E01               	movwf	mem_set@dst^0,c
  8741   0095DE  0E00               	movlw	0
  8742   0095E0  2171               	addwfc	(dir_clear@fs+1)& (0+255),w,b
  8743   0095E2  6E02               	movwf	(mem_set@dst+1)^0,c
  8744   0095E4  0E00               	movlw	0
  8745   0095E6  6E04               	movwf	(mem_set@val+1)^0,c
  8746   0095E8  0E00               	movlw	0
  8747   0095EA  6E03               	movwf	mem_set@val^0,c
  8748   0095EC  0E02               	movlw	2
  8749   0095EE  6E06               	movwf	(mem_set@cnt+1)^0,c
  8750   0095F0  0E00               	movlw	0
  8751   0095F2  6E05               	movwf	mem_set@cnt^0,c
  8752   0095F4  ECB8  F03E         	call	_mem_set	;wreg free
  8753   0095F8                     
  8754                           ;mcc_generated_files/fatfs/ff.c: 1660:  {;mcc_generated_files/fatfs/ff.c: 1661:   ibuf =
      +                           fs->win; szb = 1;
  8755   0095F8  0E33               	movlw	51
  8756   0095FA  0100               	movlb	0	; () banked
  8757   0095FC  2570               	addwf	dir_clear@fs& (0+255),w,b
  8758   0095FE  6F76               	movwf	dir_clear@ibuf& (0+255),b
  8759   009600  0E00               	movlw	0
  8760   009602  2171               	addwfc	(dir_clear@fs+1)& (0+255),w,b
  8761   009604  6F77               	movwf	(dir_clear@ibuf+1)& (0+255),b
  8762   009606                     
  8763                           ; BSR set to: 0
  8764   009606  0E00               	movlw	0
  8765   009608  6F7D               	movwf	(dir_clear@szb+1)& (0+255),b
  8766   00960A  0E01               	movlw	1
  8767   00960C  6F7C               	movwf	dir_clear@szb& (0+255),b
  8768   00960E                     
  8769                           ; BSR set to: 0
  8770                           ;mcc_generated_files/fatfs/ff.c: 1662:   for (n = 0; n < fs->csize && disk_write(fs->pdr
      +                          v, ibuf, sect + n, szb) == RES_OK; n += szb) ;
  8771   00960E  0E00               	movlw	0
  8772   009610  6F7F               	movwf	(dir_clear@n+1)& (0+255),b
  8773   009612  0E00               	movlw	0
  8774   009614  6F7E               	movwf	dir_clear@n& (0+255),b
  8775   009616  EF12  F04B         	goto	l7426
  8776   00961A                     l7424:
  8777   00961A  0100               	movlb	0	; () banked
  8778   00961C  517C               	movf	dir_clear@szb& (0+255),w,b
  8779   00961E  277E               	addwf	dir_clear@n& (0+255),f,b
  8780   009620  517D               	movf	(dir_clear@szb+1)& (0+255),w,b
  8781   009622  237F               	addwfc	(dir_clear@n+1)& (0+255),f,b
  8782   009624                     l7426:
  8783                           
  8784                           ; BSR set to: 0
  8785   009624  EE20 F009          	lfsr	2,9
  8786   009628  5170               	movf	dir_clear@fs& (0+255),w,b
  8787   00962A  26D9               	addwf	fsr2l,f,c
  8788   00962C  5171               	movf	(dir_clear@fs+1)& (0+255),w,b
  8789   00962E  22DA               	addwfc	fsr2h,f,c
  8790   009630  50DE               	movf	postinc2,w,c
  8791   009632  5D7E               	subwf	dir_clear@n& (0+255),w,b
  8792   009634  50DE               	movf	postinc2,w,c
  8793   009636  597F               	subwfb	(dir_clear@n+1)& (0+255),w,b
  8794   009638  B0D8               	btfsc	status,0,c
  8795   00963A  EF21  F04B         	goto	u8851
  8796   00963E  EF23  F04B         	goto	u8850
  8797   009642                     u8851:
  8798   009642  EF48  F04B         	goto	l7430
  8799   009646                     u8850:
  8800   009646                     
  8801                           ; BSR set to: 0
  8802   009646  C076  F04D         	movff	dir_clear@ibuf,disk_write@buff
  8803   00964A  C077  F04E         	movff	dir_clear@ibuf+1,disk_write@buff+1
  8804   00964E  517E               	movf	dir_clear@n& (0+255),w,b
  8805   009650  2578               	addwf	dir_clear@sect& (0+255),w,b
  8806   009652  6E4F               	movwf	disk_write@sector^0,c
  8807   009654  517F               	movf	(dir_clear@n+1)& (0+255),w,b
  8808   009656  2179               	addwfc	(dir_clear@sect+1)& (0+255),w,b
  8809   009658  6E50               	movwf	(disk_write@sector+1)^0,c
  8810   00965A  0E00               	movlw	0
  8811   00965C  217A               	addwfc	(dir_clear@sect+2)& (0+255),w,b
  8812   00965E  6E51               	movwf	(disk_write@sector+2)^0,c
  8813   009660  0E00               	movlw	0
  8814   009662  217B               	addwfc	(dir_clear@sect+3)& (0+255),w,b
  8815   009664  6E52               	movwf	(disk_write@sector+3)^0,c
  8816   009666  C07C  F053         	movff	dir_clear@szb,disk_write@count
  8817   00966A  C07D  F054         	movff	dir_clear@szb+1,disk_write@count+1
  8818   00966E  EE20 F001          	lfsr	2,1
  8819   009672  5170               	movf	dir_clear@fs& (0+255),w,b
  8820   009674  26D9               	addwf	fsr2l,f,c
  8821   009676  5171               	movf	(dir_clear@fs+1)& (0+255),w,b
  8822   009678  22DA               	addwfc	fsr2h,f,c
  8823   00967A  50DF               	movf	indf2,w,c
  8824   00967C  EC59  F041         	call	_disk_write
  8825   009680  0900               	iorlw	0
  8826   009682  B4D8               	btfsc	status,2,c
  8827   009684  EF46  F04B         	goto	u8861
  8828   009688  EF48  F04B         	goto	u8860
  8829   00968C                     u8861:
  8830   00968C  EF0D  F04B         	goto	l7424
  8831   009690                     u8860:
  8832   009690                     l7430:
  8833                           
  8834                           ;mcc_generated_files/fatfs/ff.c: 1663:  };mcc_generated_files/fatfs/ff.c: 1664:  return 
      +                          (n == fs->csize) ? FR_OK : FR_DISK_ERR;
  8835   009690  0100               	movlb	0	; () banked
  8836   009692  EE20 F009          	lfsr	2,9
  8837   009696  5170               	movf	dir_clear@fs& (0+255),w,b
  8838   009698  26D9               	addwf	fsr2l,f,c
  8839   00969A  5171               	movf	(dir_clear@fs+1)& (0+255),w,b
  8840   00969C  22DA               	addwfc	fsr2h,f,c
  8841   00969E  517E               	movf	dir_clear@n& (0+255),w,b
  8842   0096A0  18DE               	xorwf	postinc2,w,c
  8843   0096A2  E107               	bnz	u8871
  8844   0096A4  517F               	movf	(dir_clear@n+1)& (0+255),w,b
  8845   0096A6  18DE               	xorwf	postinc2,w,c
  8846   0096A8  A4D8               	btfss	status,2,c
  8847   0096AA  EF59  F04B         	goto	u8871
  8848   0096AE  EF5C  F04B         	goto	u8870
  8849   0096B2                     u8871:
  8850   0096B2  0E01               	movlw	1
  8851   0096B4  EF5D  F04B         	goto	u8880
  8852   0096B8                     u8870:
  8853   0096B8  0E00               	movlw	0
  8854   0096BA                     u8880:
  8855   0096BA                     l313:
  8856   0096BA  0012               	return		;funcret
  8857   0096BC                     __end_of_dir_clear:
  8858                           	callstack 0
  8859                           
  8860 ;; *************** function _f_mount *****************
  8861 ;; Defined at:
  8862 ;;		line 3472 in file "mcc_generated_files/fatfs/ff.c"
  8863 ;; Parameters:    Size  Location     Type
  8864 ;;  fs              2  101[BANK0 ] PTR struct .
  8865 ;;		 -> FatFs(563), drive(563), NULL(0), 
  8866 ;;  path            2  103[BANK0 ] PTR const unsigned char 
  8867 ;;		 -> STR_15(1), STR_13(13), STR_12(13), STR_11(13), 
  8868 ;;		 -> STR_10(9), STR_3(3), STR_2(10), STR_1(3), 
  8869 ;;  opt             1  105[BANK0 ] unsigned char 
  8870 ;; Auto vars:     Size  Location     Type
  8871 ;;  vol             2  111[BANK0 ] int 
  8872 ;;  cfs             2  109[BANK0 ] PTR struct .
  8873 ;;		 -> FatFs(563), drive(563), NULL(0), 
  8874 ;;  rp              2  107[BANK0 ] PTR const unsigned char 
  8875 ;;		 -> STR_15(1), STR_13(13), STR_12(13), STR_11(13), 
  8876 ;;		 -> STR_10(9), STR_3(3), STR_2(10), STR_1(3), 
  8877 ;;  res             1  106[BANK0 ] enum E68
  8878 ;; Return value:  Size  Location     Type
  8879 ;;                  1    wreg      enum E68
  8880 ;; Registers used:
  8881 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  8882 ;; Tracked objects:
  8883 ;;		On entry : 0/0
  8884 ;;		On exit  : 0/0
  8885 ;;		Unchanged: 0/0
  8886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8887 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8888 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8890 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8891 ;;Total ram usage:       12 bytes
  8892 ;; Hardware stack levels used: 1
  8893 ;; Hardware stack levels required when called: 9
  8894 ;; This function calls:
  8895 ;;		_find_volume
  8896 ;;		_get_ldnumber
  8897 ;; This function is called by:
  8898 ;;		_write_to_file
  8899 ;;		_FatFsDemo_Tasks
  8900 ;; This function uses a non-reentrant model
  8901 ;;
  8902                           
  8903                           	psect	text21
  8904   008A3A                     __ptext21:
  8905                           	callstack 0
  8906   008A3A                     _f_mount:
  8907                           	callstack 20
  8908   008A3A                     
  8909                           ;mcc_generated_files/fatfs/ff.c: 3473:  FATFS* fs,;mcc_generated_files/fatfs/ff.c: 3474:
      +                            const TCHAR* path,;mcc_generated_files/fatfs/ff.c: 3475:  BYTE opt;mcc_generated_files
      +                          /fatfs/ff.c: 3477: {;mcc_generated_files/fatfs/ff.c: 3478:  FATFS *cfs;;mcc_generated_fi
      +                          les/fatfs/ff.c: 3479:  int vol;;mcc_generated_files/fatfs/ff.c: 3480:  FRESULT res;;mcc_
      +                          generated_files/fatfs/ff.c: 3481:  const TCHAR *rp = path;
  8910   008A3A  C0C7  F0CB         	movff	f_mount@path,f_mount@rp
  8911   008A3E  C0C8  F0CC         	movff	f_mount@path+1,f_mount@rp+1
  8912   008A42                     
  8913                           ;mcc_generated_files/fatfs/ff.c: 3485:  vol = get_ldnumber(&rp);
  8914   008A42  0ECB               	movlw	low f_mount@rp
  8915   008A44  6E01               	movwf	get_ldnumber@path^0,c
  8916   008A46  0E00               	movlw	high f_mount@rp
  8917   008A48  6E02               	movwf	(get_ldnumber@path+1)^0,c
  8918   008A4A  EC69  F049         	call	_get_ldnumber	;wreg free
  8919   008A4E  C001  F0CF         	movff	?_get_ldnumber,f_mount@vol
  8920   008A52  C002  F0D0         	movff	?_get_ldnumber+1,f_mount@vol+1
  8921   008A56                     
  8922                           ;mcc_generated_files/fatfs/ff.c: 3486:  if (vol < 0) return FR_INVALID_DRIVE;
  8923   008A56  0100               	movlb	0	; () banked
  8924   008A58  BFD0               	btfsc	(f_mount@vol+1)& (0+255),7,b
  8925   008A5A  EF33  F045         	goto	u11400
  8926   008A5E  EF31  F045         	goto	u11401
  8927   008A62                     u11401:
  8928   008A62  EF36  F045         	goto	l8864
  8929   008A66                     u11400:
  8930   008A66                     
  8931                           ; BSR set to: 0
  8932   008A66  0E0B               	movlw	11
  8933   008A68  EF88  F045         	goto	l590
  8934   008A6C                     l8864:
  8935                           
  8936                           ; BSR set to: 0
  8937                           ;mcc_generated_files/fatfs/ff.c: 3487:  cfs = FatFs[vol];
  8938   008A6C  90D8               	bcf	status,0,c
  8939   008A6E  35CF               	rlcf	f_mount@vol& (0+255),w,b
  8940   008A70  6ED9               	movwf	fsr2l,c
  8941   008A72  35D0               	rlcf	(f_mount@vol+1)& (0+255),w,b
  8942   008A74  6EDA               	movwf	fsr2h,c
  8943   008A76  0E29               	movlw	low _FatFs@ff$F442
  8944   008A78  26D9               	addwf	fsr2l,f,c
  8945   008A7A  0E01               	movlw	high _FatFs@ff$F442
  8946   008A7C  22DA               	addwfc	fsr2h,f,c
  8947   008A7E  CFDE F0CD          	movff	postinc2,f_mount@cfs
  8948   008A82  CFDD F0CE          	movff	postdec2,f_mount@cfs+1
  8949   008A86                     
  8950                           ; BSR set to: 0
  8951                           ;mcc_generated_files/fatfs/ff.c: 3489:  if (cfs) {
  8952   008A86  51CD               	movf	f_mount@cfs& (0+255),w,b
  8953   008A88  11CE               	iorwf	(f_mount@cfs+1)& (0+255),w,b
  8954   008A8A  B4D8               	btfsc	status,2,c
  8955   008A8C  EF4A  F045         	goto	u11411
  8956   008A90  EF4C  F045         	goto	u11410
  8957   008A94                     u11411:
  8958   008A94  EF52  F045         	goto	l8870
  8959   008A98                     u11410:
  8960   008A98                     
  8961                           ; BSR set to: 0
  8962                           ;mcc_generated_files/fatfs/ff.c: 3496:   cfs->fs_type = 0;
  8963   008A98  C0CD  FFD9         	movff	f_mount@cfs,fsr2l
  8964   008A9C  C0CE  FFDA         	movff	f_mount@cfs+1,fsr2h
  8965   008AA0  0E00               	movlw	0
  8966   008AA2  6EDF               	movwf	indf2,c
  8967   008AA4                     l8870:
  8968                           
  8969                           ; BSR set to: 0
  8970                           ;mcc_generated_files/fatfs/ff.c: 3499:  if (fs) {
  8971   008AA4  51C5               	movf	f_mount@fs& (0+255),w,b
  8972   008AA6  11C6               	iorwf	(f_mount@fs+1)& (0+255),w,b
  8973   008AA8  B4D8               	btfsc	status,2,c
  8974   008AAA  EF59  F045         	goto	u11421
  8975   008AAE  EF5B  F045         	goto	u11420
  8976   008AB2                     u11421:
  8977   008AB2  EF61  F045         	goto	l8874
  8978   008AB6                     u11420:
  8979   008AB6                     
  8980                           ; BSR set to: 0
  8981                           ;mcc_generated_files/fatfs/ff.c: 3500:   fs->fs_type = 0;
  8982   008AB6  C0C5  FFD9         	movff	f_mount@fs,fsr2l
  8983   008ABA  C0C6  FFDA         	movff	f_mount@fs+1,fsr2h
  8984   008ABE  0E00               	movlw	0
  8985   008AC0  6EDF               	movwf	indf2,c
  8986   008AC2                     l8874:
  8987                           
  8988                           ; BSR set to: 0
  8989                           ;mcc_generated_files/fatfs/ff.c: 3505:  FatFs[vol] = fs;
  8990   008AC2  90D8               	bcf	status,0,c
  8991   008AC4  35CF               	rlcf	f_mount@vol& (0+255),w,b
  8992   008AC6  6ED9               	movwf	fsr2l,c
  8993   008AC8  35D0               	rlcf	(f_mount@vol+1)& (0+255),w,b
  8994   008ACA  6EDA               	movwf	fsr2h,c
  8995   008ACC  0E29               	movlw	low _FatFs@ff$F442
  8996   008ACE  26D9               	addwf	fsr2l,f,c
  8997   008AD0  0E01               	movlw	high _FatFs@ff$F442
  8998   008AD2  22DA               	addwfc	fsr2h,f,c
  8999   008AD4  C0C5  FFDE         	movff	f_mount@fs,postinc2
  9000   008AD8  C0C6  FFDD         	movff	f_mount@fs+1,postdec2
  9001   008ADC                     
  9002                           ; BSR set to: 0
  9003                           ;mcc_generated_files/fatfs/ff.c: 3507:  if (opt == 0) return FR_OK;
  9004   008ADC  51C9               	movf	f_mount@opt& (0+255),w,b
  9005   008ADE  A4D8               	btfss	status,2,c
  9006   008AE0  EF74  F045         	goto	u11431
  9007   008AE4  EF76  F045         	goto	u11430
  9008   008AE8                     u11431:
  9009   008AE8  EF79  F045         	goto	l8882
  9010   008AEC                     u11430:
  9011   008AEC                     
  9012                           ; BSR set to: 0
  9013   008AEC  0E00               	movlw	0
  9014   008AEE  EF88  F045         	goto	l590
  9015   008AF2                     l8882:
  9016                           
  9017                           ; BSR set to: 0
  9018                           ;mcc_generated_files/fatfs/ff.c: 3509:  res = find_volume(&path, &fs, 0);
  9019   008AF2  0EC7               	movlw	low f_mount@path
  9020   008AF4  6F7E               	movwf	find_volume@path& (0+255),b
  9021   008AF6  0E00               	movlw	high f_mount@path
  9022   008AF8  6F7F               	movwf	(find_volume@path+1)& (0+255),b
  9023   008AFA  0EC5               	movlw	low f_mount@fs
  9024   008AFC  6F80               	movwf	find_volume@rfs& (0+255),b
  9025   008AFE  0E00               	movlw	high f_mount@fs
  9026   008B00  6F81               	movwf	(find_volume@rfs+1)& (0+255),b
  9027   008B02  0E00               	movlw	0
  9028   008B04  6F82               	movwf	find_volume@mode& (0+255),b
  9029   008B06  EC03  F079         	call	_find_volume	;wreg free
  9030   008B0A  0100               	movlb	0	; () banked
  9031   008B0C  6FCA               	movwf	f_mount@res& (0+255),b
  9032   008B0E                     
  9033                           ; BSR set to: 0
  9034                           ;mcc_generated_files/fatfs/ff.c: 3510:  return res;
  9035   008B0E  51CA               	movf	f_mount@res& (0+255),w,b
  9036   008B10                     l590:
  9037                           
  9038                           ; BSR set to: 0
  9039   008B10  0012               	return		;funcret
  9040   008B12                     __end_of_f_mount:
  9041                           	callstack 0
  9042                           
  9043 ;; *************** function _find_volume *****************
  9044 ;; Defined at:
  9045 ;;		line 3203 in file "mcc_generated_files/fatfs/ff.c"
  9046 ;; Parameters:    Size  Location     Type
  9047 ;;  path            2   30[BANK0 ] PTR PTR const unsigned c
  9048 ;;		 -> f_rename@path_old(2), f_mkdir@path(2), f_unlink@path(2), f_getfree@path(2), 
  9049 ;;		 -> f_stat@path(2), f_opendir@path(2), f_chdir@path(2), f_open@path(2), 
  9050 ;;		 -> f_mount@path(2), 
  9051 ;;  rfs             2   32[BANK0 ] PTR PTR struct .
  9052 ;;		 -> f_rename@fs(2), f_mkdir@fs(2), f_unlink@fs(2), f_getfree@fs(2), 
  9053 ;;		 -> dj.obj(15), f_stat@dj(40), f_opendir@fs(2), f_chdir@fs(2), 
  9054 ;;		 -> f_open@fs(2), f_mount@fs(2), 
  9055 ;;  mode            1   34[BANK0 ] unsigned char 
  9056 ;; Auto vars:     Size  Location     Type
  9057 ;;  br             16   43[BANK0 ] unsigned long [4]
  9058 ;;  bsect           4   92[BANK0 ] unsigned long 
  9059 ;;  fasize          4   88[BANK0 ] unsigned long 
  9060 ;;  nclst           4   84[BANK0 ] unsigned long 
  9061 ;;  tsect           4   79[BANK0 ] unsigned long 
  9062 ;;  sysect          4   71[BANK0 ] unsigned long 
  9063 ;;  szbfat          4   65[BANK0 ] unsigned long 
  9064 ;;  fs              2   99[BANK0 ] PTR struct .
  9065 ;;		 -> FatFs(563), drive(563), NULL(0), 
  9066 ;;  i               2   96[BANK0 ] unsigned int 
  9067 ;;  nrsv            2   77[BANK0 ] unsigned short 
  9068 ;;  vol             2   75[BANK0 ] int 
  9069 ;;  pt              2   69[BANK0 ] PTR unsigned char 
  9070 ;;		 -> drive.win(512), FatFs.win(512), FatFs(563), drive(563), 
  9071 ;;		 -> NULL(0), 
  9072 ;;  fmt             1   98[BANK0 ] unsigned char 
  9073 ;;  stat            1   83[BANK0 ] unsigned char 
  9074 ;; Return value:  Size  Location     Type
  9075 ;;                  1    wreg      enum E68
  9076 ;; Registers used:
  9077 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  9078 ;; Tracked objects:
  9079 ;;		On entry : 0/0
  9080 ;;		On exit  : 0/0
  9081 ;;		Unchanged: 0/0
  9082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9083 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9084 ;;      Locals:         0      58       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9085 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9086 ;;      Totals:         0      71       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9087 ;;Total ram usage:       71 bytes
  9088 ;; Hardware stack levels used: 1
  9089 ;; Hardware stack levels required when called: 8
  9090 ;; This function calls:
  9091 ;;		___lldiv
  9092 ;;		___lmul
  9093 ;;		_check_fs
  9094 ;;		_disk_initialize
  9095 ;;		_disk_status
  9096 ;;		_get_ldnumber
  9097 ;;		_ld_dword
  9098 ;;		_ld_word
  9099 ;;		_move_window
  9100 ;; This function is called by:
  9101 ;;		_f_mount
  9102 ;;		_f_open
  9103 ;;		_f_chdir
  9104 ;;		_f_opendir
  9105 ;;		_f_stat
  9106 ;;		_f_getfree
  9107 ;;		_f_unlink
  9108 ;;		_f_mkdir
  9109 ;;		_f_rename
  9110 ;; This function uses a non-reentrant model
  9111 ;;
  9112                           
  9113                           	psect	text22
  9114   00F206                     __ptext22:
  9115                           	callstack 0
  9116   00F206                     _find_volume:
  9117                           	callstack 20
  9118   00F206                     
  9119                           ;mcc_generated_files/fatfs/ff.c: 3204:  const TCHAR** path,;mcc_generated_files/fatfs/ff
      +                          .c: 3205:  FATFS** rfs,;mcc_generated_files/fatfs/ff.c: 3206:  BYTE mode;mcc_generated_f
      +                          iles/fatfs/ff.c: 3208: {;mcc_generated_files/fatfs/ff.c: 3209:  BYTE fmt, *pt;;mcc_gener
      +                          ated_files/fatfs/ff.c: 3210:  int vol;;mcc_generated_files/fatfs/ff.c: 3211:  DSTATUS st
      +                          at;;mcc_generated_files/fatfs/ff.c: 3212:  DWORD bsect, fasize, tsect, sysect, nclst, sz
      +                          bfat, br[4];;mcc_generated_files/fatfs/ff.c: 3213:  WORD nrsv;;mcc_generated_files/fatfs
      +                          /ff.c: 3214:  FATFS *fs;
  9120   00F206  C080  FFD9         	movff	find_volume@rfs,fsr2l
  9121   00F20A  C081  FFDA         	movff	find_volume@rfs+1,fsr2h
  9122   00F20E  0E00               	movlw	0
  9123   00F210  6EDE               	movwf	postinc2,c
  9124   00F212  0E00               	movlw	0
  9125   00F214  6EDD               	movwf	postdec2,c
  9126   00F216                     
  9127                           ;mcc_generated_files/fatfs/ff.c: 3220:  vol = get_ldnumber(path);
  9128   00F216  C07E  F001         	movff	find_volume@path,get_ldnumber@path
  9129   00F21A  C07F  F002         	movff	find_volume@path+1,get_ldnumber@path+1
  9130   00F21E  EC69  F049         	call	_get_ldnumber	;wreg free
  9131   00F222  C001  F0AB         	movff	?_get_ldnumber,find_volume@vol
  9132   00F226  C002  F0AC         	movff	?_get_ldnumber+1,find_volume@vol+1
  9133   00F22A                     
  9134                           ;mcc_generated_files/fatfs/ff.c: 3221:  if (vol < 0) return FR_INVALID_DRIVE;
  9135   00F22A  0100               	movlb	0	; () banked
  9136   00F22C  BFAC               	btfsc	(find_volume@vol+1)& (0+255),7,b
  9137   00F22E  EF1D  F079         	goto	u10710
  9138   00F232  EF1B  F079         	goto	u10711
  9139   00F236                     u10711:
  9140   00F236  EF20  F079         	goto	l8452
  9141   00F23A                     u10710:
  9142   00F23A                     
  9143                           ; BSR set to: 0
  9144   00F23A  0E0B               	movlw	11
  9145   00F23C  EF42  F07F         	goto	l524
  9146   00F240                     l8452:
  9147                           
  9148                           ; BSR set to: 0
  9149                           ;mcc_generated_files/fatfs/ff.c: 3224:  fs = FatFs[vol];
  9150   00F240  90D8               	bcf	status,0,c
  9151   00F242  35AB               	rlcf	find_volume@vol& (0+255),w,b
  9152   00F244  6ED9               	movwf	fsr2l,c
  9153   00F246  35AC               	rlcf	(find_volume@vol+1)& (0+255),w,b
  9154   00F248  6EDA               	movwf	fsr2h,c
  9155   00F24A  0E29               	movlw	low _FatFs@ff$F442
  9156   00F24C  26D9               	addwf	fsr2l,f,c
  9157   00F24E  0E01               	movlw	high _FatFs@ff$F442
  9158   00F250  22DA               	addwfc	fsr2h,f,c
  9159   00F252  CFDE F0C3          	movff	postinc2,find_volume@fs
  9160   00F256  CFDD F0C4          	movff	postdec2,find_volume@fs+1
  9161   00F25A                     
  9162                           ; BSR set to: 0
  9163                           ;mcc_generated_files/fatfs/ff.c: 3225:  if (!fs) return FR_NOT_ENABLED;
  9164   00F25A  51C3               	movf	find_volume@fs& (0+255),w,b
  9165   00F25C  11C4               	iorwf	(find_volume@fs+1)& (0+255),w,b
  9166   00F25E  A4D8               	btfss	status,2,c
  9167   00F260  EF34  F079         	goto	u10721
  9168   00F264  EF36  F079         	goto	u10720
  9169   00F268                     u10721:
  9170   00F268  EF39  F079         	goto	l8460
  9171   00F26C                     u10720:
  9172   00F26C                     
  9173                           ; BSR set to: 0
  9174   00F26C  0E0C               	movlw	12
  9175   00F26E  EF42  F07F         	goto	l524
  9176   00F272                     l8460:
  9177                           
  9178                           ; BSR set to: 0
  9179                           ;mcc_generated_files/fatfs/ff.c: 3229:  *rfs = fs;
  9180   00F272  C080  FFD9         	movff	find_volume@rfs,fsr2l
  9181   00F276  C081  FFDA         	movff	find_volume@rfs+1,fsr2h
  9182   00F27A  C0C3  FFDE         	movff	find_volume@fs,postinc2
  9183   00F27E  C0C4  FFDD         	movff	find_volume@fs+1,postdec2
  9184   00F282                     
  9185                           ; BSR set to: 0
  9186                           ;mcc_generated_files/fatfs/ff.c: 3231:  mode &= (BYTE)~0x01;
  9187   00F282  9182               	bcf	find_volume@mode& (0+255),0,b
  9188   00F284                     
  9189                           ; BSR set to: 0
  9190                           ;mcc_generated_files/fatfs/ff.c: 3232:  if (fs->fs_type != 0) {
  9191   00F284  C0C3  FFD9         	movff	find_volume@fs,fsr2l
  9192   00F288  C0C4  FFDA         	movff	find_volume@fs+1,fsr2h
  9193   00F28C  50DF               	movf	indf2,w,c
  9194   00F28E  B4D8               	btfsc	status,2,c
  9195   00F290  EF4C  F079         	goto	u10731
  9196   00F294  EF4E  F079         	goto	u10730
  9197   00F298                     u10731:
  9198   00F298  EF75  F079         	goto	l8482
  9199   00F29C                     u10730:
  9200   00F29C                     
  9201                           ; BSR set to: 0
  9202                           ;mcc_generated_files/fatfs/ff.c: 3233:   stat = disk_status(fs->pdrv);
  9203   00F29C  EE20 F001          	lfsr	2,1
  9204   00F2A0  51C3               	movf	find_volume@fs& (0+255),w,b
  9205   00F2A2  26D9               	addwf	fsr2l,f,c
  9206   00F2A4  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
  9207   00F2A6  22DA               	addwfc	fsr2h,f,c
  9208   00F2A8  50DF               	movf	indf2,w,c
  9209   00F2AA  EC93  F041         	call	_disk_status
  9210   00F2AE  0100               	movlb	0	; () banked
  9211   00F2B0  6FB3               	movwf	find_volume@stat& (0+255),b
  9212   00F2B2                     
  9213                           ; BSR set to: 0
  9214                           ;mcc_generated_files/fatfs/ff.c: 3235:    if (!0 && mode && (stat & 0x04)) {
  9215   00F2B2  B1B3               	btfsc	find_volume@stat& (0+255),0,b
  9216   00F2B4  EF5E  F079         	goto	u10741
  9217   00F2B8  EF60  F079         	goto	u10740
  9218   00F2BC                     u10741:
  9219   00F2BC  EF75  F079         	goto	l8482
  9220   00F2C0                     u10740:
  9221   00F2C0                     
  9222                           ; BSR set to: 0
  9223   00F2C0  5182               	movf	find_volume@mode& (0+255),w,b
  9224   00F2C2  B4D8               	btfsc	status,2,c
  9225   00F2C4  EF66  F079         	goto	u10751
  9226   00F2C8  EF68  F079         	goto	u10750
  9227   00F2CC                     u10751:
  9228   00F2CC  EF72  F079         	goto	l8478
  9229   00F2D0                     u10750:
  9230   00F2D0                     
  9231                           ; BSR set to: 0
  9232   00F2D0  A5B3               	btfss	find_volume@stat& (0+255),2,b
  9233   00F2D2  EF6D  F079         	goto	u10761
  9234   00F2D6  EF6F  F079         	goto	u10760
  9235   00F2DA                     u10761:
  9236   00F2DA  EF72  F079         	goto	l8478
  9237   00F2DE                     u10760:
  9238   00F2DE                     l8474:
  9239                           
  9240                           ; BSR set to: 0
  9241                           ;mcc_generated_files/fatfs/ff.c: 3236:     return FR_WRITE_PROTECTED;
  9242   00F2DE  0E0A               	movlw	10
  9243   00F2E0  EF42  F07F         	goto	l524
  9244   00F2E4                     l8478:
  9245                           
  9246                           ; BSR set to: 0
  9247                           ;mcc_generated_files/fatfs/ff.c: 3238:    return FR_OK;
  9248   00F2E4  0E00               	movlw	0
  9249   00F2E6  EF42  F07F         	goto	l524
  9250   00F2EA                     l8482:
  9251                           
  9252                           ; BSR set to: 0
  9253                           ;mcc_generated_files/fatfs/ff.c: 3245:  fs->fs_type = 0;
  9254   00F2EA  C0C3  FFD9         	movff	find_volume@fs,fsr2l
  9255   00F2EE  C0C4  FFDA         	movff	find_volume@fs+1,fsr2h
  9256   00F2F2  0E00               	movlw	0
  9257   00F2F4  6EDF               	movwf	indf2,c
  9258   00F2F6                     
  9259                           ; BSR set to: 0
  9260                           ;mcc_generated_files/fatfs/ff.c: 3246:  fs->pdrv = (BYTE)(vol);
  9261   00F2F6  EE20 F001          	lfsr	2,1
  9262   00F2FA  51C3               	movf	find_volume@fs& (0+255),w,b
  9263   00F2FC  26D9               	addwf	fsr2l,f,c
  9264   00F2FE  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
  9265   00F300  22DA               	addwfc	fsr2h,f,c
  9266   00F302  C0AB  FFDF         	movff	find_volume@vol,indf2
  9267   00F306                     
  9268                           ; BSR set to: 0
  9269                           ;mcc_generated_files/fatfs/ff.c: 3247:  stat = disk_initialize(fs->pdrv);
  9270   00F306  EE20 F001          	lfsr	2,1
  9271   00F30A  51C3               	movf	find_volume@fs& (0+255),w,b
  9272   00F30C  26D9               	addwf	fsr2l,f,c
  9273   00F30E  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
  9274   00F310  22DA               	addwfc	fsr2h,f,c
  9275   00F312  50DF               	movf	indf2,w,c
  9276   00F314  ECCF  F03F         	call	_disk_initialize
  9277   00F318  0100               	movlb	0	; () banked
  9278   00F31A  6FB3               	movwf	find_volume@stat& (0+255),b
  9279   00F31C                     
  9280                           ; BSR set to: 0
  9281                           ;mcc_generated_files/fatfs/ff.c: 3248:  if (stat & 0x01) {
  9282   00F31C  A1B3               	btfss	find_volume@stat& (0+255),0,b
  9283   00F31E  EF93  F079         	goto	u10771
  9284   00F322  EF95  F079         	goto	u10770
  9285   00F326                     u10771:
  9286   00F326  EF98  F079         	goto	l8494
  9287   00F32A                     u10770:
  9288   00F32A                     
  9289                           ; BSR set to: 0
  9290                           ;mcc_generated_files/fatfs/ff.c: 3249:   return FR_NOT_READY;
  9291   00F32A  0E03               	movlw	3
  9292   00F32C  EF42  F07F         	goto	l524
  9293   00F330                     l8494:
  9294                           
  9295                           ; BSR set to: 0
  9296   00F330  5182               	movf	find_volume@mode& (0+255),w,b
  9297   00F332  B4D8               	btfsc	status,2,c
  9298   00F334  EF9E  F079         	goto	u10781
  9299   00F338  EFA0  F079         	goto	u10780
  9300   00F33C                     u10781:
  9301   00F33C  EFA9  F079         	goto	l8502
  9302   00F340                     u10780:
  9303   00F340                     
  9304                           ; BSR set to: 0
  9305   00F340  A5B3               	btfss	find_volume@stat& (0+255),2,b
  9306   00F342  EFA5  F079         	goto	u10791
  9307   00F346  EFA7  F079         	goto	u10790
  9308   00F34A                     u10791:
  9309   00F34A  EFA9  F079         	goto	l8502
  9310   00F34E                     u10790:
  9311   00F34E  EF6F  F079         	goto	l8474
  9312   00F352                     l8502:
  9313                           
  9314                           ; BSR set to: 0
  9315                           ;mcc_generated_files/fatfs/ff.c: 3260:  bsect = 0;
  9316   00F352  0E00               	movlw	0
  9317   00F354  6FBC               	movwf	find_volume@bsect& (0+255),b
  9318   00F356  0E00               	movlw	0
  9319   00F358  6FBD               	movwf	(find_volume@bsect+1)& (0+255),b
  9320   00F35A  0E00               	movlw	0
  9321   00F35C  6FBE               	movwf	(find_volume@bsect+2)& (0+255),b
  9322   00F35E  0E00               	movlw	0
  9323   00F360  6FBF               	movwf	(find_volume@bsect+3)& (0+255),b
  9324   00F362                     
  9325                           ; BSR set to: 0
  9326                           ;mcc_generated_files/fatfs/ff.c: 3261:  fmt = check_fs(fs, bsect);
  9327   00F362  C0C3  F077         	movff	find_volume@fs,check_fs@fs
  9328   00F366  C0C4  F078         	movff	find_volume@fs+1,check_fs@fs+1
  9329   00F36A  C0BC  F079         	movff	find_volume@bsect,check_fs@sect
  9330   00F36E  C0BD  F07A         	movff	find_volume@bsect+1,check_fs@sect+1
  9331   00F372  C0BE  F07B         	movff	find_volume@bsect+2,check_fs@sect+2
  9332   00F376  C0BF  F07C         	movff	find_volume@bsect+3,check_fs@sect+3
  9333   00F37A  EC5E  F04B         	call	_check_fs	;wreg free
  9334   00F37E  0100               	movlb	0	; () banked
  9335   00F380  6FC2               	movwf	find_volume@fmt& (0+255),b
  9336   00F382                     
  9337                           ; BSR set to: 0
  9338                           ;mcc_generated_files/fatfs/ff.c: 3262:  if (fmt == 2 || (fmt < 2 && 0 != 0)) {
  9339   00F382  0E02               	movlw	2
  9340   00F384  19C2               	xorwf	find_volume@fmt& (0+255),w,b
  9341   00F386  B4D8               	btfsc	status,2,c
  9342   00F388  EFC8  F079         	goto	u10801
  9343   00F38C  EFCA  F079         	goto	u10800
  9344   00F390                     u10801:
  9345   00F390  EFCC  F079         	goto	l8512
  9346   00F394                     u10800:
  9347   00F394  EF9E  F07A         	goto	l8552
  9348   00F398                     l8512:
  9349                           
  9350                           ; BSR set to: 0
  9351                           ;mcc_generated_files/fatfs/ff.c: 3263:   for (i = 0; i < 4; i++) {
  9352   00F398  0E00               	movlw	0
  9353   00F39A  6FC1               	movwf	(find_volume@i+1)& (0+255),b
  9354   00F39C  0E00               	movlw	0
  9355   00F39E  6FC0               	movwf	find_volume@i& (0+255),b
  9356   00F3A0                     l8514:
  9357                           
  9358                           ; BSR set to: 0
  9359   00F3A0  51C1               	movf	(find_volume@i+1)& (0+255),w,b
  9360   00F3A2  E109               	bnz	u10810
  9361   00F3A4  0E04               	movlw	4
  9362   00F3A6  5DC0               	subwf	find_volume@i& (0+255),w,b
  9363   00F3A8  A0D8               	btfss	status,0,c
  9364   00F3AA  EFD9  F079         	goto	u10811
  9365   00F3AE  EFDB  F079         	goto	u10810
  9366   00F3B2                     u10811:
  9367   00F3B2  EFDD  F079         	goto	l8518
  9368   00F3B6                     u10810:
  9369   00F3B6  EF3B  F07A         	goto	l8532
  9370   00F3BA                     l8518:
  9371                           
  9372                           ; BSR set to: 0
  9373                           ;mcc_generated_files/fatfs/ff.c: 3264:    pt = fs->win + (446 + i * 16);
  9374   00F3BA  C0C0  F083         	movff	find_volume@i,??_find_volume
  9375   00F3BE  C0C1  F084         	movff	find_volume@i+1,??_find_volume+1
  9376   00F3C2  3B83               	swapf	??_find_volume& (0+255),f,b
  9377   00F3C4  3B84               	swapf	(??_find_volume+1)& (0+255),f,b
  9378   00F3C6  0EF0               	movlw	240
  9379   00F3C8  1784               	andwf	(??_find_volume+1)& (0+255),f,b
  9380   00F3CA  5183               	movf	??_find_volume& (0+255),w,b
  9381   00F3CC  0B0F               	andlw	15
  9382   00F3CE  1384               	iorwf	(??_find_volume+1)& (0+255),f,b
  9383   00F3D0  0EF0               	movlw	240
  9384   00F3D2  1783               	andwf	??_find_volume& (0+255),f,b
  9385   00F3D4  5183               	movf	??_find_volume& (0+255),w,b
  9386   00F3D6  25C3               	addwf	find_volume@fs& (0+255),w,b
  9387   00F3D8  6F85               	movwf	(??_find_volume+2)& (0+255),b
  9388   00F3DA  5184               	movf	(??_find_volume+1)& (0+255),w,b
  9389   00F3DC  21C4               	addwfc	(find_volume@fs+1)& (0+255),w,b
  9390   00F3DE  6F86               	movwf	(??_find_volume+3)& (0+255),b
  9391   00F3E0  0EF1               	movlw	241
  9392   00F3E2  2585               	addwf	(??_find_volume+2)& (0+255),w,b
  9393   00F3E4  6FA5               	movwf	find_volume@pt& (0+255),b
  9394   00F3E6  0E01               	movlw	1
  9395   00F3E8  2186               	addwfc	(??_find_volume+3)& (0+255),w,b
  9396   00F3EA  6FA6               	movwf	(find_volume@pt+1)& (0+255),b
  9397   00F3EC                     
  9398                           ; BSR set to: 0
  9399                           ;mcc_generated_files/fatfs/ff.c: 3265:    br[i] = pt[4] ? ld_dword(pt + 8) : 0;
  9400   00F3EC  EE20 F004          	lfsr	2,4
  9401   00F3F0  51A5               	movf	find_volume@pt& (0+255),w,b
  9402   00F3F2  26D9               	addwf	fsr2l,f,c
  9403   00F3F4  51A6               	movf	(find_volume@pt+1)& (0+255),w,b
  9404   00F3F6  22DA               	addwfc	fsr2h,f,c
  9405   00F3F8  50DF               	movf	indf2,w,c
  9406   00F3FA  A4D8               	btfss	status,2,c
  9407   00F3FC  EF02  F07A         	goto	u10821
  9408   00F400  EF04  F07A         	goto	u10820
  9409   00F404                     u10821:
  9410   00F404  EF0E  F07A         	goto	l8524
  9411   00F408                     u10820:
  9412   00F408                     
  9413                           ; BSR set to: 0
  9414   00F408  0E00               	movlw	0
  9415   00F40A  6F9B               	movwf	_find_volume$1230& (0+255),b
  9416   00F40C  0E00               	movlw	0
  9417   00F40E  6F9C               	movwf	(_find_volume$1230+1)& (0+255),b
  9418   00F410  0E00               	movlw	0
  9419   00F412  6F9D               	movwf	(_find_volume$1230+2)& (0+255),b
  9420   00F414  0E00               	movlw	0
  9421   00F416  6F9E               	movwf	(_find_volume$1230+3)& (0+255),b
  9422   00F418  EF1E  F07A         	goto	l8526
  9423   00F41C                     l8524:
  9424                           
  9425                           ; BSR set to: 0
  9426   00F41C  0E08               	movlw	8
  9427   00F41E  25A5               	addwf	find_volume@pt& (0+255),w,b
  9428   00F420  6E01               	movwf	ld_dword@ptr^0,c
  9429   00F422  0E00               	movlw	0
  9430   00F424  21A6               	addwfc	(find_volume@pt+1)& (0+255),w,b
  9431   00F426  6E02               	movwf	(ld_dword@ptr+1)^0,c
  9432   00F428  ECF5  F043         	call	_ld_dword	;wreg free
  9433   00F42C  C001  F09B         	movff	?_ld_dword,_find_volume$1230
  9434   00F430  C002  F09C         	movff	?_ld_dword+1,_find_volume$1230+1
  9435   00F434  C003  F09D         	movff	?_ld_dword+2,_find_volume$1230+2
  9436   00F438  C004  F09E         	movff	?_ld_dword+3,_find_volume$1230+3
  9437   00F43C                     l8526:
  9438   00F43C  0E8B               	movlw	low find_volume@br
  9439   00F43E  0100               	movlb	0	; () banked
  9440   00F440  6F83               	movwf	??_find_volume& (0+255),b
  9441   00F442  0E00               	movlw	high find_volume@br
  9442   00F444  6F84               	movwf	(??_find_volume+1)& (0+255),b
  9443   00F446  90D8               	bcf	status,0,c
  9444   00F448  35C0               	rlcf	find_volume@i& (0+255),w,b
  9445   00F44A  6ED9               	movwf	fsr2l,c
  9446   00F44C  35C1               	rlcf	(find_volume@i+1)& (0+255),w,b
  9447   00F44E  6EDA               	movwf	fsr2h,c
  9448   00F450  90D8               	bcf	status,0,c
  9449   00F452  36D9               	rlcf	fsr2l,f,c
  9450   00F454  36DA               	rlcf	fsr2h,f,c
  9451   00F456  5183               	movf	??_find_volume& (0+255),w,b
  9452   00F458  26D9               	addwf	fsr2l,f,c
  9453   00F45A  5184               	movf	(??_find_volume+1)& (0+255),w,b
  9454   00F45C  22DA               	addwfc	fsr2h,f,c
  9455   00F45E  C09B  FFDE         	movff	_find_volume$1230,postinc2
  9456   00F462  C09C  FFDE         	movff	_find_volume$1230+1,postinc2
  9457   00F466  C09D  FFDE         	movff	_find_volume$1230+2,postinc2
  9458   00F46A  C09E  FFDE         	movff	_find_volume$1230+3,postinc2
  9459   00F46E                     
  9460                           ; BSR set to: 0
  9461                           ;mcc_generated_files/fatfs/ff.c: 3266:   }
  9462   00F46E  4BC0               	infsnz	find_volume@i& (0+255),f,b
  9463   00F470  2BC1               	incf	(find_volume@i+1)& (0+255),f,b
  9464   00F472  EFD0  F079         	goto	l8514
  9465   00F476                     l8532:
  9466                           
  9467                           ; BSR set to: 0
  9468                           ;mcc_generated_files/fatfs/ff.c: 3267:   i = 0;
  9469   00F476  0E00               	movlw	0
  9470   00F478  6FC1               	movwf	(find_volume@i+1)& (0+255),b
  9471   00F47A  0E00               	movlw	0
  9472   00F47C  6FC0               	movwf	find_volume@i& (0+255),b
  9473   00F47E                     
  9474                           ; BSR set to: 0
  9475                           ;mcc_generated_files/fatfs/ff.c: 3268:   if (i != 0) i--;
  9476   00F47E  51C0               	movf	find_volume@i& (0+255),w,b
  9477   00F480  11C1               	iorwf	(find_volume@i+1)& (0+255),w,b
  9478   00F482  B4D8               	btfsc	status,2,c
  9479   00F484  EF46  F07A         	goto	u10831
  9480   00F488  EF48  F07A         	goto	u10830
  9481   00F48C                     u10831:
  9482   00F48C  EF4B  F07A         	goto	l8538
  9483   00F490                     u10830:
  9484   00F490                     
  9485                           ; BSR set to: 0
  9486   00F490  07C0               	decf	find_volume@i& (0+255),f,b
  9487   00F492  A0D8               	btfss	status,0,c
  9488   00F494  07C1               	decf	(find_volume@i+1)& (0+255),f,b
  9489   00F496                     l8538:
  9490                           
  9491                           ; BSR set to: 0
  9492                           ;mcc_generated_files/fatfs/ff.c: 3270:    bsect = br[i];
  9493   00F496  0E8B               	movlw	low find_volume@br
  9494   00F498  6F83               	movwf	??_find_volume& (0+255),b
  9495   00F49A  0E00               	movlw	high find_volume@br
  9496   00F49C  6F84               	movwf	(??_find_volume+1)& (0+255),b
  9497   00F49E  90D8               	bcf	status,0,c
  9498   00F4A0  35C0               	rlcf	find_volume@i& (0+255),w,b
  9499   00F4A2  6ED9               	movwf	fsr2l,c
  9500   00F4A4  35C1               	rlcf	(find_volume@i+1)& (0+255),w,b
  9501   00F4A6  6EDA               	movwf	fsr2h,c
  9502   00F4A8  90D8               	bcf	status,0,c
  9503   00F4AA  36D9               	rlcf	fsr2l,f,c
  9504   00F4AC  36DA               	rlcf	fsr2h,f,c
  9505   00F4AE  5183               	movf	??_find_volume& (0+255),w,b
  9506   00F4B0  26D9               	addwf	fsr2l,f,c
  9507   00F4B2  5184               	movf	(??_find_volume+1)& (0+255),w,b
  9508   00F4B4  22DA               	addwfc	fsr2h,f,c
  9509   00F4B6  CFDE F0BC          	movff	postinc2,find_volume@bsect
  9510   00F4BA  CFDE F0BD          	movff	postinc2,find_volume@bsect+1
  9511   00F4BE  CFDE F0BE          	movff	postinc2,find_volume@bsect+2
  9512   00F4C2  CFDE F0BF          	movff	postinc2,find_volume@bsect+3
  9513   00F4C6                     
  9514                           ; BSR set to: 0
  9515                           ;mcc_generated_files/fatfs/ff.c: 3271:    fmt = bsect ? check_fs(fs, bsect) : 3;
  9516   00F4C6  51BC               	movf	find_volume@bsect& (0+255),w,b
  9517   00F4C8  11BD               	iorwf	(find_volume@bsect+1)& (0+255),w,b
  9518   00F4CA  11BE               	iorwf	(find_volume@bsect+2)& (0+255),w,b
  9519   00F4CC  11BF               	iorwf	(find_volume@bsect+3)& (0+255),w,b
  9520   00F4CE  A4D8               	btfss	status,2,c
  9521   00F4D0  EF6C  F07A         	goto	u10841
  9522   00F4D4  EF6E  F07A         	goto	u10840
  9523   00F4D8                     u10841:
  9524   00F4D8  EF74  F07A         	goto	l8544
  9525   00F4DC                     u10840:
  9526   00F4DC                     
  9527                           ; BSR set to: 0
  9528   00F4DC  0E00               	movlw	0
  9529   00F4DE  6FA0               	movwf	(_find_volume$1231+1)& (0+255),b
  9530   00F4E0  0E03               	movlw	3
  9531   00F4E2  6F9F               	movwf	_find_volume$1231& (0+255),b
  9532   00F4E4  EF87  F07A         	goto	l8546
  9533   00F4E8                     l8544:
  9534                           
  9535                           ; BSR set to: 0
  9536   00F4E8  C0C3  F077         	movff	find_volume@fs,check_fs@fs
  9537   00F4EC  C0C4  F078         	movff	find_volume@fs+1,check_fs@fs+1
  9538   00F4F0  C0BC  F079         	movff	find_volume@bsect,check_fs@sect
  9539   00F4F4  C0BD  F07A         	movff	find_volume@bsect+1,check_fs@sect+1
  9540   00F4F8  C0BE  F07B         	movff	find_volume@bsect+2,check_fs@sect+2
  9541   00F4FC  C0BF  F07C         	movff	find_volume@bsect+3,check_fs@sect+3
  9542   00F500  EC5E  F04B         	call	_check_fs	;wreg free
  9543   00F504  0100               	movlb	0	; () banked
  9544   00F506  6F83               	movwf	??_find_volume& (0+255),b
  9545   00F508  5183               	movf	??_find_volume& (0+255),w,b
  9546   00F50A  6F9F               	movwf	_find_volume$1231& (0+255),b
  9547   00F50C  6BA0               	clrf	(_find_volume$1231+1)& (0+255),b
  9548   00F50E                     l8546:
  9549                           
  9550                           ; BSR set to: 0
  9551                           ;mcc_generated_files/fatfs/ff.c: 3272:   } while (0 == 0 && fmt >= 2 && ++i < 4);
  9552   00F50E  C09F  F0C2         	movff	_find_volume$1231,find_volume@fmt
  9553   00F512                     
  9554                           ; BSR set to: 0
  9555   00F512  0E01               	movlw	1
  9556   00F514  65C2               	cpfsgt	find_volume@fmt& (0+255),b
  9557   00F516  EF8F  F07A         	goto	u10851
  9558   00F51A  EF91  F07A         	goto	u10850
  9559   00F51E                     u10851:
  9560   00F51E  EF9E  F07A         	goto	l8552
  9561   00F522                     u10850:
  9562   00F522                     
  9563                           ; BSR set to: 0
  9564   00F522  4BC0               	infsnz	find_volume@i& (0+255),f,b
  9565   00F524  2BC1               	incf	(find_volume@i+1)& (0+255),f,b
  9566   00F526  51C1               	movf	(find_volume@i+1)& (0+255),w,b
  9567   00F528  E109               	bnz	u10860
  9568   00F52A  0E04               	movlw	4
  9569   00F52C  5DC0               	subwf	find_volume@i& (0+255),w,b
  9570   00F52E  A0D8               	btfss	status,0,c
  9571   00F530  EF9C  F07A         	goto	u10861
  9572   00F534  EF9E  F07A         	goto	u10860
  9573   00F538                     u10861:
  9574   00F538  EF4B  F07A         	goto	l8538
  9575   00F53C                     u10860:
  9576   00F53C                     l8552:
  9577                           
  9578                           ; BSR set to: 0
  9579                           ;mcc_generated_files/fatfs/ff.c: 3274:  if (fmt == 4) return FR_DISK_ERR;
  9580   00F53C  0E04               	movlw	4
  9581   00F53E  19C2               	xorwf	find_volume@fmt& (0+255),w,b
  9582   00F540  A4D8               	btfss	status,2,c
  9583   00F542  EFA5  F07A         	goto	u10871
  9584   00F546  EFA7  F07A         	goto	u10870
  9585   00F54A                     u10871:
  9586   00F54A  EFAA  F07A         	goto	l8558
  9587   00F54E                     u10870:
  9588   00F54E                     
  9589                           ; BSR set to: 0
  9590   00F54E  0E01               	movlw	1
  9591   00F550  EF42  F07F         	goto	l524
  9592   00F554                     l8558:
  9593                           
  9594                           ; BSR set to: 0
  9595                           ;mcc_generated_files/fatfs/ff.c: 3275:  if (fmt >= 2) return FR_NO_FILESYSTEM;
  9596   00F554  0E01               	movlw	1
  9597   00F556  65C2               	cpfsgt	find_volume@fmt& (0+255),b
  9598   00F558  EFB0  F07A         	goto	u10881
  9599   00F55C  EFB2  F07A         	goto	u10880
  9600   00F560                     u10881:
  9601   00F560  EFB5  F07A         	goto	l8564
  9602   00F564                     u10880:
  9603   00F564                     l8560:
  9604   00F564  0E0D               	movlw	13
  9605   00F566  EF42  F07F         	goto	l524
  9606   00F56A                     l8564:
  9607                           
  9608                           ; BSR set to: 0
  9609                           ;mcc_generated_files/fatfs/ff.c: 3326:  {;mcc_generated_files/fatfs/ff.c: 3327:   if (ld
      +                          _word(fs->win + 11) != ((UINT)512)) return FR_NO_FILESYSTEM;
  9610   00F56A  0E3E               	movlw	62
  9611   00F56C  25C3               	addwf	find_volume@fs& (0+255),w,b
  9612   00F56E  6E01               	movwf	ld_word@ptr^0,c
  9613   00F570  0E00               	movlw	0
  9614   00F572  21C4               	addwfc	(find_volume@fs+1)& (0+255),w,b
  9615   00F574  6E02               	movwf	(ld_word@ptr+1)^0,c
  9616   00F576  ECD1  F03E         	call	_ld_word	;wreg free
  9617   00F57A  0E02               	movlw	2
  9618   00F57C  1802               	xorwf	(?_ld_word+1)^0,w,c
  9619   00F57E  1001               	iorwf	?_ld_word^0,w,c
  9620   00F580  B4D8               	btfsc	status,2,c
  9621   00F582  EFC5  F07A         	goto	u10891
  9622   00F586  EFC7  F07A         	goto	u10890
  9623   00F58A                     u10891:
  9624   00F58A  EFC9  F07A         	goto	l8570
  9625   00F58E                     u10890:
  9626   00F58E  EFB2  F07A         	goto	l8560
  9627   00F592                     l8570:
  9628                           
  9629                           ;mcc_generated_files/fatfs/ff.c: 3329:   fasize = ld_word(fs->win + 22);
  9630   00F592  0E49               	movlw	73
  9631   00F594  0100               	movlb	0	; () banked
  9632   00F596  25C3               	addwf	find_volume@fs& (0+255),w,b
  9633   00F598  6E01               	movwf	ld_word@ptr^0,c
  9634   00F59A  0E00               	movlw	0
  9635   00F59C  21C4               	addwfc	(find_volume@fs+1)& (0+255),w,b
  9636   00F59E  6E02               	movwf	(ld_word@ptr+1)^0,c
  9637   00F5A0  ECD1  F03E         	call	_ld_word	;wreg free
  9638   00F5A4  C001  F0B8         	movff	?_ld_word,find_volume@fasize
  9639   00F5A8  C002  F0B9         	movff	?_ld_word+1,find_volume@fasize+1
  9640   00F5AC  0100               	movlb	0	; () banked
  9641   00F5AE  6BBA               	clrf	(find_volume@fasize+2)& (0+255),b
  9642   00F5B0  6BBB               	clrf	(find_volume@fasize+3)& (0+255),b
  9643   00F5B2                     
  9644                           ; BSR set to: 0
  9645                           ;mcc_generated_files/fatfs/ff.c: 3330:   if (fasize == 0) fasize = ld_dword(fs->win + 36
      +                          );
  9646   00F5B2  51B8               	movf	find_volume@fasize& (0+255),w,b
  9647   00F5B4  11B9               	iorwf	(find_volume@fasize+1)& (0+255),w,b
  9648   00F5B6  11BA               	iorwf	(find_volume@fasize+2)& (0+255),w,b
  9649   00F5B8  11BB               	iorwf	(find_volume@fasize+3)& (0+255),w,b
  9650   00F5BA  A4D8               	btfss	status,2,c
  9651   00F5BC  EFE2  F07A         	goto	u10901
  9652   00F5C0  EFE4  F07A         	goto	u10900
  9653   00F5C4                     u10901:
  9654   00F5C4  EFF4  F07A         	goto	l8576
  9655   00F5C8                     u10900:
  9656   00F5C8                     
  9657                           ; BSR set to: 0
  9658   00F5C8  0E57               	movlw	87
  9659   00F5CA  25C3               	addwf	find_volume@fs& (0+255),w,b
  9660   00F5CC  6E01               	movwf	ld_dword@ptr^0,c
  9661   00F5CE  0E00               	movlw	0
  9662   00F5D0  21C4               	addwfc	(find_volume@fs+1)& (0+255),w,b
  9663   00F5D2  6E02               	movwf	(ld_dword@ptr+1)^0,c
  9664   00F5D4  ECF5  F043         	call	_ld_dword	;wreg free
  9665   00F5D8  C001  F0B8         	movff	?_ld_dword,find_volume@fasize
  9666   00F5DC  C002  F0B9         	movff	?_ld_dword+1,find_volume@fasize+1
  9667   00F5E0  C003  F0BA         	movff	?_ld_dword+2,find_volume@fasize+2
  9668   00F5E4  C004  F0BB         	movff	?_ld_dword+3,find_volume@fasize+3
  9669   00F5E8                     l8576:
  9670                           
  9671                           ;mcc_generated_files/fatfs/ff.c: 3331:   fs->fsize = fasize;
  9672   00F5E8  0100               	movlb	0	; () banked
  9673   00F5EA  EE20 F01B          	lfsr	2,27
  9674   00F5EE  51C3               	movf	find_volume@fs& (0+255),w,b
  9675   00F5F0  26D9               	addwf	fsr2l,f,c
  9676   00F5F2  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
  9677   00F5F4  22DA               	addwfc	fsr2h,f,c
  9678   00F5F6  C0B8  FFDE         	movff	find_volume@fasize,postinc2
  9679   00F5FA  C0B9  FFDE         	movff	find_volume@fasize+1,postinc2
  9680   00F5FE  C0BA  FFDE         	movff	find_volume@fasize+2,postinc2
  9681   00F602  C0BB  FFDE         	movff	find_volume@fasize+3,postinc2
  9682   00F606                     
  9683                           ; BSR set to: 0
  9684                           ;mcc_generated_files/fatfs/ff.c: 3333:   fs->n_fats = fs->win[16];
  9685   00F606  EE20 F043          	lfsr	2,67
  9686   00F60A  51C3               	movf	find_volume@fs& (0+255),w,b
  9687   00F60C  26D9               	addwf	fsr2l,f,c
  9688   00F60E  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
  9689   00F610  22DA               	addwfc	fsr2h,f,c
  9690   00F612  EE10 F002          	lfsr	1,2
  9691   00F616  51C3               	movf	find_volume@fs& (0+255),w,b
  9692   00F618  26E1               	addwf	fsr1l,f,c
  9693   00F61A  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
  9694   00F61C  22E2               	addwfc	fsr1h,f,c
  9695   00F61E  CFDF FFE7          	movff	indf2,indf1
  9696   00F622                     
  9697                           ; BSR set to: 0
  9698                           ;mcc_generated_files/fatfs/ff.c: 3334:   if (fs->n_fats != 1 && fs->n_fats != 2) return 
      +                          FR_NO_FILESYSTEM;
  9699   00F622  EE20 F002          	lfsr	2,2
  9700   00F626  51C3               	movf	find_volume@fs& (0+255),w,b
  9701   00F628  26D9               	addwf	fsr2l,f,c
  9702   00F62A  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
  9703   00F62C  22DA               	addwfc	fsr2h,f,c
  9704   00F62E  04DE               	decf	postinc2,w,c
  9705   00F630  B4D8               	btfsc	status,2,c
  9706   00F632  EF1D  F07B         	goto	u10911
  9707   00F636  EF1F  F07B         	goto	u10910
  9708   00F63A                     u10911:
  9709   00F63A  EF30  F07B         	goto	l8588
  9710   00F63E                     u10910:
  9711   00F63E                     
  9712                           ; BSR set to: 0
  9713   00F63E  EE20 F002          	lfsr	2,2
  9714   00F642  51C3               	movf	find_volume@fs& (0+255),w,b
  9715   00F644  26D9               	addwf	fsr2l,f,c
  9716   00F646  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
  9717   00F648  22DA               	addwfc	fsr2h,f,c
  9718   00F64A  0E02               	movlw	2
  9719   00F64C  18DE               	xorwf	postinc2,w,c
  9720   00F64E  B4D8               	btfsc	status,2,c
  9721   00F650  EF2C  F07B         	goto	u10921
  9722   00F654  EF2E  F07B         	goto	u10920
  9723   00F658                     u10921:
  9724   00F658  EF30  F07B         	goto	l8588
  9725   00F65C                     u10920:
  9726   00F65C  EFB2  F07A         	goto	l8560
  9727   00F660                     l8588:
  9728                           
  9729                           ; BSR set to: 0
  9730                           ;mcc_generated_files/fatfs/ff.c: 3335:   fasize *= fs->n_fats;
  9731   00F660  C0B8  F001         	movff	find_volume@fasize,___lmul@multiplier
  9732   00F664  C0B9  F002         	movff	find_volume@fasize+1,___lmul@multiplier+1
  9733   00F668  C0BA  F003         	movff	find_volume@fasize+2,___lmul@multiplier+2
  9734   00F66C  C0BB  F004         	movff	find_volume@fasize+3,___lmul@multiplier+3
  9735   00F670  EE20 F002          	lfsr	2,2
  9736   00F674  51C3               	movf	find_volume@fs& (0+255),w,b
  9737   00F676  26D9               	addwf	fsr2l,f,c
  9738   00F678  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
  9739   00F67A  22DA               	addwfc	fsr2h,f,c
  9740   00F67C  50DF               	movf	indf2,w,c
  9741   00F67E  6F83               	movwf	??_find_volume& (0+255),b
  9742   00F680  5183               	movf	??_find_volume& (0+255),w,b
  9743   00F682  6E05               	movwf	___lmul@multiplicand^0,c
  9744   00F684  6A06               	clrf	(___lmul@multiplicand+1)^0,c
  9745   00F686  6A07               	clrf	(___lmul@multiplicand+2)^0,c
  9746   00F688  6A08               	clrf	(___lmul@multiplicand+3)^0,c
  9747   00F68A  ECB4  F040         	call	___lmul	;wreg free
  9748   00F68E  C001  F0B8         	movff	?___lmul,find_volume@fasize
  9749   00F692  C002  F0B9         	movff	?___lmul+1,find_volume@fasize+1
  9750   00F696  C003  F0BA         	movff	?___lmul+2,find_volume@fasize+2
  9751   00F69A  C004  F0BB         	movff	?___lmul+3,find_volume@fasize+3
  9752   00F69E                     
  9753                           ;mcc_generated_files/fatfs/ff.c: 3337:   fs->csize = fs->win[13];
  9754   00F69E  0100               	movlb	0	; () banked
  9755   00F6A0  EE20 F040          	lfsr	2,64
  9756   00F6A4  51C3               	movf	find_volume@fs& (0+255),w,b
  9757   00F6A6  26D9               	addwf	fsr2l,f,c
  9758   00F6A8  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
  9759   00F6AA  22DA               	addwfc	fsr2h,f,c
  9760   00F6AC  50DF               	movf	indf2,w,c
  9761   00F6AE  6F83               	movwf	??_find_volume& (0+255),b
  9762   00F6B0  6B84               	clrf	(??_find_volume+1)& (0+255),b
  9763   00F6B2  EE20 F009          	lfsr	2,9
  9764   00F6B6  51C3               	movf	find_volume@fs& (0+255),w,b
  9765   00F6B8  26D9               	addwf	fsr2l,f,c
  9766   00F6BA  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
  9767   00F6BC  22DA               	addwfc	fsr2h,f,c
  9768   00F6BE  C083  FFDE         	movff	??_find_volume,postinc2
  9769   00F6C2  C084  FFDD         	movff	??_find_volume+1,postdec2
  9770   00F6C6                     
  9771                           ; BSR set to: 0
  9772                           ;mcc_generated_files/fatfs/ff.c: 3338:   if (fs->csize == 0 || (fs->csize & (fs->csize -
      +                           1))) return FR_NO_FILESYSTEM;
  9773   00F6C6  EE20 F009          	lfsr	2,9
  9774   00F6CA  51C3               	movf	find_volume@fs& (0+255),w,b
  9775   00F6CC  26D9               	addwf	fsr2l,f,c
  9776   00F6CE  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
  9777   00F6D0  22DA               	addwfc	fsr2h,f,c
  9778   00F6D2  50DE               	movf	postinc2,w,c
  9779   00F6D4  10DE               	iorwf	postinc2,w,c
  9780   00F6D6  B4D8               	btfsc	status,2,c
  9781   00F6D8  EF70  F07B         	goto	u10931
  9782   00F6DC  EF72  F07B         	goto	u10930
  9783   00F6E0                     u10931:
  9784   00F6E0  EFB2  F07A         	goto	l8560
  9785   00F6E4                     u10930:
  9786   00F6E4                     
  9787                           ; BSR set to: 0
  9788   00F6E4  EE20 F009          	lfsr	2,9
  9789   00F6E8  51C3               	movf	find_volume@fs& (0+255),w,b
  9790   00F6EA  26D9               	addwf	fsr2l,f,c
  9791   00F6EC  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
  9792   00F6EE  22DA               	addwfc	fsr2h,f,c
  9793   00F6F0  CFDE F083          	movff	postinc2,??_find_volume
  9794   00F6F4  CFDD F084          	movff	postdec2,??_find_volume+1
  9795   00F6F8  EE20 F009          	lfsr	2,9
  9796   00F6FC  51C3               	movf	find_volume@fs& (0+255),w,b
  9797   00F6FE  26D9               	addwf	fsr2l,f,c
  9798   00F700  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
  9799   00F702  22DA               	addwfc	fsr2h,f,c
  9800   00F704  CFDE F085          	movff	postinc2,??_find_volume+2
  9801   00F708  CFDD F086          	movff	postdec2,??_find_volume+3
  9802   00F70C  0EFF               	movlw	255
  9803   00F70E  2585               	addwf	(??_find_volume+2)& (0+255),w,b
  9804   00F710  6F87               	movwf	(??_find_volume+4)& (0+255),b
  9805   00F712  0EFF               	movlw	255
  9806   00F714  2186               	addwfc	(??_find_volume+3)& (0+255),w,b
  9807   00F716  6F88               	movwf	(??_find_volume+5)& (0+255),b
  9808   00F718  5183               	movf	??_find_volume& (0+255),w,b
  9809   00F71A  1587               	andwf	(??_find_volume+4)& (0+255),w,b
  9810   00F71C  6F89               	movwf	(??_find_volume+6)& (0+255),b
  9811   00F71E  5184               	movf	(??_find_volume+1)& (0+255),w,b
  9812   00F720  1588               	andwf	(??_find_volume+5)& (0+255),w,b
  9813   00F722  6F8A               	movwf	(??_find_volume+7)& (0+255),b
  9814   00F724  5189               	movf	(??_find_volume+6)& (0+255),w,b
  9815   00F726  118A               	iorwf	(??_find_volume+7)& (0+255),w,b
  9816   00F728  B4D8               	btfsc	status,2,c
  9817   00F72A  EF99  F07B         	goto	u10941
  9818   00F72E  EF9B  F07B         	goto	u10940
  9819   00F732                     u10941:
  9820   00F732  EF9D  F07B         	goto	l8600
  9821   00F736                     u10940:
  9822   00F736  EFB2  F07A         	goto	l8560
  9823   00F73A                     l8600:
  9824                           
  9825                           ; BSR set to: 0
  9826                           ;mcc_generated_files/fatfs/ff.c: 3340:   fs->n_rootdir = ld_word(fs->win + 17);
  9827   00F73A  0E44               	movlw	68
  9828   00F73C  25C3               	addwf	find_volume@fs& (0+255),w,b
  9829   00F73E  6E01               	movwf	ld_word@ptr^0,c
  9830   00F740  0E00               	movlw	0
  9831   00F742  21C4               	addwfc	(find_volume@fs+1)& (0+255),w,b
  9832   00F744  6E02               	movwf	(ld_word@ptr+1)^0,c
  9833   00F746  ECD1  F03E         	call	_ld_word	;wreg free
  9834   00F74A  0100               	movlb	0	; () banked
  9835   00F74C  EE20 F007          	lfsr	2,7
  9836   00F750  51C3               	movf	find_volume@fs& (0+255),w,b
  9837   00F752  26D9               	addwf	fsr2l,f,c
  9838   00F754  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
  9839   00F756  22DA               	addwfc	fsr2h,f,c
  9840   00F758  C001  FFDE         	movff	?_ld_word,postinc2
  9841   00F75C  C002  FFDD         	movff	?_ld_word+1,postdec2
  9842   00F760                     
  9843                           ; BSR set to: 0
  9844                           ;mcc_generated_files/fatfs/ff.c: 3341:   if (fs->n_rootdir % (((UINT)512) / 32)) return 
      +                          FR_NO_FILESYSTEM;
  9845   00F760  EE20 F007          	lfsr	2,7
  9846   00F764  51C3               	movf	find_volume@fs& (0+255),w,b
  9847   00F766  26D9               	addwf	fsr2l,f,c
  9848   00F768  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
  9849   00F76A  22DA               	addwfc	fsr2h,f,c
  9850   00F76C  CFDE F083          	movff	postinc2,??_find_volume
  9851   00F770  CFDD F084          	movff	postdec2,??_find_volume+1
  9852   00F774  0E0F               	movlw	15
  9853   00F776  1783               	andwf	??_find_volume& (0+255),f,b
  9854   00F778  0E00               	movlw	0
  9855   00F77A  1784               	andwf	(??_find_volume+1)& (0+255),f,b
  9856   00F77C  5183               	movf	??_find_volume& (0+255),w,b
  9857   00F77E  1184               	iorwf	(??_find_volume+1)& (0+255),w,b
  9858   00F780  B4D8               	btfsc	status,2,c
  9859   00F782  EFC5  F07B         	goto	u10951
  9860   00F786  EFC7  F07B         	goto	u10950
  9861   00F78A                     u10951:
  9862   00F78A  EFC9  F07B         	goto	l8608
  9863   00F78E                     u10950:
  9864   00F78E  EFB2  F07A         	goto	l8560
  9865   00F792                     l8608:
  9866                           
  9867                           ; BSR set to: 0
  9868                           ;mcc_generated_files/fatfs/ff.c: 3343:   tsect = ld_word(fs->win + 19);
  9869   00F792  0E46               	movlw	70
  9870   00F794  25C3               	addwf	find_volume@fs& (0+255),w,b
  9871   00F796  6E01               	movwf	ld_word@ptr^0,c
  9872   00F798  0E00               	movlw	0
  9873   00F79A  21C4               	addwfc	(find_volume@fs+1)& (0+255),w,b
  9874   00F79C  6E02               	movwf	(ld_word@ptr+1)^0,c
  9875   00F79E  ECD1  F03E         	call	_ld_word	;wreg free
  9876   00F7A2  C001  F0AF         	movff	?_ld_word,find_volume@tsect
  9877   00F7A6  C002  F0B0         	movff	?_ld_word+1,find_volume@tsect+1
  9878   00F7AA  0100               	movlb	0	; () banked
  9879   00F7AC  6BB1               	clrf	(find_volume@tsect+2)& (0+255),b
  9880   00F7AE  6BB2               	clrf	(find_volume@tsect+3)& (0+255),b
  9881   00F7B0                     
  9882                           ; BSR set to: 0
  9883                           ;mcc_generated_files/fatfs/ff.c: 3344:   if (tsect == 0) tsect = ld_dword(fs->win + 32);
  9884   00F7B0  51AF               	movf	find_volume@tsect& (0+255),w,b
  9885   00F7B2  11B0               	iorwf	(find_volume@tsect+1)& (0+255),w,b
  9886   00F7B4  11B1               	iorwf	(find_volume@tsect+2)& (0+255),w,b
  9887   00F7B6  11B2               	iorwf	(find_volume@tsect+3)& (0+255),w,b
  9888   00F7B8  A4D8               	btfss	status,2,c
  9889   00F7BA  EFE1  F07B         	goto	u10961
  9890   00F7BE  EFE3  F07B         	goto	u10960
  9891   00F7C2                     u10961:
  9892   00F7C2  EFF3  F07B         	goto	l558
  9893   00F7C6                     u10960:
  9894   00F7C6                     
  9895                           ; BSR set to: 0
  9896   00F7C6  0E53               	movlw	83
  9897   00F7C8  25C3               	addwf	find_volume@fs& (0+255),w,b
  9898   00F7CA  6E01               	movwf	ld_dword@ptr^0,c
  9899   00F7CC  0E00               	movlw	0
  9900   00F7CE  21C4               	addwfc	(find_volume@fs+1)& (0+255),w,b
  9901   00F7D0  6E02               	movwf	(ld_dword@ptr+1)^0,c
  9902   00F7D2  ECF5  F043         	call	_ld_dword	;wreg free
  9903   00F7D6  C001  F0AF         	movff	?_ld_dword,find_volume@tsect
  9904   00F7DA  C002  F0B0         	movff	?_ld_dword+1,find_volume@tsect+1
  9905   00F7DE  C003  F0B1         	movff	?_ld_dword+2,find_volume@tsect+2
  9906   00F7E2  C004  F0B2         	movff	?_ld_dword+3,find_volume@tsect+3
  9907   00F7E6                     l558:
  9908                           
  9909                           ;mcc_generated_files/fatfs/ff.c: 3346:   nrsv = ld_word(fs->win + 14);
  9910   00F7E6  0E41               	movlw	65
  9911   00F7E8  0100               	movlb	0	; () banked
  9912   00F7EA  25C3               	addwf	find_volume@fs& (0+255),w,b
  9913   00F7EC  6E01               	movwf	ld_word@ptr^0,c
  9914   00F7EE  0E00               	movlw	0
  9915   00F7F0  21C4               	addwfc	(find_volume@fs+1)& (0+255),w,b
  9916   00F7F2  6E02               	movwf	(ld_word@ptr+1)^0,c
  9917   00F7F4  ECD1  F03E         	call	_ld_word	;wreg free
  9918   00F7F8  C001  F0AD         	movff	?_ld_word,find_volume@nrsv
  9919   00F7FC  C002  F0AE         	movff	?_ld_word+1,find_volume@nrsv+1
  9920   00F800                     
  9921                           ;mcc_generated_files/fatfs/ff.c: 3347:   if (nrsv == 0) return FR_NO_FILESYSTEM;
  9922   00F800  0100               	movlb	0	; () banked
  9923   00F802  51AD               	movf	find_volume@nrsv& (0+255),w,b
  9924   00F804  11AE               	iorwf	(find_volume@nrsv+1)& (0+255),w,b
  9925   00F806  A4D8               	btfss	status,2,c
  9926   00F808  EF08  F07C         	goto	u10971
  9927   00F80C  EF0A  F07C         	goto	u10970
  9928   00F810                     u10971:
  9929   00F810  EF0C  F07C         	goto	l8620
  9930   00F814                     u10970:
  9931   00F814  EFB2  F07A         	goto	l8560
  9932   00F818                     l8620:
  9933                           
  9934                           ; BSR set to: 0
  9935                           ;mcc_generated_files/fatfs/ff.c: 3350:   sysect = nrsv + fasize + fs->n_rootdir / (((UIN
      +                          T)512) / 32);
  9936   00F818  EE20 F007          	lfsr	2,7
  9937   00F81C  51C3               	movf	find_volume@fs& (0+255),w,b
  9938   00F81E  26D9               	addwf	fsr2l,f,c
  9939   00F820  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
  9940   00F822  22DA               	addwfc	fsr2h,f,c
  9941   00F824  CFDE F083          	movff	postinc2,??_find_volume
  9942   00F828  CFDD F084          	movff	postdec2,??_find_volume+1
  9943   00F82C  0E04               	movlw	4
  9944   00F82E  6F85               	movwf	(??_find_volume+2)& (0+255),b
  9945   00F830                     u10985:
  9946   00F830  90D8               	bcf	status,0,c
  9947   00F832  3384               	rrcf	(??_find_volume+1)& (0+255),f,b
  9948   00F834  3383               	rrcf	??_find_volume& (0+255),f,b
  9949   00F836  2F85               	decfsz	(??_find_volume+2)& (0+255),f,b
  9950   00F838  EF18  F07C         	goto	u10985
  9951   00F83C  51AD               	movf	find_volume@nrsv& (0+255),w,b
  9952   00F83E  2583               	addwf	??_find_volume& (0+255),w,b
  9953   00F840  6F86               	movwf	(??_find_volume+3)& (0+255),b
  9954   00F842  51AE               	movf	(find_volume@nrsv+1)& (0+255),w,b
  9955   00F844  2184               	addwfc	(??_find_volume+1)& (0+255),w,b
  9956   00F846  6F87               	movwf	(??_find_volume+4)& (0+255),b
  9957   00F848  6B88               	clrf	(??_find_volume+5)& (0+255),b
  9958   00F84A  B0D8               	btfsc	status,0,c
  9959   00F84C  2B88               	incf	(??_find_volume+5)& (0+255),f,b
  9960   00F84E  6B89               	clrf	(??_find_volume+6)& (0+255),b
  9961   00F850  51B8               	movf	find_volume@fasize& (0+255),w,b
  9962   00F852  2586               	addwf	(??_find_volume+3)& (0+255),w,b
  9963   00F854  6FA7               	movwf	find_volume@sysect& (0+255),b
  9964   00F856  51B9               	movf	(find_volume@fasize+1)& (0+255),w,b
  9965   00F858  2187               	addwfc	(??_find_volume+4)& (0+255),w,b
  9966   00F85A  6FA8               	movwf	(find_volume@sysect+1)& (0+255),b
  9967   00F85C  51BA               	movf	(find_volume@fasize+2)& (0+255),w,b
  9968   00F85E  2188               	addwfc	(??_find_volume+5)& (0+255),w,b
  9969   00F860  6FA9               	movwf	(find_volume@sysect+2)& (0+255),b
  9970   00F862  51BB               	movf	(find_volume@fasize+3)& (0+255),w,b
  9971   00F864  2189               	addwfc	(??_find_volume+6)& (0+255),w,b
  9972   00F866  6FAA               	movwf	(find_volume@sysect+3)& (0+255),b
  9973   00F868                     
  9974                           ; BSR set to: 0
  9975                           ;mcc_generated_files/fatfs/ff.c: 3351:   if (tsect < sysect) return FR_NO_FILESYSTEM;
  9976   00F868  51A7               	movf	find_volume@sysect& (0+255),w,b
  9977   00F86A  5DAF               	subwf	find_volume@tsect& (0+255),w,b
  9978   00F86C  51A8               	movf	(find_volume@sysect+1)& (0+255),w,b
  9979   00F86E  59B0               	subwfb	(find_volume@tsect+1)& (0+255),w,b
  9980   00F870  51A9               	movf	(find_volume@sysect+2)& (0+255),w,b
  9981   00F872  59B1               	subwfb	(find_volume@tsect+2)& (0+255),w,b
  9982   00F874  51AA               	movf	(find_volume@sysect+3)& (0+255),w,b
  9983   00F876  59B2               	subwfb	(find_volume@tsect+3)& (0+255),w,b
  9984   00F878  B0D8               	btfsc	status,0,c
  9985   00F87A  EF41  F07C         	goto	u10991
  9986   00F87E  EF43  F07C         	goto	u10990
  9987   00F882                     u10991:
  9988   00F882  EF45  F07C         	goto	l8628
  9989   00F886                     u10990:
  9990   00F886  EFB2  F07A         	goto	l8560
  9991   00F88A                     l8628:
  9992                           
  9993                           ; BSR set to: 0
  9994                           ;mcc_generated_files/fatfs/ff.c: 3352:   nclst = (tsect - sysect) / fs->csize;
  9995   00F88A  51A7               	movf	find_volume@sysect& (0+255),w,b
  9996   00F88C  5DAF               	subwf	find_volume@tsect& (0+255),w,b
  9997   00F88E  6E01               	movwf	___lldiv@dividend^0,c
  9998   00F890  51A8               	movf	(find_volume@sysect+1)& (0+255),w,b
  9999   00F892  59B0               	subwfb	(find_volume@tsect+1)& (0+255),w,b
 10000   00F894  6E02               	movwf	(___lldiv@dividend+1)^0,c
 10001   00F896  51A9               	movf	(find_volume@sysect+2)& (0+255),w,b
 10002   00F898  59B1               	subwfb	(find_volume@tsect+2)& (0+255),w,b
 10003   00F89A  6E03               	movwf	(___lldiv@dividend+2)^0,c
 10004   00F89C  51AA               	movf	(find_volume@sysect+3)& (0+255),w,b
 10005   00F89E  59B2               	subwfb	(find_volume@tsect+3)& (0+255),w,b
 10006   00F8A0  6E04               	movwf	(___lldiv@dividend+3)^0,c
 10007   00F8A2  EE20 F009          	lfsr	2,9
 10008   00F8A6  51C3               	movf	find_volume@fs& (0+255),w,b
 10009   00F8A8  26D9               	addwf	fsr2l,f,c
 10010   00F8AA  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 10011   00F8AC  22DA               	addwfc	fsr2h,f,c
 10012   00F8AE  CFDE F083          	movff	postinc2,??_find_volume
 10013   00F8B2  CFDD F084          	movff	postdec2,??_find_volume+1
 10014   00F8B6  C083  F005         	movff	??_find_volume,___lldiv@divisor
 10015   00F8BA  C084  F006         	movff	??_find_volume+1,___lldiv@divisor+1
 10016   00F8BE  6A07               	clrf	(___lldiv@divisor+2)^0,c
 10017   00F8C0  6A08               	clrf	(___lldiv@divisor+3)^0,c
 10018   00F8C2  EC98  F042         	call	___lldiv	;wreg free
 10019   00F8C6  C001  F0B4         	movff	?___lldiv,find_volume@nclst
 10020   00F8CA  C002  F0B5         	movff	?___lldiv+1,find_volume@nclst+1
 10021   00F8CE  C003  F0B6         	movff	?___lldiv+2,find_volume@nclst+2
 10022   00F8D2  C004  F0B7         	movff	?___lldiv+3,find_volume@nclst+3
 10023   00F8D6                     
 10024                           ;mcc_generated_files/fatfs/ff.c: 3353:   if (nclst == 0) return FR_NO_FILESYSTEM;
 10025   00F8D6  0100               	movlb	0	; () banked
 10026   00F8D8  51B4               	movf	find_volume@nclst& (0+255),w,b
 10027   00F8DA  11B5               	iorwf	(find_volume@nclst+1)& (0+255),w,b
 10028   00F8DC  11B6               	iorwf	(find_volume@nclst+2)& (0+255),w,b
 10029   00F8DE  11B7               	iorwf	(find_volume@nclst+3)& (0+255),w,b
 10030   00F8E0  A4D8               	btfss	status,2,c
 10031   00F8E2  EF75  F07C         	goto	u11001
 10032   00F8E6  EF77  F07C         	goto	u11000
 10033   00F8EA                     u11001:
 10034   00F8EA  EF79  F07C         	goto	l8636
 10035   00F8EE                     u11000:
 10036   00F8EE  EFB2  F07A         	goto	l8560
 10037   00F8F2                     l8636:
 10038                           
 10039                           ; BSR set to: 0
 10040                           ;mcc_generated_files/fatfs/ff.c: 3354:   fmt = 0;
 10041   00F8F2  0E00               	movlw	0
 10042   00F8F4  6FC2               	movwf	find_volume@fmt& (0+255),b
 10043   00F8F6                     
 10044                           ; BSR set to: 0
 10045                           ;mcc_generated_files/fatfs/ff.c: 3355:   if (nclst <= 0x0FFFFFF5) fmt = 3;
 10046   00F8F6  0EF6               	movlw	246
 10047   00F8F8  5DB4               	subwf	find_volume@nclst& (0+255),w,b
 10048   00F8FA  0EFF               	movlw	255
 10049   00F8FC  59B5               	subwfb	(find_volume@nclst+1)& (0+255),w,b
 10050   00F8FE  0EFF               	movlw	255
 10051   00F900  59B6               	subwfb	(find_volume@nclst+2)& (0+255),w,b
 10052   00F902  0E0F               	movlw	15
 10053   00F904  59B7               	subwfb	(find_volume@nclst+3)& (0+255),w,b
 10054   00F906  B0D8               	btfsc	status,0,c
 10055   00F908  EF88  F07C         	goto	u11011
 10056   00F90C  EF8A  F07C         	goto	u11010
 10057   00F910                     u11011:
 10058   00F910  EF8C  F07C         	goto	l8642
 10059   00F914                     u11010:
 10060   00F914                     
 10061                           ; BSR set to: 0
 10062   00F914  0E03               	movlw	3
 10063   00F916  6FC2               	movwf	find_volume@fmt& (0+255),b
 10064   00F918                     l8642:
 10065                           
 10066                           ; BSR set to: 0
 10067                           ;mcc_generated_files/fatfs/ff.c: 3356:   if (nclst <= 0xFFF5) fmt = 2;
 10068   00F918  51B7               	movf	(find_volume@nclst+3)& (0+255),w,b
 10069   00F91A  11B6               	iorwf	(find_volume@nclst+2)& (0+255),w,b
 10070   00F91C  E109               	bnz	u11021
 10071   00F91E  0EF6               	movlw	246
 10072   00F920  5DB4               	subwf	find_volume@nclst& (0+255),w,b
 10073   00F922  0EFF               	movlw	255
 10074   00F924  59B5               	subwfb	(find_volume@nclst+1)& (0+255),w,b
 10075   00F926  B0D8               	btfsc	status,0,c
 10076   00F928  EF98  F07C         	goto	u11021
 10077   00F92C  EF9A  F07C         	goto	u11020
 10078   00F930                     u11021:
 10079   00F930  EF9C  F07C         	goto	l8646
 10080   00F934                     u11020:
 10081   00F934                     
 10082                           ; BSR set to: 0
 10083   00F934  0E02               	movlw	2
 10084   00F936  6FC2               	movwf	find_volume@fmt& (0+255),b
 10085   00F938                     l8646:
 10086                           
 10087                           ; BSR set to: 0
 10088                           ;mcc_generated_files/fatfs/ff.c: 3357:   if (nclst <= 0xFF5) fmt = 1;
 10089   00F938  51B7               	movf	(find_volume@nclst+3)& (0+255),w,b
 10090   00F93A  11B6               	iorwf	(find_volume@nclst+2)& (0+255),w,b
 10091   00F93C  E109               	bnz	u11031
 10092   00F93E  0EF6               	movlw	246
 10093   00F940  5DB4               	subwf	find_volume@nclst& (0+255),w,b
 10094   00F942  0E0F               	movlw	15
 10095   00F944  59B5               	subwfb	(find_volume@nclst+1)& (0+255),w,b
 10096   00F946  B0D8               	btfsc	status,0,c
 10097   00F948  EFA8  F07C         	goto	u11031
 10098   00F94C  EFAA  F07C         	goto	u11030
 10099   00F950                     u11031:
 10100   00F950  EFAC  F07C         	goto	l564
 10101   00F954                     u11030:
 10102   00F954                     
 10103                           ; BSR set to: 0
 10104   00F954  0E01               	movlw	1
 10105   00F956  6FC2               	movwf	find_volume@fmt& (0+255),b
 10106   00F958                     l564:
 10107                           
 10108                           ; BSR set to: 0
 10109                           ;mcc_generated_files/fatfs/ff.c: 3358:   if (fmt == 0) return FR_NO_FILESYSTEM;
 10110   00F958  51C2               	movf	find_volume@fmt& (0+255),w,b
 10111   00F95A  A4D8               	btfss	status,2,c
 10112   00F95C  EFB2  F07C         	goto	u11041
 10113   00F960  EFB4  F07C         	goto	u11040
 10114   00F964                     u11041:
 10115   00F964  EFB6  F07C         	goto	l8654
 10116   00F968                     u11040:
 10117   00F968  EFB2  F07A         	goto	l8560
 10118   00F96C                     l8654:
 10119                           
 10120                           ; BSR set to: 0
 10121                           ;mcc_generated_files/fatfs/ff.c: 3361:   fs->n_fatent = nclst + 2;
 10122   00F96C  0E02               	movlw	2
 10123   00F96E  25B4               	addwf	find_volume@nclst& (0+255),w,b
 10124   00F970  6F83               	movwf	??_find_volume& (0+255),b
 10125   00F972  0E00               	movlw	0
 10126   00F974  21B5               	addwfc	(find_volume@nclst+1)& (0+255),w,b
 10127   00F976  6F84               	movwf	(??_find_volume+1)& (0+255),b
 10128   00F978  0E00               	movlw	0
 10129   00F97A  21B6               	addwfc	(find_volume@nclst+2)& (0+255),w,b
 10130   00F97C  6F85               	movwf	(??_find_volume+2)& (0+255),b
 10131   00F97E  0E00               	movlw	0
 10132   00F980  21B7               	addwfc	(find_volume@nclst+3)& (0+255),w,b
 10133   00F982  6F86               	movwf	(??_find_volume+3)& (0+255),b
 10134   00F984  EE20 F017          	lfsr	2,23
 10135   00F988  51C3               	movf	find_volume@fs& (0+255),w,b
 10136   00F98A  26D9               	addwf	fsr2l,f,c
 10137   00F98C  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 10138   00F98E  22DA               	addwfc	fsr2h,f,c
 10139   00F990  C083  FFDE         	movff	??_find_volume,postinc2
 10140   00F994  C084  FFDE         	movff	??_find_volume+1,postinc2
 10141   00F998  C085  FFDE         	movff	??_find_volume+2,postinc2
 10142   00F99C  C086  FFDE         	movff	??_find_volume+3,postinc2
 10143                           
 10144                           ;mcc_generated_files/fatfs/ff.c: 3362:   fs->volbase = bsect;
 10145   00F9A0  EE20 F01F          	lfsr	2,31
 10146   00F9A4  51C3               	movf	find_volume@fs& (0+255),w,b
 10147   00F9A6  26D9               	addwf	fsr2l,f,c
 10148   00F9A8  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 10149   00F9AA  22DA               	addwfc	fsr2h,f,c
 10150   00F9AC  C0BC  FFDE         	movff	find_volume@bsect,postinc2
 10151   00F9B0  C0BD  FFDE         	movff	find_volume@bsect+1,postinc2
 10152   00F9B4  C0BE  FFDE         	movff	find_volume@bsect+2,postinc2
 10153   00F9B8  C0BF  FFDE         	movff	find_volume@bsect+3,postinc2
 10154                           
 10155                           ;mcc_generated_files/fatfs/ff.c: 3363:   fs->fatbase = bsect + nrsv;
 10156   00F9BC  51AD               	movf	find_volume@nrsv& (0+255),w,b
 10157   00F9BE  25BC               	addwf	find_volume@bsect& (0+255),w,b
 10158   00F9C0  6F83               	movwf	??_find_volume& (0+255),b
 10159   00F9C2  51AE               	movf	(find_volume@nrsv+1)& (0+255),w,b
 10160   00F9C4  21BD               	addwfc	(find_volume@bsect+1)& (0+255),w,b
 10161   00F9C6  6F84               	movwf	(??_find_volume+1)& (0+255),b
 10162   00F9C8  0E00               	movlw	0
 10163   00F9CA  21BE               	addwfc	(find_volume@bsect+2)& (0+255),w,b
 10164   00F9CC  6F85               	movwf	(??_find_volume+2)& (0+255),b
 10165   00F9CE  0E00               	movlw	0
 10166   00F9D0  21BF               	addwfc	(find_volume@bsect+3)& (0+255),w,b
 10167   00F9D2  6F86               	movwf	(??_find_volume+3)& (0+255),b
 10168   00F9D4  EE20 F023          	lfsr	2,35
 10169   00F9D8  51C3               	movf	find_volume@fs& (0+255),w,b
 10170   00F9DA  26D9               	addwf	fsr2l,f,c
 10171   00F9DC  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 10172   00F9DE  22DA               	addwfc	fsr2h,f,c
 10173   00F9E0  C083  FFDE         	movff	??_find_volume,postinc2
 10174   00F9E4  C084  FFDE         	movff	??_find_volume+1,postinc2
 10175   00F9E8  C085  FFDE         	movff	??_find_volume+2,postinc2
 10176   00F9EC  C086  FFDE         	movff	??_find_volume+3,postinc2
 10177                           
 10178                           ;mcc_generated_files/fatfs/ff.c: 3364:   fs->database = bsect + sysect;
 10179   00F9F0  51A7               	movf	find_volume@sysect& (0+255),w,b
 10180   00F9F2  25BC               	addwf	find_volume@bsect& (0+255),w,b
 10181   00F9F4  6F83               	movwf	??_find_volume& (0+255),b
 10182   00F9F6  51A8               	movf	(find_volume@sysect+1)& (0+255),w,b
 10183   00F9F8  21BD               	addwfc	(find_volume@bsect+1)& (0+255),w,b
 10184   00F9FA  6F84               	movwf	(??_find_volume+1)& (0+255),b
 10185   00F9FC  51A9               	movf	(find_volume@sysect+2)& (0+255),w,b
 10186   00F9FE  21BE               	addwfc	(find_volume@bsect+2)& (0+255),w,b
 10187   00FA00  6F85               	movwf	(??_find_volume+2)& (0+255),b
 10188   00FA02  51AA               	movf	(find_volume@sysect+3)& (0+255),w,b
 10189   00FA04  21BF               	addwfc	(find_volume@bsect+3)& (0+255),w,b
 10190   00FA06  6F86               	movwf	(??_find_volume+3)& (0+255),b
 10191   00FA08  EE20 F02B          	lfsr	2,43
 10192   00FA0C  51C3               	movf	find_volume@fs& (0+255),w,b
 10193   00FA0E  26D9               	addwf	fsr2l,f,c
 10194   00FA10  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 10195   00FA12  22DA               	addwfc	fsr2h,f,c
 10196   00FA14  C083  FFDE         	movff	??_find_volume,postinc2
 10197   00FA18  C084  FFDE         	movff	??_find_volume+1,postinc2
 10198   00FA1C  C085  FFDE         	movff	??_find_volume+2,postinc2
 10199   00FA20  C086  FFDE         	movff	??_find_volume+3,postinc2
 10200   00FA24                     
 10201                           ; BSR set to: 0
 10202                           ;mcc_generated_files/fatfs/ff.c: 3365:   if (fmt == 3) {
 10203   00FA24  0E03               	movlw	3
 10204   00FA26  19C2               	xorwf	find_volume@fmt& (0+255),w,b
 10205   00FA28  A4D8               	btfss	status,2,c
 10206   00FA2A  EF19  F07D         	goto	u11051
 10207   00FA2E  EF1B  F07D         	goto	u11050
 10208   00FA32                     u11051:
 10209   00FA32  EF78  F07D         	goto	l8674
 10210   00FA36                     u11050:
 10211   00FA36                     
 10212                           ; BSR set to: 0
 10213                           ;mcc_generated_files/fatfs/ff.c: 3366:    if (ld_word(fs->win + 42) != 0) return FR_NO_F
      +                          ILESYSTEM;
 10214   00FA36  0E5D               	movlw	93
 10215   00FA38  25C3               	addwf	find_volume@fs& (0+255),w,b
 10216   00FA3A  6E01               	movwf	ld_word@ptr^0,c
 10217   00FA3C  0E00               	movlw	0
 10218   00FA3E  21C4               	addwfc	(find_volume@fs+1)& (0+255),w,b
 10219   00FA40  6E02               	movwf	(ld_word@ptr+1)^0,c
 10220   00FA42  ECD1  F03E         	call	_ld_word	;wreg free
 10221   00FA46  5001               	movf	?_ld_word^0,w,c
 10222   00FA48  1002               	iorwf	(?_ld_word+1)^0,w,c
 10223   00FA4A  B4D8               	btfsc	status,2,c
 10224   00FA4C  EF2A  F07D         	goto	u11061
 10225   00FA50  EF2C  F07D         	goto	u11060
 10226   00FA54                     u11061:
 10227   00FA54  EF2E  F07D         	goto	l8664
 10228   00FA58                     u11060:
 10229   00FA58  EFB2  F07A         	goto	l8560
 10230   00FA5C                     l8664:
 10231                           
 10232                           ;mcc_generated_files/fatfs/ff.c: 3367:    if (fs->n_rootdir != 0) return FR_NO_FILESYSTE
      +                          M;
 10233   00FA5C  0100               	movlb	0	; () banked
 10234   00FA5E  EE20 F007          	lfsr	2,7
 10235   00FA62  51C3               	movf	find_volume@fs& (0+255),w,b
 10236   00FA64  26D9               	addwf	fsr2l,f,c
 10237   00FA66  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 10238   00FA68  22DA               	addwfc	fsr2h,f,c
 10239   00FA6A  50DE               	movf	postinc2,w,c
 10240   00FA6C  10DE               	iorwf	postinc2,w,c
 10241   00FA6E  B4D8               	btfsc	status,2,c
 10242   00FA70  EF3C  F07D         	goto	u11071
 10243   00FA74  EF3E  F07D         	goto	u11070
 10244   00FA78                     u11071:
 10245   00FA78  EF40  F07D         	goto	l8670
 10246   00FA7C                     u11070:
 10247   00FA7C  EFB2  F07A         	goto	l8560
 10248   00FA80                     l8670:
 10249                           
 10250                           ; BSR set to: 0
 10251                           ;mcc_generated_files/fatfs/ff.c: 3368:    fs->dirbase = ld_dword(fs->win + 44);
 10252   00FA80  0E5F               	movlw	95
 10253   00FA82  25C3               	addwf	find_volume@fs& (0+255),w,b
 10254   00FA84  6E01               	movwf	ld_dword@ptr^0,c
 10255   00FA86  0E00               	movlw	0
 10256   00FA88  21C4               	addwfc	(find_volume@fs+1)& (0+255),w,b
 10257   00FA8A  6E02               	movwf	(ld_dword@ptr+1)^0,c
 10258   00FA8C  ECF5  F043         	call	_ld_dword	;wreg free
 10259   00FA90  0100               	movlb	0	; () banked
 10260   00FA92  EE20 F027          	lfsr	2,39
 10261   00FA96  51C3               	movf	find_volume@fs& (0+255),w,b
 10262   00FA98  26D9               	addwf	fsr2l,f,c
 10263   00FA9A  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 10264   00FA9C  22DA               	addwfc	fsr2h,f,c
 10265   00FA9E  C001  FFDE         	movff	?_ld_dword,postinc2
 10266   00FAA2  C002  FFDE         	movff	?_ld_dword+1,postinc2
 10267   00FAA6  C003  FFDE         	movff	?_ld_dword+2,postinc2
 10268   00FAAA  C004  FFDE         	movff	?_ld_dword+3,postinc2
 10269   00FAAE                     
 10270                           ; BSR set to: 0
 10271                           ;mcc_generated_files/fatfs/ff.c: 3369:    szbfat = fs->n_fatent * 4;
 10272   00FAAE  EE20 F017          	lfsr	2,23
 10273   00FAB2  51C3               	movf	find_volume@fs& (0+255),w,b
 10274   00FAB4  26D9               	addwf	fsr2l,f,c
 10275   00FAB6  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 10276   00FAB8  22DA               	addwfc	fsr2h,f,c
 10277   00FABA  CFDE F083          	movff	postinc2,??_find_volume
 10278   00FABE  CFDE F084          	movff	postinc2,??_find_volume+1
 10279   00FAC2  CFDE F085          	movff	postinc2,??_find_volume+2
 10280   00FAC6  CFDE F086          	movff	postinc2,??_find_volume+3
 10281   00FACA  0E02               	movlw	2
 10282   00FACC                     u11085:
 10283   00FACC  90D8               	bcf	status,0,c
 10284   00FACE  3783               	rlcf	??_find_volume& (0+255),f,b
 10285   00FAD0  3784               	rlcf	(??_find_volume+1)& (0+255),f,b
 10286   00FAD2  3785               	rlcf	(??_find_volume+2)& (0+255),f,b
 10287   00FAD4  3786               	rlcf	(??_find_volume+3)& (0+255),f,b
 10288   00FAD6  2EE8               	decfsz	wreg,f,c
 10289   00FAD8  EF66  F07D         	goto	u11085
 10290   00FADC  C083  F0A1         	movff	??_find_volume,find_volume@szbfat
 10291   00FAE0  C084  F0A2         	movff	??_find_volume+1,find_volume@szbfat+1
 10292   00FAE4  C085  F0A3         	movff	??_find_volume+2,find_volume@szbfat+2
 10293   00FAE8  C086  F0A4         	movff	??_find_volume+3,find_volume@szbfat+3
 10294                           
 10295                           ;mcc_generated_files/fatfs/ff.c: 3370:   } else {
 10296   00FAEC  EF17  F07E         	goto	l569
 10297   00FAF0                     l8674:
 10298                           
 10299                           ; BSR set to: 0
 10300                           ;mcc_generated_files/fatfs/ff.c: 3371:    if (fs->n_rootdir == 0) return FR_NO_FILESYSTE
      +                          M;
 10301   00FAF0  EE20 F007          	lfsr	2,7
 10302   00FAF4  51C3               	movf	find_volume@fs& (0+255),w,b
 10303   00FAF6  26D9               	addwf	fsr2l,f,c
 10304   00FAF8  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 10305   00FAFA  22DA               	addwfc	fsr2h,f,c
 10306   00FAFC  50DE               	movf	postinc2,w,c
 10307   00FAFE  10DE               	iorwf	postinc2,w,c
 10308   00FB00  A4D8               	btfss	status,2,c
 10309   00FB02  EF85  F07D         	goto	u11091
 10310   00FB06  EF87  F07D         	goto	u11090
 10311   00FB0A                     u11091:
 10312   00FB0A  EF89  F07D         	goto	l8680
 10313   00FB0E                     u11090:
 10314   00FB0E  EFB2  F07A         	goto	l8560
 10315   00FB12                     l8680:
 10316                           
 10317                           ; BSR set to: 0
 10318                           ;mcc_generated_files/fatfs/ff.c: 3372:    fs->dirbase = fs->fatbase + fasize;
 10319   00FB12  EE20 F023          	lfsr	2,35
 10320   00FB16  51C3               	movf	find_volume@fs& (0+255),w,b
 10321   00FB18  26D9               	addwf	fsr2l,f,c
 10322   00FB1A  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 10323   00FB1C  22DA               	addwfc	fsr2h,f,c
 10324   00FB1E  CFDE F083          	movff	postinc2,??_find_volume
 10325   00FB22  CFDE F084          	movff	postinc2,??_find_volume+1
 10326   00FB26  CFDE F085          	movff	postinc2,??_find_volume+2
 10327   00FB2A  CFDE F086          	movff	postinc2,??_find_volume+3
 10328   00FB2E  51B8               	movf	find_volume@fasize& (0+255),w,b
 10329   00FB30  2583               	addwf	??_find_volume& (0+255),w,b
 10330   00FB32  6F87               	movwf	(??_find_volume+4)& (0+255),b
 10331   00FB34  51B9               	movf	(find_volume@fasize+1)& (0+255),w,b
 10332   00FB36  2184               	addwfc	(??_find_volume+1)& (0+255),w,b
 10333   00FB38  6F88               	movwf	(??_find_volume+5)& (0+255),b
 10334   00FB3A  51BA               	movf	(find_volume@fasize+2)& (0+255),w,b
 10335   00FB3C  2185               	addwfc	(??_find_volume+2)& (0+255),w,b
 10336   00FB3E  6F89               	movwf	(??_find_volume+6)& (0+255),b
 10337   00FB40  51BB               	movf	(find_volume@fasize+3)& (0+255),w,b
 10338   00FB42  2186               	addwfc	(??_find_volume+3)& (0+255),w,b
 10339   00FB44  6F8A               	movwf	(??_find_volume+7)& (0+255),b
 10340   00FB46  EE20 F027          	lfsr	2,39
 10341   00FB4A  51C3               	movf	find_volume@fs& (0+255),w,b
 10342   00FB4C  26D9               	addwf	fsr2l,f,c
 10343   00FB4E  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 10344   00FB50  22DA               	addwfc	fsr2h,f,c
 10345   00FB52  C087  FFDE         	movff	??_find_volume+4,postinc2
 10346   00FB56  C088  FFDE         	movff	??_find_volume+5,postinc2
 10347   00FB5A  C089  FFDE         	movff	??_find_volume+6,postinc2
 10348   00FB5E  C08A  FFDE         	movff	??_find_volume+7,postinc2
 10349   00FB62                     
 10350                           ; BSR set to: 0
 10351                           ;mcc_generated_files/fatfs/ff.c: 3373:    szbfat = (fmt == 2) ?
 10352   00FB62  0E02               	movlw	2
 10353   00FB64  19C2               	xorwf	find_volume@fmt& (0+255),w,b
 10354   00FB66  B4D8               	btfsc	status,2,c
 10355   00FB68  EFB8  F07D         	goto	u11101
 10356   00FB6C  EFBA  F07D         	goto	u11100
 10357   00FB70                     u11101:
 10358   00FB70  EF00  F07E         	goto	l8686
 10359   00FB74                     u11100:
 10360   00FB74                     
 10361                           ; BSR set to: 0
 10362   00FB74  EE20 F017          	lfsr	2,23
 10363   00FB78  51C3               	movf	find_volume@fs& (0+255),w,b
 10364   00FB7A  26D9               	addwf	fsr2l,f,c
 10365   00FB7C  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 10366   00FB7E  22DA               	addwfc	fsr2h,f,c
 10367   00FB80  CFDE F083          	movff	postinc2,??_find_volume
 10368   00FB84  CFDE F084          	movff	postinc2,??_find_volume+1
 10369   00FB88  CFDE F085          	movff	postinc2,??_find_volume+2
 10370   00FB8C  CFDE F086          	movff	postinc2,??_find_volume+3
 10371   00FB90  0E01               	movlw	1
 10372   00FB92  1583               	andwf	??_find_volume& (0+255),w,b
 10373   00FB94  6F87               	movwf	(??_find_volume+4)& (0+255),b
 10374   00FB96  0E00               	movlw	0
 10375   00FB98  1584               	andwf	(??_find_volume+1)& (0+255),w,b
 10376   00FB9A  6F88               	movwf	(??_find_volume+5)& (0+255),b
 10377   00FB9C  0E00               	movlw	0
 10378   00FB9E  1585               	andwf	(??_find_volume+2)& (0+255),w,b
 10379   00FBA0  6F89               	movwf	(??_find_volume+6)& (0+255),b
 10380   00FBA2  0E00               	movlw	0
 10381   00FBA4  1586               	andwf	(??_find_volume+3)& (0+255),w,b
 10382   00FBA6  6F8A               	movwf	(??_find_volume+7)& (0+255),b
 10383   00FBA8  EE20 F017          	lfsr	2,23
 10384   00FBAC  51C3               	movf	find_volume@fs& (0+255),w,b
 10385   00FBAE  26D9               	addwf	fsr2l,f,c
 10386   00FBB0  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 10387   00FBB2  22DA               	addwfc	fsr2h,f,c
 10388   00FBB4  CFDE F001          	movff	postinc2,___lmul@multiplier
 10389   00FBB8  CFDE F002          	movff	postinc2,___lmul@multiplier+1
 10390   00FBBC  CFDE F003          	movff	postinc2,___lmul@multiplier+2
 10391   00FBC0  CFDE F004          	movff	postinc2,___lmul@multiplier+3
 10392   00FBC4  0E03               	movlw	3
 10393   00FBC6  6E05               	movwf	___lmul@multiplicand^0,c
 10394   00FBC8  0E00               	movlw	0
 10395   00FBCA  6E06               	movwf	(___lmul@multiplicand+1)^0,c
 10396   00FBCC  0E00               	movlw	0
 10397   00FBCE  6E07               	movwf	(___lmul@multiplicand+2)^0,c
 10398   00FBD0  0E00               	movlw	0
 10399   00FBD2  6E08               	movwf	(___lmul@multiplicand+3)^0,c
 10400   00FBD4  ECB4  F040         	call	___lmul	;wreg free
 10401   00FBD8  90D8               	bcf	status,0,c
 10402   00FBDA  3204               	rrcf	(?___lmul+3)^0,f,c
 10403   00FBDC  3203               	rrcf	(?___lmul+2)^0,f,c
 10404   00FBDE  3202               	rrcf	(?___lmul+1)^0,f,c
 10405   00FBE0  3201               	rrcf	?___lmul^0,f,c
 10406   00FBE2  0100               	movlb	0	; () banked
 10407   00FBE4  5187               	movf	(??_find_volume+4)& (0+255),w,b
 10408   00FBE6  2401               	addwf	?___lmul^0,w,c
 10409   00FBE8  6FA1               	movwf	find_volume@szbfat& (0+255),b
 10410   00FBEA  5188               	movf	(??_find_volume+5)& (0+255),w,b
 10411   00FBEC  2002               	addwfc	(?___lmul+1)^0,w,c
 10412   00FBEE  6FA2               	movwf	(find_volume@szbfat+1)& (0+255),b
 10413   00FBF0  5189               	movf	(??_find_volume+6)& (0+255),w,b
 10414   00FBF2  2003               	addwfc	(?___lmul+2)^0,w,c
 10415   00FBF4  6FA3               	movwf	(find_volume@szbfat+2)& (0+255),b
 10416   00FBF6  518A               	movf	(??_find_volume+7)& (0+255),w,b
 10417   00FBF8  2004               	addwfc	(?___lmul+3)^0,w,c
 10418   00FBFA  6FA4               	movwf	(find_volume@szbfat+3)& (0+255),b
 10419   00FBFC  EF17  F07E         	goto	l569
 10420   00FC00                     l8686:
 10421                           
 10422                           ; BSR set to: 0
 10423   00FC00  EE20 F017          	lfsr	2,23
 10424   00FC04  51C3               	movf	find_volume@fs& (0+255),w,b
 10425   00FC06  26D9               	addwf	fsr2l,f,c
 10426   00FC08  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 10427   00FC0A  22DA               	addwfc	fsr2h,f,c
 10428   00FC0C  CFDE F083          	movff	postinc2,??_find_volume
 10429   00FC10  CFDE F084          	movff	postinc2,??_find_volume+1
 10430   00FC14  CFDE F085          	movff	postinc2,??_find_volume+2
 10431   00FC18  CFDE F086          	movff	postinc2,??_find_volume+3
 10432   00FC1C  90D8               	bcf	status,0,c
 10433   00FC1E  3583               	rlcf	??_find_volume& (0+255),w,b
 10434   00FC20  6FA1               	movwf	find_volume@szbfat& (0+255),b
 10435   00FC22  3584               	rlcf	(??_find_volume+1)& (0+255),w,b
 10436   00FC24  6FA2               	movwf	(find_volume@szbfat+1)& (0+255),b
 10437   00FC26  3585               	rlcf	(??_find_volume+2)& (0+255),w,b
 10438   00FC28  6FA3               	movwf	(find_volume@szbfat+2)& (0+255),b
 10439   00FC2A  3586               	rlcf	(??_find_volume+3)& (0+255),w,b
 10440   00FC2C  6FA4               	movwf	(find_volume@szbfat+3)& (0+255),b
 10441   00FC2E                     l569:
 10442                           
 10443                           ; BSR set to: 0
 10444                           ;mcc_generated_files/fatfs/ff.c: 3376:   if (fs->fsize < (szbfat + (((UINT)512) - 1)) / 
      +                          ((UINT)512)) return FR_NO_FILESYSTEM;
 10445   00FC2E  0EFF               	movlw	255
 10446   00FC30  25A1               	addwf	find_volume@szbfat& (0+255),w,b
 10447   00FC32  6F83               	movwf	??_find_volume& (0+255),b
 10448   00FC34  0E01               	movlw	1
 10449   00FC36  21A2               	addwfc	(find_volume@szbfat+1)& (0+255),w,b
 10450   00FC38  6F84               	movwf	(??_find_volume+1)& (0+255),b
 10451   00FC3A  0E00               	movlw	0
 10452   00FC3C  21A3               	addwfc	(find_volume@szbfat+2)& (0+255),w,b
 10453   00FC3E  6F85               	movwf	(??_find_volume+2)& (0+255),b
 10454   00FC40  0E00               	movlw	0
 10455   00FC42  21A4               	addwfc	(find_volume@szbfat+3)& (0+255),w,b
 10456   00FC44  6F86               	movwf	(??_find_volume+3)& (0+255),b
 10457   00FC46  0E0A               	movlw	10
 10458   00FC48  EF2B  F07E         	goto	u11110
 10459   00FC4C                     u11115:
 10460   00FC4C  90D8               	bcf	status,0,c
 10461   00FC4E  3386               	rrcf	(??_find_volume+3)& (0+255),f,b
 10462   00FC50  3385               	rrcf	(??_find_volume+2)& (0+255),f,b
 10463   00FC52  3384               	rrcf	(??_find_volume+1)& (0+255),f,b
 10464   00FC54  3383               	rrcf	??_find_volume& (0+255),f,b
 10465   00FC56                     u11110:
 10466   00FC56  2EE8               	decfsz	wreg,f,c
 10467   00FC58  EF26  F07E         	goto	u11115
 10468   00FC5C  EE20 F01B          	lfsr	2,27
 10469   00FC60  51C3               	movf	find_volume@fs& (0+255),w,b
 10470   00FC62  26D9               	addwf	fsr2l,f,c
 10471   00FC64  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 10472   00FC66  22DA               	addwfc	fsr2h,f,c
 10473   00FC68  5183               	movf	??_find_volume& (0+255),w,b
 10474   00FC6A  5CDE               	subwf	postinc2,w,c
 10475   00FC6C  5184               	movf	(??_find_volume+1)& (0+255),w,b
 10476   00FC6E  58DE               	subwfb	postinc2,w,c
 10477   00FC70  5185               	movf	(??_find_volume+2)& (0+255),w,b
 10478   00FC72  58DE               	subwfb	postinc2,w,c
 10479   00FC74  5186               	movf	(??_find_volume+3)& (0+255),w,b
 10480   00FC76  58DE               	subwfb	postinc2,w,c
 10481   00FC78  B0D8               	btfsc	status,0,c
 10482   00FC7A  EF41  F07E         	goto	u11121
 10483   00FC7E  EF43  F07E         	goto	u11120
 10484   00FC82                     u11121:
 10485   00FC82  EF45  F07E         	goto	l8692
 10486   00FC86                     u11120:
 10487   00FC86  EFB2  F07A         	goto	l8560
 10488   00FC8A                     l8692:
 10489                           
 10490                           ; BSR set to: 0
 10491                           ;mcc_generated_files/fatfs/ff.c: 3380:   fs->last_clst = fs->free_clst = 0xFFFFFFFF;
 10492   00FC8A  EE20 F00F          	lfsr	2,15
 10493   00FC8E  51C3               	movf	find_volume@fs& (0+255),w,b
 10494   00FC90  26D9               	addwf	fsr2l,f,c
 10495   00FC92  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 10496   00FC94  22DA               	addwfc	fsr2h,f,c
 10497   00FC96  0EFF               	movlw	255
 10498   00FC98  6EDE               	movwf	postinc2,c
 10499   00FC9A  0EFF               	movlw	255
 10500   00FC9C  6EDE               	movwf	postinc2,c
 10501   00FC9E  0EFF               	movlw	255
 10502   00FCA0  6EDE               	movwf	postinc2,c
 10503   00FCA2  0EFF               	movlw	255
 10504   00FCA4  6EDD               	movwf	postdec2,c
 10505   00FCA6  52DD               	movf	postdec2,f,c
 10506   00FCA8  52DD               	movf	postdec2,f,c
 10507   00FCAA  EE10 F00B          	lfsr	1,11
 10508   00FCAE  51C3               	movf	find_volume@fs& (0+255),w,b
 10509   00FCB0  26E1               	addwf	fsr1l,f,c
 10510   00FCB2  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 10511   00FCB4  22E2               	addwfc	fsr1h,f,c
 10512   00FCB6  CFDE FFE6          	movff	postinc2,postinc1
 10513   00FCBA  CFDE FFE6          	movff	postinc2,postinc1
 10514   00FCBE  CFDE FFE6          	movff	postinc2,postinc1
 10515   00FCC2  CFDE FFE6          	movff	postinc2,postinc1
 10516   00FCC6                     
 10517                           ; BSR set to: 0
 10518                           ;mcc_generated_files/fatfs/ff.c: 3381:   fs->fsi_flag = 0x80;
 10519   00FCC6  EE20 F004          	lfsr	2,4
 10520   00FCCA  51C3               	movf	find_volume@fs& (0+255),w,b
 10521   00FCCC  26D9               	addwf	fsr2l,f,c
 10522   00FCCE  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 10523   00FCD0  22DA               	addwfc	fsr2h,f,c
 10524   00FCD2  0E80               	movlw	128
 10525   00FCD4  6EDF               	movwf	indf2,c
 10526   00FCD6                     
 10527                           ; BSR set to: 0
 10528                           ;mcc_generated_files/fatfs/ff.c: 3383:   if (fmt == 3
 10529   00FCD6  0E03               	movlw	3
 10530   00FCD8  19C2               	xorwf	find_volume@fmt& (0+255),w,b
 10531   00FCDA  A4D8               	btfss	status,2,c
 10532   00FCDC  EF72  F07E         	goto	u11131
 10533   00FCE0  EF74  F07E         	goto	u11130
 10534   00FCE4                     u11131:
 10535   00FCE4  EF22  F07F         	goto	l8712
 10536   00FCE8                     u11130:
 10537   00FCE8                     
 10538                           ; BSR set to: 0
 10539   00FCE8  0E63               	movlw	99
 10540   00FCEA  25C3               	addwf	find_volume@fs& (0+255),w,b
 10541   00FCEC  6E01               	movwf	ld_word@ptr^0,c
 10542   00FCEE  0E00               	movlw	0
 10543   00FCF0  21C4               	addwfc	(find_volume@fs+1)& (0+255),w,b
 10544   00FCF2  6E02               	movwf	(ld_word@ptr+1)^0,c
 10545   00FCF4  ECD1  F03E         	call	_ld_word	;wreg free
 10546   00FCF8  0401               	decf	?_ld_word^0,w,c
 10547   00FCFA  1002               	iorwf	(?_ld_word+1)^0,w,c
 10548   00FCFC  A4D8               	btfss	status,2,c
 10549   00FCFE  EF83  F07E         	goto	u11141
 10550   00FD02  EF85  F07E         	goto	u11140
 10551   00FD06                     u11141:
 10552   00FD06  EF22  F07F         	goto	l8712
 10553   00FD0A                     u11140:
 10554   00FD0A  C0C3  F070         	movff	find_volume@fs,move_window@fs
 10555   00FD0E  C0C4  F071         	movff	find_volume@fs+1,move_window@fs+1
 10556   00FD12  0E01               	movlw	1
 10557   00FD14  0100               	movlb	0	; () banked
 10558   00FD16  25BC               	addwf	find_volume@bsect& (0+255),w,b
 10559   00FD18  6F72               	movwf	move_window@sector& (0+255),b
 10560   00FD1A  0E00               	movlw	0
 10561   00FD1C  21BD               	addwfc	(find_volume@bsect+1)& (0+255),w,b
 10562   00FD1E  6F73               	movwf	(move_window@sector+1)& (0+255),b
 10563   00FD20  0E00               	movlw	0
 10564   00FD22  21BE               	addwfc	(find_volume@bsect+2)& (0+255),w,b
 10565   00FD24  6F74               	movwf	(move_window@sector+2)& (0+255),b
 10566   00FD26  0E00               	movlw	0
 10567   00FD28  21BF               	addwfc	(find_volume@bsect+3)& (0+255),w,b
 10568   00FD2A  6F75               	movwf	(move_window@sector+3)& (0+255),b
 10569   00FD2C  EC51  F044         	call	_move_window	;wreg free
 10570   00FD30  0900               	iorlw	0
 10571   00FD32  A4D8               	btfss	status,2,c
 10572   00FD34  EF9E  F07E         	goto	u11151
 10573   00FD38  EFA0  F07E         	goto	u11150
 10574   00FD3C                     u11151:
 10575   00FD3C  EF22  F07F         	goto	l8712
 10576   00FD40                     u11150:
 10577   00FD40                     
 10578                           ;mcc_generated_files/fatfs/ff.c: 3386:   {;mcc_generated_files/fatfs/ff.c: 3387:    fs->
      +                          fsi_flag = 0;
 10579   00FD40  0100               	movlb	0	; () banked
 10580   00FD42  EE20 F004          	lfsr	2,4
 10581   00FD46  51C3               	movf	find_volume@fs& (0+255),w,b
 10582   00FD48  26D9               	addwf	fsr2l,f,c
 10583   00FD4A  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 10584   00FD4C  22DA               	addwfc	fsr2h,f,c
 10585   00FD4E  0E00               	movlw	0
 10586   00FD50  6EDF               	movwf	indf2,c
 10587   00FD52                     
 10588                           ; BSR set to: 0
 10589                           ;mcc_generated_files/fatfs/ff.c: 3388:    if (ld_word(fs->win + 510) == 0xAA55
 10590   00FD52  0E31               	movlw	49
 10591   00FD54  25C3               	addwf	find_volume@fs& (0+255),w,b
 10592   00FD56  6E01               	movwf	ld_word@ptr^0,c
 10593   00FD58  0E02               	movlw	2
 10594   00FD5A  21C4               	addwfc	(find_volume@fs+1)& (0+255),w,b
 10595   00FD5C  6E02               	movwf	(ld_word@ptr+1)^0,c
 10596   00FD5E  ECD1  F03E         	call	_ld_word	;wreg free
 10597   00FD62  0E55               	movlw	85
 10598   00FD64  1801               	xorwf	?_ld_word^0,w,c
 10599   00FD66  E107               	bnz	u11161
 10600   00FD68  0EAA               	movlw	170
 10601   00FD6A  1802               	xorwf	(?_ld_word+1)^0,w,c
 10602   00FD6C  A4D8               	btfss	status,2,c
 10603   00FD6E  EFBB  F07E         	goto	u11161
 10604   00FD72  EFBD  F07E         	goto	u11160
 10605   00FD76                     u11161:
 10606   00FD76  EF22  F07F         	goto	l8712
 10607   00FD7A                     u11160:
 10608   00FD7A  0E33               	movlw	51
 10609   00FD7C  0100               	movlb	0	; () banked
 10610   00FD7E  25C3               	addwf	find_volume@fs& (0+255),w,b
 10611   00FD80  6E01               	movwf	ld_dword@ptr^0,c
 10612   00FD82  0E00               	movlw	0
 10613   00FD84  21C4               	addwfc	(find_volume@fs+1)& (0+255),w,b
 10614   00FD86  6E02               	movwf	(ld_dword@ptr+1)^0,c
 10615   00FD88  ECF5  F043         	call	_ld_dword	;wreg free
 10616   00FD8C  0E52               	movlw	82
 10617   00FD8E  1801               	xorwf	?_ld_dword^0,w,c
 10618   00FD90  E10D               	bnz	u11171
 10619   00FD92  0E52               	movlw	82
 10620   00FD94  1802               	xorwf	(?_ld_dword+1)^0,w,c
 10621   00FD96  E10A               	bnz	u11171
 10622   00FD98  0E61               	movlw	97
 10623   00FD9A  1803               	xorwf	(?_ld_dword+2)^0,w,c
 10624   00FD9C  E107               	bnz	u11171
 10625   00FD9E  0E41               	movlw	65
 10626   00FDA0  1804               	xorwf	(?_ld_dword+3)^0,w,c
 10627   00FDA2  A4D8               	btfss	status,2,c
 10628   00FDA4  EFD6  F07E         	goto	u11171
 10629   00FDA8  EFD8  F07E         	goto	u11170
 10630   00FDAC                     u11171:
 10631   00FDAC  EF22  F07F         	goto	l8712
 10632   00FDB0                     u11170:
 10633   00FDB0  0E17               	movlw	23
 10634   00FDB2  0100               	movlb	0	; () banked
 10635   00FDB4  25C3               	addwf	find_volume@fs& (0+255),w,b
 10636   00FDB6  6E01               	movwf	ld_dword@ptr^0,c
 10637   00FDB8  0E02               	movlw	2
 10638   00FDBA  21C4               	addwfc	(find_volume@fs+1)& (0+255),w,b
 10639   00FDBC  6E02               	movwf	(ld_dword@ptr+1)^0,c
 10640   00FDBE  ECF5  F043         	call	_ld_dword	;wreg free
 10641   00FDC2  0E72               	movlw	114
 10642   00FDC4  1801               	xorwf	?_ld_dword^0,w,c
 10643   00FDC6  E10D               	bnz	u11181
 10644   00FDC8  0E72               	movlw	114
 10645   00FDCA  1802               	xorwf	(?_ld_dword+1)^0,w,c
 10646   00FDCC  E10A               	bnz	u11181
 10647   00FDCE  0E41               	movlw	65
 10648   00FDD0  1803               	xorwf	(?_ld_dword+2)^0,w,c
 10649   00FDD2  E107               	bnz	u11181
 10650   00FDD4  0E61               	movlw	97
 10651   00FDD6  1804               	xorwf	(?_ld_dword+3)^0,w,c
 10652   00FDD8  A4D8               	btfss	status,2,c
 10653   00FDDA  EFF1  F07E         	goto	u11181
 10654   00FDDE  EFF3  F07E         	goto	u11180
 10655   00FDE2                     u11181:
 10656   00FDE2  EF22  F07F         	goto	l8712
 10657   00FDE6                     u11180:
 10658   00FDE6                     
 10659                           ;mcc_generated_files/fatfs/ff.c: 3391:    {;mcc_generated_files/fatfs/ff.c: 3393:     fs
      +                          ->free_clst = ld_dword(fs->win + 488);
 10660   00FDE6  0E1B               	movlw	27
 10661   00FDE8  0100               	movlb	0	; () banked
 10662   00FDEA  25C3               	addwf	find_volume@fs& (0+255),w,b
 10663   00FDEC  6E01               	movwf	ld_dword@ptr^0,c
 10664   00FDEE  0E02               	movlw	2
 10665   00FDF0  21C4               	addwfc	(find_volume@fs+1)& (0+255),w,b
 10666   00FDF2  6E02               	movwf	(ld_dword@ptr+1)^0,c
 10667   00FDF4  ECF5  F043         	call	_ld_dword	;wreg free
 10668   00FDF8  0100               	movlb	0	; () banked
 10669   00FDFA  EE20 F00F          	lfsr	2,15
 10670   00FDFE  51C3               	movf	find_volume@fs& (0+255),w,b
 10671   00FE00  26D9               	addwf	fsr2l,f,c
 10672   00FE02  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 10673   00FE04  22DA               	addwfc	fsr2h,f,c
 10674   00FE06  C001  FFDE         	movff	?_ld_dword,postinc2
 10675   00FE0A  C002  FFDE         	movff	?_ld_dword+1,postinc2
 10676   00FE0E  C003  FFDE         	movff	?_ld_dword+2,postinc2
 10677   00FE12  C004  FFDE         	movff	?_ld_dword+3,postinc2
 10678                           
 10679                           ;mcc_generated_files/fatfs/ff.c: 3396:     fs->last_clst = ld_dword(fs->win + 492);
 10680   00FE16  0E1F               	movlw	31
 10681   00FE18  25C3               	addwf	find_volume@fs& (0+255),w,b
 10682   00FE1A  6E01               	movwf	ld_dword@ptr^0,c
 10683   00FE1C  0E02               	movlw	2
 10684   00FE1E  21C4               	addwfc	(find_volume@fs+1)& (0+255),w,b
 10685   00FE20  6E02               	movwf	(ld_dword@ptr+1)^0,c
 10686   00FE22  ECF5  F043         	call	_ld_dword	;wreg free
 10687   00FE26  0100               	movlb	0	; () banked
 10688   00FE28  EE20 F00B          	lfsr	2,11
 10689   00FE2C  51C3               	movf	find_volume@fs& (0+255),w,b
 10690   00FE2E  26D9               	addwf	fsr2l,f,c
 10691   00FE30  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 10692   00FE32  22DA               	addwfc	fsr2h,f,c
 10693   00FE34  C001  FFDE         	movff	?_ld_dword,postinc2
 10694   00FE38  C002  FFDE         	movff	?_ld_dword+1,postinc2
 10695   00FE3C  C003  FFDE         	movff	?_ld_dword+2,postinc2
 10696   00FE40  C004  FFDE         	movff	?_ld_dword+3,postinc2
 10697   00FE44                     l8712:
 10698                           
 10699                           ;mcc_generated_files/fatfs/ff.c: 3402:  };mcc_generated_files/fatfs/ff.c: 3404:  fs->fs_
      +                          type = fmt;
 10700   00FE44  C0C3  FFD9         	movff	find_volume@fs,fsr2l
 10701   00FE48  C0C4  FFDA         	movff	find_volume@fs+1,fsr2h
 10702   00FE4C  C0C2  FFDF         	movff	find_volume@fmt,indf2
 10703   00FE50                     
 10704                           ;mcc_generated_files/fatfs/ff.c: 3405:  fs->id = ++Fsid;
 10705   00FE50  0101               	movlb	1	; () banked
 10706   00FE52  4B27               	infsnz	_Fsid& (0+255),f,b
 10707   00FE54  2B28               	incf	(_Fsid+1)& (0+255),f,b
 10708   00FE56  0100               	movlb	0	; () banked
 10709   00FE58  EE20 F005          	lfsr	2,5
 10710   00FE5C  51C3               	movf	find_volume@fs& (0+255),w,b
 10711   00FE5E  26D9               	addwf	fsr2l,f,c
 10712   00FE60  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 10713   00FE62  22DA               	addwfc	fsr2h,f,c
 10714   00FE64  C127  FFDE         	movff	_Fsid,postinc2
 10715   00FE68  C128  FFDD         	movff	_Fsid+1,postdec2
 10716   00FE6C                     
 10717                           ; BSR set to: 0
 10718                           ;mcc_generated_files/fatfs/ff.c: 3413:  fs->cdir = 0;
 10719   00FE6C  EE20 F013          	lfsr	2,19
 10720   00FE70  51C3               	movf	find_volume@fs& (0+255),w,b
 10721   00FE72  26D9               	addwf	fsr2l,f,c
 10722   00FE74  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 10723   00FE76  22DA               	addwfc	fsr2h,f,c
 10724   00FE78  6ADE               	clrf	postinc2,c
 10725   00FE7A  6ADE               	clrf	postinc2,c
 10726   00FE7C  6ADE               	clrf	postinc2,c
 10727   00FE7E  6ADD               	clrf	postdec2,c
 10728   00FE80  EF72  F079         	goto	l8478
 10729   00FE84                     l524:
 10730   00FE84  0012               	return		;funcret
 10731   00FE86                     __end_of_find_volume:
 10732                           	callstack 0
 10733                           
 10734 ;; *************** function _get_ldnumber *****************
 10735 ;; Defined at:
 10736 ;;		line 3102 in file "mcc_generated_files/fatfs/ff.c"
 10737 ;; Parameters:    Size  Location     Type
 10738 ;;  path            2    0[COMRAM] PTR PTR const unsigned c
 10739 ;;		 -> f_rename@path_old(2), f_rename@path_new(2), f_mkdir@path(2), f_unlink@path(2), 
 10740 ;;		 -> f_getfree@path(2), f_stat@path(2), f_opendir@path(2), f_chdir@path(2), 
 10741 ;;		 -> f_chdrive@path(2), f_open@path(2), f_mount@path(2), f_mount@rp(2), 
 10742 ;; Auto vars:     Size  Location     Type
 10743 ;;  tp              2   11[COMRAM] PTR const unsigned char 
 10744 ;;		 -> STR_15(1), STR_13(13), STR_12(13), STR_11(13), 
 10745 ;;		 -> STR_10(9), STR_3(3), STR_2(10), STR_1(3), 
 10746 ;;  vol             2    9[COMRAM] int 
 10747 ;;  tt              2    6[COMRAM] PTR const unsigned char 
 10748 ;;		 -> STR_15(1), STR_13(13), STR_12(13), STR_11(13), 
 10749 ;;		 -> STR_10(9), STR_3(3), STR_2(10), STR_1(3), 
 10750 ;;  i               2    4[COMRAM] int 
 10751 ;;  tc              1    8[COMRAM] unsigned char 
 10752 ;; Return value:  Size  Location     Type
 10753 ;;                  2    0[COMRAM] int 
 10754 ;; Registers used:
 10755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10756 ;; Tracked objects:
 10757 ;;		On entry : 0/0
 10758 ;;		On exit  : 0/0
 10759 ;;		Unchanged: 0/0
 10760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10761 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10762 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10763 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10764 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10765 ;;Total ram usage:       13 bytes
 10766 ;; Hardware stack levels used: 1
 10767 ;; This function calls:
 10768 ;;		Nothing
 10769 ;; This function is called by:
 10770 ;;		_find_volume
 10771 ;;		_f_mount
 10772 ;;		_f_chdrive
 10773 ;;		_f_rename
 10774 ;; This function uses a non-reentrant model
 10775 ;;
 10776                           
 10777                           	psect	text23
 10778   0092D2                     __ptext23:
 10779                           	callstack 0
 10780   0092D2                     _get_ldnumber:
 10781                           	callstack 27
 10782   0092D2                     
 10783                           ;mcc_generated_files/fatfs/ff.c: 3103:  const TCHAR** path;mcc_generated_files/fatfs/ff.
      +                          c: 3105: {;mcc_generated_files/fatfs/ff.c: 3106:  const TCHAR *tp, *tt;;mcc_generated_fi
      +                          les/fatfs/ff.c: 3107:  TCHAR tc;;mcc_generated_files/fatfs/ff.c: 3108:  int i, vol = -1;
 10784   0092D2  680A               	setf	get_ldnumber@vol^0,c
 10785   0092D4  680B               	setf	(get_ldnumber@vol+1)^0,c
 10786   0092D6                     
 10787                           ;mcc_generated_files/fatfs/ff.c: 3114:  tt = tp = *path;
 10788   0092D6  C001  FFD9         	movff	get_ldnumber@path,fsr2l
 10789   0092DA  C002  FFDA         	movff	get_ldnumber@path+1,fsr2h
 10790   0092DE  CFDE F00C          	movff	postinc2,get_ldnumber@tp
 10791   0092E2  CFDD F00D          	movff	postdec2,get_ldnumber@tp+1
 10792   0092E6  C00C  F007         	movff	get_ldnumber@tp,get_ldnumber@tt
 10793   0092EA  C00D  F008         	movff	get_ldnumber@tp+1,get_ldnumber@tt+1
 10794   0092EE                     
 10795                           ;mcc_generated_files/fatfs/ff.c: 3115:  if (!tp) return vol;
 10796   0092EE  500C               	movf	get_ldnumber@tp^0,w,c
 10797   0092F0  100D               	iorwf	(get_ldnumber@tp+1)^0,w,c
 10798   0092F2  A4D8               	btfss	status,2,c
 10799   0092F4  EF7E  F049         	goto	u10221
 10800   0092F8  EF80  F049         	goto	u10220
 10801   0092FC                     u10221:
 10802   0092FC  EF84  F049         	goto	l8182
 10803   009300                     u10220:
 10804   009300  6801               	setf	?_get_ldnumber^0,c
 10805   009302  6802               	setf	(?_get_ldnumber+1)^0,c
 10806   009304  EF0E  F04A         	goto	l499
 10807   009308                     l8182:
 10808   009308  C007  FFF6         	movff	get_ldnumber@tt,tblptrl
 10809   00930C  C008  FFF7         	movff	get_ldnumber@tt+1,tblptrh
 10810   009310                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10811   009310  6AF8               	clrf	tblptru,c
 10812   009312                     	endif
 10813   009312                     	if	0	;tblptru may be non-zero
 10814   009312                     	endif
 10815   009312  0008               	tblrd		*
 10816   009314  CFF5 F009          	movff	tablat,get_ldnumber@tc
 10817   009318  4A07               	infsnz	get_ldnumber@tt^0,f,c
 10818   00931A  2A08               	incf	(get_ldnumber@tt+1)^0,f,c
 10819   00931C  0E20               	movlw	32
 10820   00931E  6409               	cpfsgt	get_ldnumber@tc^0,c
 10821   009320  EF94  F049         	goto	u10231
 10822   009324  EF96  F049         	goto	u10230
 10823   009328                     u10231:
 10824   009328  EF9F  F049         	goto	l8194
 10825   00932C                     u10230:
 10826   00932C  0E3A               	movlw	58
 10827   00932E  1809               	xorwf	get_ldnumber@tc^0,w,c
 10828   009330  A4D8               	btfss	status,2,c
 10829   009332  EF9D  F049         	goto	u10241
 10830   009336  EF9F  F049         	goto	u10240
 10831   00933A                     u10241:
 10832   00933A  EF84  F049         	goto	l8182
 10833   00933E                     u10240:
 10834   00933E                     l8194:
 10835                           
 10836                           ;mcc_generated_files/fatfs/ff.c: 3118:  if (tc == ':') {
 10837   00933E  0E3A               	movlw	58
 10838   009340  1809               	xorwf	get_ldnumber@tc^0,w,c
 10839   009342  A4D8               	btfss	status,2,c
 10840   009344  EFA6  F049         	goto	u10251
 10841   009348  EFA8  F049         	goto	u10250
 10842   00934C                     u10251:
 10843   00934C  EF07  F04A         	goto	l508
 10844   009350                     u10250:
 10845   009350                     
 10846                           ;mcc_generated_files/fatfs/ff.c: 3119:   i = 1;
 10847   009350  0E00               	movlw	0
 10848   009352  6E06               	movwf	(get_ldnumber@i+1)^0,c
 10849   009354  0E01               	movlw	1
 10850   009356  6E05               	movwf	get_ldnumber@i^0,c
 10851   009358                     
 10852                           ;mcc_generated_files/fatfs/ff.c: 3120:   if (((*tp) >= '0' && (*tp) <= '9') && tp + 2 ==
      +                           tt) {
 10853   009358  C00C  FFF6         	movff	get_ldnumber@tp,tblptrl
 10854   00935C  C00D  FFF7         	movff	get_ldnumber@tp+1,tblptrh
 10855   009360                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10856   009360  6AF8               	clrf	tblptru,c
 10857   009362                     	endif
 10858   009362                     	if	0	;tblptru may be non-zero
 10859   009362                     	endif
 10860   009362  0E2F               	movlw	47
 10861   009364  0008               	tblrd		*
 10862   009366  64F5               	cpfsgt	tablat,c
 10863   009368  EFB8  F049         	goto	u10261
 10864   00936C  EFBA  F049         	goto	u10260
 10865   009370                     u10261:
 10866   009370  EFE8  F049         	goto	l8206
 10867   009374                     u10260:
 10868   009374  C00C  FFF6         	movff	get_ldnumber@tp,tblptrl
 10869   009378  C00D  FFF7         	movff	get_ldnumber@tp+1,tblptrh
 10870   00937C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10871   00937C  6AF8               	clrf	tblptru,c
 10872   00937E                     	endif
 10873   00937E                     	if	0	;tblptru may be non-zero
 10874   00937E                     	endif
 10875   00937E  0E3A               	movlw	58
 10876   009380  0008               	tblrd		*
 10877   009382  60F5               	cpfslt	tablat,c
 10878   009384  EFC6  F049         	goto	u10271
 10879   009388  EFC8  F049         	goto	u10270
 10880   00938C                     u10271:
 10881   00938C  EFE8  F049         	goto	l8206
 10882   009390                     u10270:
 10883   009390  0E02               	movlw	2
 10884   009392  240C               	addwf	get_ldnumber@tp^0,w,c
 10885   009394  6E03               	movwf	??_get_ldnumber^0,c
 10886   009396  0E00               	movlw	0
 10887   009398  200D               	addwfc	(get_ldnumber@tp+1)^0,w,c
 10888   00939A  6E04               	movwf	(??_get_ldnumber+1)^0,c
 10889   00939C  5007               	movf	get_ldnumber@tt^0,w,c
 10890   00939E  1803               	xorwf	??_get_ldnumber^0,w,c
 10891   0093A0  E107               	bnz	u10281
 10892   0093A2  5008               	movf	(get_ldnumber@tt+1)^0,w,c
 10893   0093A4  1804               	xorwf	(??_get_ldnumber+1)^0,w,c
 10894   0093A6  A4D8               	btfss	status,2,c
 10895   0093A8  EFD8  F049         	goto	u10281
 10896   0093AC  EFDA  F049         	goto	u10280
 10897   0093B0                     u10281:
 10898   0093B0  EFE8  F049         	goto	l8206
 10899   0093B4                     u10280:
 10900   0093B4                     
 10901                           ;mcc_generated_files/fatfs/ff.c: 3121:    i = (int)*tp - '0';
 10902   0093B4  C00C  FFF6         	movff	get_ldnumber@tp,tblptrl
 10903   0093B8  C00D  FFF7         	movff	get_ldnumber@tp+1,tblptrh
 10904   0093BC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10905   0093BC  6AF8               	clrf	tblptru,c
 10906   0093BE                     	endif
 10907   0093BE                     	if	0	;tblptru may be non-zero
 10908   0093BE                     	endif
 10909   0093BE  0008               	tblrd		*
 10910   0093C0  CFF5 F003          	movff	tablat,??_get_ldnumber
 10911   0093C4  0ED0               	movlw	208
 10912   0093C6  2403               	addwf	??_get_ldnumber^0,w,c
 10913   0093C8  6E05               	movwf	get_ldnumber@i^0,c
 10914   0093CA  6A06               	clrf	(get_ldnumber@i+1)^0,c
 10915   0093CC  0EFF               	movlw	255
 10916   0093CE  2206               	addwfc	(get_ldnumber@i+1)^0,f,c
 10917   0093D0                     l8206:
 10918                           
 10919                           ;mcc_generated_files/fatfs/ff.c: 3136:   if (i < 1) {
 10920   0093D0  BE06               	btfsc	(get_ldnumber@i+1)^0,7,c
 10921   0093D2  EFF5  F049         	goto	u10290
 10922   0093D6  5006               	movf	(get_ldnumber@i+1)^0,w,c
 10923   0093D8  E106               	bnz	u10291
 10924   0093DA  0405               	decf	get_ldnumber@i^0,w,c
 10925   0093DC  B0D8               	btfsc	status,0,c
 10926   0093DE  EFF3  F049         	goto	u10291
 10927   0093E2  EFF5  F049         	goto	u10290
 10928   0093E6                     u10291:
 10929   0093E6  EF01  F04A         	goto	l8212
 10930   0093EA                     u10290:
 10931   0093EA                     
 10932                           ;mcc_generated_files/fatfs/ff.c: 3137:    vol = i;
 10933   0093EA  C005  F00A         	movff	get_ldnumber@i,get_ldnumber@vol
 10934   0093EE  C006  F00B         	movff	get_ldnumber@i+1,get_ldnumber@vol+1
 10935   0093F2                     
 10936                           ;mcc_generated_files/fatfs/ff.c: 3138:    *path = tt;
 10937   0093F2  C001  FFD9         	movff	get_ldnumber@path,fsr2l
 10938   0093F6  C002  FFDA         	movff	get_ldnumber@path+1,fsr2h
 10939   0093FA  C007  FFDE         	movff	get_ldnumber@tt,postinc2
 10940   0093FE  C008  FFDD         	movff	get_ldnumber@tt+1,postdec2
 10941   009402                     l8212:
 10942                           
 10943                           ;mcc_generated_files/fatfs/ff.c: 3140:   return vol;
 10944   009402  C00A  F001         	movff	get_ldnumber@vol,?_get_ldnumber
 10945   009406  C00B  F002         	movff	get_ldnumber@vol+1,?_get_ldnumber+1
 10946   00940A  EF0E  F04A         	goto	l499
 10947   00940E                     l508:
 10948                           
 10949                           ;mcc_generated_files/fatfs/ff.c: 3162:  vol = CurrVol;
 10950   00940E  C12E  F00A         	movff	_CurrVol,get_ldnumber@vol
 10951   009412  6A0B               	clrf	(get_ldnumber@vol+1)^0,c
 10952                           
 10953                           ;mcc_generated_files/fatfs/ff.c: 3166:  return vol;
 10954   009414  C00A  F001         	movff	get_ldnumber@vol,?_get_ldnumber
 10955   009418  C00B  F002         	movff	get_ldnumber@vol+1,?_get_ldnumber+1
 10956   00941C                     l499:
 10957   00941C  0012               	return		;funcret
 10958   00941E                     __end_of_get_ldnumber:
 10959                           	callstack 0
 10960                           
 10961 ;; *************** function _disk_initialize *****************
 10962 ;; Defined at:
 10963 ;;		line 60 in file "mcc_generated_files/fatfs/diskio.c"
 10964 ;; Parameters:    Size  Location     Type
 10965 ;;  pdrv            1    wreg     unsigned char 
 10966 ;; Auto vars:     Size  Location     Type
 10967 ;;  pdrv            1   86[COMRAM] unsigned char 
 10968 ;;  stat            1   87[COMRAM] unsigned char 
 10969 ;; Return value:  Size  Location     Type
 10970 ;;                  1    wreg      unsigned char 
 10971 ;; Registers used:
 10972 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10973 ;; Tracked objects:
 10974 ;;		On entry : 0/0
 10975 ;;		On exit  : 0/0
 10976 ;;		Unchanged: 0/0
 10977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10979 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10980 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10981 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10982 ;;Total ram usage:        4 bytes
 10983 ;; Hardware stack levels used: 1
 10984 ;; Hardware stack levels required when called: 3
 10985 ;; This function calls:
 10986 ;;		_SD_SPI_MediaInitialize
 10987 ;; This function is called by:
 10988 ;;		_find_volume
 10989 ;; This function uses a non-reentrant model
 10990 ;;
 10991                           
 10992                           	psect	text24
 10993   007F9E                     __ptext24:
 10994                           	callstack 0
 10995   007F9E                     _disk_initialize:
 10996                           	callstack 24
 10997                           
 10998                           ;incstack = 0
 10999                           ;disk_initialize@pdrv stored from wreg
 11000   007F9E  6E57               	movwf	disk_initialize@pdrv^0,c
 11001   007FA0                     
 11002                           ;mcc_generated_files/fatfs/diskio.c: 61:     BYTE pdrv;mcc_generated_files/fatfs/diskio.
      +                          c: 63: {;mcc_generated_files/fatfs/diskio.c: 64:     DSTATUS stat = 0x01;
 11003   007FA0  0E01               	movlw	1
 11004   007FA2  6E58               	movwf	disk_initialize@stat^0,c
 11005                           
 11006                           ;mcc_generated_files/fatfs/diskio.c: 66:     switch (pdrv) {
 11007   007FA4  EFE6  F03F         	goto	l7900
 11008   007FA8                     l7892:
 11009                           
 11010                           ;mcc_generated_files/fatfs/diskio.c: 68:             if(SD_SPI_MediaInitialize() == 1)
 11011   007FA8  ECE4  F06C         	call	_SD_SPI_MediaInitialize	;wreg free
 11012   007FAC  06E8               	decf	wreg,f,c
 11013   007FAE  A4D8               	btfss	status,2,c
 11014   007FB0  EFDC  F03F         	goto	u9741
 11015   007FB4  EFDE  F03F         	goto	u9740
 11016   007FB8                     u9741:
 11017   007FB8  EFE2  F03F         	goto	l7896
 11018   007FBC                     u9740:
 11019   007FBC                     
 11020                           ;mcc_generated_files/fatfs/diskio.c: 69:             {;mcc_generated_files/fatfs/diskio.
      +                          c: 70:                 stat = RES_OK;
 11021   007FBC  0E00               	movlw	0
 11022   007FBE  6E58               	movwf	disk_initialize@stat^0,c
 11023                           
 11024                           ;mcc_generated_files/fatfs/diskio.c: 71:             }
 11025   007FC0  EFF7  F03F         	goto	l7902
 11026   007FC4                     l7896:
 11027                           
 11028                           ;mcc_generated_files/fatfs/diskio.c: 73:             {;mcc_generated_files/fatfs/diskio.
      +                          c: 74:                 stat = RES_ERROR;
 11029   007FC4  0E01               	movlw	1
 11030   007FC6  6E58               	movwf	disk_initialize@stat^0,c
 11031   007FC8  EFF7  F03F         	goto	l7902
 11032   007FCC                     l7900:
 11033   007FCC  5057               	movf	disk_initialize@pdrv^0,w,c
 11034   007FCE  6E55               	movwf	??_disk_initialize^0,c
 11035   007FD0  6A56               	clrf	(??_disk_initialize+1)^0,c
 11036                           
 11037                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11038                           ; Switch size 1, requested type "simple"
 11039                           ; Number of cases is 1, Range of values is 0 to 0
 11040                           ; switch strategies available:
 11041                           ; Name         Instructions Cycles
 11042                           ; simple_byte            4     3 (average)
 11043                           ;	Chosen strategy is simple_byte
 11044   007FD2  5056               	movf	(??_disk_initialize+1)^0,w,c
 11045   007FD4  0A00               	xorlw	0	; case 0
 11046   007FD6  B4D8               	btfsc	status,2,c
 11047   007FD8  EFF0  F03F         	goto	l10676
 11048   007FDC  EFF7  F03F         	goto	l7902
 11049   007FE0                     l10676:
 11050                           
 11051                           ; Switch size 1, requested type "simple"
 11052                           ; Number of cases is 1, Range of values is 0 to 0
 11053                           ; switch strategies available:
 11054                           ; Name         Instructions Cycles
 11055                           ; simple_byte            4     3 (average)
 11056                           ;	Chosen strategy is simple_byte
 11057   007FE0  5055               	movf	??_disk_initialize^0,w,c
 11058   007FE2  0A00               	xorlw	0	; case 0
 11059   007FE4  B4D8               	btfsc	status,2,c
 11060   007FE6  EFD4  F03F         	goto	l7892
 11061   007FEA  EFF7  F03F         	goto	l7902
 11062   007FEE                     l7902:
 11063                           
 11064                           ;mcc_generated_files/fatfs/diskio.c: 81:     return stat;
 11065   007FEE  5058               	movf	disk_initialize@stat^0,w,c
 11066   007FF0  0012               	return		;funcret
 11067   007FF2                     __end_of_disk_initialize:
 11068                           	callstack 0
 11069                           
 11070 ;; *************** function _SD_SPI_MediaInitialize *****************
 11071 ;; Defined at:
 11072 ;;		line 494 in file "mcc_generated_files/sd_spi/sd_spi.c"
 11073 ;; Parameters:    Size  Location     Type
 11074 ;;		None
 11075 ;; Auto vars:     Size  Location     Type
 11076 ;;  CSDResponse    20   45[COMRAM] unsigned char [20]
 11077 ;;  response        5   77[COMRAM] struct .
 11078 ;;  c_size          4   73[COMRAM] unsigned long 
 11079 ;;  timeout         2   82[COMRAM] unsigned short 
 11080 ;;  count           1   72[COMRAM] unsigned char 
 11081 ;;  block_len       1   71[COMRAM] unsigned char 
 11082 ;;  index           1   70[COMRAM] unsigned char 
 11083 ;;  c_size_mult     1   69[COMRAM] unsigned char 
 11084 ;; Return value:  Size  Location     Type
 11085 ;;                  1    wreg      _Bool 
 11086 ;; Registers used:
 11087 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 11088 ;; Tracked objects:
 11089 ;;		On entry : 0/0
 11090 ;;		On exit  : 0/0
 11091 ;;		Unchanged: 0/0
 11092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11094 ;;      Locals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11095 ;;      Temps:         11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11096 ;;      Totals:        50       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11097 ;;Total ram usage:       50 bytes
 11098 ;; Hardware stack levels used: 1
 11099 ;; Hardware stack levels required when called: 2
 11100 ;; This function calls:
 11101 ;;		_SDFAST_open
 11102 ;;		_SDSLOW_open
 11103 ;;		_SD_SPI_DelayMilliseconds
 11104 ;;		_SD_SendCmd
 11105 ;;		_SPI1_Close
 11106 ;;		_SPI1_ExchangeByte
 11107 ;;		___lmul
 11108 ;; This function is called by:
 11109 ;;		_disk_initialize
 11110 ;; This function uses a non-reentrant model
 11111 ;;
 11112                           
 11113                           	psect	text25
 11114   00D9C8                     __ptext25:
 11115                           	callstack 0
 11116   00D9C8                     _SD_SPI_MediaInitialize:
 11117                           	callstack 24
 11118   00D9C8                     
 11119                           ;mcc_generated_files/sd_spi/sd_spi.c: 496:     uint16_t timeout;;mcc_generated_files/sd_
      +                          spi/sd_spi.c: 497:     SD_RESPONSE response;;mcc_generated_files/sd_spi/sd_spi.c: 498:  
      +                             uint8_t CSDResponse[20];;mcc_generated_files/sd_spi/sd_spi.c: 499:     uint8_t count,
      +                           index;;mcc_generated_files/sd_spi/sd_spi.c: 500:     uint32_t c_size;;mcc_generated_fil
      +                          es/sd_spi/sd_spi.c: 501:     uint8_t c_size_mult;;mcc_generated_files/sd_spi/sd_spi.c: 5
      +                          02:     uint8_t block_len;;mcc_generated_files/sd_spi/sd_spi.c: 504:     mediaInformatio
      +                          n.state = SD_STATE_NOT_INITIALIZED;
 11120   00D9C8  0E00               	movlw	0
 11121   00D9CA  0101               	movlb	1	; () banked
 11122   00D9CC  6FDA               	movwf	(_mediaInformation+3)& (0+255),b
 11123                           
 11124                           ;mcc_generated_files/sd_spi/sd_spi.c: 505:     mediaInformation.errorCode = MEDIA_NO_ERR
      +                          OR;
 11125   00D9CE  0E00               	movlw	0
 11126   00D9D0  6FD7               	movwf	_mediaInformation& (0+255),b
 11127                           
 11128                           ;mcc_generated_files/sd_spi/sd_spi.c: 506:     mediaInformation.finalLBA = 0x00000000;
 11129   00D9D2  0E00               	movlw	0
 11130   00D9D4  6FDB               	movwf	(_mediaInformation+4)& (0+255),b
 11131   00D9D6  0E00               	movlw	0
 11132   00D9D8  6FDC               	movwf	(_mediaInformation+5)& (0+255),b
 11133   00D9DA  0E00               	movlw	0
 11134   00D9DC  6FDD               	movwf	(_mediaInformation+6)& (0+255),b
 11135   00D9DE  0E00               	movlw	0
 11136   00D9E0  6FDE               	movwf	(_mediaInformation+7)& (0+255),b
 11137                           
 11138                           ;mcc_generated_files/sd_spi/sd_spi.c: 507:     mediaInformation.gSDMode = 0;
 11139   00D9E2  0E00               	movlw	0
 11140   00D9E4  6FDF               	movwf	(_mediaInformation+8)& (0+255),b
 11141   00D9E6                     
 11142                           ; BSR set to: 1
 11143   00D9E6  848B               	bsf	139,2,c	;volatile
 11144   00D9E8                     
 11145                           ; BSR set to: 1
 11146                           ;mcc_generated_files/sd_spi/sd_spi.c: 513:     if( spiMaster[SDSLOW].spiOpen() == 0 )
 11147   00D9E8  0E6D               	movlw	low (_spiMaster+22)
 11148   00D9EA  6EF6               	movwf	tblptrl,c
 11149   00D9EC  0EFF               	movlw	high (_spiMaster+22)
 11150   00D9EE  6EF7               	movwf	tblptrh,c
 11151   00D9F0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11152   00D9F0  6AF8               	clrf	tblptru,c
 11153   00D9F2                     	endif
 11154   00D9F2                     	if	0	;tblptru may be non-zero
 11155   00D9F2                     	endif
 11156   00D9F2  0009               	tblrd		*+
 11157   00D9F4  CFF5 F023          	movff	tablat,??_SD_SPI_MediaInitialize
 11158   00D9F8  0009               	tblrd		*+
 11159   00D9FA  CFF5 F024          	movff	tablat,??_SD_SPI_MediaInitialize+1
 11160   00D9FE  D802               	call	u8948
 11161   00DA00  EF0B  F06D         	goto	u8949
 11162   00DA04                     u8948:
 11163   00DA04  0005               	push	
 11164   00DA06  6EFA               	movwf	pclath,c
 11165   00DA08  5023               	movf	??_SD_SPI_MediaInitialize^0,w,c
 11166   00DA0A  6EFD               	movwf	tosl,c
 11167   00DA0C  5024               	movf	(??_SD_SPI_MediaInitialize+1)^0,w,c
 11168   00DA0E  6EFE               	movwf	tosh,c
 11169   00DA10  6AFF               	clrf	tosu,c
 11170   00DA12  50FA               	movf	pclath,w,c
 11171   00DA14  0012               	return		;indir
 11172   00DA16                     u8949:
 11173   00DA16  0900               	iorlw	0
 11174   00DA18  A4D8               	btfss	status,2,c
 11175   00DA1A  EF11  F06D         	goto	u8951
 11176   00DA1E  EF13  F06D         	goto	u8950
 11177   00DA22                     u8951:
 11178   00DA22  EF16  F06D         	goto	l7478
 11179   00DA26                     u8950:
 11180   00DA26                     l7474:
 11181                           
 11182                           ;mcc_generated_files/sd_spi/sd_spi.c: 514:     {;mcc_generated_files/sd_spi/sd_spi.c: 51
      +                          5:         return 0;
 11183   00DA26  0E00               	movlw	0
 11184   00DA28  EFCA  F070         	goto	l1090
 11185   00DA2C                     l7478:
 11186                           
 11187                           ;mcc_generated_files/sd_spi/sd_spi.c: 523:     SD_SPI_DelayMilliseconds(30u);
 11188   00DA2C  0E1E               	movlw	30
 11189   00DA2E  EC52  F040         	call	_SD_SPI_DelayMilliseconds
 11190   00DA32                     
 11191                           ;mcc_generated_files/sd_spi/sd_spi.c: 526:     timeout = 100;
 11192   00DA32  0E00               	movlw	0
 11193   00DA34  6E54               	movwf	(SD_SPI_MediaInitialize@timeout+1)^0,c
 11194   00DA36  0E64               	movlw	100
 11195   00DA38  6E53               	movwf	SD_SPI_MediaInitialize@timeout^0,c
 11196   00DA3A                     l7482:
 11197   00DA3A  848B               	bsf	139,2,c	;volatile
 11198   00DA3C                     
 11199                           ;mcc_generated_files/sd_spi/sd_spi.c: 534:         (void)spiMaster[SDFAST].exchangeByte(
      +                          0xFF);
 11200   00DA3C  0E5B               	movlw	low (_spiMaster+4)
 11201   00DA3E  6EF6               	movwf	tblptrl,c
 11202   00DA40  0EFF               	movlw	high (_spiMaster+4)
 11203   00DA42  6EF7               	movwf	tblptrh,c
 11204   00DA44                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11205   00DA44  6AF8               	clrf	tblptru,c
 11206   00DA46                     	endif
 11207   00DA46                     	if	0	;tblptru may be non-zero
 11208   00DA46                     	endif
 11209   00DA46  0009               	tblrd		*+
 11210   00DA48  CFF5 F023          	movff	tablat,??_SD_SPI_MediaInitialize
 11211   00DA4C  0009               	tblrd		*+
 11212   00DA4E  CFF5 F024          	movff	tablat,??_SD_SPI_MediaInitialize+1
 11213   00DA52  D802               	call	u8968
 11214   00DA54  EF36  F06D         	goto	u8969
 11215   00DA58                     u8968:
 11216   00DA58  0005               	push	
 11217   00DA5A  6EFA               	movwf	pclath,c
 11218   00DA5C  5023               	movf	??_SD_SPI_MediaInitialize^0,w,c
 11219   00DA5E  6EFD               	movwf	tosl,c
 11220   00DA60  5024               	movf	(??_SD_SPI_MediaInitialize+1)^0,w,c
 11221   00DA62  6EFE               	movwf	tosh,c
 11222   00DA64  6AFF               	clrf	tosu,c
 11223   00DA66  50FA               	movf	pclath,w,c
 11224   00DA68  0EFF               	movlw	255
 11225   00DA6A  0012               	return		;indir
 11226   00DA6C                     u8969:
 11227   00DA6C  948B               	bcf	139,2,c	;volatile
 11228   00DA6E                     
 11229                           ;mcc_generated_files/sd_spi/sd_spi.c: 539:         timeout--;
 11230   00DA6E  0653               	decf	SD_SPI_MediaInitialize@timeout^0,f,c
 11231   00DA70  A0D8               	btfss	status,0,c
 11232   00DA72  0654               	decf	(SD_SPI_MediaInitialize@timeout+1)^0,f,c
 11233   00DA74                     
 11234                           ;mcc_generated_files/sd_spi/sd_spi.c: 542:         response = SD_SendCmd(SD_GO_IDLE_STAT
      +                          E, 0x0);
 11235   00DA74  0E00               	movlw	0
 11236   00DA76  6E0C               	movwf	SD_SendCmd@address^0,c
 11237   00DA78  0E00               	movlw	0
 11238   00DA7A  6E0D               	movwf	(SD_SendCmd@address+1)^0,c
 11239   00DA7C  0E00               	movlw	0
 11240   00DA7E  6E0E               	movwf	(SD_SendCmd@address+2)^0,c
 11241   00DA80  0E00               	movlw	0
 11242   00DA82  6E0F               	movwf	(SD_SendCmd@address+3)^0,c
 11243   00DA84  0E00               	movlw	0
 11244   00DA86  EC0A  F05E         	call	_SD_SendCmd
 11245   00DA8A  EE20  F04E         	lfsr	2,SD_SPI_MediaInitialize@response
 11246   00DA8E  0E04               	movlw	4
 11247   00DA90                     u8971:
 11248   00DA90  CFEB FFDB          	movff	plusw0,plusw2
 11249   00DA94  06E8               	decf	wreg,f,c
 11250   00DA96  E2FC               	bc	u8971
 11251   00DA98                     
 11252                           ;mcc_generated_files/sd_spi/sd_spi.c: 543:     }while((response.r1._byte != 0x01) && (ti
      +                          meout != 0));
 11253   00DA98  044E               	decf	SD_SPI_MediaInitialize@response^0,w,c
 11254   00DA9A  B4D8               	btfsc	status,2,c
 11255   00DA9C  EF52  F06D         	goto	u8981
 11256   00DAA0  EF54  F06D         	goto	u8980
 11257   00DAA4                     u8981:
 11258   00DAA4  EF5D  F06D         	goto	l7496
 11259   00DAA8                     u8980:
 11260   00DAA8  5053               	movf	SD_SPI_MediaInitialize@timeout^0,w,c
 11261   00DAAA  1054               	iorwf	(SD_SPI_MediaInitialize@timeout+1)^0,w,c
 11262   00DAAC  A4D8               	btfss	status,2,c
 11263   00DAAE  EF5B  F06D         	goto	u8991
 11264   00DAB2  EF5D  F06D         	goto	u8990
 11265   00DAB6                     u8991:
 11266   00DAB6  EF1D  F06D         	goto	l7482
 11267   00DABA                     u8990:
 11268   00DABA                     l7496:
 11269                           
 11270                           ;mcc_generated_files/sd_spi/sd_spi.c: 552:     if(timeout == 0)
 11271   00DABA  5053               	movf	SD_SPI_MediaInitialize@timeout^0,w,c
 11272   00DABC  1054               	iorwf	(SD_SPI_MediaInitialize@timeout+1)^0,w,c
 11273   00DABE  A4D8               	btfss	status,2,c
 11274   00DAC0  EF64  F06D         	goto	u9001
 11275   00DAC4  EF66  F06D         	goto	u9000
 11276   00DAC8                     u9001:
 11277   00DAC8  EFC3  F06D         	goto	l7520
 11278   00DACC                     u9000:
 11279   00DACC  848B               	bsf	139,2,c	;volatile
 11280   00DACE                     
 11281                           ;mcc_generated_files/sd_spi/sd_spi.c: 555:         (void)spiMaster[SDFAST].exchangeByte(
      +                          0xFF);
 11282   00DACE  0E5B               	movlw	low (_spiMaster+4)
 11283   00DAD0  6EF6               	movwf	tblptrl,c
 11284   00DAD2  0EFF               	movlw	high (_spiMaster+4)
 11285   00DAD4  6EF7               	movwf	tblptrh,c
 11286   00DAD6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11287   00DAD6  6AF8               	clrf	tblptru,c
 11288   00DAD8                     	endif
 11289   00DAD8                     	if	0	;tblptru may be non-zero
 11290   00DAD8                     	endif
 11291   00DAD8  0009               	tblrd		*+
 11292   00DADA  CFF5 F023          	movff	tablat,??_SD_SPI_MediaInitialize
 11293   00DADE  0009               	tblrd		*+
 11294   00DAE0  CFF5 F024          	movff	tablat,??_SD_SPI_MediaInitialize+1
 11295   00DAE4  D802               	call	u9018
 11296   00DAE6  EF7F  F06D         	goto	u9019
 11297   00DAEA                     u9018:
 11298   00DAEA  0005               	push	
 11299   00DAEC  6EFA               	movwf	pclath,c
 11300   00DAEE  5023               	movf	??_SD_SPI_MediaInitialize^0,w,c
 11301   00DAF0  6EFD               	movwf	tosl,c
 11302   00DAF2  5024               	movf	(??_SD_SPI_MediaInitialize+1)^0,w,c
 11303   00DAF4  6EFE               	movwf	tosh,c
 11304   00DAF6  6AFF               	clrf	tosu,c
 11305   00DAF8  50FA               	movf	pclath,w,c
 11306   00DAFA  0EFF               	movlw	255
 11307   00DAFC  0012               	return		;indir
 11308   00DAFE                     u9019:
 11309   00DAFE  948B               	bcf	139,2,c	;volatile
 11310   00DB00                     
 11311                           ;mcc_generated_files/sd_spi/sd_spi.c: 562:         (void)SD_SendCmd(SD_STOP_TRANSMISSION
      +                          , 0x0);
 11312   00DB00  0E00               	movlw	0
 11313   00DB02  6E0C               	movwf	SD_SendCmd@address^0,c
 11314   00DB04  0E00               	movlw	0
 11315   00DB06  6E0D               	movwf	(SD_SendCmd@address+1)^0,c
 11316   00DB08  0E00               	movlw	0
 11317   00DB0A  6E0E               	movwf	(SD_SendCmd@address+2)^0,c
 11318   00DB0C  0E00               	movlw	0
 11319   00DB0E  6E0F               	movwf	(SD_SendCmd@address+3)^0,c
 11320   00DB10  0E05               	movlw	5
 11321   00DB12  EC0A  F05E         	call	_SD_SendCmd
 11322   00DB16                     
 11323                           ;mcc_generated_files/sd_spi/sd_spi.c: 564:         response = SD_SendCmd(SD_GO_IDLE_STAT
      +                          E, 0x0);
 11324   00DB16  0E00               	movlw	0
 11325   00DB18  6E0C               	movwf	SD_SendCmd@address^0,c
 11326   00DB1A  0E00               	movlw	0
 11327   00DB1C  6E0D               	movwf	(SD_SendCmd@address+1)^0,c
 11328   00DB1E  0E00               	movlw	0
 11329   00DB20  6E0E               	movwf	(SD_SendCmd@address+2)^0,c
 11330   00DB22  0E00               	movlw	0
 11331   00DB24  6E0F               	movwf	(SD_SendCmd@address+3)^0,c
 11332   00DB26  0E00               	movlw	0
 11333   00DB28  EC0A  F05E         	call	_SD_SendCmd
 11334   00DB2C  EE20  F04E         	lfsr	2,SD_SPI_MediaInitialize@response
 11335   00DB30  0E04               	movlw	4
 11336   00DB32                     u9021:
 11337   00DB32  CFEB FFDB          	movff	plusw0,plusw2
 11338   00DB36  06E8               	decf	wreg,f,c
 11339   00DB38  E2FC               	bc	u9021
 11340   00DB3A                     
 11341                           ;mcc_generated_files/sd_spi/sd_spi.c: 565:         if(response.r1._byte != 0x01)
 11342   00DB3A  044E               	decf	SD_SPI_MediaInitialize@response^0,w,c
 11343   00DB3C  B4D8               	btfsc	status,2,c
 11344   00DB3E  EFA3  F06D         	goto	u9031
 11345   00DB42  EFA5  F06D         	goto	u9030
 11346   00DB46                     u9031:
 11347   00DB46  EFC3  F06D         	goto	l7520
 11348   00DB4A                     u9030:
 11349   00DB4A                     
 11350                           ;mcc_generated_files/sd_spi/sd_spi.c: 566:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 574:             mediaInformation.errorCode = MEDIA_CANNOT_INITIALIZE;
 11351   00DB4A  0E02               	movlw	2
 11352   00DB4C  0101               	movlb	1	; () banked
 11353   00DB4E  6FD7               	movwf	_mediaInformation& (0+255),b
 11354   00DB50                     
 11355                           ; BSR set to: 1
 11356   00DB50  848B               	bsf	139,2,c	;volatile
 11357   00DB52                     
 11358                           ; BSR set to: 1
 11359                           ;mcc_generated_files/sd_spi/sd_spi.c: 577:             spiMaster[SDFAST].spiClose();
 11360   00DB52  0E57               	movlw	low _spiMaster
 11361   00DB54  6EF6               	movwf	tblptrl,c
 11362   00DB56                     	if	1	;There is more than 1 active tblptr byte
 11363   00DB56  0EFF               	movlw	high _spiMaster
 11364   00DB58  6EF7               	movwf	tblptrh,c
 11365   00DB5A                     	endif
 11366   00DB5A                     	if	1	;There are 3 active tblptr bytes
 11367   00DB5A  0E00               	movlw	low (_spiMaster shr (0+16))
 11368   00DB5C  6EF8               	movwf	tblptru,c
 11369   00DB5E                     	endif
 11370   00DB5E  0009               	tblrd		*+
 11371   00DB60  CFF5 F023          	movff	tablat,??_SD_SPI_MediaInitialize
 11372   00DB64  0009               	tblrd		*+
 11373   00DB66  CFF5 F024          	movff	tablat,??_SD_SPI_MediaInitialize+1
 11374   00DB6A  D802               	call	u9048
 11375   00DB6C  EFC1  F06D         	goto	u9049
 11376   00DB70                     u9048:
 11377   00DB70  0005               	push	
 11378   00DB72  6EFA               	movwf	pclath,c
 11379   00DB74  5023               	movf	??_SD_SPI_MediaInitialize^0,w,c
 11380   00DB76  6EFD               	movwf	tosl,c
 11381   00DB78  5024               	movf	(??_SD_SPI_MediaInitialize+1)^0,w,c
 11382   00DB7A  6EFE               	movwf	tosh,c
 11383   00DB7C  6AFF               	clrf	tosu,c
 11384   00DB7E  50FA               	movf	pclath,w,c
 11385   00DB80  0012               	return		;indir
 11386   00DB82                     u9049:
 11387   00DB82  EF13  F06D         	goto	l7474
 11388   00DB86                     l7520:
 11389                           
 11390                           ;mcc_generated_files/sd_spi/sd_spi.c: 598:     response = SD_SendCmd(SD_SEND_IF_COND, 0x
      +                          1AA);
 11391   00DB86  0EAA               	movlw	170
 11392   00DB88  6E0C               	movwf	SD_SendCmd@address^0,c
 11393   00DB8A  0E01               	movlw	1
 11394   00DB8C  6E0D               	movwf	(SD_SendCmd@address+1)^0,c
 11395   00DB8E  0E00               	movlw	0
 11396   00DB90  6E0E               	movwf	(SD_SendCmd@address+2)^0,c
 11397   00DB92  0E00               	movlw	0
 11398   00DB94  6E0F               	movwf	(SD_SendCmd@address+3)^0,c
 11399   00DB96  0E02               	movlw	2
 11400   00DB98  EC0A  F05E         	call	_SD_SendCmd
 11401   00DB9C  EE20  F04E         	lfsr	2,SD_SPI_MediaInitialize@response
 11402   00DBA0  0E04               	movlw	4
 11403   00DBA2                     u9051:
 11404   00DBA2  CFEB FFDB          	movff	plusw0,plusw2
 11405   00DBA6  06E8               	decf	wreg,f,c
 11406   00DBA8  E2FC               	bc	u9051
 11407   00DBAA                     
 11408                           ;mcc_generated_files/sd_spi/sd_spi.c: 599:     if(((response.r7.bytewise.argument._retur
      +                          nVal & 0xFFF) == 0x1AA) && (!response.r7.bitwise.bits.ILLEGAL_CMD))
 11409   00DBAA  EE20  F04F         	lfsr	2,SD_SPI_MediaInitialize@response+1
 11410   00DBAE  0EFF               	movlw	255
 11411   00DBB0  14DE               	andwf	postinc2,w,c
 11412   00DBB2  6E23               	movwf	??_SD_SPI_MediaInitialize^0,c
 11413   00DBB4  0E0F               	movlw	15
 11414   00DBB6  14DE               	andwf	postinc2,w,c
 11415   00DBB8  6E24               	movwf	(??_SD_SPI_MediaInitialize+1)^0,c
 11416   00DBBA  0E00               	movlw	0
 11417   00DBBC  14DE               	andwf	postinc2,w,c
 11418   00DBBE  6E25               	movwf	(??_SD_SPI_MediaInitialize+2)^0,c
 11419   00DBC0  0E00               	movlw	0
 11420   00DBC2  14DE               	andwf	postinc2,w,c
 11421   00DBC4  6E26               	movwf	(??_SD_SPI_MediaInitialize+3)^0,c
 11422   00DBC6  0EAA               	movlw	170
 11423   00DBC8  1823               	xorwf	??_SD_SPI_MediaInitialize^0,w,c
 11424   00DBCA  E108               	bnz	u9061
 11425   00DBCC  0424               	decf	(??_SD_SPI_MediaInitialize+1)^0,w,c
 11426   00DBCE  1025               	iorwf	(??_SD_SPI_MediaInitialize+2)^0,w,c
 11427   00DBD0  1026               	iorwf	(??_SD_SPI_MediaInitialize+3)^0,w,c
 11428   00DBD2  A4D8               	btfss	status,2,c
 11429   00DBD4  EFEE  F06D         	goto	u9061
 11430   00DBD8  EFF0  F06D         	goto	u9060
 11431   00DBDC                     u9061:
 11432   00DBDC  EF69  F06E         	goto	l7556
 11433   00DBE0                     u9060:
 11434   00DBE0  B44E               	btfsc	SD_SPI_MediaInitialize@response^0,2,c
 11435   00DBE2  EFF5  F06D         	goto	u9071
 11436   00DBE6  EFF7  F06D         	goto	u9070
 11437   00DBEA                     u9071:
 11438   00DBEA  EF69  F06E         	goto	l7556
 11439   00DBEE                     u9070:
 11440   00DBEE  0E00               	movlw	0
 11441   00DBF0  6E0C               	movwf	SD_SendCmd@address^0,c
 11442   00DBF2  0E00               	movlw	0
 11443   00DBF4  6E0D               	movwf	(SD_SendCmd@address+1)^0,c
 11444   00DBF6  0E00               	movlw	0
 11445   00DBF8  6E0E               	movwf	(SD_SendCmd@address+2)^0,c
 11446   00DBFA  0E00               	movlw	0
 11447   00DBFC  6E0F               	movwf	(SD_SendCmd@address+3)^0,c
 11448   00DBFE  0E10               	movlw	16
 11449   00DC00  EC0A  F05E         	call	_SD_SendCmd
 11450   00DC04                     
 11451                           ;mcc_generated_files/sd_spi/sd_spi.c: 617:         for(timeout = 0; timeout < 0xFFFF; ti
      +                          meout++)
 11452   00DC04  0E00               	movlw	0
 11453   00DC06  6E54               	movwf	(SD_SPI_MediaInitialize@timeout+1)^0,c
 11454   00DC08  0E00               	movlw	0
 11455   00DC0A  6E53               	movwf	SD_SPI_MediaInitialize@timeout^0,c
 11456   00DC0C                     l7534:
 11457                           
 11458                           ;mcc_generated_files/sd_spi/sd_spi.c: 618:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 620:             (void)SD_SendCmd(SD_APP_CMD, 0x00000000);
 11459   00DC0C  0E00               	movlw	0
 11460   00DC0E  6E0C               	movwf	SD_SendCmd@address^0,c
 11461   00DC10  0E00               	movlw	0
 11462   00DC12  6E0D               	movwf	(SD_SendCmd@address+1)^0,c
 11463   00DC14  0E00               	movlw	0
 11464   00DC16  6E0E               	movwf	(SD_SendCmd@address+2)^0,c
 11465   00DC18  0E00               	movlw	0
 11466   00DC1A  6E0F               	movwf	(SD_SendCmd@address+3)^0,c
 11467   00DC1C  0E0F               	movlw	15
 11468   00DC1E  EC0A  F05E         	call	_SD_SendCmd
 11469                           
 11470                           ;mcc_generated_files/sd_spi/sd_spi.c: 625:             response = SD_SendCmd(SD_SD_SEND_
      +                          OP_COND,0x40000000);
 11471   00DC22  0E00               	movlw	0
 11472   00DC24  6E0C               	movwf	SD_SendCmd@address^0,c
 11473   00DC26  0E00               	movlw	0
 11474   00DC28  6E0D               	movwf	(SD_SendCmd@address+1)^0,c
 11475   00DC2A  0E00               	movlw	0
 11476   00DC2C  6E0E               	movwf	(SD_SendCmd@address+2)^0,c
 11477   00DC2E  0E40               	movlw	64
 11478   00DC30  6E0F               	movwf	(SD_SendCmd@address+3)^0,c
 11479   00DC32  0E12               	movlw	18
 11480   00DC34  EC0A  F05E         	call	_SD_SendCmd
 11481   00DC38  EE20  F04E         	lfsr	2,SD_SPI_MediaInitialize@response
 11482   00DC3C  0E04               	movlw	4
 11483   00DC3E                     u9081:
 11484   00DC3E  CFEB FFDB          	movff	plusw0,plusw2
 11485   00DC42  06E8               	decf	wreg,f,c
 11486   00DC44  E2FC               	bc	u9081
 11487   00DC46                     
 11488                           ;mcc_generated_files/sd_spi/sd_spi.c: 631:             if(response.r1._byte == 0)
 11489   00DC46  504E               	movf	SD_SPI_MediaInitialize@response^0,w,c
 11490   00DC48  A4D8               	btfss	status,2,c
 11491   00DC4A  EF29  F06E         	goto	u9091
 11492   00DC4E  EF2B  F06E         	goto	u9090
 11493   00DC52                     u9091:
 11494   00DC52  EF2D  F06E         	goto	l7540
 11495   00DC56                     u9090:
 11496   00DC56  EF39  F06E         	goto	l7544
 11497   00DC5A                     l7540:
 11498                           
 11499                           ;mcc_generated_files/sd_spi/sd_spi.c: 635:         }
 11500   00DC5A  4A53               	infsnz	SD_SPI_MediaInitialize@timeout^0,f,c
 11501   00DC5C  2A54               	incf	(SD_SPI_MediaInitialize@timeout+1)^0,f,c
 11502   00DC5E  2853               	incf	SD_SPI_MediaInitialize@timeout^0,w,c
 11503   00DC60  E106               	bnz	u9101
 11504   00DC62  2854               	incf	(SD_SPI_MediaInitialize@timeout+1)^0,w,c
 11505   00DC64  A4D8               	btfss	status,2,c
 11506   00DC66  EF37  F06E         	goto	u9101
 11507   00DC6A  EF39  F06E         	goto	u9100
 11508   00DC6E                     u9101:
 11509   00DC6E  EF06  F06E         	goto	l7534
 11510   00DC72                     u9100:
 11511   00DC72                     l7544:
 11512                           
 11513                           ;mcc_generated_files/sd_spi/sd_spi.c: 637:         if(timeout >= 0xFFFF)
 11514   00DC72  2853               	incf	SD_SPI_MediaInitialize@timeout^0,w,c
 11515   00DC74  E106               	bnz	u9111
 11516   00DC76  2854               	incf	(SD_SPI_MediaInitialize@timeout+1)^0,w,c
 11517   00DC78  A4D8               	btfss	status,2,c
 11518   00DC7A  EF41  F06E         	goto	u9111
 11519   00DC7E  EF43  F06E         	goto	u9110
 11520   00DC82                     u9111:
 11521   00DC82  EF46  F06E         	goto	l7548
 11522   00DC86                     u9110:
 11523   00DC86                     
 11524                           ;mcc_generated_files/sd_spi/sd_spi.c: 638:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 639:             mediaInformation.errorCode = MEDIA_CANNOT_INITIALIZE;
 11525   00DC86  0E02               	movlw	2
 11526   00DC88  0101               	movlb	1	; () banked
 11527   00DC8A  6FD7               	movwf	_mediaInformation& (0+255),b
 11528   00DC8C                     l7548:
 11529                           
 11530                           ;mcc_generated_files/sd_spi/sd_spi.c: 644:         response = SD_SendCmd(SD_READ_OCR, 0x
      +                          0);
 11531   00DC8C  0E00               	movlw	0
 11532   00DC8E  6E0C               	movwf	SD_SendCmd@address^0,c
 11533   00DC90  0E00               	movlw	0
 11534   00DC92  6E0D               	movwf	(SD_SendCmd@address+1)^0,c
 11535   00DC94  0E00               	movlw	0
 11536   00DC96  6E0E               	movwf	(SD_SendCmd@address+2)^0,c
 11537   00DC98  0E00               	movlw	0
 11538   00DC9A  6E0F               	movwf	(SD_SendCmd@address+3)^0,c
 11539   00DC9C  0E10               	movlw	16
 11540   00DC9E  EC0A  F05E         	call	_SD_SendCmd
 11541   00DCA2  EE20  F04E         	lfsr	2,SD_SPI_MediaInitialize@response
 11542   00DCA6  0E04               	movlw	4
 11543   00DCA8                     u9121:
 11544   00DCA8  CFEB FFDB          	movff	plusw0,plusw2
 11545   00DCAC  06E8               	decf	wreg,f,c
 11546   00DCAE  E2FC               	bc	u9121
 11547   00DCB0                     
 11548                           ;mcc_generated_files/sd_spi/sd_spi.c: 648:         if(response.r7.bytewise.argument._ret
      +                          urnVal & 0x40000000)
 11549   00DCB0  AC52               	btfss	(SD_SPI_MediaInitialize@response+4)^0,6,c
 11550   00DCB2  EF5D  F06E         	goto	u9131
 11551   00DCB6  EF5F  F06E         	goto	u9130
 11552   00DCBA                     u9131:
 11553   00DCBA  EF64  F06E         	goto	l7554
 11554   00DCBE                     u9130:
 11555   00DCBE                     
 11556                           ;mcc_generated_files/sd_spi/sd_spi.c: 649:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 650:             mediaInformation.gSDMode = 1;
 11557   00DCBE  0E01               	movlw	1
 11558   00DCC0  0101               	movlb	1	; () banked
 11559   00DCC2  6FDF               	movwf	(_mediaInformation+8)& (0+255),b
 11560                           
 11561                           ;mcc_generated_files/sd_spi/sd_spi.c: 651:         }
 11562   00DCC4  EFA6  F06E         	goto	l1127
 11563   00DCC8                     l7554:
 11564                           
 11565                           ;mcc_generated_files/sd_spi/sd_spi.c: 653:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 654:             mediaInformation.gSDMode = 0;
 11566   00DCC8  0E00               	movlw	0
 11567   00DCCA  0101               	movlb	1	; () banked
 11568   00DCCC  6FDF               	movwf	(_mediaInformation+8)& (0+255),b
 11569   00DCCE  EFA6  F06E         	goto	l1127
 11570   00DCD2                     l7556:
 11571                           
 11572                           ;mcc_generated_files/sd_spi/sd_spi.c: 661:     {;mcc_generated_files/sd_spi/sd_spi.c: 66
      +                          6:         SD_SPI_DelayMilliseconds(1u);
 11573   00DCD2  0E01               	movlw	1
 11574   00DCD4  EC52  F040         	call	_SD_SPI_DelayMilliseconds
 11575   00DCD8  948B               	bcf	139,2,c	;volatile
 11576   00DCDA                     
 11577                           ;mcc_generated_files/sd_spi/sd_spi.c: 671:         mediaInformation.gSDMode = 0;
 11578   00DCDA  0E00               	movlw	0
 11579   00DCDC  0101               	movlb	1	; () banked
 11580   00DCDE  6FDF               	movwf	(_mediaInformation+8)& (0+255),b
 11581   00DCE0                     
 11582                           ; BSR set to: 1
 11583                           ;mcc_generated_files/sd_spi/sd_spi.c: 673:         timeout = 0x1FFF;
 11584   00DCE0  0E1F               	movlw	31
 11585   00DCE2  6E54               	movwf	(SD_SPI_MediaInitialize@timeout+1)^0,c
 11586   00DCE4  6853               	setf	SD_SPI_MediaInitialize@timeout^0,c
 11587   00DCE6                     l7564:
 11588                           
 11589                           ;mcc_generated_files/sd_spi/sd_spi.c: 675:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 677:             response = SD_SendCmd(SD_SEND_OP_COND, 0x00000000);
 11590   00DCE6  0E00               	movlw	0
 11591   00DCE8  6E0C               	movwf	SD_SendCmd@address^0,c
 11592   00DCEA  0E00               	movlw	0
 11593   00DCEC  6E0D               	movwf	(SD_SendCmd@address+1)^0,c
 11594   00DCEE  0E00               	movlw	0
 11595   00DCF0  6E0E               	movwf	(SD_SendCmd@address+2)^0,c
 11596   00DCF2  0E00               	movlw	0
 11597   00DCF4  6E0F               	movwf	(SD_SendCmd@address+3)^0,c
 11598   00DCF6  0E01               	movlw	1
 11599   00DCF8  EC0A  F05E         	call	_SD_SendCmd
 11600   00DCFC  EE20  F04E         	lfsr	2,SD_SPI_MediaInitialize@response
 11601   00DD00  0E04               	movlw	4
 11602   00DD02                     u9141:
 11603   00DD02  CFEB FFDB          	movff	plusw0,plusw2
 11604   00DD06  06E8               	decf	wreg,f,c
 11605   00DD08  E2FC               	bc	u9141
 11606   00DD0A                     
 11607                           ;mcc_generated_files/sd_spi/sd_spi.c: 678:             timeout--;
 11608   00DD0A  0653               	decf	SD_SPI_MediaInitialize@timeout^0,f,c
 11609   00DD0C  A0D8               	btfss	status,0,c
 11610   00DD0E  0654               	decf	(SD_SPI_MediaInitialize@timeout+1)^0,f,c
 11611   00DD10                     
 11612                           ;mcc_generated_files/sd_spi/sd_spi.c: 679:         }while((response.r1._byte != 0x00) &&
      +                           (timeout != 0));
 11613   00DD10  504E               	movf	SD_SPI_MediaInitialize@response^0,w,c
 11614   00DD12  B4D8               	btfsc	status,2,c
 11615   00DD14  EF8E  F06E         	goto	u9151
 11616   00DD18  EF90  F06E         	goto	u9150
 11617   00DD1C                     u9151:
 11618   00DD1C  EF99  F06E         	goto	l7572
 11619   00DD20                     u9150:
 11620   00DD20  5053               	movf	SD_SPI_MediaInitialize@timeout^0,w,c
 11621   00DD22  1054               	iorwf	(SD_SPI_MediaInitialize@timeout+1)^0,w,c
 11622   00DD24  A4D8               	btfss	status,2,c
 11623   00DD26  EF97  F06E         	goto	u9161
 11624   00DD2A  EF99  F06E         	goto	u9160
 11625   00DD2E                     u9161:
 11626   00DD2E  EF73  F06E         	goto	l7564
 11627   00DD32                     u9160:
 11628   00DD32                     l7572:
 11629                           
 11630                           ;mcc_generated_files/sd_spi/sd_spi.c: 682:         if(timeout == 0)
 11631   00DD32  5053               	movf	SD_SPI_MediaInitialize@timeout^0,w,c
 11632   00DD34  1054               	iorwf	(SD_SPI_MediaInitialize@timeout+1)^0,w,c
 11633   00DD36  A4D8               	btfss	status,2,c
 11634   00DD38  EFA0  F06E         	goto	u9171
 11635   00DD3C  EFA2  F06E         	goto	u9170
 11636   00DD40                     u9171:
 11637   00DD40  EFA6  F06E         	goto	l1127
 11638   00DD44                     u9170:
 11639   00DD44                     
 11640                           ;mcc_generated_files/sd_spi/sd_spi.c: 683:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 684:             mediaInformation.errorCode = MEDIA_CANNOT_INITIALIZE;
 11641   00DD44  0E02               	movlw	2
 11642   00DD46  0101               	movlb	1	; () banked
 11643   00DD48  6FD7               	movwf	_mediaInformation& (0+255),b
 11644   00DD4A                     
 11645                           ; BSR set to: 1
 11646   00DD4A  848B               	bsf	139,2,c	;volatile
 11647   00DD4C                     l1127:
 11648   00DD4C  848B               	bsf	139,2,c	;volatile
 11649   00DD4E                     
 11650                           ;mcc_generated_files/sd_spi/sd_spi.c: 699:     spiMaster[SDFAST].spiClose();
 11651   00DD4E  0E57               	movlw	low _spiMaster
 11652   00DD50  6EF6               	movwf	tblptrl,c
 11653   00DD52                     	if	1	;There is more than 1 active tblptr byte
 11654   00DD52  0EFF               	movlw	high _spiMaster
 11655   00DD54  6EF7               	movwf	tblptrh,c
 11656   00DD56                     	endif
 11657   00DD56                     	if	1	;There are 3 active tblptr bytes
 11658   00DD56  0E00               	movlw	low (_spiMaster shr (0+16))
 11659   00DD58  6EF8               	movwf	tblptru,c
 11660   00DD5A                     	endif
 11661   00DD5A  0009               	tblrd		*+
 11662   00DD5C  CFF5 F023          	movff	tablat,??_SD_SPI_MediaInitialize
 11663   00DD60  0009               	tblrd		*+
 11664   00DD62  CFF5 F024          	movff	tablat,??_SD_SPI_MediaInitialize+1
 11665   00DD66  D802               	call	u9188
 11666   00DD68  EFBF  F06E         	goto	u9189
 11667   00DD6C                     u9188:
 11668   00DD6C  0005               	push	
 11669   00DD6E  6EFA               	movwf	pclath,c
 11670   00DD70  5023               	movf	??_SD_SPI_MediaInitialize^0,w,c
 11671   00DD72  6EFD               	movwf	tosl,c
 11672   00DD74  5024               	movf	(??_SD_SPI_MediaInitialize+1)^0,w,c
 11673   00DD76  6EFE               	movwf	tosh,c
 11674   00DD78  6AFF               	clrf	tosu,c
 11675   00DD7A  50FA               	movf	pclath,w,c
 11676   00DD7C  0012               	return		;indir
 11677   00DD7E                     u9189:
 11678   00DD7E                     
 11679                           ;mcc_generated_files/sd_spi/sd_spi.c: 700:     if(spiMaster[SDFAST].spiOpen() == 0)
 11680   00DD7E  0E59               	movlw	low (_spiMaster+2)
 11681   00DD80  6EF6               	movwf	tblptrl,c
 11682   00DD82  0EFF               	movlw	high (_spiMaster+2)
 11683   00DD84  6EF7               	movwf	tblptrh,c
 11684   00DD86                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11685   00DD86  6AF8               	clrf	tblptru,c
 11686   00DD88                     	endif
 11687   00DD88                     	if	0	;tblptru may be non-zero
 11688   00DD88                     	endif
 11689   00DD88  0009               	tblrd		*+
 11690   00DD8A  CFF5 F023          	movff	tablat,??_SD_SPI_MediaInitialize
 11691   00DD8E  0009               	tblrd		*+
 11692   00DD90  CFF5 F024          	movff	tablat,??_SD_SPI_MediaInitialize+1
 11693   00DD94  D802               	call	u9198
 11694   00DD96  EFD6  F06E         	goto	u9199
 11695   00DD9A                     u9198:
 11696   00DD9A  0005               	push	
 11697   00DD9C  6EFA               	movwf	pclath,c
 11698   00DD9E  5023               	movf	??_SD_SPI_MediaInitialize^0,w,c
 11699   00DDA0  6EFD               	movwf	tosl,c
 11700   00DDA2  5024               	movf	(??_SD_SPI_MediaInitialize+1)^0,w,c
 11701   00DDA4  6EFE               	movwf	tosh,c
 11702   00DDA6  6AFF               	clrf	tosu,c
 11703   00DDA8  50FA               	movf	pclath,w,c
 11704   00DDAA  0012               	return		;indir
 11705   00DDAC                     u9199:
 11706   00DDAC  0900               	iorlw	0
 11707   00DDAE  A4D8               	btfss	status,2,c
 11708   00DDB0  EFDC  F06E         	goto	u9201
 11709   00DDB4  EFDE  F06E         	goto	u9200
 11710   00DDB8                     u9201:
 11711   00DDB8  EFE0  F06E         	goto	l1130
 11712   00DDBC                     u9200:
 11713   00DDBC  EF13  F06D         	goto	l7474
 11714   00DDC0                     l1130:
 11715   00DDC0  948B               	bcf	139,2,c	;volatile
 11716   00DDC2                     
 11717                           ;mcc_generated_files/sd_spi/sd_spi.c: 708:     timeout = (uint16_t)20;
 11718   00DDC2  0E00               	movlw	0
 11719   00DDC4  6E54               	movwf	(SD_SPI_MediaInitialize@timeout+1)^0,c
 11720   00DDC6  0E14               	movlw	20
 11721   00DDC8  6E53               	movwf	SD_SPI_MediaInitialize@timeout^0,c
 11722   00DDCA                     l7588:
 11723                           
 11724                           ;mcc_generated_files/sd_spi/sd_spi.c: 710:     {;mcc_generated_files/sd_spi/sd_spi.c: 71
      +                          2:         response = SD_SendCmd(SD_SEND_CSD, 0x00);
 11725   00DDCA  0E00               	movlw	0
 11726   00DDCC  6E0C               	movwf	SD_SendCmd@address^0,c
 11727   00DDCE  0E00               	movlw	0
 11728   00DDD0  6E0D               	movwf	(SD_SendCmd@address+1)^0,c
 11729   00DDD2  0E00               	movlw	0
 11730   00DDD4  6E0E               	movwf	(SD_SendCmd@address+2)^0,c
 11731   00DDD6  0E00               	movlw	0
 11732   00DDD8  6E0F               	movwf	(SD_SendCmd@address+3)^0,c
 11733   00DDDA  0E03               	movlw	3
 11734   00DDDC  EC0A  F05E         	call	_SD_SendCmd
 11735   00DDE0  EE20  F04E         	lfsr	2,SD_SPI_MediaInitialize@response
 11736   00DDE4  0E04               	movlw	4
 11737   00DDE6                     u9211:
 11738   00DDE6  CFEB FFDB          	movff	plusw0,plusw2
 11739   00DDEA  06E8               	decf	wreg,f,c
 11740   00DDEC  E2FC               	bc	u9211
 11741   00DDEE                     
 11742                           ;mcc_generated_files/sd_spi/sd_spi.c: 713:         timeout--;
 11743   00DDEE  0653               	decf	SD_SPI_MediaInitialize@timeout^0,f,c
 11744   00DDF0  A0D8               	btfss	status,0,c
 11745   00DDF2  0654               	decf	(SD_SPI_MediaInitialize@timeout+1)^0,f,c
 11746   00DDF4                     
 11747                           ;mcc_generated_files/sd_spi/sd_spi.c: 714:     }while((response.r1._byte != 0x00) && (ti
      +                          meout != 0));
 11748   00DDF4  504E               	movf	SD_SPI_MediaInitialize@response^0,w,c
 11749   00DDF6  B4D8               	btfsc	status,2,c
 11750   00DDF8  EF00  F06F         	goto	u9221
 11751   00DDFC  EF02  F06F         	goto	u9220
 11752   00DE00                     u9221:
 11753   00DE00  EF0B  F06F         	goto	l7596
 11754   00DE04                     u9220:
 11755   00DE04  5053               	movf	SD_SPI_MediaInitialize@timeout^0,w,c
 11756   00DE06  1054               	iorwf	(SD_SPI_MediaInitialize@timeout+1)^0,w,c
 11757   00DE08  A4D8               	btfss	status,2,c
 11758   00DE0A  EF09  F06F         	goto	u9231
 11759   00DE0E  EF0B  F06F         	goto	u9230
 11760   00DE12                     u9231:
 11761   00DE12  EFE5  F06E         	goto	l7588
 11762   00DE16                     u9230:
 11763   00DE16                     l7596:
 11764                           
 11765                           ;mcc_generated_files/sd_spi/sd_spi.c: 716:     if(timeout == 0x00)
 11766   00DE16  5053               	movf	SD_SPI_MediaInitialize@timeout^0,w,c
 11767   00DE18  1054               	iorwf	(SD_SPI_MediaInitialize@timeout+1)^0,w,c
 11768   00DE1A  A4D8               	btfss	status,2,c
 11769   00DE1C  EF12  F06F         	goto	u9241
 11770   00DE20  EF14  F06F         	goto	u9240
 11771   00DE24                     u9241:
 11772   00DE24  EF32  F06F         	goto	l7608
 11773   00DE28                     u9240:
 11774   00DE28                     
 11775                           ;mcc_generated_files/sd_spi/sd_spi.c: 717:     {;mcc_generated_files/sd_spi/sd_spi.c: 71
      +                          9:         mediaInformation.errorCode = MEDIA_CANNOT_INITIALIZE;
 11776   00DE28  0E02               	movlw	2
 11777   00DE2A  0101               	movlb	1	; () banked
 11778   00DE2C  6FD7               	movwf	_mediaInformation& (0+255),b
 11779   00DE2E                     
 11780                           ; BSR set to: 1
 11781   00DE2E  848B               	bsf	139,2,c	;volatile
 11782   00DE30                     
 11783                           ; BSR set to: 1
 11784                           ;mcc_generated_files/sd_spi/sd_spi.c: 722:         spiMaster[SDFAST].spiClose();
 11785   00DE30  0E57               	movlw	low _spiMaster
 11786   00DE32  6EF6               	movwf	tblptrl,c
 11787   00DE34                     	if	1	;There is more than 1 active tblptr byte
 11788   00DE34  0EFF               	movlw	high _spiMaster
 11789   00DE36  6EF7               	movwf	tblptrh,c
 11790   00DE38                     	endif
 11791   00DE38                     	if	1	;There are 3 active tblptr bytes
 11792   00DE38  0E00               	movlw	low (_spiMaster shr (0+16))
 11793   00DE3A  6EF8               	movwf	tblptru,c
 11794   00DE3C                     	endif
 11795   00DE3C  0009               	tblrd		*+
 11796   00DE3E  CFF5 F023          	movff	tablat,??_SD_SPI_MediaInitialize
 11797   00DE42  0009               	tblrd		*+
 11798   00DE44  CFF5 F024          	movff	tablat,??_SD_SPI_MediaInitialize+1
 11799   00DE48  D802               	call	u9258
 11800   00DE4A  EF30  F06F         	goto	u9259
 11801   00DE4E                     u9258:
 11802   00DE4E  0005               	push	
 11803   00DE50  6EFA               	movwf	pclath,c
 11804   00DE52  5023               	movf	??_SD_SPI_MediaInitialize^0,w,c
 11805   00DE54  6EFD               	movwf	tosl,c
 11806   00DE56  5024               	movf	(??_SD_SPI_MediaInitialize+1)^0,w,c
 11807   00DE58  6EFE               	movwf	tosh,c
 11808   00DE5A  6AFF               	clrf	tosu,c
 11809   00DE5C  50FA               	movf	pclath,w,c
 11810   00DE5E  0012               	return		;indir
 11811   00DE60                     u9259:
 11812   00DE60  EF13  F06D         	goto	l7474
 11813   00DE64                     l7608:
 11814                           
 11815                           ;mcc_generated_files/sd_spi/sd_spi.c: 729:     index = 0;
 11816   00DE64  0E00               	movlw	0
 11817   00DE66  6E47               	movwf	SD_SPI_MediaInitialize@index^0,c
 11818                           
 11819                           ;mcc_generated_files/sd_spi/sd_spi.c: 730:     for (count = 0; count < 20u; count ++)
 11820   00DE68  0E00               	movlw	0
 11821   00DE6A  6E49               	movwf	SD_SPI_MediaInitialize@count^0,c
 11822   00DE6C                     l7614:
 11823                           
 11824                           ;mcc_generated_files/sd_spi/sd_spi.c: 731:     {;mcc_generated_files/sd_spi/sd_spi.c: 73
      +                          2:         CSDResponse[index] = spiMaster[SDFAST].exchangeByte(0xFF);
 11825   00DE6C  0E2E               	movlw	low SD_SPI_MediaInitialize@CSDResponse
 11826   00DE6E  2447               	addwf	SD_SPI_MediaInitialize@index^0,w,c
 11827   00DE70  6ED9               	movwf	fsr2l,c
 11828   00DE72  6ADA               	clrf	fsr2h,c
 11829   00DE74  0E00               	movlw	high SD_SPI_MediaInitialize@CSDResponse
 11830   00DE76  22DA               	addwfc	fsr2h,f,c
 11831   00DE78  0E5B               	movlw	low (_spiMaster+4)
 11832   00DE7A  6EF6               	movwf	tblptrl,c
 11833   00DE7C  0EFF               	movlw	high (_spiMaster+4)
 11834   00DE7E  6EF7               	movwf	tblptrh,c
 11835   00DE80                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11836   00DE80  6AF8               	clrf	tblptru,c
 11837   00DE82                     	endif
 11838   00DE82                     	if	0	;tblptru may be non-zero
 11839   00DE82                     	endif
 11840   00DE82  0009               	tblrd		*+
 11841   00DE84  CFF5 F023          	movff	tablat,??_SD_SPI_MediaInitialize
 11842   00DE88  0009               	tblrd		*+
 11843   00DE8A  CFF5 F024          	movff	tablat,??_SD_SPI_MediaInitialize+1
 11844   00DE8E  D802               	call	u9268
 11845   00DE90  EF54  F06F         	goto	u9269
 11846   00DE94                     u9268:
 11847   00DE94  0005               	push	
 11848   00DE96  6EFA               	movwf	pclath,c
 11849   00DE98  5023               	movf	??_SD_SPI_MediaInitialize^0,w,c
 11850   00DE9A  6EFD               	movwf	tosl,c
 11851   00DE9C  5024               	movf	(??_SD_SPI_MediaInitialize+1)^0,w,c
 11852   00DE9E  6EFE               	movwf	tosh,c
 11853   00DEA0  6AFF               	clrf	tosu,c
 11854   00DEA2  50FA               	movf	pclath,w,c
 11855   00DEA4  0EFF               	movlw	255
 11856   00DEA6  0012               	return		;indir
 11857   00DEA8                     u9269:
 11858   00DEA8  6EDF               	movwf	indf2,c
 11859   00DEAA                     
 11860                           ;mcc_generated_files/sd_spi/sd_spi.c: 733:         index++;
 11861   00DEAA  2A47               	incf	SD_SPI_MediaInitialize@index^0,f,c
 11862   00DEAC                     
 11863                           ;mcc_generated_files/sd_spi/sd_spi.c: 736:         if((count == 0) && (CSDResponse[0] ==
      +                           SD_TOKEN_START))
 11864   00DEAC  5049               	movf	SD_SPI_MediaInitialize@count^0,w,c
 11865   00DEAE  A4D8               	btfss	status,2,c
 11866   00DEB0  EF5C  F06F         	goto	u9271
 11867   00DEB4  EF5E  F06F         	goto	u9270
 11868   00DEB8                     u9271:
 11869   00DEB8  EF69  F06F         	goto	l7624
 11870   00DEBC                     u9270:
 11871   00DEBC  0EFE               	movlw	254
 11872   00DEBE  182E               	xorwf	SD_SPI_MediaInitialize@CSDResponse^0,w,c
 11873   00DEC0  A4D8               	btfss	status,2,c
 11874   00DEC2  EF65  F06F         	goto	u9281
 11875   00DEC6  EF67  F06F         	goto	u9280
 11876   00DECA                     u9281:
 11877   00DECA  EF69  F06F         	goto	l7624
 11878   00DECE                     u9280:
 11879   00DECE                     
 11880                           ;mcc_generated_files/sd_spi/sd_spi.c: 737:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 739:             index = 0;
 11881   00DECE  0E00               	movlw	0
 11882   00DED0  6E47               	movwf	SD_SPI_MediaInitialize@index^0,c
 11883   00DED2                     l7624:
 11884                           
 11885                           ;mcc_generated_files/sd_spi/sd_spi.c: 741:     }
 11886   00DED2  2A49               	incf	SD_SPI_MediaInitialize@count^0,f,c
 11887   00DED4  0E13               	movlw	19
 11888   00DED6  6449               	cpfsgt	SD_SPI_MediaInitialize@count^0,c
 11889   00DED8  EF70  F06F         	goto	u9291
 11890   00DEDC  EF72  F06F         	goto	u9290
 11891   00DEE0                     u9291:
 11892   00DEE0  EF36  F06F         	goto	l7614
 11893   00DEE4                     u9290:
 11894   00DEE4                     
 11895                           ;mcc_generated_files/sd_spi/sd_spi.c: 763:     mediaInformation.sectorSize = 512u;
 11896   00DEE4  0E02               	movlw	2
 11897   00DEE6  0101               	movlb	1	; () banked
 11898   00DEE8  6FD9               	movwf	(_mediaInformation+2)& (0+255),b
 11899   00DEEA  0E00               	movlw	0
 11900   00DEEC  6FD8               	movwf	(_mediaInformation+1)& (0+255),b
 11901   00DEEE                     
 11902                           ; BSR set to: 1
 11903                           ;mcc_generated_files/sd_spi/sd_spi.c: 769:     if(CSDResponse[0] & 0xC0)
 11904   00DEEE  C02E  F023         	movff	SD_SPI_MediaInitialize@CSDResponse,??_SD_SPI_MediaInitialize
 11905   00DEF2  0EC0               	movlw	192
 11906   00DEF4  1623               	andwf	??_SD_SPI_MediaInitialize^0,f,c
 11907   00DEF6  B4D8               	btfsc	status,2,c
 11908   00DEF8  EF80  F06F         	goto	u9301
 11909   00DEFC  EF82  F06F         	goto	u9300
 11910   00DF00                     u9301:
 11911   00DF00  EFC8  F06F         	goto	l7634
 11912   00DF04                     u9300:
 11913   00DF04                     
 11914                           ; BSR set to: 1
 11915                           ;mcc_generated_files/sd_spi/sd_spi.c: 770:     {;mcc_generated_files/sd_spi/sd_spi.c: 77
      +                          5:         c_size = (((uint32_t)CSDResponse[7] & 0x3F) << 16) | ((uint16_t)CSDResponse[8
      +                          ] << 8) | CSDResponse[9];
 11916   00DF04  5036               	movf	(SD_SPI_MediaInitialize@CSDResponse+8)^0,w,c
 11917   00DF06  6E24               	movwf	(??_SD_SPI_MediaInitialize+1)^0,c
 11918   00DF08  6A23               	clrf	??_SD_SPI_MediaInitialize^0,c
 11919   00DF0A  C035  F025         	movff	SD_SPI_MediaInitialize@CSDResponse+7,??_SD_SPI_MediaInitialize+2
 11920   00DF0E  0E3F               	movlw	63
 11921   00DF10  1625               	andwf	(??_SD_SPI_MediaInitialize+2)^0,f,c
 11922   00DF12  C025  F026         	movff	??_SD_SPI_MediaInitialize+2,??_SD_SPI_MediaInitialize+3
 11923   00DF16  6A27               	clrf	(??_SD_SPI_MediaInitialize+4)^0,c
 11924   00DF18  6A28               	clrf	(??_SD_SPI_MediaInitialize+5)^0,c
 11925   00DF1A  6A29               	clrf	(??_SD_SPI_MediaInitialize+6)^0,c
 11926   00DF1C  C027  F029         	movff	??_SD_SPI_MediaInitialize+4,??_SD_SPI_MediaInitialize+6
 11927   00DF20  C026  F028         	movff	??_SD_SPI_MediaInitialize+3,??_SD_SPI_MediaInitialize+5
 11928   00DF24  6A27               	clrf	(??_SD_SPI_MediaInitialize+4)^0,c
 11929   00DF26  6A26               	clrf	(??_SD_SPI_MediaInitialize+3)^0,c
 11930   00DF28  5023               	movf	??_SD_SPI_MediaInitialize^0,w,c
 11931   00DF2A  1026               	iorwf	(??_SD_SPI_MediaInitialize+3)^0,w,c
 11932   00DF2C  6E2A               	movwf	(??_SD_SPI_MediaInitialize+7)^0,c
 11933   00DF2E  5024               	movf	(??_SD_SPI_MediaInitialize+1)^0,w,c
 11934   00DF30  1027               	iorwf	(??_SD_SPI_MediaInitialize+4)^0,w,c
 11935   00DF32  6E2B               	movwf	(??_SD_SPI_MediaInitialize+8)^0,c
 11936   00DF34  0E00               	movlw	0
 11937   00DF36  1028               	iorwf	(??_SD_SPI_MediaInitialize+5)^0,w,c
 11938   00DF38  6E2C               	movwf	(??_SD_SPI_MediaInitialize+9)^0,c
 11939   00DF3A  0E00               	movlw	0
 11940   00DF3C  1029               	iorwf	(??_SD_SPI_MediaInitialize+6)^0,w,c
 11941   00DF3E  6E2D               	movwf	(??_SD_SPI_MediaInitialize+10)^0,c
 11942   00DF40  5037               	movf	(SD_SPI_MediaInitialize@CSDResponse+9)^0,w,c
 11943   00DF42  102A               	iorwf	(??_SD_SPI_MediaInitialize+7)^0,w,c
 11944   00DF44  6E4A               	movwf	SD_SPI_MediaInitialize@c_size^0,c
 11945   00DF46  502B               	movf	(??_SD_SPI_MediaInitialize+8)^0,w,c
 11946   00DF48  6E4B               	movwf	(SD_SPI_MediaInitialize@c_size+1)^0,c
 11947   00DF4A  502C               	movf	(??_SD_SPI_MediaInitialize+9)^0,w,c
 11948   00DF4C  6E4C               	movwf	(SD_SPI_MediaInitialize@c_size+2)^0,c
 11949   00DF4E  502D               	movf	(??_SD_SPI_MediaInitialize+10)^0,w,c
 11950   00DF50  6E4D               	movwf	(SD_SPI_MediaInitialize@c_size+3)^0,c
 11951                           
 11952                           ;mcc_generated_files/sd_spi/sd_spi.c: 777:         mediaInformation.finalLBA = ((uint32_
      +                          t)(c_size + 1) * (uint16_t)(1024u)) - 1;
 11953   00DF52  C04A  F023         	movff	SD_SPI_MediaInitialize@c_size,??_SD_SPI_MediaInitialize
 11954   00DF56  C04B  F024         	movff	SD_SPI_MediaInitialize@c_size+1,??_SD_SPI_MediaInitialize+1
 11955   00DF5A  C04C  F025         	movff	SD_SPI_MediaInitialize@c_size+2,??_SD_SPI_MediaInitialize+2
 11956   00DF5E  C04D  F026         	movff	SD_SPI_MediaInitialize@c_size+3,??_SD_SPI_MediaInitialize+3
 11957   00DF62  0E0A               	movlw	10
 11958   00DF64                     u9315:
 11959   00DF64  90D8               	bcf	status,0,c
 11960   00DF66  3623               	rlcf	??_SD_SPI_MediaInitialize^0,f,c
 11961   00DF68  3624               	rlcf	(??_SD_SPI_MediaInitialize+1)^0,f,c
 11962   00DF6A  3625               	rlcf	(??_SD_SPI_MediaInitialize+2)^0,f,c
 11963   00DF6C  3626               	rlcf	(??_SD_SPI_MediaInitialize+3)^0,f,c
 11964   00DF6E  2EE8               	decfsz	wreg,f,c
 11965   00DF70  EFB2  F06F         	goto	u9315
 11966   00DF74  0EFF               	movlw	255
 11967   00DF76  2423               	addwf	??_SD_SPI_MediaInitialize^0,w,c
 11968   00DF78  6FDB               	movwf	(_mediaInformation+4)& (0+255),b
 11969   00DF7A  0E03               	movlw	3
 11970   00DF7C  2024               	addwfc	(??_SD_SPI_MediaInitialize+1)^0,w,c
 11971   00DF7E  6FDC               	movwf	(_mediaInformation+5)& (0+255),b
 11972   00DF80  0E00               	movlw	0
 11973   00DF82  2025               	addwfc	(??_SD_SPI_MediaInitialize+2)^0,w,c
 11974   00DF84  6FDD               	movwf	(_mediaInformation+6)& (0+255),b
 11975   00DF86  0E00               	movlw	0
 11976   00DF88  2026               	addwfc	(??_SD_SPI_MediaInitialize+3)^0,w,c
 11977   00DF8A  6FDE               	movwf	(_mediaInformation+7)& (0+255),b
 11978                           
 11979                           ;mcc_generated_files/sd_spi/sd_spi.c: 778:     }
 11980   00DF8C  EF75  F070         	goto	l7640
 11981   00DF90                     l7634:
 11982                           
 11983                           ; BSR set to: 1
 11984                           ;mcc_generated_files/sd_spi/sd_spi.c: 780:     {;mcc_generated_files/sd_spi/sd_spi.c: 78
      +                          4:         c_size = ((uint32_t)CSDResponse[6] << 16) | ((uint16_t)CSDResponse[7] << 8) |
      +                           CSDResponse[8];
 11985   00DF90  5035               	movf	(SD_SPI_MediaInitialize@CSDResponse+7)^0,w,c
 11986   00DF92  6E24               	movwf	(??_SD_SPI_MediaInitialize+1)^0,c
 11987   00DF94  6A23               	clrf	??_SD_SPI_MediaInitialize^0,c
 11988   00DF96  C034  F025         	movff	SD_SPI_MediaInitialize@CSDResponse+6,??_SD_SPI_MediaInitialize+2
 11989   00DF9A  6A26               	clrf	(??_SD_SPI_MediaInitialize+3)^0,c
 11990   00DF9C  6A27               	clrf	(??_SD_SPI_MediaInitialize+4)^0,c
 11991   00DF9E  6A28               	clrf	(??_SD_SPI_MediaInitialize+5)^0,c
 11992   00DFA0  C026  F028         	movff	??_SD_SPI_MediaInitialize+3,??_SD_SPI_MediaInitialize+5
 11993   00DFA4  C025  F027         	movff	??_SD_SPI_MediaInitialize+2,??_SD_SPI_MediaInitialize+4
 11994   00DFA8  6A26               	clrf	(??_SD_SPI_MediaInitialize+3)^0,c
 11995   00DFAA  6A25               	clrf	(??_SD_SPI_MediaInitialize+2)^0,c
 11996   00DFAC  5023               	movf	??_SD_SPI_MediaInitialize^0,w,c
 11997   00DFAE  1025               	iorwf	(??_SD_SPI_MediaInitialize+2)^0,w,c
 11998   00DFB0  6E29               	movwf	(??_SD_SPI_MediaInitialize+6)^0,c
 11999   00DFB2  5024               	movf	(??_SD_SPI_MediaInitialize+1)^0,w,c
 12000   00DFB4  1026               	iorwf	(??_SD_SPI_MediaInitialize+3)^0,w,c
 12001   00DFB6  6E2A               	movwf	(??_SD_SPI_MediaInitialize+7)^0,c
 12002   00DFB8  0E00               	movlw	0
 12003   00DFBA  1027               	iorwf	(??_SD_SPI_MediaInitialize+4)^0,w,c
 12004   00DFBC  6E2B               	movwf	(??_SD_SPI_MediaInitialize+8)^0,c
 12005   00DFBE  0E00               	movlw	0
 12006   00DFC0  1028               	iorwf	(??_SD_SPI_MediaInitialize+5)^0,w,c
 12007   00DFC2  6E2C               	movwf	(??_SD_SPI_MediaInitialize+9)^0,c
 12008   00DFC4  5036               	movf	(SD_SPI_MediaInitialize@CSDResponse+8)^0,w,c
 12009   00DFC6  1029               	iorwf	(??_SD_SPI_MediaInitialize+6)^0,w,c
 12010   00DFC8  6E4A               	movwf	SD_SPI_MediaInitialize@c_size^0,c
 12011   00DFCA  502A               	movf	(??_SD_SPI_MediaInitialize+7)^0,w,c
 12012   00DFCC  6E4B               	movwf	(SD_SPI_MediaInitialize@c_size+1)^0,c
 12013   00DFCE  502B               	movf	(??_SD_SPI_MediaInitialize+8)^0,w,c
 12014   00DFD0  6E4C               	movwf	(SD_SPI_MediaInitialize@c_size+2)^0,c
 12015   00DFD2  502C               	movf	(??_SD_SPI_MediaInitialize+9)^0,w,c
 12016   00DFD4  6E4D               	movwf	(SD_SPI_MediaInitialize@c_size+3)^0,c
 12017                           
 12018                           ;mcc_generated_files/sd_spi/sd_spi.c: 785:         c_size &= 0x0003FFC0;
 12019   00DFD6  0EC0               	movlw	192
 12020   00DFD8  164A               	andwf	SD_SPI_MediaInitialize@c_size^0,f,c
 12021   00DFDA  0EFF               	movlw	255
 12022   00DFDC  164B               	andwf	(SD_SPI_MediaInitialize@c_size+1)^0,f,c
 12023   00DFDE  0E03               	movlw	3
 12024   00DFE0  164C               	andwf	(SD_SPI_MediaInitialize@c_size+2)^0,f,c
 12025   00DFE2  0E00               	movlw	0
 12026   00DFE4  164D               	andwf	(SD_SPI_MediaInitialize@c_size+3)^0,f,c
 12027                           
 12028                           ;mcc_generated_files/sd_spi/sd_spi.c: 786:         c_size = c_size >> 6;
 12029   00DFE6  C04A  F023         	movff	SD_SPI_MediaInitialize@c_size,??_SD_SPI_MediaInitialize
 12030   00DFEA  C04B  F024         	movff	SD_SPI_MediaInitialize@c_size+1,??_SD_SPI_MediaInitialize+1
 12031   00DFEE  C04C  F025         	movff	SD_SPI_MediaInitialize@c_size+2,??_SD_SPI_MediaInitialize+2
 12032   00DFF2  C04D  F026         	movff	SD_SPI_MediaInitialize@c_size+3,??_SD_SPI_MediaInitialize+3
 12033   00DFF6  0E07               	movlw	7
 12034   00DFF8  EF03  F070         	goto	u9320
 12035   00DFFC                     u9325:
 12036   00DFFC  90D8               	bcf	status,0,c
 12037   00DFFE  3226               	rrcf	(??_SD_SPI_MediaInitialize+3)^0,f,c
 12038   00E000  3225               	rrcf	(??_SD_SPI_MediaInitialize+2)^0,f,c
 12039   00E002  3224               	rrcf	(??_SD_SPI_MediaInitialize+1)^0,f,c
 12040   00E004  3223               	rrcf	??_SD_SPI_MediaInitialize^0,f,c
 12041   00E006                     u9320:
 12042   00E006  2EE8               	decfsz	wreg,f,c
 12043   00E008  EFFE  F06F         	goto	u9325
 12044   00E00C  C023  F04A         	movff	??_SD_SPI_MediaInitialize,SD_SPI_MediaInitialize@c_size
 12045   00E010  C024  F04B         	movff	??_SD_SPI_MediaInitialize+1,SD_SPI_MediaInitialize@c_size+1
 12046   00E014  C025  F04C         	movff	??_SD_SPI_MediaInitialize+2,SD_SPI_MediaInitialize@c_size+2
 12047   00E018  C026  F04D         	movff	??_SD_SPI_MediaInitialize+3,SD_SPI_MediaInitialize@c_size+3
 12048                           
 12049                           ;mcc_generated_files/sd_spi/sd_spi.c: 789:         c_size_mult = ((uint16_t)((CSDRespons
      +                          e[9] & 0x03) << 1)) | ((uint16_t)((CSDResponse[10] & 0x80) >> 7));
 12050   00E01C  C037  F023         	movff	SD_SPI_MediaInitialize@CSDResponse+9,??_SD_SPI_MediaInitialize
 12051   00E020  0E03               	movlw	3
 12052   00E022  1623               	andwf	??_SD_SPI_MediaInitialize^0,f,c
 12053   00E024  6A24               	clrf	(??_SD_SPI_MediaInitialize+1)^0,c
 12054   00E026  AE38               	btfss	(SD_SPI_MediaInitialize@CSDResponse+10)^0,7,c
 12055   00E028  D001               	bra	u9335
 12056   00E02A  2A24               	incf	(??_SD_SPI_MediaInitialize+1)^0,f,c
 12057   00E02C                     u9335:
 12058   00E02C  3024               	rrcf	(??_SD_SPI_MediaInitialize+1)^0,w,c
 12059   00E02E  3423               	rlcf	??_SD_SPI_MediaInitialize^0,w,c
 12060   00E030  6E46               	movwf	SD_SPI_MediaInitialize@c_size_mult^0,c
 12061                           
 12062                           ;mcc_generated_files/sd_spi/sd_spi.c: 792:         block_len = CSDResponse[5] & 0x0F;
 12063   00E032  5033               	movf	(SD_SPI_MediaInitialize@CSDResponse+5)^0,w,c
 12064   00E034  0B0F               	andlw	15
 12065   00E036  6E48               	movwf	SD_SPI_MediaInitialize@block_len^0,c
 12066                           
 12067                           ;mcc_generated_files/sd_spi/sd_spi.c: 794:         block_len = 1 << (block_len - 9);
 12068   00E038  C048  F023         	movff	SD_SPI_MediaInitialize@block_len,??_SD_SPI_MediaInitialize
 12069   00E03C  0EF7               	movlw	-9
 12070   00E03E  2623               	addwf	??_SD_SPI_MediaInitialize^0,f,c
 12071   00E040  0E01               	movlw	1
 12072   00E042  6E24               	movwf	(??_SD_SPI_MediaInitialize+1)^0,c
 12073   00E044  2A23               	incf	??_SD_SPI_MediaInitialize^0,f,c
 12074   00E046  EF27  F070         	goto	u9344
 12075   00E04A                     u9345:
 12076   00E04A  90D8               	bcf	status,0,c
 12077   00E04C  3624               	rlcf	(??_SD_SPI_MediaInitialize+1)^0,f,c
 12078   00E04E                     u9344:
 12079   00E04E  2E23               	decfsz	??_SD_SPI_MediaInitialize^0,f,c
 12080   00E050  EF25  F070         	goto	u9345
 12081   00E054  5024               	movf	(??_SD_SPI_MediaInitialize+1)^0,w,c
 12082   00E056  6E48               	movwf	SD_SPI_MediaInitialize@block_len^0,c
 12083   00E058                     
 12084                           ;mcc_generated_files/sd_spi/sd_spi.c: 799:         mediaInformation.finalLBA = ((uint32_
      +                          t)(c_size + 1) * (uint16_t)((uint16_t)1 << (c_size_mult + 2)) * block_len) - 1;
 12085   00E058  0E01               	movlw	1
 12086   00E05A  244A               	addwf	SD_SPI_MediaInitialize@c_size^0,w,c
 12087   00E05C  6E01               	movwf	___lmul@multiplier^0,c
 12088   00E05E  0E00               	movlw	0
 12089   00E060  204B               	addwfc	(SD_SPI_MediaInitialize@c_size+1)^0,w,c
 12090   00E062  6E02               	movwf	(___lmul@multiplier+1)^0,c
 12091   00E064  0E00               	movlw	0
 12092   00E066  204C               	addwfc	(SD_SPI_MediaInitialize@c_size+2)^0,w,c
 12093   00E068  6E03               	movwf	(___lmul@multiplier+2)^0,c
 12094   00E06A  0E00               	movlw	0
 12095   00E06C  204D               	addwfc	(SD_SPI_MediaInitialize@c_size+3)^0,w,c
 12096   00E06E  6E04               	movwf	(___lmul@multiplier+3)^0,c
 12097   00E070  C046  F023         	movff	SD_SPI_MediaInitialize@c_size_mult,??_SD_SPI_MediaInitialize
 12098   00E074  0E02               	movlw	2
 12099   00E076  2623               	addwf	??_SD_SPI_MediaInitialize^0,f,c
 12100   00E078  0E01               	movlw	1
 12101   00E07A  6E24               	movwf	(??_SD_SPI_MediaInitialize+1)^0,c
 12102   00E07C  0E00               	movlw	0
 12103   00E07E  6E25               	movwf	(??_SD_SPI_MediaInitialize+2)^0,c
 12104   00E080  2A23               	incf	??_SD_SPI_MediaInitialize^0,f,c
 12105   00E082  EF46  F070         	goto	u9354
 12106   00E086                     u9355:
 12107   00E086  90D8               	bcf	status,0,c
 12108   00E088  3624               	rlcf	(??_SD_SPI_MediaInitialize+1)^0,f,c
 12109   00E08A  3625               	rlcf	(??_SD_SPI_MediaInitialize+2)^0,f,c
 12110   00E08C                     u9354:
 12111   00E08C  2E23               	decfsz	??_SD_SPI_MediaInitialize^0,f,c
 12112   00E08E  EF43  F070         	goto	u9355
 12113   00E092  C024  F005         	movff	??_SD_SPI_MediaInitialize+1,___lmul@multiplicand
 12114   00E096  C025  F006         	movff	??_SD_SPI_MediaInitialize+2,___lmul@multiplicand+1
 12115   00E09A  6A07               	clrf	(___lmul@multiplicand+2)^0,c
 12116   00E09C  6A08               	clrf	(___lmul@multiplicand+3)^0,c
 12117   00E09E  ECB4  F040         	call	___lmul
 12118   00E0A2  C001  F042         	movff	?___lmul,_SD_SPI_MediaInitialize$4529
 12119   00E0A6  C002  F043         	movff	?___lmul+1,_SD_SPI_MediaInitialize$4529+1
 12120   00E0AA  C003  F044         	movff	?___lmul+2,_SD_SPI_MediaInitialize$4529+2
 12121   00E0AE  C004  F045         	movff	?___lmul+3,_SD_SPI_MediaInitialize$4529+3
 12122   00E0B2                     
 12123                           ;mcc_generated_files/sd_spi/sd_spi.c: 799:         mediaInformation.finalLBA = ((uint32_
      +                          t)(c_size + 1) * (uint16_t)((uint16_t)1 << (c_size_mult + 2)) * block_len) - 1;
 12124   00E0B2  C042  F001         	movff	_SD_SPI_MediaInitialize$4529,___lmul@multiplier
 12125   00E0B6  C043  F002         	movff	_SD_SPI_MediaInitialize$4529+1,___lmul@multiplier+1
 12126   00E0BA  C044  F003         	movff	_SD_SPI_MediaInitialize$4529+2,___lmul@multiplier+2
 12127   00E0BE  C045  F004         	movff	_SD_SPI_MediaInitialize$4529+3,___lmul@multiplier+3
 12128   00E0C2  5048               	movf	SD_SPI_MediaInitialize@block_len^0,w,c
 12129   00E0C4  6E05               	movwf	___lmul@multiplicand^0,c
 12130   00E0C6  6A06               	clrf	(___lmul@multiplicand+1)^0,c
 12131   00E0C8  6A07               	clrf	(___lmul@multiplicand+2)^0,c
 12132   00E0CA  6A08               	clrf	(___lmul@multiplicand+3)^0,c
 12133   00E0CC  ECB4  F040         	call	___lmul	;wreg free
 12134   00E0D0  0EFF               	movlw	255
 12135   00E0D2  2401               	addwf	?___lmul^0,w,c
 12136   00E0D4  0101               	movlb	1	; () banked
 12137   00E0D6  6FDB               	movwf	(_mediaInformation+4)& (0+255),b
 12138   00E0D8  0EFF               	movlw	255
 12139   00E0DA  2002               	addwfc	(?___lmul+1)^0,w,c
 12140   00E0DC  6FDC               	movwf	(_mediaInformation+5)& (0+255),b
 12141   00E0DE  0EFF               	movlw	255
 12142   00E0E0  2003               	addwfc	(?___lmul+2)^0,w,c
 12143   00E0E2  6FDD               	movwf	(_mediaInformation+6)& (0+255),b
 12144   00E0E4  0EFF               	movlw	255
 12145   00E0E6  2004               	addwfc	(?___lmul+3)^0,w,c
 12146   00E0E8  6FDE               	movwf	(_mediaInformation+7)& (0+255),b
 12147   00E0EA                     l7640:
 12148                           
 12149                           ; BSR set to: 1
 12150                           ;mcc_generated_files/sd_spi/sd_spi.c: 805:     (void)SD_SendCmd(SD_CRC_ON_OFF, 0x0);
 12151   00E0EA  0E00               	movlw	0
 12152   00E0EC  6E0C               	movwf	SD_SendCmd@address^0,c
 12153   00E0EE  0E00               	movlw	0
 12154   00E0F0  6E0D               	movwf	(SD_SendCmd@address+1)^0,c
 12155   00E0F2  0E00               	movlw	0
 12156   00E0F4  6E0E               	movwf	(SD_SendCmd@address+2)^0,c
 12157   00E0F6  0E00               	movlw	0
 12158   00E0F8  6E0F               	movwf	(SD_SendCmd@address+3)^0,c
 12159   00E0FA  0E11               	movlw	17
 12160   00E0FC  EC0A  F05E         	call	_SD_SendCmd
 12161   00E100                     
 12162                           ;mcc_generated_files/sd_spi/sd_spi.c: 808:     (void)SD_SendCmd(SD_SET_BLOCK_LENGTH , me
      +                          diaInformation.sectorSize);
 12163   00E100  C1D8  F00C         	movff	_mediaInformation+1,SD_SendCmd@address
 12164   00E104  C1D9  F00D         	movff	_mediaInformation+2,SD_SendCmd@address+1
 12165   00E108  6A0E               	clrf	(SD_SendCmd@address+2)^0,c
 12166   00E10A  6A0F               	clrf	(SD_SendCmd@address+3)^0,c
 12167   00E10C  0E07               	movlw	7
 12168   00E10E  EC0A  F05E         	call	_SD_SendCmd
 12169   00E112  848B               	bsf	139,2,c	;volatile
 12170   00E114                     
 12171                           ;mcc_generated_files/sd_spi/sd_spi.c: 814:     if(mediaInformation.errorCode == MEDIA_NO
      +                          _ERROR)
 12172   00E114  0101               	movlb	1	; () banked
 12173   00E116  51D7               	movf	_mediaInformation& (0+255),w,b
 12174   00E118  A4D8               	btfss	status,2,c
 12175   00E11A  EF91  F070         	goto	u9361
 12176   00E11E  EF93  F070         	goto	u9360
 12177   00E122                     u9361:
 12178   00E122  EFB0  F070         	goto	l7656
 12179   00E126                     u9360:
 12180   00E126                     
 12181                           ; BSR set to: 1
 12182                           ;mcc_generated_files/sd_spi/sd_spi.c: 815:     {;mcc_generated_files/sd_spi/sd_spi.c: 81
      +                          6:         mediaInformation.state = SD_STATE_READY_FOR_COMMAND;
 12183   00E126  0E01               	movlw	1
 12184   00E128  6FDA               	movwf	(_mediaInformation+3)& (0+255),b
 12185   00E12A                     
 12186                           ; BSR set to: 1
 12187                           ;mcc_generated_files/sd_spi/sd_spi.c: 817:         spiMaster[SDFAST].spiClose();
 12188   00E12A  0E57               	movlw	low _spiMaster
 12189   00E12C  6EF6               	movwf	tblptrl,c
 12190   00E12E                     	if	1	;There is more than 1 active tblptr byte
 12191   00E12E  0EFF               	movlw	high _spiMaster
 12192   00E130  6EF7               	movwf	tblptrh,c
 12193   00E132                     	endif
 12194   00E132                     	if	1	;There are 3 active tblptr bytes
 12195   00E132  0E00               	movlw	low (_spiMaster shr (0+16))
 12196   00E134  6EF8               	movwf	tblptru,c
 12197   00E136                     	endif
 12198   00E136  0009               	tblrd		*+
 12199   00E138  CFF5 F023          	movff	tablat,??_SD_SPI_MediaInitialize
 12200   00E13C  0009               	tblrd		*+
 12201   00E13E  CFF5 F024          	movff	tablat,??_SD_SPI_MediaInitialize+1
 12202   00E142  D802               	call	u9378
 12203   00E144  EFAD  F070         	goto	u9379
 12204   00E148                     u9378:
 12205   00E148  0005               	push	
 12206   00E14A  6EFA               	movwf	pclath,c
 12207   00E14C  5023               	movf	??_SD_SPI_MediaInitialize^0,w,c
 12208   00E14E  6EFD               	movwf	tosl,c
 12209   00E150  5024               	movf	(??_SD_SPI_MediaInitialize+1)^0,w,c
 12210   00E152  6EFE               	movwf	tosh,c
 12211   00E154  6AFF               	clrf	tosu,c
 12212   00E156  50FA               	movf	pclath,w,c
 12213   00E158  0012               	return		;indir
 12214   00E15A                     u9379:
 12215   00E15A                     
 12216                           ;mcc_generated_files/sd_spi/sd_spi.c: 818:         return 1;
 12217   00E15A  0E01               	movlw	1
 12218   00E15C  EFCA  F070         	goto	l1090
 12219   00E160                     l7656:
 12220                           
 12221                           ; BSR set to: 1
 12222                           ;mcc_generated_files/sd_spi/sd_spi.c: 821:     spiMaster[SDFAST].spiClose();
 12223   00E160  0E57               	movlw	low _spiMaster
 12224   00E162  6EF6               	movwf	tblptrl,c
 12225   00E164                     	if	1	;There is more than 1 active tblptr byte
 12226   00E164  0EFF               	movlw	high _spiMaster
 12227   00E166  6EF7               	movwf	tblptrh,c
 12228   00E168                     	endif
 12229   00E168                     	if	1	;There are 3 active tblptr bytes
 12230   00E168  0E00               	movlw	low (_spiMaster shr (0+16))
 12231   00E16A  6EF8               	movwf	tblptru,c
 12232   00E16C                     	endif
 12233   00E16C  0009               	tblrd		*+
 12234   00E16E  CFF5 F023          	movff	tablat,??_SD_SPI_MediaInitialize
 12235   00E172  0009               	tblrd		*+
 12236   00E174  CFF5 F024          	movff	tablat,??_SD_SPI_MediaInitialize+1
 12237   00E178  D802               	call	u9388
 12238   00E17A  EFC8  F070         	goto	u9389
 12239   00E17E                     u9388:
 12240   00E17E  0005               	push	
 12241   00E180  6EFA               	movwf	pclath,c
 12242   00E182  5023               	movf	??_SD_SPI_MediaInitialize^0,w,c
 12243   00E184  6EFD               	movwf	tosl,c
 12244   00E186  5024               	movf	(??_SD_SPI_MediaInitialize+1)^0,w,c
 12245   00E188  6EFE               	movwf	tosh,c
 12246   00E18A  6AFF               	clrf	tosu,c
 12247   00E18C  50FA               	movf	pclath,w,c
 12248   00E18E  0012               	return		;indir
 12249   00E190                     u9389:
 12250   00E190  EF13  F06D         	goto	l7474
 12251   00E194                     l1090:
 12252   00E194  0012               	return		;funcret
 12253   00E196                     __end_of_SD_SPI_MediaInitialize:
 12254                           	callstack 0
 12255                           
 12256 ;; *************** function _SD_SPI_DelayMilliseconds *****************
 12257 ;; Defined at:
 12258 ;;		line 483 in file "mcc_generated_files/sd_spi/sd_spi.c"
 12259 ;; Parameters:    Size  Location     Type
 12260 ;;  milliseconds    1    wreg     unsigned char 
 12261 ;; Auto vars:     Size  Location     Type
 12262 ;;  milliseconds    1    5[COMRAM] unsigned char 
 12263 ;;  timeout         2    3[COMRAM] unsigned short 
 12264 ;; Return value:  Size  Location     Type
 12265 ;;                  1    wreg      void 
 12266 ;; Registers used:
 12267 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12268 ;; Tracked objects:
 12269 ;;		On entry : 0/0
 12270 ;;		On exit  : 0/0
 12271 ;;		Unchanged: 0/0
 12272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12274 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12275 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12276 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12277 ;;Total ram usage:        5 bytes
 12278 ;; Hardware stack levels used: 1
 12279 ;; Hardware stack levels required when called: 1
 12280 ;; This function calls:
 12281 ;;		_SPI1_ExchangeByte
 12282 ;; This function is called by:
 12283 ;;		_SD_SPI_MediaInitialize
 12284 ;; This function uses a non-reentrant model
 12285 ;;
 12286                           
 12287                           	psect	text26
 12288   0080A4                     __ptext26:
 12289                           	callstack 0
 12290   0080A4                     _SD_SPI_DelayMilliseconds:
 12291                           	callstack 24
 12292                           
 12293                           ;incstack = 0
 12294                           ;SD_SPI_DelayMilliseconds@milliseconds stored from wreg
 12295   0080A4  6E06               	movwf	SD_SPI_DelayMilliseconds@milliseconds^0,c
 12296   0080A6                     
 12297                           ;mcc_generated_files/sd_spi/sd_spi.c: 483: static void SD_SPI_DelayMilliseconds(uint8_t 
      +                          milliseconds);mcc_generated_files/sd_spi/sd_spi.c: 484: {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 485:     uint16_t timeout = 50u * milliseconds;
 12298   0080A6  5006               	movf	SD_SPI_DelayMilliseconds@milliseconds^0,w,c
 12299   0080A8  0D32               	mullw	50
 12300   0080AA  CFF3 F004          	movff	prodl,SD_SPI_DelayMilliseconds@timeout
 12301   0080AE  CFF4 F005          	movff	prodh,SD_SPI_DelayMilliseconds@timeout+1
 12302   0080B2  848B               	bsf	139,2,c	;volatile
 12303   0080B4  EF74  F040         	goto	l7440
 12304   0080B8                     l7438:
 12305                           
 12306                           ;mcc_generated_files/sd_spi/sd_spi.c: 489:     {;mcc_generated_files/sd_spi/sd_spi.c: 49
      +                          0:         (void)spiMaster[SDFAST].exchangeByte(0xFF);
 12307   0080B8  0E5B               	movlw	low (_spiMaster+4)
 12308   0080BA  6EF6               	movwf	tblptrl,c
 12309   0080BC  0EFF               	movlw	high (_spiMaster+4)
 12310   0080BE  6EF7               	movwf	tblptrh,c
 12311   0080C0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12312   0080C0  6AF8               	clrf	tblptru,c
 12313   0080C2                     	endif
 12314   0080C2                     	if	0	;tblptru may be non-zero
 12315   0080C2                     	endif
 12316   0080C2  0009               	tblrd		*+
 12317   0080C4  CFF5 F002          	movff	tablat,??_SD_SPI_DelayMilliseconds
 12318   0080C8  0009               	tblrd		*+
 12319   0080CA  CFF5 F003          	movff	tablat,??_SD_SPI_DelayMilliseconds+1
 12320   0080CE  D802               	call	u8898
 12321   0080D0  EF74  F040         	goto	u8899
 12322   0080D4                     u8898:
 12323   0080D4  0005               	push	
 12324   0080D6  6EFA               	movwf	pclath,c
 12325   0080D8  5002               	movf	??_SD_SPI_DelayMilliseconds^0,w,c
 12326   0080DA  6EFD               	movwf	tosl,c
 12327   0080DC  5003               	movf	(??_SD_SPI_DelayMilliseconds+1)^0,w,c
 12328   0080DE  6EFE               	movwf	tosh,c
 12329   0080E0  6AFF               	clrf	tosu,c
 12330   0080E2  50FA               	movf	pclath,w,c
 12331   0080E4  0EFF               	movlw	255
 12332   0080E6  0012               	return		;indir
 12333   0080E8                     u8899:
 12334   0080E8                     l7440:
 12335                           
 12336                           ;mcc_generated_files/sd_spi/sd_spi.c: 488:     while(timeout--)
 12337   0080E8  0604               	decf	SD_SPI_DelayMilliseconds@timeout^0,f,c
 12338   0080EA  A0D8               	btfss	status,0,c
 12339   0080EC  0605               	decf	(SD_SPI_DelayMilliseconds@timeout+1)^0,f,c
 12340   0080EE  2804               	incf	SD_SPI_DelayMilliseconds@timeout^0,w,c
 12341   0080F0  E106               	bnz	u8901
 12342   0080F2  2805               	incf	(SD_SPI_DelayMilliseconds@timeout+1)^0,w,c
 12343   0080F4  A4D8               	btfss	status,2,c
 12344   0080F6  EF7F  F040         	goto	u8901
 12345   0080FA  EF81  F040         	goto	u8900
 12346   0080FE                     u8901:
 12347   0080FE  EF5C  F040         	goto	l7438
 12348   008102                     u8900:
 12349   008102  0012               	return		;funcret
 12350   008104                     __end_of_SD_SPI_DelayMilliseconds:
 12351                           	callstack 0
 12352                           
 12353 ;; *************** function _check_fs *****************
 12354 ;; Defined at:
 12355 ;;		line 3176 in file "mcc_generated_files/fatfs/ff.c"
 12356 ;; Parameters:    Size  Location     Type
 12357 ;;  fs              2   23[BANK0 ] PTR struct .
 12358 ;;		 -> FatFs(563), drive(563), NULL(0), 
 12359 ;;  sect            4   25[BANK0 ] unsigned long 
 12360 ;; Auto vars:     Size  Location     Type
 12361 ;;		None
 12362 ;; Return value:  Size  Location     Type
 12363 ;;                  1    wreg      unsigned char 
 12364 ;; Registers used:
 12365 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 12366 ;; Tracked objects:
 12367 ;;		On entry : 0/0
 12368 ;;		On exit  : 0/0
 12369 ;;		Unchanged: 0/0
 12370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12371 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12373 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12374 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12375 ;;Total ram usage:        7 bytes
 12376 ;; Hardware stack levels used: 1
 12377 ;; Hardware stack levels required when called: 7
 12378 ;; This function calls:
 12379 ;;		_ld_word
 12380 ;;		_mem_cmp
 12381 ;;		_move_window
 12382 ;; This function is called by:
 12383 ;;		_find_volume
 12384 ;; This function uses a non-reentrant model
 12385 ;;
 12386                           
 12387                           	psect	text27
 12388   0096BC                     __ptext27:
 12389                           	callstack 0
 12390   0096BC                     _check_fs:
 12391                           	callstack 20
 12392   0096BC                     
 12393                           ;mcc_generated_files/fatfs/ff.c: 3177:  FATFS* fs,;mcc_generated_files/fatfs/ff.c: 3178:
      +                            DWORD sect;mcc_generated_files/fatfs/ff.c: 3180: {;mcc_generated_files/fatfs/ff.c: 318
      +                          1:  fs->wflag = 0; fs->winsect = 0xFFFFFFFF;
 12394   0096BC  0100               	movlb	0	; () banked
 12395   0096BE  EE20 F003          	lfsr	2,3
 12396   0096C2  5177               	movf	check_fs@fs& (0+255),w,b
 12397   0096C4  26D9               	addwf	fsr2l,f,c
 12398   0096C6  5178               	movf	(check_fs@fs+1)& (0+255),w,b
 12399   0096C8  22DA               	addwfc	fsr2h,f,c
 12400   0096CA  0E00               	movlw	0
 12401   0096CC  6EDF               	movwf	indf2,c
 12402   0096CE  EE20 F02F          	lfsr	2,47
 12403   0096D2  5177               	movf	check_fs@fs& (0+255),w,b
 12404   0096D4  26D9               	addwf	fsr2l,f,c
 12405   0096D6  5178               	movf	(check_fs@fs+1)& (0+255),w,b
 12406   0096D8  22DA               	addwfc	fsr2h,f,c
 12407   0096DA  0EFF               	movlw	255
 12408   0096DC  6EDE               	movwf	postinc2,c
 12409   0096DE  0EFF               	movlw	255
 12410   0096E0  6EDE               	movwf	postinc2,c
 12411   0096E2  0EFF               	movlw	255
 12412   0096E4  6EDE               	movwf	postinc2,c
 12413   0096E6  0EFF               	movlw	255
 12414   0096E8  6EDD               	movwf	postdec2,c
 12415   0096EA                     
 12416                           ; BSR set to: 0
 12417                           ;mcc_generated_files/fatfs/ff.c: 3182:  if (move_window(fs, sect) != FR_OK) return 4;
 12418   0096EA  C077  F070         	movff	check_fs@fs,move_window@fs
 12419   0096EE  C078  F071         	movff	check_fs@fs+1,move_window@fs+1
 12420   0096F2  C079  F072         	movff	check_fs@sect,move_window@sector
 12421   0096F6  C07A  F073         	movff	check_fs@sect+1,move_window@sector+1
 12422   0096FA  C07B  F074         	movff	check_fs@sect+2,move_window@sector+2
 12423   0096FE  C07C  F075         	movff	check_fs@sect+3,move_window@sector+3
 12424   009702  EC51  F044         	call	_move_window
 12425   009706  0900               	iorlw	0
 12426   009708  B4D8               	btfsc	status,2,c
 12427   00970A  EF89  F04B         	goto	u10301
 12428   00970E  EF8B  F04B         	goto	u10300
 12429   009712                     u10301:
 12430   009712  EF8E  F04B         	goto	l8224
 12431   009716                     u10300:
 12432   009716  0E04               	movlw	4
 12433   009718  EF0D  F04C         	goto	l514
 12434   00971C                     l8224:
 12435                           
 12436                           ;mcc_generated_files/fatfs/ff.c: 3184:  if (ld_word(fs->win + 510) != 0xAA55) return 3;
 12437   00971C  0E31               	movlw	49
 12438   00971E  0100               	movlb	0	; () banked
 12439   009720  2577               	addwf	check_fs@fs& (0+255),w,b
 12440   009722  6E01               	movwf	ld_word@ptr^0,c
 12441   009724  0E02               	movlw	2
 12442   009726  2178               	addwfc	(check_fs@fs+1)& (0+255),w,b
 12443   009728  6E02               	movwf	(ld_word@ptr+1)^0,c
 12444   00972A  ECD1  F03E         	call	_ld_word	;wreg free
 12445   00972E  0E55               	movlw	85
 12446   009730  1801               	xorwf	?_ld_word^0,w,c
 12447   009732  E109               	bnz	u10310
 12448   009734  0EAA               	movlw	170
 12449   009736  1802               	xorwf	(?_ld_word+1)^0,w,c
 12450   009738  B4D8               	btfsc	status,2,c
 12451   00973A  EFA1  F04B         	goto	u10311
 12452   00973E  EFA3  F04B         	goto	u10310
 12453   009742                     u10311:
 12454   009742  EFA6  F04B         	goto	l8230
 12455   009746                     u10310:
 12456   009746  0E03               	movlw	3
 12457   009748  EF0D  F04C         	goto	l514
 12458   00974C                     l8230:
 12459                           
 12460                           ;mcc_generated_files/fatfs/ff.c: 3189:  if (fs->win[0] == 0xE9 || fs->win[0] == 0xEB || 
      +                          fs->win[0] == 0xE8) {
 12461   00974C  0100               	movlb	0	; () banked
 12462   00974E  EE20 F033          	lfsr	2,51
 12463   009752  5177               	movf	check_fs@fs& (0+255),w,b
 12464   009754  26D9               	addwf	fsr2l,f,c
 12465   009756  5178               	movf	(check_fs@fs+1)& (0+255),w,b
 12466   009758  22DA               	addwfc	fsr2h,f,c
 12467   00975A  0EE9               	movlw	233
 12468   00975C  18DE               	xorwf	postinc2,w,c
 12469   00975E  B4D8               	btfsc	status,2,c
 12470   009760  EFB4  F04B         	goto	u10321
 12471   009764  EFB6  F04B         	goto	u10320
 12472   009768                     u10321:
 12473   009768  EFD4  F04B         	goto	l8236
 12474   00976C                     u10320:
 12475   00976C                     
 12476                           ; BSR set to: 0
 12477   00976C  EE20 F033          	lfsr	2,51
 12478   009770  5177               	movf	check_fs@fs& (0+255),w,b
 12479   009772  26D9               	addwf	fsr2l,f,c
 12480   009774  5178               	movf	(check_fs@fs+1)& (0+255),w,b
 12481   009776  22DA               	addwfc	fsr2h,f,c
 12482   009778  0EEB               	movlw	235
 12483   00977A  18DE               	xorwf	postinc2,w,c
 12484   00977C  B4D8               	btfsc	status,2,c
 12485   00977E  EFC3  F04B         	goto	u10331
 12486   009782  EFC5  F04B         	goto	u10330
 12487   009786                     u10331:
 12488   009786  EFD4  F04B         	goto	l8236
 12489   00978A                     u10330:
 12490   00978A                     
 12491                           ; BSR set to: 0
 12492   00978A  EE20 F033          	lfsr	2,51
 12493   00978E  5177               	movf	check_fs@fs& (0+255),w,b
 12494   009790  26D9               	addwf	fsr2l,f,c
 12495   009792  5178               	movf	(check_fs@fs+1)& (0+255),w,b
 12496   009794  22DA               	addwfc	fsr2h,f,c
 12497   009796  0EE8               	movlw	232
 12498   009798  18DE               	xorwf	postinc2,w,c
 12499   00979A  A4D8               	btfss	status,2,c
 12500   00979C  EFD2  F04B         	goto	u10341
 12501   0097A0  EFD4  F04B         	goto	u10340
 12502   0097A4                     u10341:
 12503   0097A4  EF0C  F04C         	goto	l8248
 12504   0097A8                     u10340:
 12505   0097A8                     l8236:
 12506                           
 12507                           ; BSR set to: 0
 12508                           ;mcc_generated_files/fatfs/ff.c: 3190:   if (!mem_cmp(fs->win + 54, "FAT", 3)) return 0;
 12509   0097A8  0E69               	movlw	105
 12510   0097AA  2577               	addwf	check_fs@fs& (0+255),w,b
 12511   0097AC  6E01               	movwf	mem_cmp@dst^0,c
 12512   0097AE  0E00               	movlw	0
 12513   0097B0  2178               	addwfc	(check_fs@fs+1)& (0+255),w,b
 12514   0097B2  6E02               	movwf	(mem_cmp@dst+1)^0,c
 12515   0097B4  0EF4               	movlw	low STR_6
 12516   0097B6  6E03               	movwf	mem_cmp@src^0,c
 12517   0097B8  0EFF               	movlw	high STR_6
 12518   0097BA  6E04               	movwf	(mem_cmp@src+1)^0,c
 12519   0097BC  0E00               	movlw	0
 12520   0097BE  6E06               	movwf	(mem_cmp@cnt+1)^0,c
 12521   0097C0  0E03               	movlw	3
 12522   0097C2  6E05               	movwf	mem_cmp@cnt^0,c
 12523   0097C4  EC54  F042         	call	_mem_cmp	;wreg free
 12524   0097C8  5001               	movf	?_mem_cmp^0,w,c
 12525   0097CA  1002               	iorwf	(?_mem_cmp+1)^0,w,c
 12526   0097CC  A4D8               	btfss	status,2,c
 12527   0097CE  EFEB  F04B         	goto	u10351
 12528   0097D2  EFED  F04B         	goto	u10350
 12529   0097D6                     u10351:
 12530   0097D6  EFF0  F04B         	goto	l8242
 12531   0097DA                     u10350:
 12532   0097DA                     l8238:
 12533   0097DA  0E00               	movlw	0
 12534   0097DC  EF0D  F04C         	goto	l514
 12535   0097E0                     l8242:
 12536                           
 12537                           ;mcc_generated_files/fatfs/ff.c: 3191:   if (!mem_cmp(fs->win + 82, "FAT32", 5)) return 
      +                          0;
 12538   0097E0  0E85               	movlw	133
 12539   0097E2  0100               	movlb	0	; () banked
 12540   0097E4  2577               	addwf	check_fs@fs& (0+255),w,b
 12541   0097E6  6E01               	movwf	mem_cmp@dst^0,c
 12542   0097E8  0E00               	movlw	0
 12543   0097EA  2178               	addwfc	(check_fs@fs+1)& (0+255),w,b
 12544   0097EC  6E02               	movwf	(mem_cmp@dst+1)^0,c
 12545   0097EE  0EE5               	movlw	low STR_8
 12546   0097F0  6E03               	movwf	mem_cmp@src^0,c
 12547   0097F2  0EFF               	movlw	high STR_8
 12548   0097F4  6E04               	movwf	(mem_cmp@src+1)^0,c
 12549   0097F6  0E00               	movlw	0
 12550   0097F8  6E06               	movwf	(mem_cmp@cnt+1)^0,c
 12551   0097FA  0E05               	movlw	5
 12552   0097FC  6E05               	movwf	mem_cmp@cnt^0,c
 12553   0097FE  EC54  F042         	call	_mem_cmp	;wreg free
 12554   009802  5001               	movf	?_mem_cmp^0,w,c
 12555   009804  1002               	iorwf	(?_mem_cmp+1)^0,w,c
 12556   009806  A4D8               	btfss	status,2,c
 12557   009808  EF08  F04C         	goto	u10361
 12558   00980C  EF0A  F04C         	goto	u10360
 12559   009810                     u10361:
 12560   009810  EF0C  F04C         	goto	l8248
 12561   009814                     u10360:
 12562   009814  EFED  F04B         	goto	l8238
 12563   009818                     l8248:
 12564                           
 12565                           ;mcc_generated_files/fatfs/ff.c: 3193:  return 2;
 12566   009818  0E02               	movlw	2
 12567   00981A                     l514:
 12568   00981A  0012               	return		;funcret
 12569   00981C                     __end_of_check_fs:
 12570                           	callstack 0
 12571                           
 12572 ;; *************** function _mem_cmp *****************
 12573 ;; Defined at:
 12574 ;;		line 671 in file "mcc_generated_files/fatfs/ff.c"
 12575 ;; Parameters:    Size  Location     Type
 12576 ;;  dst             2    0[COMRAM] PTR const void 
 12577 ;;		 -> drive.win(512), FatFs.win(512), FatFs(563), drive(563), 
 12578 ;;		 -> NULL(0), 
 12579 ;;  src             2    2[COMRAM] PTR const void 
 12580 ;;		 -> djn.fn(12), f_rename@djn(40), djo.fn(12), f_rename@djo(40), 
 12581 ;;		 -> dj.fn(12), f_mkdir@dj(40), dj.fn(12), f_unlink@dj(40), 
 12582 ;;		 -> dj.fn(12), f_stat@dj(40), dj.fn(12), f_chdir@dj(40), 
 12583 ;;		 -> dj.fn(12), f_open@dj(40), STR_9(6), STR_7(4), 
 12584 ;;  cnt             2    4[COMRAM] unsigned int 
 12585 ;; Auto vars:     Size  Location     Type
 12586 ;;  r               2   12[COMRAM] int 
 12587 ;;  s               2   10[COMRAM] PTR const unsigned char 
 12588 ;;		 -> djn.fn(12), f_rename@djn(40), djo.fn(12), f_rename@djo(40), 
 12589 ;;		 -> dj.fn(12), f_mkdir@dj(40), dj.fn(12), f_unlink@dj(40), 
 12590 ;;		 -> dj.fn(12), f_stat@dj(40), dj.fn(12), f_chdir@dj(40), 
 12591 ;;		 -> dj.fn(12), f_open@dj(40), STR_9(6), STR_7(4), 
 12592 ;;  d               2    8[COMRAM] PTR const unsigned char 
 12593 ;;		 -> drive.win(512), FatFs.win(512), FatFs(563), drive(563), 
 12594 ;;		 -> NULL(0), 
 12595 ;; Return value:  Size  Location     Type
 12596 ;;                  2    0[COMRAM] int 
 12597 ;; Registers used:
 12598 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12599 ;; Tracked objects:
 12600 ;;		On entry : 0/0
 12601 ;;		On exit  : 0/0
 12602 ;;		Unchanged: 0/0
 12603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12604 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12605 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12606 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12607 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12608 ;;Total ram usage:       14 bytes
 12609 ;; Hardware stack levels used: 1
 12610 ;; This function calls:
 12611 ;;		Nothing
 12612 ;; This function is called by:
 12613 ;;		_dir_find
 12614 ;;		_check_fs
 12615 ;; This function uses a non-reentrant model
 12616 ;;
 12617                           
 12618                           	psect	text28
 12619   0084A8                     __ptext28:
 12620                           	callstack 0
 12621   0084A8                     _mem_cmp:
 12622                           	callstack 26
 12623   0084A8                     
 12624                           ;mcc_generated_files/fatfs/ff.c: 671: static int mem_cmp (const void* dst, const void* s
      +                          rc, UINT cnt);mcc_generated_files/fatfs/ff.c: 672: {;mcc_generated_files/fatfs/ff.c: 673
      +                          :  const BYTE *d = (const BYTE *)dst, *s = (const BYTE *)src;
 12625   0084A8  C001  F009         	movff	mem_cmp@dst,mem_cmp@d
 12626   0084AC  C002  F00A         	movff	mem_cmp@dst+1,mem_cmp@d+1
 12627   0084B0  C003  F00B         	movff	mem_cmp@src,mem_cmp@s
 12628   0084B4  C004  F00C         	movff	mem_cmp@src+1,mem_cmp@s+1
 12629   0084B8                     l7680:
 12630                           
 12631                           ;mcc_generated_files/fatfs/ff.c: 677:   r = *d++ - *s++;
 12632   0084B8  C009  FFD9         	movff	mem_cmp@d,fsr2l
 12633   0084BC  C00A  FFDA         	movff	mem_cmp@d+1,fsr2h
 12634   0084C0  50DF               	movf	indf2,w,c
 12635   0084C2  6E07               	movwf	??_mem_cmp^0,c
 12636   0084C4  C00B  FFF6         	movff	mem_cmp@s,tblptrl
 12637   0084C8  C00C  FFF7         	movff	mem_cmp@s+1,tblptrh
 12638   0084CC  0E00               	movlw	low (__mediumconst shr (0+16))
 12639   0084CE  6EF8               	movwf	tblptru,c
 12640   0084D0  0E0F               	movlw	(high __ramtop+-1)
 12641   0084D2  64F7               	cpfsgt	tblptrh,c
 12642   0084D4  D003               	bra	u9397
 12643   0084D6  0008               	tblrd		*
 12644   0084D8  50F5               	movf	tablat,w,c
 12645   0084DA  D005               	bra	u9390
 12646   0084DC                     u9397:
 12647   0084DC  CFF6 FFE9          	movff	tblptrl,fsr0l
 12648   0084E0  CFF7 FFEA          	movff	tblptrh,fsr0h
 12649   0084E4  50EF               	movf	indf0,w,c
 12650   0084E6                     u9390:
 12651   0084E6  6E08               	movwf	(??_mem_cmp+1)^0,c
 12652   0084E8  5008               	movf	(??_mem_cmp+1)^0,w,c
 12653   0084EA  5C07               	subwf	??_mem_cmp^0,w,c
 12654   0084EC  6E0D               	movwf	mem_cmp@r^0,c
 12655   0084EE  6A0E               	clrf	(mem_cmp@r+1)^0,c
 12656   0084F0  A0D8               	btfss	status,0,c
 12657   0084F2  060E               	decf	(mem_cmp@r+1)^0,f,c
 12658   0084F4  4A0B               	infsnz	mem_cmp@s^0,f,c
 12659   0084F6  2A0C               	incf	(mem_cmp@s+1)^0,f,c
 12660   0084F8  4A09               	infsnz	mem_cmp@d^0,f,c
 12661   0084FA  2A0A               	incf	(mem_cmp@d+1)^0,f,c
 12662   0084FC                     
 12663                           ;mcc_generated_files/fatfs/ff.c: 678:  } while (--cnt && r == 0);
 12664   0084FC  0605               	decf	mem_cmp@cnt^0,f,c
 12665   0084FE  A0D8               	btfss	status,0,c
 12666   008500  0606               	decf	(mem_cmp@cnt+1)^0,f,c
 12667   008502  5005               	movf	mem_cmp@cnt^0,w,c
 12668   008504  1006               	iorwf	(mem_cmp@cnt+1)^0,w,c
 12669   008506  B4D8               	btfsc	status,2,c
 12670   008508  EF88  F042         	goto	u9401
 12671   00850C  EF8A  F042         	goto	u9400
 12672   008510                     u9401:
 12673   008510  EF93  F042         	goto	l166
 12674   008514                     u9400:
 12675   008514  500D               	movf	mem_cmp@r^0,w,c
 12676   008516  100E               	iorwf	(mem_cmp@r+1)^0,w,c
 12677   008518  B4D8               	btfsc	status,2,c
 12678   00851A  EF91  F042         	goto	u9411
 12679   00851E  EF93  F042         	goto	u9410
 12680   008522                     u9411:
 12681   008522  EF5C  F042         	goto	l7680
 12682   008526                     u9410:
 12683   008526                     l166:
 12684                           
 12685                           ;mcc_generated_files/fatfs/ff.c: 680:  return r;
 12686   008526  C00D  F001         	movff	mem_cmp@r,?_mem_cmp
 12687   00852A  C00E  F002         	movff	mem_cmp@r+1,?_mem_cmp+1
 12688   00852E  0012               	return		;funcret
 12689   008530                     __end_of_mem_cmp:
 12690                           	callstack 0
 12691                           
 12692 ;; *************** function _f_lseek *****************
 12693 ;; Defined at:
 12694 ;;		line 4226 in file "mcc_generated_files/fatfs/ff.c"
 12695 ;; Parameters:    Size  Location     Type
 12696 ;;  fp              2   85[BANK0 ] PTR struct .
 12697 ;;		 -> Fil(546), 
 12698 ;;  ofs             4   87[BANK0 ] unsigned long 
 12699 ;; Auto vars:     Size  Location     Type
 12700 ;;  clst            4  122[BANK0 ] unsigned long 
 12701 ;;  bcs             4  116[BANK0 ] unsigned long 
 12702 ;;  nsect           4  112[BANK0 ] unsigned long 
 12703 ;;  ifptr           4  108[BANK0 ] unsigned long 
 12704 ;;  fs              2  120[BANK0 ] PTR struct .
 12705 ;;		 -> FatFs(563), drive(563), NULL(0), 
 12706 ;;  res             1  107[BANK0 ] enum E68
 12707 ;; Return value:  Size  Location     Type
 12708 ;;                  1    wreg      enum E68
 12709 ;; Registers used:
 12710 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 12711 ;; Tracked objects:
 12712 ;;		On entry : 0/0
 12713 ;;		On exit  : 0/0
 12714 ;;		Unchanged: 0/0
 12715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12716 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12717 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12718 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12719 ;;      Totals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12720 ;;Total ram usage:       41 bytes
 12721 ;; Hardware stack levels used: 1
 12722 ;; Hardware stack levels required when called: 9
 12723 ;; This function calls:
 12724 ;;		___lldiv
 12725 ;;		_clst2sect
 12726 ;;		_create_chain
 12727 ;;		_disk_read
 12728 ;;		_disk_write
 12729 ;;		_get_fat
 12730 ;;		_validate
 12731 ;; This function is called by:
 12732 ;;		_write_to_file
 12733 ;; This function uses a non-reentrant model
 12734 ;;
 12735                           
 12736                           	psect	text29
 12737   00E196                     __ptext29:
 12738                           	callstack 0
 12739   00E196                     _f_lseek:
 12740                           	callstack 20
 12741   00E196                     
 12742                           ;mcc_generated_files/fatfs/ff.c: 4227:  FIL* fp,;mcc_generated_files/fatfs/ff.c: 4228:  
      +                          FSIZE_t ofs;mcc_generated_files/fatfs/ff.c: 4230: {;mcc_generated_files/fatfs/ff.c: 4231
      +                          :  FRESULT res;;mcc_generated_files/fatfs/ff.c: 4232:  FATFS *fs;;mcc_generated_files/fa
      +                          tfs/ff.c: 4233:  DWORD clst, bcs, nsect;;mcc_generated_files/fatfs/ff.c: 4234:  FSIZE_t 
      +                          ifptr;;mcc_generated_files/fatfs/ff.c: 4239:  res = validate(&fp->obj, &fs);
 12743   00E196  C0B5  F005         	movff	f_lseek@fp,validate@obj
 12744   00E19A  C0B6  F006         	movff	f_lseek@fp+1,validate@obj+1
 12745   00E19E  0ED8               	movlw	low f_lseek@fs
 12746   00E1A0  6E07               	movwf	validate@rfs^0,c
 12747   00E1A2  0E00               	movlw	high f_lseek@fs
 12748   00E1A4  6E08               	movwf	(validate@rfs+1)^0,c
 12749   00E1A6  ECFA  F045         	call	_validate	;wreg free
 12750   00E1AA  0100               	movlb	0	; () banked
 12751   00E1AC  6FCB               	movwf	f_lseek@res& (0+255),b
 12752   00E1AE                     
 12753                           ; BSR set to: 0
 12754                           ;mcc_generated_files/fatfs/ff.c: 4240:  if (res == FR_OK) res = (FRESULT)fp->err;
 12755   00E1AE  51CB               	movf	f_lseek@res& (0+255),w,b
 12756   00E1B0  A4D8               	btfss	status,2,c
 12757   00E1B2  EFDD  F070         	goto	u12081
 12758   00E1B6  EFDF  F070         	goto	u12080
 12759   00E1BA                     u12081:
 12760   00E1BA  EFE7  F070         	goto	l9214
 12761   00E1BE                     u12080:
 12762   00E1BE                     
 12763                           ; BSR set to: 0
 12764   00E1BE  EE20 F00F          	lfsr	2,15
 12765   00E1C2  51B5               	movf	f_lseek@fp& (0+255),w,b
 12766   00E1C4  26D9               	addwf	fsr2l,f,c
 12767   00E1C6  51B6               	movf	(f_lseek@fp+1)& (0+255),w,b
 12768   00E1C8  22DA               	addwfc	fsr2h,f,c
 12769   00E1CA  50DF               	movf	indf2,w,c
 12770   00E1CC  6FCB               	movwf	f_lseek@res& (0+255),b
 12771   00E1CE                     l9214:
 12772                           
 12773                           ; BSR set to: 0
 12774                           ;mcc_generated_files/fatfs/ff.c: 4246:  if (res != FR_OK) return res;
 12775   00E1CE  51CB               	movf	f_lseek@res& (0+255),w,b
 12776   00E1D0  B4D8               	btfsc	status,2,c
 12777   00E1D2  EFED  F070         	goto	u12091
 12778   00E1D6  EFEF  F070         	goto	u12090
 12779   00E1DA                     u12091:
 12780   00E1DA  EFF1  F070         	goto	l9218
 12781   00E1DE                     u12090:
 12782   00E1DE  EFC5  F074         	goto	l731
 12783   00E1E2                     l9218:
 12784                           
 12785                           ; BSR set to: 0
 12786                           ;mcc_generated_files/fatfs/ff.c: 4301:  {;mcc_generated_files/fatfs/ff.c: 4305:   if (of
      +                          s > fp->obj.objsize && (0 || !(fp->flag & 0x02))) {
 12787   00E1E2  EE20 F00A          	lfsr	2,10
 12788   00E1E6  51B5               	movf	f_lseek@fp& (0+255),w,b
 12789   00E1E8  26D9               	addwf	fsr2l,f,c
 12790   00E1EA  51B6               	movf	(f_lseek@fp+1)& (0+255),w,b
 12791   00E1EC  22DA               	addwfc	fsr2h,f,c
 12792   00E1EE  51B7               	movf	f_lseek@ofs& (0+255),w,b
 12793   00E1F0  5CDE               	subwf	postinc2,w,c
 12794   00E1F2  51B8               	movf	(f_lseek@ofs+1)& (0+255),w,b
 12795   00E1F4  58DE               	subwfb	postinc2,w,c
 12796   00E1F6  51B9               	movf	(f_lseek@ofs+2)& (0+255),w,b
 12797   00E1F8  58DE               	subwfb	postinc2,w,c
 12798   00E1FA  51BA               	movf	(f_lseek@ofs+3)& (0+255),w,b
 12799   00E1FC  58DE               	subwfb	postinc2,w,c
 12800   00E1FE  B0D8               	btfsc	status,0,c
 12801   00E200  EF04  F071         	goto	u12101
 12802   00E204  EF06  F071         	goto	u12100
 12803   00E208                     u12101:
 12804   00E208  EF21  F071         	goto	l732
 12805   00E20C                     u12100:
 12806   00E20C                     
 12807                           ; BSR set to: 0
 12808   00E20C  EE20 F00E          	lfsr	2,14
 12809   00E210  51B5               	movf	f_lseek@fp& (0+255),w,b
 12810   00E212  26D9               	addwf	fsr2l,f,c
 12811   00E214  51B6               	movf	(f_lseek@fp+1)& (0+255),w,b
 12812   00E216  22DA               	addwfc	fsr2h,f,c
 12813   00E218  B2DF               	btfsc	indf2,1,c
 12814   00E21A  EF11  F071         	goto	u12111
 12815   00E21E  EF13  F071         	goto	u12110
 12816   00E222                     u12111:
 12817   00E222  EF21  F071         	goto	l732
 12818   00E226                     u12110:
 12819   00E226                     
 12820                           ; BSR set to: 0
 12821                           ;mcc_generated_files/fatfs/ff.c: 4306:    ofs = fp->obj.objsize;
 12822   00E226  EE20 F00A          	lfsr	2,10
 12823   00E22A  51B5               	movf	f_lseek@fp& (0+255),w,b
 12824   00E22C  26D9               	addwf	fsr2l,f,c
 12825   00E22E  51B6               	movf	(f_lseek@fp+1)& (0+255),w,b
 12826   00E230  22DA               	addwfc	fsr2h,f,c
 12827   00E232  CFDE F0B7          	movff	postinc2,f_lseek@ofs
 12828   00E236  CFDE F0B8          	movff	postinc2,f_lseek@ofs+1
 12829   00E23A  CFDE F0B9          	movff	postinc2,f_lseek@ofs+2
 12830   00E23E  CFDE F0BA          	movff	postinc2,f_lseek@ofs+3
 12831   00E242                     l732:
 12832                           
 12833                           ; BSR set to: 0
 12834                           ;mcc_generated_files/fatfs/ff.c: 4308:   ifptr = fp->fptr;
 12835   00E242  EE20 F010          	lfsr	2,16
 12836   00E246  51B5               	movf	f_lseek@fp& (0+255),w,b
 12837   00E248  26D9               	addwf	fsr2l,f,c
 12838   00E24A  51B6               	movf	(f_lseek@fp+1)& (0+255),w,b
 12839   00E24C  22DA               	addwfc	fsr2h,f,c
 12840   00E24E  CFDE F0CC          	movff	postinc2,f_lseek@ifptr
 12841   00E252  CFDE F0CD          	movff	postinc2,f_lseek@ifptr+1
 12842   00E256  CFDE F0CE          	movff	postinc2,f_lseek@ifptr+2
 12843   00E25A  CFDE F0CF          	movff	postinc2,f_lseek@ifptr+3
 12844                           
 12845                           ;mcc_generated_files/fatfs/ff.c: 4309:   fp->fptr = nsect = 0;
 12846   00E25E  0E00               	movlw	0
 12847   00E260  6FD0               	movwf	f_lseek@nsect& (0+255),b
 12848   00E262  0E00               	movlw	0
 12849   00E264  6FD1               	movwf	(f_lseek@nsect+1)& (0+255),b
 12850   00E266  0E00               	movlw	0
 12851   00E268  6FD2               	movwf	(f_lseek@nsect+2)& (0+255),b
 12852   00E26A  0E00               	movlw	0
 12853   00E26C  6FD3               	movwf	(f_lseek@nsect+3)& (0+255),b
 12854   00E26E  EE20 F010          	lfsr	2,16
 12855   00E272  51B5               	movf	f_lseek@fp& (0+255),w,b
 12856   00E274  26D9               	addwf	fsr2l,f,c
 12857   00E276  51B6               	movf	(f_lseek@fp+1)& (0+255),w,b
 12858   00E278  22DA               	addwfc	fsr2h,f,c
 12859   00E27A  C0D0  FFDE         	movff	f_lseek@nsect,postinc2
 12860   00E27E  C0D1  FFDE         	movff	f_lseek@nsect+1,postinc2
 12861   00E282  C0D2  FFDE         	movff	f_lseek@nsect+2,postinc2
 12862   00E286  C0D3  FFDE         	movff	f_lseek@nsect+3,postinc2
 12863   00E28A                     
 12864                           ; BSR set to: 0
 12865                           ;mcc_generated_files/fatfs/ff.c: 4310:   if (ofs > 0) {
 12866   00E28A  51B7               	movf	f_lseek@ofs& (0+255),w,b
 12867   00E28C  11B8               	iorwf	(f_lseek@ofs+1)& (0+255),w,b
 12868   00E28E  11B9               	iorwf	(f_lseek@ofs+2)& (0+255),w,b
 12869   00E290  11BA               	iorwf	(f_lseek@ofs+3)& (0+255),w,b
 12870   00E292  B4D8               	btfsc	status,2,c
 12871   00E294  EF4E  F071         	goto	u12121
 12872   00E298  EF50  F071         	goto	u12120
 12873   00E29C                     u12121:
 12874   00E29C  EFD2  F073         	goto	l9312
 12875   00E2A0                     u12120:
 12876   00E2A0                     
 12877                           ; BSR set to: 0
 12878                           ;mcc_generated_files/fatfs/ff.c: 4311:    bcs = (DWORD)fs->csize * ((UINT)512);
 12879   00E2A0  EE20 F009          	lfsr	2,9
 12880   00E2A4  51D8               	movf	f_lseek@fs& (0+255),w,b
 12881   00E2A6  26D9               	addwf	fsr2l,f,c
 12882   00E2A8  51D9               	movf	(f_lseek@fs+1)& (0+255),w,b
 12883   00E2AA  22DA               	addwfc	fsr2h,f,c
 12884   00E2AC  CFDE F0BB          	movff	postinc2,??_f_lseek
 12885   00E2B0  CFDD F0BC          	movff	postdec2,??_f_lseek+1
 12886   00E2B4  51BB               	movf	??_f_lseek& (0+255),w,b
 12887   00E2B6  6FBD               	movwf	(??_f_lseek+2)& (0+255),b
 12888   00E2B8  51BC               	movf	(??_f_lseek+1)& (0+255),w,b
 12889   00E2BA  6FBE               	movwf	(??_f_lseek+3)& (0+255),b
 12890   00E2BC  6BBF               	clrf	(??_f_lseek+4)& (0+255),b
 12891   00E2BE  6BC0               	clrf	(??_f_lseek+5)& (0+255),b
 12892   00E2C0  0E09               	movlw	9
 12893   00E2C2                     u12135:
 12894   00E2C2  90D8               	bcf	status,0,c
 12895   00E2C4  37BD               	rlcf	(??_f_lseek+2)& (0+255),f,b
 12896   00E2C6  37BE               	rlcf	(??_f_lseek+3)& (0+255),f,b
 12897   00E2C8  37BF               	rlcf	(??_f_lseek+4)& (0+255),f,b
 12898   00E2CA  37C0               	rlcf	(??_f_lseek+5)& (0+255),f,b
 12899   00E2CC  2EE8               	decfsz	wreg,f,c
 12900   00E2CE  EF61  F071         	goto	u12135
 12901   00E2D2  C0BD  F0D4         	movff	??_f_lseek+2,f_lseek@bcs
 12902   00E2D6  C0BE  F0D5         	movff	??_f_lseek+3,f_lseek@bcs+1
 12903   00E2DA  C0BF  F0D6         	movff	??_f_lseek+4,f_lseek@bcs+2
 12904   00E2DE  C0C0  F0D7         	movff	??_f_lseek+5,f_lseek@bcs+3
 12905   00E2E2                     
 12906                           ; BSR set to: 0
 12907                           ;mcc_generated_files/fatfs/ff.c: 4312:    if (ifptr > 0 &&
 12908   00E2E2  51CC               	movf	f_lseek@ifptr& (0+255),w,b
 12909   00E2E4  11CD               	iorwf	(f_lseek@ifptr+1)& (0+255),w,b
 12910   00E2E6  11CE               	iorwf	(f_lseek@ifptr+2)& (0+255),w,b
 12911   00E2E8  11CF               	iorwf	(f_lseek@ifptr+3)& (0+255),w,b
 12912   00E2EA  B4D8               	btfsc	status,2,c
 12913   00E2EC  EF7A  F071         	goto	u12141
 12914   00E2F0  EF7C  F071         	goto	u12140
 12915   00E2F4                     u12141:
 12916   00E2F4  EF19  F072         	goto	l9234
 12917   00E2F8                     u12140:
 12918   00E2F8                     
 12919                           ; BSR set to: 0
 12920   00E2F8  0EFF               	movlw	255
 12921   00E2FA  25B7               	addwf	f_lseek@ofs& (0+255),w,b
 12922   00E2FC  6E01               	movwf	___lldiv@dividend^0,c
 12923   00E2FE  0EFF               	movlw	255
 12924   00E300  21B8               	addwfc	(f_lseek@ofs+1)& (0+255),w,b
 12925   00E302  6E02               	movwf	(___lldiv@dividend+1)^0,c
 12926   00E304  0EFF               	movlw	255
 12927   00E306  21B9               	addwfc	(f_lseek@ofs+2)& (0+255),w,b
 12928   00E308  6E03               	movwf	(___lldiv@dividend+2)^0,c
 12929   00E30A  0EFF               	movlw	255
 12930   00E30C  21BA               	addwfc	(f_lseek@ofs+3)& (0+255),w,b
 12931   00E30E  6E04               	movwf	(___lldiv@dividend+3)^0,c
 12932   00E310  C0D4  F005         	movff	f_lseek@bcs,___lldiv@divisor
 12933   00E314  C0D5  F006         	movff	f_lseek@bcs+1,___lldiv@divisor+1
 12934   00E318  C0D6  F007         	movff	f_lseek@bcs+2,___lldiv@divisor+2
 12935   00E31C  C0D7  F008         	movff	f_lseek@bcs+3,___lldiv@divisor+3
 12936   00E320  EC98  F042         	call	___lldiv	;wreg free
 12937   00E324  C001  F0BB         	movff	?___lldiv,??_f_lseek
 12938   00E328  C002  F0BC         	movff	?___lldiv+1,??_f_lseek+1
 12939   00E32C  C003  F0BD         	movff	?___lldiv+2,??_f_lseek+2
 12940   00E330  C004  F0BE         	movff	?___lldiv+3,??_f_lseek+3
 12941   00E334  0EFF               	movlw	255
 12942   00E336  0100               	movlb	0	; () banked
 12943   00E338  25CC               	addwf	f_lseek@ifptr& (0+255),w,b
 12944   00E33A  6E01               	movwf	___lldiv@dividend^0,c
 12945   00E33C  0EFF               	movlw	255
 12946   00E33E  21CD               	addwfc	(f_lseek@ifptr+1)& (0+255),w,b
 12947   00E340  6E02               	movwf	(___lldiv@dividend+1)^0,c
 12948   00E342  0EFF               	movlw	255
 12949   00E344  21CE               	addwfc	(f_lseek@ifptr+2)& (0+255),w,b
 12950   00E346  6E03               	movwf	(___lldiv@dividend+2)^0,c
 12951   00E348  0EFF               	movlw	255
 12952   00E34A  21CF               	addwfc	(f_lseek@ifptr+3)& (0+255),w,b
 12953   00E34C  6E04               	movwf	(___lldiv@dividend+3)^0,c
 12954   00E34E  C0D4  F005         	movff	f_lseek@bcs,___lldiv@divisor
 12955   00E352  C0D5  F006         	movff	f_lseek@bcs+1,___lldiv@divisor+1
 12956   00E356  C0D6  F007         	movff	f_lseek@bcs+2,___lldiv@divisor+2
 12957   00E35A  C0D7  F008         	movff	f_lseek@bcs+3,___lldiv@divisor+3
 12958   00E35E  EC98  F042         	call	___lldiv	;wreg free
 12959   00E362  5001               	movf	?___lldiv^0,w,c
 12960   00E364  0100               	movlb	0	; () banked
 12961   00E366  5DBB               	subwf	??_f_lseek& (0+255),w,b
 12962   00E368  5002               	movf	(?___lldiv+1)^0,w,c
 12963   00E36A  59BC               	subwfb	(??_f_lseek+1)& (0+255),w,b
 12964   00E36C  5003               	movf	(?___lldiv+2)^0,w,c
 12965   00E36E  59BD               	subwfb	(??_f_lseek+2)& (0+255),w,b
 12966   00E370  5004               	movf	(?___lldiv+3)^0,w,c
 12967   00E372  59BE               	subwfb	(??_f_lseek+3)& (0+255),w,b
 12968   00E374  A0D8               	btfss	status,0,c
 12969   00E376  EFBF  F071         	goto	u12151
 12970   00E37A  EFC1  F071         	goto	u12150
 12971   00E37E                     u12151:
 12972   00E37E  EF19  F072         	goto	l9234
 12973   00E382                     u12150:
 12974   00E382                     
 12975                           ; BSR set to: 0
 12976                           ;mcc_generated_files/fatfs/ff.c: 4313:     (ofs - 1) / bcs >= (ifptr - 1) / bcs) {;mcc_g
      +                          enerated_files/fatfs/ff.c: 4314:     fp->fptr = (ifptr - 1) & ~(FSIZE_t)(bcs - 1);
 12977   00E382  0EFF               	movlw	255
 12978   00E384  25D4               	addwf	f_lseek@bcs& (0+255),w,b
 12979   00E386  6FBB               	movwf	??_f_lseek& (0+255),b
 12980   00E388  0EFF               	movlw	255
 12981   00E38A  21D5               	addwfc	(f_lseek@bcs+1)& (0+255),w,b
 12982   00E38C  6FBC               	movwf	(??_f_lseek+1)& (0+255),b
 12983   00E38E  0EFF               	movlw	255
 12984   00E390  21D6               	addwfc	(f_lseek@bcs+2)& (0+255),w,b
 12985   00E392  6FBD               	movwf	(??_f_lseek+2)& (0+255),b
 12986   00E394  0EFF               	movlw	255
 12987   00E396  21D7               	addwfc	(f_lseek@bcs+3)& (0+255),w,b
 12988   00E398  6FBE               	movwf	(??_f_lseek+3)& (0+255),b
 12989   00E39A  1DBB               	comf	??_f_lseek& (0+255),w,b
 12990   00E39C  6FBF               	movwf	(??_f_lseek+4)& (0+255),b
 12991   00E39E  1DBC               	comf	(??_f_lseek+1)& (0+255),w,b
 12992   00E3A0  6FC0               	movwf	(??_f_lseek+5)& (0+255),b
 12993   00E3A2  1DBD               	comf	(??_f_lseek+2)& (0+255),w,b
 12994   00E3A4  6FC1               	movwf	(??_f_lseek+6)& (0+255),b
 12995   00E3A6  1DBE               	comf	(??_f_lseek+3)& (0+255),w,b
 12996   00E3A8  6FC2               	movwf	(??_f_lseek+7)& (0+255),b
 12997   00E3AA  0EFF               	movlw	255
 12998   00E3AC  25CC               	addwf	f_lseek@ifptr& (0+255),w,b
 12999   00E3AE  6FC3               	movwf	(??_f_lseek+8)& (0+255),b
 13000   00E3B0  0EFF               	movlw	255
 13001   00E3B2  21CD               	addwfc	(f_lseek@ifptr+1)& (0+255),w,b
 13002   00E3B4  6FC4               	movwf	(??_f_lseek+9)& (0+255),b
 13003   00E3B6  0EFF               	movlw	255
 13004   00E3B8  21CE               	addwfc	(f_lseek@ifptr+2)& (0+255),w,b
 13005   00E3BA  6FC5               	movwf	(??_f_lseek+10)& (0+255),b
 13006   00E3BC  0EFF               	movlw	255
 13007   00E3BE  21CF               	addwfc	(f_lseek@ifptr+3)& (0+255),w,b
 13008   00E3C0  6FC6               	movwf	(??_f_lseek+11)& (0+255),b
 13009   00E3C2  51BF               	movf	(??_f_lseek+4)& (0+255),w,b
 13010   00E3C4  15C3               	andwf	(??_f_lseek+8)& (0+255),w,b
 13011   00E3C6  6FC7               	movwf	(??_f_lseek+12)& (0+255),b
 13012   00E3C8  51C0               	movf	(??_f_lseek+5)& (0+255),w,b
 13013   00E3CA  15C4               	andwf	(??_f_lseek+9)& (0+255),w,b
 13014   00E3CC  6FC8               	movwf	(??_f_lseek+13)& (0+255),b
 13015   00E3CE  51C1               	movf	(??_f_lseek+6)& (0+255),w,b
 13016   00E3D0  15C5               	andwf	(??_f_lseek+10)& (0+255),w,b
 13017   00E3D2  6FC9               	movwf	(??_f_lseek+14)& (0+255),b
 13018   00E3D4  51C2               	movf	(??_f_lseek+7)& (0+255),w,b
 13019   00E3D6  15C6               	andwf	(??_f_lseek+11)& (0+255),w,b
 13020   00E3D8  6FCA               	movwf	(??_f_lseek+15)& (0+255),b
 13021   00E3DA  EE20 F010          	lfsr	2,16
 13022   00E3DE  51B5               	movf	f_lseek@fp& (0+255),w,b
 13023   00E3E0  26D9               	addwf	fsr2l,f,c
 13024   00E3E2  51B6               	movf	(f_lseek@fp+1)& (0+255),w,b
 13025   00E3E4  22DA               	addwfc	fsr2h,f,c
 13026   00E3E6  C0C7  FFDE         	movff	??_f_lseek+12,postinc2
 13027   00E3EA  C0C8  FFDE         	movff	??_f_lseek+13,postinc2
 13028   00E3EE  C0C9  FFDE         	movff	??_f_lseek+14,postinc2
 13029   00E3F2  C0CA  FFDE         	movff	??_f_lseek+15,postinc2
 13030                           
 13031                           ;mcc_generated_files/fatfs/ff.c: 4315:     ofs -= fp->fptr;
 13032   00E3F6  EE20 F010          	lfsr	2,16
 13033   00E3FA  51B5               	movf	f_lseek@fp& (0+255),w,b
 13034   00E3FC  26D9               	addwf	fsr2l,f,c
 13035   00E3FE  51B6               	movf	(f_lseek@fp+1)& (0+255),w,b
 13036   00E400  22DA               	addwfc	fsr2h,f,c
 13037   00E402  50DE               	movf	postinc2,w,c
 13038   00E404  5FB7               	subwf	f_lseek@ofs& (0+255),f,b
 13039   00E406  50DE               	movf	postinc2,w,c
 13040   00E408  5BB8               	subwfb	(f_lseek@ofs+1)& (0+255),f,b
 13041   00E40A  50DE               	movf	postinc2,w,c
 13042   00E40C  5BB9               	subwfb	(f_lseek@ofs+2)& (0+255),f,b
 13043   00E40E  50DD               	movf	postdec2,w,c
 13044   00E410  5BBA               	subwfb	(f_lseek@ofs+3)& (0+255),f,b
 13045                           
 13046                           ;mcc_generated_files/fatfs/ff.c: 4316:     clst = fp->clust;
 13047   00E412  EE20 F014          	lfsr	2,20
 13048   00E416  51B5               	movf	f_lseek@fp& (0+255),w,b
 13049   00E418  26D9               	addwf	fsr2l,f,c
 13050   00E41A  51B6               	movf	(f_lseek@fp+1)& (0+255),w,b
 13051   00E41C  22DA               	addwfc	fsr2h,f,c
 13052   00E41E  CFDE F0DA          	movff	postinc2,f_lseek@clst
 13053   00E422  CFDE F0DB          	movff	postinc2,f_lseek@clst+1
 13054   00E426  CFDE F0DC          	movff	postinc2,f_lseek@clst+2
 13055   00E42A  CFDE F0DD          	movff	postinc2,f_lseek@clst+3
 13056                           
 13057                           ;mcc_generated_files/fatfs/ff.c: 4317:    } else {
 13058   00E42E  EF92  F072         	goto	l9254
 13059   00E432                     l9234:
 13060                           
 13061                           ; BSR set to: 0
 13062                           ;mcc_generated_files/fatfs/ff.c: 4318:     clst = fp->obj.sclust;
 13063   00E432  EE20 F006          	lfsr	2,6
 13064   00E436  51B5               	movf	f_lseek@fp& (0+255),w,b
 13065   00E438  26D9               	addwf	fsr2l,f,c
 13066   00E43A  51B6               	movf	(f_lseek@fp+1)& (0+255),w,b
 13067   00E43C  22DA               	addwfc	fsr2h,f,c
 13068   00E43E  CFDE F0DA          	movff	postinc2,f_lseek@clst
 13069   00E442  CFDE F0DB          	movff	postinc2,f_lseek@clst+1
 13070   00E446  CFDE F0DC          	movff	postinc2,f_lseek@clst+2
 13071   00E44A  CFDE F0DD          	movff	postinc2,f_lseek@clst+3
 13072   00E44E                     
 13073                           ; BSR set to: 0
 13074                           ;mcc_generated_files/fatfs/ff.c: 4320:     if (clst == 0) {
 13075   00E44E  51DA               	movf	f_lseek@clst& (0+255),w,b
 13076   00E450  11DB               	iorwf	(f_lseek@clst+1)& (0+255),w,b
 13077   00E452  11DC               	iorwf	(f_lseek@clst+2)& (0+255),w,b
 13078   00E454  11DD               	iorwf	(f_lseek@clst+3)& (0+255),w,b
 13079   00E456  A4D8               	btfss	status,2,c
 13080   00E458  EF30  F072         	goto	u12161
 13081   00E45C  EF32  F072         	goto	u12160
 13082   00E460                     u12161:
 13083   00E460  EF84  F072         	goto	l738
 13084   00E464                     u12160:
 13085   00E464                     
 13086                           ; BSR set to: 0
 13087                           ;mcc_generated_files/fatfs/ff.c: 4321:      clst = create_chain(&fp->obj, 0);
 13088   00E464  C0B5  F098         	movff	f_lseek@fp,create_chain@obj
 13089   00E468  C0B6  F099         	movff	f_lseek@fp+1,create_chain@obj+1
 13090   00E46C  0E00               	movlw	0
 13091   00E46E  6F9A               	movwf	create_chain@clst& (0+255),b
 13092   00E470  0E00               	movlw	0
 13093   00E472  6F9B               	movwf	(create_chain@clst+1)& (0+255),b
 13094   00E474  0E00               	movlw	0
 13095   00E476  6F9C               	movwf	(create_chain@clst+2)& (0+255),b
 13096   00E478  0E00               	movlw	0
 13097   00E47A  6F9D               	movwf	(create_chain@clst+3)& (0+255),b
 13098   00E47C  ECDE  F062         	call	_create_chain	;wreg free
 13099   00E480  C098  F0DA         	movff	?_create_chain,f_lseek@clst
 13100   00E484  C099  F0DB         	movff	?_create_chain+1,f_lseek@clst+1
 13101   00E488  C09A  F0DC         	movff	?_create_chain+2,f_lseek@clst+2
 13102   00E48C  C09B  F0DD         	movff	?_create_chain+3,f_lseek@clst+3
 13103   00E490                     
 13104                           ;mcc_generated_files/fatfs/ff.c: 4322:      if (clst == 1) { fp->err = (BYTE)(FR_INT_ERR
      +                          ); return FR_INT_ERR; };
 13105   00E490  0100               	movlb	0	; () banked
 13106   00E492  05DA               	decf	f_lseek@clst& (0+255),w,b
 13107   00E494  11DB               	iorwf	(f_lseek@clst+1)& (0+255),w,b
 13108   00E496  11DC               	iorwf	(f_lseek@clst+2)& (0+255),w,b
 13109   00E498  11DD               	iorwf	(f_lseek@clst+3)& (0+255),w,b
 13110   00E49A  A4D8               	btfss	status,2,c
 13111   00E49C  EF52  F072         	goto	u12171
 13112   00E4A0  EF54  F072         	goto	u12170
 13113   00E4A4                     u12171:
 13114   00E4A4  EF5E  F072         	goto	l9246
 13115   00E4A8                     u12170:
 13116   00E4A8                     
 13117                           ; BSR set to: 0
 13118   00E4A8  EE20 F00F          	lfsr	2,15
 13119   00E4AC  51B5               	movf	f_lseek@fp& (0+255),w,b
 13120   00E4AE  26D9               	addwf	fsr2l,f,c
 13121   00E4B0  51B6               	movf	(f_lseek@fp+1)& (0+255),w,b
 13122   00E4B2  22DA               	addwfc	fsr2h,f,c
 13123   00E4B4  0E02               	movlw	2
 13124   00E4B6  6EDF               	movwf	indf2,c
 13125   00E4B8  EFC5  F074         	goto	l731
 13126   00E4BC                     l9246:
 13127                           
 13128                           ; BSR set to: 0
 13129                           ;mcc_generated_files/fatfs/ff.c: 4323:      if (clst == 0xFFFFFFFF) { fp->err = (BYTE)(F
      +                          R_DISK_ERR); return FR_DISK_ERR; };
 13130   00E4BC  29DA               	incf	f_lseek@clst& (0+255),w,b
 13131   00E4BE  E10A               	bnz	u12181
 13132   00E4C0  29DB               	incf	(f_lseek@clst+1)& (0+255),w,b
 13133   00E4C2  E108               	bnz	u12181
 13134   00E4C4  29DC               	incf	(f_lseek@clst+2)& (0+255),w,b
 13135   00E4C6  E106               	bnz	u12181
 13136   00E4C8  29DD               	incf	(f_lseek@clst+3)& (0+255),w,b
 13137   00E4CA  A4D8               	btfss	status,2,c
 13138   00E4CC  EF6A  F072         	goto	u12181
 13139   00E4D0  EF6C  F072         	goto	u12180
 13140   00E4D4                     u12181:
 13141   00E4D4  EF76  F072         	goto	l9252
 13142   00E4D8                     u12180:
 13143   00E4D8                     
 13144                           ; BSR set to: 0
 13145   00E4D8  EE20 F00F          	lfsr	2,15
 13146   00E4DC  51B5               	movf	f_lseek@fp& (0+255),w,b
 13147   00E4DE  26D9               	addwf	fsr2l,f,c
 13148   00E4E0  51B6               	movf	(f_lseek@fp+1)& (0+255),w,b
 13149   00E4E2  22DA               	addwfc	fsr2h,f,c
 13150   00E4E4  0E01               	movlw	1
 13151   00E4E6  6EDF               	movwf	indf2,c
 13152   00E4E8  EFC5  F074         	goto	l731
 13153   00E4EC                     l9252:
 13154                           
 13155                           ; BSR set to: 0
 13156                           ;mcc_generated_files/fatfs/ff.c: 4324:      fp->obj.sclust = clst;
 13157   00E4EC  EE20 F006          	lfsr	2,6
 13158   00E4F0  51B5               	movf	f_lseek@fp& (0+255),w,b
 13159   00E4F2  26D9               	addwf	fsr2l,f,c
 13160   00E4F4  51B6               	movf	(f_lseek@fp+1)& (0+255),w,b
 13161   00E4F6  22DA               	addwfc	fsr2h,f,c
 13162   00E4F8  C0DA  FFDE         	movff	f_lseek@clst,postinc2
 13163   00E4FC  C0DB  FFDE         	movff	f_lseek@clst+1,postinc2
 13164   00E500  C0DC  FFDE         	movff	f_lseek@clst+2,postinc2
 13165   00E504  C0DD  FFDE         	movff	f_lseek@clst+3,postinc2
 13166   00E508                     l738:
 13167                           
 13168                           ; BSR set to: 0
 13169                           ;mcc_generated_files/fatfs/ff.c: 4327:     fp->clust = clst;
 13170   00E508  EE20 F014          	lfsr	2,20
 13171   00E50C  51B5               	movf	f_lseek@fp& (0+255),w,b
 13172   00E50E  26D9               	addwf	fsr2l,f,c
 13173   00E510  51B6               	movf	(f_lseek@fp+1)& (0+255),w,b
 13174   00E512  22DA               	addwfc	fsr2h,f,c
 13175   00E514  C0DA  FFDE         	movff	f_lseek@clst,postinc2
 13176   00E518  C0DB  FFDE         	movff	f_lseek@clst+1,postinc2
 13177   00E51C  C0DC  FFDE         	movff	f_lseek@clst+2,postinc2
 13178   00E520  C0DD  FFDE         	movff	f_lseek@clst+3,postinc2
 13179   00E524                     l9254:
 13180                           
 13181                           ; BSR set to: 0
 13182                           ;mcc_generated_files/fatfs/ff.c: 4329:    if (clst != 0) {
 13183   00E524  51DA               	movf	f_lseek@clst& (0+255),w,b
 13184   00E526  11DB               	iorwf	(f_lseek@clst+1)& (0+255),w,b
 13185   00E528  11DC               	iorwf	(f_lseek@clst+2)& (0+255),w,b
 13186   00E52A  11DD               	iorwf	(f_lseek@clst+3)& (0+255),w,b
 13187   00E52C  B4D8               	btfsc	status,2,c
 13188   00E52E  EF9B  F072         	goto	u12191
 13189   00E532  EF9D  F072         	goto	u12190
 13190   00E536                     u12191:
 13191   00E536  EFD2  F073         	goto	l9312
 13192   00E53A                     u12190:
 13193   00E53A  EF57  F073         	goto	l9296
 13194   00E53E                     l9258:
 13195                           
 13196                           ; BSR set to: 0
 13197                           ;mcc_generated_files/fatfs/ff.c: 4331:      ofs -= bcs; fp->fptr += bcs;
 13198   00E53E  51D4               	movf	f_lseek@bcs& (0+255),w,b
 13199   00E540  5FB7               	subwf	f_lseek@ofs& (0+255),f,b
 13200   00E542  51D5               	movf	(f_lseek@bcs+1)& (0+255),w,b
 13201   00E544  5BB8               	subwfb	(f_lseek@ofs+1)& (0+255),f,b
 13202   00E546  51D6               	movf	(f_lseek@bcs+2)& (0+255),w,b
 13203   00E548  5BB9               	subwfb	(f_lseek@ofs+2)& (0+255),f,b
 13204   00E54A  51D7               	movf	(f_lseek@bcs+3)& (0+255),w,b
 13205   00E54C  5BBA               	subwfb	(f_lseek@ofs+3)& (0+255),f,b
 13206   00E54E                     
 13207                           ; BSR set to: 0
 13208   00E54E  EE20 F010          	lfsr	2,16
 13209   00E552  51B5               	movf	f_lseek@fp& (0+255),w,b
 13210   00E554  26D9               	addwf	fsr2l,f,c
 13211   00E556  51B6               	movf	(f_lseek@fp+1)& (0+255),w,b
 13212   00E558  22DA               	addwfc	fsr2h,f,c
 13213   00E55A  51D4               	movf	f_lseek@bcs& (0+255),w,b
 13214   00E55C  26DE               	addwf	postinc2,f,c
 13215   00E55E  51D5               	movf	(f_lseek@bcs+1)& (0+255),w,b
 13216   00E560  22DE               	addwfc	postinc2,f,c
 13217   00E562  51D6               	movf	(f_lseek@bcs+2)& (0+255),w,b
 13218   00E564  22DE               	addwfc	postinc2,f,c
 13219   00E566  51D7               	movf	(f_lseek@bcs+3)& (0+255),w,b
 13220   00E568  22DE               	addwfc	postinc2,f,c
 13221   00E56A                     
 13222                           ; BSR set to: 0
 13223                           ;mcc_generated_files/fatfs/ff.c: 4333:      if (fp->flag & 0x02) {
 13224   00E56A  EE20 F00E          	lfsr	2,14
 13225   00E56E  51B5               	movf	f_lseek@fp& (0+255),w,b
 13226   00E570  26D9               	addwf	fsr2l,f,c
 13227   00E572  51B6               	movf	(f_lseek@fp+1)& (0+255),w,b
 13228   00E574  22DA               	addwfc	fsr2h,f,c
 13229   00E576  A2DF               	btfss	indf2,1,c
 13230   00E578  EFC0  F072         	goto	u12201
 13231   00E57C  EFC2  F072         	goto	u12200
 13232   00E580                     u12201:
 13233   00E580  EFEE  F072         	goto	l9278
 13234   00E584                     u12200:
 13235   00E584                     
 13236                           ; BSR set to: 0
 13237                           ;mcc_generated_files/fatfs/ff.c: 4338:       clst = create_chain(&fp->obj, clst);
 13238   00E584  C0B5  F098         	movff	f_lseek@fp,create_chain@obj
 13239   00E588  C0B6  F099         	movff	f_lseek@fp+1,create_chain@obj+1
 13240   00E58C  C0DA  F09A         	movff	f_lseek@clst,create_chain@clst
 13241   00E590  C0DB  F09B         	movff	f_lseek@clst+1,create_chain@clst+1
 13242   00E594  C0DC  F09C         	movff	f_lseek@clst+2,create_chain@clst+2
 13243   00E598  C0DD  F09D         	movff	f_lseek@clst+3,create_chain@clst+3
 13244   00E59C  ECDE  F062         	call	_create_chain	;wreg free
 13245   00E5A0  C098  F0DA         	movff	?_create_chain,f_lseek@clst
 13246   00E5A4  C099  F0DB         	movff	?_create_chain+1,f_lseek@clst+1
 13247   00E5A8  C09A  F0DC         	movff	?_create_chain+2,f_lseek@clst+2
 13248   00E5AC  C09B  F0DD         	movff	?_create_chain+3,f_lseek@clst+3
 13249   00E5B0                     
 13250                           ;mcc_generated_files/fatfs/ff.c: 4339:       if (clst == 0) {
 13251   00E5B0  0100               	movlb	0	; () banked
 13252   00E5B2  51DA               	movf	f_lseek@clst& (0+255),w,b
 13253   00E5B4  11DB               	iorwf	(f_lseek@clst+1)& (0+255),w,b
 13254   00E5B6  11DC               	iorwf	(f_lseek@clst+2)& (0+255),w,b
 13255   00E5B8  11DD               	iorwf	(f_lseek@clst+3)& (0+255),w,b
 13256   00E5BA  A4D8               	btfss	status,2,c
 13257   00E5BC  EFE2  F072         	goto	u12211
 13258   00E5C0  EFE4  F072         	goto	u12210
 13259   00E5C4                     u12211:
 13260   00E5C4  EF04  F073         	goto	l9280
 13261   00E5C8                     u12210:
 13262   00E5C8                     
 13263                           ; BSR set to: 0
 13264                           ;mcc_generated_files/fatfs/ff.c: 4340:        ofs = 0; break;
 13265   00E5C8  0E00               	movlw	0
 13266   00E5CA  6FB7               	movwf	f_lseek@ofs& (0+255),b
 13267   00E5CC  0E00               	movlw	0
 13268   00E5CE  6FB8               	movwf	(f_lseek@ofs+1)& (0+255),b
 13269   00E5D0  0E00               	movlw	0
 13270   00E5D2  6FB9               	movwf	(f_lseek@ofs+2)& (0+255),b
 13271   00E5D4  0E00               	movlw	0
 13272   00E5D6  6FBA               	movwf	(f_lseek@ofs+3)& (0+255),b
 13273   00E5D8  EF66  F073         	goto	l9298
 13274   00E5DC                     l9278:
 13275                           
 13276                           ; BSR set to: 0
 13277                           ;mcc_generated_files/fatfs/ff.c: 4344:      {;mcc_generated_files/fatfs/ff.c: 4345:     
      +                            clst = get_fat(&fp->obj, clst);
 13278   00E5DC  C0B5  F077         	movff	f_lseek@fp,get_fat@obj
 13279   00E5E0  C0B6  F078         	movff	f_lseek@fp+1,get_fat@obj+1
 13280   00E5E4  C0DA  F079         	movff	f_lseek@clst,get_fat@clst
 13281   00E5E8  C0DB  F07A         	movff	f_lseek@clst+1,get_fat@clst+1
 13282   00E5EC  C0DC  F07B         	movff	f_lseek@clst+2,get_fat@clst+2
 13283   00E5F0  C0DD  F07C         	movff	f_lseek@clst+3,get_fat@clst+3
 13284   00E5F4  ECAF  F055         	call	_get_fat	;wreg free
 13285   00E5F8  C077  F0DA         	movff	?_get_fat,f_lseek@clst
 13286   00E5FC  C078  F0DB         	movff	?_get_fat+1,f_lseek@clst+1
 13287   00E600  C079  F0DC         	movff	?_get_fat+2,f_lseek@clst+2
 13288   00E604  C07A  F0DD         	movff	?_get_fat+3,f_lseek@clst+3
 13289   00E608                     l9280:
 13290                           
 13291                           ;mcc_generated_files/fatfs/ff.c: 4347:      if (clst == 0xFFFFFFFF) { fp->err = (BYTE)(F
      +                          R_DISK_ERR); return FR_DISK_ERR; };
 13292   00E608  0100               	movlb	0	; () banked
 13293   00E60A  29DA               	incf	f_lseek@clst& (0+255),w,b
 13294   00E60C  E10A               	bnz	u12221
 13295   00E60E  29DB               	incf	(f_lseek@clst+1)& (0+255),w,b
 13296   00E610  E108               	bnz	u12221
 13297   00E612  29DC               	incf	(f_lseek@clst+2)& (0+255),w,b
 13298   00E614  E106               	bnz	u12221
 13299   00E616  29DD               	incf	(f_lseek@clst+3)& (0+255),w,b
 13300   00E618  A4D8               	btfss	status,2,c
 13301   00E61A  EF11  F073         	goto	u12221
 13302   00E61E  EF13  F073         	goto	u12220
 13303   00E622                     u12221:
 13304   00E622  EF1D  F073         	goto	l9286
 13305   00E626                     u12220:
 13306   00E626                     
 13307                           ; BSR set to: 0
 13308   00E626  EE20 F00F          	lfsr	2,15
 13309   00E62A  51B5               	movf	f_lseek@fp& (0+255),w,b
 13310   00E62C  26D9               	addwf	fsr2l,f,c
 13311   00E62E  51B6               	movf	(f_lseek@fp+1)& (0+255),w,b
 13312   00E630  22DA               	addwfc	fsr2h,f,c
 13313   00E632  0E01               	movlw	1
 13314   00E634  6EDF               	movwf	indf2,c
 13315   00E636  EFC5  F074         	goto	l731
 13316   00E63A                     l9286:
 13317                           
 13318                           ; BSR set to: 0
 13319                           ;mcc_generated_files/fatfs/ff.c: 4348:      if (clst <= 1 || clst >= fs->n_fatent) { fp-
      +                          >err = (BYTE)(FR_INT_ERR); return FR_INT_ERR; };
 13320   00E63A  51DD               	movf	(f_lseek@clst+3)& (0+255),w,b
 13321   00E63C  11DC               	iorwf	(f_lseek@clst+2)& (0+255),w,b
 13322   00E63E  11DB               	iorwf	(f_lseek@clst+1)& (0+255),w,b
 13323   00E640  E109               	bnz	u12230
 13324   00E642  0E02               	movlw	2
 13325   00E644  5DDA               	subwf	f_lseek@clst& (0+255),w,b
 13326   00E646  A0D8               	btfss	status,0,c
 13327   00E648  EF28  F073         	goto	u12231
 13328   00E64C  EF2A  F073         	goto	u12230
 13329   00E650                     u12231:
 13330   00E650  EF3F  F073         	goto	l9290
 13331   00E654                     u12230:
 13332   00E654                     
 13333                           ; BSR set to: 0
 13334   00E654  EE20 F017          	lfsr	2,23
 13335   00E658  51D8               	movf	f_lseek@fs& (0+255),w,b
 13336   00E65A  26D9               	addwf	fsr2l,f,c
 13337   00E65C  51D9               	movf	(f_lseek@fs+1)& (0+255),w,b
 13338   00E65E  22DA               	addwfc	fsr2h,f,c
 13339   00E660  50DE               	movf	postinc2,w,c
 13340   00E662  5DDA               	subwf	f_lseek@clst& (0+255),w,b
 13341   00E664  50DE               	movf	postinc2,w,c
 13342   00E666  59DB               	subwfb	(f_lseek@clst+1)& (0+255),w,b
 13343   00E668  50DE               	movf	postinc2,w,c
 13344   00E66A  59DC               	subwfb	(f_lseek@clst+2)& (0+255),w,b
 13345   00E66C  50DE               	movf	postinc2,w,c
 13346   00E66E  59DD               	subwfb	(f_lseek@clst+3)& (0+255),w,b
 13347   00E670  A0D8               	btfss	status,0,c
 13348   00E672  EF3D  F073         	goto	u12241
 13349   00E676  EF3F  F073         	goto	u12240
 13350   00E67A                     u12241:
 13351   00E67A  EF49  F073         	goto	l9294
 13352   00E67E                     u12240:
 13353   00E67E                     l9290:
 13354                           
 13355                           ; BSR set to: 0
 13356   00E67E  EE20 F00F          	lfsr	2,15
 13357   00E682  51B5               	movf	f_lseek@fp& (0+255),w,b
 13358   00E684  26D9               	addwf	fsr2l,f,c
 13359   00E686  51B6               	movf	(f_lseek@fp+1)& (0+255),w,b
 13360   00E688  22DA               	addwfc	fsr2h,f,c
 13361   00E68A  0E02               	movlw	2
 13362   00E68C  6EDF               	movwf	indf2,c
 13363   00E68E  EFC5  F074         	goto	l731
 13364   00E692                     l9294:
 13365                           
 13366                           ; BSR set to: 0
 13367                           ;mcc_generated_files/fatfs/ff.c: 4349:      fp->clust = clst;
 13368   00E692  EE20 F014          	lfsr	2,20
 13369   00E696  51B5               	movf	f_lseek@fp& (0+255),w,b
 13370   00E698  26D9               	addwf	fsr2l,f,c
 13371   00E69A  51B6               	movf	(f_lseek@fp+1)& (0+255),w,b
 13372   00E69C  22DA               	addwfc	fsr2h,f,c
 13373   00E69E  C0DA  FFDE         	movff	f_lseek@clst,postinc2
 13374   00E6A2  C0DB  FFDE         	movff	f_lseek@clst+1,postinc2
 13375   00E6A6  C0DC  FFDE         	movff	f_lseek@clst+2,postinc2
 13376   00E6AA  C0DD  FFDE         	movff	f_lseek@clst+3,postinc2
 13377   00E6AE                     l9296:
 13378                           
 13379                           ; BSR set to: 0
 13380                           ;mcc_generated_files/fatfs/ff.c: 4330:     while (ofs > bcs) {
 13381   00E6AE  51B7               	movf	f_lseek@ofs& (0+255),w,b
 13382   00E6B0  5DD4               	subwf	f_lseek@bcs& (0+255),w,b
 13383   00E6B2  51B8               	movf	(f_lseek@ofs+1)& (0+255),w,b
 13384   00E6B4  59D5               	subwfb	(f_lseek@bcs+1)& (0+255),w,b
 13385   00E6B6  51B9               	movf	(f_lseek@ofs+2)& (0+255),w,b
 13386   00E6B8  59D6               	subwfb	(f_lseek@bcs+2)& (0+255),w,b
 13387   00E6BA  51BA               	movf	(f_lseek@ofs+3)& (0+255),w,b
 13388   00E6BC  59D7               	subwfb	(f_lseek@bcs+3)& (0+255),w,b
 13389   00E6BE  A0D8               	btfss	status,0,c
 13390   00E6C0  EF64  F073         	goto	u12251
 13391   00E6C4  EF66  F073         	goto	u12250
 13392   00E6C8                     u12251:
 13393   00E6C8  EF9F  F072         	goto	l9258
 13394   00E6CC                     u12250:
 13395   00E6CC                     l9298:
 13396                           
 13397                           ; BSR set to: 0
 13398                           ;mcc_generated_files/fatfs/ff.c: 4351:     fp->fptr += ofs;
 13399   00E6CC  EE20 F010          	lfsr	2,16
 13400   00E6D0  51B5               	movf	f_lseek@fp& (0+255),w,b
 13401   00E6D2  26D9               	addwf	fsr2l,f,c
 13402   00E6D4  51B6               	movf	(f_lseek@fp+1)& (0+255),w,b
 13403   00E6D6  22DA               	addwfc	fsr2h,f,c
 13404   00E6D8  51B7               	movf	f_lseek@ofs& (0+255),w,b
 13405   00E6DA  26DE               	addwf	postinc2,f,c
 13406   00E6DC  51B8               	movf	(f_lseek@ofs+1)& (0+255),w,b
 13407   00E6DE  22DE               	addwfc	postinc2,f,c
 13408   00E6E0  51B9               	movf	(f_lseek@ofs+2)& (0+255),w,b
 13409   00E6E2  22DE               	addwfc	postinc2,f,c
 13410   00E6E4  51BA               	movf	(f_lseek@ofs+3)& (0+255),w,b
 13411   00E6E6  22DE               	addwfc	postinc2,f,c
 13412   00E6E8                     
 13413                           ; BSR set to: 0
 13414                           ;mcc_generated_files/fatfs/ff.c: 4352:     if (ofs % ((UINT)512)) {
 13415   00E6E8  0EFF               	movlw	255
 13416   00E6EA  15B7               	andwf	f_lseek@ofs& (0+255),w,b
 13417   00E6EC  6FBB               	movwf	??_f_lseek& (0+255),b
 13418   00E6EE  0E01               	movlw	1
 13419   00E6F0  15B8               	andwf	(f_lseek@ofs+1)& (0+255),w,b
 13420   00E6F2  6FBC               	movwf	(??_f_lseek+1)& (0+255),b
 13421   00E6F4  0E00               	movlw	0
 13422   00E6F6  15B9               	andwf	(f_lseek@ofs+2)& (0+255),w,b
 13423   00E6F8  6FBD               	movwf	(??_f_lseek+2)& (0+255),b
 13424   00E6FA  0E00               	movlw	0
 13425   00E6FC  15BA               	andwf	(f_lseek@ofs+3)& (0+255),w,b
 13426   00E6FE  6FBE               	movwf	(??_f_lseek+3)& (0+255),b
 13427   00E700  51BB               	movf	??_f_lseek& (0+255),w,b
 13428   00E702  11BC               	iorwf	(??_f_lseek+1)& (0+255),w,b
 13429   00E704  11BD               	iorwf	(??_f_lseek+2)& (0+255),w,b
 13430   00E706  11BE               	iorwf	(??_f_lseek+3)& (0+255),w,b
 13431   00E708  B4D8               	btfsc	status,2,c
 13432   00E70A  EF89  F073         	goto	u12261
 13433   00E70E  EF8B  F073         	goto	u12260
 13434   00E712                     u12261:
 13435   00E712  EFD2  F073         	goto	l9312
 13436   00E716                     u12260:
 13437   00E716                     
 13438                           ; BSR set to: 0
 13439                           ;mcc_generated_files/fatfs/ff.c: 4353:      nsect = clst2sect(fs, clst);
 13440   00E716  C0D8  F00D         	movff	f_lseek@fs,clst2sect@fs
 13441   00E71A  C0D9  F00E         	movff	f_lseek@fs+1,clst2sect@fs+1
 13442   00E71E  C0DA  F00F         	movff	f_lseek@clst,clst2sect@clst
 13443   00E722  C0DB  F010         	movff	f_lseek@clst+1,clst2sect@clst+1
 13444   00E726  C0DC  F011         	movff	f_lseek@clst+2,clst2sect@clst+2
 13445   00E72A  C0DD  F012         	movff	f_lseek@clst+3,clst2sect@clst+3
 13446   00E72E  ECB7  F044         	call	_clst2sect	;wreg free
 13447   00E732  C00D  F0D0         	movff	?_clst2sect,f_lseek@nsect
 13448   00E736  C00E  F0D1         	movff	?_clst2sect+1,f_lseek@nsect+1
 13449   00E73A  C00F  F0D2         	movff	?_clst2sect+2,f_lseek@nsect+2
 13450   00E73E  C010  F0D3         	movff	?_clst2sect+3,f_lseek@nsect+3
 13451   00E742                     
 13452                           ;mcc_generated_files/fatfs/ff.c: 4354:      if (nsect == 0) { fp->err = (BYTE)(FR_INT_ER
      +                          R); return FR_INT_ERR; };
 13453   00E742  0100               	movlb	0	; () banked
 13454   00E744  51D0               	movf	f_lseek@nsect& (0+255),w,b
 13455   00E746  11D1               	iorwf	(f_lseek@nsect+1)& (0+255),w,b
 13456   00E748  11D2               	iorwf	(f_lseek@nsect+2)& (0+255),w,b
 13457   00E74A  11D3               	iorwf	(f_lseek@nsect+3)& (0+255),w,b
 13458   00E74C  A4D8               	btfss	status,2,c
 13459   00E74E  EFAB  F073         	goto	u12271
 13460   00E752  EFAD  F073         	goto	u12270
 13461   00E756                     u12271:
 13462   00E756  EFB7  F073         	goto	l9310
 13463   00E75A                     u12270:
 13464   00E75A                     
 13465                           ; BSR set to: 0
 13466   00E75A  EE20 F00F          	lfsr	2,15
 13467   00E75E  51B5               	movf	f_lseek@fp& (0+255),w,b
 13468   00E760  26D9               	addwf	fsr2l,f,c
 13469   00E762  51B6               	movf	(f_lseek@fp+1)& (0+255),w,b
 13470   00E764  22DA               	addwfc	fsr2h,f,c
 13471   00E766  0E02               	movlw	2
 13472   00E768  6EDF               	movwf	indf2,c
 13473   00E76A  EFC5  F074         	goto	l731
 13474   00E76E                     l9310:
 13475                           
 13476                           ; BSR set to: 0
 13477                           ;mcc_generated_files/fatfs/ff.c: 4355:      nsect += (DWORD)(ofs / ((UINT)512));
 13478   00E76E  C0B7  F0BB         	movff	f_lseek@ofs,??_f_lseek
 13479   00E772  C0B8  F0BC         	movff	f_lseek@ofs+1,??_f_lseek+1
 13480   00E776  C0B9  F0BD         	movff	f_lseek@ofs+2,??_f_lseek+2
 13481   00E77A  C0BA  F0BE         	movff	f_lseek@ofs+3,??_f_lseek+3
 13482   00E77E  0E0A               	movlw	10
 13483   00E780  EFC7  F073         	goto	u12280
 13484   00E784                     u12285:
 13485   00E784  90D8               	bcf	status,0,c
 13486   00E786  33BE               	rrcf	(??_f_lseek+3)& (0+255),f,b
 13487   00E788  33BD               	rrcf	(??_f_lseek+2)& (0+255),f,b
 13488   00E78A  33BC               	rrcf	(??_f_lseek+1)& (0+255),f,b
 13489   00E78C  33BB               	rrcf	??_f_lseek& (0+255),f,b
 13490   00E78E                     u12280:
 13491   00E78E  2EE8               	decfsz	wreg,f,c
 13492   00E790  EFC2  F073         	goto	u12285
 13493   00E794  51BB               	movf	??_f_lseek& (0+255),w,b
 13494   00E796  27D0               	addwf	f_lseek@nsect& (0+255),f,b
 13495   00E798  51BC               	movf	(??_f_lseek+1)& (0+255),w,b
 13496   00E79A  23D1               	addwfc	(f_lseek@nsect+1)& (0+255),f,b
 13497   00E79C  51BD               	movf	(??_f_lseek+2)& (0+255),w,b
 13498   00E79E  23D2               	addwfc	(f_lseek@nsect+2)& (0+255),f,b
 13499   00E7A0  51BE               	movf	(??_f_lseek+3)& (0+255),w,b
 13500   00E7A2  23D3               	addwfc	(f_lseek@nsect+3)& (0+255),f,b
 13501   00E7A4                     l9312:
 13502                           
 13503                           ; BSR set to: 0
 13504   00E7A4  EE20 F010          	lfsr	2,16
 13505   00E7A8  51B5               	movf	f_lseek@fp& (0+255),w,b
 13506   00E7AA  26D9               	addwf	fsr2l,f,c
 13507   00E7AC  51B6               	movf	(f_lseek@fp+1)& (0+255),w,b
 13508   00E7AE  22DA               	addwfc	fsr2h,f,c
 13509   00E7B0  EE10 F00A          	lfsr	1,10
 13510   00E7B4  51B5               	movf	f_lseek@fp& (0+255),w,b
 13511   00E7B6  26E1               	addwf	fsr1l,f,c
 13512   00E7B8  51B6               	movf	(f_lseek@fp+1)& (0+255),w,b
 13513   00E7BA  22E2               	addwfc	fsr1h,f,c
 13514   00E7BC  50DE               	movf	postinc2,w,c
 13515   00E7BE  5CE6               	subwf	postinc1,w,c
 13516   00E7C0  50DE               	movf	postinc2,w,c
 13517   00E7C2  58E6               	subwfb	postinc1,w,c
 13518   00E7C4  50DE               	movf	postinc2,w,c
 13519   00E7C6  58E6               	subwfb	postinc1,w,c
 13520   00E7C8  50DE               	movf	postinc2,w,c
 13521   00E7CA  58E6               	subwfb	postinc1,w,c
 13522   00E7CC  B0D8               	btfsc	status,0,c
 13523   00E7CE  EFEB  F073         	goto	u12291
 13524   00E7D2  EFED  F073         	goto	u12290
 13525   00E7D6                     u12291:
 13526   00E7D6  EF09  F074         	goto	l9318
 13527   00E7DA                     u12290:
 13528   00E7DA                     
 13529                           ; BSR set to: 0
 13530                           ;mcc_generated_files/fatfs/ff.c: 4360:    fp->obj.objsize = fp->fptr;
 13531   00E7DA  EE20 F010          	lfsr	2,16
 13532   00E7DE  51B5               	movf	f_lseek@fp& (0+255),w,b
 13533   00E7E0  26D9               	addwf	fsr2l,f,c
 13534   00E7E2  51B6               	movf	(f_lseek@fp+1)& (0+255),w,b
 13535   00E7E4  22DA               	addwfc	fsr2h,f,c
 13536   00E7E6  EE10 F00A          	lfsr	1,10
 13537   00E7EA  51B5               	movf	f_lseek@fp& (0+255),w,b
 13538   00E7EC  26E1               	addwf	fsr1l,f,c
 13539   00E7EE  51B6               	movf	(f_lseek@fp+1)& (0+255),w,b
 13540   00E7F0  22E2               	addwfc	fsr1h,f,c
 13541   00E7F2  CFDE FFE6          	movff	postinc2,postinc1
 13542   00E7F6  CFDE FFE6          	movff	postinc2,postinc1
 13543   00E7FA  CFDE FFE6          	movff	postinc2,postinc1
 13544   00E7FE  CFDE FFE6          	movff	postinc2,postinc1
 13545   00E802                     
 13546                           ; BSR set to: 0
 13547                           ;mcc_generated_files/fatfs/ff.c: 4361:    fp->flag |= 0x40;
 13548   00E802  EE20 F00E          	lfsr	2,14
 13549   00E806  51B5               	movf	f_lseek@fp& (0+255),w,b
 13550   00E808  26D9               	addwf	fsr2l,f,c
 13551   00E80A  51B6               	movf	(f_lseek@fp+1)& (0+255),w,b
 13552   00E80C  22DA               	addwfc	fsr2h,f,c
 13553   00E80E  0E00               	movlw	0
 13554   00E810  8CDB               	bsf	plusw2,6,c
 13555   00E812                     l9318:
 13556                           
 13557                           ; BSR set to: 0
 13558                           ;mcc_generated_files/fatfs/ff.c: 4363:   if (fp->fptr % ((UINT)512) && nsect != fp->sect
      +                          ) {
 13559   00E812  EE20 F010          	lfsr	2,16
 13560   00E816  51B5               	movf	f_lseek@fp& (0+255),w,b
 13561   00E818  26D9               	addwf	fsr2l,f,c
 13562   00E81A  51B6               	movf	(f_lseek@fp+1)& (0+255),w,b
 13563   00E81C  22DA               	addwfc	fsr2h,f,c
 13564   00E81E  0EFF               	movlw	255
 13565   00E820  14DE               	andwf	postinc2,w,c
 13566   00E822  6FBB               	movwf	??_f_lseek& (0+255),b
 13567   00E824  0E01               	movlw	1
 13568   00E826  14DE               	andwf	postinc2,w,c
 13569   00E828  6FBC               	movwf	(??_f_lseek+1)& (0+255),b
 13570   00E82A  0E00               	movlw	0
 13571   00E82C  14DE               	andwf	postinc2,w,c
 13572   00E82E  6FBD               	movwf	(??_f_lseek+2)& (0+255),b
 13573   00E830  0E00               	movlw	0
 13574   00E832  14DE               	andwf	postinc2,w,c
 13575   00E834  6FBE               	movwf	(??_f_lseek+3)& (0+255),b
 13576   00E836  51BB               	movf	??_f_lseek& (0+255),w,b
 13577   00E838  11BC               	iorwf	(??_f_lseek+1)& (0+255),w,b
 13578   00E83A  11BD               	iorwf	(??_f_lseek+2)& (0+255),w,b
 13579   00E83C  11BE               	iorwf	(??_f_lseek+3)& (0+255),w,b
 13580   00E83E  B4D8               	btfsc	status,2,c
 13581   00E840  EF24  F074         	goto	u12301
 13582   00E844  EF26  F074         	goto	u12300
 13583   00E848                     u12301:
 13584   00E848  EFC5  F074         	goto	l731
 13585   00E84C                     u12300:
 13586   00E84C                     
 13587                           ; BSR set to: 0
 13588   00E84C  EE20 F018          	lfsr	2,24
 13589   00E850  51B5               	movf	f_lseek@fp& (0+255),w,b
 13590   00E852  26D9               	addwf	fsr2l,f,c
 13591   00E854  51B6               	movf	(f_lseek@fp+1)& (0+255),w,b
 13592   00E856  22DA               	addwfc	fsr2h,f,c
 13593   00E858  51D0               	movf	f_lseek@nsect& (0+255),w,b
 13594   00E85A  18DE               	xorwf	postinc2,w,c
 13595   00E85C  E10F               	bnz	u12310
 13596   00E85E  51D1               	movf	(f_lseek@nsect+1)& (0+255),w,b
 13597   00E860  18DE               	xorwf	postinc2,w,c
 13598   00E862  E10C               	bnz	u12310
 13599   00E864  51D2               	movf	(f_lseek@nsect+2)& (0+255),w,b
 13600   00E866  18DE               	xorwf	postinc2,w,c
 13601   00E868  E109               	bnz	u12310
 13602   00E86A  51D3               	movf	(f_lseek@nsect+3)& (0+255),w,b
 13603   00E86C  18DE               	xorwf	postinc2,w,c
 13604   00E86E  B4D8               	btfsc	status,2,c
 13605   00E870  EF3C  F074         	goto	u12311
 13606   00E874  EF3E  F074         	goto	u12310
 13607   00E878                     u12311:
 13608   00E878  EFC5  F074         	goto	l731
 13609   00E87C                     u12310:
 13610   00E87C                     
 13611                           ; BSR set to: 0
 13612                           ;mcc_generated_files/fatfs/ff.c: 4366:    if (fp->flag & 0x80) {
 13613   00E87C  EE20 F00E          	lfsr	2,14
 13614   00E880  51B5               	movf	f_lseek@fp& (0+255),w,b
 13615   00E882  26D9               	addwf	fsr2l,f,c
 13616   00E884  51B6               	movf	(f_lseek@fp+1)& (0+255),w,b
 13617   00E886  22DA               	addwfc	fsr2h,f,c
 13618   00E888  AEDF               	btfss	indf2,7,c
 13619   00E88A  EF49  F074         	goto	u12321
 13620   00E88E  EF4B  F074         	goto	u12320
 13621   00E892                     u12321:
 13622   00E892  EF88  F074         	goto	l9332
 13623   00E896                     u12320:
 13624   00E896                     
 13625                           ; BSR set to: 0
 13626                           ;mcc_generated_files/fatfs/ff.c: 4367:     if (disk_write(fs->pdrv, fp->buf, fp->sect, 1
      +                          ) != RES_OK) { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
 13627   00E896  0E22               	movlw	34
 13628   00E898  25B5               	addwf	f_lseek@fp& (0+255),w,b
 13629   00E89A  6E4D               	movwf	disk_write@buff^0,c
 13630   00E89C  0E00               	movlw	0
 13631   00E89E  21B6               	addwfc	(f_lseek@fp+1)& (0+255),w,b
 13632   00E8A0  6E4E               	movwf	(disk_write@buff+1)^0,c
 13633   00E8A2  EE20 F018          	lfsr	2,24
 13634   00E8A6  51B5               	movf	f_lseek@fp& (0+255),w,b
 13635   00E8A8  26D9               	addwf	fsr2l,f,c
 13636   00E8AA  51B6               	movf	(f_lseek@fp+1)& (0+255),w,b
 13637   00E8AC  22DA               	addwfc	fsr2h,f,c
 13638   00E8AE  CFDE F04F          	movff	postinc2,disk_write@sector
 13639   00E8B2  CFDE F050          	movff	postinc2,disk_write@sector+1
 13640   00E8B6  CFDE F051          	movff	postinc2,disk_write@sector+2
 13641   00E8BA  CFDE F052          	movff	postinc2,disk_write@sector+3
 13642   00E8BE  0E00               	movlw	0
 13643   00E8C0  6E54               	movwf	(disk_write@count+1)^0,c
 13644   00E8C2  0E01               	movlw	1
 13645   00E8C4  6E53               	movwf	disk_write@count^0,c
 13646   00E8C6  EE20 F001          	lfsr	2,1
 13647   00E8CA  51D8               	movf	f_lseek@fs& (0+255),w,b
 13648   00E8CC  26D9               	addwf	fsr2l,f,c
 13649   00E8CE  51D9               	movf	(f_lseek@fs+1)& (0+255),w,b
 13650   00E8D0  22DA               	addwfc	fsr2h,f,c
 13651   00E8D2  50DF               	movf	indf2,w,c
 13652   00E8D4  EC59  F041         	call	_disk_write
 13653   00E8D8  0900               	iorlw	0
 13654   00E8DA  B4D8               	btfsc	status,2,c
 13655   00E8DC  EF72  F074         	goto	u12331
 13656   00E8E0  EF74  F074         	goto	u12330
 13657   00E8E4                     u12331:
 13658   00E8E4  EF7F  F074         	goto	l9330
 13659   00E8E8                     u12330:
 13660   00E8E8  0100               	movlb	0	; () banked
 13661   00E8EA  EE20 F00F          	lfsr	2,15
 13662   00E8EE  51B5               	movf	f_lseek@fp& (0+255),w,b
 13663   00E8F0  26D9               	addwf	fsr2l,f,c
 13664   00E8F2  51B6               	movf	(f_lseek@fp+1)& (0+255),w,b
 13665   00E8F4  22DA               	addwfc	fsr2h,f,c
 13666   00E8F6  0E01               	movlw	1
 13667   00E8F8  6EDF               	movwf	indf2,c
 13668   00E8FA  EFC5  F074         	goto	l731
 13669   00E8FE                     l9330:
 13670                           
 13671                           ;mcc_generated_files/fatfs/ff.c: 4368:     fp->flag &= (BYTE)~0x80;
 13672   00E8FE  0100               	movlb	0	; () banked
 13673   00E900  EE20 F00E          	lfsr	2,14
 13674   00E904  51B5               	movf	f_lseek@fp& (0+255),w,b
 13675   00E906  26D9               	addwf	fsr2l,f,c
 13676   00E908  51B6               	movf	(f_lseek@fp+1)& (0+255),w,b
 13677   00E90A  22DA               	addwfc	fsr2h,f,c
 13678   00E90C  0E7F               	movlw	127
 13679   00E90E  16DF               	andwf	indf2,f,c
 13680   00E910                     l9332:
 13681                           
 13682                           ; BSR set to: 0
 13683                           ;mcc_generated_files/fatfs/ff.c: 4371:    if (disk_read(fs->pdrv, fp->buf, nsect, 1) != 
      +                          RES_OK) { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
 13684   00E910  0E22               	movlw	34
 13685   00E912  25B5               	addwf	f_lseek@fp& (0+255),w,b
 13686   00E914  6E4A               	movwf	disk_read@buff^0,c
 13687   00E916  0E00               	movlw	0
 13688   00E918  21B6               	addwfc	(f_lseek@fp+1)& (0+255),w,b
 13689   00E91A  6E4B               	movwf	(disk_read@buff+1)^0,c
 13690   00E91C  C0D0  F04C         	movff	f_lseek@nsect,disk_read@sector
 13691   00E920  C0D1  F04D         	movff	f_lseek@nsect+1,disk_read@sector+1
 13692   00E924  C0D2  F04E         	movff	f_lseek@nsect+2,disk_read@sector+2
 13693   00E928  C0D3  F04F         	movff	f_lseek@nsect+3,disk_read@sector+3
 13694   00E92C  0E00               	movlw	0
 13695   00E92E  6E51               	movwf	(disk_read@count+1)^0,c
 13696   00E930  0E01               	movlw	1
 13697   00E932  6E50               	movwf	disk_read@count^0,c
 13698   00E934  EE20 F001          	lfsr	2,1
 13699   00E938  51D8               	movf	f_lseek@fs& (0+255),w,b
 13700   00E93A  26D9               	addwf	fsr2l,f,c
 13701   00E93C  51D9               	movf	(f_lseek@fs+1)& (0+255),w,b
 13702   00E93E  22DA               	addwfc	fsr2h,f,c
 13703   00E940  50DF               	movf	indf2,w,c
 13704   00E942  EC1F  F041         	call	_disk_read
 13705   00E946  0900               	iorlw	0
 13706   00E948  B4D8               	btfsc	status,2,c
 13707   00E94A  EFA9  F074         	goto	u12341
 13708   00E94E  EFAB  F074         	goto	u12340
 13709   00E952                     u12341:
 13710   00E952  EFB6  F074         	goto	l9338
 13711   00E956                     u12340:
 13712   00E956  0100               	movlb	0	; () banked
 13713   00E958  EE20 F00F          	lfsr	2,15
 13714   00E95C  51B5               	movf	f_lseek@fp& (0+255),w,b
 13715   00E95E  26D9               	addwf	fsr2l,f,c
 13716   00E960  51B6               	movf	(f_lseek@fp+1)& (0+255),w,b
 13717   00E962  22DA               	addwfc	fsr2h,f,c
 13718   00E964  0E01               	movlw	1
 13719   00E966  6EDF               	movwf	indf2,c
 13720   00E968  EFC5  F074         	goto	l731
 13721   00E96C                     l9338:
 13722                           
 13723                           ;mcc_generated_files/fatfs/ff.c: 4373:    fp->sect = nsect;
 13724   00E96C  0100               	movlb	0	; () banked
 13725   00E96E  EE20 F018          	lfsr	2,24
 13726   00E972  51B5               	movf	f_lseek@fp& (0+255),w,b
 13727   00E974  26D9               	addwf	fsr2l,f,c
 13728   00E976  51B6               	movf	(f_lseek@fp+1)& (0+255),w,b
 13729   00E978  22DA               	addwfc	fsr2h,f,c
 13730   00E97A  C0D0  FFDE         	movff	f_lseek@nsect,postinc2
 13731   00E97E  C0D1  FFDE         	movff	f_lseek@nsect+1,postinc2
 13732   00E982  C0D2  FFDE         	movff	f_lseek@nsect+2,postinc2
 13733   00E986  C0D3  FFDE         	movff	f_lseek@nsect+3,postinc2
 13734   00E98A                     l731:
 13735                           
 13736                           ; BSR set to: 0
 13737   00E98A  0012               	return		;funcret
 13738   00E98C                     __end_of_f_lseek:
 13739                           	callstack 0
 13740                           
 13741 ;; *************** function _create_chain *****************
 13742 ;; Defined at:
 13743 ;;		line 1503 in file "mcc_generated_files/fatfs/ff.c"
 13744 ;; Parameters:    Size  Location     Type
 13745 ;;  obj             2   56[BANK0 ] PTR struct .
 13746 ;;		 -> Fil(546), pb.fp(3), pb.fp(3), pb.fp(3), 
 13747 ;;		 -> f_rename@djn(40), f_rename@djo(40), f_mkdir@dj(40), f_unlink@sdj(40), 
 13748 ;;		 -> f_unlink@dj(40), f_stat@dj(40), f_chdir@dj(40), f_open@dj(40), 
 13749 ;;		 -> file(546), 
 13750 ;;  clst            4   58[BANK0 ] unsigned long 
 13751 ;; Auto vars:     Size  Location     Type
 13752 ;;  cs              4   81[BANK0 ] unsigned long 
 13753 ;;  ncl             4   75[BANK0 ] unsigned long 
 13754 ;;  scl             4   71[BANK0 ] unsigned long 
 13755 ;;  fs              2   79[BANK0 ] PTR struct .
 13756 ;;		 -> FatFs(563), drive(563), NULL(0), 
 13757 ;;  res             1   70[BANK0 ] enum E68
 13758 ;; Return value:  Size  Location     Type
 13759 ;;                  4   56[BANK0 ] unsigned long 
 13760 ;; Registers used:
 13761 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 13762 ;; Tracked objects:
 13763 ;;		On entry : 0/0
 13764 ;;		On exit  : 0/0
 13765 ;;		Unchanged: 0/0
 13766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13767 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13768 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13769 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13770 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13771 ;;Total ram usage:       29 bytes
 13772 ;; Hardware stack levels used: 1
 13773 ;; Hardware stack levels required when called: 8
 13774 ;; This function calls:
 13775 ;;		_get_fat
 13776 ;;		_put_fat
 13777 ;; This function is called by:
 13778 ;;		_dir_next
 13779 ;;		_f_write
 13780 ;;		_f_lseek
 13781 ;;		_f_mkdir
 13782 ;; This function uses a non-reentrant model
 13783 ;;
 13784                           
 13785                           	psect	text30
 13786   00C5BC                     __ptext30:
 13787                           	callstack 0
 13788   00C5BC                     _create_chain:
 13789                           	callstack 20
 13790   00C5BC                     
 13791                           ;mcc_generated_files/fatfs/ff.c: 1504:  FFOBJID* obj,;mcc_generated_files/fatfs/ff.c: 15
      +                          05:  DWORD clst;mcc_generated_files/fatfs/ff.c: 1507: {;mcc_generated_files/fatfs/ff.c: 
      +                          1508:  DWORD cs, ncl, scl;;mcc_generated_files/fatfs/ff.c: 1509:  FRESULT res;;mcc_gener
      +                          ated_files/fatfs/ff.c: 1510:  FATFS *fs = obj->fs;
 13792   00C5BC  C098  FFD9         	movff	create_chain@obj,fsr2l
 13793   00C5C0  C099  FFDA         	movff	create_chain@obj+1,fsr2h
 13794   00C5C4  CFDE F0AF          	movff	postinc2,create_chain@fs
 13795   00C5C8  CFDD F0B0          	movff	postdec2,create_chain@fs+1
 13796   00C5CC                     
 13797                           ;mcc_generated_files/fatfs/ff.c: 1513:  if (clst == 0) {
 13798   00C5CC  0100               	movlb	0	; () banked
 13799   00C5CE  519A               	movf	create_chain@clst& (0+255),w,b
 13800   00C5D0  119B               	iorwf	(create_chain@clst+1)& (0+255),w,b
 13801   00C5D2  119C               	iorwf	(create_chain@clst+2)& (0+255),w,b
 13802   00C5D4  119D               	iorwf	(create_chain@clst+3)& (0+255),w,b
 13803   00C5D6  A4D8               	btfss	status,2,c
 13804   00C5D8  EFF0  F062         	goto	u8581
 13805   00C5DC  EFF2  F062         	goto	u8580
 13806   00C5E0                     u8581:
 13807   00C5E0  EF2A  F063         	goto	l7304
 13808   00C5E4                     u8580:
 13809   00C5E4                     
 13810                           ; BSR set to: 0
 13811                           ;mcc_generated_files/fatfs/ff.c: 1514:   scl = fs->last_clst;
 13812   00C5E4  EE20 F00B          	lfsr	2,11
 13813   00C5E8  51AF               	movf	create_chain@fs& (0+255),w,b
 13814   00C5EA  26D9               	addwf	fsr2l,f,c
 13815   00C5EC  51B0               	movf	(create_chain@fs+1)& (0+255),w,b
 13816   00C5EE  22DA               	addwfc	fsr2h,f,c
 13817   00C5F0  CFDE F0A7          	movff	postinc2,create_chain@scl
 13818   00C5F4  CFDE F0A8          	movff	postinc2,create_chain@scl+1
 13819   00C5F8  CFDE F0A9          	movff	postinc2,create_chain@scl+2
 13820   00C5FC  CFDE F0AA          	movff	postinc2,create_chain@scl+3
 13821   00C600                     
 13822                           ; BSR set to: 0
 13823                           ;mcc_generated_files/fatfs/ff.c: 1515:   if (scl == 0 || scl >= fs->n_fatent) scl = 1;
 13824   00C600  51A7               	movf	create_chain@scl& (0+255),w,b
 13825   00C602  11A8               	iorwf	(create_chain@scl+1)& (0+255),w,b
 13826   00C604  11A9               	iorwf	(create_chain@scl+2)& (0+255),w,b
 13827   00C606  11AA               	iorwf	(create_chain@scl+3)& (0+255),w,b
 13828   00C608  B4D8               	btfsc	status,2,c
 13829   00C60A  EF09  F063         	goto	u8591
 13830   00C60E  EF0B  F063         	goto	u8590
 13831   00C612                     u8591:
 13832   00C612  EF20  F063         	goto	l7302
 13833   00C616                     u8590:
 13834   00C616                     
 13835                           ; BSR set to: 0
 13836   00C616  EE20 F017          	lfsr	2,23
 13837   00C61A  51AF               	movf	create_chain@fs& (0+255),w,b
 13838   00C61C  26D9               	addwf	fsr2l,f,c
 13839   00C61E  51B0               	movf	(create_chain@fs+1)& (0+255),w,b
 13840   00C620  22DA               	addwfc	fsr2h,f,c
 13841   00C622  50DE               	movf	postinc2,w,c
 13842   00C624  5DA7               	subwf	create_chain@scl& (0+255),w,b
 13843   00C626  50DE               	movf	postinc2,w,c
 13844   00C628  59A8               	subwfb	(create_chain@scl+1)& (0+255),w,b
 13845   00C62A  50DE               	movf	postinc2,w,c
 13846   00C62C  59A9               	subwfb	(create_chain@scl+2)& (0+255),w,b
 13847   00C62E  50DE               	movf	postinc2,w,c
 13848   00C630  59AA               	subwfb	(create_chain@scl+3)& (0+255),w,b
 13849   00C632  A0D8               	btfss	status,0,c
 13850   00C634  EF1E  F063         	goto	u8601
 13851   00C638  EF20  F063         	goto	u8600
 13852   00C63C                     u8601:
 13853   00C63C  EF8F  F063         	goto	l7320
 13854   00C640                     u8600:
 13855   00C640                     l7302:
 13856                           
 13857                           ; BSR set to: 0
 13858   00C640  0E01               	movlw	1
 13859   00C642  6FA7               	movwf	create_chain@scl& (0+255),b
 13860   00C644  0E00               	movlw	0
 13861   00C646  6FA8               	movwf	(create_chain@scl+1)& (0+255),b
 13862   00C648  0E00               	movlw	0
 13863   00C64A  6FA9               	movwf	(create_chain@scl+2)& (0+255),b
 13864   00C64C  0E00               	movlw	0
 13865   00C64E  6FAA               	movwf	(create_chain@scl+3)& (0+255),b
 13866   00C650  EF8F  F063         	goto	l7320
 13867   00C654                     l7304:
 13868                           
 13869                           ; BSR set to: 0
 13870                           ;mcc_generated_files/fatfs/ff.c: 1518:   cs = get_fat(obj, clst);
 13871   00C654  C098  F077         	movff	create_chain@obj,get_fat@obj
 13872   00C658  C099  F078         	movff	create_chain@obj+1,get_fat@obj+1
 13873   00C65C  C09A  F079         	movff	create_chain@clst,get_fat@clst
 13874   00C660  C09B  F07A         	movff	create_chain@clst+1,get_fat@clst+1
 13875   00C664  C09C  F07B         	movff	create_chain@clst+2,get_fat@clst+2
 13876   00C668  C09D  F07C         	movff	create_chain@clst+3,get_fat@clst+3
 13877   00C66C  ECAF  F055         	call	_get_fat	;wreg free
 13878   00C670  C077  F0B1         	movff	?_get_fat,create_chain@cs
 13879   00C674  C078  F0B2         	movff	?_get_fat+1,create_chain@cs+1
 13880   00C678  C079  F0B3         	movff	?_get_fat+2,create_chain@cs+2
 13881   00C67C  C07A  F0B4         	movff	?_get_fat+3,create_chain@cs+3
 13882   00C680                     
 13883                           ;mcc_generated_files/fatfs/ff.c: 1519:   if (cs < 2) return 1;
 13884   00C680  0100               	movlb	0	; () banked
 13885   00C682  51B4               	movf	(create_chain@cs+3)& (0+255),w,b
 13886   00C684  11B3               	iorwf	(create_chain@cs+2)& (0+255),w,b
 13887   00C686  11B2               	iorwf	(create_chain@cs+1)& (0+255),w,b
 13888   00C688  E107               	bnz	u8611
 13889   00C68A  0E02               	movlw	2
 13890   00C68C  5DB1               	subwf	create_chain@cs& (0+255),w,b
 13891   00C68E  B0D8               	btfsc	status,0,c
 13892   00C690  EF4C  F063         	goto	u8611
 13893   00C694  EF4E  F063         	goto	u8610
 13894   00C698                     u8611:
 13895   00C698  EF58  F063         	goto	l7312
 13896   00C69C                     u8610:
 13897   00C69C                     
 13898                           ; BSR set to: 0
 13899   00C69C  0E01               	movlw	1
 13900   00C69E  6F98               	movwf	?_create_chain& (0+255),b
 13901   00C6A0  0E00               	movlw	0
 13902   00C6A2  6F99               	movwf	(?_create_chain+1)& (0+255),b
 13903   00C6A4  0E00               	movlw	0
 13904   00C6A6  6F9A               	movwf	(?_create_chain+2)& (0+255),b
 13905   00C6A8  0E00               	movlw	0
 13906   00C6AA  6F9B               	movwf	(?_create_chain+3)& (0+255),b
 13907   00C6AC  EFB5  F065         	goto	l281
 13908   00C6B0                     l7312:
 13909                           
 13910                           ; BSR set to: 0
 13911                           ;mcc_generated_files/fatfs/ff.c: 1520:   if (cs == 0xFFFFFFFF) return cs;
 13912   00C6B0  29B1               	incf	create_chain@cs& (0+255),w,b
 13913   00C6B2  E10A               	bnz	u8621
 13914   00C6B4  29B2               	incf	(create_chain@cs+1)& (0+255),w,b
 13915   00C6B6  E108               	bnz	u8621
 13916   00C6B8  29B3               	incf	(create_chain@cs+2)& (0+255),w,b
 13917   00C6BA  E106               	bnz	u8621
 13918   00C6BC  29B4               	incf	(create_chain@cs+3)& (0+255),w,b
 13919   00C6BE  A4D8               	btfss	status,2,c
 13920   00C6C0  EF64  F063         	goto	u8621
 13921   00C6C4  EF66  F063         	goto	u8620
 13922   00C6C8                     u8621:
 13923   00C6C8  EF70  F063         	goto	l7316
 13924   00C6CC                     u8620:
 13925   00C6CC                     l7314:
 13926                           
 13927                           ; BSR set to: 0
 13928   00C6CC  C0B1  F098         	movff	create_chain@cs,?_create_chain
 13929   00C6D0  C0B2  F099         	movff	create_chain@cs+1,?_create_chain+1
 13930   00C6D4  C0B3  F09A         	movff	create_chain@cs+2,?_create_chain+2
 13931   00C6D8  C0B4  F09B         	movff	create_chain@cs+3,?_create_chain+3
 13932   00C6DC  EFB5  F065         	goto	l281
 13933   00C6E0                     l7316:
 13934                           
 13935                           ; BSR set to: 0
 13936                           ;mcc_generated_files/fatfs/ff.c: 1521:   if (cs < fs->n_fatent) return cs;
 13937   00C6E0  EE20 F017          	lfsr	2,23
 13938   00C6E4  51AF               	movf	create_chain@fs& (0+255),w,b
 13939   00C6E6  26D9               	addwf	fsr2l,f,c
 13940   00C6E8  51B0               	movf	(create_chain@fs+1)& (0+255),w,b
 13941   00C6EA  22DA               	addwfc	fsr2h,f,c
 13942   00C6EC  50DE               	movf	postinc2,w,c
 13943   00C6EE  5DB1               	subwf	create_chain@cs& (0+255),w,b
 13944   00C6F0  50DE               	movf	postinc2,w,c
 13945   00C6F2  59B2               	subwfb	(create_chain@cs+1)& (0+255),w,b
 13946   00C6F4  50DE               	movf	postinc2,w,c
 13947   00C6F6  59B3               	subwfb	(create_chain@cs+2)& (0+255),w,b
 13948   00C6F8  50DE               	movf	postinc2,w,c
 13949   00C6FA  59B4               	subwfb	(create_chain@cs+3)& (0+255),w,b
 13950   00C6FC  B0D8               	btfsc	status,0,c
 13951   00C6FE  EF83  F063         	goto	u8631
 13952   00C702  EF85  F063         	goto	u8630
 13953   00C706                     u8631:
 13954   00C706  EF87  F063         	goto	l283
 13955   00C70A                     u8630:
 13956   00C70A  EF66  F063         	goto	l7314
 13957   00C70E                     l283:
 13958                           
 13959                           ; BSR set to: 0
 13960                           ;mcc_generated_files/fatfs/ff.c: 1522:   scl = clst;
 13961   00C70E  C09A  F0A7         	movff	create_chain@clst,create_chain@scl
 13962   00C712  C09B  F0A8         	movff	create_chain@clst+1,create_chain@scl+1
 13963   00C716  C09C  F0A9         	movff	create_chain@clst+2,create_chain@scl+2
 13964   00C71A  C09D  F0AA         	movff	create_chain@clst+3,create_chain@scl+3
 13965   00C71E                     l7320:
 13966                           
 13967                           ; BSR set to: 0
 13968                           ;mcc_generated_files/fatfs/ff.c: 1524:  if (fs->free_clst == 0) return 0;
 13969   00C71E  EE20 F00F          	lfsr	2,15
 13970   00C722  51AF               	movf	create_chain@fs& (0+255),w,b
 13971   00C724  26D9               	addwf	fsr2l,f,c
 13972   00C726  51B0               	movf	(create_chain@fs+1)& (0+255),w,b
 13973   00C728  22DA               	addwfc	fsr2h,f,c
 13974   00C72A  50DE               	movf	postinc2,w,c
 13975   00C72C  10DE               	iorwf	postinc2,w,c
 13976   00C72E  10DE               	iorwf	postinc2,w,c
 13977   00C730  10DE               	iorwf	postinc2,w,c
 13978   00C732  A4D8               	btfss	status,2,c
 13979   00C734  EF9E  F063         	goto	u8641
 13980   00C738  EFA0  F063         	goto	u8640
 13981   00C73C                     u8641:
 13982   00C73C  EFAA  F063         	goto	l7326
 13983   00C740                     u8640:
 13984   00C740                     l7322:
 13985                           
 13986                           ; BSR set to: 0
 13987   00C740  0E00               	movlw	0
 13988   00C742  6F98               	movwf	?_create_chain& (0+255),b
 13989   00C744  0E00               	movlw	0
 13990   00C746  6F99               	movwf	(?_create_chain+1)& (0+255),b
 13991   00C748  0E00               	movlw	0
 13992   00C74A  6F9A               	movwf	(?_create_chain+2)& (0+255),b
 13993   00C74C  0E00               	movlw	0
 13994   00C74E  6F9B               	movwf	(?_create_chain+3)& (0+255),b
 13995   00C750  EFB5  F065         	goto	l281
 13996   00C754                     l7326:
 13997                           
 13998                           ; BSR set to: 0
 13999                           ;mcc_generated_files/fatfs/ff.c: 1552:  {;mcc_generated_files/fatfs/ff.c: 1553:   ncl = 
      +                          0;
 14000   00C754  0E00               	movlw	0
 14001   00C756  6FAB               	movwf	create_chain@ncl& (0+255),b
 14002   00C758  0E00               	movlw	0
 14003   00C75A  6FAC               	movwf	(create_chain@ncl+1)& (0+255),b
 14004   00C75C  0E00               	movlw	0
 14005   00C75E  6FAD               	movwf	(create_chain@ncl+2)& (0+255),b
 14006   00C760  0E00               	movlw	0
 14007   00C762  6FAE               	movwf	(create_chain@ncl+3)& (0+255),b
 14008   00C764                     
 14009                           ; BSR set to: 0
 14010                           ;mcc_generated_files/fatfs/ff.c: 1554:   if (scl == clst) {
 14011   00C764  519A               	movf	create_chain@clst& (0+255),w,b
 14012   00C766  19A7               	xorwf	create_chain@scl& (0+255),w,b
 14013   00C768  E10D               	bnz	u8651
 14014   00C76A  519B               	movf	(create_chain@clst+1)& (0+255),w,b
 14015   00C76C  19A8               	xorwf	(create_chain@scl+1)& (0+255),w,b
 14016   00C76E  E10A               	bnz	u8651
 14017   00C770  519C               	movf	(create_chain@clst+2)& (0+255),w,b
 14018   00C772  19A9               	xorwf	(create_chain@scl+2)& (0+255),w,b
 14019   00C774  E107               	bnz	u8651
 14020   00C776  519D               	movf	(create_chain@clst+3)& (0+255),w,b
 14021   00C778  19AA               	xorwf	(create_chain@scl+3)& (0+255),w,b
 14022   00C77A  A4D8               	btfss	status,2,c
 14023   00C77C  EFC2  F063         	goto	u8651
 14024   00C780  EFC4  F063         	goto	u8650
 14025   00C784                     u8651:
 14026   00C784  EF6A  F064         	goto	l7354
 14027   00C788                     u8650:
 14028   00C788                     
 14029                           ; BSR set to: 0
 14030                           ;mcc_generated_files/fatfs/ff.c: 1555:    ncl = scl + 1;
 14031   00C788  0E01               	movlw	1
 14032   00C78A  25A7               	addwf	create_chain@scl& (0+255),w,b
 14033   00C78C  6FAB               	movwf	create_chain@ncl& (0+255),b
 14034   00C78E  0E00               	movlw	0
 14035   00C790  21A8               	addwfc	(create_chain@scl+1)& (0+255),w,b
 14036   00C792  6FAC               	movwf	(create_chain@ncl+1)& (0+255),b
 14037   00C794  0E00               	movlw	0
 14038   00C796  21A9               	addwfc	(create_chain@scl+2)& (0+255),w,b
 14039   00C798  6FAD               	movwf	(create_chain@ncl+2)& (0+255),b
 14040   00C79A  0E00               	movlw	0
 14041   00C79C  21AA               	addwfc	(create_chain@scl+3)& (0+255),w,b
 14042   00C79E  6FAE               	movwf	(create_chain@ncl+3)& (0+255),b
 14043   00C7A0                     
 14044                           ; BSR set to: 0
 14045                           ;mcc_generated_files/fatfs/ff.c: 1556:    if (ncl >= fs->n_fatent) ncl = 2;
 14046   00C7A0  EE20 F017          	lfsr	2,23
 14047   00C7A4  51AF               	movf	create_chain@fs& (0+255),w,b
 14048   00C7A6  26D9               	addwf	fsr2l,f,c
 14049   00C7A8  51B0               	movf	(create_chain@fs+1)& (0+255),w,b
 14050   00C7AA  22DA               	addwfc	fsr2h,f,c
 14051   00C7AC  50DE               	movf	postinc2,w,c
 14052   00C7AE  5DAB               	subwf	create_chain@ncl& (0+255),w,b
 14053   00C7B0  50DE               	movf	postinc2,w,c
 14054   00C7B2  59AC               	subwfb	(create_chain@ncl+1)& (0+255),w,b
 14055   00C7B4  50DE               	movf	postinc2,w,c
 14056   00C7B6  59AD               	subwfb	(create_chain@ncl+2)& (0+255),w,b
 14057   00C7B8  50DE               	movf	postinc2,w,c
 14058   00C7BA  59AE               	subwfb	(create_chain@ncl+3)& (0+255),w,b
 14059   00C7BC  A0D8               	btfss	status,0,c
 14060   00C7BE  EFE3  F063         	goto	u8661
 14061   00C7C2  EFE5  F063         	goto	u8660
 14062   00C7C6                     u8661:
 14063   00C7C6  EFED  F063         	goto	l7336
 14064   00C7CA                     u8660:
 14065   00C7CA                     
 14066                           ; BSR set to: 0
 14067   00C7CA  0E02               	movlw	2
 14068   00C7CC  6FAB               	movwf	create_chain@ncl& (0+255),b
 14069   00C7CE  0E00               	movlw	0
 14070   00C7D0  6FAC               	movwf	(create_chain@ncl+1)& (0+255),b
 14071   00C7D2  0E00               	movlw	0
 14072   00C7D4  6FAD               	movwf	(create_chain@ncl+2)& (0+255),b
 14073   00C7D6  0E00               	movlw	0
 14074   00C7D8  6FAE               	movwf	(create_chain@ncl+3)& (0+255),b
 14075   00C7DA                     l7336:
 14076                           
 14077                           ; BSR set to: 0
 14078                           ;mcc_generated_files/fatfs/ff.c: 1557:    cs = get_fat(obj, ncl);
 14079   00C7DA  C098  F077         	movff	create_chain@obj,get_fat@obj
 14080   00C7DE  C099  F078         	movff	create_chain@obj+1,get_fat@obj+1
 14081   00C7E2  C0AB  F079         	movff	create_chain@ncl,get_fat@clst
 14082   00C7E6  C0AC  F07A         	movff	create_chain@ncl+1,get_fat@clst+1
 14083   00C7EA  C0AD  F07B         	movff	create_chain@ncl+2,get_fat@clst+2
 14084   00C7EE  C0AE  F07C         	movff	create_chain@ncl+3,get_fat@clst+3
 14085   00C7F2  ECAF  F055         	call	_get_fat	;wreg free
 14086   00C7F6  C077  F0B1         	movff	?_get_fat,create_chain@cs
 14087   00C7FA  C078  F0B2         	movff	?_get_fat+1,create_chain@cs+1
 14088   00C7FE  C079  F0B3         	movff	?_get_fat+2,create_chain@cs+2
 14089   00C802  C07A  F0B4         	movff	?_get_fat+3,create_chain@cs+3
 14090   00C806                     
 14091                           ;mcc_generated_files/fatfs/ff.c: 1558:    if (cs == 1 || cs == 0xFFFFFFFF) return cs;
 14092   00C806  0100               	movlb	0	; () banked
 14093   00C808  05B1               	decf	create_chain@cs& (0+255),w,b
 14094   00C80A  11B2               	iorwf	(create_chain@cs+1)& (0+255),w,b
 14095   00C80C  11B3               	iorwf	(create_chain@cs+2)& (0+255),w,b
 14096   00C80E  11B4               	iorwf	(create_chain@cs+3)& (0+255),w,b
 14097   00C810  B4D8               	btfsc	status,2,c
 14098   00C812  EF0D  F064         	goto	u8671
 14099   00C816  EF0F  F064         	goto	u8670
 14100   00C81A                     u8671:
 14101   00C81A  EF66  F063         	goto	l7314
 14102   00C81E                     u8670:
 14103   00C81E                     
 14104                           ; BSR set to: 0
 14105   00C81E  29B1               	incf	create_chain@cs& (0+255),w,b
 14106   00C820  E10A               	bnz	u8681
 14107   00C822  29B2               	incf	(create_chain@cs+1)& (0+255),w,b
 14108   00C824  E108               	bnz	u8681
 14109   00C826  29B3               	incf	(create_chain@cs+2)& (0+255),w,b
 14110   00C828  E106               	bnz	u8681
 14111   00C82A  29B4               	incf	(create_chain@cs+3)& (0+255),w,b
 14112   00C82C  A4D8               	btfss	status,2,c
 14113   00C82E  EF1B  F064         	goto	u8681
 14114   00C832  EF1D  F064         	goto	u8680
 14115   00C836                     u8681:
 14116   00C836  EF1F  F064         	goto	l7342
 14117   00C83A                     u8680:
 14118   00C83A  EF66  F063         	goto	l7314
 14119   00C83E                     l7342:
 14120                           
 14121                           ; BSR set to: 0
 14122                           ;mcc_generated_files/fatfs/ff.c: 1559:    if (cs != 0) {
 14123   00C83E  51B1               	movf	create_chain@cs& (0+255),w,b
 14124   00C840  11B2               	iorwf	(create_chain@cs+1)& (0+255),w,b
 14125   00C842  11B3               	iorwf	(create_chain@cs+2)& (0+255),w,b
 14126   00C844  11B4               	iorwf	(create_chain@cs+3)& (0+255),w,b
 14127   00C846  B4D8               	btfsc	status,2,c
 14128   00C848  EF28  F064         	goto	u8691
 14129   00C84C  EF2A  F064         	goto	u8690
 14130   00C850                     u8691:
 14131   00C850  EF6A  F064         	goto	l7354
 14132   00C854                     u8690:
 14133   00C854                     
 14134                           ; BSR set to: 0
 14135                           ;mcc_generated_files/fatfs/ff.c: 1560:     cs = fs->last_clst;
 14136   00C854  EE20 F00B          	lfsr	2,11
 14137   00C858  51AF               	movf	create_chain@fs& (0+255),w,b
 14138   00C85A  26D9               	addwf	fsr2l,f,c
 14139   00C85C  51B0               	movf	(create_chain@fs+1)& (0+255),w,b
 14140   00C85E  22DA               	addwfc	fsr2h,f,c
 14141   00C860  CFDE F0B1          	movff	postinc2,create_chain@cs
 14142   00C864  CFDE F0B2          	movff	postinc2,create_chain@cs+1
 14143   00C868  CFDE F0B3          	movff	postinc2,create_chain@cs+2
 14144   00C86C  CFDE F0B4          	movff	postinc2,create_chain@cs+3
 14145   00C870                     
 14146                           ; BSR set to: 0
 14147                           ;mcc_generated_files/fatfs/ff.c: 1561:     if (cs >= 2 && cs < fs->n_fatent) scl = cs;
 14148   00C870  51B4               	movf	(create_chain@cs+3)& (0+255),w,b
 14149   00C872  11B3               	iorwf	(create_chain@cs+2)& (0+255),w,b
 14150   00C874  11B2               	iorwf	(create_chain@cs+1)& (0+255),w,b
 14151   00C876  E109               	bnz	u8700
 14152   00C878  0E02               	movlw	2
 14153   00C87A  5DB1               	subwf	create_chain@cs& (0+255),w,b
 14154   00C87C  A0D8               	btfss	status,0,c
 14155   00C87E  EF43  F064         	goto	u8701
 14156   00C882  EF45  F064         	goto	u8700
 14157   00C886                     u8701:
 14158   00C886  EF62  F064         	goto	l7352
 14159   00C88A                     u8700:
 14160   00C88A                     
 14161                           ; BSR set to: 0
 14162   00C88A  EE20 F017          	lfsr	2,23
 14163   00C88E  51AF               	movf	create_chain@fs& (0+255),w,b
 14164   00C890  26D9               	addwf	fsr2l,f,c
 14165   00C892  51B0               	movf	(create_chain@fs+1)& (0+255),w,b
 14166   00C894  22DA               	addwfc	fsr2h,f,c
 14167   00C896  50DE               	movf	postinc2,w,c
 14168   00C898  5DB1               	subwf	create_chain@cs& (0+255),w,b
 14169   00C89A  50DE               	movf	postinc2,w,c
 14170   00C89C  59B2               	subwfb	(create_chain@cs+1)& (0+255),w,b
 14171   00C89E  50DE               	movf	postinc2,w,c
 14172   00C8A0  59B3               	subwfb	(create_chain@cs+2)& (0+255),w,b
 14173   00C8A2  50DE               	movf	postinc2,w,c
 14174   00C8A4  59B4               	subwfb	(create_chain@cs+3)& (0+255),w,b
 14175   00C8A6  B0D8               	btfsc	status,0,c
 14176   00C8A8  EF58  F064         	goto	u8711
 14177   00C8AC  EF5A  F064         	goto	u8710
 14178   00C8B0                     u8711:
 14179   00C8B0  EF62  F064         	goto	l7352
 14180   00C8B4                     u8710:
 14181   00C8B4                     
 14182                           ; BSR set to: 0
 14183   00C8B4  C0B1  F0A7         	movff	create_chain@cs,create_chain@scl
 14184   00C8B8  C0B2  F0A8         	movff	create_chain@cs+1,create_chain@scl+1
 14185   00C8BC  C0B3  F0A9         	movff	create_chain@cs+2,create_chain@scl+2
 14186   00C8C0  C0B4  F0AA         	movff	create_chain@cs+3,create_chain@scl+3
 14187   00C8C4                     l7352:
 14188                           
 14189                           ; BSR set to: 0
 14190                           ;mcc_generated_files/fatfs/ff.c: 1562:     ncl = 0;
 14191   00C8C4  0E00               	movlw	0
 14192   00C8C6  6FAB               	movwf	create_chain@ncl& (0+255),b
 14193   00C8C8  0E00               	movlw	0
 14194   00C8CA  6FAC               	movwf	(create_chain@ncl+1)& (0+255),b
 14195   00C8CC  0E00               	movlw	0
 14196   00C8CE  6FAD               	movwf	(create_chain@ncl+2)& (0+255),b
 14197   00C8D0  0E00               	movlw	0
 14198   00C8D2  6FAE               	movwf	(create_chain@ncl+3)& (0+255),b
 14199   00C8D4                     l7354:
 14200                           
 14201                           ; BSR set to: 0
 14202                           ;mcc_generated_files/fatfs/ff.c: 1565:   if (ncl == 0) {
 14203   00C8D4  51AB               	movf	create_chain@ncl& (0+255),w,b
 14204   00C8D6  11AC               	iorwf	(create_chain@ncl+1)& (0+255),w,b
 14205   00C8D8  11AD               	iorwf	(create_chain@ncl+2)& (0+255),w,b
 14206   00C8DA  11AE               	iorwf	(create_chain@ncl+3)& (0+255),w,b
 14207   00C8DC  A4D8               	btfss	status,2,c
 14208   00C8DE  EF73  F064         	goto	u8721
 14209   00C8E2  EF75  F064         	goto	u8720
 14210   00C8E6                     u8721:
 14211   00C8E6  EF02  F065         	goto	l7386
 14212   00C8EA                     u8720:
 14213   00C8EA                     
 14214                           ; BSR set to: 0
 14215                           ;mcc_generated_files/fatfs/ff.c: 1566:    ncl = scl;
 14216   00C8EA  C0A7  F0AB         	movff	create_chain@scl,create_chain@ncl
 14217   00C8EE  C0A8  F0AC         	movff	create_chain@scl+1,create_chain@ncl+1
 14218   00C8F2  C0A9  F0AD         	movff	create_chain@scl+2,create_chain@ncl+2
 14219   00C8F6  C0AA  F0AE         	movff	create_chain@scl+3,create_chain@ncl+3
 14220   00C8FA                     l7358:
 14221                           
 14222                           ; BSR set to: 0
 14223                           ;mcc_generated_files/fatfs/ff.c: 1568:     ncl++;
 14224   00C8FA  0E01               	movlw	1
 14225   00C8FC  27AB               	addwf	create_chain@ncl& (0+255),f,b
 14226   00C8FE  0E00               	movlw	0
 14227   00C900  23AC               	addwfc	(create_chain@ncl+1)& (0+255),f,b
 14228   00C902  23AD               	addwfc	(create_chain@ncl+2)& (0+255),f,b
 14229   00C904  23AE               	addwfc	(create_chain@ncl+3)& (0+255),f,b
 14230   00C906                     
 14231                           ; BSR set to: 0
 14232                           ;mcc_generated_files/fatfs/ff.c: 1569:     if (ncl >= fs->n_fatent) {
 14233   00C906  EE20 F017          	lfsr	2,23
 14234   00C90A  51AF               	movf	create_chain@fs& (0+255),w,b
 14235   00C90C  26D9               	addwf	fsr2l,f,c
 14236   00C90E  51B0               	movf	(create_chain@fs+1)& (0+255),w,b
 14237   00C910  22DA               	addwfc	fsr2h,f,c
 14238   00C912  50DE               	movf	postinc2,w,c
 14239   00C914  5DAB               	subwf	create_chain@ncl& (0+255),w,b
 14240   00C916  50DE               	movf	postinc2,w,c
 14241   00C918  59AC               	subwfb	(create_chain@ncl+1)& (0+255),w,b
 14242   00C91A  50DE               	movf	postinc2,w,c
 14243   00C91C  59AD               	subwfb	(create_chain@ncl+2)& (0+255),w,b
 14244   00C91E  50DE               	movf	postinc2,w,c
 14245   00C920  59AE               	subwfb	(create_chain@ncl+3)& (0+255),w,b
 14246   00C922  A0D8               	btfss	status,0,c
 14247   00C924  EF96  F064         	goto	u8731
 14248   00C928  EF98  F064         	goto	u8730
 14249   00C92C                     u8731:
 14250   00C92C  EFAF  F064         	goto	l7370
 14251   00C930                     u8730:
 14252   00C930                     
 14253                           ; BSR set to: 0
 14254                           ;mcc_generated_files/fatfs/ff.c: 1570:      ncl = 2;
 14255   00C930  0E02               	movlw	2
 14256   00C932  6FAB               	movwf	create_chain@ncl& (0+255),b
 14257   00C934  0E00               	movlw	0
 14258   00C936  6FAC               	movwf	(create_chain@ncl+1)& (0+255),b
 14259   00C938  0E00               	movlw	0
 14260   00C93A  6FAD               	movwf	(create_chain@ncl+2)& (0+255),b
 14261   00C93C  0E00               	movlw	0
 14262   00C93E  6FAE               	movwf	(create_chain@ncl+3)& (0+255),b
 14263   00C940                     
 14264                           ; BSR set to: 0
 14265                           ;mcc_generated_files/fatfs/ff.c: 1571:      if (ncl > scl) return 0;
 14266   00C940  51AA               	movf	(create_chain@scl+3)& (0+255),w,b
 14267   00C942  11A9               	iorwf	(create_chain@scl+2)& (0+255),w,b
 14268   00C944  11A8               	iorwf	(create_chain@scl+1)& (0+255),w,b
 14269   00C946  E107               	bnz	u8741
 14270   00C948  0E02               	movlw	2
 14271   00C94A  5DA7               	subwf	create_chain@scl& (0+255),w,b
 14272   00C94C  B0D8               	btfsc	status,0,c
 14273   00C94E  EFAB  F064         	goto	u8741
 14274   00C952  EFAD  F064         	goto	u8740
 14275   00C956                     u8741:
 14276   00C956  EFAF  F064         	goto	l7370
 14277   00C95A                     u8740:
 14278   00C95A  EFA0  F063         	goto	l7322
 14279   00C95E                     l7370:
 14280                           
 14281                           ; BSR set to: 0
 14282                           ;mcc_generated_files/fatfs/ff.c: 1573:     cs = get_fat(obj, ncl);
 14283   00C95E  C098  F077         	movff	create_chain@obj,get_fat@obj
 14284   00C962  C099  F078         	movff	create_chain@obj+1,get_fat@obj+1
 14285   00C966  C0AB  F079         	movff	create_chain@ncl,get_fat@clst
 14286   00C96A  C0AC  F07A         	movff	create_chain@ncl+1,get_fat@clst+1
 14287   00C96E  C0AD  F07B         	movff	create_chain@ncl+2,get_fat@clst+2
 14288   00C972  C0AE  F07C         	movff	create_chain@ncl+3,get_fat@clst+3
 14289   00C976  ECAF  F055         	call	_get_fat	;wreg free
 14290   00C97A  C077  F0B1         	movff	?_get_fat,create_chain@cs
 14291   00C97E  C078  F0B2         	movff	?_get_fat+1,create_chain@cs+1
 14292   00C982  C079  F0B3         	movff	?_get_fat+2,create_chain@cs+2
 14293   00C986  C07A  F0B4         	movff	?_get_fat+3,create_chain@cs+3
 14294   00C98A                     
 14295                           ;mcc_generated_files/fatfs/ff.c: 1574:     if (cs == 0) break;
 14296   00C98A  0100               	movlb	0	; () banked
 14297   00C98C  51B1               	movf	create_chain@cs& (0+255),w,b
 14298   00C98E  11B2               	iorwf	(create_chain@cs+1)& (0+255),w,b
 14299   00C990  11B3               	iorwf	(create_chain@cs+2)& (0+255),w,b
 14300   00C992  11B4               	iorwf	(create_chain@cs+3)& (0+255),w,b
 14301   00C994  A4D8               	btfss	status,2,c
 14302   00C996  EFCF  F064         	goto	u8751
 14303   00C99A  EFD1  F064         	goto	u8750
 14304   00C99E                     u8751:
 14305   00C99E  EFD3  F064         	goto	l7376
 14306   00C9A2                     u8750:
 14307   00C9A2  EF02  F065         	goto	l7386
 14308   00C9A6                     l7376:
 14309                           
 14310                           ; BSR set to: 0
 14311                           ;mcc_generated_files/fatfs/ff.c: 1575:     if (cs == 1 || cs == 0xFFFFFFFF) return cs;
 14312   00C9A6  05B1               	decf	create_chain@cs& (0+255),w,b
 14313   00C9A8  11B2               	iorwf	(create_chain@cs+1)& (0+255),w,b
 14314   00C9AA  11B3               	iorwf	(create_chain@cs+2)& (0+255),w,b
 14315   00C9AC  11B4               	iorwf	(create_chain@cs+3)& (0+255),w,b
 14316   00C9AE  B4D8               	btfsc	status,2,c
 14317   00C9B0  EFDC  F064         	goto	u8761
 14318   00C9B4  EFDE  F064         	goto	u8760
 14319   00C9B8                     u8761:
 14320   00C9B8  EF66  F063         	goto	l7314
 14321   00C9BC                     u8760:
 14322   00C9BC                     
 14323                           ; BSR set to: 0
 14324   00C9BC  29B1               	incf	create_chain@cs& (0+255),w,b
 14325   00C9BE  E10A               	bnz	u8771
 14326   00C9C0  29B2               	incf	(create_chain@cs+1)& (0+255),w,b
 14327   00C9C2  E108               	bnz	u8771
 14328   00C9C4  29B3               	incf	(create_chain@cs+2)& (0+255),w,b
 14329   00C9C6  E106               	bnz	u8771
 14330   00C9C8  29B4               	incf	(create_chain@cs+3)& (0+255),w,b
 14331   00C9CA  A4D8               	btfss	status,2,c
 14332   00C9CC  EFEA  F064         	goto	u8771
 14333   00C9D0  EFEC  F064         	goto	u8770
 14334   00C9D4                     u8771:
 14335   00C9D4  EFEE  F064         	goto	l7380
 14336   00C9D8                     u8770:
 14337   00C9D8  EF66  F063         	goto	l7314
 14338   00C9DC                     l7380:
 14339                           
 14340                           ; BSR set to: 0
 14341                           ;mcc_generated_files/fatfs/ff.c: 1576:     if (ncl == scl) return 0;
 14342   00C9DC  51A7               	movf	create_chain@scl& (0+255),w,b
 14343   00C9DE  19AB               	xorwf	create_chain@ncl& (0+255),w,b
 14344   00C9E0  E10D               	bnz	u8781
 14345   00C9E2  51A8               	movf	(create_chain@scl+1)& (0+255),w,b
 14346   00C9E4  19AC               	xorwf	(create_chain@ncl+1)& (0+255),w,b
 14347   00C9E6  E10A               	bnz	u8781
 14348   00C9E8  51A9               	movf	(create_chain@scl+2)& (0+255),w,b
 14349   00C9EA  19AD               	xorwf	(create_chain@ncl+2)& (0+255),w,b
 14350   00C9EC  E107               	bnz	u8781
 14351   00C9EE  51AA               	movf	(create_chain@scl+3)& (0+255),w,b
 14352   00C9F0  19AE               	xorwf	(create_chain@ncl+3)& (0+255),w,b
 14353   00C9F2  A4D8               	btfss	status,2,c
 14354   00C9F4  EFFE  F064         	goto	u8781
 14355   00C9F8  EF00  F065         	goto	u8780
 14356   00C9FC                     u8781:
 14357   00C9FC  EF7D  F064         	goto	l7358
 14358   00CA00                     u8780:
 14359   00CA00  EFA0  F063         	goto	l7322
 14360   00CA04                     l7386:
 14361                           
 14362                           ; BSR set to: 0
 14363                           ;mcc_generated_files/fatfs/ff.c: 1579:   res = put_fat(fs, ncl, 0xFFFFFFFF);
 14364   00CA04  C0AF  F077         	movff	create_chain@fs,put_fat@fs
 14365   00CA08  C0B0  F078         	movff	create_chain@fs+1,put_fat@fs+1
 14366   00CA0C  C0AB  F079         	movff	create_chain@ncl,put_fat@clst
 14367   00CA10  C0AC  F07A         	movff	create_chain@ncl+1,put_fat@clst+1
 14368   00CA14  C0AD  F07B         	movff	create_chain@ncl+2,put_fat@clst+2
 14369   00CA18  C0AE  F07C         	movff	create_chain@ncl+3,put_fat@clst+3
 14370   00CA1C  0EFF               	movlw	255
 14371   00CA1E  6F7D               	movwf	put_fat@val& (0+255),b
 14372   00CA20  0EFF               	movlw	255
 14373   00CA22  6F7E               	movwf	(put_fat@val+1)& (0+255),b
 14374   00CA24  0EFF               	movlw	255
 14375   00CA26  6F7F               	movwf	(put_fat@val+2)& (0+255),b
 14376   00CA28  0EFF               	movlw	255
 14377   00CA2A  6F80               	movwf	(put_fat@val+3)& (0+255),b
 14378   00CA2C  EC5E  F060         	call	_put_fat	;wreg free
 14379   00CA30  0100               	movlb	0	; () banked
 14380   00CA32  6FA6               	movwf	create_chain@res& (0+255),b
 14381   00CA34                     
 14382                           ; BSR set to: 0
 14383                           ;mcc_generated_files/fatfs/ff.c: 1580:   if (res == FR_OK && clst != 0) {
 14384   00CA34  51A6               	movf	create_chain@res& (0+255),w,b
 14385   00CA36  A4D8               	btfss	status,2,c
 14386   00CA38  EF20  F065         	goto	u8791
 14387   00CA3C  EF22  F065         	goto	u8790
 14388   00CA40                     u8791:
 14389   00CA40  EF45  F065         	goto	l7394
 14390   00CA44                     u8790:
 14391   00CA44                     
 14392                           ; BSR set to: 0
 14393   00CA44  519A               	movf	create_chain@clst& (0+255),w,b
 14394   00CA46  119B               	iorwf	(create_chain@clst+1)& (0+255),w,b
 14395   00CA48  119C               	iorwf	(create_chain@clst+2)& (0+255),w,b
 14396   00CA4A  119D               	iorwf	(create_chain@clst+3)& (0+255),w,b
 14397   00CA4C  B4D8               	btfsc	status,2,c
 14398   00CA4E  EF2B  F065         	goto	u8801
 14399   00CA52  EF2D  F065         	goto	u8800
 14400   00CA56                     u8801:
 14401   00CA56  EF45  F065         	goto	l7394
 14402   00CA5A                     u8800:
 14403   00CA5A                     
 14404                           ; BSR set to: 0
 14405                           ;mcc_generated_files/fatfs/ff.c: 1581:    res = put_fat(fs, clst, ncl);
 14406   00CA5A  C0AF  F077         	movff	create_chain@fs,put_fat@fs
 14407   00CA5E  C0B0  F078         	movff	create_chain@fs+1,put_fat@fs+1
 14408   00CA62  C09A  F079         	movff	create_chain@clst,put_fat@clst
 14409   00CA66  C09B  F07A         	movff	create_chain@clst+1,put_fat@clst+1
 14410   00CA6A  C09C  F07B         	movff	create_chain@clst+2,put_fat@clst+2
 14411   00CA6E  C09D  F07C         	movff	create_chain@clst+3,put_fat@clst+3
 14412   00CA72  C0AB  F07D         	movff	create_chain@ncl,put_fat@val
 14413   00CA76  C0AC  F07E         	movff	create_chain@ncl+1,put_fat@val+1
 14414   00CA7A  C0AD  F07F         	movff	create_chain@ncl+2,put_fat@val+2
 14415   00CA7E  C0AE  F080         	movff	create_chain@ncl+3,put_fat@val+3
 14416   00CA82  EC5E  F060         	call	_put_fat	;wreg free
 14417   00CA86  0100               	movlb	0	; () banked
 14418   00CA88  6FA6               	movwf	create_chain@res& (0+255),b
 14419   00CA8A                     l7394:
 14420                           
 14421                           ; BSR set to: 0
 14422                           ;mcc_generated_files/fatfs/ff.c: 1583:  };mcc_generated_files/fatfs/ff.c: 1585:  if (res
      +                           == FR_OK) {
 14423   00CA8A  51A6               	movf	create_chain@res& (0+255),w,b
 14424   00CA8C  A4D8               	btfss	status,2,c
 14425   00CA8E  EF4B  F065         	goto	u8811
 14426   00CA92  EF4D  F065         	goto	u8810
 14427   00CA96                     u8811:
 14428   00CA96  EF97  F065         	goto	l7402
 14429   00CA9A                     u8810:
 14430   00CA9A                     
 14431                           ; BSR set to: 0
 14432                           ;mcc_generated_files/fatfs/ff.c: 1586:   fs->last_clst = ncl;
 14433   00CA9A  EE20 F00B          	lfsr	2,11
 14434   00CA9E  51AF               	movf	create_chain@fs& (0+255),w,b
 14435   00CAA0  26D9               	addwf	fsr2l,f,c
 14436   00CAA2  51B0               	movf	(create_chain@fs+1)& (0+255),w,b
 14437   00CAA4  22DA               	addwfc	fsr2h,f,c
 14438   00CAA6  C0AB  FFDE         	movff	create_chain@ncl,postinc2
 14439   00CAAA  C0AC  FFDE         	movff	create_chain@ncl+1,postinc2
 14440   00CAAE  C0AD  FFDE         	movff	create_chain@ncl+2,postinc2
 14441   00CAB2  C0AE  FFDE         	movff	create_chain@ncl+3,postinc2
 14442   00CAB6                     
 14443                           ; BSR set to: 0
 14444                           ;mcc_generated_files/fatfs/ff.c: 1587:   if (fs->free_clst <= fs->n_fatent - 2) fs->free
      +                          _clst--;
 14445   00CAB6  EE20 F00F          	lfsr	2,15
 14446   00CABA  51AF               	movf	create_chain@fs& (0+255),w,b
 14447   00CABC  26D9               	addwf	fsr2l,f,c
 14448   00CABE  51B0               	movf	(create_chain@fs+1)& (0+255),w,b
 14449   00CAC0  22DA               	addwfc	fsr2h,f,c
 14450   00CAC2  EE10 F017          	lfsr	1,23
 14451   00CAC6  51AF               	movf	create_chain@fs& (0+255),w,b
 14452   00CAC8  26E1               	addwf	fsr1l,f,c
 14453   00CACA  51B0               	movf	(create_chain@fs+1)& (0+255),w,b
 14454   00CACC  22E2               	addwfc	fsr1h,f,c
 14455   00CACE  0EFE               	movlw	254
 14456   00CAD0  24E6               	addwf	postinc1,w,c
 14457   00CAD2  6FA2               	movwf	(??_create_chain+4)& (0+255),b
 14458   00CAD4  0EFF               	movlw	255
 14459   00CAD6  20E6               	addwfc	postinc1,w,c
 14460   00CAD8  6FA3               	movwf	(??_create_chain+5)& (0+255),b
 14461   00CADA  0EFF               	movlw	255
 14462   00CADC  20E6               	addwfc	postinc1,w,c
 14463   00CADE  6FA4               	movwf	(??_create_chain+6)& (0+255),b
 14464   00CAE0  0EFF               	movlw	255
 14465   00CAE2  20E6               	addwfc	postinc1,w,c
 14466   00CAE4  6FA5               	movwf	(??_create_chain+7)& (0+255),b
 14467   00CAE6  50DE               	movf	postinc2,w,c
 14468   00CAE8  5DA2               	subwf	(??_create_chain+4)& (0+255),w,b
 14469   00CAEA  50DE               	movf	postinc2,w,c
 14470   00CAEC  59A3               	subwfb	(??_create_chain+5)& (0+255),w,b
 14471   00CAEE  50DE               	movf	postinc2,w,c
 14472   00CAF0  59A4               	subwfb	(??_create_chain+6)& (0+255),w,b
 14473   00CAF2  50DE               	movf	postinc2,w,c
 14474   00CAF4  59A5               	subwfb	(??_create_chain+7)& (0+255),w,b
 14475   00CAF6  A0D8               	btfss	status,0,c
 14476   00CAF8  EF80  F065         	goto	u8821
 14477   00CAFC  EF82  F065         	goto	u8820
 14478   00CB00                     u8821:
 14479   00CB00  EF8D  F065         	goto	l304
 14480   00CB04                     u8820:
 14481   00CB04                     
 14482                           ; BSR set to: 0
 14483   00CB04  EE20 F00F          	lfsr	2,15
 14484   00CB08  51AF               	movf	create_chain@fs& (0+255),w,b
 14485   00CB0A  26D9               	addwf	fsr2l,f,c
 14486   00CB0C  51B0               	movf	(create_chain@fs+1)& (0+255),w,b
 14487   00CB0E  22DA               	addwfc	fsr2h,f,c
 14488   00CB10  06DE               	decf	postinc2,f,c
 14489   00CB12  0E00               	movlw	0
 14490   00CB14  5ADE               	subwfb	postinc2,f,c
 14491   00CB16  5ADE               	subwfb	postinc2,f,c
 14492   00CB18  5ADE               	subwfb	postinc2,f,c
 14493   00CB1A                     l304:
 14494                           
 14495                           ; BSR set to: 0
 14496                           ;mcc_generated_files/fatfs/ff.c: 1588:   fs->fsi_flag |= 1;
 14497   00CB1A  EE20 F004          	lfsr	2,4
 14498   00CB1E  51AF               	movf	create_chain@fs& (0+255),w,b
 14499   00CB20  26D9               	addwf	fsr2l,f,c
 14500   00CB22  51B0               	movf	(create_chain@fs+1)& (0+255),w,b
 14501   00CB24  22DA               	addwfc	fsr2h,f,c
 14502   00CB26  0E00               	movlw	0
 14503   00CB28  80DB               	bsf	plusw2,0,c
 14504                           
 14505                           ;mcc_generated_files/fatfs/ff.c: 1589:  } else {
 14506   00CB2A  EFAD  F065         	goto	l305
 14507   00CB2E                     l7402:
 14508                           
 14509                           ; BSR set to: 0
 14510                           ;mcc_generated_files/fatfs/ff.c: 1590:   ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;
 14511   00CB2E  05A6               	decf	create_chain@res& (0+255),w,b
 14512   00CB30  B4D8               	btfsc	status,2,c
 14513   00CB32  EF9D  F065         	goto	u8831
 14514   00CB36  EF9F  F065         	goto	u8830
 14515   00CB3A                     u8831:
 14516   00CB3A  EFA9  F065         	goto	l307
 14517   00CB3E                     u8830:
 14518   00CB3E                     
 14519                           ; BSR set to: 0
 14520   00CB3E  0E01               	movlw	1
 14521   00CB40  6FAB               	movwf	create_chain@ncl& (0+255),b
 14522   00CB42  0E00               	movlw	0
 14523   00CB44  6FAC               	movwf	(create_chain@ncl+1)& (0+255),b
 14524   00CB46  0E00               	movlw	0
 14525   00CB48  6FAD               	movwf	(create_chain@ncl+2)& (0+255),b
 14526   00CB4A  0E00               	movlw	0
 14527   00CB4C  6FAE               	movwf	(create_chain@ncl+3)& (0+255),b
 14528   00CB4E  EFAD  F065         	goto	l305
 14529   00CB52                     l307:
 14530                           
 14531                           ; BSR set to: 0
 14532   00CB52  69AB               	setf	create_chain@ncl& (0+255),b
 14533   00CB54  69AC               	setf	(create_chain@ncl+1)& (0+255),b
 14534   00CB56  69AD               	setf	(create_chain@ncl+2)& (0+255),b
 14535   00CB58  69AE               	setf	(create_chain@ncl+3)& (0+255),b
 14536   00CB5A                     l305:
 14537                           
 14538                           ; BSR set to: 0
 14539                           ;mcc_generated_files/fatfs/ff.c: 1593:  return ncl;
 14540   00CB5A  C0AB  F098         	movff	create_chain@ncl,?_create_chain
 14541   00CB5E  C0AC  F099         	movff	create_chain@ncl+1,?_create_chain+1
 14542   00CB62  C0AD  F09A         	movff	create_chain@ncl+2,?_create_chain+2
 14543   00CB66  C0AE  F09B         	movff	create_chain@ncl+3,?_create_chain+3
 14544   00CB6A                     l281:
 14545                           
 14546                           ; BSR set to: 0
 14547   00CB6A  0012               	return		;funcret
 14548   00CB6C                     __end_of_create_chain:
 14549                           	callstack 0
 14550                           
 14551 ;; *************** function _put_fat *****************
 14552 ;; Defined at:
 14553 ;;		line 1218 in file "mcc_generated_files/fatfs/ff.c"
 14554 ;; Parameters:    Size  Location     Type
 14555 ;;  fs              2   23[BANK0 ] PTR struct .
 14556 ;;		 -> FatFs(563), drive(563), NULL(0), 
 14557 ;;  clst            4   25[BANK0 ] unsigned long 
 14558 ;;  val             4   29[BANK0 ] unsigned long 
 14559 ;; Auto vars:     Size  Location     Type
 14560 ;;  bc              2   53[BANK0 ] unsigned int 
 14561 ;;  p               2   51[BANK0 ] PTR unsigned char 
 14562 ;;		 -> drive.win(512), FatFs.win(512), FatFs(563), drive(563), 
 14563 ;;		 -> NULL(0), 
 14564 ;;  res             1   55[BANK0 ] enum E68
 14565 ;; Return value:  Size  Location     Type
 14566 ;;                  1    wreg      enum E68
 14567 ;; Registers used:
 14568 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 14569 ;; Tracked objects:
 14570 ;;		On entry : 0/0
 14571 ;;		On exit  : 0/0
 14572 ;;		Unchanged: 0/0
 14573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14574 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14575 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14576 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14577 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14578 ;;Total ram usage:       33 bytes
 14579 ;; Hardware stack levels used: 1
 14580 ;; Hardware stack levels required when called: 7
 14581 ;; This function calls:
 14582 ;;		_ld_dword
 14583 ;;		_move_window
 14584 ;;		_st_dword
 14585 ;;		_st_word
 14586 ;; This function is called by:
 14587 ;;		_remove_chain
 14588 ;;		_create_chain
 14589 ;; This function uses a non-reentrant model
 14590 ;;
 14591                           
 14592                           	psect	text31
 14593   00C0BC                     __ptext31:
 14594                           	callstack 0
 14595   00C0BC                     _put_fat:
 14596                           	callstack 20
 14597   00C0BC                     
 14598                           ;mcc_generated_files/fatfs/ff.c: 1219:  FATFS* fs,;mcc_generated_files/fatfs/ff.c: 1220:
      +                            DWORD clst,;mcc_generated_files/fatfs/ff.c: 1221:  DWORD val;mcc_generated_files/fatfs
      +                          /ff.c: 1223: {;mcc_generated_files/fatfs/ff.c: 1224:  UINT bc;;mcc_generated_files/fatfs
      +                          /ff.c: 1225:  BYTE *p;;mcc_generated_files/fatfs/ff.c: 1226:  FRESULT res = FR_INT_ERR;
 14599   00C0BC  0E02               	movlw	2
 14600   00C0BE  0100               	movlb	0	; () banked
 14601   00C0C0  6F97               	movwf	put_fat@res& (0+255),b
 14602   00C0C2                     
 14603                           ; BSR set to: 0
 14604                           ;mcc_generated_files/fatfs/ff.c: 1229:  if (clst >= 2 && clst < fs->n_fatent) {
 14605   00C0C2  517C               	movf	(put_fat@clst+3)& (0+255),w,b
 14606   00C0C4  117B               	iorwf	(put_fat@clst+2)& (0+255),w,b
 14607   00C0C6  117A               	iorwf	(put_fat@clst+1)& (0+255),w,b
 14608   00C0C8  E109               	bnz	u8440
 14609   00C0CA  0E02               	movlw	2
 14610   00C0CC  5D79               	subwf	put_fat@clst& (0+255),w,b
 14611   00C0CE  A0D8               	btfss	status,0,c
 14612   00C0D0  EF6C  F060         	goto	u8441
 14613   00C0D4  EF6E  F060         	goto	u8440
 14614   00C0D8                     u8441:
 14615   00C0D8  EFDC  F062         	goto	l7270
 14616   00C0DC                     u8440:
 14617   00C0DC                     
 14618                           ; BSR set to: 0
 14619   00C0DC  EE20 F017          	lfsr	2,23
 14620   00C0E0  5177               	movf	put_fat@fs& (0+255),w,b
 14621   00C0E2  26D9               	addwf	fsr2l,f,c
 14622   00C0E4  5178               	movf	(put_fat@fs+1)& (0+255),w,b
 14623   00C0E6  22DA               	addwfc	fsr2h,f,c
 14624   00C0E8  50DE               	movf	postinc2,w,c
 14625   00C0EA  5D79               	subwf	put_fat@clst& (0+255),w,b
 14626   00C0EC  50DE               	movf	postinc2,w,c
 14627   00C0EE  597A               	subwfb	(put_fat@clst+1)& (0+255),w,b
 14628   00C0F0  50DE               	movf	postinc2,w,c
 14629   00C0F2  597B               	subwfb	(put_fat@clst+2)& (0+255),w,b
 14630   00C0F4  50DE               	movf	postinc2,w,c
 14631   00C0F6  597C               	subwfb	(put_fat@clst+3)& (0+255),w,b
 14632   00C0F8  B0D8               	btfsc	status,0,c
 14633   00C0FA  EF81  F060         	goto	u8451
 14634   00C0FE  EF83  F060         	goto	u8450
 14635   00C102                     u8451:
 14636   00C102  EFDC  F062         	goto	l7270
 14637   00C106                     u8450:
 14638   00C106  EFBF  F062         	goto	l7268
 14639   00C10A                     l233:
 14640                           
 14641                           ; BSR set to: 0
 14642                           ;mcc_generated_files/fatfs/ff.c: 1232:    bc = (UINT)clst; bc += bc / 2;
 14643   00C10A  C079  F095         	movff	put_fat@clst,put_fat@bc
 14644   00C10E  C07A  F096         	movff	put_fat@clst+1,put_fat@bc+1
 14645   00C112                     
 14646                           ; BSR set to: 0
 14647   00C112  90D8               	bcf	status,0,c
 14648   00C114  3196               	rrcf	(put_fat@bc+1)& (0+255),w,b
 14649   00C116  6F82               	movwf	(??_put_fat+1)& (0+255),b
 14650   00C118  3195               	rrcf	put_fat@bc& (0+255),w,b
 14651   00C11A  6F81               	movwf	??_put_fat& (0+255),b
 14652   00C11C  5181               	movf	??_put_fat& (0+255),w,b
 14653   00C11E  2795               	addwf	put_fat@bc& (0+255),f,b
 14654   00C120  5182               	movf	(??_put_fat+1)& (0+255),w,b
 14655   00C122  2396               	addwfc	(put_fat@bc+1)& (0+255),f,b
 14656   00C124                     
 14657                           ; BSR set to: 0
 14658                           ;mcc_generated_files/fatfs/ff.c: 1233:    res = move_window(fs, fs->fatbase + (bc / ((UI
      +                          NT)512)));
 14659   00C124  C077  F070         	movff	put_fat@fs,move_window@fs
 14660   00C128  C078  F071         	movff	put_fat@fs+1,move_window@fs+1
 14661   00C12C  EE20 F023          	lfsr	2,35
 14662   00C130  5177               	movf	put_fat@fs& (0+255),w,b
 14663   00C132  26D9               	addwf	fsr2l,f,c
 14664   00C134  5178               	movf	(put_fat@fs+1)& (0+255),w,b
 14665   00C136  22DA               	addwfc	fsr2h,f,c
 14666   00C138  CFDE F081          	movff	postinc2,??_put_fat
 14667   00C13C  CFDE F082          	movff	postinc2,??_put_fat+1
 14668   00C140  CFDE F083          	movff	postinc2,??_put_fat+2
 14669   00C144  CFDE F084          	movff	postinc2,??_put_fat+3
 14670   00C148  C095  F085         	movff	put_fat@bc,??_put_fat+4
 14671   00C14C  C096  F086         	movff	put_fat@bc+1,??_put_fat+5
 14672   00C150  0E09               	movlw	9
 14673   00C152  6F87               	movwf	(??_put_fat+6)& (0+255),b
 14674   00C154                     u8465:
 14675   00C154  90D8               	bcf	status,0,c
 14676   00C156  3386               	rrcf	(??_put_fat+5)& (0+255),f,b
 14677   00C158  3385               	rrcf	(??_put_fat+4)& (0+255),f,b
 14678   00C15A  2F87               	decfsz	(??_put_fat+6)& (0+255),f,b
 14679   00C15C  EFAA  F060         	goto	u8465
 14680   00C160  5185               	movf	(??_put_fat+4)& (0+255),w,b
 14681   00C162  2581               	addwf	??_put_fat& (0+255),w,b
 14682   00C164  6F72               	movwf	move_window@sector& (0+255),b
 14683   00C166  5186               	movf	(??_put_fat+5)& (0+255),w,b
 14684   00C168  2182               	addwfc	(??_put_fat+1)& (0+255),w,b
 14685   00C16A  6F73               	movwf	(move_window@sector+1)& (0+255),b
 14686   00C16C  0E00               	movlw	0
 14687   00C16E  2183               	addwfc	(??_put_fat+2)& (0+255),w,b
 14688   00C170  6F74               	movwf	(move_window@sector+2)& (0+255),b
 14689   00C172  0E00               	movlw	0
 14690   00C174  2184               	addwfc	(??_put_fat+3)& (0+255),w,b
 14691   00C176  6F75               	movwf	(move_window@sector+3)& (0+255),b
 14692   00C178  EC51  F044         	call	_move_window	;wreg free
 14693   00C17C  0100               	movlb	0	; () banked
 14694   00C17E  6F97               	movwf	put_fat@res& (0+255),b
 14695   00C180                     
 14696                           ; BSR set to: 0
 14697                           ;mcc_generated_files/fatfs/ff.c: 1234:    if (res != FR_OK) break;
 14698   00C180  5197               	movf	put_fat@res& (0+255),w,b
 14699   00C182  B4D8               	btfsc	status,2,c
 14700   00C184  EFC6  F060         	goto	u8471
 14701   00C188  EFC8  F060         	goto	u8470
 14702   00C18C                     u8471:
 14703   00C18C  EFCA  F060         	goto	l7214
 14704   00C190                     u8470:
 14705   00C190  EFDC  F062         	goto	l7270
 14706   00C194                     l7214:
 14707                           
 14708                           ; BSR set to: 0
 14709                           ;mcc_generated_files/fatfs/ff.c: 1235:    p = fs->win + bc++ % ((UINT)512);
 14710   00C194  0EFF               	movlw	255
 14711   00C196  1595               	andwf	put_fat@bc& (0+255),w,b
 14712   00C198  6F81               	movwf	??_put_fat& (0+255),b
 14713   00C19A  0E01               	movlw	1
 14714   00C19C  1596               	andwf	(put_fat@bc+1)& (0+255),w,b
 14715   00C19E  6F82               	movwf	(??_put_fat+1)& (0+255),b
 14716   00C1A0  5181               	movf	??_put_fat& (0+255),w,b
 14717   00C1A2  2577               	addwf	put_fat@fs& (0+255),w,b
 14718   00C1A4  6F83               	movwf	(??_put_fat+2)& (0+255),b
 14719   00C1A6  5182               	movf	(??_put_fat+1)& (0+255),w,b
 14720   00C1A8  2178               	addwfc	(put_fat@fs+1)& (0+255),w,b
 14721   00C1AA  6F84               	movwf	(??_put_fat+3)& (0+255),b
 14722   00C1AC  0E33               	movlw	51
 14723   00C1AE  2583               	addwf	(??_put_fat+2)& (0+255),w,b
 14724   00C1B0  6F93               	movwf	put_fat@p& (0+255),b
 14725   00C1B2  0E00               	movlw	0
 14726   00C1B4  2184               	addwfc	(??_put_fat+3)& (0+255),w,b
 14727   00C1B6  6F94               	movwf	(put_fat@p+1)& (0+255),b
 14728   00C1B8                     
 14729                           ; BSR set to: 0
 14730   00C1B8  4B95               	infsnz	put_fat@bc& (0+255),f,b
 14731   00C1BA  2B96               	incf	(put_fat@bc+1)& (0+255),f,b
 14732   00C1BC                     
 14733                           ; BSR set to: 0
 14734                           ;mcc_generated_files/fatfs/ff.c: 1236:    *p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val <<
      +                           4)) : (BYTE)val;
 14735   00C1BC  B179               	btfsc	put_fat@clst& (0+255),0,b
 14736   00C1BE  EFE3  F060         	goto	u8481
 14737   00C1C2  EFE5  F060         	goto	u8480
 14738   00C1C6                     u8481:
 14739   00C1C6  EFEA  F060         	goto	l7222
 14740   00C1CA                     u8480:
 14741   00C1CA                     
 14742                           ; BSR set to: 0
 14743   00C1CA  C07D  F08F         	movff	put_fat@val,_put_fat$641
 14744   00C1CE  6B90               	clrf	(_put_fat$641+1)& (0+255),b
 14745   00C1D0  EF04  F061         	goto	l7224
 14746   00C1D4                     l7222:
 14747                           
 14748                           ; BSR set to: 0
 14749   00C1D4  517D               	movf	put_fat@val& (0+255),w,b
 14750   00C1D6  6F81               	movwf	??_put_fat& (0+255),b
 14751   00C1D8  6B82               	clrf	(??_put_fat+1)& (0+255),b
 14752   00C1DA  3B81               	swapf	??_put_fat& (0+255),f,b
 14753   00C1DC  3B82               	swapf	(??_put_fat+1)& (0+255),f,b
 14754   00C1DE  0EF0               	movlw	240
 14755   00C1E0  1782               	andwf	(??_put_fat+1)& (0+255),f,b
 14756   00C1E2  5181               	movf	??_put_fat& (0+255),w,b
 14757   00C1E4  0B0F               	andlw	15
 14758   00C1E6  1382               	iorwf	(??_put_fat+1)& (0+255),f,b
 14759   00C1E8  0EF0               	movlw	240
 14760   00C1EA  1781               	andwf	??_put_fat& (0+255),f,b
 14761   00C1EC  C093  FFD9         	movff	put_fat@p,fsr2l
 14762   00C1F0  C094  FFDA         	movff	put_fat@p+1,fsr2h
 14763   00C1F4  50DF               	movf	indf2,w,c
 14764   00C1F6  0B0F               	andlw	15
 14765   00C1F8  6F83               	movwf	(??_put_fat+2)& (0+255),b
 14766   00C1FA  6B84               	clrf	(??_put_fat+3)& (0+255),b
 14767   00C1FC  5181               	movf	??_put_fat& (0+255),w,b
 14768   00C1FE  1183               	iorwf	(??_put_fat+2)& (0+255),w,b
 14769   00C200  6F8F               	movwf	_put_fat$641& (0+255),b
 14770   00C202  5182               	movf	(??_put_fat+1)& (0+255),w,b
 14771   00C204  1184               	iorwf	(??_put_fat+3)& (0+255),w,b
 14772   00C206  6F90               	movwf	(_put_fat$641+1)& (0+255),b
 14773   00C208                     l7224:
 14774                           
 14775                           ; BSR set to: 0
 14776   00C208  C093  FFD9         	movff	put_fat@p,fsr2l
 14777   00C20C  C094  FFDA         	movff	put_fat@p+1,fsr2h
 14778   00C210  C08F  FFDF         	movff	_put_fat$641,indf2
 14779   00C214                     
 14780                           ; BSR set to: 0
 14781                           ;mcc_generated_files/fatfs/ff.c: 1237:    fs->wflag = 1;
 14782   00C214  EE20 F003          	lfsr	2,3
 14783   00C218  5177               	movf	put_fat@fs& (0+255),w,b
 14784   00C21A  26D9               	addwf	fsr2l,f,c
 14785   00C21C  5178               	movf	(put_fat@fs+1)& (0+255),w,b
 14786   00C21E  22DA               	addwfc	fsr2h,f,c
 14787   00C220  0E01               	movlw	1
 14788   00C222  6EDF               	movwf	indf2,c
 14789   00C224                     
 14790                           ; BSR set to: 0
 14791                           ;mcc_generated_files/fatfs/ff.c: 1238:    res = move_window(fs, fs->fatbase + (bc / ((UI
      +                          NT)512)));
 14792   00C224  C077  F070         	movff	put_fat@fs,move_window@fs
 14793   00C228  C078  F071         	movff	put_fat@fs+1,move_window@fs+1
 14794   00C22C  EE20 F023          	lfsr	2,35
 14795   00C230  5177               	movf	put_fat@fs& (0+255),w,b
 14796   00C232  26D9               	addwf	fsr2l,f,c
 14797   00C234  5178               	movf	(put_fat@fs+1)& (0+255),w,b
 14798   00C236  22DA               	addwfc	fsr2h,f,c
 14799   00C238  CFDE F081          	movff	postinc2,??_put_fat
 14800   00C23C  CFDE F082          	movff	postinc2,??_put_fat+1
 14801   00C240  CFDE F083          	movff	postinc2,??_put_fat+2
 14802   00C244  CFDE F084          	movff	postinc2,??_put_fat+3
 14803   00C248  C095  F085         	movff	put_fat@bc,??_put_fat+4
 14804   00C24C  C096  F086         	movff	put_fat@bc+1,??_put_fat+5
 14805   00C250  0E09               	movlw	9
 14806   00C252  6F87               	movwf	(??_put_fat+6)& (0+255),b
 14807   00C254                     u8495:
 14808   00C254  90D8               	bcf	status,0,c
 14809   00C256  3386               	rrcf	(??_put_fat+5)& (0+255),f,b
 14810   00C258  3385               	rrcf	(??_put_fat+4)& (0+255),f,b
 14811   00C25A  2F87               	decfsz	(??_put_fat+6)& (0+255),f,b
 14812   00C25C  EF2A  F061         	goto	u8495
 14813   00C260  5185               	movf	(??_put_fat+4)& (0+255),w,b
 14814   00C262  2581               	addwf	??_put_fat& (0+255),w,b
 14815   00C264  6F72               	movwf	move_window@sector& (0+255),b
 14816   00C266  5186               	movf	(??_put_fat+5)& (0+255),w,b
 14817   00C268  2182               	addwfc	(??_put_fat+1)& (0+255),w,b
 14818   00C26A  6F73               	movwf	(move_window@sector+1)& (0+255),b
 14819   00C26C  0E00               	movlw	0
 14820   00C26E  2183               	addwfc	(??_put_fat+2)& (0+255),w,b
 14821   00C270  6F74               	movwf	(move_window@sector+2)& (0+255),b
 14822   00C272  0E00               	movlw	0
 14823   00C274  2184               	addwfc	(??_put_fat+3)& (0+255),w,b
 14824   00C276  6F75               	movwf	(move_window@sector+3)& (0+255),b
 14825   00C278  EC51  F044         	call	_move_window	;wreg free
 14826   00C27C  0100               	movlb	0	; () banked
 14827   00C27E  6F97               	movwf	put_fat@res& (0+255),b
 14828   00C280                     
 14829                           ; BSR set to: 0
 14830                           ;mcc_generated_files/fatfs/ff.c: 1239:    if (res != FR_OK) break;
 14831   00C280  5197               	movf	put_fat@res& (0+255),w,b
 14832   00C282  B4D8               	btfsc	status,2,c
 14833   00C284  EF46  F061         	goto	u8501
 14834   00C288  EF48  F061         	goto	u8500
 14835   00C28C                     u8501:
 14836   00C28C  EF4A  F061         	goto	l7234
 14837   00C290                     u8500:
 14838   00C290  EFDC  F062         	goto	l7270
 14839   00C294                     l7234:
 14840                           
 14841                           ; BSR set to: 0
 14842                           ;mcc_generated_files/fatfs/ff.c: 1240:    p = fs->win + bc % ((UINT)512);
 14843   00C294  0EFF               	movlw	255
 14844   00C296  1595               	andwf	put_fat@bc& (0+255),w,b
 14845   00C298  6F81               	movwf	??_put_fat& (0+255),b
 14846   00C29A  0E01               	movlw	1
 14847   00C29C  1596               	andwf	(put_fat@bc+1)& (0+255),w,b
 14848   00C29E  6F82               	movwf	(??_put_fat+1)& (0+255),b
 14849   00C2A0  5181               	movf	??_put_fat& (0+255),w,b
 14850   00C2A2  2577               	addwf	put_fat@fs& (0+255),w,b
 14851   00C2A4  6F83               	movwf	(??_put_fat+2)& (0+255),b
 14852   00C2A6  5182               	movf	(??_put_fat+1)& (0+255),w,b
 14853   00C2A8  2178               	addwfc	(put_fat@fs+1)& (0+255),w,b
 14854   00C2AA  6F84               	movwf	(??_put_fat+3)& (0+255),b
 14855   00C2AC  0E33               	movlw	51
 14856   00C2AE  2583               	addwf	(??_put_fat+2)& (0+255),w,b
 14857   00C2B0  6F93               	movwf	put_fat@p& (0+255),b
 14858   00C2B2  0E00               	movlw	0
 14859   00C2B4  2184               	addwfc	(??_put_fat+3)& (0+255),w,b
 14860   00C2B6  6F94               	movwf	(put_fat@p+1)& (0+255),b
 14861   00C2B8                     
 14862                           ; BSR set to: 0
 14863                           ;mcc_generated_files/fatfs/ff.c: 1241:    *p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0x
      +                          F0) | ((BYTE)(val >> 8) & 0x0F));
 14864   00C2B8  B179               	btfsc	put_fat@clst& (0+255),0,b
 14865   00C2BA  EF61  F061         	goto	u8511
 14866   00C2BE  EF63  F061         	goto	u8510
 14867   00C2C2                     u8511:
 14868   00C2C2  EF81  F061         	goto	l7240
 14869   00C2C6                     u8510:
 14870   00C2C6                     
 14871                           ; BSR set to: 0
 14872   00C2C6  C07D  F081         	movff	put_fat@val,??_put_fat
 14873   00C2CA  C07E  F082         	movff	put_fat@val+1,??_put_fat+1
 14874   00C2CE  C07F  F083         	movff	put_fat@val+2,??_put_fat+2
 14875   00C2D2  C080  F084         	movff	put_fat@val+3,??_put_fat+3
 14876   00C2D6  C082  F081         	movff	??_put_fat+1,??_put_fat
 14877   00C2DA  C083  F082         	movff	??_put_fat+2,??_put_fat+1
 14878   00C2DE  C084  F083         	movff	??_put_fat+3,??_put_fat+2
 14879   00C2E2  6B84               	clrf	(??_put_fat+3)& (0+255),b
 14880   00C2E4  0E0F               	movlw	15
 14881   00C2E6  1781               	andwf	??_put_fat& (0+255),f,b
 14882   00C2E8  C093  FFD9         	movff	put_fat@p,fsr2l
 14883   00C2EC  C094  FFDA         	movff	put_fat@p+1,fsr2h
 14884   00C2F0  50DF               	movf	indf2,w,c
 14885   00C2F2  0BF0               	andlw	240
 14886   00C2F4  1181               	iorwf	??_put_fat& (0+255),w,b
 14887   00C2F6  6F85               	movwf	(??_put_fat+4)& (0+255),b
 14888   00C2F8  5185               	movf	(??_put_fat+4)& (0+255),w,b
 14889   00C2FA  6F91               	movwf	_put_fat$642& (0+255),b
 14890   00C2FC  6B92               	clrf	(_put_fat$642+1)& (0+255),b
 14891   00C2FE  EF97  F061         	goto	l7242
 14892   00C302                     l7240:
 14893                           
 14894                           ; BSR set to: 0
 14895   00C302  C07D  F081         	movff	put_fat@val,??_put_fat
 14896   00C306  C07E  F082         	movff	put_fat@val+1,??_put_fat+1
 14897   00C30A  C07F  F083         	movff	put_fat@val+2,??_put_fat+2
 14898   00C30E  C080  F084         	movff	put_fat@val+3,??_put_fat+3
 14899   00C312  0E05               	movlw	5
 14900   00C314  EF91  F061         	goto	u8520
 14901   00C318                     u8525:
 14902   00C318  90D8               	bcf	status,0,c
 14903   00C31A  3384               	rrcf	(??_put_fat+3)& (0+255),f,b
 14904   00C31C  3383               	rrcf	(??_put_fat+2)& (0+255),f,b
 14905   00C31E  3382               	rrcf	(??_put_fat+1)& (0+255),f,b
 14906   00C320  3381               	rrcf	??_put_fat& (0+255),f,b
 14907   00C322                     u8520:
 14908   00C322  2EE8               	decfsz	wreg,f,c
 14909   00C324  EF8C  F061         	goto	u8525
 14910   00C328  5181               	movf	??_put_fat& (0+255),w,b
 14911   00C32A  6F91               	movwf	_put_fat$642& (0+255),b
 14912   00C32C  6B92               	clrf	(_put_fat$642+1)& (0+255),b
 14913   00C32E                     l7242:
 14914                           
 14915                           ; BSR set to: 0
 14916   00C32E  C093  FFD9         	movff	put_fat@p,fsr2l
 14917   00C332  C094  FFDA         	movff	put_fat@p+1,fsr2h
 14918   00C336  C091  FFDF         	movff	_put_fat$642,indf2
 14919                           
 14920                           ;mcc_generated_files/fatfs/ff.c: 1242:    fs->wflag = 1;
 14921   00C33A  EE20 F003          	lfsr	2,3
 14922   00C33E  5177               	movf	put_fat@fs& (0+255),w,b
 14923   00C340  26D9               	addwf	fsr2l,f,c
 14924   00C342  5178               	movf	(put_fat@fs+1)& (0+255),w,b
 14925   00C344  22DA               	addwfc	fsr2h,f,c
 14926   00C346  0E01               	movlw	1
 14927   00C348  6EDF               	movwf	indf2,c
 14928                           
 14929                           ;mcc_generated_files/fatfs/ff.c: 1243:    break;
 14930   00C34A  EFDC  F062         	goto	l7270
 14931   00C34E                     l7244:
 14932                           
 14933                           ; BSR set to: 0
 14934                           ;mcc_generated_files/fatfs/ff.c: 1246:    res = move_window(fs, fs->fatbase + (clst / ((
      +                          (UINT)512) / 2)));
 14935   00C34E  C077  F070         	movff	put_fat@fs,move_window@fs
 14936   00C352  C078  F071         	movff	put_fat@fs+1,move_window@fs+1
 14937   00C356  EE20 F023          	lfsr	2,35
 14938   00C35A  5177               	movf	put_fat@fs& (0+255),w,b
 14939   00C35C  26D9               	addwf	fsr2l,f,c
 14940   00C35E  5178               	movf	(put_fat@fs+1)& (0+255),w,b
 14941   00C360  22DA               	addwfc	fsr2h,f,c
 14942   00C362  CFDE F081          	movff	postinc2,??_put_fat
 14943   00C366  CFDE F082          	movff	postinc2,??_put_fat+1
 14944   00C36A  CFDE F083          	movff	postinc2,??_put_fat+2
 14945   00C36E  CFDE F084          	movff	postinc2,??_put_fat+3
 14946   00C372  C079  F085         	movff	put_fat@clst,??_put_fat+4
 14947   00C376  C07A  F086         	movff	put_fat@clst+1,??_put_fat+5
 14948   00C37A  C07B  F087         	movff	put_fat@clst+2,??_put_fat+6
 14949   00C37E  C07C  F088         	movff	put_fat@clst+3,??_put_fat+7
 14950   00C382  C086  F085         	movff	??_put_fat+5,??_put_fat+4
 14951   00C386  C087  F086         	movff	??_put_fat+6,??_put_fat+5
 14952   00C38A  C088  F087         	movff	??_put_fat+7,??_put_fat+6
 14953   00C38E  6B88               	clrf	(??_put_fat+7)& (0+255),b
 14954   00C390  5181               	movf	??_put_fat& (0+255),w,b
 14955   00C392  2585               	addwf	(??_put_fat+4)& (0+255),w,b
 14956   00C394  6F72               	movwf	move_window@sector& (0+255),b
 14957   00C396  5182               	movf	(??_put_fat+1)& (0+255),w,b
 14958   00C398  2186               	addwfc	(??_put_fat+5)& (0+255),w,b
 14959   00C39A  6F73               	movwf	(move_window@sector+1)& (0+255),b
 14960   00C39C  5183               	movf	(??_put_fat+2)& (0+255),w,b
 14961   00C39E  2187               	addwfc	(??_put_fat+6)& (0+255),w,b
 14962   00C3A0  6F74               	movwf	(move_window@sector+2)& (0+255),b
 14963   00C3A2  5184               	movf	(??_put_fat+3)& (0+255),w,b
 14964   00C3A4  2188               	addwfc	(??_put_fat+7)& (0+255),w,b
 14965   00C3A6  6F75               	movwf	(move_window@sector+3)& (0+255),b
 14966   00C3A8  EC51  F044         	call	_move_window	;wreg free
 14967   00C3AC  0100               	movlb	0	; () banked
 14968   00C3AE  6F97               	movwf	put_fat@res& (0+255),b
 14969   00C3B0                     
 14970                           ; BSR set to: 0
 14971                           ;mcc_generated_files/fatfs/ff.c: 1247:    if (res != FR_OK) break;
 14972   00C3B0  5197               	movf	put_fat@res& (0+255),w,b
 14973   00C3B2  B4D8               	btfsc	status,2,c
 14974   00C3B4  EFDE  F061         	goto	u8531
 14975   00C3B8  EFE0  F061         	goto	u8530
 14976   00C3BC                     u8531:
 14977   00C3BC  EFE2  F061         	goto	l7250
 14978   00C3C0                     u8530:
 14979   00C3C0  EFDC  F062         	goto	l7270
 14980   00C3C4                     l7250:
 14981                           
 14982                           ; BSR set to: 0
 14983                           ;mcc_generated_files/fatfs/ff.c: 1248:    st_word(fs->win + clst * 2 % ((UINT)512), (WOR
      +                          D)val);
 14984   00C3C4  C079  F081         	movff	put_fat@clst,??_put_fat
 14985   00C3C8  C07A  F082         	movff	put_fat@clst+1,??_put_fat+1
 14986   00C3CC  90D8               	bcf	status,0,c
 14987   00C3CE  3781               	rlcf	??_put_fat& (0+255),f,b
 14988   00C3D0  3782               	rlcf	(??_put_fat+1)& (0+255),f,b
 14989   00C3D2  0EFF               	movlw	255
 14990   00C3D4  1581               	andwf	??_put_fat& (0+255),w,b
 14991   00C3D6  6F83               	movwf	(??_put_fat+2)& (0+255),b
 14992   00C3D8  0E01               	movlw	1
 14993   00C3DA  1582               	andwf	(??_put_fat+1)& (0+255),w,b
 14994   00C3DC  6F84               	movwf	(??_put_fat+3)& (0+255),b
 14995   00C3DE  5183               	movf	(??_put_fat+2)& (0+255),w,b
 14996   00C3E0  2577               	addwf	put_fat@fs& (0+255),w,b
 14997   00C3E2  6F85               	movwf	(??_put_fat+4)& (0+255),b
 14998   00C3E4  5184               	movf	(??_put_fat+3)& (0+255),w,b
 14999   00C3E6  2178               	addwfc	(put_fat@fs+1)& (0+255),w,b
 15000   00C3E8  6F86               	movwf	(??_put_fat+5)& (0+255),b
 15001   00C3EA  0E33               	movlw	51
 15002   00C3EC  2585               	addwf	(??_put_fat+4)& (0+255),w,b
 15003   00C3EE  6E01               	movwf	st_word@ptr^0,c
 15004   00C3F0  0E00               	movlw	0
 15005   00C3F2  2186               	addwfc	(??_put_fat+5)& (0+255),w,b
 15006   00C3F4  6E02               	movwf	(st_word@ptr+1)^0,c
 15007   00C3F6  C07D  F003         	movff	put_fat@val,st_word@val
 15008   00C3FA  C07E  F004         	movff	put_fat@val+1,st_word@val+1
 15009   00C3FE  EC8B  F03E         	call	_st_word	;wreg free
 15010   00C402                     
 15011                           ;mcc_generated_files/fatfs/ff.c: 1249:    fs->wflag = 1;
 15012   00C402  0100               	movlb	0	; () banked
 15013   00C404  EE20 F003          	lfsr	2,3
 15014   00C408  5177               	movf	put_fat@fs& (0+255),w,b
 15015   00C40A  26D9               	addwf	fsr2l,f,c
 15016   00C40C  5178               	movf	(put_fat@fs+1)& (0+255),w,b
 15017   00C40E  22DA               	addwfc	fsr2h,f,c
 15018   00C410  0E01               	movlw	1
 15019   00C412  6EDF               	movwf	indf2,c
 15020                           
 15021                           ;mcc_generated_files/fatfs/ff.c: 1250:    break;
 15022   00C414  EFDC  F062         	goto	l7270
 15023   00C418                     l7254:
 15024                           
 15025                           ; BSR set to: 0
 15026                           ;mcc_generated_files/fatfs/ff.c: 1256:    res = move_window(fs, fs->fatbase + (clst / ((
      +                          (UINT)512) / 4)));
 15027   00C418  C077  F070         	movff	put_fat@fs,move_window@fs
 15028   00C41C  C078  F071         	movff	put_fat@fs+1,move_window@fs+1
 15029   00C420  EE20 F023          	lfsr	2,35
 15030   00C424  5177               	movf	put_fat@fs& (0+255),w,b
 15031   00C426  26D9               	addwf	fsr2l,f,c
 15032   00C428  5178               	movf	(put_fat@fs+1)& (0+255),w,b
 15033   00C42A  22DA               	addwfc	fsr2h,f,c
 15034   00C42C  CFDE F081          	movff	postinc2,??_put_fat
 15035   00C430  CFDE F082          	movff	postinc2,??_put_fat+1
 15036   00C434  CFDE F083          	movff	postinc2,??_put_fat+2
 15037   00C438  CFDE F084          	movff	postinc2,??_put_fat+3
 15038   00C43C  C079  F085         	movff	put_fat@clst,??_put_fat+4
 15039   00C440  C07A  F086         	movff	put_fat@clst+1,??_put_fat+5
 15040   00C444  C07B  F087         	movff	put_fat@clst+2,??_put_fat+6
 15041   00C448  C07C  F088         	movff	put_fat@clst+3,??_put_fat+7
 15042   00C44C  0E08               	movlw	8
 15043   00C44E  EF2E  F062         	goto	u8540
 15044   00C452                     u8545:
 15045   00C452  90D8               	bcf	status,0,c
 15046   00C454  3388               	rrcf	(??_put_fat+7)& (0+255),f,b
 15047   00C456  3387               	rrcf	(??_put_fat+6)& (0+255),f,b
 15048   00C458  3386               	rrcf	(??_put_fat+5)& (0+255),f,b
 15049   00C45A  3385               	rrcf	(??_put_fat+4)& (0+255),f,b
 15050   00C45C                     u8540:
 15051   00C45C  2EE8               	decfsz	wreg,f,c
 15052   00C45E  EF29  F062         	goto	u8545
 15053   00C462  5181               	movf	??_put_fat& (0+255),w,b
 15054   00C464  2585               	addwf	(??_put_fat+4)& (0+255),w,b
 15055   00C466  6F72               	movwf	move_window@sector& (0+255),b
 15056   00C468  5182               	movf	(??_put_fat+1)& (0+255),w,b
 15057   00C46A  2186               	addwfc	(??_put_fat+5)& (0+255),w,b
 15058   00C46C  6F73               	movwf	(move_window@sector+1)& (0+255),b
 15059   00C46E  5183               	movf	(??_put_fat+2)& (0+255),w,b
 15060   00C470  2187               	addwfc	(??_put_fat+6)& (0+255),w,b
 15061   00C472  6F74               	movwf	(move_window@sector+2)& (0+255),b
 15062   00C474  5184               	movf	(??_put_fat+3)& (0+255),w,b
 15063   00C476  2188               	addwfc	(??_put_fat+7)& (0+255),w,b
 15064   00C478  6F75               	movwf	(move_window@sector+3)& (0+255),b
 15065   00C47A  EC51  F044         	call	_move_window	;wreg free
 15066   00C47E  0100               	movlb	0	; () banked
 15067   00C480  6F97               	movwf	put_fat@res& (0+255),b
 15068   00C482                     
 15069                           ; BSR set to: 0
 15070                           ;mcc_generated_files/fatfs/ff.c: 1257:    if (res != FR_OK) break;
 15071   00C482  5197               	movf	put_fat@res& (0+255),w,b
 15072   00C484  B4D8               	btfsc	status,2,c
 15073   00C486  EF47  F062         	goto	u8551
 15074   00C48A  EF49  F062         	goto	u8550
 15075   00C48E                     u8551:
 15076   00C48E  EF4B  F062         	goto	l7262
 15077   00C492                     u8550:
 15078   00C492  EFDC  F062         	goto	l7270
 15079   00C496                     l7262:
 15080                           
 15081                           ; BSR set to: 0
 15082                           ;mcc_generated_files/fatfs/ff.c: 1259:     val = (val & 0x0FFFFFFF) | (ld_dword(fs->win 
      +                          + clst * 4 % ((UINT)512)) & 0xF0000000);
 15083   00C496  C079  F081         	movff	put_fat@clst,??_put_fat
 15084   00C49A  C07A  F082         	movff	put_fat@clst+1,??_put_fat+1
 15085   00C49E  90D8               	bcf	status,0,c
 15086   00C4A0  3781               	rlcf	??_put_fat& (0+255),f,b
 15087   00C4A2  3782               	rlcf	(??_put_fat+1)& (0+255),f,b
 15088   00C4A4  90D8               	bcf	status,0,c
 15089   00C4A6  3781               	rlcf	??_put_fat& (0+255),f,b
 15090   00C4A8  3782               	rlcf	(??_put_fat+1)& (0+255),f,b
 15091   00C4AA  0EFF               	movlw	255
 15092   00C4AC  1581               	andwf	??_put_fat& (0+255),w,b
 15093   00C4AE  6F83               	movwf	(??_put_fat+2)& (0+255),b
 15094   00C4B0  0E01               	movlw	1
 15095   00C4B2  1582               	andwf	(??_put_fat+1)& (0+255),w,b
 15096   00C4B4  6F84               	movwf	(??_put_fat+3)& (0+255),b
 15097   00C4B6  5183               	movf	(??_put_fat+2)& (0+255),w,b
 15098   00C4B8  2577               	addwf	put_fat@fs& (0+255),w,b
 15099   00C4BA  6F85               	movwf	(??_put_fat+4)& (0+255),b
 15100   00C4BC  5184               	movf	(??_put_fat+3)& (0+255),w,b
 15101   00C4BE  2178               	addwfc	(put_fat@fs+1)& (0+255),w,b
 15102   00C4C0  6F86               	movwf	(??_put_fat+5)& (0+255),b
 15103   00C4C2  0E33               	movlw	51
 15104   00C4C4  2585               	addwf	(??_put_fat+4)& (0+255),w,b
 15105   00C4C6  6E01               	movwf	ld_dword@ptr^0,c
 15106   00C4C8  0E00               	movlw	0
 15107   00C4CA  2186               	addwfc	(??_put_fat+5)& (0+255),w,b
 15108   00C4CC  6E02               	movwf	(ld_dword@ptr+1)^0,c
 15109   00C4CE  ECF5  F043         	call	_ld_dword	;wreg free
 15110   00C4D2  0E00               	movlw	0
 15111   00C4D4  1401               	andwf	?_ld_dword^0,w,c
 15112   00C4D6  0100               	movlb	0	; () banked
 15113   00C4D8  6F87               	movwf	(??_put_fat+6)& (0+255),b
 15114   00C4DA  0E00               	movlw	0
 15115   00C4DC  1402               	andwf	(?_ld_dword+1)^0,w,c
 15116   00C4DE  6F88               	movwf	(??_put_fat+7)& (0+255),b
 15117   00C4E0  0E00               	movlw	0
 15118   00C4E2  1403               	andwf	(?_ld_dword+2)^0,w,c
 15119   00C4E4  6F89               	movwf	(??_put_fat+8)& (0+255),b
 15120   00C4E6  0EF0               	movlw	240
 15121   00C4E8  1404               	andwf	(?_ld_dword+3)^0,w,c
 15122   00C4EA  6F8A               	movwf	(??_put_fat+9)& (0+255),b
 15123   00C4EC  0EFF               	movlw	255
 15124   00C4EE  157D               	andwf	put_fat@val& (0+255),w,b
 15125   00C4F0  6F8B               	movwf	(??_put_fat+10)& (0+255),b
 15126   00C4F2  0EFF               	movlw	255
 15127   00C4F4  157E               	andwf	(put_fat@val+1)& (0+255),w,b
 15128   00C4F6  6F8C               	movwf	(??_put_fat+11)& (0+255),b
 15129   00C4F8  0EFF               	movlw	255
 15130   00C4FA  157F               	andwf	(put_fat@val+2)& (0+255),w,b
 15131   00C4FC  6F8D               	movwf	(??_put_fat+12)& (0+255),b
 15132   00C4FE  0E0F               	movlw	15
 15133   00C500  1580               	andwf	(put_fat@val+3)& (0+255),w,b
 15134   00C502  6F8E               	movwf	(??_put_fat+13)& (0+255),b
 15135   00C504  5187               	movf	(??_put_fat+6)& (0+255),w,b
 15136   00C506  118B               	iorwf	(??_put_fat+10)& (0+255),w,b
 15137   00C508  6F7D               	movwf	put_fat@val& (0+255),b
 15138   00C50A  5188               	movf	(??_put_fat+7)& (0+255),w,b
 15139   00C50C  118C               	iorwf	(??_put_fat+11)& (0+255),w,b
 15140   00C50E  6F7E               	movwf	(put_fat@val+1)& (0+255),b
 15141   00C510  5189               	movf	(??_put_fat+8)& (0+255),w,b
 15142   00C512  118D               	iorwf	(??_put_fat+12)& (0+255),w,b
 15143   00C514  6F7F               	movwf	(put_fat@val+2)& (0+255),b
 15144   00C516  518A               	movf	(??_put_fat+9)& (0+255),w,b
 15145   00C518  118E               	iorwf	(??_put_fat+13)& (0+255),w,b
 15146   00C51A  6F80               	movwf	(put_fat@val+3)& (0+255),b
 15147   00C51C                     
 15148                           ; BSR set to: 0
 15149                           ;mcc_generated_files/fatfs/ff.c: 1261:    st_dword(fs->win + clst * 4 % ((UINT)512), val
      +                          );
 15150   00C51C  C079  F081         	movff	put_fat@clst,??_put_fat
 15151   00C520  C07A  F082         	movff	put_fat@clst+1,??_put_fat+1
 15152   00C524  90D8               	bcf	status,0,c
 15153   00C526  3781               	rlcf	??_put_fat& (0+255),f,b
 15154   00C528  3782               	rlcf	(??_put_fat+1)& (0+255),f,b
 15155   00C52A  90D8               	bcf	status,0,c
 15156   00C52C  3781               	rlcf	??_put_fat& (0+255),f,b
 15157   00C52E  3782               	rlcf	(??_put_fat+1)& (0+255),f,b
 15158   00C530  0EFF               	movlw	255
 15159   00C532  1581               	andwf	??_put_fat& (0+255),w,b
 15160   00C534  6F83               	movwf	(??_put_fat+2)& (0+255),b
 15161   00C536  0E01               	movlw	1
 15162   00C538  1582               	andwf	(??_put_fat+1)& (0+255),w,b
 15163   00C53A  6F84               	movwf	(??_put_fat+3)& (0+255),b
 15164   00C53C  5183               	movf	(??_put_fat+2)& (0+255),w,b
 15165   00C53E  2577               	addwf	put_fat@fs& (0+255),w,b
 15166   00C540  6F85               	movwf	(??_put_fat+4)& (0+255),b
 15167   00C542  5184               	movf	(??_put_fat+3)& (0+255),w,b
 15168   00C544  2178               	addwfc	(put_fat@fs+1)& (0+255),w,b
 15169   00C546  6F86               	movwf	(??_put_fat+5)& (0+255),b
 15170   00C548  0E33               	movlw	51
 15171   00C54A  2585               	addwf	(??_put_fat+4)& (0+255),w,b
 15172   00C54C  6E01               	movwf	st_dword@ptr^0,c
 15173   00C54E  0E00               	movlw	0
 15174   00C550  2186               	addwfc	(??_put_fat+5)& (0+255),w,b
 15175   00C552  6E02               	movwf	(st_dword@ptr+1)^0,c
 15176   00C554  C07D  F003         	movff	put_fat@val,st_dword@val
 15177   00C558  C07E  F004         	movff	put_fat@val+1,st_dword@val+1
 15178   00C55C  C07F  F005         	movff	put_fat@val+2,st_dword@val+2
 15179   00C560  C080  F006         	movff	put_fat@val+3,st_dword@val+3
 15180   00C564  ECE9  F040         	call	_st_dword	;wreg free
 15181   00C568                     
 15182                           ;mcc_generated_files/fatfs/ff.c: 1262:    fs->wflag = 1;
 15183   00C568  0100               	movlb	0	; () banked
 15184   00C56A  EE20 F003          	lfsr	2,3
 15185   00C56E  5177               	movf	put_fat@fs& (0+255),w,b
 15186   00C570  26D9               	addwf	fsr2l,f,c
 15187   00C572  5178               	movf	(put_fat@fs+1)& (0+255),w,b
 15188   00C574  22DA               	addwfc	fsr2h,f,c
 15189   00C576  0E01               	movlw	1
 15190   00C578  6EDF               	movwf	indf2,c
 15191                           
 15192                           ;mcc_generated_files/fatfs/ff.c: 1263:    break;
 15193   00C57A  EFDC  F062         	goto	l7270
 15194   00C57E                     l7268:
 15195                           
 15196                           ; BSR set to: 0
 15197   00C57E  C077  FFD9         	movff	put_fat@fs,fsr2l
 15198   00C582  C078  FFDA         	movff	put_fat@fs+1,fsr2h
 15199   00C586  50DF               	movf	indf2,w,c
 15200   00C588  6F81               	movwf	??_put_fat& (0+255),b
 15201   00C58A  6B82               	clrf	(??_put_fat+1)& (0+255),b
 15202                           
 15203                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15204                           ; Switch size 1, requested type "simple"
 15205                           ; Number of cases is 1, Range of values is 0 to 0
 15206                           ; switch strategies available:
 15207                           ; Name         Instructions Cycles
 15208                           ; simple_byte            4     3 (average)
 15209                           ;	Chosen strategy is simple_byte
 15210   00C58C  5182               	movf	(??_put_fat+1)& (0+255),w,b
 15211   00C58E  0A00               	xorlw	0	; case 0
 15212   00C590  B4D8               	btfsc	status,2,c
 15213   00C592  EFCD  F062         	goto	l10678
 15214   00C596  EFDC  F062         	goto	l7270
 15215   00C59A                     l10678:
 15216                           
 15217                           ; BSR set to: 0
 15218                           ; Switch size 1, requested type "simple"
 15219                           ; Number of cases is 3, Range of values is 1 to 3
 15220                           ; switch strategies available:
 15221                           ; Name         Instructions Cycles
 15222                           ; simple_byte           10     6 (average)
 15223                           ;	Chosen strategy is simple_byte
 15224   00C59A  5181               	movf	??_put_fat& (0+255),w,b
 15225   00C59C  0A01               	xorlw	1	; case 1
 15226   00C59E  B4D8               	btfsc	status,2,c
 15227   00C5A0  EF85  F060         	goto	l233
 15228   00C5A4  0A03               	xorlw	3	; case 2
 15229   00C5A6  B4D8               	btfsc	status,2,c
 15230   00C5A8  EFA7  F061         	goto	l7244
 15231   00C5AC  0A01               	xorlw	1	; case 3
 15232   00C5AE  B4D8               	btfsc	status,2,c
 15233   00C5B0  EF0C  F062         	goto	l7254
 15234   00C5B4  EFDC  F062         	goto	l7270
 15235   00C5B8                     l7270:
 15236                           
 15237                           ; BSR set to: 0
 15238                           ;mcc_generated_files/fatfs/ff.c: 1266:  return res;
 15239   00C5B8  5197               	movf	put_fat@res& (0+255),w,b
 15240   00C5BA                     
 15241                           ; BSR set to: 0
 15242   00C5BA  0012               	return		;funcret
 15243   00C5BC                     __end_of_put_fat:
 15244                           	callstack 0
 15245                           
 15246 ;; *************** function _get_fat *****************
 15247 ;; Defined at:
 15248 ;;		line 1141 in file "mcc_generated_files/fatfs/ff.c"
 15249 ;; Parameters:    Size  Location     Type
 15250 ;;  obj             2   23[BANK0 ] PTR struct .
 15251 ;;		 -> Fil(546), pb.fp(3), pb.fp(3), pb.fp(3), 
 15252 ;;		 -> f_rename@djn(40), f_rename@djo(40), f_mkdir@dj(40), f_unlink@sdj(40), 
 15253 ;;		 -> f_unlink@dj(40), f_getfree@obj(14), f_stat@dj(40), f_chdir@dj(40), 
 15254 ;;		 -> f_open@dj(40), file(546), 
 15255 ;;  clst            4   25[BANK0 ] unsigned long 
 15256 ;; Auto vars:     Size  Location     Type
 15257 ;;  val             4   39[BANK0 ] unsigned long 
 15258 ;;  fs              2   47[BANK0 ] PTR struct .
 15259 ;;		 -> FatFs(563), drive(563), NULL(0), 
 15260 ;;  bc              2   45[BANK0 ] unsigned int 
 15261 ;;  wc              2   43[BANK0 ] unsigned int 
 15262 ;; Return value:  Size  Location     Type
 15263 ;;                  4   23[BANK0 ] unsigned long 
 15264 ;; Registers used:
 15265 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 15266 ;; Tracked objects:
 15267 ;;		On entry : 0/0
 15268 ;;		On exit  : 0/0
 15269 ;;		Unchanged: 0/0
 15270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15271 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15272 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15273 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15274 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15275 ;;Total ram usage:       26 bytes
 15276 ;; Hardware stack levels used: 1
 15277 ;; Hardware stack levels required when called: 7
 15278 ;; This function calls:
 15279 ;;		_ld_dword
 15280 ;;		_ld_word
 15281 ;;		_move_window
 15282 ;; This function is called by:
 15283 ;;		_remove_chain
 15284 ;;		_create_chain
 15285 ;;		_dir_sdi
 15286 ;;		_dir_next
 15287 ;;		_f_open
 15288 ;;		_f_lseek
 15289 ;;		_f_read
 15290 ;;		_f_getfree
 15291 ;;		_f_truncate
 15292 ;; This function uses a non-reentrant model
 15293 ;;
 15294                           
 15295                           	psect	text32
 15296   00AB5E                     __ptext32:
 15297                           	callstack 0
 15298   00AB5E                     _get_fat:
 15299                           	callstack 20
 15300   00AB5E                     
 15301                           ;mcc_generated_files/fatfs/ff.c: 1142:  FFOBJID* obj,;mcc_generated_files/fatfs/ff.c: 11
      +                          43:  DWORD clst;mcc_generated_files/fatfs/ff.c: 1145: {;mcc_generated_files/fatfs/ff.c: 
      +                          1146:  UINT wc, bc;;mcc_generated_files/fatfs/ff.c: 1147:  DWORD val;;mcc_generated_file
      +                          s/fatfs/ff.c: 1148:  FATFS *fs = obj->fs;
 15302   00AB5E  C077  FFD9         	movff	get_fat@obj,fsr2l
 15303   00AB62  C078  FFDA         	movff	get_fat@obj+1,fsr2h
 15304   00AB66  CFDE F08F          	movff	postinc2,get_fat@fs
 15305   00AB6A  CFDD F090          	movff	postdec2,get_fat@fs+1
 15306   00AB6E                     
 15307                           ;mcc_generated_files/fatfs/ff.c: 1151:  if (clst < 2 || clst >= fs->n_fatent) {
 15308   00AB6E  0100               	movlb	0	; () banked
 15309   00AB70  517C               	movf	(get_fat@clst+3)& (0+255),w,b
 15310   00AB72  117B               	iorwf	(get_fat@clst+2)& (0+255),w,b
 15311   00AB74  117A               	iorwf	(get_fat@clst+1)& (0+255),w,b
 15312   00AB76  E109               	bnz	u8330
 15313   00AB78  0E02               	movlw	2
 15314   00AB7A  5D79               	subwf	get_fat@clst& (0+255),w,b
 15315   00AB7C  A0D8               	btfss	status,0,c
 15316   00AB7E  EFC3  F055         	goto	u8331
 15317   00AB82  EFC5  F055         	goto	u8330
 15318   00AB86                     u8331:
 15319   00AB86  EFDA  F055         	goto	l7150
 15320   00AB8A                     u8330:
 15321   00AB8A                     
 15322                           ; BSR set to: 0
 15323   00AB8A  EE20 F017          	lfsr	2,23
 15324   00AB8E  518F               	movf	get_fat@fs& (0+255),w,b
 15325   00AB90  26D9               	addwf	fsr2l,f,c
 15326   00AB92  5190               	movf	(get_fat@fs+1)& (0+255),w,b
 15327   00AB94  22DA               	addwfc	fsr2h,f,c
 15328   00AB96  50DE               	movf	postinc2,w,c
 15329   00AB98  5D79               	subwf	get_fat@clst& (0+255),w,b
 15330   00AB9A  50DE               	movf	postinc2,w,c
 15331   00AB9C  597A               	subwfb	(get_fat@clst+1)& (0+255),w,b
 15332   00AB9E  50DE               	movf	postinc2,w,c
 15333   00ABA0  597B               	subwfb	(get_fat@clst+2)& (0+255),w,b
 15334   00ABA2  50DE               	movf	postinc2,w,c
 15335   00ABA4  597C               	subwfb	(get_fat@clst+3)& (0+255),w,b
 15336   00ABA6  A0D8               	btfss	status,0,c
 15337   00ABA8  EFD8  F055         	goto	u8341
 15338   00ABAC  EFDA  F055         	goto	u8340
 15339   00ABB0                     u8341:
 15340   00ABB0  EFE4  F055         	goto	l210
 15341   00ABB4                     u8340:
 15342   00ABB4                     l7150:
 15343                           
 15344                           ; BSR set to: 0
 15345                           ;mcc_generated_files/fatfs/ff.c: 1152:   val = 1;
 15346   00ABB4  0E01               	movlw	1
 15347   00ABB6  6F87               	movwf	get_fat@val& (0+255),b
 15348   00ABB8  0E00               	movlw	0
 15349   00ABBA  6F88               	movwf	(get_fat@val+1)& (0+255),b
 15350   00ABBC  0E00               	movlw	0
 15351   00ABBE  6F89               	movwf	(get_fat@val+2)& (0+255),b
 15352   00ABC0  0E00               	movlw	0
 15353   00ABC2  6F8A               	movwf	(get_fat@val+3)& (0+255),b
 15354                           
 15355                           ;mcc_generated_files/fatfs/ff.c: 1154:  } else {
 15356   00ABC4  EFA6  F057         	goto	l213
 15357   00ABC8                     l210:
 15358                           
 15359                           ; BSR set to: 0
 15360                           ;mcc_generated_files/fatfs/ff.c: 1155:   val = 0xFFFFFFFF;
 15361   00ABC8  6987               	setf	get_fat@val& (0+255),b
 15362   00ABCA  6988               	setf	(get_fat@val+1)& (0+255),b
 15363   00ABCC  6989               	setf	(get_fat@val+2)& (0+255),b
 15364   00ABCE  698A               	setf	(get_fat@val+3)& (0+255),b
 15365                           
 15366                           ;mcc_generated_files/fatfs/ff.c: 1157:   switch (fs->fs_type) {
 15367   00ABD0  EF89  F057         	goto	l7190
 15368   00ABD4                     l215:
 15369                           
 15370                           ; BSR set to: 0
 15371                           ;mcc_generated_files/fatfs/ff.c: 1159:    bc = (UINT)clst; bc += bc / 2;
 15372   00ABD4  C079  F08D         	movff	get_fat@clst,get_fat@bc
 15373   00ABD8  C07A  F08E         	movff	get_fat@clst+1,get_fat@bc+1
 15374   00ABDC                     
 15375                           ; BSR set to: 0
 15376   00ABDC  90D8               	bcf	status,0,c
 15377   00ABDE  318E               	rrcf	(get_fat@bc+1)& (0+255),w,b
 15378   00ABE0  6F7E               	movwf	(??_get_fat+1)& (0+255),b
 15379   00ABE2  318D               	rrcf	get_fat@bc& (0+255),w,b
 15380   00ABE4  6F7D               	movwf	??_get_fat& (0+255),b
 15381   00ABE6  517D               	movf	??_get_fat& (0+255),w,b
 15382   00ABE8  278D               	addwf	get_fat@bc& (0+255),f,b
 15383   00ABEA  517E               	movf	(??_get_fat+1)& (0+255),w,b
 15384   00ABEC  238E               	addwfc	(get_fat@bc+1)& (0+255),f,b
 15385   00ABEE                     
 15386                           ; BSR set to: 0
 15387                           ;mcc_generated_files/fatfs/ff.c: 1160:    if (move_window(fs, fs->fatbase + (bc / ((UINT
      +                          )512))) != FR_OK) break;
 15388   00ABEE  C08F  F070         	movff	get_fat@fs,move_window@fs
 15389   00ABF2  C090  F071         	movff	get_fat@fs+1,move_window@fs+1
 15390   00ABF6  EE20 F023          	lfsr	2,35
 15391   00ABFA  518F               	movf	get_fat@fs& (0+255),w,b
 15392   00ABFC  26D9               	addwf	fsr2l,f,c
 15393   00ABFE  5190               	movf	(get_fat@fs+1)& (0+255),w,b
 15394   00AC00  22DA               	addwfc	fsr2h,f,c
 15395   00AC02  CFDE F07D          	movff	postinc2,??_get_fat
 15396   00AC06  CFDE F07E          	movff	postinc2,??_get_fat+1
 15397   00AC0A  CFDE F07F          	movff	postinc2,??_get_fat+2
 15398   00AC0E  CFDE F080          	movff	postinc2,??_get_fat+3
 15399   00AC12  C08D  F081         	movff	get_fat@bc,??_get_fat+4
 15400   00AC16  C08E  F082         	movff	get_fat@bc+1,??_get_fat+5
 15401   00AC1A  0E09               	movlw	9
 15402   00AC1C  6F83               	movwf	(??_get_fat+6)& (0+255),b
 15403   00AC1E                     u8355:
 15404   00AC1E  90D8               	bcf	status,0,c
 15405   00AC20  3382               	rrcf	(??_get_fat+5)& (0+255),f,b
 15406   00AC22  3381               	rrcf	(??_get_fat+4)& (0+255),f,b
 15407   00AC24  2F83               	decfsz	(??_get_fat+6)& (0+255),f,b
 15408   00AC26  EF0F  F056         	goto	u8355
 15409   00AC2A  5181               	movf	(??_get_fat+4)& (0+255),w,b
 15410   00AC2C  257D               	addwf	??_get_fat& (0+255),w,b
 15411   00AC2E  6F72               	movwf	move_window@sector& (0+255),b
 15412   00AC30  5182               	movf	(??_get_fat+5)& (0+255),w,b
 15413   00AC32  217E               	addwfc	(??_get_fat+1)& (0+255),w,b
 15414   00AC34  6F73               	movwf	(move_window@sector+1)& (0+255),b
 15415   00AC36  0E00               	movlw	0
 15416   00AC38  217F               	addwfc	(??_get_fat+2)& (0+255),w,b
 15417   00AC3A  6F74               	movwf	(move_window@sector+2)& (0+255),b
 15418   00AC3C  0E00               	movlw	0
 15419   00AC3E  2180               	addwfc	(??_get_fat+3)& (0+255),w,b
 15420   00AC40  6F75               	movwf	(move_window@sector+3)& (0+255),b
 15421   00AC42  EC51  F044         	call	_move_window	;wreg free
 15422   00AC46  0900               	iorlw	0
 15423   00AC48  B4D8               	btfsc	status,2,c
 15424   00AC4A  EF29  F056         	goto	u8361
 15425   00AC4E  EF2B  F056         	goto	u8360
 15426   00AC52                     u8361:
 15427   00AC52  EF2D  F056         	goto	l7158
 15428   00AC56                     u8360:
 15429   00AC56  EFA6  F057         	goto	l213
 15430   00AC5A                     l7158:
 15431                           
 15432                           ;mcc_generated_files/fatfs/ff.c: 1161:    wc = fs->win[bc++ % ((UINT)512)];
 15433   00AC5A  0EFF               	movlw	255
 15434   00AC5C  0100               	movlb	0	; () banked
 15435   00AC5E  158D               	andwf	get_fat@bc& (0+255),w,b
 15436   00AC60  6F7D               	movwf	??_get_fat& (0+255),b
 15437   00AC62  0E01               	movlw	1
 15438   00AC64  158E               	andwf	(get_fat@bc+1)& (0+255),w,b
 15439   00AC66  6F7E               	movwf	(??_get_fat+1)& (0+255),b
 15440   00AC68  517D               	movf	??_get_fat& (0+255),w,b
 15441   00AC6A  258F               	addwf	get_fat@fs& (0+255),w,b
 15442   00AC6C  6F7F               	movwf	(??_get_fat+2)& (0+255),b
 15443   00AC6E  517E               	movf	(??_get_fat+1)& (0+255),w,b
 15444   00AC70  2190               	addwfc	(get_fat@fs+1)& (0+255),w,b
 15445   00AC72  6F80               	movwf	(??_get_fat+3)& (0+255),b
 15446   00AC74  0E33               	movlw	51
 15447   00AC76  257F               	addwf	(??_get_fat+2)& (0+255),w,b
 15448   00AC78  6ED9               	movwf	fsr2l,c
 15449   00AC7A  0E00               	movlw	0
 15450   00AC7C  2180               	addwfc	(??_get_fat+3)& (0+255),w,b
 15451   00AC7E  6EDA               	movwf	fsr2h,c
 15452   00AC80  50DF               	movf	indf2,w,c
 15453   00AC82  6F81               	movwf	(??_get_fat+4)& (0+255),b
 15454   00AC84  5181               	movf	(??_get_fat+4)& (0+255),w,b
 15455   00AC86  6F8B               	movwf	get_fat@wc& (0+255),b
 15456   00AC88  6B8C               	clrf	(get_fat@wc+1)& (0+255),b
 15457   00AC8A                     
 15458                           ; BSR set to: 0
 15459   00AC8A  4B8D               	infsnz	get_fat@bc& (0+255),f,b
 15460   00AC8C  2B8E               	incf	(get_fat@bc+1)& (0+255),f,b
 15461   00AC8E                     
 15462                           ; BSR set to: 0
 15463                           ;mcc_generated_files/fatfs/ff.c: 1162:    if (move_window(fs, fs->fatbase + (bc / ((UINT
      +                          )512))) != FR_OK) break;
 15464   00AC8E  C08F  F070         	movff	get_fat@fs,move_window@fs
 15465   00AC92  C090  F071         	movff	get_fat@fs+1,move_window@fs+1
 15466   00AC96  EE20 F023          	lfsr	2,35
 15467   00AC9A  518F               	movf	get_fat@fs& (0+255),w,b
 15468   00AC9C  26D9               	addwf	fsr2l,f,c
 15469   00AC9E  5190               	movf	(get_fat@fs+1)& (0+255),w,b
 15470   00ACA0  22DA               	addwfc	fsr2h,f,c
 15471   00ACA2  CFDE F07D          	movff	postinc2,??_get_fat
 15472   00ACA6  CFDE F07E          	movff	postinc2,??_get_fat+1
 15473   00ACAA  CFDE F07F          	movff	postinc2,??_get_fat+2
 15474   00ACAE  CFDE F080          	movff	postinc2,??_get_fat+3
 15475   00ACB2  C08D  F081         	movff	get_fat@bc,??_get_fat+4
 15476   00ACB6  C08E  F082         	movff	get_fat@bc+1,??_get_fat+5
 15477   00ACBA  0E09               	movlw	9
 15478   00ACBC  6F83               	movwf	(??_get_fat+6)& (0+255),b
 15479   00ACBE                     u8375:
 15480   00ACBE  90D8               	bcf	status,0,c
 15481   00ACC0  3382               	rrcf	(??_get_fat+5)& (0+255),f,b
 15482   00ACC2  3381               	rrcf	(??_get_fat+4)& (0+255),f,b
 15483   00ACC4  2F83               	decfsz	(??_get_fat+6)& (0+255),f,b
 15484   00ACC6  EF5F  F056         	goto	u8375
 15485   00ACCA  5181               	movf	(??_get_fat+4)& (0+255),w,b
 15486   00ACCC  257D               	addwf	??_get_fat& (0+255),w,b
 15487   00ACCE  6F72               	movwf	move_window@sector& (0+255),b
 15488   00ACD0  5182               	movf	(??_get_fat+5)& (0+255),w,b
 15489   00ACD2  217E               	addwfc	(??_get_fat+1)& (0+255),w,b
 15490   00ACD4  6F73               	movwf	(move_window@sector+1)& (0+255),b
 15491   00ACD6  0E00               	movlw	0
 15492   00ACD8  217F               	addwfc	(??_get_fat+2)& (0+255),w,b
 15493   00ACDA  6F74               	movwf	(move_window@sector+2)& (0+255),b
 15494   00ACDC  0E00               	movlw	0
 15495   00ACDE  2180               	addwfc	(??_get_fat+3)& (0+255),w,b
 15496   00ACE0  6F75               	movwf	(move_window@sector+3)& (0+255),b
 15497   00ACE2  EC51  F044         	call	_move_window	;wreg free
 15498   00ACE6  0900               	iorlw	0
 15499   00ACE8  B4D8               	btfsc	status,2,c
 15500   00ACEA  EF79  F056         	goto	u8381
 15501   00ACEE  EF7B  F056         	goto	u8380
 15502   00ACF2                     u8381:
 15503   00ACF2  EF7D  F056         	goto	l7166
 15504   00ACF6                     u8380:
 15505   00ACF6  EFA6  F057         	goto	l213
 15506   00ACFA                     l7166:
 15507                           
 15508                           ;mcc_generated_files/fatfs/ff.c: 1163:    wc |= fs->win[bc % ((UINT)512)] << 8;
 15509   00ACFA  0EFF               	movlw	255
 15510   00ACFC  0100               	movlb	0	; () banked
 15511   00ACFE  158D               	andwf	get_fat@bc& (0+255),w,b
 15512   00AD00  6F7D               	movwf	??_get_fat& (0+255),b
 15513   00AD02  0E01               	movlw	1
 15514   00AD04  158E               	andwf	(get_fat@bc+1)& (0+255),w,b
 15515   00AD06  6F7E               	movwf	(??_get_fat+1)& (0+255),b
 15516   00AD08  517D               	movf	??_get_fat& (0+255),w,b
 15517   00AD0A  258F               	addwf	get_fat@fs& (0+255),w,b
 15518   00AD0C  6F7F               	movwf	(??_get_fat+2)& (0+255),b
 15519   00AD0E  517E               	movf	(??_get_fat+1)& (0+255),w,b
 15520   00AD10  2190               	addwfc	(get_fat@fs+1)& (0+255),w,b
 15521   00AD12  6F80               	movwf	(??_get_fat+3)& (0+255),b
 15522   00AD14  0E33               	movlw	51
 15523   00AD16  257F               	addwf	(??_get_fat+2)& (0+255),w,b
 15524   00AD18  6ED9               	movwf	fsr2l,c
 15525   00AD1A  0E00               	movlw	0
 15526   00AD1C  2180               	addwfc	(??_get_fat+3)& (0+255),w,b
 15527   00AD1E  6EDA               	movwf	fsr2h,c
 15528   00AD20  50DF               	movf	indf2,w,c
 15529   00AD22  6F81               	movwf	(??_get_fat+4)& (0+255),b
 15530   00AD24  5181               	movf	(??_get_fat+4)& (0+255),w,b
 15531   00AD26  6F83               	movwf	(??_get_fat+6)& (0+255),b
 15532   00AD28  6B82               	clrf	(??_get_fat+5)& (0+255),b
 15533   00AD2A  5182               	movf	(??_get_fat+5)& (0+255),w,b
 15534   00AD2C  138B               	iorwf	get_fat@wc& (0+255),f,b
 15535   00AD2E  5183               	movf	(??_get_fat+6)& (0+255),w,b
 15536   00AD30  138C               	iorwf	(get_fat@wc+1)& (0+255),f,b
 15537   00AD32                     
 15538                           ; BSR set to: 0
 15539                           ;mcc_generated_files/fatfs/ff.c: 1164:    val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
 15540   00AD32  B179               	btfsc	get_fat@clst& (0+255),0,b
 15541   00AD34  EF9E  F056         	goto	u8391
 15542   00AD38  EFA0  F056         	goto	u8390
 15543   00AD3C                     u8391:
 15544   00AD3C  EFA8  F056         	goto	l7172
 15545   00AD40                     u8390:
 15546   00AD40                     
 15547                           ; BSR set to: 0
 15548   00AD40  0EFF               	movlw	255
 15549   00AD42  158B               	andwf	get_fat@wc& (0+255),w,b
 15550   00AD44  6F85               	movwf	_get_fat$612& (0+255),b
 15551   00AD46  0E0F               	movlw	15
 15552   00AD48  158C               	andwf	(get_fat@wc+1)& (0+255),w,b
 15553   00AD4A  6F86               	movwf	(_get_fat$612+1)& (0+255),b
 15554   00AD4C  EFB8  F056         	goto	l7174
 15555   00AD50                     l7172:
 15556                           
 15557                           ; BSR set to: 0
 15558   00AD50  C08B  F07D         	movff	get_fat@wc,??_get_fat
 15559   00AD54  C08C  F07E         	movff	get_fat@wc+1,??_get_fat+1
 15560   00AD58  0E04               	movlw	4
 15561   00AD5A  6F7F               	movwf	(??_get_fat+2)& (0+255),b
 15562   00AD5C                     u8405:
 15563   00AD5C  90D8               	bcf	status,0,c
 15564   00AD5E  337E               	rrcf	(??_get_fat+1)& (0+255),f,b
 15565   00AD60  337D               	rrcf	??_get_fat& (0+255),f,b
 15566   00AD62  2F7F               	decfsz	(??_get_fat+2)& (0+255),f,b
 15567   00AD64  EFAE  F056         	goto	u8405
 15568   00AD68  C07D  F085         	movff	??_get_fat,_get_fat$612
 15569   00AD6C  C07E  F086         	movff	??_get_fat+1,_get_fat$612+1
 15570   00AD70                     l7174:
 15571                           
 15572                           ; BSR set to: 0
 15573   00AD70  C085  F087         	movff	_get_fat$612,get_fat@val
 15574   00AD74  C086  F088         	movff	_get_fat$612+1,get_fat@val+1
 15575   00AD78  6B89               	clrf	(get_fat@val+2)& (0+255),b
 15576   00AD7A  6B8A               	clrf	(get_fat@val+3)& (0+255),b
 15577                           
 15578                           ;mcc_generated_files/fatfs/ff.c: 1165:    break;
 15579   00AD7C  EFA6  F057         	goto	l213
 15580   00AD80                     l7176:
 15581                           
 15582                           ; BSR set to: 0
 15583                           ;mcc_generated_files/fatfs/ff.c: 1168:    if (move_window(fs, fs->fatbase + (clst / (((U
      +                          INT)512) / 2))) != FR_OK) break;
 15584   00AD80  C08F  F070         	movff	get_fat@fs,move_window@fs
 15585   00AD84  C090  F071         	movff	get_fat@fs+1,move_window@fs+1
 15586   00AD88  EE20 F023          	lfsr	2,35
 15587   00AD8C  518F               	movf	get_fat@fs& (0+255),w,b
 15588   00AD8E  26D9               	addwf	fsr2l,f,c
 15589   00AD90  5190               	movf	(get_fat@fs+1)& (0+255),w,b
 15590   00AD92  22DA               	addwfc	fsr2h,f,c
 15591   00AD94  CFDE F07D          	movff	postinc2,??_get_fat
 15592   00AD98  CFDE F07E          	movff	postinc2,??_get_fat+1
 15593   00AD9C  CFDE F07F          	movff	postinc2,??_get_fat+2
 15594   00ADA0  CFDE F080          	movff	postinc2,??_get_fat+3
 15595   00ADA4  C079  F081         	movff	get_fat@clst,??_get_fat+4
 15596   00ADA8  C07A  F082         	movff	get_fat@clst+1,??_get_fat+5
 15597   00ADAC  C07B  F083         	movff	get_fat@clst+2,??_get_fat+6
 15598   00ADB0  C07C  F084         	movff	get_fat@clst+3,??_get_fat+7
 15599   00ADB4  C082  F081         	movff	??_get_fat+5,??_get_fat+4
 15600   00ADB8  C083  F082         	movff	??_get_fat+6,??_get_fat+5
 15601   00ADBC  C084  F083         	movff	??_get_fat+7,??_get_fat+6
 15602   00ADC0  6B84               	clrf	(??_get_fat+7)& (0+255),b
 15603   00ADC2  517D               	movf	??_get_fat& (0+255),w,b
 15604   00ADC4  2581               	addwf	(??_get_fat+4)& (0+255),w,b
 15605   00ADC6  6F72               	movwf	move_window@sector& (0+255),b
 15606   00ADC8  517E               	movf	(??_get_fat+1)& (0+255),w,b
 15607   00ADCA  2182               	addwfc	(??_get_fat+5)& (0+255),w,b
 15608   00ADCC  6F73               	movwf	(move_window@sector+1)& (0+255),b
 15609   00ADCE  517F               	movf	(??_get_fat+2)& (0+255),w,b
 15610   00ADD0  2183               	addwfc	(??_get_fat+6)& (0+255),w,b
 15611   00ADD2  6F74               	movwf	(move_window@sector+2)& (0+255),b
 15612   00ADD4  5180               	movf	(??_get_fat+3)& (0+255),w,b
 15613   00ADD6  2184               	addwfc	(??_get_fat+7)& (0+255),w,b
 15614   00ADD8  6F75               	movwf	(move_window@sector+3)& (0+255),b
 15615   00ADDA  EC51  F044         	call	_move_window	;wreg free
 15616   00ADDE  0900               	iorlw	0
 15617   00ADE0  B4D8               	btfsc	status,2,c
 15618   00ADE2  EFF5  F056         	goto	u8411
 15619   00ADE6  EFF7  F056         	goto	u8410
 15620   00ADEA                     u8411:
 15621   00ADEA  EFF9  F056         	goto	l7180
 15622   00ADEE                     u8410:
 15623   00ADEE  EFA6  F057         	goto	l213
 15624   00ADF2                     l7180:
 15625                           
 15626                           ;mcc_generated_files/fatfs/ff.c: 1169:    val = ld_word(fs->win + clst * 2 % ((UINT)512)
      +                          );
 15627   00ADF2  C079  F07D         	movff	get_fat@clst,??_get_fat
 15628   00ADF6  C07A  F07E         	movff	get_fat@clst+1,??_get_fat+1
 15629   00ADFA  90D8               	bcf	status,0,c
 15630   00ADFC  0100               	movlb	0	; () banked
 15631   00ADFE  377D               	rlcf	??_get_fat& (0+255),f,b
 15632   00AE00  377E               	rlcf	(??_get_fat+1)& (0+255),f,b
 15633   00AE02  0EFF               	movlw	255
 15634   00AE04  157D               	andwf	??_get_fat& (0+255),w,b
 15635   00AE06  6F7F               	movwf	(??_get_fat+2)& (0+255),b
 15636   00AE08  0E01               	movlw	1
 15637   00AE0A  157E               	andwf	(??_get_fat+1)& (0+255),w,b
 15638   00AE0C  6F80               	movwf	(??_get_fat+3)& (0+255),b
 15639   00AE0E  517F               	movf	(??_get_fat+2)& (0+255),w,b
 15640   00AE10  258F               	addwf	get_fat@fs& (0+255),w,b
 15641   00AE12  6F81               	movwf	(??_get_fat+4)& (0+255),b
 15642   00AE14  5180               	movf	(??_get_fat+3)& (0+255),w,b
 15643   00AE16  2190               	addwfc	(get_fat@fs+1)& (0+255),w,b
 15644   00AE18  6F82               	movwf	(??_get_fat+5)& (0+255),b
 15645   00AE1A  0E33               	movlw	51
 15646   00AE1C  2581               	addwf	(??_get_fat+4)& (0+255),w,b
 15647   00AE1E  6E01               	movwf	ld_word@ptr^0,c
 15648   00AE20  0E00               	movlw	0
 15649   00AE22  2182               	addwfc	(??_get_fat+5)& (0+255),w,b
 15650   00AE24  6E02               	movwf	(ld_word@ptr+1)^0,c
 15651   00AE26  ECD1  F03E         	call	_ld_word	;wreg free
 15652   00AE2A  C001  F087         	movff	?_ld_word,get_fat@val
 15653   00AE2E  C002  F088         	movff	?_ld_word+1,get_fat@val+1
 15654   00AE32  0100               	movlb	0	; () banked
 15655   00AE34  6B89               	clrf	(get_fat@val+2)& (0+255),b
 15656   00AE36  6B8A               	clrf	(get_fat@val+3)& (0+255),b
 15657                           
 15658                           ;mcc_generated_files/fatfs/ff.c: 1170:    break;
 15659   00AE38  EFA6  F057         	goto	l213
 15660   00AE3C                     l7182:
 15661                           
 15662                           ; BSR set to: 0
 15663                           ;mcc_generated_files/fatfs/ff.c: 1173:    if (move_window(fs, fs->fatbase + (clst / (((U
      +                          INT)512) / 4))) != FR_OK) break;
 15664   00AE3C  C08F  F070         	movff	get_fat@fs,move_window@fs
 15665   00AE40  C090  F071         	movff	get_fat@fs+1,move_window@fs+1
 15666   00AE44  EE20 F023          	lfsr	2,35
 15667   00AE48  518F               	movf	get_fat@fs& (0+255),w,b
 15668   00AE4A  26D9               	addwf	fsr2l,f,c
 15669   00AE4C  5190               	movf	(get_fat@fs+1)& (0+255),w,b
 15670   00AE4E  22DA               	addwfc	fsr2h,f,c
 15671   00AE50  CFDE F07D          	movff	postinc2,??_get_fat
 15672   00AE54  CFDE F07E          	movff	postinc2,??_get_fat+1
 15673   00AE58  CFDE F07F          	movff	postinc2,??_get_fat+2
 15674   00AE5C  CFDE F080          	movff	postinc2,??_get_fat+3
 15675   00AE60  C079  F081         	movff	get_fat@clst,??_get_fat+4
 15676   00AE64  C07A  F082         	movff	get_fat@clst+1,??_get_fat+5
 15677   00AE68  C07B  F083         	movff	get_fat@clst+2,??_get_fat+6
 15678   00AE6C  C07C  F084         	movff	get_fat@clst+3,??_get_fat+7
 15679   00AE70  0E08               	movlw	8
 15680   00AE72  EF40  F057         	goto	u8420
 15681   00AE76                     u8425:
 15682   00AE76  90D8               	bcf	status,0,c
 15683   00AE78  3384               	rrcf	(??_get_fat+7)& (0+255),f,b
 15684   00AE7A  3383               	rrcf	(??_get_fat+6)& (0+255),f,b
 15685   00AE7C  3382               	rrcf	(??_get_fat+5)& (0+255),f,b
 15686   00AE7E  3381               	rrcf	(??_get_fat+4)& (0+255),f,b
 15687   00AE80                     u8420:
 15688   00AE80  2EE8               	decfsz	wreg,f,c
 15689   00AE82  EF3B  F057         	goto	u8425
 15690   00AE86  517D               	movf	??_get_fat& (0+255),w,b
 15691   00AE88  2581               	addwf	(??_get_fat+4)& (0+255),w,b
 15692   00AE8A  6F72               	movwf	move_window@sector& (0+255),b
 15693   00AE8C  517E               	movf	(??_get_fat+1)& (0+255),w,b
 15694   00AE8E  2182               	addwfc	(??_get_fat+5)& (0+255),w,b
 15695   00AE90  6F73               	movwf	(move_window@sector+1)& (0+255),b
 15696   00AE92  517F               	movf	(??_get_fat+2)& (0+255),w,b
 15697   00AE94  2183               	addwfc	(??_get_fat+6)& (0+255),w,b
 15698   00AE96  6F74               	movwf	(move_window@sector+2)& (0+255),b
 15699   00AE98  5180               	movf	(??_get_fat+3)& (0+255),w,b
 15700   00AE9A  2184               	addwfc	(??_get_fat+7)& (0+255),w,b
 15701   00AE9C  6F75               	movwf	(move_window@sector+3)& (0+255),b
 15702   00AE9E  EC51  F044         	call	_move_window	;wreg free
 15703   00AEA2  0900               	iorlw	0
 15704   00AEA4  B4D8               	btfsc	status,2,c
 15705   00AEA6  EF57  F057         	goto	u8431
 15706   00AEAA  EF59  F057         	goto	u8430
 15707   00AEAE                     u8431:
 15708   00AEAE  EF5B  F057         	goto	l7186
 15709   00AEB2                     u8430:
 15710   00AEB2  EFA6  F057         	goto	l213
 15711   00AEB6                     l7186:
 15712                           
 15713                           ;mcc_generated_files/fatfs/ff.c: 1174:    val = ld_dword(fs->win + clst * 4 % ((UINT)512
      +                          )) & 0x0FFFFFFF;
 15714   00AEB6  C079  F07D         	movff	get_fat@clst,??_get_fat
 15715   00AEBA  C07A  F07E         	movff	get_fat@clst+1,??_get_fat+1
 15716   00AEBE  0100               	movlb	0	; () banked
 15717   00AEC0  90D8               	bcf	status,0,c
 15718   00AEC2  377D               	rlcf	??_get_fat& (0+255),f,b
 15719   00AEC4  377E               	rlcf	(??_get_fat+1)& (0+255),f,b
 15720   00AEC6  90D8               	bcf	status,0,c
 15721   00AEC8  377D               	rlcf	??_get_fat& (0+255),f,b
 15722   00AECA  377E               	rlcf	(??_get_fat+1)& (0+255),f,b
 15723   00AECC  0EFF               	movlw	255
 15724   00AECE  157D               	andwf	??_get_fat& (0+255),w,b
 15725   00AED0  6F7F               	movwf	(??_get_fat+2)& (0+255),b
 15726   00AED2  0E01               	movlw	1
 15727   00AED4  157E               	andwf	(??_get_fat+1)& (0+255),w,b
 15728   00AED6  6F80               	movwf	(??_get_fat+3)& (0+255),b
 15729   00AED8  517F               	movf	(??_get_fat+2)& (0+255),w,b
 15730   00AEDA  258F               	addwf	get_fat@fs& (0+255),w,b
 15731   00AEDC  6F81               	movwf	(??_get_fat+4)& (0+255),b
 15732   00AEDE  5180               	movf	(??_get_fat+3)& (0+255),w,b
 15733   00AEE0  2190               	addwfc	(get_fat@fs+1)& (0+255),w,b
 15734   00AEE2  6F82               	movwf	(??_get_fat+5)& (0+255),b
 15735   00AEE4  0E33               	movlw	51
 15736   00AEE6  2581               	addwf	(??_get_fat+4)& (0+255),w,b
 15737   00AEE8  6E01               	movwf	ld_dword@ptr^0,c
 15738   00AEEA  0E00               	movlw	0
 15739   00AEEC  2182               	addwfc	(??_get_fat+5)& (0+255),w,b
 15740   00AEEE  6E02               	movwf	(ld_dword@ptr+1)^0,c
 15741   00AEF0  ECF5  F043         	call	_ld_dword	;wreg free
 15742   00AEF4  0EFF               	movlw	255
 15743   00AEF6  1401               	andwf	?_ld_dword^0,w,c
 15744   00AEF8  0100               	movlb	0	; () banked
 15745   00AEFA  6F87               	movwf	get_fat@val& (0+255),b
 15746   00AEFC  0EFF               	movlw	255
 15747   00AEFE  1402               	andwf	(?_ld_dword+1)^0,w,c
 15748   00AF00  6F88               	movwf	(get_fat@val+1)& (0+255),b
 15749   00AF02  0EFF               	movlw	255
 15750   00AF04  1403               	andwf	(?_ld_dword+2)^0,w,c
 15751   00AF06  6F89               	movwf	(get_fat@val+2)& (0+255),b
 15752   00AF08  0E0F               	movlw	15
 15753   00AF0A  1404               	andwf	(?_ld_dword+3)^0,w,c
 15754   00AF0C  6F8A               	movwf	(get_fat@val+3)& (0+255),b
 15755                           
 15756                           ;mcc_generated_files/fatfs/ff.c: 1175:    break;
 15757   00AF0E  EFA6  F057         	goto	l213
 15758   00AF12                     l7190:
 15759                           
 15760                           ; BSR set to: 0
 15761   00AF12  C08F  FFD9         	movff	get_fat@fs,fsr2l
 15762   00AF16  C090  FFDA         	movff	get_fat@fs+1,fsr2h
 15763   00AF1A  50DF               	movf	indf2,w,c
 15764   00AF1C  6F7D               	movwf	??_get_fat& (0+255),b
 15765   00AF1E  6B7E               	clrf	(??_get_fat+1)& (0+255),b
 15766                           
 15767                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15768                           ; Switch size 1, requested type "simple"
 15769                           ; Number of cases is 1, Range of values is 0 to 0
 15770                           ; switch strategies available:
 15771                           ; Name         Instructions Cycles
 15772                           ; simple_byte            4     3 (average)
 15773                           ;	Chosen strategy is simple_byte
 15774   00AF20  517E               	movf	(??_get_fat+1)& (0+255),w,b
 15775   00AF22  0A00               	xorlw	0	; case 0
 15776   00AF24  B4D8               	btfsc	status,2,c
 15777   00AF26  EF97  F057         	goto	l10680
 15778   00AF2A  EFDA  F055         	goto	l7150
 15779   00AF2E                     l10680:
 15780                           
 15781                           ; BSR set to: 0
 15782                           ; Switch size 1, requested type "simple"
 15783                           ; Number of cases is 3, Range of values is 1 to 3
 15784                           ; switch strategies available:
 15785                           ; Name         Instructions Cycles
 15786                           ; simple_byte           10     6 (average)
 15787                           ;	Chosen strategy is simple_byte
 15788   00AF2E  517D               	movf	??_get_fat& (0+255),w,b
 15789   00AF30  0A01               	xorlw	1	; case 1
 15790   00AF32  B4D8               	btfsc	status,2,c
 15791   00AF34  EFEA  F055         	goto	l215
 15792   00AF38  0A03               	xorlw	3	; case 2
 15793   00AF3A  B4D8               	btfsc	status,2,c
 15794   00AF3C  EFC0  F056         	goto	l7176
 15795   00AF40  0A01               	xorlw	1	; case 3
 15796   00AF42  B4D8               	btfsc	status,2,c
 15797   00AF44  EF1E  F057         	goto	l7182
 15798   00AF48  EFDA  F055         	goto	l7150
 15799   00AF4C                     l213:
 15800                           
 15801                           ;mcc_generated_files/fatfs/ff.c: 1207:  return val;
 15802   00AF4C  C087  F077         	movff	get_fat@val,?_get_fat
 15803   00AF50  C088  F078         	movff	get_fat@val+1,?_get_fat+1
 15804   00AF54  C089  F079         	movff	get_fat@val+2,?_get_fat+2
 15805   00AF58  C08A  F07A         	movff	get_fat@val+3,?_get_fat+3
 15806   00AF5C  0012               	return		;funcret
 15807   00AF5E                     __end_of_get_fat:
 15808                           	callstack 0
 15809                           
 15810 ;; *************** function _ld_word *****************
 15811 ;; Defined at:
 15812 ;;		line 572 in file "mcc_generated_files/fatfs/ff.c"
 15813 ;; Parameters:    Size  Location     Type
 15814 ;;  ptr             2    0[COMRAM] PTR const unsigned char 
 15815 ;;		 -> drive.win(512), FatFs.win(512), FatFs(563), drive(563), 
 15816 ;;		 -> NULL(0), 
 15817 ;; Auto vars:     Size  Location     Type
 15818 ;;  rv              2    5[COMRAM] unsigned short 
 15819 ;; Return value:  Size  Location     Type
 15820 ;;                  2    0[COMRAM] unsigned short 
 15821 ;; Registers used:
 15822 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15823 ;; Tracked objects:
 15824 ;;		On entry : 0/0
 15825 ;;		On exit  : 0/0
 15826 ;;		Unchanged: 0/0
 15827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15828 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15829 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15830 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15831 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15832 ;;Total ram usage:        7 bytes
 15833 ;; Hardware stack levels used: 1
 15834 ;; This function calls:
 15835 ;;		Nothing
 15836 ;; This function is called by:
 15837 ;;		_get_fat
 15838 ;;		_ld_clust
 15839 ;;		_check_fs
 15840 ;;		_find_volume
 15841 ;;		_get_fileinfo
 15842 ;;		_f_getfree
 15843 ;; This function uses a non-reentrant model
 15844 ;;
 15845                           
 15846                           	psect	text33
 15847   007DA2                     __ptext33:
 15848                           	callstack 0
 15849   007DA2                     _ld_word:
 15850                           	callstack 26
 15851   007DA2                     
 15852                           ;mcc_generated_files/fatfs/ff.c: 572: static WORD ld_word (const BYTE* ptr);mcc_generate
      +                          d_files/fatfs/ff.c: 573: {;mcc_generated_files/fatfs/ff.c: 574:  WORD rv;;mcc_generated_
      +                          files/fatfs/ff.c: 576:  rv = ptr[1];
 15853   007DA2  EE20 F001          	lfsr	2,1
 15854   007DA6  5001               	movf	ld_word@ptr^0,w,c
 15855   007DA8  26D9               	addwf	fsr2l,f,c
 15856   007DAA  5002               	movf	(ld_word@ptr+1)^0,w,c
 15857   007DAC  22DA               	addwfc	fsr2h,f,c
 15858   007DAE  50DF               	movf	indf2,w,c
 15859   007DB0  6E03               	movwf	??_ld_word^0,c
 15860   007DB2  5003               	movf	??_ld_word^0,w,c
 15861   007DB4  6E06               	movwf	ld_word@rv^0,c
 15862   007DB6  6A07               	clrf	(ld_word@rv+1)^0,c
 15863                           
 15864                           ;mcc_generated_files/fatfs/ff.c: 577:  rv = rv << 8 | ptr[0];
 15865   007DB8  C001  FFD9         	movff	ld_word@ptr,fsr2l
 15866   007DBC  C002  FFDA         	movff	ld_word@ptr+1,fsr2h
 15867   007DC0  50DF               	movf	indf2,w,c
 15868   007DC2  6E03               	movwf	??_ld_word^0,c
 15869   007DC4  5006               	movf	ld_word@rv^0,w,c
 15870   007DC6  6E04               	movwf	(??_ld_word+1)^0,c
 15871   007DC8  5003               	movf	??_ld_word^0,w,c
 15872   007DCA  6E06               	movwf	ld_word@rv^0,c
 15873   007DCC  C004  F007         	movff	??_ld_word+1,ld_word@rv+1
 15874   007DD0                     
 15875                           ;mcc_generated_files/fatfs/ff.c: 578:  return rv;
 15876   007DD0  C006  F001         	movff	ld_word@rv,?_ld_word
 15877   007DD4  C007  F002         	movff	ld_word@rv+1,?_ld_word+1
 15878   007DD8  0012               	return		;funcret
 15879   007DDA                     __end_of_ld_word:
 15880                           	callstack 0
 15881                           
 15882 ;; *************** function _ld_dword *****************
 15883 ;; Defined at:
 15884 ;;		line 581 in file "mcc_generated_files/fatfs/ff.c"
 15885 ;; Parameters:    Size  Location     Type
 15886 ;;  ptr             2    0[COMRAM] PTR const unsigned char 
 15887 ;;		 -> drive.win(512), FatFs.win(512), FatFs(563), drive(563), 
 15888 ;;		 -> NULL(0), 
 15889 ;; Auto vars:     Size  Location     Type
 15890 ;;  rv              4    9[COMRAM] unsigned long 
 15891 ;; Return value:  Size  Location     Type
 15892 ;;                  4    0[COMRAM] unsigned long 
 15893 ;; Registers used:
 15894 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15895 ;; Tracked objects:
 15896 ;;		On entry : 0/0
 15897 ;;		On exit  : 0/0
 15898 ;;		Unchanged: 0/0
 15899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15900 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15901 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15902 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15903 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15904 ;;Total ram usage:       13 bytes
 15905 ;; Hardware stack levels used: 1
 15906 ;; This function calls:
 15907 ;;		Nothing
 15908 ;; This function is called by:
 15909 ;;		_get_fat
 15910 ;;		_put_fat
 15911 ;;		_find_volume
 15912 ;;		_f_open
 15913 ;;		_get_fileinfo
 15914 ;;		_f_getfree
 15915 ;; This function uses a non-reentrant model
 15916 ;;
 15917                           
 15918                           	psect	text34
 15919   0087EA                     __ptext34:
 15920                           	callstack 0
 15921   0087EA                     _ld_dword:
 15922                           	callstack 26
 15923   0087EA                     
 15924                           ;mcc_generated_files/fatfs/ff.c: 581: static DWORD ld_dword (const BYTE* ptr);mcc_genera
      +                          ted_files/fatfs/ff.c: 582: {;mcc_generated_files/fatfs/ff.c: 583:  DWORD rv;;mcc_generat
      +                          ed_files/fatfs/ff.c: 585:  rv = ptr[3];
 15925   0087EA  EE20 F003          	lfsr	2,3
 15926   0087EE  5001               	movf	ld_dword@ptr^0,w,c
 15927   0087F0  26D9               	addwf	fsr2l,f,c
 15928   0087F2  5002               	movf	(ld_dword@ptr+1)^0,w,c
 15929   0087F4  22DA               	addwfc	fsr2h,f,c
 15930   0087F6  50DF               	movf	indf2,w,c
 15931   0087F8  6E05               	movwf	??_ld_dword^0,c
 15932   0087FA  5005               	movf	??_ld_dword^0,w,c
 15933   0087FC  6E0A               	movwf	ld_dword@rv^0,c
 15934   0087FE  6A0B               	clrf	(ld_dword@rv+1)^0,c
 15935   008800  6A0C               	clrf	(ld_dword@rv+2)^0,c
 15936   008802  6A0D               	clrf	(ld_dword@rv+3)^0,c
 15937                           
 15938                           ;mcc_generated_files/fatfs/ff.c: 586:  rv = rv << 8 | ptr[2];
 15939   008804  EE20 F002          	lfsr	2,2
 15940   008808  5001               	movf	ld_dword@ptr^0,w,c
 15941   00880A  26D9               	addwf	fsr2l,f,c
 15942   00880C  5002               	movf	(ld_dword@ptr+1)^0,w,c
 15943   00880E  22DA               	addwfc	fsr2h,f,c
 15944   008810  50DF               	movf	indf2,w,c
 15945   008812  6E05               	movwf	??_ld_dword^0,c
 15946   008814  5005               	movf	??_ld_dword^0,w,c
 15947   008816  C00A  F007         	movff	ld_dword@rv,??_ld_dword+2
 15948   00881A  C00B  F008         	movff	ld_dword@rv+1,??_ld_dword+3
 15949   00881E  C00C  F009         	movff	ld_dword@rv+2,??_ld_dword+4
 15950   008822  6A06               	clrf	(??_ld_dword+1)^0,c
 15951   008824  1006               	iorwf	(??_ld_dword+1)^0,w,c
 15952   008826  6E0A               	movwf	ld_dword@rv^0,c
 15953   008828  5007               	movf	(??_ld_dword+2)^0,w,c
 15954   00882A  6E0B               	movwf	(ld_dword@rv+1)^0,c
 15955   00882C  5008               	movf	(??_ld_dword+3)^0,w,c
 15956   00882E  6E0C               	movwf	(ld_dword@rv+2)^0,c
 15957   008830  5009               	movf	(??_ld_dword+4)^0,w,c
 15958   008832  6E0D               	movwf	(ld_dword@rv+3)^0,c
 15959                           
 15960                           ;mcc_generated_files/fatfs/ff.c: 587:  rv = rv << 8 | ptr[1];
 15961   008834  EE20 F001          	lfsr	2,1
 15962   008838  5001               	movf	ld_dword@ptr^0,w,c
 15963   00883A  26D9               	addwf	fsr2l,f,c
 15964   00883C  5002               	movf	(ld_dword@ptr+1)^0,w,c
 15965   00883E  22DA               	addwfc	fsr2h,f,c
 15966   008840  50DF               	movf	indf2,w,c
 15967   008842  6E05               	movwf	??_ld_dword^0,c
 15968   008844  5005               	movf	??_ld_dword^0,w,c
 15969   008846  C00A  F007         	movff	ld_dword@rv,??_ld_dword+2
 15970   00884A  C00B  F008         	movff	ld_dword@rv+1,??_ld_dword+3
 15971   00884E  C00C  F009         	movff	ld_dword@rv+2,??_ld_dword+4
 15972   008852  6A06               	clrf	(??_ld_dword+1)^0,c
 15973   008854  1006               	iorwf	(??_ld_dword+1)^0,w,c
 15974   008856  6E0A               	movwf	ld_dword@rv^0,c
 15975   008858  5007               	movf	(??_ld_dword+2)^0,w,c
 15976   00885A  6E0B               	movwf	(ld_dword@rv+1)^0,c
 15977   00885C  5008               	movf	(??_ld_dword+3)^0,w,c
 15978   00885E  6E0C               	movwf	(ld_dword@rv+2)^0,c
 15979   008860  5009               	movf	(??_ld_dword+4)^0,w,c
 15980   008862  6E0D               	movwf	(ld_dword@rv+3)^0,c
 15981                           
 15982                           ;mcc_generated_files/fatfs/ff.c: 588:  rv = rv << 8 | ptr[0];
 15983   008864  C001  FFD9         	movff	ld_dword@ptr,fsr2l
 15984   008868  C002  FFDA         	movff	ld_dword@ptr+1,fsr2h
 15985   00886C  50DF               	movf	indf2,w,c
 15986   00886E  6E05               	movwf	??_ld_dword^0,c
 15987   008870  5005               	movf	??_ld_dword^0,w,c
 15988   008872  C00A  F007         	movff	ld_dword@rv,??_ld_dword+2
 15989   008876  C00B  F008         	movff	ld_dword@rv+1,??_ld_dword+3
 15990   00887A  C00C  F009         	movff	ld_dword@rv+2,??_ld_dword+4
 15991   00887E  6A06               	clrf	(??_ld_dword+1)^0,c
 15992   008880  1006               	iorwf	(??_ld_dword+1)^0,w,c
 15993   008882  6E0A               	movwf	ld_dword@rv^0,c
 15994   008884  5007               	movf	(??_ld_dword+2)^0,w,c
 15995   008886  6E0B               	movwf	(ld_dword@rv+1)^0,c
 15996   008888  5008               	movf	(??_ld_dword+3)^0,w,c
 15997   00888A  6E0C               	movwf	(ld_dword@rv+2)^0,c
 15998   00888C  5009               	movf	(??_ld_dword+4)^0,w,c
 15999   00888E  6E0D               	movwf	(ld_dword@rv+3)^0,c
 16000   008890                     
 16001                           ;mcc_generated_files/fatfs/ff.c: 589:  return rv;
 16002   008890  C00A  F001         	movff	ld_dword@rv,?_ld_dword
 16003   008894  C00B  F002         	movff	ld_dword@rv+1,?_ld_dword+1
 16004   008898  C00C  F003         	movff	ld_dword@rv+2,?_ld_dword+2
 16005   00889C  C00D  F004         	movff	ld_dword@rv+3,?_ld_dword+3
 16006   0088A0  0012               	return		;funcret
 16007   0088A2                     __end_of_ld_dword:
 16008                           	callstack 0
 16009                           
 16010 ;; *************** function _clst2sect *****************
 16011 ;; Defined at:
 16012 ;;		line 1124 in file "mcc_generated_files/fatfs/ff.c"
 16013 ;; Parameters:    Size  Location     Type
 16014 ;;  fs              2   12[COMRAM] PTR struct .
 16015 ;;		 -> FatFs(563), drive(563), NULL(0), 
 16016 ;;  clst            4   14[COMRAM] unsigned long 
 16017 ;; Auto vars:     Size  Location     Type
 16018 ;;		None
 16019 ;; Return value:  Size  Location     Type
 16020 ;;                  4   12[COMRAM] unsigned long 
 16021 ;; Registers used:
 16022 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16023 ;; Tracked objects:
 16024 ;;		On entry : 0/0
 16025 ;;		On exit  : 0/0
 16026 ;;		Unchanged: 0/0
 16027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16028 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16030 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16031 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16032 ;;Total ram usage:       12 bytes
 16033 ;; Hardware stack levels used: 1
 16034 ;; Hardware stack levels required when called: 1
 16035 ;; This function calls:
 16036 ;;		___lmul
 16037 ;; This function is called by:
 16038 ;;		_dir_clear
 16039 ;;		_dir_sdi
 16040 ;;		_dir_next
 16041 ;;		_f_open
 16042 ;;		_f_write
 16043 ;;		_f_lseek
 16044 ;;		_f_read
 16045 ;;		_f_rename
 16046 ;; This function uses a non-reentrant model
 16047 ;;
 16048                           
 16049                           	psect	text35
 16050   00896E                     __ptext35:
 16051                           	callstack 0
 16052   00896E                     _clst2sect:
 16053                           	callstack 27
 16054   00896E                     
 16055                           ;mcc_generated_files/fatfs/ff.c: 1125:  FATFS* fs,;mcc_generated_files/fatfs/ff.c: 1126:
      +                            DWORD clst;mcc_generated_files/fatfs/ff.c: 1128: {;mcc_generated_files/fatfs/ff.c: 112
      +                          9:  clst -= 2;
 16056   00896E  0E02               	movlw	2
 16057   008970  5E0F               	subwf	clst2sect@clst^0,f,c
 16058   008972  0E00               	movlw	0
 16059   008974  5A10               	subwfb	(clst2sect@clst+1)^0,f,c
 16060   008976  5A11               	subwfb	(clst2sect@clst+2)^0,f,c
 16061   008978  5A12               	subwfb	(clst2sect@clst+3)^0,f,c
 16062   00897A                     
 16063                           ;mcc_generated_files/fatfs/ff.c: 1130:  if (clst >= fs->n_fatent - 2) return 0;
 16064   00897A  EE20 F017          	lfsr	2,23
 16065   00897E  500D               	movf	clst2sect@fs^0,w,c
 16066   008980  26D9               	addwf	fsr2l,f,c
 16067   008982  500E               	movf	(clst2sect@fs+1)^0,w,c
 16068   008984  22DA               	addwfc	fsr2h,f,c
 16069   008986  0EFE               	movlw	254
 16070   008988  24DE               	addwf	postinc2,w,c
 16071   00898A  6E13               	movwf	??_clst2sect^0,c
 16072   00898C  0EFF               	movlw	255
 16073   00898E  20DE               	addwfc	postinc2,w,c
 16074   008990  6E14               	movwf	(??_clst2sect+1)^0,c
 16075   008992  0EFF               	movlw	255
 16076   008994  20DE               	addwfc	postinc2,w,c
 16077   008996  6E15               	movwf	(??_clst2sect+2)^0,c
 16078   008998  0EFF               	movlw	255
 16079   00899A  20DE               	addwfc	postinc2,w,c
 16080   00899C  6E16               	movwf	(??_clst2sect+3)^0,c
 16081   00899E  5013               	movf	??_clst2sect^0,w,c
 16082   0089A0  5C0F               	subwf	clst2sect@clst^0,w,c
 16083   0089A2  5014               	movf	(??_clst2sect+1)^0,w,c
 16084   0089A4  5810               	subwfb	(clst2sect@clst+1)^0,w,c
 16085   0089A6  5015               	movf	(??_clst2sect+2)^0,w,c
 16086   0089A8  5811               	subwfb	(clst2sect@clst+2)^0,w,c
 16087   0089AA  5016               	movf	(??_clst2sect+3)^0,w,c
 16088   0089AC  5812               	subwfb	(clst2sect@clst+3)^0,w,c
 16089   0089AE  A0D8               	btfss	status,0,c
 16090   0089B0  EFDC  F044         	goto	u8321
 16091   0089B4  EFDE  F044         	goto	u8320
 16092   0089B8                     u8321:
 16093   0089B8  EFE8  F044         	goto	l7140
 16094   0089BC                     u8320:
 16095   0089BC  0E00               	movlw	0
 16096   0089BE  6E0D               	movwf	?_clst2sect^0,c
 16097   0089C0  0E00               	movlw	0
 16098   0089C2  6E0E               	movwf	(?_clst2sect+1)^0,c
 16099   0089C4  0E00               	movlw	0
 16100   0089C6  6E0F               	movwf	(?_clst2sect+2)^0,c
 16101   0089C8  0E00               	movlw	0
 16102   0089CA  6E10               	movwf	(?_clst2sect+3)^0,c
 16103   0089CC  EF1C  F045         	goto	l207
 16104   0089D0                     l7140:
 16105                           
 16106                           ;mcc_generated_files/fatfs/ff.c: 1131:  return fs->database + fs->csize * clst;
 16107   0089D0  EE20 F02B          	lfsr	2,43
 16108   0089D4  500D               	movf	clst2sect@fs^0,w,c
 16109   0089D6  26D9               	addwf	fsr2l,f,c
 16110   0089D8  500E               	movf	(clst2sect@fs+1)^0,w,c
 16111   0089DA  22DA               	addwfc	fsr2h,f,c
 16112   0089DC  CFDE F013          	movff	postinc2,??_clst2sect
 16113   0089E0  CFDE F014          	movff	postinc2,??_clst2sect+1
 16114   0089E4  CFDE F015          	movff	postinc2,??_clst2sect+2
 16115   0089E8  CFDE F016          	movff	postinc2,??_clst2sect+3
 16116   0089EC  EE20 F009          	lfsr	2,9
 16117   0089F0  500D               	movf	clst2sect@fs^0,w,c
 16118   0089F2  26D9               	addwf	fsr2l,f,c
 16119   0089F4  500E               	movf	(clst2sect@fs+1)^0,w,c
 16120   0089F6  22DA               	addwfc	fsr2h,f,c
 16121   0089F8  CFDE F017          	movff	postinc2,??_clst2sect+4
 16122   0089FC  CFDD F018          	movff	postdec2,??_clst2sect+5
 16123   008A00  C017  F001         	movff	??_clst2sect+4,___lmul@multiplier
 16124   008A04  C018  F002         	movff	??_clst2sect+5,___lmul@multiplier+1
 16125   008A08  6A03               	clrf	(___lmul@multiplier+2)^0,c
 16126   008A0A  6A04               	clrf	(___lmul@multiplier+3)^0,c
 16127   008A0C  C00F  F005         	movff	clst2sect@clst,___lmul@multiplicand
 16128   008A10  C010  F006         	movff	clst2sect@clst+1,___lmul@multiplicand+1
 16129   008A14  C011  F007         	movff	clst2sect@clst+2,___lmul@multiplicand+2
 16130   008A18  C012  F008         	movff	clst2sect@clst+3,___lmul@multiplicand+3
 16131   008A1C  ECB4  F040         	call	___lmul	;wreg free
 16132   008A20  5013               	movf	??_clst2sect^0,w,c
 16133   008A22  2401               	addwf	?___lmul^0,w,c
 16134   008A24  6E0D               	movwf	?_clst2sect^0,c
 16135   008A26  5014               	movf	(??_clst2sect+1)^0,w,c
 16136   008A28  2002               	addwfc	(?___lmul+1)^0,w,c
 16137   008A2A  6E0E               	movwf	(?_clst2sect+1)^0,c
 16138   008A2C  5015               	movf	(??_clst2sect+2)^0,w,c
 16139   008A2E  2003               	addwfc	(?___lmul+2)^0,w,c
 16140   008A30  6E0F               	movwf	(?_clst2sect+2)^0,c
 16141   008A32  5016               	movf	(??_clst2sect+3)^0,w,c
 16142   008A34  2004               	addwfc	(?___lmul+3)^0,w,c
 16143   008A36  6E10               	movwf	(?_clst2sect+3)^0,c
 16144   008A38                     l207:
 16145   008A38  0012               	return		;funcret
 16146   008A3A                     __end_of_clst2sect:
 16147                           	callstack 0
 16148                           
 16149 ;; *************** function ___lmul *****************
 16150 ;; Defined at:
 16151 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
 16152 ;; Parameters:    Size  Location     Type
 16153 ;;  multiplier      4    0[COMRAM] unsigned long 
 16154 ;;  multiplicand    4    4[COMRAM] unsigned long 
 16155 ;; Auto vars:     Size  Location     Type
 16156 ;;  product         4    8[COMRAM] unsigned long 
 16157 ;; Return value:  Size  Location     Type
 16158 ;;                  4    0[COMRAM] unsigned long 
 16159 ;; Registers used:
 16160 ;;		wreg, status,2, status,0
 16161 ;; Tracked objects:
 16162 ;;		On entry : 0/0
 16163 ;;		On exit  : 0/0
 16164 ;;		Unchanged: 0/0
 16165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16166 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16167 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16169 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16170 ;;Total ram usage:       12 bytes
 16171 ;; Hardware stack levels used: 1
 16172 ;; This function calls:
 16173 ;;		Nothing
 16174 ;; This function is called by:
 16175 ;;		_clst2sect
 16176 ;;		_find_volume
 16177 ;;		_SD_SPI_MediaInitialize
 16178 ;; This function uses a non-reentrant model
 16179 ;;
 16180                           
 16181                           	psect	text36
 16182   008168                     __ptext36:
 16183                           	callstack 0
 16184   008168                     ___lmul:
 16185                           	callstack 27
 16186   008168  0E00               	movlw	0
 16187   00816A  6E09               	movwf	___lmul@product^0,c
 16188   00816C  0E00               	movlw	0
 16189   00816E  6E0A               	movwf	(___lmul@product+1)^0,c
 16190   008170  0E00               	movlw	0
 16191   008172  6E0B               	movwf	(___lmul@product+2)^0,c
 16192   008174  0E00               	movlw	0
 16193   008176  6E0C               	movwf	(___lmul@product+3)^0,c
 16194   008178                     l7116:
 16195   008178  A001               	btfss	___lmul@multiplier^0,0,c
 16196   00817A  EFC1  F040         	goto	u8291
 16197   00817E  EFC3  F040         	goto	u8290
 16198   008182                     u8291:
 16199   008182  EFCB  F040         	goto	l7120
 16200   008186                     u8290:
 16201   008186  5005               	movf	___lmul@multiplicand^0,w,c
 16202   008188  2609               	addwf	___lmul@product^0,f,c
 16203   00818A  5006               	movf	(___lmul@multiplicand+1)^0,w,c
 16204   00818C  220A               	addwfc	(___lmul@product+1)^0,f,c
 16205   00818E  5007               	movf	(___lmul@multiplicand+2)^0,w,c
 16206   008190  220B               	addwfc	(___lmul@product+2)^0,f,c
 16207   008192  5008               	movf	(___lmul@multiplicand+3)^0,w,c
 16208   008194  220C               	addwfc	(___lmul@product+3)^0,f,c
 16209   008196                     l7120:
 16210   008196  90D8               	bcf	status,0,c
 16211   008198  3605               	rlcf	___lmul@multiplicand^0,f,c
 16212   00819A  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
 16213   00819C  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
 16214   00819E  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
 16215   0081A0  90D8               	bcf	status,0,c
 16216   0081A2  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
 16217   0081A4  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
 16218   0081A6  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
 16219   0081A8  3201               	rrcf	___lmul@multiplier^0,f,c
 16220   0081AA  5001               	movf	___lmul@multiplier^0,w,c
 16221   0081AC  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
 16222   0081AE  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
 16223   0081B0  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
 16224   0081B2  A4D8               	btfss	status,2,c
 16225   0081B4  EFDE  F040         	goto	u8301
 16226   0081B8  EFE0  F040         	goto	u8300
 16227   0081BC                     u8301:
 16228   0081BC  EFBC  F040         	goto	l7116
 16229   0081C0                     u8300:
 16230   0081C0  C009  F001         	movff	___lmul@product,?___lmul
 16231   0081C4  C00A  F002         	movff	___lmul@product+1,?___lmul+1
 16232   0081C8  C00B  F003         	movff	___lmul@product+2,?___lmul+2
 16233   0081CC  C00C  F004         	movff	___lmul@product+3,?___lmul+3
 16234   0081D0  0012               	return		;funcret
 16235   0081D2                     __end_of___lmul:
 16236                           	callstack 0
 16237                           
 16238 ;; *************** function ___lldiv *****************
 16239 ;; Defined at:
 16240 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__lldiv.c"
 16241 ;; Parameters:    Size  Location     Type
 16242 ;;  dividend        4    0[COMRAM] unsigned long 
 16243 ;;  divisor         4    4[COMRAM] unsigned long 
 16244 ;; Auto vars:     Size  Location     Type
 16245 ;;  quotient        4    8[COMRAM] unsigned long 
 16246 ;;  counter         1   12[COMRAM] unsigned char 
 16247 ;; Return value:  Size  Location     Type
 16248 ;;                  4    0[COMRAM] unsigned long 
 16249 ;; Registers used:
 16250 ;;		wreg, status,2, status,0
 16251 ;; Tracked objects:
 16252 ;;		On entry : 0/0
 16253 ;;		On exit  : 0/0
 16254 ;;		Unchanged: 0/0
 16255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16256 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16257 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16259 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16260 ;;Total ram usage:       13 bytes
 16261 ;; Hardware stack levels used: 1
 16262 ;; This function calls:
 16263 ;;		Nothing
 16264 ;; This function is called by:
 16265 ;;		_find_volume
 16266 ;;		_f_lseek
 16267 ;;		_f_printf
 16268 ;; This function uses a non-reentrant model
 16269 ;;
 16270                           
 16271                           	psect	text37
 16272   008530                     __ptext37:
 16273                           	callstack 0
 16274   008530                     ___lldiv:
 16275                           	callstack 27
 16276   008530  0E00               	movlw	0
 16277   008532  6E09               	movwf	___lldiv@quotient^0,c
 16278   008534  0E00               	movlw	0
 16279   008536  6E0A               	movwf	(___lldiv@quotient+1)^0,c
 16280   008538  0E00               	movlw	0
 16281   00853A  6E0B               	movwf	(___lldiv@quotient+2)^0,c
 16282   00853C  0E00               	movlw	0
 16283   00853E  6E0C               	movwf	(___lldiv@quotient+3)^0,c
 16284   008540  5005               	movf	___lldiv@divisor^0,w,c
 16285   008542  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
 16286   008544  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
 16287   008546  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
 16288   008548  B4D8               	btfsc	status,2,c
 16289   00854A  EFA9  F042         	goto	u10431
 16290   00854E  EFAB  F042         	goto	u10430
 16291   008552                     u10431:
 16292   008552  EFE1  F042         	goto	l1485
 16293   008556                     u10430:
 16294   008556  0E01               	movlw	1
 16295   008558  6E0D               	movwf	___lldiv@counter^0,c
 16296   00855A  EFB5  F042         	goto	l8282
 16297   00855E                     l8280:
 16298   00855E  90D8               	bcf	status,0,c
 16299   008560  3605               	rlcf	___lldiv@divisor^0,f,c
 16300   008562  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
 16301   008564  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
 16302   008566  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
 16303   008568  2A0D               	incf	___lldiv@counter^0,f,c
 16304   00856A                     l8282:
 16305   00856A  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
 16306   00856C  EFBA  F042         	goto	u10441
 16307   008570  EFBC  F042         	goto	u10440
 16308   008574                     u10441:
 16309   008574  EFAF  F042         	goto	l8280
 16310   008578                     u10440:
 16311   008578                     l8284:
 16312   008578  90D8               	bcf	status,0,c
 16313   00857A  3609               	rlcf	___lldiv@quotient^0,f,c
 16314   00857C  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
 16315   00857E  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
 16316   008580  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
 16317   008582  5005               	movf	___lldiv@divisor^0,w,c
 16318   008584  5C01               	subwf	___lldiv@dividend^0,w,c
 16319   008586  5006               	movf	(___lldiv@divisor+1)^0,w,c
 16320   008588  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
 16321   00858A  5007               	movf	(___lldiv@divisor+2)^0,w,c
 16322   00858C  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
 16323   00858E  5008               	movf	(___lldiv@divisor+3)^0,w,c
 16324   008590  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
 16325   008592  A0D8               	btfss	status,0,c
 16326   008594  EFCE  F042         	goto	u10451
 16327   008598  EFD0  F042         	goto	u10450
 16328   00859C                     u10451:
 16329   00859C  EFD9  F042         	goto	l8292
 16330   0085A0                     u10450:
 16331   0085A0  5005               	movf	___lldiv@divisor^0,w,c
 16332   0085A2  5E01               	subwf	___lldiv@dividend^0,f,c
 16333   0085A4  5006               	movf	(___lldiv@divisor+1)^0,w,c
 16334   0085A6  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
 16335   0085A8  5007               	movf	(___lldiv@divisor+2)^0,w,c
 16336   0085AA  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
 16337   0085AC  5008               	movf	(___lldiv@divisor+3)^0,w,c
 16338   0085AE  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
 16339   0085B0  8009               	bsf	___lldiv@quotient^0,0,c
 16340   0085B2                     l8292:
 16341   0085B2  90D8               	bcf	status,0,c
 16342   0085B4  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
 16343   0085B6  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
 16344   0085B8  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
 16345   0085BA  3205               	rrcf	___lldiv@divisor^0,f,c
 16346   0085BC  2E0D               	decfsz	___lldiv@counter^0,f,c
 16347   0085BE  EFBC  F042         	goto	l8284
 16348   0085C2                     l1485:
 16349   0085C2  C009  F001         	movff	___lldiv@quotient,?___lldiv
 16350   0085C6  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 16351   0085CA  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 16352   0085CE  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 16353   0085D2  0012               	return		;funcret
 16354   0085D4                     __end_of___lldiv:
 16355                           	callstack 0
 16356                           
 16357 ;; *************** function _f_close *****************
 16358 ;; Defined at:
 16359 ;;		line 4012 in file "mcc_generated_files/fatfs/ff.c"
 16360 ;; Parameters:    Size  Location     Type
 16361 ;;  fp              2   31[BANK0 ] PTR struct .
 16362 ;;		 -> Fil(546), file(546), 
 16363 ;; Auto vars:     Size  Location     Type
 16364 ;;  fs              2   33[BANK0 ] PTR struct .
 16365 ;;		 -> FatFs(563), drive(563), NULL(0), 
 16366 ;;  res             1   35[BANK0 ] enum E68
 16367 ;; Return value:  Size  Location     Type
 16368 ;;                  1    wreg      enum E68
 16369 ;; Registers used:
 16370 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 16371 ;; Tracked objects:
 16372 ;;		On entry : 0/0
 16373 ;;		On exit  : 0/0
 16374 ;;		Unchanged: 0/0
 16375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16376 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16377 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16379 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16380 ;;Total ram usage:        5 bytes
 16381 ;; Hardware stack levels used: 1
 16382 ;; Hardware stack levels required when called: 8
 16383 ;; This function calls:
 16384 ;;		_f_sync
 16385 ;;		_validate
 16386 ;; This function is called by:
 16387 ;;		_write_to_file
 16388 ;;		_FatFsDemo_Tasks
 16389 ;; This function uses a non-reentrant model
 16390 ;;
 16391                           
 16392                           	psect	text38
 16393   00804A                     __ptext38:
 16394                           	callstack 0
 16395   00804A                     _f_close:
 16396                           	callstack 21
 16397   00804A                     
 16398                           ;mcc_generated_files/fatfs/ff.c: 4013:  FIL* fp;mcc_generated_files/fatfs/ff.c: 4015: {;
      +                          mcc_generated_files/fatfs/ff.c: 4016:  FRESULT res;;mcc_generated_files/fatfs/ff.c: 4017
      +                          :  FATFS *fs;;mcc_generated_files/fatfs/ff.c: 4020:  res = f_sync(fp);
 16399   00804A  C07F  F078         	movff	f_close@fp,f_sync@fp
 16400   00804E  C080  F079         	movff	f_close@fp+1,f_sync@fp+1
 16401   008052  EC59  F04F         	call	_f_sync	;wreg free
 16402   008056  0100               	movlb	0	; () banked
 16403   008058  6F83               	movwf	f_close@res& (0+255),b
 16404   00805A                     
 16405                           ; BSR set to: 0
 16406                           ;mcc_generated_files/fatfs/ff.c: 4021:  if (res == FR_OK)
 16407   00805A  5183               	movf	f_close@res& (0+255),w,b
 16408   00805C  A4D8               	btfss	status,2,c
 16409   00805E  EF33  F040         	goto	u12061
 16410   008062  EF35  F040         	goto	u12060
 16411   008066                     u12061:
 16412   008066  EF51  F040         	goto	l712
 16413   00806A                     u12060:
 16414   00806A                     
 16415                           ; BSR set to: 0
 16416                           ;mcc_generated_files/fatfs/ff.c: 4023:  {;mcc_generated_files/fatfs/ff.c: 4024:   res = 
      +                          validate(&fp->obj, &fs);
 16417   00806A  C07F  F005         	movff	f_close@fp,validate@obj
 16418   00806E  C080  F006         	movff	f_close@fp+1,validate@obj+1
 16419   008072  0E81               	movlw	low f_close@fs
 16420   008074  6E07               	movwf	validate@rfs^0,c
 16421   008076  0E00               	movlw	high f_close@fs
 16422   008078  6E08               	movwf	(validate@rfs+1)^0,c
 16423   00807A  ECFA  F045         	call	_validate	;wreg free
 16424   00807E  0100               	movlb	0	; () banked
 16425   008080  6F83               	movwf	f_close@res& (0+255),b
 16426   008082                     
 16427                           ; BSR set to: 0
 16428                           ;mcc_generated_files/fatfs/ff.c: 4025:   if (res == FR_OK) {
 16429   008082  5183               	movf	f_close@res& (0+255),w,b
 16430   008084  A4D8               	btfss	status,2,c
 16431   008086  EF47  F040         	goto	u12071
 16432   00808A  EF49  F040         	goto	u12070
 16433   00808E                     u12071:
 16434   00808E  EF51  F040         	goto	l712
 16435   008092                     u12070:
 16436   008092                     
 16437                           ; BSR set to: 0
 16438                           ;mcc_generated_files/fatfs/ff.c: 4030:    fp->obj.fs = 0;
 16439   008092  C07F  FFD9         	movff	f_close@fp,fsr2l
 16440   008096  C080  FFDA         	movff	f_close@fp+1,fsr2h
 16441   00809A  0E00               	movlw	0
 16442   00809C  6EDE               	movwf	postinc2,c
 16443   00809E  0E00               	movlw	0
 16444   0080A0  6EDD               	movwf	postdec2,c
 16445   0080A2                     l712:
 16446                           
 16447                           ; BSR set to: 0
 16448   0080A2  0012               	return		;funcret
 16449   0080A4                     __end_of_f_close:
 16450                           	callstack 0
 16451                           
 16452 ;; *************** function _f_sync *****************
 16453 ;; Defined at:
 16454 ;;		line 3931 in file "mcc_generated_files/fatfs/ff.c"
 16455 ;; Parameters:    Size  Location     Type
 16456 ;;  fp              2   24[BANK0 ] PTR struct .
 16457 ;;		 -> Fil(546), file(546), 
 16458 ;; Auto vars:     Size  Location     Type
 16459 ;;  tm              4    0        unsigned long 
 16460 ;;  fs              2   29[BANK0 ] PTR struct .
 16461 ;;		 -> FatFs(563), drive(563), NULL(0), 
 16462 ;;  dir             2   27[BANK0 ] PTR unsigned char 
 16463 ;;		 -> FatFs(563), drive(563), NULL(0), 
 16464 ;;  res             1   26[BANK0 ] enum E68
 16465 ;; Return value:  Size  Location     Type
 16466 ;;                  1    wreg      enum E68
 16467 ;; Registers used:
 16468 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 16469 ;; Tracked objects:
 16470 ;;		On entry : 0/0
 16471 ;;		On exit  : 0/0
 16472 ;;		Unchanged: 0/0
 16473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16474 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16475 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16477 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16478 ;;Total ram usage:        7 bytes
 16479 ;; Hardware stack levels used: 1
 16480 ;; Hardware stack levels required when called: 7
 16481 ;; This function calls:
 16482 ;;		_disk_write
 16483 ;;		_move_window
 16484 ;;		_st_clust
 16485 ;;		_st_dword
 16486 ;;		_st_word
 16487 ;;		_sync_fs
 16488 ;;		_validate
 16489 ;; This function is called by:
 16490 ;;		_f_close
 16491 ;; This function uses a non-reentrant model
 16492 ;;
 16493                           
 16494                           	psect	text39
 16495   009EB2                     __ptext39:
 16496                           	callstack 0
 16497   009EB2                     _f_sync:
 16498                           	callstack 21
 16499   009EB2                     
 16500                           ;mcc_generated_files/fatfs/ff.c: 3932:  FIL* fp;mcc_generated_files/fatfs/ff.c: 3934: {;
      +                          mcc_generated_files/fatfs/ff.c: 3935:  FRESULT res;;mcc_generated_files/fatfs/ff.c: 3936
      +                          :  FATFS *fs;;mcc_generated_files/fatfs/ff.c: 3937:  DWORD tm;;mcc_generated_files/fatfs
      +                          /ff.c: 3938:  BYTE *dir;;mcc_generated_files/fatfs/ff.c: 3941:  res = validate(&fp->obj,
      +                           &fs);
 16501   009EB2  C078  F005         	movff	f_sync@fp,validate@obj
 16502   009EB6  C079  F006         	movff	f_sync@fp+1,validate@obj+1
 16503   009EBA  0E7D               	movlw	low f_sync@fs
 16504   009EBC  6E07               	movwf	validate@rfs^0,c
 16505   009EBE  0E00               	movlw	high f_sync@fs
 16506   009EC0  6E08               	movwf	(validate@rfs+1)^0,c
 16507   009EC2  ECFA  F045         	call	_validate	;wreg free
 16508   009EC6  0100               	movlb	0	; () banked
 16509   009EC8  6F7A               	movwf	f_sync@res& (0+255),b
 16510   009ECA                     
 16511                           ; BSR set to: 0
 16512                           ;mcc_generated_files/fatfs/ff.c: 3942:  if (res == FR_OK) {
 16513   009ECA  517A               	movf	f_sync@res& (0+255),w,b
 16514   009ECC  A4D8               	btfss	status,2,c
 16515   009ECE  EF6B  F04F         	goto	u11191
 16516   009ED2  EF6D  F04F         	goto	u11190
 16517   009ED6                     u11191:
 16518   009ED6  EF56  F050         	goto	l8758
 16519   009EDA                     u11190:
 16520   009EDA                     
 16521                           ; BSR set to: 0
 16522                           ;mcc_generated_files/fatfs/ff.c: 3943:   if (fp->flag & 0x40) {
 16523   009EDA  EE20 F00E          	lfsr	2,14
 16524   009EDE  5178               	movf	f_sync@fp& (0+255),w,b
 16525   009EE0  26D9               	addwf	fsr2l,f,c
 16526   009EE2  5179               	movf	(f_sync@fp+1)& (0+255),w,b
 16527   009EE4  22DA               	addwfc	fsr2h,f,c
 16528   009EE6  ACDF               	btfss	indf2,6,c
 16529   009EE8  EF78  F04F         	goto	u11201
 16530   009EEC  EF7A  F04F         	goto	u11200
 16531   009EF0                     u11201:
 16532   009EF0  EF56  F050         	goto	l8758
 16533   009EF4                     u11200:
 16534   009EF4                     
 16535                           ; BSR set to: 0
 16536                           ;mcc_generated_files/fatfs/ff.c: 3945:    if (fp->flag & 0x80) {
 16537   009EF4  EE20 F00E          	lfsr	2,14
 16538   009EF8  5178               	movf	f_sync@fp& (0+255),w,b
 16539   009EFA  26D9               	addwf	fsr2l,f,c
 16540   009EFC  5179               	movf	(f_sync@fp+1)& (0+255),w,b
 16541   009EFE  22DA               	addwfc	fsr2h,f,c
 16542   009F00  AEDF               	btfss	indf2,7,c
 16543   009F02  EF85  F04F         	goto	u11211
 16544   009F06  EF87  F04F         	goto	u11210
 16545   009F0A                     u11211:
 16546   009F0A  EFBC  F04F         	goto	l8738
 16547   009F0E                     u11210:
 16548   009F0E                     
 16549                           ; BSR set to: 0
 16550                           ;mcc_generated_files/fatfs/ff.c: 3946:     if (disk_write(fs->pdrv, fp->buf, fp->sect, 1
      +                          ) != RES_OK) return FR_DISK_ERR;
 16551   009F0E  0E22               	movlw	34
 16552   009F10  2578               	addwf	f_sync@fp& (0+255),w,b
 16553   009F12  6E4D               	movwf	disk_write@buff^0,c
 16554   009F14  0E00               	movlw	0
 16555   009F16  2179               	addwfc	(f_sync@fp+1)& (0+255),w,b
 16556   009F18  6E4E               	movwf	(disk_write@buff+1)^0,c
 16557   009F1A  EE20 F018          	lfsr	2,24
 16558   009F1E  5178               	movf	f_sync@fp& (0+255),w,b
 16559   009F20  26D9               	addwf	fsr2l,f,c
 16560   009F22  5179               	movf	(f_sync@fp+1)& (0+255),w,b
 16561   009F24  22DA               	addwfc	fsr2h,f,c
 16562   009F26  CFDE F04F          	movff	postinc2,disk_write@sector
 16563   009F2A  CFDE F050          	movff	postinc2,disk_write@sector+1
 16564   009F2E  CFDE F051          	movff	postinc2,disk_write@sector+2
 16565   009F32  CFDE F052          	movff	postinc2,disk_write@sector+3
 16566   009F36  0E00               	movlw	0
 16567   009F38  6E54               	movwf	(disk_write@count+1)^0,c
 16568   009F3A  0E01               	movlw	1
 16569   009F3C  6E53               	movwf	disk_write@count^0,c
 16570   009F3E  EE20 F001          	lfsr	2,1
 16571   009F42  517D               	movf	f_sync@fs& (0+255),w,b
 16572   009F44  26D9               	addwf	fsr2l,f,c
 16573   009F46  517E               	movf	(f_sync@fs+1)& (0+255),w,b
 16574   009F48  22DA               	addwfc	fsr2h,f,c
 16575   009F4A  50DF               	movf	indf2,w,c
 16576   009F4C  EC59  F041         	call	_disk_write
 16577   009F50  0900               	iorlw	0
 16578   009F52  B4D8               	btfsc	status,2,c
 16579   009F54  EFAE  F04F         	goto	u11221
 16580   009F58  EFB0  F04F         	goto	u11220
 16581   009F5C                     u11221:
 16582   009F5C  EFB3  F04F         	goto	l8736
 16583   009F60                     u11220:
 16584   009F60  0E01               	movlw	1
 16585   009F62  EF57  F050         	goto	l706
 16586   009F66                     l8736:
 16587                           
 16588                           ;mcc_generated_files/fatfs/ff.c: 3947:     fp->flag &= (BYTE)~0x80;
 16589   009F66  0100               	movlb	0	; () banked
 16590   009F68  EE20 F00E          	lfsr	2,14
 16591   009F6C  5178               	movf	f_sync@fp& (0+255),w,b
 16592   009F6E  26D9               	addwf	fsr2l,f,c
 16593   009F70  5179               	movf	(f_sync@fp+1)& (0+255),w,b
 16594   009F72  22DA               	addwfc	fsr2h,f,c
 16595   009F74  0E7F               	movlw	127
 16596   009F76  16DF               	andwf	indf2,f,c
 16597   009F78                     l8738:
 16598   009F78                     
 16599                           ; BSR set to: 0
 16600                           ;mcc_generated_files/fatfs/ff.c: 3983:    {;mcc_generated_files/fatfs/ff.c: 3984:     re
      +                          s = move_window(fs, fp->dir_sect);
 16601   009F78  C07D  F070         	movff	f_sync@fs,move_window@fs
 16602   009F7C  C07E  F071         	movff	f_sync@fs+1,move_window@fs+1
 16603   009F80  EE20 F01C          	lfsr	2,28
 16604   009F84  5178               	movf	f_sync@fp& (0+255),w,b
 16605   009F86  26D9               	addwf	fsr2l,f,c
 16606   009F88  5179               	movf	(f_sync@fp+1)& (0+255),w,b
 16607   009F8A  22DA               	addwfc	fsr2h,f,c
 16608   009F8C  CFDE F072          	movff	postinc2,move_window@sector
 16609   009F90  CFDE F073          	movff	postinc2,move_window@sector+1
 16610   009F94  CFDE F074          	movff	postinc2,move_window@sector+2
 16611   009F98  CFDE F075          	movff	postinc2,move_window@sector+3
 16612   009F9C  EC51  F044         	call	_move_window	;wreg free
 16613   009FA0  0100               	movlb	0	; () banked
 16614   009FA2  6F7A               	movwf	f_sync@res& (0+255),b
 16615   009FA4                     
 16616                           ; BSR set to: 0
 16617                           ;mcc_generated_files/fatfs/ff.c: 3985:     if (res == FR_OK) {
 16618   009FA4  517A               	movf	f_sync@res& (0+255),w,b
 16619   009FA6  A4D8               	btfss	status,2,c
 16620   009FA8  EFD8  F04F         	goto	u11231
 16621   009FAC  EFDA  F04F         	goto	u11230
 16622   009FB0                     u11231:
 16623   009FB0  EF56  F050         	goto	l8758
 16624   009FB4                     u11230:
 16625   009FB4                     
 16626                           ; BSR set to: 0
 16627                           ;mcc_generated_files/fatfs/ff.c: 3986:      dir = fp->dir_ptr;
 16628   009FB4  EE20 F020          	lfsr	2,32
 16629   009FB8  5178               	movf	f_sync@fp& (0+255),w,b
 16630   009FBA  26D9               	addwf	fsr2l,f,c
 16631   009FBC  5179               	movf	(f_sync@fp+1)& (0+255),w,b
 16632   009FBE  22DA               	addwfc	fsr2h,f,c
 16633   009FC0  CFDE F07B          	movff	postinc2,f_sync@dir
 16634   009FC4  CFDD F07C          	movff	postdec2,f_sync@dir+1
 16635                           
 16636                           ;mcc_generated_files/fatfs/ff.c: 3987:      dir[11] |= 0x20;
 16637   009FC8  EE20 F00B          	lfsr	2,11
 16638   009FCC  517B               	movf	f_sync@dir& (0+255),w,b
 16639   009FCE  26D9               	addwf	fsr2l,f,c
 16640   009FD0  517C               	movf	(f_sync@dir+1)& (0+255),w,b
 16641   009FD2  22DA               	addwfc	fsr2h,f,c
 16642   009FD4  0E00               	movlw	0
 16643   009FD6  8ADB               	bsf	plusw2,5,c
 16644   009FD8                     
 16645                           ; BSR set to: 0
 16646                           ;mcc_generated_files/fatfs/ff.c: 3988:      st_clust(fp->obj.fs, dir, fp->obj.sclust);
 16647   009FD8  C078  FFD9         	movff	f_sync@fp,fsr2l
 16648   009FDC  C079  FFDA         	movff	f_sync@fp+1,fsr2h
 16649   009FE0  CFDE F005          	movff	postinc2,st_clust@fs
 16650   009FE4  CFDD F006          	movff	postdec2,st_clust@fs+1
 16651   009FE8  C07B  F007         	movff	f_sync@dir,st_clust@dir
 16652   009FEC  C07C  F008         	movff	f_sync@dir+1,st_clust@dir+1
 16653   009FF0  EE20 F006          	lfsr	2,6
 16654   009FF4  5178               	movf	f_sync@fp& (0+255),w,b
 16655   009FF6  26D9               	addwf	fsr2l,f,c
 16656   009FF8  5179               	movf	(f_sync@fp+1)& (0+255),w,b
 16657   009FFA  22DA               	addwfc	fsr2h,f,c
 16658   009FFC  CFDE F009          	movff	postinc2,st_clust@cl
 16659   00A000  CFDE F00A          	movff	postinc2,st_clust@cl+1
 16660   00A004  CFDE F00B          	movff	postinc2,st_clust@cl+2
 16661   00A008  CFDE F00C          	movff	postinc2,st_clust@cl+3
 16662   00A00C  EC2F  F03F         	call	_st_clust	;wreg free
 16663   00A010                     
 16664                           ;mcc_generated_files/fatfs/ff.c: 3989:      st_dword(dir + 28, (DWORD)fp->obj.objsize);
 16665   00A010  0E1C               	movlw	28
 16666   00A012  0100               	movlb	0	; () banked
 16667   00A014  257B               	addwf	f_sync@dir& (0+255),w,b
 16668   00A016  6E01               	movwf	st_dword@ptr^0,c
 16669   00A018  0E00               	movlw	0
 16670   00A01A  217C               	addwfc	(f_sync@dir+1)& (0+255),w,b
 16671   00A01C  6E02               	movwf	(st_dword@ptr+1)^0,c
 16672   00A01E  EE20 F00A          	lfsr	2,10
 16673   00A022  5178               	movf	f_sync@fp& (0+255),w,b
 16674   00A024  26D9               	addwf	fsr2l,f,c
 16675   00A026  5179               	movf	(f_sync@fp+1)& (0+255),w,b
 16676   00A028  22DA               	addwfc	fsr2h,f,c
 16677   00A02A  CFDE F003          	movff	postinc2,st_dword@val
 16678   00A02E  CFDE F004          	movff	postinc2,st_dword@val+1
 16679   00A032  CFDE F005          	movff	postinc2,st_dword@val+2
 16680   00A036  CFDE F006          	movff	postinc2,st_dword@val+3
 16681   00A03A  ECE9  F040         	call	_st_dword	;wreg free
 16682   00A03E                     
 16683                           ;mcc_generated_files/fatfs/ff.c: 3990:      st_dword(dir + 22, tm);
 16684   00A03E  0E16               	movlw	22
 16685   00A040  0100               	movlb	0	; () banked
 16686   00A042  257B               	addwf	f_sync@dir& (0+255),w,b
 16687   00A044  6E01               	movwf	st_dword@ptr^0,c
 16688   00A046  0E00               	movlw	0
 16689   00A048  217C               	addwfc	(f_sync@dir+1)& (0+255),w,b
 16690   00A04A  6E02               	movwf	(st_dword@ptr+1)^0,c
 16691   00A04C  0E00               	movlw	0
 16692   00A04E  6E03               	movwf	st_dword@val^0,c
 16693   00A050  0E00               	movlw	0
 16694   00A052  6E04               	movwf	(st_dword@val+1)^0,c
 16695   00A054  0E46               	movlw	70
 16696   00A056  6E05               	movwf	(st_dword@val+2)^0,c
 16697   00A058  0E56               	movlw	86
 16698   00A05A  6E06               	movwf	(st_dword@val+3)^0,c
 16699   00A05C  ECE9  F040         	call	_st_dword	;wreg free
 16700   00A060                     
 16701                           ;mcc_generated_files/fatfs/ff.c: 3991:      st_word(dir + 18, 0);
 16702   00A060  0E12               	movlw	18
 16703   00A062  0100               	movlb	0	; () banked
 16704   00A064  257B               	addwf	f_sync@dir& (0+255),w,b
 16705   00A066  6E01               	movwf	st_word@ptr^0,c
 16706   00A068  0E00               	movlw	0
 16707   00A06A  217C               	addwfc	(f_sync@dir+1)& (0+255),w,b
 16708   00A06C  6E02               	movwf	(st_word@ptr+1)^0,c
 16709   00A06E  0E00               	movlw	0
 16710   00A070  6E04               	movwf	(st_word@val+1)^0,c
 16711   00A072  0E00               	movlw	0
 16712   00A074  6E03               	movwf	st_word@val^0,c
 16713   00A076  EC8B  F03E         	call	_st_word	;wreg free
 16714                           
 16715                           ;mcc_generated_files/fatfs/ff.c: 3992:      fs->wflag = 1;
 16716   00A07A  0100               	movlb	0	; () banked
 16717   00A07C  EE20 F003          	lfsr	2,3
 16718   00A080  517D               	movf	f_sync@fs& (0+255),w,b
 16719   00A082  26D9               	addwf	fsr2l,f,c
 16720   00A084  517E               	movf	(f_sync@fs+1)& (0+255),w,b
 16721   00A086  22DA               	addwfc	fsr2h,f,c
 16722   00A088  0E01               	movlw	1
 16723   00A08A  6EDF               	movwf	indf2,c
 16724   00A08C                     
 16725                           ; BSR set to: 0
 16726                           ;mcc_generated_files/fatfs/ff.c: 3993:      res = sync_fs(fs);
 16727   00A08C  C07D  F05C         	movff	f_sync@fs,sync_fs@fs
 16728   00A090  C07E  F05D         	movff	f_sync@fs+1,sync_fs@fs+1
 16729   00A094  EC5A  F04E         	call	_sync_fs	;wreg free
 16730   00A098  0100               	movlb	0	; () banked
 16731   00A09A  6F7A               	movwf	f_sync@res& (0+255),b
 16732   00A09C                     
 16733                           ; BSR set to: 0
 16734                           ;mcc_generated_files/fatfs/ff.c: 3994:      fp->flag &= (BYTE)~0x40;
 16735   00A09C  EE20 F00E          	lfsr	2,14
 16736   00A0A0  5178               	movf	f_sync@fp& (0+255),w,b
 16737   00A0A2  26D9               	addwf	fsr2l,f,c
 16738   00A0A4  5179               	movf	(f_sync@fp+1)& (0+255),w,b
 16739   00A0A6  22DA               	addwfc	fsr2h,f,c
 16740   00A0A8  0EBF               	movlw	191
 16741   00A0AA  16DF               	andwf	indf2,f,c
 16742   00A0AC                     l8758:
 16743                           
 16744                           ; BSR set to: 0
 16745                           ;mcc_generated_files/fatfs/ff.c: 4000:  return res;
 16746   00A0AC  517A               	movf	f_sync@res& (0+255),w,b
 16747   00A0AE                     l706:
 16748   00A0AE  0012               	return		;funcret
 16749   00A0B0                     __end_of_f_sync:
 16750                           	callstack 0
 16751                           
 16752 ;; *************** function _validate *****************
 16753 ;; Defined at:
 16754 ;;		line 3428 in file "mcc_generated_files/fatfs/ff.c"
 16755 ;; Parameters:    Size  Location     Type
 16756 ;;  obj             2    4[COMRAM] PTR struct .
 16757 ;;		 -> Fil(546), pb.fp(3), pb.fp(3), pb.fp(3), 
 16758 ;;		 -> file(546), 
 16759 ;;  rfs             2    6[COMRAM] PTR PTR struct .
 16760 ;;		 -> f_truncate@fs(2), f_readdir@fs(2), f_closedir@fs(2), f_lseek@fs(2), 
 16761 ;;		 -> f_close@fs(2), f_sync@fs(2), f_write@fs(2), f_read@fs(2), 
 16762 ;; Auto vars:     Size  Location     Type
 16763 ;;  res             1   14[COMRAM] enum E68
 16764 ;; Return value:  Size  Location     Type
 16765 ;;                  1    wreg      enum E68
 16766 ;; Registers used:
 16767 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16768 ;; Tracked objects:
 16769 ;;		On entry : 0/0
 16770 ;;		On exit  : 0/0
 16771 ;;		Unchanged: 0/0
 16772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16773 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16774 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16775 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16776 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16777 ;;Total ram usage:       11 bytes
 16778 ;; Hardware stack levels used: 1
 16779 ;; Hardware stack levels required when called: 2
 16780 ;; This function calls:
 16781 ;;		_disk_status
 16782 ;; This function is called by:
 16783 ;;		_f_write
 16784 ;;		_f_sync
 16785 ;;		_f_close
 16786 ;;		_f_lseek
 16787 ;;		_f_read
 16788 ;;		_f_closedir
 16789 ;;		_f_readdir
 16790 ;;		_f_truncate
 16791 ;; This function uses a non-reentrant model
 16792 ;;
 16793                           
 16794                           	psect	text40
 16795   008BF4                     __ptext40:
 16796                           	callstack 0
 16797   008BF4                     _validate:
 16798                           	callstack 26
 16799   008BF4                     
 16800                           ;mcc_generated_files/fatfs/ff.c: 3429:  FFOBJID* obj,;mcc_generated_files/fatfs/ff.c: 34
      +                          30:  FATFS** rfs;mcc_generated_files/fatfs/ff.c: 3432: {;mcc_generated_files/fatfs/ff.c:
      +                           3433:  FRESULT res = FR_INVALID_OBJECT;
 16801   008BF4  0E09               	movlw	9
 16802   008BF6  6E0F               	movwf	validate@res^0,c
 16803   008BF8                     
 16804                           ;mcc_generated_files/fatfs/ff.c: 3436:  if (obj && obj->fs && obj->fs->fs_type && obj->i
      +                          d == obj->fs->id) {
 16805   008BF8  5005               	movf	validate@obj^0,w,c
 16806   008BFA  1006               	iorwf	(validate@obj+1)^0,w,c
 16807   008BFC  B4D8               	btfsc	status,2,c
 16808   008BFE  EF03  F046         	goto	u10371
 16809   008C02  EF05  F046         	goto	u10370
 16810   008C06                     u10371:
 16811   008C06  EF59  F046         	goto	l580
 16812   008C0A                     u10370:
 16813   008C0A  C005  FFD9         	movff	validate@obj,fsr2l
 16814   008C0E  C006  FFDA         	movff	validate@obj+1,fsr2h
 16815   008C12  50DE               	movf	postinc2,w,c
 16816   008C14  10DE               	iorwf	postinc2,w,c
 16817   008C16  B4D8               	btfsc	status,2,c
 16818   008C18  EF10  F046         	goto	u10381
 16819   008C1C  EF12  F046         	goto	u10380
 16820   008C20                     u10381:
 16821   008C20  EF59  F046         	goto	l580
 16822   008C24                     u10380:
 16823   008C24  C005  FFD9         	movff	validate@obj,fsr2l
 16824   008C28  C006  FFDA         	movff	validate@obj+1,fsr2h
 16825   008C2C  CFDE F009          	movff	postinc2,??_validate
 16826   008C30  CFDD F00A          	movff	postdec2,??_validate+1
 16827   008C34  C009  FFD9         	movff	??_validate,fsr2l
 16828   008C38  C00A  FFDA         	movff	??_validate+1,fsr2h
 16829   008C3C  50DF               	movf	indf2,w,c
 16830   008C3E  B4D8               	btfsc	status,2,c
 16831   008C40  EF24  F046         	goto	u10391
 16832   008C44  EF26  F046         	goto	u10390
 16833   008C48                     u10391:
 16834   008C48  EF59  F046         	goto	l580
 16835   008C4C                     u10390:
 16836   008C4C  C005  FFD9         	movff	validate@obj,fsr2l
 16837   008C50  C006  FFDA         	movff	validate@obj+1,fsr2h
 16838   008C54  EE10 F005          	lfsr	1,5
 16839   008C58  50DE               	movf	postinc2,w,c
 16840   008C5A  26E1               	addwf	fsr1l,f,c
 16841   008C5C  50DD               	movf	postdec2,w,c
 16842   008C5E  22E2               	addwfc	fsr1h,f,c
 16843   008C60  EE20 F002          	lfsr	2,2
 16844   008C64  5005               	movf	validate@obj^0,w,c
 16845   008C66  26D9               	addwf	fsr2l,f,c
 16846   008C68  5006               	movf	(validate@obj+1)^0,w,c
 16847   008C6A  22DA               	addwfc	fsr2h,f,c
 16848   008C6C  50E6               	movf	postinc1,w,c
 16849   008C6E  18DE               	xorwf	postinc2,w,c
 16850   008C70  E107               	bnz	u10401
 16851   008C72  50E6               	movf	postinc1,w,c
 16852   008C74  18DE               	xorwf	postinc2,w,c
 16853   008C76  A4D8               	btfss	status,2,c
 16854   008C78  EF40  F046         	goto	u10401
 16855   008C7C  EF42  F046         	goto	u10400
 16856   008C80                     u10401:
 16857   008C80  EF59  F046         	goto	l580
 16858   008C84                     u10400:
 16859   008C84                     
 16860                           ;mcc_generated_files/fatfs/ff.c: 3448:   if (!(disk_status(obj->fs->pdrv) & 0x01)) {
 16861   008C84  C005  FFD9         	movff	validate@obj,fsr2l
 16862   008C88  C006  FFDA         	movff	validate@obj+1,fsr2h
 16863   008C8C  EE10 F001          	lfsr	1,1
 16864   008C90  50DE               	movf	postinc2,w,c
 16865   008C92  26E1               	addwf	fsr1l,f,c
 16866   008C94  50DD               	movf	postdec2,w,c
 16867   008C96  22E2               	addwfc	fsr1h,f,c
 16868   008C98  50E7               	movf	indf1,w,c
 16869   008C9A  EC93  F041         	call	_disk_status
 16870   008C9E  6E09               	movwf	??_validate^0,c
 16871   008CA0  B009               	btfsc	??_validate^0,0,c
 16872   008CA2  EF55  F046         	goto	u10411
 16873   008CA6  EF57  F046         	goto	u10410
 16874   008CAA                     u10411:
 16875   008CAA  EF59  F046         	goto	l580
 16876   008CAE                     u10410:
 16877   008CAE                     
 16878                           ;mcc_generated_files/fatfs/ff.c: 3449:    res = FR_OK;
 16879   008CAE  0E00               	movlw	0
 16880   008CB0  6E0F               	movwf	validate@res^0,c
 16881   008CB2                     l580:
 16882                           
 16883                           ;mcc_generated_files/fatfs/ff.c: 3453:  *rfs = (res == FR_OK) ? obj->fs : 0;
 16884   008CB2  500F               	movf	validate@res^0,w,c
 16885   008CB4  B4D8               	btfsc	status,2,c
 16886   008CB6  EF5F  F046         	goto	u10421
 16887   008CBA  EF61  F046         	goto	u10420
 16888   008CBE                     u10421:
 16889   008CBE  EF67  F046         	goto	l8268
 16890   008CC2                     u10420:
 16891   008CC2  0E00               	movlw	0
 16892   008CC4  6E0D               	movwf	_validate$1262^0,c
 16893   008CC6  0E00               	movlw	0
 16894   008CC8  6E0E               	movwf	(_validate$1262+1)^0,c
 16895   008CCA  EF6F  F046         	goto	l585
 16896   008CCE                     l8268:
 16897   008CCE  C005  FFD9         	movff	validate@obj,fsr2l
 16898   008CD2  C006  FFDA         	movff	validate@obj+1,fsr2h
 16899   008CD6  CFDE F00D          	movff	postinc2,_validate$1262
 16900   008CDA  CFDD F00E          	movff	postdec2,_validate$1262+1
 16901   008CDE                     l585:
 16902   008CDE  C007  FFD9         	movff	validate@rfs,fsr2l
 16903   008CE2  C008  FFDA         	movff	validate@rfs+1,fsr2h
 16904   008CE6  C00D  FFDE         	movff	_validate$1262,postinc2
 16905   008CEA  C00E  FFDD         	movff	_validate$1262+1,postdec2
 16906   008CEE                     
 16907                           ;mcc_generated_files/fatfs/ff.c: 3454:  return res;
 16908   008CEE  500F               	movf	validate@res^0,w,c
 16909   008CF0  0012               	return		;funcret
 16910   008CF2                     __end_of_validate:
 16911                           	callstack 0
 16912                           
 16913 ;; *************** function _disk_status *****************
 16914 ;; Defined at:
 16915 ;;		line 23 in file "mcc_generated_files/fatfs/diskio.c"
 16916 ;; Parameters:    Size  Location     Type
 16917 ;;  pdrv            1    wreg     unsigned char 
 16918 ;; Auto vars:     Size  Location     Type
 16919 ;;  pdrv            1    2[COMRAM] unsigned char 
 16920 ;;  stat            1    3[COMRAM] unsigned char 
 16921 ;; Return value:  Size  Location     Type
 16922 ;;                  1    wreg      unsigned char 
 16923 ;; Registers used:
 16924 ;;		wreg, status,2, status,0, cstack
 16925 ;; Tracked objects:
 16926 ;;		On entry : 0/0
 16927 ;;		On exit  : 0/0
 16928 ;;		Unchanged: 0/0
 16929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16931 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16932 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16933 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16934 ;;Total ram usage:        4 bytes
 16935 ;; Hardware stack levels used: 1
 16936 ;; Hardware stack levels required when called: 1
 16937 ;; This function calls:
 16938 ;;		_SD_SPI_IsMediaInitialized
 16939 ;;		_SD_SPI_IsMediaPresent
 16940 ;;		_SD_SPI_IsWriteProtected
 16941 ;; This function is called by:
 16942 ;;		_find_volume
 16943 ;;		_validate
 16944 ;; This function uses a non-reentrant model
 16945 ;;
 16946                           
 16947                           	psect	text41
 16948   008326                     __ptext41:
 16949                           	callstack 0
 16950   008326                     _disk_status:
 16951                           	callstack 26
 16952                           
 16953                           ;incstack = 0
 16954                           ;disk_status@pdrv stored from wreg
 16955   008326  6E03               	movwf	disk_status@pdrv^0,c
 16956   008328                     
 16957                           ;mcc_generated_files/fatfs/diskio.c: 24:     BYTE pdrv;mcc_generated_files/fatfs/diskio.
      +                          c: 26: {;mcc_generated_files/fatfs/diskio.c: 27:     DSTATUS stat = 0x01;
 16958   008328  0E01               	movlw	1
 16959   00832A  6E04               	movwf	disk_status@stat^0,c
 16960                           
 16961                           ;mcc_generated_files/fatfs/diskio.c: 29:     switch (pdrv) {
 16962   00832C  EFBE  F041         	goto	l7458
 16963   008330                     l7444:
 16964                           
 16965                           ;mcc_generated_files/fatfs/diskio.c: 32:             if ( SD_SPI_IsMediaPresent() == 0)
 16966   008330  EC0C  F03E         	call	_SD_SPI_IsMediaPresent	;wreg free
 16967   008334  0900               	iorlw	0
 16968   008336  A4D8               	btfss	status,2,c
 16969   008338  EFA0  F041         	goto	u8911
 16970   00833C  EFA2  F041         	goto	u8910
 16971   008340                     u8911:
 16972   008340  EFA6  F041         	goto	l7448
 16973   008344                     u8910:
 16974   008344                     
 16975                           ;mcc_generated_files/fatfs/diskio.c: 33:             {;mcc_generated_files/fatfs/diskio.
      +                          c: 34:                stat = 0x02;
 16976   008344  0E02               	movlw	2
 16977   008346  6E04               	movwf	disk_status@stat^0,c
 16978                           
 16979                           ;mcc_generated_files/fatfs/diskio.c: 35:             }
 16980   008348  EFB1  F041         	goto	l7452
 16981   00834C                     l7448:
 16982   00834C  EC5F  F03E         	call	_SD_SPI_IsMediaInitialized	;wreg free
 16983   008350  06E8               	decf	wreg,f,c
 16984   008352  A4D8               	btfss	status,2,c
 16985   008354  EFAE  F041         	goto	u8921
 16986   008358  EFB0  F041         	goto	u8920
 16987   00835C                     u8921:
 16988   00835C  EFB1  F041         	goto	l7452
 16989   008360                     u8920:
 16990   008360                     
 16991                           ;mcc_generated_files/fatfs/diskio.c: 37:             {;mcc_generated_files/fatfs/diskio.
      +                          c: 38:                 stat &= ~0x01;
 16992   008360  9004               	bcf	disk_status@stat^0,0,c
 16993   008362                     l7452:
 16994                           
 16995                           ;mcc_generated_files/fatfs/diskio.c: 41:             if ( SD_SPI_IsWriteProtected() == 1
      +                          )
 16996   008362  EC0E  F03E         	call	_SD_SPI_IsWriteProtected	;wreg free
 16997   008366  06E8               	decf	wreg,f,c
 16998   008368  A4D8               	btfss	status,2,c
 16999   00836A  EFB9  F041         	goto	u8931
 17000   00836E  EFBB  F041         	goto	u8930
 17001   008372                     u8931:
 17002   008372  EFCF  F041         	goto	l7460
 17003   008376                     u8930:
 17004   008376                     
 17005                           ;mcc_generated_files/fatfs/diskio.c: 42:             {;mcc_generated_files/fatfs/diskio.
      +                          c: 43:                 stat |= 0x04;
 17006   008376  8404               	bsf	disk_status@stat^0,2,c
 17007   008378  EFCF  F041         	goto	l7460
 17008   00837C                     l7458:
 17009   00837C  5003               	movf	disk_status@pdrv^0,w,c
 17010   00837E  6E01               	movwf	??_disk_status^0,c
 17011   008380  6A02               	clrf	(??_disk_status+1)^0,c
 17012                           
 17013                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17014                           ; Switch size 1, requested type "simple"
 17015                           ; Number of cases is 1, Range of values is 0 to 0
 17016                           ; switch strategies available:
 17017                           ; Name         Instructions Cycles
 17018                           ; simple_byte            4     3 (average)
 17019                           ;	Chosen strategy is simple_byte
 17020   008382  5002               	movf	(??_disk_status+1)^0,w,c
 17021   008384  0A00               	xorlw	0	; case 0
 17022   008386  B4D8               	btfsc	status,2,c
 17023   008388  EFC8  F041         	goto	l10682
 17024   00838C  EFCF  F041         	goto	l7460
 17025   008390                     l10682:
 17026                           
 17027                           ; Switch size 1, requested type "simple"
 17028                           ; Number of cases is 1, Range of values is 0 to 0
 17029                           ; switch strategies available:
 17030                           ; Name         Instructions Cycles
 17031                           ; simple_byte            4     3 (average)
 17032                           ;	Chosen strategy is simple_byte
 17033   008390  5001               	movf	??_disk_status^0,w,c
 17034   008392  0A00               	xorlw	0	; case 0
 17035   008394  B4D8               	btfsc	status,2,c
 17036   008396  EF98  F041         	goto	l7444
 17037   00839A  EFCF  F041         	goto	l7460
 17038   00839E                     l7460:
 17039                           
 17040                           ;mcc_generated_files/fatfs/diskio.c: 51:     return stat;
 17041   00839E  5004               	movf	disk_status@stat^0,w,c
 17042   0083A0  0012               	return		;funcret
 17043   0083A2                     __end_of_disk_status:
 17044                           	callstack 0
 17045                           
 17046 ;; *************** function _SD_SPI_IsWriteProtected *****************
 17047 ;; Defined at:
 17048 ;;		line 475 in file "mcc_generated_files/sd_spi/sd_spi.c"
 17049 ;; Parameters:    Size  Location     Type
 17050 ;;		None
 17051 ;; Auto vars:     Size  Location     Type
 17052 ;;		None
 17053 ;; Return value:  Size  Location     Type
 17054 ;;                  1    wreg      _Bool 
 17055 ;; Registers used:
 17056 ;;		wreg
 17057 ;; Tracked objects:
 17058 ;;		On entry : 0/0
 17059 ;;		On exit  : 0/0
 17060 ;;		Unchanged: 0/0
 17061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17066 ;;Total ram usage:        0 bytes
 17067 ;; Hardware stack levels used: 1
 17068 ;; This function calls:
 17069 ;;		Nothing
 17070 ;; This function is called by:
 17071 ;;		_disk_status
 17072 ;; This function uses a non-reentrant model
 17073 ;;
 17074                           
 17075                           	psect	text42
 17076   007C1C                     __ptext42:
 17077                           	callstack 0
 17078   007C1C                     _SD_SPI_IsWriteProtected:
 17079                           	callstack 26
 17080   007C1C                     
 17081                           ;mcc_generated_files/sd_spi/sd_spi.c: 477:     return 0 ? 1 : 0;
 17082   007C1C  0E00               	movlw	0
 17083   007C1E  0012               	return		;funcret
 17084   007C20                     __end_of_SD_SPI_IsWriteProtected:
 17085                           	callstack 0
 17086                           
 17087 ;; *************** function _SD_SPI_IsMediaPresent *****************
 17088 ;; Defined at:
 17089 ;;		line 367 in file "mcc_generated_files/sd_spi/sd_spi.c"
 17090 ;; Parameters:    Size  Location     Type
 17091 ;;		None
 17092 ;; Auto vars:     Size  Location     Type
 17093 ;;		None
 17094 ;; Return value:  Size  Location     Type
 17095 ;;                  1    wreg      _Bool 
 17096 ;; Registers used:
 17097 ;;		wreg
 17098 ;; Tracked objects:
 17099 ;;		On entry : 0/0
 17100 ;;		On exit  : 0/0
 17101 ;;		Unchanged: 0/0
 17102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17107 ;;Total ram usage:        0 bytes
 17108 ;; Hardware stack levels used: 1
 17109 ;; This function calls:
 17110 ;;		Nothing
 17111 ;; This function is called by:
 17112 ;;		_disk_status
 17113 ;;		_FatFsDemo_Tasks
 17114 ;; This function uses a non-reentrant model
 17115 ;;
 17116                           
 17117                           	psect	text43
 17118   007C18                     __ptext43:
 17119                           	callstack 0
 17120   007C18                     _SD_SPI_IsMediaPresent:
 17121                           	callstack 26
 17122   007C18                     
 17123                           ;mcc_generated_files/sd_spi/sd_spi.c: 369:     return 1 ? 1: 0;
 17124   007C18  0E01               	movlw	1
 17125   007C1A  0012               	return		;funcret
 17126   007C1C                     __end_of_SD_SPI_IsMediaPresent:
 17127                           	callstack 0
 17128                           
 17129 ;; *************** function _SD_SPI_IsMediaInitialized *****************
 17130 ;; Defined at:
 17131 ;;		line 470 in file "mcc_generated_files/sd_spi/sd_spi.c"
 17132 ;; Parameters:    Size  Location     Type
 17133 ;;		None
 17134 ;; Auto vars:     Size  Location     Type
 17135 ;;		None
 17136 ;; Return value:  Size  Location     Type
 17137 ;;                  1    wreg      _Bool 
 17138 ;; Registers used:
 17139 ;;		wreg, status,2
 17140 ;; Tracked objects:
 17141 ;;		On entry : 0/0
 17142 ;;		On exit  : 0/0
 17143 ;;		Unchanged: 0/0
 17144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17149 ;;Total ram usage:        0 bytes
 17150 ;; Hardware stack levels used: 1
 17151 ;; This function calls:
 17152 ;;		Nothing
 17153 ;; This function is called by:
 17154 ;;		_disk_status
 17155 ;; This function uses a non-reentrant model
 17156 ;;
 17157                           
 17158                           	psect	text44
 17159   007CBE                     __ptext44:
 17160                           	callstack 0
 17161   007CBE                     _SD_SPI_IsMediaInitialized:
 17162                           	callstack 26
 17163   007CBE                     
 17164                           ;mcc_generated_files/sd_spi/sd_spi.c: 472:     return (mediaInformation.state != SD_STAT
      +                          E_NOT_INITIALIZED);
 17165   007CBE  0101               	movlb	1	; () banked
 17166   007CC0  51DA               	movf	(_mediaInformation+3)& (0+255),w,b
 17167   007CC2  A4D8               	btfss	status,2,c
 17168   007CC4  EF66  F03E         	goto	u8561
 17169   007CC8  EF69  F03E         	goto	u8560
 17170   007CCC                     u8561:
 17171   007CCC  0E01               	movlw	1
 17172   007CCE  EF6A  F03E         	goto	u8570
 17173   007CD2                     u8560:
 17174   007CD2  0E00               	movlw	0
 17175   007CD4                     u8570:
 17176   007CD4                     
 17177                           ; BSR set to: 1
 17178   007CD4  0012               	return		;funcret
 17179   007CD6                     __end_of_SD_SPI_IsMediaInitialized:
 17180                           	callstack 0
 17181                           
 17182 ;; *************** function _sync_fs *****************
 17183 ;; Defined at:
 17184 ;;		line 1087 in file "mcc_generated_files/fatfs/ff.c"
 17185 ;; Parameters:    Size  Location     Type
 17186 ;;  fs              2   91[COMRAM] PTR struct .
 17187 ;;		 -> FatFs(563), drive(563), NULL(0), 
 17188 ;; Auto vars:     Size  Location     Type
 17189 ;;  res             1   93[COMRAM] enum E68
 17190 ;; Return value:  Size  Location     Type
 17191 ;;                  1    wreg      enum E68
 17192 ;; Registers used:
 17193 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 17194 ;; Tracked objects:
 17195 ;;		On entry : 0/0
 17196 ;;		On exit  : 0/0
 17197 ;;		Unchanged: 0/0
 17198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17199 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17200 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17201 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17202 ;;      Totals:         3       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17203 ;;Total ram usage:       11 bytes
 17204 ;; Hardware stack levels used: 1
 17205 ;; Hardware stack levels required when called: 6
 17206 ;; This function calls:
 17207 ;;		_disk_ioctl
 17208 ;;		_disk_write
 17209 ;;		_mem_set
 17210 ;;		_st_dword
 17211 ;;		_st_word
 17212 ;;		_sync_window
 17213 ;; This function is called by:
 17214 ;;		_f_sync
 17215 ;;		_f_unlink
 17216 ;;		_f_mkdir
 17217 ;;		_f_rename
 17218 ;; This function uses a non-reentrant model
 17219 ;;
 17220                           
 17221                           	psect	text45
 17222   009CB4                     __ptext45:
 17223                           	callstack 0
 17224   009CB4                     _sync_fs:
 17225                           	callstack 21
 17226   009CB4                     
 17227                           ;mcc_generated_files/fatfs/ff.c: 1088:  FATFS* fs;mcc_generated_files/fatfs/ff.c: 1090: 
      +                          {;mcc_generated_files/fatfs/ff.c: 1091:  FRESULT res;;mcc_generated_files/fatfs/ff.c: 10
      +                          94:  res = sync_window(fs);
 17228   009CB4  C05C  F059         	movff	sync_fs@fs,sync_window@fs
 17229   009CB8  C05D  F05A         	movff	sync_fs@fs+1,sync_window@fs+1
 17230   009CBC  EC8B  F04D         	call	_sync_window	;wreg free
 17231   009CC0  6E5E               	movwf	sync_fs@res^0,c
 17232   009CC2                     
 17233                           ;mcc_generated_files/fatfs/ff.c: 1095:  if (res == FR_OK) {
 17234   009CC2  505E               	movf	sync_fs@res^0,w,c
 17235   009CC4  A4D8               	btfss	status,2,c
 17236   009CC6  EF67  F04E         	goto	u9771
 17237   009CCA  EF69  F04E         	goto	u9770
 17238   009CCE                     u9771:
 17239   009CCE  EF57  F04F         	goto	l200
 17240   009CD2                     u9770:
 17241   009CD2                     
 17242                           ;mcc_generated_files/fatfs/ff.c: 1096:   if (fs->fs_type == 3 && fs->fsi_flag == 1) {
 17243   009CD2  C05C  FFD9         	movff	sync_fs@fs,fsr2l
 17244   009CD6  C05D  FFDA         	movff	sync_fs@fs+1,fsr2h
 17245   009CDA  0E03               	movlw	3
 17246   009CDC  18DE               	xorwf	postinc2,w,c
 17247   009CDE  A4D8               	btfss	status,2,c
 17248   009CE0  EF74  F04E         	goto	u9781
 17249   009CE4  EF76  F04E         	goto	u9780
 17250   009CE8                     u9781:
 17251   009CE8  EF3E  F04F         	goto	l7936
 17252   009CEC                     u9780:
 17253   009CEC  EE20 F004          	lfsr	2,4
 17254   009CF0  505C               	movf	sync_fs@fs^0,w,c
 17255   009CF2  26D9               	addwf	fsr2l,f,c
 17256   009CF4  505D               	movf	(sync_fs@fs+1)^0,w,c
 17257   009CF6  22DA               	addwfc	fsr2h,f,c
 17258   009CF8  04DE               	decf	postinc2,w,c
 17259   009CFA  A4D8               	btfss	status,2,c
 17260   009CFC  EF82  F04E         	goto	u9791
 17261   009D00  EF84  F04E         	goto	u9790
 17262   009D04                     u9791:
 17263   009D04  EF3E  F04F         	goto	l7936
 17264   009D08                     u9790:
 17265   009D08                     
 17266                           ;mcc_generated_files/fatfs/ff.c: 1098:    mem_set(fs->win, 0, ((UINT)512));
 17267   009D08  0E33               	movlw	51
 17268   009D0A  245C               	addwf	sync_fs@fs^0,w,c
 17269   009D0C  6E01               	movwf	mem_set@dst^0,c
 17270   009D0E  0E00               	movlw	0
 17271   009D10  205D               	addwfc	(sync_fs@fs+1)^0,w,c
 17272   009D12  6E02               	movwf	(mem_set@dst+1)^0,c
 17273   009D14  0E00               	movlw	0
 17274   009D16  6E04               	movwf	(mem_set@val+1)^0,c
 17275   009D18  0E00               	movlw	0
 17276   009D1A  6E03               	movwf	mem_set@val^0,c
 17277   009D1C  0E02               	movlw	2
 17278   009D1E  6E06               	movwf	(mem_set@cnt+1)^0,c
 17279   009D20  0E00               	movlw	0
 17280   009D22  6E05               	movwf	mem_set@cnt^0,c
 17281   009D24  ECB8  F03E         	call	_mem_set	;wreg free
 17282                           
 17283                           ;mcc_generated_files/fatfs/ff.c: 1099:    st_word(fs->win + 510, 0xAA55);
 17284   009D28  0E31               	movlw	49
 17285   009D2A  245C               	addwf	sync_fs@fs^0,w,c
 17286   009D2C  6E01               	movwf	st_word@ptr^0,c
 17287   009D2E  0E02               	movlw	2
 17288   009D30  205D               	addwfc	(sync_fs@fs+1)^0,w,c
 17289   009D32  6E02               	movwf	(st_word@ptr+1)^0,c
 17290   009D34  0EAA               	movlw	170
 17291   009D36  6E04               	movwf	(st_word@val+1)^0,c
 17292   009D38  0E55               	movlw	85
 17293   009D3A  6E03               	movwf	st_word@val^0,c
 17294   009D3C  EC8B  F03E         	call	_st_word	;wreg free
 17295                           
 17296                           ;mcc_generated_files/fatfs/ff.c: 1100:    st_dword(fs->win + 0, 0x41615252);
 17297   009D40  0E33               	movlw	51
 17298   009D42  245C               	addwf	sync_fs@fs^0,w,c
 17299   009D44  6E01               	movwf	st_dword@ptr^0,c
 17300   009D46  0E00               	movlw	0
 17301   009D48  205D               	addwfc	(sync_fs@fs+1)^0,w,c
 17302   009D4A  6E02               	movwf	(st_dword@ptr+1)^0,c
 17303   009D4C  0E52               	movlw	82
 17304   009D4E  6E03               	movwf	st_dword@val^0,c
 17305   009D50  0E52               	movlw	82
 17306   009D52  6E04               	movwf	(st_dword@val+1)^0,c
 17307   009D54  0E61               	movlw	97
 17308   009D56  6E05               	movwf	(st_dword@val+2)^0,c
 17309   009D58  0E41               	movlw	65
 17310   009D5A  6E06               	movwf	(st_dword@val+3)^0,c
 17311   009D5C  ECE9  F040         	call	_st_dword	;wreg free
 17312                           
 17313                           ;mcc_generated_files/fatfs/ff.c: 1101:    st_dword(fs->win + 484, 0x61417272);
 17314   009D60  0E17               	movlw	23
 17315   009D62  245C               	addwf	sync_fs@fs^0,w,c
 17316   009D64  6E01               	movwf	st_dword@ptr^0,c
 17317   009D66  0E02               	movlw	2
 17318   009D68  205D               	addwfc	(sync_fs@fs+1)^0,w,c
 17319   009D6A  6E02               	movwf	(st_dword@ptr+1)^0,c
 17320   009D6C  0E72               	movlw	114
 17321   009D6E  6E03               	movwf	st_dword@val^0,c
 17322   009D70  0E72               	movlw	114
 17323   009D72  6E04               	movwf	(st_dword@val+1)^0,c
 17324   009D74  0E41               	movlw	65
 17325   009D76  6E05               	movwf	(st_dword@val+2)^0,c
 17326   009D78  0E61               	movlw	97
 17327   009D7A  6E06               	movwf	(st_dword@val+3)^0,c
 17328   009D7C  ECE9  F040         	call	_st_dword	;wreg free
 17329                           
 17330                           ;mcc_generated_files/fatfs/ff.c: 1102:    st_dword(fs->win + 488, fs->free_clst);
 17331   009D80  0E1B               	movlw	27
 17332   009D82  245C               	addwf	sync_fs@fs^0,w,c
 17333   009D84  6E01               	movwf	st_dword@ptr^0,c
 17334   009D86  0E02               	movlw	2
 17335   009D88  205D               	addwfc	(sync_fs@fs+1)^0,w,c
 17336   009D8A  6E02               	movwf	(st_dword@ptr+1)^0,c
 17337   009D8C  EE20 F00F          	lfsr	2,15
 17338   009D90  505C               	movf	sync_fs@fs^0,w,c
 17339   009D92  26D9               	addwf	fsr2l,f,c
 17340   009D94  505D               	movf	(sync_fs@fs+1)^0,w,c
 17341   009D96  22DA               	addwfc	fsr2h,f,c
 17342   009D98  CFDE F003          	movff	postinc2,st_dword@val
 17343   009D9C  CFDE F004          	movff	postinc2,st_dword@val+1
 17344   009DA0  CFDE F005          	movff	postinc2,st_dword@val+2
 17345   009DA4  CFDE F006          	movff	postinc2,st_dword@val+3
 17346   009DA8  ECE9  F040         	call	_st_dword	;wreg free
 17347                           
 17348                           ;mcc_generated_files/fatfs/ff.c: 1103:    st_dword(fs->win + 492, fs->last_clst);
 17349   009DAC  0E1F               	movlw	31
 17350   009DAE  245C               	addwf	sync_fs@fs^0,w,c
 17351   009DB0  6E01               	movwf	st_dword@ptr^0,c
 17352   009DB2  0E02               	movlw	2
 17353   009DB4  205D               	addwfc	(sync_fs@fs+1)^0,w,c
 17354   009DB6  6E02               	movwf	(st_dword@ptr+1)^0,c
 17355   009DB8  EE20 F00B          	lfsr	2,11
 17356   009DBC  505C               	movf	sync_fs@fs^0,w,c
 17357   009DBE  26D9               	addwf	fsr2l,f,c
 17358   009DC0  505D               	movf	(sync_fs@fs+1)^0,w,c
 17359   009DC2  22DA               	addwfc	fsr2h,f,c
 17360   009DC4  CFDE F003          	movff	postinc2,st_dword@val
 17361   009DC8  CFDE F004          	movff	postinc2,st_dword@val+1
 17362   009DCC  CFDE F005          	movff	postinc2,st_dword@val+2
 17363   009DD0  CFDE F006          	movff	postinc2,st_dword@val+3
 17364   009DD4  ECE9  F040         	call	_st_dword	;wreg free
 17365   009DD8                     
 17366                           ;mcc_generated_files/fatfs/ff.c: 1105:    fs->winsect = fs->volbase + 1;
 17367   009DD8  EE20 F01F          	lfsr	2,31
 17368   009DDC  505C               	movf	sync_fs@fs^0,w,c
 17369   009DDE  26D9               	addwf	fsr2l,f,c
 17370   009DE0  505D               	movf	(sync_fs@fs+1)^0,w,c
 17371   009DE2  22DA               	addwfc	fsr2h,f,c
 17372   009DE4  CFDE F070          	movff	postinc2,??_sync_fs
 17373   009DE8  CFDE F071          	movff	postinc2,??_sync_fs+1
 17374   009DEC  CFDE F072          	movff	postinc2,??_sync_fs+2
 17375   009DF0  CFDE F073          	movff	postinc2,??_sync_fs+3
 17376   009DF4  0E01               	movlw	1
 17377   009DF6  0100               	movlb	0	; () banked
 17378   009DF8  2570               	addwf	??_sync_fs& (0+255),w,b
 17379   009DFA  6F74               	movwf	(??_sync_fs+4)& (0+255),b
 17380   009DFC  0E00               	movlw	0
 17381   009DFE  2171               	addwfc	(??_sync_fs+1)& (0+255),w,b
 17382   009E00  6F75               	movwf	(??_sync_fs+5)& (0+255),b
 17383   009E02  0E00               	movlw	0
 17384   009E04  2172               	addwfc	(??_sync_fs+2)& (0+255),w,b
 17385   009E06  6F76               	movwf	(??_sync_fs+6)& (0+255),b
 17386   009E08  0E00               	movlw	0
 17387   009E0A  2173               	addwfc	(??_sync_fs+3)& (0+255),w,b
 17388   009E0C  6F77               	movwf	(??_sync_fs+7)& (0+255),b
 17389   009E0E  EE20 F02F          	lfsr	2,47
 17390   009E12  505C               	movf	sync_fs@fs^0,w,c
 17391   009E14  26D9               	addwf	fsr2l,f,c
 17392   009E16  505D               	movf	(sync_fs@fs+1)^0,w,c
 17393   009E18  22DA               	addwfc	fsr2h,f,c
 17394   009E1A  C074  FFDE         	movff	??_sync_fs+4,postinc2
 17395   009E1E  C075  FFDE         	movff	??_sync_fs+5,postinc2
 17396   009E22  C076  FFDE         	movff	??_sync_fs+6,postinc2
 17397   009E26  C077  FFDE         	movff	??_sync_fs+7,postinc2
 17398   009E2A                     
 17399                           ; BSR set to: 0
 17400                           ;mcc_generated_files/fatfs/ff.c: 1106:    disk_write(fs->pdrv, fs->win, fs->winsect, 1);
 17401   009E2A  0E33               	movlw	51
 17402   009E2C  245C               	addwf	sync_fs@fs^0,w,c
 17403   009E2E  6E4D               	movwf	disk_write@buff^0,c
 17404   009E30  0E00               	movlw	0
 17405   009E32  205D               	addwfc	(sync_fs@fs+1)^0,w,c
 17406   009E34  6E4E               	movwf	(disk_write@buff+1)^0,c
 17407   009E36  EE20 F02F          	lfsr	2,47
 17408   009E3A  505C               	movf	sync_fs@fs^0,w,c
 17409   009E3C  26D9               	addwf	fsr2l,f,c
 17410   009E3E  505D               	movf	(sync_fs@fs+1)^0,w,c
 17411   009E40  22DA               	addwfc	fsr2h,f,c
 17412   009E42  CFDE F04F          	movff	postinc2,disk_write@sector
 17413   009E46  CFDE F050          	movff	postinc2,disk_write@sector+1
 17414   009E4A  CFDE F051          	movff	postinc2,disk_write@sector+2
 17415   009E4E  CFDE F052          	movff	postinc2,disk_write@sector+3
 17416   009E52  0E00               	movlw	0
 17417   009E54  6E54               	movwf	(disk_write@count+1)^0,c
 17418   009E56  0E01               	movlw	1
 17419   009E58  6E53               	movwf	disk_write@count^0,c
 17420   009E5A  EE20 F001          	lfsr	2,1
 17421   009E5E  505C               	movf	sync_fs@fs^0,w,c
 17422   009E60  26D9               	addwf	fsr2l,f,c
 17423   009E62  505D               	movf	(sync_fs@fs+1)^0,w,c
 17424   009E64  22DA               	addwfc	fsr2h,f,c
 17425   009E66  50DF               	movf	indf2,w,c
 17426   009E68  EC59  F041         	call	_disk_write
 17427   009E6C                     
 17428                           ;mcc_generated_files/fatfs/ff.c: 1107:    fs->fsi_flag = 0;
 17429   009E6C  EE20 F004          	lfsr	2,4
 17430   009E70  505C               	movf	sync_fs@fs^0,w,c
 17431   009E72  26D9               	addwf	fsr2l,f,c
 17432   009E74  505D               	movf	(sync_fs@fs+1)^0,w,c
 17433   009E76  22DA               	addwfc	fsr2h,f,c
 17434   009E78  0E00               	movlw	0
 17435   009E7A  6EDF               	movwf	indf2,c
 17436   009E7C                     l7936:
 17437                           
 17438                           ;mcc_generated_files/fatfs/ff.c: 1110:   if (disk_ioctl(fs->pdrv, 0, 0) != RES_OK) res =
      +                           FR_DISK_ERR;
 17439   009E7C  0E00               	movlw	0
 17440   009E7E  6E01               	movwf	disk_ioctl@cmd^0,c
 17441   009E80  0E00               	movlw	0
 17442   009E82  6E02               	movwf	disk_ioctl@buff^0,c
 17443   009E84  0E00               	movlw	0
 17444   009E86  6E03               	movwf	(disk_ioctl@buff+1)^0,c
 17445   009E88  EE20 F001          	lfsr	2,1
 17446   009E8C  505C               	movf	sync_fs@fs^0,w,c
 17447   009E8E  26D9               	addwf	fsr2l,f,c
 17448   009E90  505D               	movf	(sync_fs@fs+1)^0,w,c
 17449   009E92  22DA               	addwfc	fsr2h,f,c
 17450   009E94  50DF               	movf	indf2,w,c
 17451   009E96  EC9F  F03E         	call	_disk_ioctl
 17452   009E9A  0900               	iorlw	0
 17453   009E9C  B4D8               	btfsc	status,2,c
 17454   009E9E  EF53  F04F         	goto	u9801
 17455   009EA2  EF55  F04F         	goto	u9800
 17456   009EA6                     u9801:
 17457   009EA6  EF57  F04F         	goto	l200
 17458   009EAA                     u9800:
 17459   009EAA  0E01               	movlw	1
 17460   009EAC  6E5E               	movwf	sync_fs@res^0,c
 17461   009EAE                     l200:
 17462                           
 17463                           ;mcc_generated_files/fatfs/ff.c: 1113:  return res;
 17464   009EAE  505E               	movf	sync_fs@res^0,w,c
 17465   009EB0  0012               	return		;funcret
 17466   009EB2                     __end_of_sync_fs:
 17467                           	callstack 0
 17468                           
 17469 ;; *************** function _st_dword *****************
 17470 ;; Defined at:
 17471 ;;		line 616 in file "mcc_generated_files/fatfs/ff.c"
 17472 ;; Parameters:    Size  Location     Type
 17473 ;;  ptr             2    0[COMRAM] PTR unsigned char 
 17474 ;;		 -> drive.win(512), FatFs.win(512), FatFs(563), drive(563), 
 17475 ;;		 -> NULL(0), 
 17476 ;;  val             4    2[COMRAM] unsigned long 
 17477 ;; Auto vars:     Size  Location     Type
 17478 ;;		None
 17479 ;; Return value:  Size  Location     Type
 17480 ;;                  1    wreg      void 
 17481 ;; Registers used:
 17482 ;;		fsr2l, fsr2h, status,2, status,0
 17483 ;; Tracked objects:
 17484 ;;		On entry : 0/0
 17485 ;;		On exit  : 0/0
 17486 ;;		Unchanged: 0/0
 17487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17488 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17491 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17492 ;;Total ram usage:        6 bytes
 17493 ;; Hardware stack levels used: 1
 17494 ;; This function calls:
 17495 ;;		Nothing
 17496 ;; This function is called by:
 17497 ;;		_sync_fs
 17498 ;;		_put_fat
 17499 ;;		_f_open
 17500 ;;		_f_sync
 17501 ;;		_f_mkdir
 17502 ;; This function uses a non-reentrant model
 17503 ;;
 17504                           
 17505                           	psect	text46
 17506   0081D2                     __ptext46:
 17507                           	callstack 0
 17508   0081D2                     _st_dword:
 17509                           	callstack 26
 17510   0081D2                     
 17511                           ;mcc_generated_files/fatfs/ff.c: 616: static void st_dword (BYTE* ptr, DWORD val);mcc_ge
      +                          nerated_files/fatfs/ff.c: 617: {;mcc_generated_files/fatfs/ff.c: 618:  *ptr++ = (BYTE)va
      +                          l; val >>= 8;
 17512   0081D2  C001  FFD9         	movff	st_dword@ptr,fsr2l
 17513   0081D6  C002  FFDA         	movff	st_dword@ptr+1,fsr2h
 17514   0081DA  C003  FFDF         	movff	st_dword@val,indf2
 17515   0081DE  4A01               	infsnz	st_dword@ptr^0,f,c
 17516   0081E0  2A02               	incf	(st_dword@ptr+1)^0,f,c
 17517   0081E2  C004  F003         	movff	st_dword@val+1,st_dword@val
 17518   0081E6  C005  F004         	movff	st_dword@val+2,st_dword@val+1
 17519   0081EA  C006  F005         	movff	st_dword@val+3,st_dword@val+2
 17520   0081EE  6A06               	clrf	(st_dword@val+3)^0,c
 17521   0081F0                     
 17522                           ;mcc_generated_files/fatfs/ff.c: 619:  *ptr++ = (BYTE)val; val >>= 8;
 17523   0081F0  C001  FFD9         	movff	st_dword@ptr,fsr2l
 17524   0081F4  C002  FFDA         	movff	st_dword@ptr+1,fsr2h
 17525   0081F8  C003  FFDF         	movff	st_dword@val,indf2
 17526   0081FC  4A01               	infsnz	st_dword@ptr^0,f,c
 17527   0081FE  2A02               	incf	(st_dword@ptr+1)^0,f,c
 17528   008200  C004  F003         	movff	st_dword@val+1,st_dword@val
 17529   008204  C005  F004         	movff	st_dword@val+2,st_dword@val+1
 17530   008208  C006  F005         	movff	st_dword@val+3,st_dword@val+2
 17531   00820C  6A06               	clrf	(st_dword@val+3)^0,c
 17532   00820E                     
 17533                           ;mcc_generated_files/fatfs/ff.c: 620:  *ptr++ = (BYTE)val; val >>= 8;
 17534   00820E  C001  FFD9         	movff	st_dword@ptr,fsr2l
 17535   008212  C002  FFDA         	movff	st_dword@ptr+1,fsr2h
 17536   008216  C003  FFDF         	movff	st_dword@val,indf2
 17537   00821A  4A01               	infsnz	st_dword@ptr^0,f,c
 17538   00821C  2A02               	incf	(st_dword@ptr+1)^0,f,c
 17539   00821E  C004  F003         	movff	st_dword@val+1,st_dword@val
 17540   008222  C005  F004         	movff	st_dword@val+2,st_dword@val+1
 17541   008226  C006  F005         	movff	st_dword@val+3,st_dword@val+2
 17542   00822A  6A06               	clrf	(st_dword@val+3)^0,c
 17543   00822C                     
 17544                           ;mcc_generated_files/fatfs/ff.c: 621:  *ptr++ = (BYTE)val;
 17545   00822C  C001  FFD9         	movff	st_dword@ptr,fsr2l
 17546   008230  C002  FFDA         	movff	st_dword@ptr+1,fsr2h
 17547   008234  C003  FFDF         	movff	st_dword@val,indf2
 17548   008238  4A01               	infsnz	st_dword@ptr^0,f,c
 17549   00823A  2A02               	incf	(st_dword@ptr+1)^0,f,c
 17550   00823C  0012               	return		;funcret
 17551   00823E                     __end_of_st_dword:
 17552                           	callstack 0
 17553                           
 17554 ;; *************** function _mem_set *****************
 17555 ;; Defined at:
 17556 ;;		line 660 in file "mcc_generated_files/fatfs/ff.c"
 17557 ;; Parameters:    Size  Location     Type
 17558 ;;  dst             2    0[COMRAM] PTR void 
 17559 ;;		 -> drive.win(512), djn.fn(12), FatFs.win(512), Fil(546), 
 17560 ;;		 -> FatFs(563), f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), 
 17561 ;;		 -> f_rename@djn(40), djo.fn(12), f_rename@djo(40), dj.fn(12), 
 17562 ;;		 -> f_mkdir@dj(40), dj.fn(12), f_unlink@dj(40), dj.fn(12), 
 17563 ;;		 -> f_stat@dj(40), dj.fn(12), f_chdir@dj(40), dj.fn(12), 
 17564 ;;		 -> f_open@dj(40), file(546), drive(563), NULL(0), 
 17565 ;;  val             2    2[COMRAM] int 
 17566 ;;  cnt             2    4[COMRAM] unsigned int 
 17567 ;; Auto vars:     Size  Location     Type
 17568 ;;  d               2    6[COMRAM] PTR unsigned char 
 17569 ;;		 -> drive.win(512), djn.fn(12), FatFs.win(512), Fil(546), 
 17570 ;;		 -> FatFs(563), f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), 
 17571 ;;		 -> f_rename@djn(40), djo.fn(12), f_rename@djo(40), dj.fn(12), 
 17572 ;;		 -> f_mkdir@dj(40), dj.fn(12), f_unlink@dj(40), dj.fn(12), 
 17573 ;;		 -> f_stat@dj(40), dj.fn(12), f_chdir@dj(40), dj.fn(12), 
 17574 ;;		 -> f_open@dj(40), file(546), drive(563), NULL(0), 
 17575 ;; Return value:  Size  Location     Type
 17576 ;;                  1    wreg      void 
 17577 ;; Registers used:
 17578 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17579 ;; Tracked objects:
 17580 ;;		On entry : 0/0
 17581 ;;		On exit  : 0/0
 17582 ;;		Unchanged: 0/0
 17583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17584 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17585 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17587 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17588 ;;Total ram usage:        8 bytes
 17589 ;; Hardware stack levels used: 1
 17590 ;; This function calls:
 17591 ;;		Nothing
 17592 ;; This function is called by:
 17593 ;;		_sync_fs
 17594 ;;		_dir_clear
 17595 ;;		_dir_register
 17596 ;;		_create_name
 17597 ;;		_f_open
 17598 ;;		_f_mkdir
 17599 ;;		_putc_init
 17600 ;; This function uses a non-reentrant model
 17601 ;;
 17602                           
 17603                           	psect	text47
 17604   007D70                     __ptext47:
 17605                           	callstack 0
 17606   007D70                     _mem_set:
 17607                           	callstack 28
 17608   007D70                     
 17609                           ;mcc_generated_files/fatfs/ff.c: 660: static void mem_set (void* dst, int val, UINT cnt)
      +                          ;mcc_generated_files/fatfs/ff.c: 661: {;mcc_generated_files/fatfs/ff.c: 662:  BYTE *d = 
      +                          (BYTE*)dst;
 17610   007D70  C001  F007         	movff	mem_set@dst,mem_set@d
 17611   007D74  C002  F008         	movff	mem_set@dst+1,mem_set@d+1
 17612   007D78                     l7126:
 17613                           
 17614                           ;mcc_generated_files/fatfs/ff.c: 665:   *d++ = (BYTE)val;
 17615   007D78  C007  FFD9         	movff	mem_set@d,fsr2l
 17616   007D7C  C008  FFDA         	movff	mem_set@d+1,fsr2h
 17617   007D80  C003  FFDF         	movff	mem_set@val,indf2
 17618   007D84  4A07               	infsnz	mem_set@d^0,f,c
 17619   007D86  2A08               	incf	(mem_set@d+1)^0,f,c
 17620   007D88                     
 17621                           ;mcc_generated_files/fatfs/ff.c: 666:  } while (--cnt);
 17622   007D88  0605               	decf	mem_set@cnt^0,f,c
 17623   007D8A  A0D8               	btfss	status,0,c
 17624   007D8C  0606               	decf	(mem_set@cnt+1)^0,f,c
 17625   007D8E  5005               	movf	mem_set@cnt^0,w,c
 17626   007D90  1006               	iorwf	(mem_set@cnt+1)^0,w,c
 17627   007D92  A4D8               	btfss	status,2,c
 17628   007D94  EFCE  F03E         	goto	u8311
 17629   007D98  EFD0  F03E         	goto	u8310
 17630   007D9C                     u8311:
 17631   007D9C  EFBC  F03E         	goto	l7126
 17632   007DA0                     u8310:
 17633   007DA0  0012               	return		;funcret
 17634   007DA2                     __end_of_mem_set:
 17635                           	callstack 0
 17636                           
 17637 ;; *************** function _disk_ioctl *****************
 17638 ;; Defined at:
 17639 ;;		line 158 in file "mcc_generated_files/fatfs/diskio.c"
 17640 ;; Parameters:    Size  Location     Type
 17641 ;;  pdrv            1    wreg     unsigned char 
 17642 ;;  cmd             1    0[COMRAM] unsigned char 
 17643 ;;  buff            2    1[COMRAM] PTR void 
 17644 ;;		 -> NULL(0), 
 17645 ;; Auto vars:     Size  Location     Type
 17646 ;;  pdrv            1    5[COMRAM] unsigned char 
 17647 ;;  res             1    0        enum E12
 17648 ;; Return value:  Size  Location     Type
 17649 ;;                  1    wreg      enum E12
 17650 ;; Registers used:
 17651 ;;		wreg, status,2, status,0
 17652 ;; Tracked objects:
 17653 ;;		On entry : 0/0
 17654 ;;		On exit  : 0/0
 17655 ;;		Unchanged: 0/0
 17656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17657 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17658 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17659 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17660 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17661 ;;Total ram usage:        6 bytes
 17662 ;; Hardware stack levels used: 1
 17663 ;; This function calls:
 17664 ;;		Nothing
 17665 ;; This function is called by:
 17666 ;;		_sync_fs
 17667 ;; This function uses a non-reentrant model
 17668 ;;
 17669                           
 17670                           	psect	text48
 17671   007D3E                     __ptext48:
 17672                           	callstack 0
 17673   007D3E                     _disk_ioctl:
 17674                           	callstack 26
 17675                           
 17676                           ;incstack = 0
 17677                           ;disk_ioctl@pdrv stored from wreg
 17678   007D3E  6E06               	movwf	disk_ioctl@pdrv^0,c
 17679   007D40                     
 17680                           ;mcc_generated_files/fatfs/diskio.c: 166:     switch (pdrv) {
 17681   007D40  EFA5  F03E         	goto	l7666
 17682   007D44                     l90:
 17683                           
 17684                           ;mcc_generated_files/fatfs/diskio.c: 168:             return res;
 17685   007D44  0E00               	movlw	0
 17686   007D46  EFB7  F03E         	goto	l91
 17687   007D4A                     l7666:
 17688   007D4A  5006               	movf	disk_ioctl@pdrv^0,w,c
 17689   007D4C  6E04               	movwf	??_disk_ioctl^0,c
 17690   007D4E  6A05               	clrf	(??_disk_ioctl+1)^0,c
 17691                           
 17692                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17693                           ; Switch size 1, requested type "simple"
 17694                           ; Number of cases is 1, Range of values is 0 to 0
 17695                           ; switch strategies available:
 17696                           ; Name         Instructions Cycles
 17697                           ; simple_byte            4     3 (average)
 17698                           ;	Chosen strategy is simple_byte
 17699   007D50  5005               	movf	(??_disk_ioctl+1)^0,w,c
 17700   007D52  0A00               	xorlw	0	; case 0
 17701   007D54  B4D8               	btfsc	status,2,c
 17702   007D56  EFAF  F03E         	goto	l10684
 17703   007D5A  EFB6  F03E         	goto	l7668
 17704   007D5E                     l10684:
 17705                           
 17706                           ; Switch size 1, requested type "simple"
 17707                           ; Number of cases is 1, Range of values is 0 to 0
 17708                           ; switch strategies available:
 17709                           ; Name         Instructions Cycles
 17710                           ; simple_byte            4     3 (average)
 17711                           ;	Chosen strategy is simple_byte
 17712   007D5E  5004               	movf	??_disk_ioctl^0,w,c
 17713   007D60  0A00               	xorlw	0	; case 0
 17714   007D62  B4D8               	btfsc	status,2,c
 17715   007D64  EFA2  F03E         	goto	l90
 17716   007D68  EFB6  F03E         	goto	l7668
 17717   007D6C                     l7668:
 17718                           
 17719                           ;mcc_generated_files/fatfs/diskio.c: 174:     return RES_PARERR;
 17720   007D6C  0E04               	movlw	4
 17721   007D6E                     l91:
 17722   007D6E  0012               	return		;funcret
 17723   007D70                     __end_of_disk_ioctl:
 17724                           	callstack 0
 17725                           
 17726 ;; *************** function _st_clust *****************
 17727 ;; Defined at:
 17728 ;;		line 1842 in file "mcc_generated_files/fatfs/ff.c"
 17729 ;; Parameters:    Size  Location     Type
 17730 ;;  fs              2    4[COMRAM] PTR struct .
 17731 ;;		 -> FatFs(563), drive(563), NULL(0), 
 17732 ;;  dir             2    6[COMRAM] PTR unsigned char 
 17733 ;;		 -> drive.win(512), FatFs.win(512), FatFs(563), drive(563), 
 17734 ;;		 -> NULL(0), 
 17735 ;;  cl              4    8[COMRAM] unsigned long 
 17736 ;; Auto vars:     Size  Location     Type
 17737 ;;		None
 17738 ;; Return value:  Size  Location     Type
 17739 ;;                  1    wreg      void 
 17740 ;; Registers used:
 17741 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17742 ;; Tracked objects:
 17743 ;;		On entry : 0/0
 17744 ;;		On exit  : 0/0
 17745 ;;		Unchanged: 0/0
 17746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17747 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17749 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17750 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17751 ;;Total ram usage:        9 bytes
 17752 ;; Hardware stack levels used: 1
 17753 ;; Hardware stack levels required when called: 1
 17754 ;; This function calls:
 17755 ;;		_st_word
 17756 ;; This function is called by:
 17757 ;;		_f_open
 17758 ;;		_f_sync
 17759 ;;		_f_mkdir
 17760 ;;		_f_rename
 17761 ;; This function uses a non-reentrant model
 17762 ;;
 17763                           
 17764                           	psect	text49
 17765   007E5E                     __ptext49:
 17766                           	callstack 0
 17767   007E5E                     _st_clust:
 17768                           	callstack 27
 17769   007E5E                     
 17770                           ;mcc_generated_files/fatfs/ff.c: 1843:  FATFS* fs,;mcc_generated_files/fatfs/ff.c: 1844:
      +                            BYTE* dir,;mcc_generated_files/fatfs/ff.c: 1845:  DWORD cl;mcc_generated_files/fatfs/f
      +                          f.c: 1847: {;mcc_generated_files/fatfs/ff.c: 1848:  st_word(dir + 26, (WORD)cl);
 17771   007E5E  0E1A               	movlw	26
 17772   007E60  2407               	addwf	st_clust@dir^0,w,c
 17773   007E62  6E01               	movwf	st_word@ptr^0,c
 17774   007E64  0E00               	movlw	0
 17775   007E66  2008               	addwfc	(st_clust@dir+1)^0,w,c
 17776   007E68  6E02               	movwf	(st_word@ptr+1)^0,c
 17777   007E6A  C009  F003         	movff	st_clust@cl,st_word@val
 17778   007E6E  C00A  F004         	movff	st_clust@cl+1,st_word@val+1
 17779   007E72  EC8B  F03E         	call	_st_word	;wreg free
 17780   007E76                     
 17781                           ;mcc_generated_files/fatfs/ff.c: 1849:  if (fs->fs_type == 3) {
 17782   007E76  C005  FFD9         	movff	st_clust@fs,fsr2l
 17783   007E7A  C006  FFDA         	movff	st_clust@fs+1,fsr2h
 17784   007E7E  0E03               	movlw	3
 17785   007E80  18DE               	xorwf	postinc2,w,c
 17786   007E82  A4D8               	btfss	status,2,c
 17787   007E84  EF46  F03F         	goto	u9891
 17788   007E88  EF48  F03F         	goto	u9890
 17789   007E8C                     u9891:
 17790   007E8C  EF54  F03F         	goto	l390
 17791   007E90                     u9890:
 17792   007E90                     
 17793                           ;mcc_generated_files/fatfs/ff.c: 1850:   st_word(dir + 20, (WORD)(cl >> 16));
 17794   007E90  0E14               	movlw	20
 17795   007E92  2407               	addwf	st_clust@dir^0,w,c
 17796   007E94  6E01               	movwf	st_word@ptr^0,c
 17797   007E96  0E00               	movlw	0
 17798   007E98  2008               	addwfc	(st_clust@dir+1)^0,w,c
 17799   007E9A  6E02               	movwf	(st_word@ptr+1)^0,c
 17800   007E9C  C00B  F003         	movff	st_clust@cl+2,st_word@val
 17801   007EA0  C00C  F004         	movff	st_clust@cl+3,st_word@val+1
 17802   007EA4  EC8B  F03E         	call	_st_word	;wreg free
 17803   007EA8                     l390:
 17804   007EA8  0012               	return		;funcret
 17805   007EAA                     __end_of_st_clust:
 17806                           	callstack 0
 17807                           
 17808 ;; *************** function _st_word *****************
 17809 ;; Defined at:
 17810 ;;		line 610 in file "mcc_generated_files/fatfs/ff.c"
 17811 ;; Parameters:    Size  Location     Type
 17812 ;;  ptr             2    0[COMRAM] PTR unsigned char 
 17813 ;;		 -> drive.win(512), FatFs.win(512), FatFs(563), drive(563), 
 17814 ;;		 -> NULL(0), 
 17815 ;;  val             2    2[COMRAM] unsigned short 
 17816 ;; Auto vars:     Size  Location     Type
 17817 ;;		None
 17818 ;; Return value:  Size  Location     Type
 17819 ;;                  1    wreg      void 
 17820 ;; Registers used:
 17821 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17822 ;; Tracked objects:
 17823 ;;		On entry : 0/0
 17824 ;;		On exit  : 0/0
 17825 ;;		Unchanged: 0/0
 17826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17827 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17830 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17831 ;;Total ram usage:        4 bytes
 17832 ;; Hardware stack levels used: 1
 17833 ;; This function calls:
 17834 ;;		Nothing
 17835 ;; This function is called by:
 17836 ;;		_sync_fs
 17837 ;;		_put_fat
 17838 ;;		_st_clust
 17839 ;;		_f_sync
 17840 ;; This function uses a non-reentrant model
 17841 ;;
 17842                           
 17843                           	psect	text50
 17844   007D16                     __ptext50:
 17845                           	callstack 0
 17846   007D16                     _st_word:
 17847                           	callstack 26
 17848   007D16                     
 17849                           ;mcc_generated_files/fatfs/ff.c: 610: static void st_word (BYTE* ptr, WORD val);mcc_gene
      +                          rated_files/fatfs/ff.c: 611: {;mcc_generated_files/fatfs/ff.c: 612:  *ptr++ = (BYTE)val;
      +                           val >>= 8;
 17850   007D16  C001  FFD9         	movff	st_word@ptr,fsr2l
 17851   007D1A  C002  FFDA         	movff	st_word@ptr+1,fsr2h
 17852   007D1E  C003  FFDF         	movff	st_word@val,indf2
 17853   007D22  4A01               	infsnz	st_word@ptr^0,f,c
 17854   007D24  2A02               	incf	(st_word@ptr+1)^0,f,c
 17855   007D26  5004               	movf	(st_word@val+1)^0,w,c
 17856   007D28  6E03               	movwf	st_word@val^0,c
 17857   007D2A  6A04               	clrf	(st_word@val+1)^0,c
 17858   007D2C                     
 17859                           ;mcc_generated_files/fatfs/ff.c: 613:  *ptr++ = (BYTE)val;
 17860   007D2C  C001  FFD9         	movff	st_word@ptr,fsr2l
 17861   007D30  C002  FFDA         	movff	st_word@ptr+1,fsr2h
 17862   007D34  C003  FFDF         	movff	st_word@val,indf2
 17863   007D38  4A01               	infsnz	st_word@ptr^0,f,c
 17864   007D3A  2A02               	incf	(st_word@ptr+1)^0,f,c
 17865   007D3C  0012               	return		;funcret
 17866   007D3E                     __end_of_st_word:
 17867                           	callstack 0
 17868                           
 17869 ;; *************** function _move_window *****************
 17870 ;; Defined at:
 17871 ;;		line 1056 in file "mcc_generated_files/fatfs/ff.c"
 17872 ;; Parameters:    Size  Location     Type
 17873 ;;  fs              2   16[BANK0 ] PTR struct .
 17874 ;;		 -> FatFs(563), drive(563), NULL(0), 
 17875 ;;  sector          4   18[BANK0 ] unsigned long 
 17876 ;; Auto vars:     Size  Location     Type
 17877 ;;  res             1   22[BANK0 ] enum E68
 17878 ;; Return value:  Size  Location     Type
 17879 ;;                  1    wreg      enum E68
 17880 ;; Registers used:
 17881 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 17882 ;; Tracked objects:
 17883 ;;		On entry : 0/0
 17884 ;;		On exit  : 0/0
 17885 ;;		Unchanged: 0/0
 17886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17887 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17888 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17889 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17890 ;;      Totals:         4       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17891 ;;Total ram usage:       11 bytes
 17892 ;; Hardware stack levels used: 1
 17893 ;; Hardware stack levels required when called: 6
 17894 ;; This function calls:
 17895 ;;		_disk_read
 17896 ;;		_sync_window
 17897 ;; This function is called by:
 17898 ;;		_get_fat
 17899 ;;		_put_fat
 17900 ;;		_dir_alloc
 17901 ;;		_dir_find
 17902 ;;		_dir_register
 17903 ;;		_check_fs
 17904 ;;		_find_volume
 17905 ;;		_f_open
 17906 ;;		_f_sync
 17907 ;;		_dir_read
 17908 ;;		_dir_remove
 17909 ;;		_f_getfree
 17910 ;;		_f_rename
 17911 ;; This function uses a non-reentrant model
 17912 ;;
 17913                           
 17914                           	psect	text51
 17915   0088A2                     __ptext51:
 17916                           	callstack 0
 17917   0088A2                     _move_window:
 17918                           	callstack 20
 17919   0088A2                     
 17920                           ;mcc_generated_files/fatfs/ff.c: 1057:  FATFS* fs,;mcc_generated_files/fatfs/ff.c: 1058:
      +                            DWORD sector;mcc_generated_files/fatfs/ff.c: 1060: {;mcc_generated_files/fatfs/ff.c: 1
      +                          061:  FRESULT res = FR_OK;
 17921   0088A2  0E00               	movlw	0
 17922   0088A4  0100               	movlb	0	; () banked
 17923   0088A6  6F76               	movwf	move_window@res& (0+255),b
 17924   0088A8                     
 17925                           ; BSR set to: 0
 17926                           ;mcc_generated_files/fatfs/ff.c: 1064:  if (sector != fs->winsect) {
 17927   0088A8  EE20 F02F          	lfsr	2,47
 17928   0088AC  5170               	movf	move_window@fs& (0+255),w,b
 17929   0088AE  26D9               	addwf	fsr2l,f,c
 17930   0088B0  5171               	movf	(move_window@fs+1)& (0+255),w,b
 17931   0088B2  22DA               	addwfc	fsr2h,f,c
 17932   0088B4  5172               	movf	move_window@sector& (0+255),w,b
 17933   0088B6  18DE               	xorwf	postinc2,w,c
 17934   0088B8  E10F               	bnz	u8260
 17935   0088BA  5173               	movf	(move_window@sector+1)& (0+255),w,b
 17936   0088BC  18DE               	xorwf	postinc2,w,c
 17937   0088BE  E10C               	bnz	u8260
 17938   0088C0  5174               	movf	(move_window@sector+2)& (0+255),w,b
 17939   0088C2  18DE               	xorwf	postinc2,w,c
 17940   0088C4  E109               	bnz	u8260
 17941   0088C6  5175               	movf	(move_window@sector+3)& (0+255),w,b
 17942   0088C8  18DE               	xorwf	postinc2,w,c
 17943   0088CA  B4D8               	btfsc	status,2,c
 17944   0088CC  EF6A  F044         	goto	u8261
 17945   0088D0  EF6C  F044         	goto	u8260
 17946   0088D4                     u8261:
 17947   0088D4  EFB5  F044         	goto	l7110
 17948   0088D8                     u8260:
 17949   0088D8                     
 17950                           ; BSR set to: 0
 17951                           ;mcc_generated_files/fatfs/ff.c: 1066:   res = sync_window(fs);
 17952   0088D8  C070  F059         	movff	move_window@fs,sync_window@fs
 17953   0088DC  C071  F05A         	movff	move_window@fs+1,sync_window@fs+1
 17954   0088E0  EC8B  F04D         	call	_sync_window	;wreg free
 17955   0088E4  0100               	movlb	0	; () banked
 17956   0088E6  6F76               	movwf	move_window@res& (0+255),b
 17957   0088E8                     
 17958                           ; BSR set to: 0
 17959                           ;mcc_generated_files/fatfs/ff.c: 1068:   if (res == FR_OK) {
 17960   0088E8  5176               	movf	move_window@res& (0+255),w,b
 17961   0088EA  A4D8               	btfss	status,2,c
 17962   0088EC  EF7A  F044         	goto	u8271
 17963   0088F0  EF7C  F044         	goto	u8270
 17964   0088F4                     u8271:
 17965   0088F4  EFB5  F044         	goto	l7110
 17966   0088F8                     u8270:
 17967   0088F8                     
 17968                           ; BSR set to: 0
 17969                           ;mcc_generated_files/fatfs/ff.c: 1069:    if (disk_read(fs->pdrv, fs->win, sector, 1) !=
      +                           RES_OK) {
 17970   0088F8  0E33               	movlw	51
 17971   0088FA  2570               	addwf	move_window@fs& (0+255),w,b
 17972   0088FC  6E4A               	movwf	disk_read@buff^0,c
 17973   0088FE  0E00               	movlw	0
 17974   008900  2171               	addwfc	(move_window@fs+1)& (0+255),w,b
 17975   008902  6E4B               	movwf	(disk_read@buff+1)^0,c
 17976   008904  C072  F04C         	movff	move_window@sector,disk_read@sector
 17977   008908  C073  F04D         	movff	move_window@sector+1,disk_read@sector+1
 17978   00890C  C074  F04E         	movff	move_window@sector+2,disk_read@sector+2
 17979   008910  C075  F04F         	movff	move_window@sector+3,disk_read@sector+3
 17980   008914  0E00               	movlw	0
 17981   008916  6E51               	movwf	(disk_read@count+1)^0,c
 17982   008918  0E01               	movlw	1
 17983   00891A  6E50               	movwf	disk_read@count^0,c
 17984   00891C  EE20 F001          	lfsr	2,1
 17985   008920  5170               	movf	move_window@fs& (0+255),w,b
 17986   008922  26D9               	addwf	fsr2l,f,c
 17987   008924  5171               	movf	(move_window@fs+1)& (0+255),w,b
 17988   008926  22DA               	addwfc	fsr2h,f,c
 17989   008928  50DF               	movf	indf2,w,c
 17990   00892A  EC1F  F041         	call	_disk_read
 17991   00892E  0900               	iorlw	0
 17992   008930  B4D8               	btfsc	status,2,c
 17993   008932  EF9D  F044         	goto	u8281
 17994   008936  EF9F  F044         	goto	u8280
 17995   00893A                     u8281:
 17996   00893A  EFA6  F044         	goto	l7108
 17997   00893E                     u8280:
 17998   00893E                     
 17999                           ;mcc_generated_files/fatfs/ff.c: 1070:     sector = 0xFFFFFFFF;
 18000   00893E  0100               	movlb	0	; () banked
 18001   008940  6972               	setf	move_window@sector& (0+255),b
 18002   008942  6973               	setf	(move_window@sector+1)& (0+255),b
 18003   008944  6974               	setf	(move_window@sector+2)& (0+255),b
 18004   008946  6975               	setf	(move_window@sector+3)& (0+255),b
 18005   008948                     
 18006                           ; BSR set to: 0
 18007                           ;mcc_generated_files/fatfs/ff.c: 1071:     res = FR_DISK_ERR;
 18008   008948  0E01               	movlw	1
 18009   00894A  6F76               	movwf	move_window@res& (0+255),b
 18010   00894C                     l7108:
 18011                           
 18012                           ;mcc_generated_files/fatfs/ff.c: 1073:    fs->winsect = sector;
 18013   00894C  0100               	movlb	0	; () banked
 18014   00894E  EE20 F02F          	lfsr	2,47
 18015   008952  5170               	movf	move_window@fs& (0+255),w,b
 18016   008954  26D9               	addwf	fsr2l,f,c
 18017   008956  5171               	movf	(move_window@fs+1)& (0+255),w,b
 18018   008958  22DA               	addwfc	fsr2h,f,c
 18019   00895A  C072  FFDE         	movff	move_window@sector,postinc2
 18020   00895E  C073  FFDE         	movff	move_window@sector+1,postinc2
 18021   008962  C074  FFDE         	movff	move_window@sector+2,postinc2
 18022   008966  C075  FFDE         	movff	move_window@sector+3,postinc2
 18023   00896A                     l7110:
 18024                           
 18025                           ; BSR set to: 0
 18026                           ;mcc_generated_files/fatfs/ff.c: 1076:  return res;
 18027   00896A  5176               	movf	move_window@res& (0+255),w,b
 18028   00896C                     
 18029                           ; BSR set to: 0
 18030   00896C  0012               	return		;funcret
 18031   00896E                     __end_of_move_window:
 18032                           	callstack 0
 18033                           
 18034 ;; *************** function _sync_window *****************
 18035 ;; Defined at:
 18036 ;;		line 1034 in file "mcc_generated_files/fatfs/ff.c"
 18037 ;; Parameters:    Size  Location     Type
 18038 ;;  fs              2   88[COMRAM] PTR struct .
 18039 ;;		 -> FatFs(563), drive(563), NULL(0), 
 18040 ;; Auto vars:     Size  Location     Type
 18041 ;;  res             1   90[COMRAM] enum E68
 18042 ;; Return value:  Size  Location     Type
 18043 ;;                  1    wreg      enum E68
 18044 ;; Registers used:
 18045 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 18046 ;; Tracked objects:
 18047 ;;		On entry : 0/0
 18048 ;;		On exit  : 0/0
 18049 ;;		Unchanged: 0/0
 18050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18051 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18052 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18053 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18054 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18055 ;;Total ram usage:       19 bytes
 18056 ;; Hardware stack levels used: 1
 18057 ;; Hardware stack levels required when called: 5
 18058 ;; This function calls:
 18059 ;;		_disk_write
 18060 ;; This function is called by:
 18061 ;;		_move_window
 18062 ;;		_sync_fs
 18063 ;;		_dir_clear
 18064 ;;		_f_mkdir
 18065 ;; This function uses a non-reentrant model
 18066 ;;
 18067                           
 18068                           	psect	text52
 18069   009B16                     __ptext52:
 18070                           	callstack 0
 18071   009B16                     _sync_window:
 18072                           	callstack 20
 18073   009B16                     
 18074                           ;mcc_generated_files/fatfs/ff.c: 1035:  FATFS* fs;mcc_generated_files/fatfs/ff.c: 1037: 
      +                          {;mcc_generated_files/fatfs/ff.c: 1038:  FRESULT res = FR_OK;
 18075   009B16  0E00               	movlw	0
 18076   009B18  6E5B               	movwf	sync_window@res^0,c
 18077   009B1A                     
 18078                           ;mcc_generated_files/fatfs/ff.c: 1041:  if (fs->wflag) {
 18079   009B1A  EE20 F003          	lfsr	2,3
 18080   009B1E  5059               	movf	sync_window@fs^0,w,c
 18081   009B20  26D9               	addwf	fsr2l,f,c
 18082   009B22  505A               	movf	(sync_window@fs+1)^0,w,c
 18083   009B24  22DA               	addwfc	fsr2h,f,c
 18084   009B26  50DF               	movf	indf2,w,c
 18085   009B28  B4D8               	btfsc	status,2,c
 18086   009B2A  EF99  F04D         	goto	u8221
 18087   009B2E  EF9B  F04D         	goto	u8220
 18088   009B32                     u8221:
 18089   009B32  EF58  F04E         	goto	l186
 18090   009B36                     u8220:
 18091   009B36                     
 18092                           ;mcc_generated_files/fatfs/ff.c: 1042:   if (disk_write(fs->pdrv, fs->win, fs->winsect, 
      +                          1) == RES_OK) {
 18093   009B36  0E33               	movlw	51
 18094   009B38  2459               	addwf	sync_window@fs^0,w,c
 18095   009B3A  6E4D               	movwf	disk_write@buff^0,c
 18096   009B3C  0E00               	movlw	0
 18097   009B3E  205A               	addwfc	(sync_window@fs+1)^0,w,c
 18098   009B40  6E4E               	movwf	(disk_write@buff+1)^0,c
 18099   009B42  EE20 F02F          	lfsr	2,47
 18100   009B46  5059               	movf	sync_window@fs^0,w,c
 18101   009B48  26D9               	addwf	fsr2l,f,c
 18102   009B4A  505A               	movf	(sync_window@fs+1)^0,w,c
 18103   009B4C  22DA               	addwfc	fsr2h,f,c
 18104   009B4E  CFDE F04F          	movff	postinc2,disk_write@sector
 18105   009B52  CFDE F050          	movff	postinc2,disk_write@sector+1
 18106   009B56  CFDE F051          	movff	postinc2,disk_write@sector+2
 18107   009B5A  CFDE F052          	movff	postinc2,disk_write@sector+3
 18108   009B5E  0E00               	movlw	0
 18109   009B60  6E54               	movwf	(disk_write@count+1)^0,c
 18110   009B62  0E01               	movlw	1
 18111   009B64  6E53               	movwf	disk_write@count^0,c
 18112   009B66  EE20 F001          	lfsr	2,1
 18113   009B6A  5059               	movf	sync_window@fs^0,w,c
 18114   009B6C  26D9               	addwf	fsr2l,f,c
 18115   009B6E  505A               	movf	(sync_window@fs+1)^0,w,c
 18116   009B70  22DA               	addwfc	fsr2h,f,c
 18117   009B72  50DF               	movf	indf2,w,c
 18118   009B74  EC59  F041         	call	_disk_write
 18119   009B78  0900               	iorlw	0
 18120   009B7A  A4D8               	btfss	status,2,c
 18121   009B7C  EFC2  F04D         	goto	u8231
 18122   009B80  EFC4  F04D         	goto	u8230
 18123   009B84                     u8231:
 18124   009B84  EF56  F04E         	goto	l7050
 18125   009B88                     u8230:
 18126   009B88                     
 18127                           ;mcc_generated_files/fatfs/ff.c: 1043:    fs->wflag = 0;
 18128   009B88  EE20 F003          	lfsr	2,3
 18129   009B8C  5059               	movf	sync_window@fs^0,w,c
 18130   009B8E  26D9               	addwf	fsr2l,f,c
 18131   009B90  505A               	movf	(sync_window@fs+1)^0,w,c
 18132   009B92  22DA               	addwfc	fsr2h,f,c
 18133   009B94  0E00               	movlw	0
 18134   009B96  6EDF               	movwf	indf2,c
 18135   009B98                     
 18136                           ;mcc_generated_files/fatfs/ff.c: 1044:    if (fs->winsect - fs->fatbase < fs->fsize) {
 18137   009B98  EE20 F01B          	lfsr	2,27
 18138   009B9C  5059               	movf	sync_window@fs^0,w,c
 18139   009B9E  26D9               	addwf	fsr2l,f,c
 18140   009BA0  505A               	movf	(sync_window@fs+1)^0,w,c
 18141   009BA2  22DA               	addwfc	fsr2h,f,c
 18142   009BA4  EE10 F023          	lfsr	1,35
 18143   009BA8  5059               	movf	sync_window@fs^0,w,c
 18144   009BAA  26E1               	addwf	fsr1l,f,c
 18145   009BAC  505A               	movf	(sync_window@fs+1)^0,w,c
 18146   009BAE  22E2               	addwfc	fsr1h,f,c
 18147   009BB0  CFE6 F064          	movff	postinc1,??_sync_window+4
 18148   009BB4  CFE6 F065          	movff	postinc1,??_sync_window+5
 18149   009BB8  CFE6 F066          	movff	postinc1,??_sync_window+6
 18150   009BBC  CFE6 F067          	movff	postinc1,??_sync_window+7
 18151   009BC0  EE10 F02F          	lfsr	1,47
 18152   009BC4  5059               	movf	sync_window@fs^0,w,c
 18153   009BC6  26E1               	addwf	fsr1l,f,c
 18154   009BC8  505A               	movf	(sync_window@fs+1)^0,w,c
 18155   009BCA  22E2               	addwfc	fsr1h,f,c
 18156   009BCC  CFE6 F068          	movff	postinc1,??_sync_window+8
 18157   009BD0  CFE6 F069          	movff	postinc1,??_sync_window+9
 18158   009BD4  CFE6 F06A          	movff	postinc1,??_sync_window+10
 18159   009BD8  CFE6 F06B          	movff	postinc1,??_sync_window+11
 18160   009BDC  0100               	movlb	0	; () banked
 18161   009BDE  5164               	movf	(??_sync_window+4)& (0+255),w,b
 18162   009BE0  5D68               	subwf	(??_sync_window+8)& (0+255),w,b
 18163   009BE2  6F6C               	movwf	(??_sync_window+12)& (0+255),b
 18164   009BE4  5165               	movf	(??_sync_window+5)& (0+255),w,b
 18165   009BE6  5969               	subwfb	(??_sync_window+9)& (0+255),w,b
 18166   009BE8  6F6D               	movwf	(??_sync_window+13)& (0+255),b
 18167   009BEA  5166               	movf	(??_sync_window+6)& (0+255),w,b
 18168   009BEC  596A               	subwfb	(??_sync_window+10)& (0+255),w,b
 18169   009BEE  6F6E               	movwf	(??_sync_window+14)& (0+255),b
 18170   009BF0  5167               	movf	(??_sync_window+7)& (0+255),w,b
 18171   009BF2  596B               	subwfb	(??_sync_window+11)& (0+255),w,b
 18172   009BF4  6F6F               	movwf	(??_sync_window+15)& (0+255),b
 18173   009BF6  50DE               	movf	postinc2,w,c
 18174   009BF8  5D6C               	subwf	(??_sync_window+12)& (0+255),w,b
 18175   009BFA  50DE               	movf	postinc2,w,c
 18176   009BFC  596D               	subwfb	(??_sync_window+13)& (0+255),w,b
 18177   009BFE  50DE               	movf	postinc2,w,c
 18178   009C00  596E               	subwfb	(??_sync_window+14)& (0+255),w,b
 18179   009C02  50DE               	movf	postinc2,w,c
 18180   009C04  596F               	subwfb	(??_sync_window+15)& (0+255),w,b
 18181   009C06  B0D8               	btfsc	status,0,c
 18182   009C08  EF08  F04E         	goto	u8241
 18183   009C0C  EF0A  F04E         	goto	u8240
 18184   009C10                     u8241:
 18185   009C10  EF58  F04E         	goto	l186
 18186   009C14                     u8240:
 18187   009C14                     
 18188                           ; BSR set to: 0
 18189                           ;mcc_generated_files/fatfs/ff.c: 1045:     if (fs->n_fats == 2) disk_write(fs->pdrv, fs-
      +                          >win, fs->winsect + fs->fsize, 1);
 18190   009C14  EE20 F002          	lfsr	2,2
 18191   009C18  5059               	movf	sync_window@fs^0,w,c
 18192   009C1A  26D9               	addwf	fsr2l,f,c
 18193   009C1C  505A               	movf	(sync_window@fs+1)^0,w,c
 18194   009C1E  22DA               	addwfc	fsr2h,f,c
 18195   009C20  0E02               	movlw	2
 18196   009C22  18DE               	xorwf	postinc2,w,c
 18197   009C24  A4D8               	btfss	status,2,c
 18198   009C26  EF17  F04E         	goto	u8251
 18199   009C2A  EF19  F04E         	goto	u8250
 18200   009C2E                     u8251:
 18201   009C2E  EF58  F04E         	goto	l186
 18202   009C32                     u8250:
 18203   009C32                     
 18204                           ; BSR set to: 0
 18205   009C32  0E33               	movlw	51
 18206   009C34  2459               	addwf	sync_window@fs^0,w,c
 18207   009C36  6E4D               	movwf	disk_write@buff^0,c
 18208   009C38  0E00               	movlw	0
 18209   009C3A  205A               	addwfc	(sync_window@fs+1)^0,w,c
 18210   009C3C  6E4E               	movwf	(disk_write@buff+1)^0,c
 18211   009C3E  EE20 F01B          	lfsr	2,27
 18212   009C42  5059               	movf	sync_window@fs^0,w,c
 18213   009C44  26D9               	addwf	fsr2l,f,c
 18214   009C46  505A               	movf	(sync_window@fs+1)^0,w,c
 18215   009C48  22DA               	addwfc	fsr2h,f,c
 18216   009C4A  CFDE F060          	movff	postinc2,??_sync_window
 18217   009C4E  CFDE F061          	movff	postinc2,??_sync_window+1
 18218   009C52  CFDE F062          	movff	postinc2,??_sync_window+2
 18219   009C56  CFDE F063          	movff	postinc2,??_sync_window+3
 18220   009C5A  EE20 F02F          	lfsr	2,47
 18221   009C5E  5059               	movf	sync_window@fs^0,w,c
 18222   009C60  26D9               	addwf	fsr2l,f,c
 18223   009C62  505A               	movf	(sync_window@fs+1)^0,w,c
 18224   009C64  22DA               	addwfc	fsr2h,f,c
 18225   009C66  CFDE F064          	movff	postinc2,??_sync_window+4
 18226   009C6A  CFDE F065          	movff	postinc2,??_sync_window+5
 18227   009C6E  CFDE F066          	movff	postinc2,??_sync_window+6
 18228   009C72  CFDE F067          	movff	postinc2,??_sync_window+7
 18229   009C76  5160               	movf	??_sync_window& (0+255),w,b
 18230   009C78  2564               	addwf	(??_sync_window+4)& (0+255),w,b
 18231   009C7A  6E4F               	movwf	disk_write@sector^0,c
 18232   009C7C  5161               	movf	(??_sync_window+1)& (0+255),w,b
 18233   009C7E  2165               	addwfc	(??_sync_window+5)& (0+255),w,b
 18234   009C80  6E50               	movwf	(disk_write@sector+1)^0,c
 18235   009C82  5162               	movf	(??_sync_window+2)& (0+255),w,b
 18236   009C84  2166               	addwfc	(??_sync_window+6)& (0+255),w,b
 18237   009C86  6E51               	movwf	(disk_write@sector+2)^0,c
 18238   009C88  5163               	movf	(??_sync_window+3)& (0+255),w,b
 18239   009C8A  2167               	addwfc	(??_sync_window+7)& (0+255),w,b
 18240   009C8C  6E52               	movwf	(disk_write@sector+3)^0,c
 18241   009C8E  0E00               	movlw	0
 18242   009C90  6E54               	movwf	(disk_write@count+1)^0,c
 18243   009C92  0E01               	movlw	1
 18244   009C94  6E53               	movwf	disk_write@count^0,c
 18245   009C96  EE20 F001          	lfsr	2,1
 18246   009C9A  5059               	movf	sync_window@fs^0,w,c
 18247   009C9C  26D9               	addwf	fsr2l,f,c
 18248   009C9E  505A               	movf	(sync_window@fs+1)^0,w,c
 18249   009CA0  22DA               	addwfc	fsr2h,f,c
 18250   009CA2  50DF               	movf	indf2,w,c
 18251   009CA4  EC59  F041         	call	_disk_write
 18252   009CA8  EF58  F04E         	goto	l186
 18253   009CAC                     l7050:
 18254                           
 18255                           ;mcc_generated_files/fatfs/ff.c: 1048:    res = FR_DISK_ERR;
 18256   009CAC  0E01               	movlw	1
 18257   009CAE  6E5B               	movwf	sync_window@res^0,c
 18258   009CB0                     l186:
 18259                           
 18260                           ;mcc_generated_files/fatfs/ff.c: 1051:  return res;
 18261   009CB0  505B               	movf	sync_window@res^0,w,c
 18262   009CB2  0012               	return		;funcret
 18263   009CB4                     __end_of_sync_window:
 18264                           	callstack 0
 18265                           
 18266 ;; *************** function _disk_write *****************
 18267 ;; Defined at:
 18268 ;;		line 124 in file "mcc_generated_files/fatfs/diskio.c"
 18269 ;; Parameters:    Size  Location     Type
 18270 ;;  pdrv            1    wreg     unsigned char 
 18271 ;;  buff            2   76[COMRAM] PTR const unsigned char 
 18272 ;;		 -> drive.win(512), file.buf(512), pb.buf(64), pb.buf(64), 
 18273 ;;		 -> pb.buf(64), FatFs.win(512), Fil.buf(512), __heap_hi(0), 
 18274 ;;		 -> RAM(3895), Fil(546), FatFs(563), f_printf@pb(70), 
 18275 ;;		 -> f_puts@pb(70), f_putc@pb(70), file(546), drive(563), 
 18276 ;;		 -> FatFsDemo_Tasks@data(13), NULL(0), 
 18277 ;;  sector          4   78[COMRAM] unsigned long 
 18278 ;;  count           2   82[COMRAM] unsigned int 
 18279 ;; Auto vars:     Size  Location     Type
 18280 ;;  pdrv            1   86[COMRAM] unsigned char 
 18281 ;;  res             1   87[COMRAM] enum E12
 18282 ;; Return value:  Size  Location     Type
 18283 ;;                  1    wreg      enum E12
 18284 ;; Registers used:
 18285 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 18286 ;; Tracked objects:
 18287 ;;		On entry : 0/0
 18288 ;;		On exit  : 0/0
 18289 ;;		Unchanged: 0/0
 18290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18291 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18292 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18293 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18294 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18295 ;;Total ram usage:       12 bytes
 18296 ;; Hardware stack levels used: 1
 18297 ;; Hardware stack levels required when called: 4
 18298 ;; This function calls:
 18299 ;;		_SD_SPI_SectorWrite
 18300 ;; This function is called by:
 18301 ;;		_sync_window
 18302 ;;		_sync_fs
 18303 ;;		_dir_clear
 18304 ;;		_f_write
 18305 ;;		_f_sync
 18306 ;;		_f_lseek
 18307 ;;		_f_read
 18308 ;;		_f_truncate
 18309 ;; This function uses a non-reentrant model
 18310 ;;
 18311                           
 18312                           	psect	text53
 18313   0082B2                     __ptext53:
 18314                           	callstack 0
 18315   0082B2                     _disk_write:
 18316                           	callstack 24
 18317                           
 18318                           ;incstack = 0
 18319                           ;disk_write@pdrv stored from wreg
 18320   0082B2  6E57               	movwf	disk_write@pdrv^0,c
 18321   0082B4                     
 18322                           ;mcc_generated_files/fatfs/diskio.c: 125:     BYTE pdrv,;mcc_generated_files/fatfs/diski
      +                          o.c: 126:     const BYTE *buff,;mcc_generated_files/fatfs/diskio.c: 127:     DWORD secto
      +                          r,;mcc_generated_files/fatfs/diskio.c: 128:     UINT count;mcc_generated_files/fatfs/dis
      +                          kio.c: 130: {;mcc_generated_files/fatfs/diskio.c: 131:     DRESULT res = RES_PARERR;
 18323   0082B4  0E04               	movlw	4
 18324   0082B6  6E58               	movwf	disk_write@res^0,c
 18325                           
 18326                           ;mcc_generated_files/fatfs/diskio.c: 133:     switch (pdrv) {
 18327   0082B8  EF80  F041         	goto	l7006
 18328   0082BC                     l6998:
 18329                           
 18330                           ;mcc_generated_files/fatfs/diskio.c: 135:             if(SD_SPI_SectorWrite(sector, buff
      +                          , count) == 1)
 18331   0082BC  C04F  F032         	movff	disk_write@sector,SD_SPI_SectorWrite@sector_address
 18332   0082C0  C050  F033         	movff	disk_write@sector+1,SD_SPI_SectorWrite@sector_address+1
 18333   0082C4  C051  F034         	movff	disk_write@sector+2,SD_SPI_SectorWrite@sector_address+2
 18334   0082C8  C052  F035         	movff	disk_write@sector+3,SD_SPI_SectorWrite@sector_address+3
 18335   0082CC  C04D  F036         	movff	disk_write@buff,SD_SPI_SectorWrite@buffer
 18336   0082D0  C04E  F037         	movff	disk_write@buff+1,SD_SPI_SectorWrite@buffer+1
 18337   0082D4  C053  F038         	movff	disk_write@count,SD_SPI_SectorWrite@sector_count
 18338   0082D8  C054  F039         	movff	disk_write@count+1,SD_SPI_SectorWrite@sector_count+1
 18339   0082DC  EC2A  F048         	call	_SD_SPI_SectorWrite	;wreg free
 18340   0082E0  06E8               	decf	wreg,f,c
 18341   0082E2  A4D8               	btfss	status,2,c
 18342   0082E4  EF76  F041         	goto	u8201
 18343   0082E8  EF78  F041         	goto	u8200
 18344   0082EC                     u8201:
 18345   0082EC  EF7C  F041         	goto	l7002
 18346   0082F0                     u8200:
 18347   0082F0                     
 18348                           ;mcc_generated_files/fatfs/diskio.c: 136:             {;mcc_generated_files/fatfs/diskio
      +                          .c: 137:                 res = RES_OK;
 18349   0082F0  0E00               	movlw	0
 18350   0082F2  6E58               	movwf	disk_write@res^0,c
 18351                           
 18352                           ;mcc_generated_files/fatfs/diskio.c: 138:             }
 18353   0082F4  EF91  F041         	goto	l7008
 18354   0082F8                     l7002:
 18355                           
 18356                           ;mcc_generated_files/fatfs/diskio.c: 140:             {;mcc_generated_files/fatfs/diskio
      +                          .c: 141:                 res = RES_ERROR;
 18357   0082F8  0E01               	movlw	1
 18358   0082FA  6E58               	movwf	disk_write@res^0,c
 18359   0082FC  EF91  F041         	goto	l7008
 18360   008300                     l7006:
 18361   008300  5057               	movf	disk_write@pdrv^0,w,c
 18362   008302  6E55               	movwf	??_disk_write^0,c
 18363   008304  6A56               	clrf	(??_disk_write+1)^0,c
 18364                           
 18365                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18366                           ; Switch size 1, requested type "simple"
 18367                           ; Number of cases is 1, Range of values is 0 to 0
 18368                           ; switch strategies available:
 18369                           ; Name         Instructions Cycles
 18370                           ; simple_byte            4     3 (average)
 18371                           ;	Chosen strategy is simple_byte
 18372   008306  5056               	movf	(??_disk_write+1)^0,w,c
 18373   008308  0A00               	xorlw	0	; case 0
 18374   00830A  B4D8               	btfsc	status,2,c
 18375   00830C  EF8A  F041         	goto	l10686
 18376   008310  EF91  F041         	goto	l7008
 18377   008314                     l10686:
 18378                           
 18379                           ; Switch size 1, requested type "simple"
 18380                           ; Number of cases is 1, Range of values is 0 to 0
 18381                           ; switch strategies available:
 18382                           ; Name         Instructions Cycles
 18383                           ; simple_byte            4     3 (average)
 18384                           ;	Chosen strategy is simple_byte
 18385   008314  5055               	movf	??_disk_write^0,w,c
 18386   008316  0A00               	xorlw	0	; case 0
 18387   008318  B4D8               	btfsc	status,2,c
 18388   00831A  EF5E  F041         	goto	l6998
 18389   00831E  EF91  F041         	goto	l7008
 18390   008322                     l7008:
 18391                           
 18392                           ;mcc_generated_files/fatfs/diskio.c: 149:     return res;
 18393   008322  5058               	movf	disk_write@res^0,w,c
 18394   008324  0012               	return		;funcret
 18395   008326                     __end_of_disk_write:
 18396                           	callstack 0
 18397                           
 18398 ;; *************** function _SD_SPI_SectorWrite *****************
 18399 ;; Defined at:
 18400 ;;		line 426 in file "mcc_generated_files/sd_spi/sd_spi.c"
 18401 ;; Parameters:    Size  Location     Type
 18402 ;;  sector_addre    4   49[COMRAM] unsigned long 
 18403 ;;  buffer          2   53[COMRAM] PTR const unsigned char 
 18404 ;;		 -> drive.win(512), file.buf(512), pb.buf(64), pb.buf(64), 
 18405 ;;		 -> pb.buf(64), FatFs.win(512), Fil.buf(512), __heap_hi(0), 
 18406 ;;		 -> RAM(3895), Fil(546), FatFs(563), f_printf@pb(70), 
 18407 ;;		 -> f_puts@pb(70), f_putc@pb(70), file(546), drive(563), 
 18408 ;;		 -> FatFsDemo_Tasks@data(13), NULL(0), 
 18409 ;;  sector_count    2   55[COMRAM] unsigned short 
 18410 ;; Auto vars:     Size  Location     Type
 18411 ;;  info           13   63[COMRAM] struct SD_ASYNC_IO
 18412 ;;  i               2   61[COMRAM] unsigned short 
 18413 ;;  status          1   60[COMRAM] unsigned char 
 18414 ;;  result          1   59[COMRAM] _Bool 
 18415 ;; Return value:  Size  Location     Type
 18416 ;;                  1    wreg      _Bool 
 18417 ;; Registers used:
 18418 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 18419 ;; Tracked objects:
 18420 ;;		On entry : 0/0
 18421 ;;		On exit  : 0/0
 18422 ;;		Unchanged: 0/0
 18423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18424 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18425 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18426 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18427 ;;      Totals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18428 ;;Total ram usage:       27 bytes
 18429 ;; Hardware stack levels used: 1
 18430 ;; Hardware stack levels required when called: 3
 18431 ;; This function calls:
 18432 ;;		_SDFAST_open
 18433 ;;		_SDSLOW_open
 18434 ;;		_SD_SPI_AsyncWriteTasks
 18435 ;;		_SPI1_Close
 18436 ;; This function is called by:
 18437 ;;		_disk_write
 18438 ;; This function uses a non-reentrant model
 18439 ;;
 18440                           
 18441                           	psect	text54
 18442   009054                     __ptext54:
 18443                           	callstack 0
 18444   009054                     _SD_SPI_SectorWrite:
 18445                           	callstack 24
 18446   009054                     
 18447                           ;mcc_generated_files/sd_spi/sd_spi.c: 426: _Bool SD_SPI_SectorWrite(uint32_t sector_addr
      +                          ess, const uint8_t* buffer, uint16_t sector_count);mcc_generated_files/sd_spi/sd_spi.c: 
      +                          427: {;mcc_generated_files/sd_spi/sd_spi.c: 428:     struct SD_ASYNC_IO info;;mcc_genera
      +                          ted_files/sd_spi/sd_spi.c: 429:     uint8_t status;;mcc_generated_files/sd_spi/sd_spi.c:
      +                           430:     _Bool result = 0;
 18448   009054  0E00               	movlw	0
 18449   009056  6E3C               	movwf	SD_SPI_SectorWrite@result^0,c
 18450                           
 18451                           ;mcc_generated_files/sd_spi/sd_spi.c: 431:     uint16_t i;;mcc_generated_files/sd_spi/sd
      +                          _spi.c: 433:     for(i=0; i<sector_count; i++)
 18452   009058  0E00               	movlw	0
 18453   00905A  6E3F               	movwf	(SD_SPI_SectorWrite@i+1)^0,c
 18454   00905C  0E00               	movlw	0
 18455   00905E  6E3E               	movwf	SD_SPI_SectorWrite@i^0,c
 18456   009060  EFB8  F048         	goto	l6812
 18457   009064                     l6784:
 18458                           
 18459                           ;mcc_generated_files/sd_spi/sd_spi.c: 434:     {;mcc_generated_files/sd_spi/sd_spi.c: 43
      +                          6:         info.wNumBytes = 1 << 9;
 18460   009064  0E02               	movlw	2
 18461   009066  6E41               	movwf	(SD_SPI_SectorWrite@info+1)^0,c
 18462   009068  0E00               	movlw	0
 18463   00906A  6E40               	movwf	SD_SPI_SectorWrite@info^0,c
 18464                           
 18465                           ;mcc_generated_files/sd_spi/sd_spi.c: 437:         info.dwBytesRemaining = 1 << 9;
 18466   00906C  0E00               	movlw	0
 18467   00906E  6E42               	movwf	(SD_SPI_SectorWrite@info+2)^0,c
 18468   009070  0E02               	movlw	2
 18469   009072  6E43               	movwf	(SD_SPI_SectorWrite@info+3)^0,c
 18470   009074  0E00               	movlw	0
 18471   009076  6E44               	movwf	(SD_SPI_SectorWrite@info+4)^0,c
 18472   009078  0E00               	movlw	0
 18473   00907A  6E45               	movwf	(SD_SPI_SectorWrite@info+5)^0,c
 18474   00907C                     
 18475                           ;mcc_generated_files/sd_spi/sd_spi.c: 438:         info.pBuffer = (uint8_t*)buffer + (i 
      +                          << 9);
 18476   00907C  C03E  F03A         	movff	SD_SPI_SectorWrite@i,??_SD_SPI_SectorWrite
 18477   009080  C03F  F03B         	movff	SD_SPI_SectorWrite@i+1,??_SD_SPI_SectorWrite+1
 18478   009084  0E09               	movlw	9
 18479   009086                     u7865:
 18480   009086  90D8               	bcf	status,0,c
 18481   009088  363A               	rlcf	??_SD_SPI_SectorWrite^0,f,c
 18482   00908A  363B               	rlcf	(??_SD_SPI_SectorWrite+1)^0,f,c
 18483   00908C  2EE8               	decfsz	wreg,f,c
 18484   00908E  EF43  F048         	goto	u7865
 18485   009092  503A               	movf	??_SD_SPI_SectorWrite^0,w,c
 18486   009094  2436               	addwf	SD_SPI_SectorWrite@buffer^0,w,c
 18487   009096  6E46               	movwf	(SD_SPI_SectorWrite@info+6)^0,c
 18488   009098  503B               	movf	(??_SD_SPI_SectorWrite+1)^0,w,c
 18489   00909A  2037               	addwfc	(SD_SPI_SectorWrite@buffer+1)^0,w,c
 18490   00909C  6E47               	movwf	(SD_SPI_SectorWrite@info+7)^0,c
 18491   00909E                     
 18492                           ;mcc_generated_files/sd_spi/sd_spi.c: 439:         info.dwAddress = sector_address + i;
 18493   00909E  503E               	movf	SD_SPI_SectorWrite@i^0,w,c
 18494   0090A0  2432               	addwf	SD_SPI_SectorWrite@sector_address^0,w,c
 18495   0090A2  6E48               	movwf	(SD_SPI_SectorWrite@info+8)^0,c
 18496   0090A4  503F               	movf	(SD_SPI_SectorWrite@i+1)^0,w,c
 18497   0090A6  2033               	addwfc	(SD_SPI_SectorWrite@sector_address+1)^0,w,c
 18498   0090A8  6E49               	movwf	(SD_SPI_SectorWrite@info+9)^0,c
 18499   0090AA  0E00               	movlw	0
 18500   0090AC  2034               	addwfc	(SD_SPI_SectorWrite@sector_address+2)^0,w,c
 18501   0090AE  6E4A               	movwf	(SD_SPI_SectorWrite@info+10)^0,c
 18502   0090B0  0E00               	movlw	0
 18503   0090B2  2035               	addwfc	(SD_SPI_SectorWrite@sector_address+3)^0,w,c
 18504   0090B4  6E4B               	movwf	(SD_SPI_SectorWrite@info+11)^0,c
 18505                           
 18506                           ;mcc_generated_files/sd_spi/sd_spi.c: 440:         info.bStateVariable = 0x01;
 18507   0090B6  0E01               	movlw	1
 18508   0090B8  6E4C               	movwf	(SD_SPI_SectorWrite@info+12)^0,c
 18509   0090BA                     
 18510                           ;mcc_generated_files/sd_spi/sd_spi.c: 442:         if( spiMaster[SDFAST].spiOpen() == 0 
      +                          )
 18511   0090BA  0E59               	movlw	low (_spiMaster+2)
 18512   0090BC  6EF6               	movwf	tblptrl,c
 18513   0090BE  0EFF               	movlw	high (_spiMaster+2)
 18514   0090C0  6EF7               	movwf	tblptrh,c
 18515   0090C2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 18516   0090C2  6AF8               	clrf	tblptru,c
 18517   0090C4                     	endif
 18518   0090C4                     	if	0	;tblptru may be non-zero
 18519   0090C4                     	endif
 18520   0090C4  0009               	tblrd		*+
 18521   0090C6  CFF5 F03A          	movff	tablat,??_SD_SPI_SectorWrite
 18522   0090CA  0009               	tblrd		*+
 18523   0090CC  CFF5 F03B          	movff	tablat,??_SD_SPI_SectorWrite+1
 18524   0090D0  D802               	call	u7878
 18525   0090D2  EF74  F048         	goto	u7879
 18526   0090D6                     u7878:
 18527   0090D6  0005               	push	
 18528   0090D8  6EFA               	movwf	pclath,c
 18529   0090DA  503A               	movf	??_SD_SPI_SectorWrite^0,w,c
 18530   0090DC  6EFD               	movwf	tosl,c
 18531   0090DE  503B               	movf	(??_SD_SPI_SectorWrite+1)^0,w,c
 18532   0090E0  6EFE               	movwf	tosh,c
 18533   0090E2  6AFF               	clrf	tosu,c
 18534   0090E4  50FA               	movf	pclath,w,c
 18535   0090E6  0012               	return		;indir
 18536   0090E8                     u7879:
 18537   0090E8  0900               	iorlw	0
 18538   0090EA  A4D8               	btfss	status,2,c
 18539   0090EC  EF7A  F048         	goto	u7881
 18540   0090F0  EF7C  F048         	goto	u7880
 18541   0090F4                     u7881:
 18542   0090F4  EF7F  F048         	goto	l1060
 18543   0090F8                     u7880:
 18544   0090F8                     
 18545                           ;mcc_generated_files/sd_spi/sd_spi.c: 443:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 444:             return 0;
 18546   0090F8  0E00               	movlw	0
 18547   0090FA  EFC4  F048         	goto	l1059
 18548   0090FE                     l1060:
 18549   0090FE  948B               	bcf	139,2,c	;volatile
 18550   009100                     l6796:
 18551                           
 18552                           ;mcc_generated_files/sd_spi/sd_spi.c: 449:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 450:             status = SD_SPI_AsyncWriteTasks(&info);
 18553   009100  0E40               	movlw	low SD_SPI_SectorWrite@info
 18554   009102  6E23               	movwf	SD_SPI_AsyncWriteTasks@info^0,c
 18555   009104  0E00               	movlw	high SD_SPI_SectorWrite@info
 18556   009106  6E24               	movwf	(SD_SPI_AsyncWriteTasks@info+1)^0,c
 18557   009108  ECB6  F065         	call	_SD_SPI_AsyncWriteTasks	;wreg free
 18558   00910C  6E3D               	movwf	SD_SPI_SectorWrite@status^0,c
 18559   00910E                     
 18560                           ;mcc_generated_files/sd_spi/sd_spi.c: 451:             if(status == 0x00)
 18561   00910E  503D               	movf	SD_SPI_SectorWrite@status^0,w,c
 18562   009110  A4D8               	btfss	status,2,c
 18563   009112  EF8D  F048         	goto	u7891
 18564   009116  EF8F  F048         	goto	u7890
 18565   00911A                     u7891:
 18566   00911A  EF93  F048         	goto	l6804
 18567   00911E                     u7890:
 18568   00911E                     
 18569                           ;mcc_generated_files/sd_spi/sd_spi.c: 452:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 453:                 result = 1;
 18570   00911E  0E01               	movlw	1
 18571   009120  6E3C               	movwf	SD_SPI_SectorWrite@result^0,c
 18572                           
 18573                           ;mcc_generated_files/sd_spi/sd_spi.c: 454:                 break;
 18574   009122  EF9D  F048         	goto	l1068
 18575   009126                     l6804:
 18576   009126  283D               	incf	SD_SPI_SectorWrite@status^0,w,c
 18577   009128  A4D8               	btfss	status,2,c
 18578   00912A  EF99  F048         	goto	u7901
 18579   00912E  EF9B  F048         	goto	u7900
 18580   009132                     u7901:
 18581   009132  EF80  F048         	goto	l6796
 18582   009136                     u7900:
 18583   009136                     
 18584                           ;mcc_generated_files/sd_spi/sd_spi.c: 457:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 458:                 result = 0;
 18585   009136  0E00               	movlw	0
 18586   009138  6E3C               	movwf	SD_SPI_SectorWrite@result^0,c
 18587   00913A                     l1068:
 18588   00913A  848B               	bsf	139,2,c	;volatile
 18589   00913C                     
 18590                           ;mcc_generated_files/sd_spi/sd_spi.c: 464:         spiMaster[SDFAST].spiClose();
 18591   00913C  0E57               	movlw	low _spiMaster
 18592   00913E  6EF6               	movwf	tblptrl,c
 18593   009140                     	if	1	;There is more than 1 active tblptr byte
 18594   009140  0EFF               	movlw	high _spiMaster
 18595   009142  6EF7               	movwf	tblptrh,c
 18596   009144                     	endif
 18597   009144                     	if	1	;There are 3 active tblptr bytes
 18598   009144  0E00               	movlw	low (_spiMaster shr (0+16))
 18599   009146  6EF8               	movwf	tblptru,c
 18600   009148                     	endif
 18601   009148  0009               	tblrd		*+
 18602   00914A  CFF5 F03A          	movff	tablat,??_SD_SPI_SectorWrite
 18603   00914E  0009               	tblrd		*+
 18604   009150  CFF5 F03B          	movff	tablat,??_SD_SPI_SectorWrite+1
 18605   009154  D802               	call	u7918
 18606   009156  EFB6  F048         	goto	u7919
 18607   00915A                     u7918:
 18608   00915A  0005               	push	
 18609   00915C  6EFA               	movwf	pclath,c
 18610   00915E  503A               	movf	??_SD_SPI_SectorWrite^0,w,c
 18611   009160  6EFD               	movwf	tosl,c
 18612   009162  503B               	movf	(??_SD_SPI_SectorWrite+1)^0,w,c
 18613   009164  6EFE               	movwf	tosh,c
 18614   009166  6AFF               	clrf	tosu,c
 18615   009168  50FA               	movf	pclath,w,c
 18616   00916A  0012               	return		;indir
 18617   00916C                     u7919:
 18618   00916C                     
 18619                           ;mcc_generated_files/sd_spi/sd_spi.c: 465:     }
 18620   00916C  4A3E               	infsnz	SD_SPI_SectorWrite@i^0,f,c
 18621   00916E  2A3F               	incf	(SD_SPI_SectorWrite@i+1)^0,f,c
 18622   009170                     l6812:
 18623   009170  5038               	movf	SD_SPI_SectorWrite@sector_count^0,w,c
 18624   009172  5C3E               	subwf	SD_SPI_SectorWrite@i^0,w,c
 18625   009174  5039               	movf	(SD_SPI_SectorWrite@sector_count+1)^0,w,c
 18626   009176  583F               	subwfb	(SD_SPI_SectorWrite@i+1)^0,w,c
 18627   009178  A0D8               	btfss	status,0,c
 18628   00917A  EFC1  F048         	goto	u7921
 18629   00917E  EFC3  F048         	goto	u7920
 18630   009182                     u7921:
 18631   009182  EF32  F048         	goto	l6784
 18632   009186                     u7920:
 18633   009186                     
 18634                           ;mcc_generated_files/sd_spi/sd_spi.c: 467:     return result;
 18635   009186  503C               	movf	SD_SPI_SectorWrite@result^0,w,c
 18636   009188                     l1059:
 18637   009188  0012               	return		;funcret
 18638   00918A                     __end_of_SD_SPI_SectorWrite:
 18639                           	callstack 0
 18640                           
 18641 ;; *************** function _SD_SPI_AsyncWriteTasks *****************
 18642 ;; Defined at:
 18643 ;;		line 1001 in file "mcc_generated_files/sd_spi/sd_spi.c"
 18644 ;; Parameters:    Size  Location     Type
 18645 ;;  info            2   34[COMRAM] PTR struct SD_ASYNC_IO
 18646 ;;		 -> SD_SPI_SectorWrite@info(13), 
 18647 ;; Auto vars:     Size  Location     Type
 18648 ;;  response        5   40[COMRAM] struct .
 18649 ;;  preEraseBloc    4   45[COMRAM] unsigned long 
 18650 ;; Return value:  Size  Location     Type
 18651 ;;                  1    wreg      unsigned char 
 18652 ;; Registers used:
 18653 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 18654 ;; Tracked objects:
 18655 ;;		On entry : 0/0
 18656 ;;		On exit  : 0/0
 18657 ;;		Unchanged: 0/0
 18658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18659 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18660 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18661 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18662 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18663 ;;Total ram usage:       15 bytes
 18664 ;; Hardware stack levels used: 1
 18665 ;; Hardware stack levels required when called: 2
 18666 ;; This function calls:
 18667 ;;		_SD_SendCmd
 18668 ;;		_SPI1_ExchangeBlock
 18669 ;;		_SPI1_ExchangeByte
 18670 ;; This function is called by:
 18671 ;;		_SD_SPI_SectorWrite
 18672 ;; This function uses a non-reentrant model
 18673 ;;
 18674                           
 18675                           	psect	text55
 18676   00CB6C                     __ptext55:
 18677                           	callstack 0
 18678   00CB6C                     _SD_SPI_AsyncWriteTasks:
 18679                           	callstack 24
 18680   00CB6C                     
 18681                           ;mcc_generated_files/sd_spi/sd_spi.c: 1001: static uint8_t SD_SPI_AsyncWriteTasks(struct
      +                           SD_ASYNC_IO* info);mcc_generated_files/sd_spi/sd_spi.c: 1002: {;mcc_generated_files/sd_
      +                          spi/sd_spi.c: 1003:     static uint8_t data_byte;;mcc_generated_files/sd_spi/sd_spi.c: 1
      +                          004:     static uint16_t blockCounter;;mcc_generated_files/sd_spi/sd_spi.c: 1005:     st
      +                          atic uint32_t WriteTimeout;;mcc_generated_files/sd_spi/sd_spi.c: 1006:     static uint8_
      +                          t command;;mcc_generated_files/sd_spi/sd_spi.c: 1007:     uint32_t preEraseBlockCount;
 18682   00CB6C  EFDC  F068         	goto	l6740
 18683   00CB70                     l6554:
 18684                           
 18685                           ;mcc_generated_files/sd_spi/sd_spi.c: 1014:             return 0x00;
 18686   00CB70  0E00               	movlw	0
 18687   00CB72  EF07  F069         	goto	l1196
 18688   00CB76                     l6558:
 18689                           
 18690                           ;mcc_generated_files/sd_spi/sd_spi.c: 1018:             mediaInformation.state = SD_STAT
      +                          E_BUSY;
 18691   00CB76  0E02               	movlw	2
 18692   00CB78  0101               	movlb	1	; () banked
 18693   00CB7A  6FDA               	movwf	(_mediaInformation+3)& (0+255),b
 18694                           
 18695                           ;mcc_generated_files/sd_spi/sd_spi.c: 1019:             blockCounter = 512u;
 18696   00CB7C  0E02               	movlw	2
 18697   00CB7E  6F24               	movwf	(SD_SPI_AsyncWriteTasks@blockCounter+1)& (0+255),b
 18698   00CB80  0E00               	movlw	0
 18699   00CB82  6F23               	movwf	SD_SPI_AsyncWriteTasks@blockCounter& (0+255),b
 18700   00CB84                     
 18701                           ; BSR set to: 1
 18702                           ;mcc_generated_files/sd_spi/sd_spi.c: 1024:             ioInfo = *info;
 18703   00CB84  C023  FFD9         	movff	SD_SPI_AsyncWriteTasks@info,fsr2l
 18704   00CB88  C024  FFDA         	movff	SD_SPI_AsyncWriteTasks@info+1,fsr2h
 18705   00CB8C  EE11  F000         	lfsr	1,_ioInfo
 18706   00CB90  0E0C               	movlw	12
 18707   00CB92                     u7471:
 18708   00CB92  CFDB FFE3          	movff	plusw2,plusw1
 18709   00CB96  06E8               	decf	wreg,f,c
 18710   00CB98  E2FC               	bc	u7471
 18711   00CB9A                     
 18712                           ; BSR set to: 1
 18713                           ;mcc_generated_files/sd_spi/sd_spi.c: 1028:             if(ioInfo.dwBytesRemaining <= 51
      +                          2u)
 18714   00CB9A  5105               	movf	(_ioInfo+5)& (0+255),w,b
 18715   00CB9C  1104               	iorwf	(_ioInfo+4)& (0+255),w,b
 18716   00CB9E  E108               	bnz	u7481
 18717   00CBA0  0502               	decf	(_ioInfo+2)& (0+255),w,b
 18718   00CBA2  0E02               	movlw	2
 18719   00CBA4  5903               	subwfb	(_ioInfo+3)& (0+255),w,b
 18720   00CBA6  B0D8               	btfsc	status,0,c
 18721   00CBA8  EFD8  F065         	goto	u7481
 18722   00CBAC  EFDA  F065         	goto	u7480
 18723   00CBB0                     u7481:
 18724   00CBB0  EFDE  F065         	goto	l6566
 18725   00CBB4                     u7480:
 18726   00CBB4                     
 18727                           ; BSR set to: 1
 18728                           ;mcc_generated_files/sd_spi/sd_spi.c: 1029:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1030:                 command = SD_WRITE_SINGLE_BLOCK;
 18729   00CBB4  0E0A               	movlw	10
 18730   00CBB6  6F2B               	movwf	SD_SPI_AsyncWriteTasks@command& (0+255),b
 18731                           
 18732                           ;mcc_generated_files/sd_spi/sd_spi.c: 1031:             }
 18733   00CBB8  EF31  F066         	goto	l6580
 18734   00CBBC                     l6566:
 18735                           
 18736                           ; BSR set to: 1
 18737                           ;mcc_generated_files/sd_spi/sd_spi.c: 1033:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1034:                 command = SD_WRITE_MULTI_BLOCK;
 18738   00CBBC  0E0B               	movlw	11
 18739   00CBBE  6F2B               	movwf	SD_SPI_AsyncWriteTasks@command& (0+255),b
 18740   00CBC0                     
 18741                           ; BSR set to: 1
 18742                           ;mcc_generated_files/sd_spi/sd_spi.c: 1037:                 preEraseBlockCount = (ioInfo
      +                          .dwBytesRemaining >> 9);
 18743   00CBC0  C102  F025         	movff	_ioInfo+2,??_SD_SPI_AsyncWriteTasks
 18744   00CBC4  C103  F026         	movff	_ioInfo+3,??_SD_SPI_AsyncWriteTasks+1
 18745   00CBC8  C104  F027         	movff	_ioInfo+4,??_SD_SPI_AsyncWriteTasks+2
 18746   00CBCC  C105  F028         	movff	_ioInfo+5,??_SD_SPI_AsyncWriteTasks+3
 18747   00CBD0  0E0A               	movlw	10
 18748   00CBD2  EFF0  F065         	goto	u7490
 18749   00CBD6                     u7495:
 18750   00CBD6  90D8               	bcf	status,0,c
 18751   00CBD8  3228               	rrcf	(??_SD_SPI_AsyncWriteTasks+3)^0,f,c
 18752   00CBDA  3227               	rrcf	(??_SD_SPI_AsyncWriteTasks+2)^0,f,c
 18753   00CBDC  3226               	rrcf	(??_SD_SPI_AsyncWriteTasks+1)^0,f,c
 18754   00CBDE  3225               	rrcf	??_SD_SPI_AsyncWriteTasks^0,f,c
 18755   00CBE0                     u7490:
 18756   00CBE0  2EE8               	decfsz	wreg,f,c
 18757   00CBE2  EFEB  F065         	goto	u7495
 18758   00CBE6  C025  F02E         	movff	??_SD_SPI_AsyncWriteTasks,SD_SPI_AsyncWriteTasks@preEraseBlockCount
 18759   00CBEA  C026  F02F         	movff	??_SD_SPI_AsyncWriteTasks+1,SD_SPI_AsyncWriteTasks@preEraseBlockCount+1
 18760   00CBEE  C027  F030         	movff	??_SD_SPI_AsyncWriteTasks+2,SD_SPI_AsyncWriteTasks@preEraseBlockCount+2
 18761   00CBF2  C028  F031         	movff	??_SD_SPI_AsyncWriteTasks+3,SD_SPI_AsyncWriteTasks@preEraseBlockCount+3
 18762   00CBF6                     
 18763                           ; BSR set to: 1
 18764                           ;mcc_generated_files/sd_spi/sd_spi.c: 1039:                 if(preEraseBlockCount == 0)
 18765   00CBF6  502E               	movf	SD_SPI_AsyncWriteTasks@preEraseBlockCount^0,w,c
 18766   00CBF8  102F               	iorwf	(SD_SPI_AsyncWriteTasks@preEraseBlockCount+1)^0,w,c
 18767   00CBFA  1030               	iorwf	(SD_SPI_AsyncWriteTasks@preEraseBlockCount+2)^0,w,c
 18768   00CBFC  1031               	iorwf	(SD_SPI_AsyncWriteTasks@preEraseBlockCount+3)^0,w,c
 18769   00CBFE  A4D8               	btfss	status,2,c
 18770   00CC00  EF04  F066         	goto	u7501
 18771   00CC04  EF06  F066         	goto	u7500
 18772   00CC08                     u7501:
 18773   00CC08  EF0C  F066         	goto	l6574
 18774   00CC0C                     u7500:
 18775   00CC0C                     
 18776                           ; BSR set to: 1
 18777                           ;mcc_generated_files/sd_spi/sd_spi.c: 1040:                 {;mcc_generated_files/sd_spi
      +                          /sd_spi.c: 1041:                     preEraseBlockCount++;
 18778   00CC0C  0E01               	movlw	1
 18779   00CC0E  262E               	addwf	SD_SPI_AsyncWriteTasks@preEraseBlockCount^0,f,c
 18780   00CC10  0E00               	movlw	0
 18781   00CC12  222F               	addwfc	(SD_SPI_AsyncWriteTasks@preEraseBlockCount+1)^0,f,c
 18782   00CC14  2230               	addwfc	(SD_SPI_AsyncWriteTasks@preEraseBlockCount+2)^0,f,c
 18783   00CC16  2231               	addwfc	(SD_SPI_AsyncWriteTasks@preEraseBlockCount+3)^0,f,c
 18784   00CC18                     l6574:
 18785                           
 18786                           ; BSR set to: 1
 18787                           ;mcc_generated_files/sd_spi/sd_spi.c: 1047:                 response = SD_SendCmd(SD_APP
      +                          _CMD, 0x00000000);
 18788   00CC18  0E00               	movlw	0
 18789   00CC1A  6E0C               	movwf	SD_SendCmd@address^0,c
 18790   00CC1C  0E00               	movlw	0
 18791   00CC1E  6E0D               	movwf	(SD_SendCmd@address+1)^0,c
 18792   00CC20  0E00               	movlw	0
 18793   00CC22  6E0E               	movwf	(SD_SendCmd@address+2)^0,c
 18794   00CC24  0E00               	movlw	0
 18795   00CC26  6E0F               	movwf	(SD_SendCmd@address+3)^0,c
 18796   00CC28  0E0F               	movlw	15
 18797   00CC2A  EC0A  F05E         	call	_SD_SendCmd
 18798   00CC2E  EE20  F029         	lfsr	2,SD_SPI_AsyncWriteTasks@response
 18799   00CC32  0E04               	movlw	4
 18800   00CC34                     u7511:
 18801   00CC34  CFEB FFDB          	movff	plusw0,plusw2
 18802   00CC38  06E8               	decf	wreg,f,c
 18803   00CC3A  E2FC               	bc	u7511
 18804   00CC3C                     
 18805                           ;mcc_generated_files/sd_spi/sd_spi.c: 1048:                 if(response.r1._byte == 0x00
      +                          )
 18806   00CC3C  5029               	movf	SD_SPI_AsyncWriteTasks@response^0,w,c
 18807   00CC3E  A4D8               	btfss	status,2,c
 18808   00CC40  EF24  F066         	goto	u7521
 18809   00CC44  EF26  F066         	goto	u7520
 18810   00CC48                     u7521:
 18811   00CC48  EF31  F066         	goto	l6580
 18812   00CC4C                     u7520:
 18813   00CC4C                     
 18814                           ;mcc_generated_files/sd_spi/sd_spi.c: 1049:                 {;mcc_generated_files/sd_spi
      +                          /sd_spi.c: 1050:                     SD_SendCmd(SD_SET_WRITE_BLOCK_ERASE_COUNT , preEras
      +                          eBlockCount);
 18815   00CC4C  C02E  F00C         	movff	SD_SPI_AsyncWriteTasks@preEraseBlockCount,SD_SendCmd@address
 18816   00CC50  C02F  F00D         	movff	SD_SPI_AsyncWriteTasks@preEraseBlockCount+1,SD_SendCmd@address+1
 18817   00CC54  C030  F00E         	movff	SD_SPI_AsyncWriteTasks@preEraseBlockCount+2,SD_SendCmd@address+2
 18818   00CC58  C031  F00F         	movff	SD_SPI_AsyncWriteTasks@preEraseBlockCount+3,SD_SendCmd@address+3
 18819   00CC5C  0E13               	movlw	19
 18820   00CC5E  EC0A  F05E         	call	_SD_SendCmd
 18821   00CC62                     l6580:
 18822                           
 18823                           ;mcc_generated_files/sd_spi/sd_spi.c: 1059:             if (mediaInformation.gSDMode == 
      +                          0)
 18824   00CC62  0101               	movlb	1	; () banked
 18825   00CC64  51DF               	movf	(_mediaInformation+8)& (0+255),w,b
 18826   00CC66  A4D8               	btfss	status,2,c
 18827   00CC68  EF38  F066         	goto	u7531
 18828   00CC6C  EF3A  F066         	goto	u7530
 18829   00CC70                     u7531:
 18830   00CC70  EF43  F066         	goto	l6584
 18831   00CC74                     u7530:
 18832   00CC74                     
 18833                           ; BSR set to: 1
 18834                           ;mcc_generated_files/sd_spi/sd_spi.c: 1060:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1061:                 ioInfo.dwAddress <<= 9;
 18835   00CC74  0E09               	movlw	9
 18836   00CC76                     u7545:
 18837   00CC76  90D8               	bcf	status,0,c
 18838   00CC78  3708               	rlcf	(_ioInfo+8)& (0+255),f,b
 18839   00CC7A  3709               	rlcf	(_ioInfo+9)& (0+255),f,b
 18840   00CC7C  370A               	rlcf	(_ioInfo+10)& (0+255),f,b
 18841   00CC7E  370B               	rlcf	(_ioInfo+11)& (0+255),f,b
 18842   00CC80  2EE8               	decfsz	wreg,f,c
 18843   00CC82  EF3B  F066         	goto	u7545
 18844   00CC86                     l6584:
 18845                           
 18846                           ; BSR set to: 1
 18847                           ;mcc_generated_files/sd_spi/sd_spi.c: 1066:             response = SD_SendCmd(command, i
      +                          oInfo.dwAddress);
 18848   00CC86  C108  F00C         	movff	_ioInfo+8,SD_SendCmd@address
 18849   00CC8A  C109  F00D         	movff	_ioInfo+9,SD_SendCmd@address+1
 18850   00CC8E  C10A  F00E         	movff	_ioInfo+10,SD_SendCmd@address+2
 18851   00CC92  C10B  F00F         	movff	_ioInfo+11,SD_SendCmd@address+3
 18852   00CC96  512B               	movf	SD_SPI_AsyncWriteTasks@command& (0+255),w,b
 18853   00CC98  EC0A  F05E         	call	_SD_SendCmd
 18854   00CC9C  EE20  F029         	lfsr	2,SD_SPI_AsyncWriteTasks@response
 18855   00CCA0  0E04               	movlw	4
 18856   00CCA2                     u7551:
 18857   00CCA2  CFEB FFDB          	movff	plusw0,plusw2
 18858   00CCA6  06E8               	decf	wreg,f,c
 18859   00CCA8  E2FC               	bc	u7551
 18860   00CCAA                     
 18861                           ;mcc_generated_files/sd_spi/sd_spi.c: 1069:             if(response.r1._byte != 0x00)
 18862   00CCAA  5029               	movf	SD_SPI_AsyncWriteTasks@response^0,w,c
 18863   00CCAC  B4D8               	btfsc	status,2,c
 18864   00CCAE  EF5B  F066         	goto	u7561
 18865   00CCB2  EF5D  F066         	goto	u7560
 18866   00CCB6                     u7561:
 18867   00CCB6  EF68  F066         	goto	l6596
 18868   00CCBA                     u7560:
 18869   00CCBA                     
 18870                           ;mcc_generated_files/sd_spi/sd_spi.c: 1070:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1072:                 info->bStateVariable = 0xFF;
 18871   00CCBA  EE20 F00C          	lfsr	2,12
 18872   00CCBE  5023               	movf	SD_SPI_AsyncWriteTasks@info^0,w,c
 18873   00CCC0  26D9               	addwf	fsr2l,f,c
 18874   00CCC2  5024               	movf	(SD_SPI_AsyncWriteTasks@info+1)^0,w,c
 18875   00CCC4  22DA               	addwfc	fsr2h,f,c
 18876   00CCC6  0EFF               	movlw	255
 18877   00CCC8  6EDF               	movwf	indf2,c
 18878   00CCCA                     l6590:
 18879                           
 18880                           ;mcc_generated_files/sd_spi/sd_spi.c: 1073:                 return 0xFF;
 18881   00CCCA  0EFF               	movlw	255
 18882   00CCCC  EF07  F069         	goto	l1196
 18883   00CCD0                     l6596:
 18884                           
 18885                           ;mcc_generated_files/sd_spi/sd_spi.c: 1076:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1078:                 info->bStateVariable = 0x02;
 18886   00CCD0  EE20 F00C          	lfsr	2,12
 18887   00CCD4  5023               	movf	SD_SPI_AsyncWriteTasks@info^0,w,c
 18888   00CCD6  26D9               	addwf	fsr2l,f,c
 18889   00CCD8  5024               	movf	(SD_SPI_AsyncWriteTasks@info+1)^0,w,c
 18890   00CCDA  22DA               	addwfc	fsr2h,f,c
 18891   00CCDC  0E02               	movlw	2
 18892   00CCDE  6EDF               	movwf	indf2,c
 18893   00CCE0                     l6598:
 18894                           
 18895                           ;mcc_generated_files/sd_spi/sd_spi.c: 1080:             return 0x02;
 18896   00CCE0  0E02               	movlw	2
 18897   00CCE2  EF07  F069         	goto	l1196
 18898   00CCE6                     l6602:
 18899                           
 18900                           ;mcc_generated_files/sd_spi/sd_spi.c: 1085:             if(blockCounter == 512u)
 18901   00CCE6  0E02               	movlw	2
 18902   00CCE8  0101               	movlb	1	; () banked
 18903   00CCEA  1924               	xorwf	(SD_SPI_AsyncWriteTasks@blockCounter+1)& (0+255),w,b
 18904   00CCEC  1123               	iorwf	SD_SPI_AsyncWriteTasks@blockCounter& (0+255),w,b
 18905   00CCEE  A4D8               	btfss	status,2,c
 18906   00CCF0  EF7C  F066         	goto	u7571
 18907   00CCF4  EF7E  F066         	goto	u7570
 18908   00CCF8                     u7571:
 18909   00CCF8  EFB9  F066         	goto	l6610
 18910   00CCFC                     u7570:
 18911   00CCFC                     
 18912                           ; BSR set to: 1
 18913                           ;mcc_generated_files/sd_spi/sd_spi.c: 1086:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1088:                 if(command == SD_WRITE_MULTI_BLOCK)
 18914   00CCFC  0E0B               	movlw	11
 18915   00CCFE  192B               	xorwf	SD_SPI_AsyncWriteTasks@command& (0+255),w,b
 18916   00CD00  A4D8               	btfss	status,2,c
 18917   00CD02  EF85  F066         	goto	u7581
 18918   00CD06  EF87  F066         	goto	u7580
 18919   00CD0A                     u7581:
 18920   00CD0A  EFA1  F066         	goto	l6608
 18921   00CD0E                     u7580:
 18922   00CD0E                     
 18923                           ; BSR set to: 1
 18924                           ;mcc_generated_files/sd_spi/sd_spi.c: 1089:                 {;mcc_generated_files/sd_spi
      +                          /sd_spi.c: 1090:                     (void)spiMaster[SDFAST].exchangeByte(SD_TOKEN_START
      +                          _MULTI_BLOCK);
 18925   00CD0E  0E5B               	movlw	low (_spiMaster+4)
 18926   00CD10  6EF6               	movwf	tblptrl,c
 18927   00CD12  0EFF               	movlw	high (_spiMaster+4)
 18928   00CD14  6EF7               	movwf	tblptrh,c
 18929   00CD16                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 18930   00CD16  6AF8               	clrf	tblptru,c
 18931   00CD18                     	endif
 18932   00CD18                     	if	0	;tblptru may be non-zero
 18933   00CD18                     	endif
 18934   00CD18  0009               	tblrd		*+
 18935   00CD1A  CFF5 F025          	movff	tablat,??_SD_SPI_AsyncWriteTasks
 18936   00CD1E  0009               	tblrd		*+
 18937   00CD20  CFF5 F026          	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 18938   00CD24  D802               	call	u7598
 18939   00CD26  EF9F  F066         	goto	u7599
 18940   00CD2A                     u7598:
 18941   00CD2A  0005               	push	
 18942   00CD2C  6EFA               	movwf	pclath,c
 18943   00CD2E  5025               	movf	??_SD_SPI_AsyncWriteTasks^0,w,c
 18944   00CD30  6EFD               	movwf	tosl,c
 18945   00CD32  5026               	movf	(??_SD_SPI_AsyncWriteTasks+1)^0,w,c
 18946   00CD34  6EFE               	movwf	tosh,c
 18947   00CD36  6AFF               	clrf	tosu,c
 18948   00CD38  50FA               	movf	pclath,w,c
 18949   00CD3A  0EFC               	movlw	252
 18950   00CD3C  0012               	return		;indir
 18951   00CD3E                     u7599:
 18952                           
 18953                           ;mcc_generated_files/sd_spi/sd_spi.c: 1091:                 }
 18954   00CD3E  EFB9  F066         	goto	l6610
 18955   00CD42                     l6608:
 18956                           
 18957                           ; BSR set to: 1
 18958                           ;mcc_generated_files/sd_spi/sd_spi.c: 1093:                 {;mcc_generated_files/sd_spi
      +                          /sd_spi.c: 1095:                     (void)spiMaster[SDFAST].exchangeByte(SD_TOKEN_START
      +                          );
 18959   00CD42  0E5B               	movlw	low (_spiMaster+4)
 18960   00CD44  6EF6               	movwf	tblptrl,c
 18961   00CD46  0EFF               	movlw	high (_spiMaster+4)
 18962   00CD48  6EF7               	movwf	tblptrh,c
 18963   00CD4A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 18964   00CD4A  6AF8               	clrf	tblptru,c
 18965   00CD4C                     	endif
 18966   00CD4C                     	if	0	;tblptru may be non-zero
 18967   00CD4C                     	endif
 18968   00CD4C  0009               	tblrd		*+
 18969   00CD4E  CFF5 F025          	movff	tablat,??_SD_SPI_AsyncWriteTasks
 18970   00CD52  0009               	tblrd		*+
 18971   00CD54  CFF5 F026          	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 18972   00CD58  D802               	call	u7608
 18973   00CD5A  EFB9  F066         	goto	u7609
 18974   00CD5E                     u7608:
 18975   00CD5E  0005               	push	
 18976   00CD60  6EFA               	movwf	pclath,c
 18977   00CD62  5025               	movf	??_SD_SPI_AsyncWriteTasks^0,w,c
 18978   00CD64  6EFD               	movwf	tosl,c
 18979   00CD66  5026               	movf	(??_SD_SPI_AsyncWriteTasks+1)^0,w,c
 18980   00CD68  6EFE               	movwf	tosh,c
 18981   00CD6A  6AFF               	clrf	tosu,c
 18982   00CD6C  50FA               	movf	pclath,w,c
 18983   00CD6E  0EFE               	movlw	254
 18984   00CD70  0012               	return		;indir
 18985   00CD72                     u7609:
 18986   00CD72                     l6610:
 18987                           
 18988                           ;mcc_generated_files/sd_spi/sd_spi.c: 1101:             ioInfo.wNumBytes = info->wNumByt
      +                          es;
 18989   00CD72  C023  FFD9         	movff	SD_SPI_AsyncWriteTasks@info,fsr2l
 18990   00CD76  C024  FFDA         	movff	SD_SPI_AsyncWriteTasks@info+1,fsr2h
 18991   00CD7A  CFDE F100          	movff	postinc2,_ioInfo
 18992   00CD7E  CFDD F101          	movff	postdec2,_ioInfo+1
 18993   00CD82                     
 18994                           ;mcc_generated_files/sd_spi/sd_spi.c: 1102:             ioInfo.pBuffer = info->pBuffer;
 18995   00CD82  EE20 F006          	lfsr	2,6
 18996   00CD86  5023               	movf	SD_SPI_AsyncWriteTasks@info^0,w,c
 18997   00CD88  26D9               	addwf	fsr2l,f,c
 18998   00CD8A  5024               	movf	(SD_SPI_AsyncWriteTasks@info+1)^0,w,c
 18999   00CD8C  22DA               	addwfc	fsr2h,f,c
 19000   00CD8E  CFDE F106          	movff	postinc2,_ioInfo+6
 19001   00CD92  CFDD F107          	movff	postdec2,_ioInfo+7
 19002   00CD96                     
 19003                           ;mcc_generated_files/sd_spi/sd_spi.c: 1105:             ioInfo.dwBytesRemaining -= ioInf
      +                          o.wNumBytes;
 19004   00CD96  0101               	movlb	1	; () banked
 19005   00CD98  5100               	movf	_ioInfo& (0+255),w,b
 19006   00CD9A  6E25               	movwf	??_SD_SPI_AsyncWriteTasks^0,c
 19007   00CD9C  5101               	movf	(_ioInfo+1)& (0+255),w,b
 19008   00CD9E  6E26               	movwf	(??_SD_SPI_AsyncWriteTasks+1)^0,c
 19009   00CDA0  6A27               	clrf	(??_SD_SPI_AsyncWriteTasks+2)^0,c
 19010   00CDA2  6A28               	clrf	(??_SD_SPI_AsyncWriteTasks+3)^0,c
 19011   00CDA4  5025               	movf	??_SD_SPI_AsyncWriteTasks^0,w,c
 19012   00CDA6  5F02               	subwf	(_ioInfo+2)& (0+255),f,b
 19013   00CDA8  5026               	movf	(??_SD_SPI_AsyncWriteTasks+1)^0,w,c
 19014   00CDAA  5B03               	subwfb	(_ioInfo+3)& (0+255),f,b
 19015   00CDAC  5027               	movf	(??_SD_SPI_AsyncWriteTasks+2)^0,w,c
 19016   00CDAE  5B04               	subwfb	(_ioInfo+4)& (0+255),f,b
 19017   00CDB0  5028               	movf	(??_SD_SPI_AsyncWriteTasks+3)^0,w,c
 19018   00CDB2  5B05               	subwfb	(_ioInfo+5)& (0+255),f,b
 19019   00CDB4                     
 19020                           ; BSR set to: 1
 19021                           ;mcc_generated_files/sd_spi/sd_spi.c: 1106:             blockCounter -= ioInfo.wNumBytes
      +                          ;
 19022   00CDB4  5100               	movf	_ioInfo& (0+255),w,b
 19023   00CDB6  5F23               	subwf	SD_SPI_AsyncWriteTasks@blockCounter& (0+255),f,b
 19024   00CDB8  5101               	movf	(_ioInfo+1)& (0+255),w,b
 19025   00CDBA  5B24               	subwfb	(SD_SPI_AsyncWriteTasks@blockCounter+1)& (0+255),f,b
 19026   00CDBC                     
 19027                           ; BSR set to: 1
 19028                           ;mcc_generated_files/sd_spi/sd_spi.c: 1108:             spiMaster[SDFAST].exchangeBlock(
      +                          ioInfo.pBuffer, ioInfo.wNumBytes);
 19029   00CDBC  C106  F001         	movff	_ioInfo+6,SPI1_ExchangeBlock@block
 19030   00CDC0  C107  F002         	movff	_ioInfo+7,SPI1_ExchangeBlock@block+1
 19031   00CDC4  C100  F003         	movff	_ioInfo,SPI1_ExchangeBlock@blockSize
 19032   00CDC8  C101  F004         	movff	_ioInfo+1,SPI1_ExchangeBlock@blockSize+1
 19033   00CDCC  0E5D               	movlw	low (_spiMaster+6)
 19034   00CDCE  6EF6               	movwf	tblptrl,c
 19035   00CDD0  0EFF               	movlw	high (_spiMaster+6)
 19036   00CDD2  6EF7               	movwf	tblptrh,c
 19037   00CDD4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19038   00CDD4  6AF8               	clrf	tblptru,c
 19039   00CDD6                     	endif
 19040   00CDD6                     	if	0	;tblptru may be non-zero
 19041   00CDD6                     	endif
 19042   00CDD6  0009               	tblrd		*+
 19043   00CDD8  CFF5 F025          	movff	tablat,??_SD_SPI_AsyncWriteTasks
 19044   00CDDC  0009               	tblrd		*+
 19045   00CDDE  CFF5 F026          	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 19046   00CDE2  D802               	call	u7618
 19047   00CDE4  EFFD  F066         	goto	u7619
 19048   00CDE8                     u7618:
 19049   00CDE8  0005               	push	
 19050   00CDEA  6EFA               	movwf	pclath,c
 19051   00CDEC  5025               	movf	??_SD_SPI_AsyncWriteTasks^0,w,c
 19052   00CDEE  6EFD               	movwf	tosl,c
 19053   00CDF0  5026               	movf	(??_SD_SPI_AsyncWriteTasks+1)^0,w,c
 19054   00CDF2  6EFE               	movwf	tosh,c
 19055   00CDF4  6AFF               	clrf	tosu,c
 19056   00CDF6  50FA               	movf	pclath,w,c
 19057   00CDF8  0012               	return		;indir
 19058   00CDFA                     u7619:
 19059   00CDFA                     
 19060                           ;mcc_generated_files/sd_spi/sd_spi.c: 1112:             if(blockCounter == 0)
 19061   00CDFA  0101               	movlb	1	; () banked
 19062   00CDFC  5123               	movf	SD_SPI_AsyncWriteTasks@blockCounter& (0+255),w,b
 19063   00CDFE  1124               	iorwf	(SD_SPI_AsyncWriteTasks@blockCounter+1)& (0+255),w,b
 19064   00CE00  A4D8               	btfss	status,2,c
 19065   00CE02  EF05  F067         	goto	u7621
 19066   00CE06  EF07  F067         	goto	u7620
 19067   00CE0A                     u7621:
 19068   00CE0A  EF70  F066         	goto	l6598
 19069   00CE0E                     u7620:
 19070   00CE0E                     
 19071                           ; BSR set to: 1
 19072                           ;mcc_generated_files/sd_spi/sd_spi.c: 1113:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1114:                 blockCounter = 512u;
 19073   00CE0E  0E02               	movlw	2
 19074   00CE10  6F24               	movwf	(SD_SPI_AsyncWriteTasks@blockCounter+1)& (0+255),b
 19075   00CE12  0E00               	movlw	0
 19076   00CE14  6F23               	movwf	SD_SPI_AsyncWriteTasks@blockCounter& (0+255),b
 19077   00CE16                     
 19078                           ; BSR set to: 1
 19079                           ;mcc_generated_files/sd_spi/sd_spi.c: 1117:                 (void)spiMaster[SDFAST].exch
      +                          angeByte(0xFF);
 19080   00CE16  0E5B               	movlw	low (_spiMaster+4)
 19081   00CE18  6EF6               	movwf	tblptrl,c
 19082   00CE1A  0EFF               	movlw	high (_spiMaster+4)
 19083   00CE1C  6EF7               	movwf	tblptrh,c
 19084   00CE1E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19085   00CE1E  6AF8               	clrf	tblptru,c
 19086   00CE20                     	endif
 19087   00CE20                     	if	0	;tblptru may be non-zero
 19088   00CE20                     	endif
 19089   00CE20  0009               	tblrd		*+
 19090   00CE22  CFF5 F025          	movff	tablat,??_SD_SPI_AsyncWriteTasks
 19091   00CE26  0009               	tblrd		*+
 19092   00CE28  CFF5 F026          	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 19093   00CE2C  D802               	call	u7638
 19094   00CE2E  EF23  F067         	goto	u7639
 19095   00CE32                     u7638:
 19096   00CE32  0005               	push	
 19097   00CE34  6EFA               	movwf	pclath,c
 19098   00CE36  5025               	movf	??_SD_SPI_AsyncWriteTasks^0,w,c
 19099   00CE38  6EFD               	movwf	tosl,c
 19100   00CE3A  5026               	movf	(??_SD_SPI_AsyncWriteTasks+1)^0,w,c
 19101   00CE3C  6EFE               	movwf	tosh,c
 19102   00CE3E  6AFF               	clrf	tosu,c
 19103   00CE40  50FA               	movf	pclath,w,c
 19104   00CE42  0EFF               	movlw	255
 19105   00CE44  0012               	return		;indir
 19106   00CE46                     u7639:
 19107   00CE46                     
 19108                           ;mcc_generated_files/sd_spi/sd_spi.c: 1118:                 (void)spiMaster[SDFAST].exch
      +                          angeByte(0xFF);
 19109   00CE46  0E5B               	movlw	low (_spiMaster+4)
 19110   00CE48  6EF6               	movwf	tblptrl,c
 19111   00CE4A  0EFF               	movlw	high (_spiMaster+4)
 19112   00CE4C  6EF7               	movwf	tblptrh,c
 19113   00CE4E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19114   00CE4E  6AF8               	clrf	tblptru,c
 19115   00CE50                     	endif
 19116   00CE50                     	if	0	;tblptru may be non-zero
 19117   00CE50                     	endif
 19118   00CE50  0009               	tblrd		*+
 19119   00CE52  CFF5 F025          	movff	tablat,??_SD_SPI_AsyncWriteTasks
 19120   00CE56  0009               	tblrd		*+
 19121   00CE58  CFF5 F026          	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 19122   00CE5C  D802               	call	u7648
 19123   00CE5E  EF3B  F067         	goto	u7649
 19124   00CE62                     u7648:
 19125   00CE62  0005               	push	
 19126   00CE64  6EFA               	movwf	pclath,c
 19127   00CE66  5025               	movf	??_SD_SPI_AsyncWriteTasks^0,w,c
 19128   00CE68  6EFD               	movwf	tosl,c
 19129   00CE6A  5026               	movf	(??_SD_SPI_AsyncWriteTasks+1)^0,w,c
 19130   00CE6C  6EFE               	movwf	tosh,c
 19131   00CE6E  6AFF               	clrf	tosu,c
 19132   00CE70  50FA               	movf	pclath,w,c
 19133   00CE72  0EFF               	movlw	255
 19134   00CE74  0012               	return		;indir
 19135   00CE76                     u7649:
 19136   00CE76                     
 19137                           ;mcc_generated_files/sd_spi/sd_spi.c: 1122:                 if((spiMaster[SDFAST].exchan
      +                          geByte(0xFF) & 0x1F) != SD_TOKEN_DATA_ACCEPTED)
 19138   00CE76  0E5B               	movlw	low (_spiMaster+4)
 19139   00CE78  6EF6               	movwf	tblptrl,c
 19140   00CE7A  0EFF               	movlw	high (_spiMaster+4)
 19141   00CE7C  6EF7               	movwf	tblptrh,c
 19142   00CE7E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19143   00CE7E  6AF8               	clrf	tblptru,c
 19144   00CE80                     	endif
 19145   00CE80                     	if	0	;tblptru may be non-zero
 19146   00CE80                     	endif
 19147   00CE80  0009               	tblrd		*+
 19148   00CE82  CFF5 F025          	movff	tablat,??_SD_SPI_AsyncWriteTasks
 19149   00CE86  0009               	tblrd		*+
 19150   00CE88  CFF5 F026          	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 19151   00CE8C  D802               	call	u7658
 19152   00CE8E  EF53  F067         	goto	u7659
 19153   00CE92                     u7658:
 19154   00CE92  0005               	push	
 19155   00CE94  6EFA               	movwf	pclath,c
 19156   00CE96  5025               	movf	??_SD_SPI_AsyncWriteTasks^0,w,c
 19157   00CE98  6EFD               	movwf	tosl,c
 19158   00CE9A  5026               	movf	(??_SD_SPI_AsyncWriteTasks+1)^0,w,c
 19159   00CE9C  6EFE               	movwf	tosh,c
 19160   00CE9E  6AFF               	clrf	tosu,c
 19161   00CEA0  50FA               	movf	pclath,w,c
 19162   00CEA2  0EFF               	movlw	255
 19163   00CEA4  0012               	return		;indir
 19164   00CEA6                     u7659:
 19165   00CEA6  0B1F               	andlw	31
 19166   00CEA8  0A05               	xorlw	5
 19167   00CEAA  B4D8               	btfsc	status,2,c
 19168   00CEAC  EF5A  F067         	goto	u7661
 19169   00CEB0  EF5C  F067         	goto	u7660
 19170   00CEB4                     u7661:
 19171   00CEB4  EF67  F067         	goto	l6636
 19172   00CEB8                     u7660:
 19173   00CEB8                     
 19174                           ;mcc_generated_files/sd_spi/sd_spi.c: 1123:                 {;mcc_generated_files/sd_spi
      +                          /sd_spi.c: 1126:                     info->bStateVariable = 0xFE;
 19175   00CEB8  EE20 F00C          	lfsr	2,12
 19176   00CEBC  5023               	movf	SD_SPI_AsyncWriteTasks@info^0,w,c
 19177   00CEBE  26D9               	addwf	fsr2l,f,c
 19178   00CEC0  5024               	movf	(SD_SPI_AsyncWriteTasks@info+1)^0,w,c
 19179   00CEC2  22DA               	addwfc	fsr2h,f,c
 19180   00CEC4  0EFE               	movlw	254
 19181   00CEC6  6EDF               	movwf	indf2,c
 19182   00CEC8                     l6632:
 19183                           
 19184                           ;mcc_generated_files/sd_spi/sd_spi.c: 1127:                     return 0x03;
 19185   00CEC8  0E03               	movlw	3
 19186   00CECA  EF07  F069         	goto	l1196
 19187   00CECE                     l6636:
 19188                           
 19189                           ;mcc_generated_files/sd_spi/sd_spi.c: 1133:                 info->bStateVariable = 0x03;
 19190   00CECE  EE20 F00C          	lfsr	2,12
 19191   00CED2  5023               	movf	SD_SPI_AsyncWriteTasks@info^0,w,c
 19192   00CED4  26D9               	addwf	fsr2l,f,c
 19193   00CED6  5024               	movf	(SD_SPI_AsyncWriteTasks@info+1)^0,w,c
 19194   00CED8  22DA               	addwfc	fsr2h,f,c
 19195   00CEDA  0E03               	movlw	3
 19196   00CEDC  6EDF               	movwf	indf2,c
 19197   00CEDE                     
 19198                           ;mcc_generated_files/sd_spi/sd_spi.c: 1134:                 WriteTimeout = (uint32_t)0xA
      +                          0000;
 19199   00CEDE  0E00               	movlw	0
 19200   00CEE0  0101               	movlb	1	; () banked
 19201   00CEE2  6F11               	movwf	SD_SPI_AsyncWriteTasks@WriteTimeout& (0+255),b
 19202   00CEE4  0E00               	movlw	0
 19203   00CEE6  6F12               	movwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+1)& (0+255),b
 19204   00CEE8  0E0A               	movlw	10
 19205   00CEEA  6F13               	movwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+2)& (0+255),b
 19206   00CEEC  0E00               	movlw	0
 19207   00CEEE  6F14               	movwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+3)& (0+255),b
 19208   00CEF0  EF64  F067         	goto	l6632
 19209   00CEF4                     l6648:
 19210                           
 19211                           ;mcc_generated_files/sd_spi/sd_spi.c: 1143:             if(WriteTimeout != 0)
 19212   00CEF4  0101               	movlb	1	; () banked
 19213   00CEF6  5111               	movf	SD_SPI_AsyncWriteTasks@WriteTimeout& (0+255),w,b
 19214   00CEF8  1112               	iorwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+1)& (0+255),w,b
 19215   00CEFA  1113               	iorwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+2)& (0+255),w,b
 19216   00CEFC  1114               	iorwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+3)& (0+255),w,b
 19217   00CEFE  B4D8               	btfsc	status,2,c
 19218   00CF00  EF84  F067         	goto	u7671
 19219   00CF04  EF86  F067         	goto	u7670
 19220   00CF08                     u7671:
 19221   00CF08  EF4B  F068         	goto	l6696
 19222   00CF0C                     u7670:
 19223   00CF0C                     
 19224                           ; BSR set to: 1
 19225                           ;mcc_generated_files/sd_spi/sd_spi.c: 1144:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1145:                 WriteTimeout--;
 19226   00CF0C  0711               	decf	SD_SPI_AsyncWriteTasks@WriteTimeout& (0+255),f,b
 19227   00CF0E  0E00               	movlw	0
 19228   00CF10  5B12               	subwfb	(SD_SPI_AsyncWriteTasks@WriteTimeout+1)& (0+255),f,b
 19229   00CF12  5B13               	subwfb	(SD_SPI_AsyncWriteTasks@WriteTimeout+2)& (0+255),f,b
 19230   00CF14  5B14               	subwfb	(SD_SPI_AsyncWriteTasks@WriteTimeout+3)& (0+255),f,b
 19231   00CF16                     
 19232                           ; BSR set to: 1
 19233                           ;mcc_generated_files/sd_spi/sd_spi.c: 1146:                 (void)spiMaster[SDFAST].exch
      +                          angeByte(0xFF);
 19234   00CF16  0E5B               	movlw	low (_spiMaster+4)
 19235   00CF18  6EF6               	movwf	tblptrl,c
 19236   00CF1A  0EFF               	movlw	high (_spiMaster+4)
 19237   00CF1C  6EF7               	movwf	tblptrh,c
 19238   00CF1E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19239   00CF1E  6AF8               	clrf	tblptru,c
 19240   00CF20                     	endif
 19241   00CF20                     	if	0	;tblptru may be non-zero
 19242   00CF20                     	endif
 19243   00CF20  0009               	tblrd		*+
 19244   00CF22  CFF5 F025          	movff	tablat,??_SD_SPI_AsyncWriteTasks
 19245   00CF26  0009               	tblrd		*+
 19246   00CF28  CFF5 F026          	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 19247   00CF2C  D802               	call	u7688
 19248   00CF2E  EFA3  F067         	goto	u7689
 19249   00CF32                     u7688:
 19250   00CF32  0005               	push	
 19251   00CF34  6EFA               	movwf	pclath,c
 19252   00CF36  5025               	movf	??_SD_SPI_AsyncWriteTasks^0,w,c
 19253   00CF38  6EFD               	movwf	tosl,c
 19254   00CF3A  5026               	movf	(??_SD_SPI_AsyncWriteTasks+1)^0,w,c
 19255   00CF3C  6EFE               	movwf	tosh,c
 19256   00CF3E  6AFF               	clrf	tosu,c
 19257   00CF40  50FA               	movf	pclath,w,c
 19258   00CF42  0EFF               	movlw	255
 19259   00CF44  0012               	return		;indir
 19260   00CF46                     u7689:
 19261   00CF46                     
 19262                           ;mcc_generated_files/sd_spi/sd_spi.c: 1147:                 data_byte = spiMaster[SDFAST
      +                          ].exchangeByte(0xFF);
 19263   00CF46  0E5B               	movlw	low (_spiMaster+4)
 19264   00CF48  6EF6               	movwf	tblptrl,c
 19265   00CF4A  0EFF               	movlw	high (_spiMaster+4)
 19266   00CF4C  6EF7               	movwf	tblptrh,c
 19267   00CF4E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19268   00CF4E  6AF8               	clrf	tblptru,c
 19269   00CF50                     	endif
 19270   00CF50                     	if	0	;tblptru may be non-zero
 19271   00CF50                     	endif
 19272   00CF50  0009               	tblrd		*+
 19273   00CF52  CFF5 F025          	movff	tablat,??_SD_SPI_AsyncWriteTasks
 19274   00CF56  0009               	tblrd		*+
 19275   00CF58  CFF5 F026          	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 19276   00CF5C  D802               	call	u7698
 19277   00CF5E  EFBB  F067         	goto	u7699
 19278   00CF62                     u7698:
 19279   00CF62  0005               	push	
 19280   00CF64  6EFA               	movwf	pclath,c
 19281   00CF66  5025               	movf	??_SD_SPI_AsyncWriteTasks^0,w,c
 19282   00CF68  6EFD               	movwf	tosl,c
 19283   00CF6A  5026               	movf	(??_SD_SPI_AsyncWriteTasks+1)^0,w,c
 19284   00CF6C  6EFE               	movwf	tosh,c
 19285   00CF6E  6AFF               	clrf	tosu,c
 19286   00CF70  50FA               	movf	pclath,w,c
 19287   00CF72  0EFF               	movlw	255
 19288   00CF74  0012               	return		;indir
 19289   00CF76                     u7699:
 19290   00CF76  0101               	movlb	1	; () banked
 19291   00CF78  6F2C               	movwf	SD_SPI_AsyncWriteTasks@data_byte& (0+255),b
 19292   00CF7A                     
 19293                           ; BSR set to: 1
 19294                           ;mcc_generated_files/sd_spi/sd_spi.c: 1148:                 if(data_byte != 0x00)
 19295   00CF7A  512C               	movf	SD_SPI_AsyncWriteTasks@data_byte& (0+255),w,b
 19296   00CF7C  B4D8               	btfsc	status,2,c
 19297   00CF7E  EFC3  F067         	goto	u7701
 19298   00CF82  EFC5  F067         	goto	u7700
 19299   00CF86                     u7701:
 19300   00CF86  EF64  F067         	goto	l6632
 19301   00CF8A                     u7700:
 19302   00CF8A                     
 19303                           ; BSR set to: 1
 19304                           ;mcc_generated_files/sd_spi/sd_spi.c: 1149:                 {;mcc_generated_files/sd_spi
      +                          /sd_spi.c: 1153:                     if(ioInfo.dwBytesRemaining == 0)
 19305   00CF8A  5102               	movf	(_ioInfo+2)& (0+255),w,b
 19306   00CF8C  1103               	iorwf	(_ioInfo+3)& (0+255),w,b
 19307   00CF8E  1104               	iorwf	(_ioInfo+4)& (0+255),w,b
 19308   00CF90  1105               	iorwf	(_ioInfo+5)& (0+255),w,b
 19309   00CF92  A4D8               	btfss	status,2,c
 19310   00CF94  EFCE  F067         	goto	u7711
 19311   00CF98  EFD0  F067         	goto	u7710
 19312   00CF9C                     u7711:
 19313   00CF9C  EF41  F068         	goto	l6684
 19314   00CFA0                     u7710:
 19315   00CFA0                     
 19316                           ; BSR set to: 1
 19317                           ;mcc_generated_files/sd_spi/sd_spi.c: 1154:                     {;mcc_generated_files/sd
      +                          _spi/sd_spi.c: 1155:                         WriteTimeout = (uint32_t)0xA0000;
 19318   00CFA0  0E00               	movlw	0
 19319   00CFA2  6F11               	movwf	SD_SPI_AsyncWriteTasks@WriteTimeout& (0+255),b
 19320   00CFA4  0E00               	movlw	0
 19321   00CFA6  6F12               	movwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+1)& (0+255),b
 19322   00CFA8  0E0A               	movlw	10
 19323   00CFAA  6F13               	movwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+2)& (0+255),b
 19324   00CFAC  0E00               	movlw	0
 19325   00CFAE  6F14               	movwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+3)& (0+255),b
 19326   00CFB0                     
 19327                           ; BSR set to: 1
 19328                           ;mcc_generated_files/sd_spi/sd_spi.c: 1156:                         if(command == SD_WRI
      +                          TE_MULTI_BLOCK)
 19329   00CFB0  0E0B               	movlw	11
 19330   00CFB2  192B               	xorwf	SD_SPI_AsyncWriteTasks@command& (0+255),w,b
 19331   00CFB4  A4D8               	btfss	status,2,c
 19332   00CFB6  EFDF  F067         	goto	u7721
 19333   00CFBA  EFE1  F067         	goto	u7720
 19334   00CFBE                     u7721:
 19335   00CFBE  EF1B  F068         	goto	l1217
 19336   00CFC2                     u7720:
 19337   00CFC2                     
 19338                           ; BSR set to: 1
 19339                           ;mcc_generated_files/sd_spi/sd_spi.c: 1157:                         {;mcc_generated_file
      +                          s/sd_spi/sd_spi.c: 1159:                             (void)spiMaster[SDFAST].exchangeByt
      +                          e(SD_TOKEN_STOP_TRANSMISSION);
 19340   00CFC2  0E5B               	movlw	low (_spiMaster+4)
 19341   00CFC4  6EF6               	movwf	tblptrl,c
 19342   00CFC6  0EFF               	movlw	high (_spiMaster+4)
 19343   00CFC8  6EF7               	movwf	tblptrh,c
 19344   00CFCA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19345   00CFCA  6AF8               	clrf	tblptru,c
 19346   00CFCC                     	endif
 19347   00CFCC                     	if	0	;tblptru may be non-zero
 19348   00CFCC                     	endif
 19349   00CFCC  0009               	tblrd		*+
 19350   00CFCE  CFF5 F025          	movff	tablat,??_SD_SPI_AsyncWriteTasks
 19351   00CFD2  0009               	tblrd		*+
 19352   00CFD4  CFF5 F026          	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 19353   00CFD8  D802               	call	u7738
 19354   00CFDA  EFF9  F067         	goto	u7739
 19355   00CFDE                     u7738:
 19356   00CFDE  0005               	push	
 19357   00CFE0  6EFA               	movwf	pclath,c
 19358   00CFE2  5025               	movf	??_SD_SPI_AsyncWriteTasks^0,w,c
 19359   00CFE4  6EFD               	movwf	tosl,c
 19360   00CFE6  5026               	movf	(??_SD_SPI_AsyncWriteTasks+1)^0,w,c
 19361   00CFE8  6EFE               	movwf	tosh,c
 19362   00CFEA  6AFF               	clrf	tosu,c
 19363   00CFEC  50FA               	movf	pclath,w,c
 19364   00CFEE  0EFD               	movlw	253
 19365   00CFF0  0012               	return		;indir
 19366   00CFF2                     u7739:
 19367                           
 19368                           ;mcc_generated_files/sd_spi/sd_spi.c: 1166:                             (void)spiMaster[
      +                          SDFAST].exchangeByte(0xFF);
 19369   00CFF2  0E5B               	movlw	low (_spiMaster+4)
 19370   00CFF4  6EF6               	movwf	tblptrl,c
 19371   00CFF6  0EFF               	movlw	high (_spiMaster+4)
 19372   00CFF8  6EF7               	movwf	tblptrh,c
 19373   00CFFA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19374   00CFFA  6AF8               	clrf	tblptru,c
 19375   00CFFC                     	endif
 19376   00CFFC                     	if	0	;tblptru may be non-zero
 19377   00CFFC                     	endif
 19378   00CFFC  0009               	tblrd		*+
 19379   00CFFE  CFF5 F025          	movff	tablat,??_SD_SPI_AsyncWriteTasks
 19380   00D002  0009               	tblrd		*+
 19381   00D004  CFF5 F026          	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 19382   00D008  D802               	call	u7748
 19383   00D00A  EF11  F068         	goto	u7749
 19384   00D00E                     u7748:
 19385   00D00E  0005               	push	
 19386   00D010  6EFA               	movwf	pclath,c
 19387   00D012  5025               	movf	??_SD_SPI_AsyncWriteTasks^0,w,c
 19388   00D014  6EFD               	movwf	tosl,c
 19389   00D016  5026               	movf	(??_SD_SPI_AsyncWriteTasks+1)^0,w,c
 19390   00D018  6EFE               	movwf	tosh,c
 19391   00D01A  6AFF               	clrf	tosu,c
 19392   00D01C  50FA               	movf	pclath,w,c
 19393   00D01E  0EFF               	movlw	255
 19394   00D020  0012               	return		;indir
 19395   00D022                     u7749:
 19396   00D022                     
 19397                           ;mcc_generated_files/sd_spi/sd_spi.c: 1169:                             info->bStateVari
      +                          able = 0x04;
 19398   00D022  EE20 F00C          	lfsr	2,12
 19399   00D026  5023               	movf	SD_SPI_AsyncWriteTasks@info^0,w,c
 19400   00D028  26D9               	addwf	fsr2l,f,c
 19401   00D02A  5024               	movf	(SD_SPI_AsyncWriteTasks@info+1)^0,w,c
 19402   00D02C  22DA               	addwfc	fsr2h,f,c
 19403   00D02E  0E04               	movlw	4
 19404   00D030  6EDF               	movwf	indf2,c
 19405   00D032  EF64  F067         	goto	l6632
 19406   00D036                     l1217:
 19407                           
 19408                           ; BSR set to: 1
 19409   00D036  848B               	bsf	139,2,c	;volatile
 19410   00D038                     
 19411                           ; BSR set to: 1
 19412                           ;mcc_generated_files/sd_spi/sd_spi.c: 1178:                             (void)spiMaster[
      +                          SDFAST].exchangeByte(0xFF);
 19413   00D038  0E5B               	movlw	low (_spiMaster+4)
 19414   00D03A  6EF6               	movwf	tblptrl,c
 19415   00D03C  0EFF               	movlw	high (_spiMaster+4)
 19416   00D03E  6EF7               	movwf	tblptrh,c
 19417   00D040                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19418   00D040  6AF8               	clrf	tblptru,c
 19419   00D042                     	endif
 19420   00D042                     	if	0	;tblptru may be non-zero
 19421   00D042                     	endif
 19422   00D042  0009               	tblrd		*+
 19423   00D044  CFF5 F025          	movff	tablat,??_SD_SPI_AsyncWriteTasks
 19424   00D048  0009               	tblrd		*+
 19425   00D04A  CFF5 F026          	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 19426   00D04E  D802               	call	u7758
 19427   00D050  EF34  F068         	goto	u7759
 19428   00D054                     u7758:
 19429   00D054  0005               	push	
 19430   00D056  6EFA               	movwf	pclath,c
 19431   00D058  5025               	movf	??_SD_SPI_AsyncWriteTasks^0,w,c
 19432   00D05A  6EFD               	movwf	tosl,c
 19433   00D05C  5026               	movf	(??_SD_SPI_AsyncWriteTasks+1)^0,w,c
 19434   00D05E  6EFE               	movwf	tosh,c
 19435   00D060  6AFF               	clrf	tosu,c
 19436   00D062  50FA               	movf	pclath,w,c
 19437   00D064  0EFF               	movlw	255
 19438   00D066  0012               	return		;indir
 19439   00D068                     u7759:
 19440   00D068                     
 19441                           ;mcc_generated_files/sd_spi/sd_spi.c: 1179:                             info->bStateVari
      +                          able = 0x00;
 19442   00D068  EE20 F00C          	lfsr	2,12
 19443   00D06C  5023               	movf	SD_SPI_AsyncWriteTasks@info^0,w,c
 19444   00D06E  26D9               	addwf	fsr2l,f,c
 19445   00D070  5024               	movf	(SD_SPI_AsyncWriteTasks@info+1)^0,w,c
 19446   00D072  22DA               	addwfc	fsr2h,f,c
 19447   00D074  0E00               	movlw	0
 19448   00D076  6EDF               	movwf	indf2,c
 19449   00D078                     l6678:
 19450                           
 19451                           ;mcc_generated_files/sd_spi/sd_spi.c: 1180:                             mediaInformation
      +                          .state = SD_STATE_READY_FOR_COMMAND;
 19452   00D078  0E01               	movlw	1
 19453   00D07A  0101               	movlb	1	; () banked
 19454   00D07C  6FDA               	movwf	(_mediaInformation+3)& (0+255),b
 19455   00D07E  EFB8  F065         	goto	l6554
 19456   00D082                     l6684:
 19457                           
 19458                           ; BSR set to: 1
 19459                           ;mcc_generated_files/sd_spi/sd_spi.c: 1186:                     info->bStateVariable = 0
      +                          x02;
 19460   00D082  EE20 F00C          	lfsr	2,12
 19461   00D086  5023               	movf	SD_SPI_AsyncWriteTasks@info^0,w,c
 19462   00D088  26D9               	addwf	fsr2l,f,c
 19463   00D08A  5024               	movf	(SD_SPI_AsyncWriteTasks@info+1)^0,w,c
 19464   00D08C  22DA               	addwfc	fsr2h,f,c
 19465   00D08E  0E02               	movlw	2
 19466   00D090  6EDF               	movwf	indf2,c
 19467   00D092  EF70  F066         	goto	l6598
 19468   00D096                     l6696:
 19469                           
 19470                           ; BSR set to: 1
 19471                           ;mcc_generated_files/sd_spi/sd_spi.c: 1196:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1199:                 info->bStateVariable = 0xFE;
 19472   00D096  EE20 F00C          	lfsr	2,12
 19473   00D09A  5023               	movf	SD_SPI_AsyncWriteTasks@info^0,w,c
 19474   00D09C  26D9               	addwf	fsr2l,f,c
 19475   00D09E  5024               	movf	(SD_SPI_AsyncWriteTasks@info+1)^0,w,c
 19476   00D0A0  22DA               	addwfc	fsr2h,f,c
 19477   00D0A2  0EFE               	movlw	254
 19478   00D0A4  6EDF               	movwf	indf2,c
 19479   00D0A6  EF64  F067         	goto	l6632
 19480   00D0AA                     l6702:
 19481                           
 19482                           ;mcc_generated_files/sd_spi/sd_spi.c: 1208:             if(WriteTimeout != 0)
 19483   00D0AA  0101               	movlb	1	; () banked
 19484   00D0AC  5111               	movf	SD_SPI_AsyncWriteTasks@WriteTimeout& (0+255),w,b
 19485   00D0AE  1112               	iorwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+1)& (0+255),w,b
 19486   00D0B0  1113               	iorwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+2)& (0+255),w,b
 19487   00D0B2  1114               	iorwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+3)& (0+255),w,b
 19488   00D0B4  B4D8               	btfsc	status,2,c
 19489   00D0B6  EF5F  F068         	goto	u7761
 19490   00D0BA  EF61  F068         	goto	u7760
 19491   00D0BE                     u7761:
 19492   00D0BE  EFAB  F068         	goto	l6724
 19493   00D0C2                     u7760:
 19494   00D0C2                     
 19495                           ; BSR set to: 1
 19496                           ;mcc_generated_files/sd_spi/sd_spi.c: 1209:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1210:                 WriteTimeout--;
 19497   00D0C2  0711               	decf	SD_SPI_AsyncWriteTasks@WriteTimeout& (0+255),f,b
 19498   00D0C4  0E00               	movlw	0
 19499   00D0C6  5B12               	subwfb	(SD_SPI_AsyncWriteTasks@WriteTimeout+1)& (0+255),f,b
 19500   00D0C8  5B13               	subwfb	(SD_SPI_AsyncWriteTasks@WriteTimeout+2)& (0+255),f,b
 19501   00D0CA  5B14               	subwfb	(SD_SPI_AsyncWriteTasks@WriteTimeout+3)& (0+255),f,b
 19502   00D0CC                     
 19503                           ; BSR set to: 1
 19504                           ;mcc_generated_files/sd_spi/sd_spi.c: 1211:                 data_byte = spiMaster[SDFAST
      +                          ].exchangeByte(0xFF);
 19505   00D0CC  0E5B               	movlw	low (_spiMaster+4)
 19506   00D0CE  6EF6               	movwf	tblptrl,c
 19507   00D0D0  0EFF               	movlw	high (_spiMaster+4)
 19508   00D0D2  6EF7               	movwf	tblptrh,c
 19509   00D0D4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19510   00D0D4  6AF8               	clrf	tblptru,c
 19511   00D0D6                     	endif
 19512   00D0D6                     	if	0	;tblptru may be non-zero
 19513   00D0D6                     	endif
 19514   00D0D6  0009               	tblrd		*+
 19515   00D0D8  CFF5 F025          	movff	tablat,??_SD_SPI_AsyncWriteTasks
 19516   00D0DC  0009               	tblrd		*+
 19517   00D0DE  CFF5 F026          	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 19518   00D0E2  D802               	call	u7778
 19519   00D0E4  EF7E  F068         	goto	u7779
 19520   00D0E8                     u7778:
 19521   00D0E8  0005               	push	
 19522   00D0EA  6EFA               	movwf	pclath,c
 19523   00D0EC  5025               	movf	??_SD_SPI_AsyncWriteTasks^0,w,c
 19524   00D0EE  6EFD               	movwf	tosl,c
 19525   00D0F0  5026               	movf	(??_SD_SPI_AsyncWriteTasks+1)^0,w,c
 19526   00D0F2  6EFE               	movwf	tosh,c
 19527   00D0F4  6AFF               	clrf	tosu,c
 19528   00D0F6  50FA               	movf	pclath,w,c
 19529   00D0F8  0EFF               	movlw	255
 19530   00D0FA  0012               	return		;indir
 19531   00D0FC                     u7779:
 19532   00D0FC  0101               	movlb	1	; () banked
 19533   00D0FE  6F2C               	movwf	SD_SPI_AsyncWriteTasks@data_byte& (0+255),b
 19534   00D100                     
 19535                           ; BSR set to: 1
 19536                           ;mcc_generated_files/sd_spi/sd_spi.c: 1213:                 if(data_byte != 0x00)
 19537   00D100  512C               	movf	SD_SPI_AsyncWriteTasks@data_byte& (0+255),w,b
 19538   00D102  B4D8               	btfsc	status,2,c
 19539   00D104  EF86  F068         	goto	u7781
 19540   00D108  EF88  F068         	goto	u7780
 19541   00D10C                     u7781:
 19542   00D10C  EF64  F067         	goto	l6632
 19543   00D110                     u7780:
 19544   00D110                     
 19545                           ; BSR set to: 1
 19546   00D110  848B               	bsf	139,2,c	;volatile
 19547   00D112                     
 19548                           ; BSR set to: 1
 19549                           ;mcc_generated_files/sd_spi/sd_spi.c: 1223:                     (void)spiMaster[SDFAST].
      +                          exchangeByte(0xFF);
 19550   00D112  0E5B               	movlw	low (_spiMaster+4)
 19551   00D114  6EF6               	movwf	tblptrl,c
 19552   00D116  0EFF               	movlw	high (_spiMaster+4)
 19553   00D118  6EF7               	movwf	tblptrh,c
 19554   00D11A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19555   00D11A  6AF8               	clrf	tblptru,c
 19556   00D11C                     	endif
 19557   00D11C                     	if	0	;tblptru may be non-zero
 19558   00D11C                     	endif
 19559   00D11C  0009               	tblrd		*+
 19560   00D11E  CFF5 F025          	movff	tablat,??_SD_SPI_AsyncWriteTasks
 19561   00D122  0009               	tblrd		*+
 19562   00D124  CFF5 F026          	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 19563   00D128  D802               	call	u7798
 19564   00D12A  EFA1  F068         	goto	u7799
 19565   00D12E                     u7798:
 19566   00D12E  0005               	push	
 19567   00D130  6EFA               	movwf	pclath,c
 19568   00D132  5025               	movf	??_SD_SPI_AsyncWriteTasks^0,w,c
 19569   00D134  6EFD               	movwf	tosl,c
 19570   00D136  5026               	movf	(??_SD_SPI_AsyncWriteTasks+1)^0,w,c
 19571   00D138  6EFE               	movwf	tosh,c
 19572   00D13A  6AFF               	clrf	tosu,c
 19573   00D13C  50FA               	movf	pclath,w,c
 19574   00D13E  0EFF               	movlw	255
 19575   00D140  0012               	return		;indir
 19576   00D142                     u7799:
 19577   00D142                     
 19578                           ;mcc_generated_files/sd_spi/sd_spi.c: 1224:                     info->bStateVariable = 0
      +                          x00;
 19579   00D142  EE20 F00C          	lfsr	2,12
 19580   00D146  5023               	movf	SD_SPI_AsyncWriteTasks@info^0,w,c
 19581   00D148  26D9               	addwf	fsr2l,f,c
 19582   00D14A  5024               	movf	(SD_SPI_AsyncWriteTasks@info+1)^0,w,c
 19583   00D14C  22DA               	addwfc	fsr2h,f,c
 19584   00D14E  0E00               	movlw	0
 19585   00D150  6EDF               	movwf	indf2,c
 19586   00D152  EF3C  F068         	goto	l6678
 19587   00D156                     l6724:
 19588                           
 19589                           ;mcc_generated_files/sd_spi/sd_spi.c: 1235:             (void)SD_SendCmd(SD_STOP_TRANSMI
      +                          SSION, 0x00000000);
 19590   00D156  0E00               	movlw	0
 19591   00D158  6E0C               	movwf	SD_SendCmd@address^0,c
 19592   00D15A  0E00               	movlw	0
 19593   00D15C  6E0D               	movwf	(SD_SendCmd@address+1)^0,c
 19594   00D15E  0E00               	movlw	0
 19595   00D160  6E0E               	movwf	(SD_SendCmd@address+2)^0,c
 19596   00D162  0E00               	movlw	0
 19597   00D164  6E0F               	movwf	(SD_SendCmd@address+3)^0,c
 19598   00D166  0E05               	movlw	5
 19599   00D168  EC0A  F05E         	call	_SD_SendCmd
 19600   00D16C  848B               	bsf	139,2,c	;volatile
 19601   00D16E                     
 19602                           ;mcc_generated_files/sd_spi/sd_spi.c: 1237:             (void)spiMaster[SDFAST].exchange
      +                          Byte(0xFF);
 19603   00D16E  0E5B               	movlw	low (_spiMaster+4)
 19604   00D170  6EF6               	movwf	tblptrl,c
 19605   00D172  0EFF               	movlw	high (_spiMaster+4)
 19606   00D174  6EF7               	movwf	tblptrh,c
 19607   00D176                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19608   00D176  6AF8               	clrf	tblptru,c
 19609   00D178                     	endif
 19610   00D178                     	if	0	;tblptru may be non-zero
 19611   00D178                     	endif
 19612   00D178  0009               	tblrd		*+
 19613   00D17A  CFF5 F025          	movff	tablat,??_SD_SPI_AsyncWriteTasks
 19614   00D17E  0009               	tblrd		*+
 19615   00D180  CFF5 F026          	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 19616   00D184  D802               	call	u7808
 19617   00D186  EFCF  F068         	goto	u7809
 19618   00D18A                     u7808:
 19619   00D18A  0005               	push	
 19620   00D18C  6EFA               	movwf	pclath,c
 19621   00D18E  5025               	movf	??_SD_SPI_AsyncWriteTasks^0,w,c
 19622   00D190  6EFD               	movwf	tosl,c
 19623   00D192  5026               	movf	(??_SD_SPI_AsyncWriteTasks+1)^0,w,c
 19624   00D194  6EFE               	movwf	tosh,c
 19625   00D196  6AFF               	clrf	tosu,c
 19626   00D198  50FA               	movf	pclath,w,c
 19627   00D19A  0EFF               	movlw	255
 19628   00D19C  0012               	return		;indir
 19629   00D19E                     u7809:
 19630   00D19E                     
 19631                           ;mcc_generated_files/sd_spi/sd_spi.c: 1238:             info->bStateVariable = 0xFF;
 19632   00D19E  EE20 F00C          	lfsr	2,12
 19633   00D1A2  5023               	movf	SD_SPI_AsyncWriteTasks@info^0,w,c
 19634   00D1A4  26D9               	addwf	fsr2l,f,c
 19635   00D1A6  5024               	movf	(SD_SPI_AsyncWriteTasks@info+1)^0,w,c
 19636   00D1A8  22DA               	addwfc	fsr2h,f,c
 19637   00D1AA  0EFF               	movlw	255
 19638   00D1AC  6EDF               	movwf	indf2,c
 19639   00D1AE                     l6732:
 19640                           
 19641                           ;mcc_generated_files/sd_spi/sd_spi.c: 1242:             mediaInformation.state = SD_STAT
      +                          E_READY_FOR_COMMAND;
 19642   00D1AE  0E01               	movlw	1
 19643   00D1B0  0101               	movlb	1	; () banked
 19644   00D1B2  6FDA               	movwf	(_mediaInformation+3)& (0+255),b
 19645   00D1B4  EF65  F066         	goto	l6590
 19646   00D1B8                     l6740:
 19647   00D1B8  EE20 F00C          	lfsr	2,12
 19648   00D1BC  5023               	movf	SD_SPI_AsyncWriteTasks@info^0,w,c
 19649   00D1BE  26D9               	addwf	fsr2l,f,c
 19650   00D1C0  5024               	movf	(SD_SPI_AsyncWriteTasks@info+1)^0,w,c
 19651   00D1C2  22DA               	addwfc	fsr2h,f,c
 19652   00D1C4  50DF               	movf	indf2,w,c
 19653   00D1C6  6E25               	movwf	??_SD_SPI_AsyncWriteTasks^0,c
 19654   00D1C8  6A26               	clrf	(??_SD_SPI_AsyncWriteTasks+1)^0,c
 19655                           
 19656                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19657                           ; Switch size 1, requested type "simple"
 19658                           ; Number of cases is 1, Range of values is 0 to 0
 19659                           ; switch strategies available:
 19660                           ; Name         Instructions Cycles
 19661                           ; simple_byte            4     3 (average)
 19662                           ;	Chosen strategy is simple_byte
 19663   00D1CA  5026               	movf	(??_SD_SPI_AsyncWriteTasks+1)^0,w,c
 19664   00D1CC  0A00               	xorlw	0	; case 0
 19665   00D1CE  B4D8               	btfsc	status,2,c
 19666   00D1D0  EFEC  F068         	goto	l10688
 19667   00D1D4  EFD7  F068         	goto	l6732
 19668   00D1D8                     l10688:
 19669                           
 19670                           ; Switch size 1, requested type "simple"
 19671                           ; Number of cases is 6, Range of values is 0 to 254
 19672                           ; switch strategies available:
 19673                           ; Name         Instructions Cycles
 19674                           ; simple_byte           19    10 (average)
 19675                           ;	Chosen strategy is simple_byte
 19676   00D1D8  5025               	movf	??_SD_SPI_AsyncWriteTasks^0,w,c
 19677   00D1DA  0A00               	xorlw	0	; case 0
 19678   00D1DC  B4D8               	btfsc	status,2,c
 19679   00D1DE  EFB8  F065         	goto	l6554
 19680   00D1E2  0A01               	xorlw	1	; case 1
 19681   00D1E4  B4D8               	btfsc	status,2,c
 19682   00D1E6  EFBB  F065         	goto	l6558
 19683   00D1EA  0A03               	xorlw	3	; case 2
 19684   00D1EC  B4D8               	btfsc	status,2,c
 19685   00D1EE  EF73  F066         	goto	l6602
 19686   00D1F2  0A01               	xorlw	1	; case 3
 19687   00D1F4  B4D8               	btfsc	status,2,c
 19688   00D1F6  EF7A  F067         	goto	l6648
 19689   00D1FA  0A07               	xorlw	7	; case 4
 19690   00D1FC  B4D8               	btfsc	status,2,c
 19691   00D1FE  EF55  F068         	goto	l6702
 19692   00D202  0AFA               	xorlw	250	; case 254
 19693   00D204  B4D8               	btfsc	status,2,c
 19694   00D206  EFAB  F068         	goto	l6724
 19695   00D20A  EFD7  F068         	goto	l6732
 19696   00D20E                     l1196:
 19697   00D20E  0012               	return		;funcret
 19698   00D210                     __end_of_SD_SPI_AsyncWriteTasks:
 19699                           	callstack 0
 19700                           
 19701 ;; *************** function _disk_read *****************
 19702 ;; Defined at:
 19703 ;;		line 90 in file "mcc_generated_files/fatfs/diskio.c"
 19704 ;; Parameters:    Size  Location     Type
 19705 ;;  pdrv            1    wreg     unsigned char 
 19706 ;;  buff            2   73[COMRAM] PTR unsigned char 
 19707 ;;		 -> Fil(546), FatFs(563), pb.fp(3), pb.fp(3), 
 19708 ;;		 -> pb.fp(3), f_gets@s(4), file(546), drive(563), 
 19709 ;;		 -> NULL(0), 
 19710 ;;  sector          4   75[COMRAM] unsigned long 
 19711 ;;  count           2   79[COMRAM] unsigned int 
 19712 ;; Auto vars:     Size  Location     Type
 19713 ;;  pdrv            1   83[COMRAM] unsigned char 
 19714 ;;  res             1   84[COMRAM] enum E12
 19715 ;; Return value:  Size  Location     Type
 19716 ;;                  1    wreg      enum E12
 19717 ;; Registers used:
 19718 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 19719 ;; Tracked objects:
 19720 ;;		On entry : 0/0
 19721 ;;		On exit  : 0/0
 19722 ;;		Unchanged: 0/0
 19723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19724 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19725 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19726 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19727 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19728 ;;Total ram usage:       12 bytes
 19729 ;; Hardware stack levels used: 1
 19730 ;; Hardware stack levels required when called: 4
 19731 ;; This function calls:
 19732 ;;		_SD_SPI_SectorRead
 19733 ;; This function is called by:
 19734 ;;		_move_window
 19735 ;;		_f_open
 19736 ;;		_f_write
 19737 ;;		_f_lseek
 19738 ;;		_f_read
 19739 ;; This function uses a non-reentrant model
 19740 ;;
 19741                           
 19742                           	psect	text56
 19743   00823E                     __ptext56:
 19744                           	callstack 0
 19745   00823E                     _disk_read:
 19746                           	callstack 24
 19747                           
 19748                           ;incstack = 0
 19749                           ;disk_read@pdrv stored from wreg
 19750   00823E  6E54               	movwf	disk_read@pdrv^0,c
 19751   008240                     
 19752                           ;mcc_generated_files/fatfs/diskio.c: 91:     BYTE pdrv,;mcc_generated_files/fatfs/diskio
      +                          .c: 92:     BYTE *buff,;mcc_generated_files/fatfs/diskio.c: 93:     DWORD sector,;mcc_ge
      +                          nerated_files/fatfs/diskio.c: 94:     UINT count;mcc_generated_files/fatfs/diskio.c: 96:
      +                           {;mcc_generated_files/fatfs/diskio.c: 97:     DRESULT res = RES_PARERR;
 19753   008240  0E04               	movlw	4
 19754   008242  6E55               	movwf	disk_read@res^0,c
 19755                           
 19756                           ;mcc_generated_files/fatfs/diskio.c: 99:     switch (pdrv) {
 19757   008244  EF46  F041         	goto	l7026
 19758   008248                     l7018:
 19759                           
 19760                           ;mcc_generated_files/fatfs/diskio.c: 101:             if(SD_SPI_SectorRead(sector, buff,
      +                           count) == 1)
 19761   008248  C04C  F02F         	movff	disk_read@sector,SD_SPI_SectorRead@sector_address
 19762   00824C  C04D  F030         	movff	disk_read@sector+1,SD_SPI_SectorRead@sector_address+1
 19763   008250  C04E  F031         	movff	disk_read@sector+2,SD_SPI_SectorRead@sector_address+2
 19764   008254  C04F  F032         	movff	disk_read@sector+3,SD_SPI_SectorRead@sector_address+3
 19765   008258  C04A  F033         	movff	disk_read@buff,SD_SPI_SectorRead@buffer
 19766   00825C  C04B  F034         	movff	disk_read@buff+1,SD_SPI_SectorRead@buffer+1
 19767   008260  C050  F035         	movff	disk_read@count,SD_SPI_SectorRead@sector_count
 19768   008264  C051  F036         	movff	disk_read@count+1,SD_SPI_SectorRead@sector_count+1
 19769   008268  EC8F  F047         	call	_SD_SPI_SectorRead
 19770   00826C  06E8               	decf	wreg,f,c
 19771   00826E  A4D8               	btfss	status,2,c
 19772   008270  EF3C  F041         	goto	u8211
 19773   008274  EF3E  F041         	goto	u8210
 19774   008278                     u8211:
 19775   008278  EF42  F041         	goto	l7022
 19776   00827C                     u8210:
 19777   00827C                     
 19778                           ;mcc_generated_files/fatfs/diskio.c: 102:             {;mcc_generated_files/fatfs/diskio
      +                          .c: 103:                 res = RES_OK;
 19779   00827C  0E00               	movlw	0
 19780   00827E  6E55               	movwf	disk_read@res^0,c
 19781                           
 19782                           ;mcc_generated_files/fatfs/diskio.c: 104:             }
 19783   008280  EF57  F041         	goto	l7028
 19784   008284                     l7022:
 19785                           
 19786                           ;mcc_generated_files/fatfs/diskio.c: 106:             {;mcc_generated_files/fatfs/diskio
      +                          .c: 107:                 res = RES_ERROR;
 19787   008284  0E01               	movlw	1
 19788   008286  6E55               	movwf	disk_read@res^0,c
 19789   008288  EF57  F041         	goto	l7028
 19790   00828C                     l7026:
 19791   00828C  5054               	movf	disk_read@pdrv^0,w,c
 19792   00828E  6E52               	movwf	??_disk_read^0,c
 19793   008290  6A53               	clrf	(??_disk_read+1)^0,c
 19794                           
 19795                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19796                           ; Switch size 1, requested type "simple"
 19797                           ; Number of cases is 1, Range of values is 0 to 0
 19798                           ; switch strategies available:
 19799                           ; Name         Instructions Cycles
 19800                           ; simple_byte            4     3 (average)
 19801                           ;	Chosen strategy is simple_byte
 19802   008292  5053               	movf	(??_disk_read+1)^0,w,c
 19803   008294  0A00               	xorlw	0	; case 0
 19804   008296  B4D8               	btfsc	status,2,c
 19805   008298  EF50  F041         	goto	l10690
 19806   00829C  EF57  F041         	goto	l7028
 19807   0082A0                     l10690:
 19808                           
 19809                           ; Switch size 1, requested type "simple"
 19810                           ; Number of cases is 1, Range of values is 0 to 0
 19811                           ; switch strategies available:
 19812                           ; Name         Instructions Cycles
 19813                           ; simple_byte            4     3 (average)
 19814                           ;	Chosen strategy is simple_byte
 19815   0082A0  5052               	movf	??_disk_read^0,w,c
 19816   0082A2  0A00               	xorlw	0	; case 0
 19817   0082A4  B4D8               	btfsc	status,2,c
 19818   0082A6  EF24  F041         	goto	l7018
 19819   0082AA  EF57  F041         	goto	l7028
 19820   0082AE                     l7028:
 19821                           
 19822                           ;mcc_generated_files/fatfs/diskio.c: 115:     return res;
 19823   0082AE  5055               	movf	disk_read@res^0,w,c
 19824   0082B0  0012               	return		;funcret
 19825   0082B2                     __end_of_disk_read:
 19826                           	callstack 0
 19827                           
 19828 ;; *************** function _SD_SPI_SectorRead *****************
 19829 ;; Defined at:
 19830 ;;		line 382 in file "mcc_generated_files/sd_spi/sd_spi.c"
 19831 ;; Parameters:    Size  Location     Type
 19832 ;;  sector_addre    4   46[COMRAM] unsigned long 
 19833 ;;  buffer          2   50[COMRAM] PTR unsigned char 
 19834 ;;		 -> Fil(546), FatFs(563), pb.fp(3), pb.fp(3), 
 19835 ;;		 -> pb.fp(3), f_gets@s(4), file(546), drive(563), 
 19836 ;;		 -> NULL(0), 
 19837 ;;  sector_count    2   52[COMRAM] unsigned short 
 19838 ;; Auto vars:     Size  Location     Type
 19839 ;;  info           13   60[COMRAM] struct SD_ASYNC_IO
 19840 ;;  i               2   58[COMRAM] unsigned short 
 19841 ;;  status          1   57[COMRAM] unsigned char 
 19842 ;;  result          1   56[COMRAM] _Bool 
 19843 ;; Return value:  Size  Location     Type
 19844 ;;                  1    wreg      _Bool 
 19845 ;; Registers used:
 19846 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 19847 ;; Tracked objects:
 19848 ;;		On entry : 0/0
 19849 ;;		On exit  : 0/0
 19850 ;;		Unchanged: 0/0
 19851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19852 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19853 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19854 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19855 ;;      Totals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19856 ;;Total ram usage:       27 bytes
 19857 ;; Hardware stack levels used: 1
 19858 ;; Hardware stack levels required when called: 3
 19859 ;; This function calls:
 19860 ;;		_SDFAST_open
 19861 ;;		_SDSLOW_open
 19862 ;;		_SD_SPI_AsyncReadTasks
 19863 ;;		_SPI1_Close
 19864 ;; This function is called by:
 19865 ;;		_disk_read
 19866 ;; This function uses a non-reentrant model
 19867 ;;
 19868                           
 19869                           	psect	text57
 19870   008F1E                     __ptext57:
 19871                           	callstack 0
 19872   008F1E                     _SD_SPI_SectorRead:
 19873                           	callstack 24
 19874   008F1E                     
 19875                           ;mcc_generated_files/sd_spi/sd_spi.c: 382: _Bool SD_SPI_SectorRead(uint32_t sector_addre
      +                          ss, uint8_t* buffer, uint16_t sector_count);mcc_generated_files/sd_spi/sd_spi.c: 383: {;
      +                          mcc_generated_files/sd_spi/sd_spi.c: 384:     struct SD_ASYNC_IO info;;mcc_generated_fil
      +                          es/sd_spi/sd_spi.c: 385:     uint8_t status;;mcc_generated_files/sd_spi/sd_spi.c: 386:  
      +                             _Bool result = 0;
 19876   008F1E  0E00               	movlw	0
 19877   008F20  6E39               	movwf	SD_SPI_SectorRead@result^0,c
 19878                           
 19879                           ;mcc_generated_files/sd_spi/sd_spi.c: 387:     uint16_t i;;mcc_generated_files/sd_spi/sd
      +                          _spi.c: 389:     for(i=0; i<sector_count; i++)
 19880   008F22  0E00               	movlw	0
 19881   008F24  6E3C               	movwf	(SD_SPI_SectorRead@i+1)^0,c
 19882   008F26  0E00               	movlw	0
 19883   008F28  6E3B               	movwf	SD_SPI_SectorRead@i^0,c
 19884   008F2A  EF1D  F048         	goto	l6990
 19885   008F2E                     l6962:
 19886                           
 19887                           ;mcc_generated_files/sd_spi/sd_spi.c: 390:     {;mcc_generated_files/sd_spi/sd_spi.c: 39
      +                          2:         info.wNumBytes = 1 << 9;
 19888   008F2E  0E02               	movlw	2
 19889   008F30  6E3E               	movwf	(SD_SPI_SectorRead@info+1)^0,c
 19890   008F32  0E00               	movlw	0
 19891   008F34  6E3D               	movwf	SD_SPI_SectorRead@info^0,c
 19892                           
 19893                           ;mcc_generated_files/sd_spi/sd_spi.c: 393:         info.dwBytesRemaining = 1 << 9;
 19894   008F36  0E00               	movlw	0
 19895   008F38  6E3F               	movwf	(SD_SPI_SectorRead@info+2)^0,c
 19896   008F3A  0E02               	movlw	2
 19897   008F3C  6E40               	movwf	(SD_SPI_SectorRead@info+3)^0,c
 19898   008F3E  0E00               	movlw	0
 19899   008F40  6E41               	movwf	(SD_SPI_SectorRead@info+4)^0,c
 19900   008F42  0E00               	movlw	0
 19901   008F44  6E42               	movwf	(SD_SPI_SectorRead@info+5)^0,c
 19902   008F46                     
 19903                           ;mcc_generated_files/sd_spi/sd_spi.c: 394:         info.pBuffer = buffer + (i << 9);
 19904   008F46  C03B  F037         	movff	SD_SPI_SectorRead@i,??_SD_SPI_SectorRead
 19905   008F4A  C03C  F038         	movff	SD_SPI_SectorRead@i+1,??_SD_SPI_SectorRead+1
 19906   008F4E  0E09               	movlw	9
 19907   008F50                     u8135:
 19908   008F50  90D8               	bcf	status,0,c
 19909   008F52  3637               	rlcf	??_SD_SPI_SectorRead^0,f,c
 19910   008F54  3638               	rlcf	(??_SD_SPI_SectorRead+1)^0,f,c
 19911   008F56  2EE8               	decfsz	wreg,f,c
 19912   008F58  EFA8  F047         	goto	u8135
 19913   008F5C  5037               	movf	??_SD_SPI_SectorRead^0,w,c
 19914   008F5E  2433               	addwf	SD_SPI_SectorRead@buffer^0,w,c
 19915   008F60  6E43               	movwf	(SD_SPI_SectorRead@info+6)^0,c
 19916   008F62  5038               	movf	(??_SD_SPI_SectorRead+1)^0,w,c
 19917   008F64  2034               	addwfc	(SD_SPI_SectorRead@buffer+1)^0,w,c
 19918   008F66  6E44               	movwf	(SD_SPI_SectorRead@info+7)^0,c
 19919   008F68                     
 19920                           ;mcc_generated_files/sd_spi/sd_spi.c: 395:         info.dwAddress = sector_address + i;
 19921   008F68  503B               	movf	SD_SPI_SectorRead@i^0,w,c
 19922   008F6A  242F               	addwf	SD_SPI_SectorRead@sector_address^0,w,c
 19923   008F6C  6E45               	movwf	(SD_SPI_SectorRead@info+8)^0,c
 19924   008F6E  503C               	movf	(SD_SPI_SectorRead@i+1)^0,w,c
 19925   008F70  2030               	addwfc	(SD_SPI_SectorRead@sector_address+1)^0,w,c
 19926   008F72  6E46               	movwf	(SD_SPI_SectorRead@info+9)^0,c
 19927   008F74  0E00               	movlw	0
 19928   008F76  2031               	addwfc	(SD_SPI_SectorRead@sector_address+2)^0,w,c
 19929   008F78  6E47               	movwf	(SD_SPI_SectorRead@info+10)^0,c
 19930   008F7A  0E00               	movlw	0
 19931   008F7C  2032               	addwfc	(SD_SPI_SectorRead@sector_address+3)^0,w,c
 19932   008F7E  6E48               	movwf	(SD_SPI_SectorRead@info+11)^0,c
 19933                           
 19934                           ;mcc_generated_files/sd_spi/sd_spi.c: 396:         info.bStateVariable = 0x01;
 19935   008F80  0E01               	movlw	1
 19936   008F82  6E49               	movwf	(SD_SPI_SectorRead@info+12)^0,c
 19937   008F84                     
 19938                           ;mcc_generated_files/sd_spi/sd_spi.c: 398:         if( spiMaster[SDFAST].spiOpen() == 0 
      +                          )
 19939   008F84  0E59               	movlw	low (_spiMaster+2)
 19940   008F86  6EF6               	movwf	tblptrl,c
 19941   008F88  0EFF               	movlw	high (_spiMaster+2)
 19942   008F8A  6EF7               	movwf	tblptrh,c
 19943   008F8C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19944   008F8C  6AF8               	clrf	tblptru,c
 19945   008F8E                     	endif
 19946   008F8E                     	if	0	;tblptru may be non-zero
 19947   008F8E                     	endif
 19948   008F8E  0009               	tblrd		*+
 19949   008F90  CFF5 F037          	movff	tablat,??_SD_SPI_SectorRead
 19950   008F94  0009               	tblrd		*+
 19951   008F96  CFF5 F038          	movff	tablat,??_SD_SPI_SectorRead+1
 19952   008F9A  D802               	call	u8148
 19953   008F9C  EFD9  F047         	goto	u8149
 19954   008FA0                     u8148:
 19955   008FA0  0005               	push	
 19956   008FA2  6EFA               	movwf	pclath,c
 19957   008FA4  5037               	movf	??_SD_SPI_SectorRead^0,w,c
 19958   008FA6  6EFD               	movwf	tosl,c
 19959   008FA8  5038               	movf	(??_SD_SPI_SectorRead+1)^0,w,c
 19960   008FAA  6EFE               	movwf	tosh,c
 19961   008FAC  6AFF               	clrf	tosu,c
 19962   008FAE  50FA               	movf	pclath,w,c
 19963   008FB0  0012               	return		;indir
 19964   008FB2                     u8149:
 19965   008FB2  0900               	iorlw	0
 19966   008FB4  A4D8               	btfss	status,2,c
 19967   008FB6  EFDF  F047         	goto	u8151
 19968   008FBA  EFE1  F047         	goto	u8150
 19969   008FBE                     u8151:
 19970   008FBE  EFE4  F047         	goto	l1043
 19971   008FC2                     u8150:
 19972   008FC2                     
 19973                           ;mcc_generated_files/sd_spi/sd_spi.c: 399:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 400:             return 0;
 19974   008FC2  0E00               	movlw	0
 19975   008FC4  EF29  F048         	goto	l1042
 19976   008FC8                     l1043:
 19977   008FC8  948B               	bcf	139,2,c	;volatile
 19978   008FCA                     l6974:
 19979                           
 19980                           ;mcc_generated_files/sd_spi/sd_spi.c: 405:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 406:             status = SD_SPI_AsyncReadTasks(&info);
 19981   008FCA  0E3D               	movlw	low SD_SPI_SectorRead@info
 19982   008FCC  6E23               	movwf	SD_SPI_AsyncReadTasks@info^0,c
 19983   008FCE  0E00               	movlw	high SD_SPI_SectorRead@info
 19984   008FD0  6E24               	movwf	(SD_SPI_AsyncReadTasks@info+1)^0,c
 19985   008FD2  ECBA  F059         	call	_SD_SPI_AsyncReadTasks	;wreg free
 19986   008FD6  6E3A               	movwf	SD_SPI_SectorRead@status^0,c
 19987   008FD8                     
 19988                           ;mcc_generated_files/sd_spi/sd_spi.c: 407:             if(status == 0x00)
 19989   008FD8  503A               	movf	SD_SPI_SectorRead@status^0,w,c
 19990   008FDA  A4D8               	btfss	status,2,c
 19991   008FDC  EFF2  F047         	goto	u8161
 19992   008FE0  EFF4  F047         	goto	u8160
 19993   008FE4                     u8161:
 19994   008FE4  EFF8  F047         	goto	l6982
 19995   008FE8                     u8160:
 19996   008FE8                     
 19997                           ;mcc_generated_files/sd_spi/sd_spi.c: 408:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 409:                 result = 1;
 19998   008FE8  0E01               	movlw	1
 19999   008FEA  6E39               	movwf	SD_SPI_SectorRead@result^0,c
 20000                           
 20001                           ;mcc_generated_files/sd_spi/sd_spi.c: 410:                 break;
 20002   008FEC  EF02  F048         	goto	l1051
 20003   008FF0                     l6982:
 20004   008FF0  283A               	incf	SD_SPI_SectorRead@status^0,w,c
 20005   008FF2  A4D8               	btfss	status,2,c
 20006   008FF4  EFFE  F047         	goto	u8171
 20007   008FF8  EF00  F048         	goto	u8170
 20008   008FFC                     u8171:
 20009   008FFC  EFE5  F047         	goto	l6974
 20010   009000                     u8170:
 20011   009000                     
 20012                           ;mcc_generated_files/sd_spi/sd_spi.c: 413:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 414:                 result = 0;
 20013   009000  0E00               	movlw	0
 20014   009002  6E39               	movwf	SD_SPI_SectorRead@result^0,c
 20015   009004                     l1051:
 20016   009004  848B               	bsf	139,2,c	;volatile
 20017   009006                     
 20018                           ;mcc_generated_files/sd_spi/sd_spi.c: 420:         spiMaster[SDFAST].spiClose();
 20019   009006  0E57               	movlw	low _spiMaster
 20020   009008  6EF6               	movwf	tblptrl,c
 20021   00900A                     	if	1	;There is more than 1 active tblptr byte
 20022   00900A  0EFF               	movlw	high _spiMaster
 20023   00900C  6EF7               	movwf	tblptrh,c
 20024   00900E                     	endif
 20025   00900E                     	if	1	;There are 3 active tblptr bytes
 20026   00900E  0E00               	movlw	low (_spiMaster shr (0+16))
 20027   009010  6EF8               	movwf	tblptru,c
 20028   009012                     	endif
 20029   009012  0009               	tblrd		*+
 20030   009014  CFF5 F037          	movff	tablat,??_SD_SPI_SectorRead
 20031   009018  0009               	tblrd		*+
 20032   00901A  CFF5 F038          	movff	tablat,??_SD_SPI_SectorRead+1
 20033   00901E  D802               	call	u8188
 20034   009020  EF1B  F048         	goto	u8189
 20035   009024                     u8188:
 20036   009024  0005               	push	
 20037   009026  6EFA               	movwf	pclath,c
 20038   009028  5037               	movf	??_SD_SPI_SectorRead^0,w,c
 20039   00902A  6EFD               	movwf	tosl,c
 20040   00902C  5038               	movf	(??_SD_SPI_SectorRead+1)^0,w,c
 20041   00902E  6EFE               	movwf	tosh,c
 20042   009030  6AFF               	clrf	tosu,c
 20043   009032  50FA               	movf	pclath,w,c
 20044   009034  0012               	return		;indir
 20045   009036                     u8189:
 20046   009036                     
 20047                           ;mcc_generated_files/sd_spi/sd_spi.c: 421:     }
 20048   009036  4A3B               	infsnz	SD_SPI_SectorRead@i^0,f,c
 20049   009038  2A3C               	incf	(SD_SPI_SectorRead@i+1)^0,f,c
 20050   00903A                     l6990:
 20051   00903A  5035               	movf	SD_SPI_SectorRead@sector_count^0,w,c
 20052   00903C  5C3B               	subwf	SD_SPI_SectorRead@i^0,w,c
 20053   00903E  5036               	movf	(SD_SPI_SectorRead@sector_count+1)^0,w,c
 20054   009040  583C               	subwfb	(SD_SPI_SectorRead@i+1)^0,w,c
 20055   009042  A0D8               	btfss	status,0,c
 20056   009044  EF26  F048         	goto	u8191
 20057   009048  EF28  F048         	goto	u8190
 20058   00904C                     u8191:
 20059   00904C  EF97  F047         	goto	l6962
 20060   009050                     u8190:
 20061   009050                     
 20062                           ;mcc_generated_files/sd_spi/sd_spi.c: 423:     return result;
 20063   009050  5039               	movf	SD_SPI_SectorRead@result^0,w,c
 20064   009052                     l1042:
 20065   009052  0012               	return		;funcret
 20066   009054                     __end_of_SD_SPI_SectorRead:
 20067                           	callstack 0
 20068                           
 20069 ;; *************** function _SPI1_Close *****************
 20070 ;; Defined at:
 20071 ;;		line 89 in file "mcc_generated_files/spi1.c"
 20072 ;; Parameters:    Size  Location     Type
 20073 ;;		None
 20074 ;; Auto vars:     Size  Location     Type
 20075 ;;		None
 20076 ;; Return value:  Size  Location     Type
 20077 ;;                  1    wreg      void 
 20078 ;; Registers used:
 20079 ;;		None
 20080 ;; Tracked objects:
 20081 ;;		On entry : 0/0
 20082 ;;		On exit  : 0/0
 20083 ;;		Unchanged: 0/0
 20084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20089 ;;Total ram usage:        0 bytes
 20090 ;; Hardware stack levels used: 1
 20091 ;; This function calls:
 20092 ;;		Nothing
 20093 ;; This function is called by:
 20094 ;;		_SD_SPI_SectorWrite
 20095 ;;		_SD_SPI_SectorRead
 20096 ;;		_SD_SPI_MediaInitialize
 20097 ;; This function uses a non-reentrant model
 20098 ;;
 20099                           
 20100                           	psect	text58
 20101   007C14                     __ptext58:
 20102                           	callstack 0
 20103   007C14                     _SPI1_Close:
 20104                           	callstack 26
 20105   007C14                     
 20106                           ;mcc_generated_files/spi1.c: 91:     SSP1CON1bits.SSPEN = 0;
 20107   007C14  9AC6               	bcf	198,5,c	;volatile
 20108   007C16  0012               	return		;funcret
 20109   007C18                     __end_of_SPI1_Close:
 20110                           	callstack 0
 20111                           
 20112 ;; *************** function _SD_SPI_AsyncReadTasks *****************
 20113 ;; Defined at:
 20114 ;;		line 825 in file "mcc_generated_files/sd_spi/sd_spi.c"
 20115 ;; Parameters:    Size  Location     Type
 20116 ;;  info            2   34[COMRAM] PTR struct SD_ASYNC_IO
 20117 ;;		 -> SD_SPI_SectorRead@info(13), 
 20118 ;; Auto vars:     Size  Location     Type
 20119 ;;  response        5   40[COMRAM] struct .
 20120 ;;  bData           1   45[COMRAM] unsigned char 
 20121 ;; Return value:  Size  Location     Type
 20122 ;;                  1    wreg      unsigned char 
 20123 ;; Registers used:
 20124 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 20125 ;; Tracked objects:
 20126 ;;		On entry : 0/0
 20127 ;;		On exit  : 0/0
 20128 ;;		Unchanged: 0/0
 20129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20130 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20131 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20132 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20133 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20134 ;;Total ram usage:       12 bytes
 20135 ;; Hardware stack levels used: 1
 20136 ;; Hardware stack levels required when called: 2
 20137 ;; This function calls:
 20138 ;;		_SD_SendCmd
 20139 ;;		_SPI1_ExchangeBlock
 20140 ;;		_SPI1_ExchangeByte
 20141 ;;		_memset
 20142 ;; This function is called by:
 20143 ;;		_SD_SPI_SectorRead
 20144 ;; This function uses a non-reentrant model
 20145 ;;
 20146                           
 20147                           	psect	text59
 20148   00B374                     __ptext59:
 20149                           	callstack 0
 20150   00B374                     _SD_SPI_AsyncReadTasks:
 20151                           	callstack 24
 20152   00B374                     
 20153                           ;mcc_generated_files/sd_spi/sd_spi.c: 825: static uint8_t SD_SPI_AsyncReadTasks(struct S
      +                          D_ASYNC_IO* info);mcc_generated_files/sd_spi/sd_spi.c: 826: {;mcc_generated_files/sd_spi
      +                          /sd_spi.c: 827:     uint8_t bData;;mcc_generated_files/sd_spi/sd_spi.c: 828:     SD_RESP
      +                          ONSE response;;mcc_generated_files/sd_spi/sd_spi.c: 829:     static uint16_t blockCounte
      +                          r;;mcc_generated_files/sd_spi/sd_spi.c: 830:     static uint32_t longTimeoutCounter;;mcc
      +                          _generated_files/sd_spi/sd_spi.c: 831:     static _Bool SingleBlockRead;
 20154   00B374  EFB4  F05B         	goto	l6952
 20155   00B378                     l6820:
 20156                           
 20157                           ;mcc_generated_files/sd_spi/sd_spi.c: 837:             return 0x00;
 20158   00B378  0E00               	movlw	0
 20159   00B37A  EFDF  F05B         	goto	l1157
 20160   00B37E                     l6824:
 20161                           
 20162                           ;mcc_generated_files/sd_spi/sd_spi.c: 842:             mediaInformation.state = SD_STATE
      +                          _BUSY;
 20163   00B37E  0E02               	movlw	2
 20164   00B380  0101               	movlb	1	; () banked
 20165   00B382  6FDA               	movwf	(_mediaInformation+3)& (0+255),b
 20166                           
 20167                           ;mcc_generated_files/sd_spi/sd_spi.c: 843:             blockCounter = 512u;
 20168   00B384  0E02               	movlw	2
 20169   00B386  6F26               	movwf	(SD_SPI_AsyncReadTasks@blockCounter+1)& (0+255),b
 20170   00B388  0E00               	movlw	0
 20171   00B38A  6F25               	movwf	SD_SPI_AsyncReadTasks@blockCounter& (0+255),b
 20172   00B38C                     
 20173                           ; BSR set to: 1
 20174                           ;mcc_generated_files/sd_spi/sd_spi.c: 844:             ioInfo = *info;
 20175   00B38C  C023  FFD9         	movff	SD_SPI_AsyncReadTasks@info,fsr2l
 20176   00B390  C024  FFDA         	movff	SD_SPI_AsyncReadTasks@info+1,fsr2h
 20177   00B394  EE11  F000         	lfsr	1,_ioInfo
 20178   00B398  0E0C               	movlw	12
 20179   00B39A                     u7931:
 20180   00B39A  CFDB FFE3          	movff	plusw2,plusw1
 20181   00B39E  06E8               	decf	wreg,f,c
 20182   00B3A0  E2FC               	bc	u7931
 20183   00B3A2                     
 20184                           ; BSR set to: 1
 20185                           ;mcc_generated_files/sd_spi/sd_spi.c: 850:             if (mediaInformation.gSDMode == 0
      +                          )
 20186   00B3A2  51DF               	movf	(_mediaInformation+8)& (0+255),w,b
 20187   00B3A4  A4D8               	btfss	status,2,c
 20188   00B3A6  EFD7  F059         	goto	u7941
 20189   00B3AA  EFD9  F059         	goto	u7940
 20190   00B3AE                     u7941:
 20191   00B3AE  EFE2  F059         	goto	l1159
 20192   00B3B2                     u7940:
 20193   00B3B2                     
 20194                           ; BSR set to: 1
 20195                           ;mcc_generated_files/sd_spi/sd_spi.c: 851:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 852:                 ioInfo.dwAddress <<= 9;
 20196   00B3B2  0E09               	movlw	9
 20197   00B3B4                     u7955:
 20198   00B3B4  90D8               	bcf	status,0,c
 20199   00B3B6  3708               	rlcf	(_ioInfo+8)& (0+255),f,b
 20200   00B3B8  3709               	rlcf	(_ioInfo+9)& (0+255),f,b
 20201   00B3BA  370A               	rlcf	(_ioInfo+10)& (0+255),f,b
 20202   00B3BC  370B               	rlcf	(_ioInfo+11)& (0+255),f,b
 20203   00B3BE  2EE8               	decfsz	wreg,f,c
 20204   00B3C0  EFDA  F059         	goto	u7955
 20205   00B3C4                     l1159:
 20206                           
 20207                           ; BSR set to: 1
 20208                           ;mcc_generated_files/sd_spi/sd_spi.c: 854:             if(ioInfo.dwBytesRemaining <= 512
      +                          u)
 20209   00B3C4  5105               	movf	(_ioInfo+5)& (0+255),w,b
 20210   00B3C6  1104               	iorwf	(_ioInfo+4)& (0+255),w,b
 20211   00B3C8  E108               	bnz	u7961
 20212   00B3CA  0502               	decf	(_ioInfo+2)& (0+255),w,b
 20213   00B3CC  0E02               	movlw	2
 20214   00B3CE  5903               	subwfb	(_ioInfo+3)& (0+255),w,b
 20215   00B3D0  B0D8               	btfsc	status,0,c
 20216   00B3D2  EFED  F059         	goto	u7961
 20217   00B3D6  EFEF  F059         	goto	u7960
 20218   00B3DA                     u7961:
 20219   00B3DA  EF05  F05A         	goto	l6836
 20220   00B3DE                     u7960:
 20221   00B3DE                     
 20222                           ; BSR set to: 1
 20223                           ;mcc_generated_files/sd_spi/sd_spi.c: 855:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 856:                 SingleBlockRead = 1;
 20224   00B3DE  0E01               	movlw	1
 20225   00B3E0  6F2D               	movwf	SD_SPI_AsyncReadTasks@SingleBlockRead& (0+255),b
 20226   00B3E2                     
 20227                           ; BSR set to: 1
 20228                           ;mcc_generated_files/sd_spi/sd_spi.c: 857:                 response = SD_SendCmd(SD_READ
      +                          _SINGLE_BLOCK, ioInfo.dwAddress);
 20229   00B3E2  C108  F00C         	movff	_ioInfo+8,SD_SendCmd@address
 20230   00B3E6  C109  F00D         	movff	_ioInfo+9,SD_SendCmd@address+1
 20231   00B3EA  C10A  F00E         	movff	_ioInfo+10,SD_SendCmd@address+2
 20232   00B3EE  C10B  F00F         	movff	_ioInfo+11,SD_SendCmd@address+3
 20233   00B3F2  0E08               	movlw	8
 20234   00B3F4  EC0A  F05E         	call	_SD_SendCmd
 20235   00B3F8  EE20  F029         	lfsr	2,SD_SPI_AsyncReadTasks@response
 20236   00B3FC  0E04               	movlw	4
 20237   00B3FE                     u7971:
 20238   00B3FE  CFEB FFDB          	movff	plusw0,plusw2
 20239   00B402  06E8               	decf	wreg,f,c
 20240   00B404  E2FC               	bc	u7971
 20241                           
 20242                           ;mcc_generated_files/sd_spi/sd_spi.c: 858:             }
 20243   00B406  EF19  F05A         	goto	l6840
 20244   00B40A                     l6836:
 20245                           
 20246                           ; BSR set to: 1
 20247                           ;mcc_generated_files/sd_spi/sd_spi.c: 860:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 861:                 SingleBlockRead = 0;
 20248   00B40A  0E00               	movlw	0
 20249   00B40C  6F2D               	movwf	SD_SPI_AsyncReadTasks@SingleBlockRead& (0+255),b
 20250   00B40E                     
 20251                           ; BSR set to: 1
 20252                           ;mcc_generated_files/sd_spi/sd_spi.c: 862:                 response = SD_SendCmd(SD_READ
      +                          _MULTI_BLOCK, ioInfo.dwAddress);
 20253   00B40E  C108  F00C         	movff	_ioInfo+8,SD_SendCmd@address
 20254   00B412  C109  F00D         	movff	_ioInfo+9,SD_SendCmd@address+1
 20255   00B416  C10A  F00E         	movff	_ioInfo+10,SD_SendCmd@address+2
 20256   00B41A  C10B  F00F         	movff	_ioInfo+11,SD_SendCmd@address+3
 20257   00B41E  0E09               	movlw	9
 20258   00B420  EC0A  F05E         	call	_SD_SendCmd
 20259   00B424  EE20  F029         	lfsr	2,SD_SPI_AsyncReadTasks@response
 20260   00B428  0E04               	movlw	4
 20261   00B42A                     u7981:
 20262   00B42A  CFEB FFDB          	movff	plusw0,plusw2
 20263   00B42E  06E8               	decf	wreg,f,c
 20264   00B430  E2FC               	bc	u7981
 20265   00B432                     l6840:
 20266                           
 20267                           ;mcc_generated_files/sd_spi/sd_spi.c: 869:             if(response.r1._byte != 0x00)
 20268   00B432  5029               	movf	SD_SPI_AsyncReadTasks@response^0,w,c
 20269   00B434  B4D8               	btfsc	status,2,c
 20270   00B436  EF1F  F05A         	goto	u7991
 20271   00B43A  EF21  F05A         	goto	u7990
 20272   00B43E                     u7991:
 20273   00B43E  EF2C  F05A         	goto	l6848
 20274   00B442                     u7990:
 20275   00B442                     
 20276                           ;mcc_generated_files/sd_spi/sd_spi.c: 870:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 872:                 info->bStateVariable = 0xFE;
 20277   00B442  EE20 F00C          	lfsr	2,12
 20278   00B446  5023               	movf	SD_SPI_AsyncReadTasks@info^0,w,c
 20279   00B448  26D9               	addwf	fsr2l,f,c
 20280   00B44A  5024               	movf	(SD_SPI_AsyncReadTasks@info+1)^0,w,c
 20281   00B44C  22DA               	addwfc	fsr2h,f,c
 20282   00B44E  0EFE               	movlw	254
 20283   00B450  6EDF               	movwf	indf2,c
 20284   00B452                     l6844:
 20285                           
 20286                           ;mcc_generated_files/sd_spi/sd_spi.c: 873:                 return 0x01;
 20287   00B452  0E01               	movlw	1
 20288   00B454  EFDF  F05B         	goto	l1157
 20289   00B458                     l6848:
 20290                           
 20291                           ;mcc_generated_files/sd_spi/sd_spi.c: 879:             longTimeoutCounter = (uint32_t)0x
      +                          40000;
 20292   00B458  0E00               	movlw	0
 20293   00B45A  0101               	movlb	1	; () banked
 20294   00B45C  6F15               	movwf	SD_SPI_AsyncReadTasks@longTimeoutCounter& (0+255),b
 20295   00B45E  0E00               	movlw	0
 20296   00B460  6F16               	movwf	(SD_SPI_AsyncReadTasks@longTimeoutCounter+1)& (0+255),b
 20297   00B462  0E04               	movlw	4
 20298   00B464  6F17               	movwf	(SD_SPI_AsyncReadTasks@longTimeoutCounter+2)& (0+255),b
 20299   00B466  0E00               	movlw	0
 20300   00B468  6F18               	movwf	(SD_SPI_AsyncReadTasks@longTimeoutCounter+3)& (0+255),b
 20301   00B46A                     
 20302                           ; BSR set to: 1
 20303                           ;mcc_generated_files/sd_spi/sd_spi.c: 880:             info->bStateVariable = 0x03;
 20304   00B46A  EE20 F00C          	lfsr	2,12
 20305   00B46E  5023               	movf	SD_SPI_AsyncReadTasks@info^0,w,c
 20306   00B470  26D9               	addwf	fsr2l,f,c
 20307   00B472  5024               	movf	(SD_SPI_AsyncReadTasks@info+1)^0,w,c
 20308   00B474  22DA               	addwfc	fsr2h,f,c
 20309   00B476  0E03               	movlw	3
 20310   00B478  6EDF               	movwf	indf2,c
 20311   00B47A  EF29  F05A         	goto	l6844
 20312   00B47E                     l6856:
 20313                           
 20314                           ;mcc_generated_files/sd_spi/sd_spi.c: 888:             if(longTimeoutCounter != 0x000000
      +                          00)
 20315   00B47E  0101               	movlb	1	; () banked
 20316   00B480  5115               	movf	SD_SPI_AsyncReadTasks@longTimeoutCounter& (0+255),w,b
 20317   00B482  1116               	iorwf	(SD_SPI_AsyncReadTasks@longTimeoutCounter+1)& (0+255),w,b
 20318   00B484  1117               	iorwf	(SD_SPI_AsyncReadTasks@longTimeoutCounter+2)& (0+255),w,b
 20319   00B486  1118               	iorwf	(SD_SPI_AsyncReadTasks@longTimeoutCounter+3)& (0+255),w,b
 20320   00B488  B4D8               	btfsc	status,2,c
 20321   00B48A  EF49  F05A         	goto	u8001
 20322   00B48E  EF4B  F05A         	goto	u8000
 20323   00B492                     u8001:
 20324   00B492  EF8F  F05A         	goto	l6884
 20325   00B496                     u8000:
 20326   00B496                     
 20327                           ; BSR set to: 1
 20328                           ;mcc_generated_files/sd_spi/sd_spi.c: 889:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 890:                 longTimeoutCounter--;
 20329   00B496  0715               	decf	SD_SPI_AsyncReadTasks@longTimeoutCounter& (0+255),f,b
 20330   00B498  0E00               	movlw	0
 20331   00B49A  5B16               	subwfb	(SD_SPI_AsyncReadTasks@longTimeoutCounter+1)& (0+255),f,b
 20332   00B49C  5B17               	subwfb	(SD_SPI_AsyncReadTasks@longTimeoutCounter+2)& (0+255),f,b
 20333   00B49E  5B18               	subwfb	(SD_SPI_AsyncReadTasks@longTimeoutCounter+3)& (0+255),f,b
 20334   00B4A0                     
 20335                           ; BSR set to: 1
 20336                           ;mcc_generated_files/sd_spi/sd_spi.c: 891:                 bData = spiMaster[SDFAST].exc
      +                          hangeByte(0xFF);
 20337   00B4A0  0E5B               	movlw	low (_spiMaster+4)
 20338   00B4A2  6EF6               	movwf	tblptrl,c
 20339   00B4A4  0EFF               	movlw	high (_spiMaster+4)
 20340   00B4A6  6EF7               	movwf	tblptrh,c
 20341   00B4A8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20342   00B4A8  6AF8               	clrf	tblptru,c
 20343   00B4AA                     	endif
 20344   00B4AA                     	if	0	;tblptru may be non-zero
 20345   00B4AA                     	endif
 20346   00B4AA  0009               	tblrd		*+
 20347   00B4AC  CFF5 F025          	movff	tablat,??_SD_SPI_AsyncReadTasks
 20348   00B4B0  0009               	tblrd		*+
 20349   00B4B2  CFF5 F026          	movff	tablat,??_SD_SPI_AsyncReadTasks+1
 20350   00B4B6  D802               	call	u8018
 20351   00B4B8  EF68  F05A         	goto	u8019
 20352   00B4BC                     u8018:
 20353   00B4BC  0005               	push	
 20354   00B4BE  6EFA               	movwf	pclath,c
 20355   00B4C0  5025               	movf	??_SD_SPI_AsyncReadTasks^0,w,c
 20356   00B4C2  6EFD               	movwf	tosl,c
 20357   00B4C4  5026               	movf	(??_SD_SPI_AsyncReadTasks+1)^0,w,c
 20358   00B4C6  6EFE               	movwf	tosh,c
 20359   00B4C8  6AFF               	clrf	tosu,c
 20360   00B4CA  50FA               	movf	pclath,w,c
 20361   00B4CC  0EFF               	movlw	255
 20362   00B4CE  0012               	return		;indir
 20363   00B4D0                     u8019:
 20364   00B4D0  6E2E               	movwf	SD_SPI_AsyncReadTasks@bData^0,c
 20365   00B4D2                     
 20366                           ;mcc_generated_files/sd_spi/sd_spi.c: 893:                 if(bData != SD_TOKEN_FLOATING
      +                          _BUS)
 20367   00B4D2  282E               	incf	SD_SPI_AsyncReadTasks@bData^0,w,c
 20368   00B4D4  B4D8               	btfsc	status,2,c
 20369   00B4D6  EF6F  F05A         	goto	u8021
 20370   00B4DA  EF71  F05A         	goto	u8020
 20371   00B4DE                     u8021:
 20372   00B4DE  EF29  F05A         	goto	l6844
 20373   00B4E2                     u8020:
 20374   00B4E2                     
 20375                           ;mcc_generated_files/sd_spi/sd_spi.c: 894:                 {;mcc_generated_files/sd_spi/
      +                          sd_spi.c: 895:                     if(bData == SD_TOKEN_START)
 20376   00B4E2  0EFE               	movlw	254
 20377   00B4E4  182E               	xorwf	SD_SPI_AsyncReadTasks@bData^0,w,c
 20378   00B4E6  A4D8               	btfss	status,2,c
 20379   00B4E8  EF78  F05A         	goto	u8031
 20380   00B4EC  EF7A  F05A         	goto	u8030
 20381   00B4F0                     u8031:
 20382   00B4F0  EF85  F05A         	goto	l6874
 20383   00B4F4                     u8030:
 20384   00B4F4                     
 20385                           ;mcc_generated_files/sd_spi/sd_spi.c: 896:                     {;mcc_generated_files/sd_
      +                          spi/sd_spi.c: 899:                         info->bStateVariable = 0x02;
 20386   00B4F4  EE20 F00C          	lfsr	2,12
 20387   00B4F8  5023               	movf	SD_SPI_AsyncReadTasks@info^0,w,c
 20388   00B4FA  26D9               	addwf	fsr2l,f,c
 20389   00B4FC  5024               	movf	(SD_SPI_AsyncReadTasks@info+1)^0,w,c
 20390   00B4FE  22DA               	addwfc	fsr2h,f,c
 20391   00B500  0E02               	movlw	2
 20392   00B502  6EDF               	movwf	indf2,c
 20393   00B504                     l6868:
 20394                           
 20395                           ;mcc_generated_files/sd_spi/sd_spi.c: 900:                         return 0x02;
 20396   00B504  0E02               	movlw	2
 20397   00B506  EFDF  F05B         	goto	l1157
 20398   00B50A                     l6874:
 20399                           
 20400                           ;mcc_generated_files/sd_spi/sd_spi.c: 903:                     {;mcc_generated_files/sd_
      +                          spi/sd_spi.c: 906:                         info->bStateVariable = 0xFE;
 20401   00B50A  EE20 F00C          	lfsr	2,12
 20402   00B50E  5023               	movf	SD_SPI_AsyncReadTasks@info^0,w,c
 20403   00B510  26D9               	addwf	fsr2l,f,c
 20404   00B512  5024               	movf	(SD_SPI_AsyncReadTasks@info+1)^0,w,c
 20405   00B514  22DA               	addwfc	fsr2h,f,c
 20406   00B516  0EFE               	movlw	254
 20407   00B518  6EDF               	movwf	indf2,c
 20408   00B51A  EF29  F05A         	goto	l6844
 20409   00B51E                     l6884:
 20410                           
 20411                           ; BSR set to: 1
 20412                           ;mcc_generated_files/sd_spi/sd_spi.c: 917:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 920:                 info->bStateVariable = 0xFE;
 20413   00B51E  EE20 F00C          	lfsr	2,12
 20414   00B522  5023               	movf	SD_SPI_AsyncReadTasks@info^0,w,c
 20415   00B524  26D9               	addwf	fsr2l,f,c
 20416   00B526  5024               	movf	(SD_SPI_AsyncReadTasks@info+1)^0,w,c
 20417   00B528  22DA               	addwfc	fsr2h,f,c
 20418   00B52A  0EFE               	movlw	254
 20419   00B52C  6EDF               	movwf	indf2,c
 20420   00B52E  EF29  F05A         	goto	l6844
 20421   00B532                     l6890:
 20422                           
 20423                           ;mcc_generated_files/sd_spi/sd_spi.c: 929:             if(ioInfo.dwBytesRemaining != 0x0
      +                          0000000)
 20424   00B532  0101               	movlb	1	; () banked
 20425   00B534  5102               	movf	(_ioInfo+2)& (0+255),w,b
 20426   00B536  1103               	iorwf	(_ioInfo+3)& (0+255),w,b
 20427   00B538  1104               	iorwf	(_ioInfo+4)& (0+255),w,b
 20428   00B53A  1105               	iorwf	(_ioInfo+5)& (0+255),w,b
 20429   00B53C  B4D8               	btfsc	status,2,c
 20430   00B53E  EFA3  F05A         	goto	u8041
 20431   00B542  EFA5  F05A         	goto	u8040
 20432   00B546                     u8041:
 20433   00B546  EF49  F05B         	goto	l6920
 20434   00B54A                     u8040:
 20435   00B54A                     
 20436                           ; BSR set to: 1
 20437                           ;mcc_generated_files/sd_spi/sd_spi.c: 930:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 933:                 ioInfo.wNumBytes = info->wNumBytes;
 20438   00B54A  C023  FFD9         	movff	SD_SPI_AsyncReadTasks@info,fsr2l
 20439   00B54E  C024  FFDA         	movff	SD_SPI_AsyncReadTasks@info+1,fsr2h
 20440   00B552  CFDE F100          	movff	postinc2,_ioInfo
 20441   00B556  CFDD F101          	movff	postdec2,_ioInfo+1
 20442   00B55A                     
 20443                           ; BSR set to: 1
 20444                           ;mcc_generated_files/sd_spi/sd_spi.c: 934:                 ioInfo.pBuffer = info->pBuffe
      +                          r;
 20445   00B55A  EE20 F006          	lfsr	2,6
 20446   00B55E  5023               	movf	SD_SPI_AsyncReadTasks@info^0,w,c
 20447   00B560  26D9               	addwf	fsr2l,f,c
 20448   00B562  5024               	movf	(SD_SPI_AsyncReadTasks@info+1)^0,w,c
 20449   00B564  22DA               	addwfc	fsr2h,f,c
 20450   00B566  CFDE F106          	movff	postinc2,_ioInfo+6
 20451   00B56A  CFDD F107          	movff	postdec2,_ioInfo+7
 20452                           
 20453                           ;mcc_generated_files/sd_spi/sd_spi.c: 937:                 ioInfo.dwBytesRemaining -= io
      +                          Info.wNumBytes;
 20454   00B56E  5100               	movf	_ioInfo& (0+255),w,b
 20455   00B570  6E25               	movwf	??_SD_SPI_AsyncReadTasks^0,c
 20456   00B572  5101               	movf	(_ioInfo+1)& (0+255),w,b
 20457   00B574  6E26               	movwf	(??_SD_SPI_AsyncReadTasks+1)^0,c
 20458   00B576  6A27               	clrf	(??_SD_SPI_AsyncReadTasks+2)^0,c
 20459   00B578  6A28               	clrf	(??_SD_SPI_AsyncReadTasks+3)^0,c
 20460   00B57A  5025               	movf	??_SD_SPI_AsyncReadTasks^0,w,c
 20461   00B57C  5F02               	subwf	(_ioInfo+2)& (0+255),f,b
 20462   00B57E  5026               	movf	(??_SD_SPI_AsyncReadTasks+1)^0,w,c
 20463   00B580  5B03               	subwfb	(_ioInfo+3)& (0+255),f,b
 20464   00B582  5027               	movf	(??_SD_SPI_AsyncReadTasks+2)^0,w,c
 20465   00B584  5B04               	subwfb	(_ioInfo+4)& (0+255),f,b
 20466   00B586  5028               	movf	(??_SD_SPI_AsyncReadTasks+3)^0,w,c
 20467   00B588  5B05               	subwfb	(_ioInfo+5)& (0+255),f,b
 20468                           
 20469                           ;mcc_generated_files/sd_spi/sd_spi.c: 938:                 blockCounter -= ioInfo.wNumBy
      +                          tes;
 20470   00B58A  5100               	movf	_ioInfo& (0+255),w,b
 20471   00B58C  5F25               	subwf	SD_SPI_AsyncReadTasks@blockCounter& (0+255),f,b
 20472   00B58E  5101               	movf	(_ioInfo+1)& (0+255),w,b
 20473   00B590  5B26               	subwfb	(SD_SPI_AsyncReadTasks@blockCounter+1)& (0+255),f,b
 20474   00B592                     
 20475                           ; BSR set to: 1
 20476                           ;mcc_generated_files/sd_spi/sd_spi.c: 942:                 (void)memset(ioInfo.pBuffer, 
      +                          0xFF, ioInfo.wNumBytes);
 20477   00B592  C106  F001         	movff	_ioInfo+6,memset@dest
 20478   00B596  C107  F002         	movff	_ioInfo+7,memset@dest+1
 20479   00B59A  0E00               	movlw	0
 20480   00B59C  6E04               	movwf	(memset@c+1)^0,c
 20481   00B59E  6803               	setf	memset@c^0,c
 20482   00B5A0  C100  F005         	movff	_ioInfo,memset@n
 20483   00B5A4  C101  F006         	movff	_ioInfo+1,memset@n+1
 20484   00B5A8  EC0E  F04C         	call	_memset
 20485   00B5AC                     
 20486                           ;mcc_generated_files/sd_spi/sd_spi.c: 943:                 spiMaster[SDFAST].exchangeBlo
      +                          ck(ioInfo.pBuffer, ioInfo.wNumBytes);
 20487   00B5AC  C106  F001         	movff	_ioInfo+6,SPI1_ExchangeBlock@block
 20488   00B5B0  C107  F002         	movff	_ioInfo+7,SPI1_ExchangeBlock@block+1
 20489   00B5B4  C100  F003         	movff	_ioInfo,SPI1_ExchangeBlock@blockSize
 20490   00B5B8  C101  F004         	movff	_ioInfo+1,SPI1_ExchangeBlock@blockSize+1
 20491   00B5BC  0E5D               	movlw	low (_spiMaster+6)
 20492   00B5BE  6EF6               	movwf	tblptrl,c
 20493   00B5C0  0EFF               	movlw	high (_spiMaster+6)
 20494   00B5C2  6EF7               	movwf	tblptrh,c
 20495   00B5C4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20496   00B5C4  6AF8               	clrf	tblptru,c
 20497   00B5C6                     	endif
 20498   00B5C6                     	if	0	;tblptru may be non-zero
 20499   00B5C6                     	endif
 20500   00B5C6  0009               	tblrd		*+
 20501   00B5C8  CFF5 F025          	movff	tablat,??_SD_SPI_AsyncReadTasks
 20502   00B5CC  0009               	tblrd		*+
 20503   00B5CE  CFF5 F026          	movff	tablat,??_SD_SPI_AsyncReadTasks+1
 20504   00B5D2  D802               	call	u8058
 20505   00B5D4  EFF5  F05A         	goto	u8059
 20506   00B5D8                     u8058:
 20507   00B5D8  0005               	push	
 20508   00B5DA  6EFA               	movwf	pclath,c
 20509   00B5DC  5025               	movf	??_SD_SPI_AsyncReadTasks^0,w,c
 20510   00B5DE  6EFD               	movwf	tosl,c
 20511   00B5E0  5026               	movf	(??_SD_SPI_AsyncReadTasks+1)^0,w,c
 20512   00B5E2  6EFE               	movwf	tosh,c
 20513   00B5E4  6AFF               	clrf	tosu,c
 20514   00B5E6  50FA               	movf	pclath,w,c
 20515   00B5E8  0012               	return		;indir
 20516   00B5EA                     u8059:
 20517   00B5EA                     
 20518                           ;mcc_generated_files/sd_spi/sd_spi.c: 948:                 if(blockCounter == 0)
 20519   00B5EA  0101               	movlb	1	; () banked
 20520   00B5EC  5125               	movf	SD_SPI_AsyncReadTasks@blockCounter& (0+255),w,b
 20521   00B5EE  1126               	iorwf	(SD_SPI_AsyncReadTasks@blockCounter+1)& (0+255),w,b
 20522   00B5F0  A4D8               	btfss	status,2,c
 20523   00B5F2  EFFD  F05A         	goto	u8061
 20524   00B5F6  EFFF  F05A         	goto	u8060
 20525   00B5FA                     u8061:
 20526   00B5FA  EF82  F05A         	goto	l6868
 20527   00B5FE                     u8060:
 20528   00B5FE                     
 20529                           ; BSR set to: 1
 20530                           ;mcc_generated_files/sd_spi/sd_spi.c: 949:                 {;mcc_generated_files/sd_spi/
      +                          sd_spi.c: 951:                     (void)spiMaster[SDFAST].exchangeByte(0xFF);
 20531   00B5FE  0E5B               	movlw	low (_spiMaster+4)
 20532   00B600  6EF6               	movwf	tblptrl,c
 20533   00B602  0EFF               	movlw	high (_spiMaster+4)
 20534   00B604  6EF7               	movwf	tblptrh,c
 20535   00B606                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20536   00B606  6AF8               	clrf	tblptru,c
 20537   00B608                     	endif
 20538   00B608                     	if	0	;tblptru may be non-zero
 20539   00B608                     	endif
 20540   00B608  0009               	tblrd		*+
 20541   00B60A  CFF5 F025          	movff	tablat,??_SD_SPI_AsyncReadTasks
 20542   00B60E  0009               	tblrd		*+
 20543   00B610  CFF5 F026          	movff	tablat,??_SD_SPI_AsyncReadTasks+1
 20544   00B614  D802               	call	u8078
 20545   00B616  EF17  F05B         	goto	u8079
 20546   00B61A                     u8078:
 20547   00B61A  0005               	push	
 20548   00B61C  6EFA               	movwf	pclath,c
 20549   00B61E  5025               	movf	??_SD_SPI_AsyncReadTasks^0,w,c
 20550   00B620  6EFD               	movwf	tosl,c
 20551   00B622  5026               	movf	(??_SD_SPI_AsyncReadTasks+1)^0,w,c
 20552   00B624  6EFE               	movwf	tosh,c
 20553   00B626  6AFF               	clrf	tosu,c
 20554   00B628  50FA               	movf	pclath,w,c
 20555   00B62A  0EFF               	movlw	255
 20556   00B62C  0012               	return		;indir
 20557   00B62E                     u8079:
 20558                           
 20559                           ;mcc_generated_files/sd_spi/sd_spi.c: 952:                     (void)spiMaster[SDFAST].e
      +                          xchangeByte(0xFF);
 20560   00B62E  0E5B               	movlw	low (_spiMaster+4)
 20561   00B630  6EF6               	movwf	tblptrl,c
 20562   00B632  0EFF               	movlw	high (_spiMaster+4)
 20563   00B634  6EF7               	movwf	tblptrh,c
 20564   00B636                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20565   00B636  6AF8               	clrf	tblptru,c
 20566   00B638                     	endif
 20567   00B638                     	if	0	;tblptru may be non-zero
 20568   00B638                     	endif
 20569   00B638  0009               	tblrd		*+
 20570   00B63A  CFF5 F025          	movff	tablat,??_SD_SPI_AsyncReadTasks
 20571   00B63E  0009               	tblrd		*+
 20572   00B640  CFF5 F026          	movff	tablat,??_SD_SPI_AsyncReadTasks+1
 20573   00B644  D802               	call	u8088
 20574   00B646  EF2F  F05B         	goto	u8089
 20575   00B64A                     u8088:
 20576   00B64A  0005               	push	
 20577   00B64C  6EFA               	movwf	pclath,c
 20578   00B64E  5025               	movf	??_SD_SPI_AsyncReadTasks^0,w,c
 20579   00B650  6EFD               	movwf	tosl,c
 20580   00B652  5026               	movf	(??_SD_SPI_AsyncReadTasks+1)^0,w,c
 20581   00B654  6EFE               	movwf	tosh,c
 20582   00B656  6AFF               	clrf	tosu,c
 20583   00B658  50FA               	movf	pclath,w,c
 20584   00B65A  0EFF               	movlw	255
 20585   00B65C  0012               	return		;indir
 20586   00B65E                     u8089:
 20587   00B65E                     
 20588                           ;mcc_generated_files/sd_spi/sd_spi.c: 958:                     if(ioInfo.dwBytesRemainin
      +                          g != 0x00000000)
 20589   00B65E  0101               	movlb	1	; () banked
 20590   00B660  5102               	movf	(_ioInfo+2)& (0+255),w,b
 20591   00B662  1103               	iorwf	(_ioInfo+3)& (0+255),w,b
 20592   00B664  1104               	iorwf	(_ioInfo+4)& (0+255),w,b
 20593   00B666  1105               	iorwf	(_ioInfo+5)& (0+255),w,b
 20594   00B668  B4D8               	btfsc	status,2,c
 20595   00B66A  EF39  F05B         	goto	u8091
 20596   00B66E  EF3B  F05B         	goto	u8090
 20597   00B672                     u8091:
 20598   00B672  EF43  F05B         	goto	l6908
 20599   00B676                     u8090:
 20600   00B676                     
 20601                           ; BSR set to: 1
 20602                           ;mcc_generated_files/sd_spi/sd_spi.c: 959:                     {;mcc_generated_files/sd_
      +                          spi/sd_spi.c: 960:                         info->bStateVariable = 0x03;
 20603   00B676  EE20 F00C          	lfsr	2,12
 20604   00B67A  5023               	movf	SD_SPI_AsyncReadTasks@info^0,w,c
 20605   00B67C  26D9               	addwf	fsr2l,f,c
 20606   00B67E  5024               	movf	(SD_SPI_AsyncReadTasks@info+1)^0,w,c
 20607   00B680  22DA               	addwfc	fsr2h,f,c
 20608   00B682  0E03               	movlw	3
 20609   00B684  6EDF               	movwf	indf2,c
 20610   00B686                     l6908:
 20611                           
 20612                           ; BSR set to: 1
 20613                           ;mcc_generated_files/sd_spi/sd_spi.c: 962:                     blockCounter = 512u;
 20614   00B686  0E02               	movlw	2
 20615   00B688  6F26               	movwf	(SD_SPI_AsyncReadTasks@blockCounter+1)& (0+255),b
 20616   00B68A  0E00               	movlw	0
 20617   00B68C  6F25               	movwf	SD_SPI_AsyncReadTasks@blockCounter& (0+255),b
 20618   00B68E  EF29  F05A         	goto	l6844
 20619   00B692                     l6920:
 20620                           
 20621                           ; BSR set to: 1
 20622                           ;mcc_generated_files/sd_spi/sd_spi.c: 969:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 974:                 if(SingleBlockRead == 0)
 20623   00B692  512D               	movf	SD_SPI_AsyncReadTasks@SingleBlockRead& (0+255),w,b
 20624   00B694  A4D8               	btfss	status,2,c
 20625   00B696  EF4F  F05B         	goto	u8101
 20626   00B69A  EF51  F05B         	goto	u8100
 20627   00B69E                     u8101:
 20628   00B69E  EF5C  F05B         	goto	l6924
 20629   00B6A2                     u8100:
 20630   00B6A2                     
 20631                           ; BSR set to: 1
 20632                           ;mcc_generated_files/sd_spi/sd_spi.c: 975:                 {;mcc_generated_files/sd_spi/
      +                          sd_spi.c: 976:                     (void)SD_SendCmd(SD_STOP_TRANSMISSION, 0x00000000);
 20633   00B6A2  0E00               	movlw	0
 20634   00B6A4  6E0C               	movwf	SD_SendCmd@address^0,c
 20635   00B6A6  0E00               	movlw	0
 20636   00B6A8  6E0D               	movwf	(SD_SendCmd@address+1)^0,c
 20637   00B6AA  0E00               	movlw	0
 20638   00B6AC  6E0E               	movwf	(SD_SendCmd@address+2)^0,c
 20639   00B6AE  0E00               	movlw	0
 20640   00B6B0  6E0F               	movwf	(SD_SendCmd@address+3)^0,c
 20641   00B6B2  0E05               	movlw	5
 20642   00B6B4  EC0A  F05E         	call	_SD_SendCmd
 20643   00B6B8                     l6924:
 20644   00B6B8  848B               	bsf	139,2,c	;volatile
 20645   00B6BA                     
 20646                           ;mcc_generated_files/sd_spi/sd_spi.c: 979:                 (void)spiMaster[SDFAST].excha
      +                          ngeByte(0xFF);
 20647   00B6BA  0E5B               	movlw	low (_spiMaster+4)
 20648   00B6BC  6EF6               	movwf	tblptrl,c
 20649   00B6BE  0EFF               	movlw	high (_spiMaster+4)
 20650   00B6C0  6EF7               	movwf	tblptrh,c
 20651   00B6C2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20652   00B6C2  6AF8               	clrf	tblptru,c
 20653   00B6C4                     	endif
 20654   00B6C4                     	if	0	;tblptru may be non-zero
 20655   00B6C4                     	endif
 20656   00B6C4  0009               	tblrd		*+
 20657   00B6C6  CFF5 F025          	movff	tablat,??_SD_SPI_AsyncReadTasks
 20658   00B6CA  0009               	tblrd		*+
 20659   00B6CC  CFF5 F026          	movff	tablat,??_SD_SPI_AsyncReadTasks+1
 20660   00B6D0  D802               	call	u8118
 20661   00B6D2  EF75  F05B         	goto	u8119
 20662   00B6D6                     u8118:
 20663   00B6D6  0005               	push	
 20664   00B6D8  6EFA               	movwf	pclath,c
 20665   00B6DA  5025               	movf	??_SD_SPI_AsyncReadTasks^0,w,c
 20666   00B6DC  6EFD               	movwf	tosl,c
 20667   00B6DE  5026               	movf	(??_SD_SPI_AsyncReadTasks+1)^0,w,c
 20668   00B6E0  6EFE               	movwf	tosh,c
 20669   00B6E2  6AFF               	clrf	tosu,c
 20670   00B6E4  50FA               	movf	pclath,w,c
 20671   00B6E6  0EFF               	movlw	255
 20672   00B6E8  0012               	return		;indir
 20673   00B6EA                     u8119:
 20674   00B6EA                     
 20675                           ;mcc_generated_files/sd_spi/sd_spi.c: 980:                 info->bStateVariable = 0x00;
 20676   00B6EA  EE20 F00C          	lfsr	2,12
 20677   00B6EE  5023               	movf	SD_SPI_AsyncReadTasks@info^0,w,c
 20678   00B6F0  26D9               	addwf	fsr2l,f,c
 20679   00B6F2  5024               	movf	(SD_SPI_AsyncReadTasks@info+1)^0,w,c
 20680   00B6F4  22DA               	addwfc	fsr2h,f,c
 20681   00B6F6  0E00               	movlw	0
 20682   00B6F8  6EDF               	movwf	indf2,c
 20683   00B6FA                     
 20684                           ;mcc_generated_files/sd_spi/sd_spi.c: 981:                 mediaInformation.state = SD_S
      +                          TATE_READY_FOR_COMMAND;
 20685   00B6FA  0E01               	movlw	1
 20686   00B6FC  0101               	movlb	1	; () banked
 20687   00B6FE  6FDA               	movwf	(_mediaInformation+3)& (0+255),b
 20688   00B700  EFBC  F059         	goto	l6820
 20689   00B704                     l6936:
 20690                           
 20691                           ;mcc_generated_files/sd_spi/sd_spi.c: 986:             info->bStateVariable = 0xFF;
 20692   00B704  EE20 F00C          	lfsr	2,12
 20693   00B708  5023               	movf	SD_SPI_AsyncReadTasks@info^0,w,c
 20694   00B70A  26D9               	addwf	fsr2l,f,c
 20695   00B70C  5024               	movf	(SD_SPI_AsyncReadTasks@info+1)^0,w,c
 20696   00B70E  22DA               	addwfc	fsr2h,f,c
 20697   00B710  0EFF               	movlw	255
 20698   00B712  6EDF               	movwf	indf2,c
 20699   00B714  0E00               	movlw	0
 20700   00B716  6E0C               	movwf	SD_SendCmd@address^0,c
 20701   00B718  0E00               	movlw	0
 20702   00B71A  6E0D               	movwf	(SD_SendCmd@address+1)^0,c
 20703   00B71C  0E00               	movlw	0
 20704   00B71E  6E0E               	movwf	(SD_SendCmd@address+2)^0,c
 20705   00B720  0E00               	movlw	0
 20706   00B722  6E0F               	movwf	(SD_SendCmd@address+3)^0,c
 20707   00B724  0E05               	movlw	5
 20708   00B726  EC0A  F05E         	call	_SD_SendCmd
 20709   00B72A                     l6940:
 20710   00B72A  848B               	bsf	139,2,c	;volatile
 20711   00B72C                     
 20712                           ;mcc_generated_files/sd_spi/sd_spi.c: 994:             (void)spiMaster[SDFAST].exchangeB
      +                          yte(0xFF);
 20713   00B72C  0E5B               	movlw	low (_spiMaster+4)
 20714   00B72E  6EF6               	movwf	tblptrl,c
 20715   00B730  0EFF               	movlw	high (_spiMaster+4)
 20716   00B732  6EF7               	movwf	tblptrh,c
 20717   00B734                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20718   00B734  6AF8               	clrf	tblptru,c
 20719   00B736                     	endif
 20720   00B736                     	if	0	;tblptru may be non-zero
 20721   00B736                     	endif
 20722   00B736  0009               	tblrd		*+
 20723   00B738  CFF5 F025          	movff	tablat,??_SD_SPI_AsyncReadTasks
 20724   00B73C  0009               	tblrd		*+
 20725   00B73E  CFF5 F026          	movff	tablat,??_SD_SPI_AsyncReadTasks+1
 20726   00B742  D802               	call	u8128
 20727   00B744  EFAE  F05B         	goto	u8129
 20728   00B748                     u8128:
 20729   00B748  0005               	push	
 20730   00B74A  6EFA               	movwf	pclath,c
 20731   00B74C  5025               	movf	??_SD_SPI_AsyncReadTasks^0,w,c
 20732   00B74E  6EFD               	movwf	tosl,c
 20733   00B750  5026               	movf	(??_SD_SPI_AsyncReadTasks+1)^0,w,c
 20734   00B752  6EFE               	movwf	tosh,c
 20735   00B754  6AFF               	clrf	tosu,c
 20736   00B756  50FA               	movf	pclath,w,c
 20737   00B758  0EFF               	movlw	255
 20738   00B75A  0012               	return		;indir
 20739   00B75C                     u8129:
 20740   00B75C                     
 20741                           ;mcc_generated_files/sd_spi/sd_spi.c: 995:             mediaInformation.state = SD_STATE
      +                          _READY_FOR_COMMAND;
 20742   00B75C  0E01               	movlw	1
 20743   00B75E  0101               	movlb	1	; () banked
 20744   00B760  6FDA               	movwf	(_mediaInformation+3)& (0+255),b
 20745   00B762                     
 20746                           ; BSR set to: 1
 20747                           ;mcc_generated_files/sd_spi/sd_spi.c: 996:             return 0xFF;
 20748   00B762  0EFF               	movlw	255
 20749   00B764  EFDF  F05B         	goto	l1157
 20750   00B768                     l6952:
 20751   00B768  EE20 F00C          	lfsr	2,12
 20752   00B76C  5023               	movf	SD_SPI_AsyncReadTasks@info^0,w,c
 20753   00B76E  26D9               	addwf	fsr2l,f,c
 20754   00B770  5024               	movf	(SD_SPI_AsyncReadTasks@info+1)^0,w,c
 20755   00B772  22DA               	addwfc	fsr2h,f,c
 20756   00B774  50DF               	movf	indf2,w,c
 20757   00B776  6E25               	movwf	??_SD_SPI_AsyncReadTasks^0,c
 20758   00B778  6A26               	clrf	(??_SD_SPI_AsyncReadTasks+1)^0,c
 20759                           
 20760                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20761                           ; Switch size 1, requested type "simple"
 20762                           ; Number of cases is 1, Range of values is 0 to 0
 20763                           ; switch strategies available:
 20764                           ; Name         Instructions Cycles
 20765                           ; simple_byte            4     3 (average)
 20766                           ;	Chosen strategy is simple_byte
 20767   00B77A  5026               	movf	(??_SD_SPI_AsyncReadTasks+1)^0,w,c
 20768   00B77C  0A00               	xorlw	0	; case 0
 20769   00B77E  B4D8               	btfsc	status,2,c
 20770   00B780  EFC4  F05B         	goto	l10692
 20771   00B784  EF95  F05B         	goto	l6940
 20772   00B788                     l10692:
 20773                           
 20774                           ; Switch size 1, requested type "simple"
 20775                           ; Number of cases is 6, Range of values is 0 to 255
 20776                           ; switch strategies available:
 20777                           ; Name         Instructions Cycles
 20778                           ; simple_byte           19    10 (average)
 20779                           ;	Chosen strategy is simple_byte
 20780   00B788  5025               	movf	??_SD_SPI_AsyncReadTasks^0,w,c
 20781   00B78A  0A00               	xorlw	0	; case 0
 20782   00B78C  B4D8               	btfsc	status,2,c
 20783   00B78E  EFBC  F059         	goto	l6820
 20784   00B792  0A01               	xorlw	1	; case 1
 20785   00B794  B4D8               	btfsc	status,2,c
 20786   00B796  EFBF  F059         	goto	l6824
 20787   00B79A  0A03               	xorlw	3	; case 2
 20788   00B79C  B4D8               	btfsc	status,2,c
 20789   00B79E  EF99  F05A         	goto	l6890
 20790   00B7A2  0A01               	xorlw	1	; case 3
 20791   00B7A4  B4D8               	btfsc	status,2,c
 20792   00B7A6  EF3F  F05A         	goto	l6856
 20793   00B7AA  0AFD               	xorlw	253	; case 254
 20794   00B7AC  B4D8               	btfsc	status,2,c
 20795   00B7AE  EF82  F05B         	goto	l6936
 20796   00B7B2  0A01               	xorlw	1	; case 255
 20797   00B7B4  B4D8               	btfsc	status,2,c
 20798   00B7B6  EF95  F05B         	goto	l6940
 20799   00B7BA  EF95  F05B         	goto	l6940
 20800   00B7BE                     l1157:
 20801   00B7BE  0012               	return		;funcret
 20802   00B7C0                     __end_of_SD_SPI_AsyncReadTasks:
 20803                           	callstack 0
 20804                           
 20805 ;; *************** function _memset *****************
 20806 ;; Defined at:
 20807 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memset.c"
 20808 ;; Parameters:    Size  Location     Type
 20809 ;;  dest            2    0[COMRAM] PTR void 
 20810 ;;		 -> __heap_hi(0), RAM(3895), Fil(546), FatFs(563), 
 20811 ;;		 -> f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), f_gets@s(4), 
 20812 ;;		 -> file(546), drive(563), FatFsDemo_Tasks@data(13), NULL(0), 
 20813 ;;  c               2    2[COMRAM] int 
 20814 ;;  n               2    4[COMRAM] unsigned int 
 20815 ;; Auto vars:     Size  Location     Type
 20816 ;;  s               2   10[COMRAM] PTR unsigned char 
 20817 ;;		 -> __heap_hi(0), RAM(3895), Fil(546), FatFs(563), 
 20818 ;;		 -> f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), f_gets@s(4), 
 20819 ;;		 -> file(546), drive(563), FatFsDemo_Tasks@data(13), NULL(0), 
 20820 ;;  k               2    8[COMRAM] unsigned int 
 20821 ;; Return value:  Size  Location     Type
 20822 ;;                  2    0[COMRAM] PTR void 
 20823 ;; Registers used:
 20824 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20825 ;; Tracked objects:
 20826 ;;		On entry : 0/0
 20827 ;;		On exit  : 0/0
 20828 ;;		Unchanged: 0/0
 20829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20830 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20831 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20832 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20833 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20834 ;;Total ram usage:       12 bytes
 20835 ;; Hardware stack levels used: 1
 20836 ;; This function calls:
 20837 ;;		Nothing
 20838 ;; This function is called by:
 20839 ;;		_SD_SPI_AsyncReadTasks
 20840 ;; This function uses a non-reentrant model
 20841 ;;
 20842                           
 20843                           	psect	text60
 20844   00981C                     __ptext60:
 20845                           	callstack 0
 20846   00981C                     _memset:
 20847                           	callstack 25
 20848   00981C  C001  F00B         	movff	memset@dest,memset@s
 20849   009820  C002  F00C         	movff	memset@dest+1,memset@s+1
 20850   009824  5005               	movf	memset@n^0,w,c
 20851   009826  1006               	iorwf	(memset@n+1)^0,w,c
 20852   009828  A4D8               	btfss	status,2,c
 20853   00982A  EF19  F04C         	goto	u7811
 20854   00982E  EF1B  F04C         	goto	u7810
 20855   009832                     u7811:
 20856   009832  EF1D  F04C         	goto	l6752
 20857   009836                     u7810:
 20858   009836  EFC8  F04C         	goto	l2208
 20859   00983A                     l6752:
 20860   00983A  C00B  FFD9         	movff	memset@s,fsr2l
 20861   00983E  C00C  FFDA         	movff	memset@s+1,fsr2h
 20862   009842  C003  FFDF         	movff	memset@c,indf2
 20863   009846  5005               	movf	memset@n^0,w,c
 20864   009848  240B               	addwf	memset@s^0,w,c
 20865   00984A  6E07               	movwf	??_memset^0,c
 20866   00984C  5006               	movf	(memset@n+1)^0,w,c
 20867   00984E  200C               	addwfc	(memset@s+1)^0,w,c
 20868   009850  6E08               	movwf	(??_memset+1)^0,c
 20869   009852  0EFF               	movlw	255
 20870   009854  2407               	addwf	??_memset^0,w,c
 20871   009856  6ED9               	movwf	fsr2l,c
 20872   009858  0EFF               	movlw	255
 20873   00985A  2008               	addwfc	(??_memset+1)^0,w,c
 20874   00985C  6EDA               	movwf	fsr2h,c
 20875   00985E  C003  FFDF         	movff	memset@c,indf2
 20876   009862  5006               	movf	(memset@n+1)^0,w,c
 20877   009864  E107               	bnz	u7821
 20878   009866  0E03               	movlw	3
 20879   009868  5C05               	subwf	memset@n^0,w,c
 20880   00986A  B0D8               	btfsc	status,0,c
 20881   00986C  EF3A  F04C         	goto	u7821
 20882   009870  EF3C  F04C         	goto	u7820
 20883   009874                     u7821:
 20884   009874  EF3E  F04C         	goto	l6758
 20885   009878                     u7820:
 20886   009878  EFC8  F04C         	goto	l2208
 20887   00987C                     l6758:
 20888   00987C  EE20 F001          	lfsr	2,1
 20889   009880  500B               	movf	memset@s^0,w,c
 20890   009882  26D9               	addwf	fsr2l,f,c
 20891   009884  500C               	movf	(memset@s+1)^0,w,c
 20892   009886  22DA               	addwfc	fsr2h,f,c
 20893   009888  C003  FFDF         	movff	memset@c,indf2
 20894   00988C  EE20 F002          	lfsr	2,2
 20895   009890  500B               	movf	memset@s^0,w,c
 20896   009892  26D9               	addwf	fsr2l,f,c
 20897   009894  500C               	movf	(memset@s+1)^0,w,c
 20898   009896  22DA               	addwfc	fsr2h,f,c
 20899   009898  C003  FFDF         	movff	memset@c,indf2
 20900   00989C  5005               	movf	memset@n^0,w,c
 20901   00989E  240B               	addwf	memset@s^0,w,c
 20902   0098A0  6E07               	movwf	??_memset^0,c
 20903   0098A2  5006               	movf	(memset@n+1)^0,w,c
 20904   0098A4  200C               	addwfc	(memset@s+1)^0,w,c
 20905   0098A6  6E08               	movwf	(??_memset+1)^0,c
 20906   0098A8  0EFE               	movlw	254
 20907   0098AA  2407               	addwf	??_memset^0,w,c
 20908   0098AC  6ED9               	movwf	fsr2l,c
 20909   0098AE  0EFF               	movlw	255
 20910   0098B0  2008               	addwfc	(??_memset+1)^0,w,c
 20911   0098B2  6EDA               	movwf	fsr2h,c
 20912   0098B4  C003  FFDF         	movff	memset@c,indf2
 20913   0098B8  5005               	movf	memset@n^0,w,c
 20914   0098BA  240B               	addwf	memset@s^0,w,c
 20915   0098BC  6E07               	movwf	??_memset^0,c
 20916   0098BE  5006               	movf	(memset@n+1)^0,w,c
 20917   0098C0  200C               	addwfc	(memset@s+1)^0,w,c
 20918   0098C2  6E08               	movwf	(??_memset+1)^0,c
 20919   0098C4  0EFD               	movlw	253
 20920   0098C6  2407               	addwf	??_memset^0,w,c
 20921   0098C8  6ED9               	movwf	fsr2l,c
 20922   0098CA  0EFF               	movlw	255
 20923   0098CC  2008               	addwfc	(??_memset+1)^0,w,c
 20924   0098CE  6EDA               	movwf	fsr2h,c
 20925   0098D0  C003  FFDF         	movff	memset@c,indf2
 20926   0098D4  5006               	movf	(memset@n+1)^0,w,c
 20927   0098D6  E107               	bnz	u7831
 20928   0098D8  0E07               	movlw	7
 20929   0098DA  5C05               	subwf	memset@n^0,w,c
 20930   0098DC  B0D8               	btfsc	status,0,c
 20931   0098DE  EF73  F04C         	goto	u7831
 20932   0098E2  EF75  F04C         	goto	u7830
 20933   0098E6                     u7831:
 20934   0098E6  EF77  F04C         	goto	l6764
 20935   0098EA                     u7830:
 20936   0098EA  EFC8  F04C         	goto	l2208
 20937   0098EE                     l6764:
 20938   0098EE  EE20 F003          	lfsr	2,3
 20939   0098F2  500B               	movf	memset@s^0,w,c
 20940   0098F4  26D9               	addwf	fsr2l,f,c
 20941   0098F6  500C               	movf	(memset@s+1)^0,w,c
 20942   0098F8  22DA               	addwfc	fsr2h,f,c
 20943   0098FA  C003  FFDF         	movff	memset@c,indf2
 20944   0098FE  5005               	movf	memset@n^0,w,c
 20945   009900  240B               	addwf	memset@s^0,w,c
 20946   009902  6E07               	movwf	??_memset^0,c
 20947   009904  5006               	movf	(memset@n+1)^0,w,c
 20948   009906  200C               	addwfc	(memset@s+1)^0,w,c
 20949   009908  6E08               	movwf	(??_memset+1)^0,c
 20950   00990A  0EFC               	movlw	252
 20951   00990C  2407               	addwf	??_memset^0,w,c
 20952   00990E  6ED9               	movwf	fsr2l,c
 20953   009910  0EFF               	movlw	255
 20954   009912  2008               	addwfc	(??_memset+1)^0,w,c
 20955   009914  6EDA               	movwf	fsr2h,c
 20956   009916  C003  FFDF         	movff	memset@c,indf2
 20957   00991A  5006               	movf	(memset@n+1)^0,w,c
 20958   00991C  E107               	bnz	u7841
 20959   00991E  0E09               	movlw	9
 20960   009920  5C05               	subwf	memset@n^0,w,c
 20961   009922  B0D8               	btfsc	status,0,c
 20962   009924  EF96  F04C         	goto	u7841
 20963   009928  EF98  F04C         	goto	u7840
 20964   00992C                     u7841:
 20965   00992C  EF9A  F04C         	goto	l6770
 20966   009930                     u7840:
 20967   009930  EFC8  F04C         	goto	l2208
 20968   009934                     l6770:
 20969   009934  C00B  F007         	movff	memset@s,??_memset
 20970   009938  C00C  F008         	movff	memset@s+1,??_memset+1
 20971   00993C  1E07               	comf	??_memset^0,f,c
 20972   00993E  1E08               	comf	(??_memset+1)^0,f,c
 20973   009940  4A07               	infsnz	??_memset^0,f,c
 20974   009942  2A08               	incf	(??_memset+1)^0,f,c
 20975   009944  0E03               	movlw	3
 20976   009946  1407               	andwf	??_memset^0,w,c
 20977   009948  6E09               	movwf	memset@k^0,c
 20978   00994A  6A0A               	clrf	(memset@k+1)^0,c
 20979   00994C  5009               	movf	memset@k^0,w,c
 20980   00994E  260B               	addwf	memset@s^0,f,c
 20981   009950  500A               	movf	(memset@k+1)^0,w,c
 20982   009952  220C               	addwfc	(memset@s+1)^0,f,c
 20983   009954  5009               	movf	memset@k^0,w,c
 20984   009956  5E05               	subwf	memset@n^0,f,c
 20985   009958  500A               	movf	(memset@k+1)^0,w,c
 20986   00995A  5A06               	subwfb	(memset@n+1)^0,f,c
 20987   00995C  0EFC               	movlw	252
 20988   00995E  1605               	andwf	memset@n^0,f,c
 20989   009960  0EFF               	movlw	255
 20990   009962  1606               	andwf	(memset@n+1)^0,f,c
 20991   009964  EFBF  F04C         	goto	l6778
 20992   009968                     l6772:
 20993   009968  C00B  FFD9         	movff	memset@s,fsr2l
 20994   00996C  C00C  FFDA         	movff	memset@s+1,fsr2h
 20995   009970  C003  FFDF         	movff	memset@c,indf2
 20996   009974  0605               	decf	memset@n^0,f,c
 20997   009976  A0D8               	btfss	status,0,c
 20998   009978  0606               	decf	(memset@n+1)^0,f,c
 20999   00997A  4A0B               	infsnz	memset@s^0,f,c
 21000   00997C  2A0C               	incf	(memset@s+1)^0,f,c
 21001   00997E                     l6778:
 21002   00997E  5005               	movf	memset@n^0,w,c
 21003   009980  1006               	iorwf	(memset@n+1)^0,w,c
 21004   009982  A4D8               	btfss	status,2,c
 21005   009984  EFC6  F04C         	goto	u7851
 21006   009988  EFC8  F04C         	goto	u7850
 21007   00998C                     u7851:
 21008   00998C  EFB4  F04C         	goto	l6772
 21009   009990                     u7850:
 21010   009990                     l2208:
 21011   009990  0012               	return		;funcret
 21012   009992                     __end_of_memset:
 21013                           	callstack 0
 21014                           
 21015 ;; *************** function _SPI1_ExchangeBlock *****************
 21016 ;; Defined at:
 21017 ;;		line 102 in file "mcc_generated_files/spi1.c"
 21018 ;; Parameters:    Size  Location     Type
 21019 ;;  block           2    0[COMRAM] PTR void 
 21020 ;;		 -> __heap_hi(0), RAM(3895), Fil(546), FatFs(563), 
 21021 ;;		 -> f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), f_gets@s(4), 
 21022 ;;		 -> file(546), drive(563), FatFsDemo_Tasks@data(13), NULL(0), 
 21023 ;;  blockSize       2    2[COMRAM] unsigned int 
 21024 ;; Auto vars:     Size  Location     Type
 21025 ;;  data            2    4[COMRAM] PTR unsigned char 
 21026 ;;		 -> __heap_hi(0), RAM(3895), Fil(546), FatFs(563), 
 21027 ;;		 -> f_printf@pb(70), f_puts@pb(70), f_putc@pb(70), f_gets@s(4), 
 21028 ;;		 -> file(546), drive(563), FatFsDemo_Tasks@data(13), NULL(0), 
 21029 ;; Return value:  Size  Location     Type
 21030 ;;                  1    wreg      void 
 21031 ;; Registers used:
 21032 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21033 ;; Tracked objects:
 21034 ;;		On entry : 0/0
 21035 ;;		On exit  : 0/0
 21036 ;;		Unchanged: 0/0
 21037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21038 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21039 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21041 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21042 ;;Total ram usage:        6 bytes
 21043 ;; Hardware stack levels used: 1
 21044 ;; This function calls:
 21045 ;;		Nothing
 21046 ;; This function is called by:
 21047 ;;		_SD_SPI_AsyncWriteTasks
 21048 ;;		_SD_SPI_AsyncReadTasks
 21049 ;; This function uses a non-reentrant model
 21050 ;;
 21051                           
 21052                           	psect	text61
 21053   007F4A                     __ptext61:
 21054                           	callstack 0
 21055   007F4A                     _SPI1_ExchangeBlock:
 21056                           	callstack 25
 21057   007F4A                     
 21058                           ;mcc_generated_files/spi1.c: 102: void SPI1_ExchangeBlock(void *block, size_t blockSize)
      +                          ;mcc_generated_files/spi1.c: 103: {;mcc_generated_files/spi1.c: 104:     uint8_t *data =
      +                           block;
 21059   007F4A  C001  F005         	movff	SPI1_ExchangeBlock@block,SPI1_ExchangeBlock@data
 21060   007F4E  C002  F006         	movff	SPI1_ExchangeBlock@block+1,SPI1_ExchangeBlock@data+1
 21061                           
 21062                           ;mcc_generated_files/spi1.c: 105:     while(blockSize--)
 21063   007F52  EFC1  F03F         	goto	l6542
 21064   007F56                     l6536:
 21065                           
 21066                           ;mcc_generated_files/spi1.c: 106:     {;mcc_generated_files/spi1.c: 107:         SSP1BUF
      +                           = *data;
 21067   007F56  C005  FFD9         	movff	SPI1_ExchangeBlock@data,fsr2l
 21068   007F5A  C006  FFDA         	movff	SPI1_ExchangeBlock@data+1,fsr2h
 21069   007F5E  50DF               	movf	indf2,w,c
 21070   007F60  6EC9               	movwf	201,c	;volatile
 21071   007F62                     l1333:
 21072   007F62  A69E               	btfss	158,3,c	;volatile
 21073   007F64  EFB6  F03F         	goto	u7451
 21074   007F68  EFB8  F03F         	goto	u7450
 21075   007F6C                     u7451:
 21076   007F6C  EFB1  F03F         	goto	l1333
 21077   007F70                     u7450:
 21078   007F70                     
 21079                           ;mcc_generated_files/spi1.c: 109:         PIR1bits.SSP1IF = 0;
 21080   007F70  969E               	bcf	158,3,c	;volatile
 21081   007F72                     
 21082                           ;mcc_generated_files/spi1.c: 110:         *data++ = SSP1BUF;
 21083   007F72  C005  FFD9         	movff	SPI1_ExchangeBlock@data,fsr2l
 21084   007F76  C006  FFDA         	movff	SPI1_ExchangeBlock@data+1,fsr2h
 21085   007F7A  CFC9 FFDF          	movff	4041,indf2	;volatile
 21086   007F7E  4A05               	infsnz	SPI1_ExchangeBlock@data^0,f,c
 21087   007F80  2A06               	incf	(SPI1_ExchangeBlock@data+1)^0,f,c
 21088   007F82                     l6542:
 21089                           
 21090                           ;mcc_generated_files/spi1.c: 105:     while(blockSize--)
 21091   007F82  0603               	decf	SPI1_ExchangeBlock@blockSize^0,f,c
 21092   007F84  A0D8               	btfss	status,0,c
 21093   007F86  0604               	decf	(SPI1_ExchangeBlock@blockSize+1)^0,f,c
 21094   007F88  2803               	incf	SPI1_ExchangeBlock@blockSize^0,w,c
 21095   007F8A  E106               	bnz	u7461
 21096   007F8C  2804               	incf	(SPI1_ExchangeBlock@blockSize+1)^0,w,c
 21097   007F8E  A4D8               	btfss	status,2,c
 21098   007F90  EFCC  F03F         	goto	u7461
 21099   007F94  EFCE  F03F         	goto	u7460
 21100   007F98                     u7461:
 21101   007F98  EFAB  F03F         	goto	l6536
 21102   007F9C                     u7460:
 21103   007F9C  0012               	return		;funcret
 21104   007F9E                     __end_of_SPI1_ExchangeBlock:
 21105                           	callstack 0
 21106                           
 21107 ;; *************** function _SD_SendCmd *****************
 21108 ;; Defined at:
 21109 ;;		line 1247 in file "mcc_generated_files/sd_spi/sd_spi.c"
 21110 ;; Parameters:    Size  Location     Type
 21111 ;;  cmd             1    wreg     unsigned char 
 21112 ;;  address         4   11[COMRAM] unsigned long 
 21113 ;; Auto vars:     Size  Location     Type
 21114 ;;  cmd             1   28[COMRAM] unsigned char 
 21115 ;;  response        5   29[COMRAM] struct .
 21116 ;;  address_byte    4   22[COMRAM] unsigned char [4]
 21117 ;;  longTimeout     4   18[COMRAM] unsigned long 
 21118 ;;  timeout         2   26[COMRAM] unsigned short 
 21119 ;; Return value:  Size  Location     Type
 21120 ;;                  5   11[COMRAM] struct .
 21121 ;; Registers used:
 21122 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 21123 ;; Tracked objects:
 21124 ;;		On entry : 0/0
 21125 ;;		On exit  : 0/0
 21126 ;;		Unchanged: 0/0
 21127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21128 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21129 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21130 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21131 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21132 ;;Total ram usage:       23 bytes
 21133 ;; Hardware stack levels used: 1
 21134 ;; Hardware stack levels required when called: 1
 21135 ;; This function calls:
 21136 ;;		_SPI1_ExchangeByte
 21137 ;;		_memcpy
 21138 ;; This function is called by:
 21139 ;;		_SD_SPI_MediaInitialize
 21140 ;;		_SD_SPI_AsyncReadTasks
 21141 ;;		_SD_SPI_AsyncWriteTasks
 21142 ;; This function uses a non-reentrant model
 21143 ;;
 21144                           
 21145                           	psect	text62
 21146   00BC14                     __ptext62:
 21147                           	callstack 0
 21148   00BC14                     _SD_SendCmd:
 21149                           	callstack 24
 21150                           
 21151                           ;incstack = 0
 21152                           ;SD_SendCmd@cmd stored from wreg
 21153   00BC14  6E1D               	movwf	SD_SendCmd@cmd^0,c
 21154   00BC16  948B               	bcf	139,2,c	;volatile
 21155   00BC18                     
 21156                           ;mcc_generated_files/sd_spi/sd_spi.c: 1256:     (void)memcpy(address_bytes, &address, si
      +                          zeof(address));
 21157   00BC18  0E17               	movlw	low SD_SendCmd@address_bytes
 21158   00BC1A  6E01               	movwf	memcpy@d1^0,c
 21159   00BC1C  0E00               	movlw	high SD_SendCmd@address_bytes
 21160   00BC1E  6E02               	movwf	(memcpy@d1+1)^0,c
 21161   00BC20  0E0C               	movlw	low SD_SendCmd@address
 21162   00BC22  6E03               	movwf	memcpy@s1^0,c
 21163   00BC24  0E00               	movlw	high SD_SendCmd@address
 21164   00BC26  6E04               	movwf	(memcpy@s1+1)^0,c
 21165   00BC28  0E00               	movlw	0
 21166   00BC2A  6E06               	movwf	(memcpy@n+1)^0,c
 21167   00BC2C  0E04               	movlw	4
 21168   00BC2E  6E05               	movwf	memcpy@n^0,c
 21169   00BC30  EC7D  F03F         	call	_memcpy
 21170   00BC34                     
 21171                           ;mcc_generated_files/sd_spi/sd_spi.c: 1258:     (void)spiMaster[SDFAST].exchangeByte(sdm
      +                          mc_cmdtable[cmd].CmdCode | (1<<6));
 21172   00BC34  0E5B               	movlw	low (_spiMaster+4)
 21173   00BC36  6EF6               	movwf	tblptrl,c
 21174   00BC38  0EFF               	movlw	high (_spiMaster+4)
 21175   00BC3A  6EF7               	movwf	tblptrh,c
 21176   00BC3C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21177   00BC3C  6AF8               	clrf	tblptru,c
 21178   00BC3E                     	endif
 21179   00BC3E                     	if	0	;tblptru may be non-zero
 21180   00BC3E                     	endif
 21181   00BC3E  0009               	tblrd		*+
 21182   00BC40  CFF5 F011          	movff	tablat,??_SD_SendCmd
 21183   00BC44  0009               	tblrd		*+
 21184   00BC46  CFF5 F012          	movff	tablat,??_SD_SendCmd+1
 21185   00BC4A  D802               	call	u7208
 21186   00BC4C  EF3F  F05E         	goto	u7209
 21187   00BC50                     u7208:
 21188   00BC50  0005               	push	
 21189   00BC52  6EFA               	movwf	pclath,c
 21190   00BC54  5011               	movf	??_SD_SendCmd^0,w,c
 21191   00BC56  6EFD               	movwf	tosl,c
 21192   00BC58  5012               	movf	(??_SD_SendCmd+1)^0,w,c
 21193   00BC5A  6EFE               	movwf	tosh,c
 21194   00BC5C  6AFF               	clrf	tosu,c
 21195   00BC5E  50FA               	movf	pclath,w,c
 21196   00BC60  501D               	movf	SD_SendCmd@cmd^0,w,c
 21197   00BC62  0D04               	mullw	4
 21198   00BC64  0E07               	movlw	low _sdmmc_cmdtable
 21199   00BC66  24F3               	addwf	243,w,c
 21200   00BC68  6EF6               	movwf	tblptrl,c
 21201   00BC6A  0EFF               	movlw	high _sdmmc_cmdtable
 21202   00BC6C  20F4               	addwfc	244,w,c
 21203   00BC6E  6EF7               	movwf	tblptrh,c
 21204   00BC70                     	if	1	;There are 3 active tblptr bytes
 21205   00BC70  6AF8               	clrf	tblptru,c
 21206   00BC72  0E00               	movlw	low (__mediumconst shr (0+16))
 21207   00BC74  22F8               	addwfc	tblptru,f,c
 21208   00BC76                     	endif
 21209   00BC76  0008               	tblrd		*
 21210   00BC78  50F5               	movf	tablat,w,c
 21211   00BC7A  0940               	iorlw	64
 21212   00BC7C  0012               	return		;indir
 21213   00BC7E                     u7209:
 21214   00BC7E                     
 21215                           ;mcc_generated_files/sd_spi/sd_spi.c: 1260:     (void)spiMaster[SDFAST].exchangeByte(add
      +                          ress_bytes[3]);
 21216   00BC7E  0E5B               	movlw	low (_spiMaster+4)
 21217   00BC80  6EF6               	movwf	tblptrl,c
 21218   00BC82  0EFF               	movlw	high (_spiMaster+4)
 21219   00BC84  6EF7               	movwf	tblptrh,c
 21220   00BC86                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21221   00BC86  6AF8               	clrf	tblptru,c
 21222   00BC88                     	endif
 21223   00BC88                     	if	0	;tblptru may be non-zero
 21224   00BC88                     	endif
 21225   00BC88  0009               	tblrd		*+
 21226   00BC8A  CFF5 F011          	movff	tablat,??_SD_SendCmd
 21227   00BC8E  0009               	tblrd		*+
 21228   00BC90  CFF5 F012          	movff	tablat,??_SD_SendCmd+1
 21229   00BC94  D802               	call	u7218
 21230   00BC96  EF57  F05E         	goto	u7219
 21231   00BC9A                     u7218:
 21232   00BC9A  0005               	push	
 21233   00BC9C  6EFA               	movwf	pclath,c
 21234   00BC9E  5011               	movf	??_SD_SendCmd^0,w,c
 21235   00BCA0  6EFD               	movwf	tosl,c
 21236   00BCA2  5012               	movf	(??_SD_SendCmd+1)^0,w,c
 21237   00BCA4  6EFE               	movwf	tosh,c
 21238   00BCA6  6AFF               	clrf	tosu,c
 21239   00BCA8  50FA               	movf	pclath,w,c
 21240   00BCAA  501A               	movf	(SD_SendCmd@address_bytes+3)^0,w,c
 21241   00BCAC  0012               	return		;indir
 21242   00BCAE                     u7219:
 21243   00BCAE                     
 21244                           ;mcc_generated_files/sd_spi/sd_spi.c: 1261:     (void)spiMaster[SDFAST].exchangeByte(add
      +                          ress_bytes[2]);
 21245   00BCAE  0E5B               	movlw	low (_spiMaster+4)
 21246   00BCB0  6EF6               	movwf	tblptrl,c
 21247   00BCB2  0EFF               	movlw	high (_spiMaster+4)
 21248   00BCB4  6EF7               	movwf	tblptrh,c
 21249   00BCB6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21250   00BCB6  6AF8               	clrf	tblptru,c
 21251   00BCB8                     	endif
 21252   00BCB8                     	if	0	;tblptru may be non-zero
 21253   00BCB8                     	endif
 21254   00BCB8  0009               	tblrd		*+
 21255   00BCBA  CFF5 F011          	movff	tablat,??_SD_SendCmd
 21256   00BCBE  0009               	tblrd		*+
 21257   00BCC0  CFF5 F012          	movff	tablat,??_SD_SendCmd+1
 21258   00BCC4  D802               	call	u7228
 21259   00BCC6  EF6F  F05E         	goto	u7229
 21260   00BCCA                     u7228:
 21261   00BCCA  0005               	push	
 21262   00BCCC  6EFA               	movwf	pclath,c
 21263   00BCCE  5011               	movf	??_SD_SendCmd^0,w,c
 21264   00BCD0  6EFD               	movwf	tosl,c
 21265   00BCD2  5012               	movf	(??_SD_SendCmd+1)^0,w,c
 21266   00BCD4  6EFE               	movwf	tosh,c
 21267   00BCD6  6AFF               	clrf	tosu,c
 21268   00BCD8  50FA               	movf	pclath,w,c
 21269   00BCDA  5019               	movf	(SD_SendCmd@address_bytes+2)^0,w,c
 21270   00BCDC  0012               	return		;indir
 21271   00BCDE                     u7229:
 21272   00BCDE                     
 21273                           ;mcc_generated_files/sd_spi/sd_spi.c: 1262:     (void)spiMaster[SDFAST].exchangeByte(add
      +                          ress_bytes[1]);
 21274   00BCDE  0E5B               	movlw	low (_spiMaster+4)
 21275   00BCE0  6EF6               	movwf	tblptrl,c
 21276   00BCE2  0EFF               	movlw	high (_spiMaster+4)
 21277   00BCE4  6EF7               	movwf	tblptrh,c
 21278   00BCE6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21279   00BCE6  6AF8               	clrf	tblptru,c
 21280   00BCE8                     	endif
 21281   00BCE8                     	if	0	;tblptru may be non-zero
 21282   00BCE8                     	endif
 21283   00BCE8  0009               	tblrd		*+
 21284   00BCEA  CFF5 F011          	movff	tablat,??_SD_SendCmd
 21285   00BCEE  0009               	tblrd		*+
 21286   00BCF0  CFF5 F012          	movff	tablat,??_SD_SendCmd+1
 21287   00BCF4  D802               	call	u7238
 21288   00BCF6  EF87  F05E         	goto	u7239
 21289   00BCFA                     u7238:
 21290   00BCFA  0005               	push	
 21291   00BCFC  6EFA               	movwf	pclath,c
 21292   00BCFE  5011               	movf	??_SD_SendCmd^0,w,c
 21293   00BD00  6EFD               	movwf	tosl,c
 21294   00BD02  5012               	movf	(??_SD_SendCmd+1)^0,w,c
 21295   00BD04  6EFE               	movwf	tosh,c
 21296   00BD06  6AFF               	clrf	tosu,c
 21297   00BD08  50FA               	movf	pclath,w,c
 21298   00BD0A  5018               	movf	(SD_SendCmd@address_bytes+1)^0,w,c
 21299   00BD0C  0012               	return		;indir
 21300   00BD0E                     u7239:
 21301   00BD0E                     
 21302                           ;mcc_generated_files/sd_spi/sd_spi.c: 1263:     (void)spiMaster[SDFAST].exchangeByte(add
      +                          ress_bytes[0]);
 21303   00BD0E  0E5B               	movlw	low (_spiMaster+4)
 21304   00BD10  6EF6               	movwf	tblptrl,c
 21305   00BD12  0EFF               	movlw	high (_spiMaster+4)
 21306   00BD14  6EF7               	movwf	tblptrh,c
 21307   00BD16                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21308   00BD16  6AF8               	clrf	tblptru,c
 21309   00BD18                     	endif
 21310   00BD18                     	if	0	;tblptru may be non-zero
 21311   00BD18                     	endif
 21312   00BD18  0009               	tblrd		*+
 21313   00BD1A  CFF5 F011          	movff	tablat,??_SD_SendCmd
 21314   00BD1E  0009               	tblrd		*+
 21315   00BD20  CFF5 F012          	movff	tablat,??_SD_SendCmd+1
 21316   00BD24  D802               	call	u7248
 21317   00BD26  EF9F  F05E         	goto	u7249
 21318   00BD2A                     u7248:
 21319   00BD2A  0005               	push	
 21320   00BD2C  6EFA               	movwf	pclath,c
 21321   00BD2E  5011               	movf	??_SD_SendCmd^0,w,c
 21322   00BD30  6EFD               	movwf	tosl,c
 21323   00BD32  5012               	movf	(??_SD_SendCmd+1)^0,w,c
 21324   00BD34  6EFE               	movwf	tosh,c
 21325   00BD36  6AFF               	clrf	tosu,c
 21326   00BD38  50FA               	movf	pclath,w,c
 21327   00BD3A  5017               	movf	SD_SendCmd@address_bytes^0,w,c
 21328   00BD3C  0012               	return		;indir
 21329   00BD3E                     u7249:
 21330   00BD3E                     
 21331                           ;mcc_generated_files/sd_spi/sd_spi.c: 1265:     (void)spiMaster[SDFAST].exchangeByte(sdm
      +                          mc_cmdtable[cmd].CRC);
 21332   00BD3E  0E5B               	movlw	low (_spiMaster+4)
 21333   00BD40  6EF6               	movwf	tblptrl,c
 21334   00BD42  0EFF               	movlw	high (_spiMaster+4)
 21335   00BD44  6EF7               	movwf	tblptrh,c
 21336   00BD46                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21337   00BD46  6AF8               	clrf	tblptru,c
 21338   00BD48                     	endif
 21339   00BD48                     	if	0	;tblptru may be non-zero
 21340   00BD48                     	endif
 21341   00BD48  0009               	tblrd		*+
 21342   00BD4A  CFF5 F011          	movff	tablat,??_SD_SendCmd
 21343   00BD4E  0009               	tblrd		*+
 21344   00BD50  CFF5 F012          	movff	tablat,??_SD_SendCmd+1
 21345   00BD54  D802               	call	u7258
 21346   00BD56  EFC7  F05E         	goto	u7259
 21347   00BD5A                     u7258:
 21348   00BD5A  0005               	push	
 21349   00BD5C  6EFA               	movwf	pclath,c
 21350   00BD5E  5011               	movf	??_SD_SendCmd^0,w,c
 21351   00BD60  6EFD               	movwf	tosl,c
 21352   00BD62  5012               	movf	(??_SD_SendCmd+1)^0,w,c
 21353   00BD64  6EFE               	movwf	tosh,c
 21354   00BD66  6AFF               	clrf	tosu,c
 21355   00BD68  50FA               	movf	pclath,w,c
 21356   00BD6A  501D               	movf	SD_SendCmd@cmd^0,w,c
 21357   00BD6C  0D04               	mullw	4
 21358   00BD6E  0E01               	movlw	1
 21359   00BD70  26F3               	addwf	243,f,c
 21360   00BD72  0E00               	movlw	0
 21361   00BD74  22F4               	addwfc	244,f,c
 21362   00BD76  0E07               	movlw	low _sdmmc_cmdtable
 21363   00BD78  24F3               	addwf	243,w,c
 21364   00BD7A  6EF6               	movwf	tblptrl,c
 21365   00BD7C  0EFF               	movlw	high _sdmmc_cmdtable
 21366   00BD7E  20F4               	addwfc	244,w,c
 21367   00BD80  6EF7               	movwf	tblptrh,c
 21368   00BD82                     	if	1	;There are 3 active tblptr bytes
 21369   00BD82  6AF8               	clrf	tblptru,c
 21370   00BD84  0E00               	movlw	low (__mediumconst shr (0+16))
 21371   00BD86  22F8               	addwfc	tblptru,f,c
 21372   00BD88                     	endif
 21373   00BD88  0008               	tblrd		*
 21374   00BD8A  50F5               	movf	tablat,w,c
 21375   00BD8C  0012               	return		;indir
 21376   00BD8E                     u7259:
 21377   00BD8E                     
 21378                           ;mcc_generated_files/sd_spi/sd_spi.c: 1270:     if(cmd == SD_STOP_TRANSMISSION)
 21379   00BD8E  0E05               	movlw	5
 21380   00BD90  181D               	xorwf	SD_SendCmd@cmd^0,w,c
 21381   00BD92  A4D8               	btfss	status,2,c
 21382   00BD94  EFCE  F05E         	goto	u7261
 21383   00BD98  EFD0  F05E         	goto	u7260
 21384   00BD9C                     u7261:
 21385   00BD9C  EFE8  F05E         	goto	l6494
 21386   00BDA0                     u7260:
 21387   00BDA0                     
 21388                           ;mcc_generated_files/sd_spi/sd_spi.c: 1271:     {;mcc_generated_files/sd_spi/sd_spi.c: 1
      +                          272:         (void)spiMaster[SDFAST].exchangeByte(0xFF);
 21389   00BDA0  0E5B               	movlw	low (_spiMaster+4)
 21390   00BDA2  6EF6               	movwf	tblptrl,c
 21391   00BDA4  0EFF               	movlw	high (_spiMaster+4)
 21392   00BDA6  6EF7               	movwf	tblptrh,c
 21393   00BDA8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21394   00BDA8  6AF8               	clrf	tblptru,c
 21395   00BDAA                     	endif
 21396   00BDAA                     	if	0	;tblptru may be non-zero
 21397   00BDAA                     	endif
 21398   00BDAA  0009               	tblrd		*+
 21399   00BDAC  CFF5 F011          	movff	tablat,??_SD_SendCmd
 21400   00BDB0  0009               	tblrd		*+
 21401   00BDB2  CFF5 F012          	movff	tablat,??_SD_SendCmd+1
 21402   00BDB6  D802               	call	u7278
 21403   00BDB8  EFE8  F05E         	goto	u7279
 21404   00BDBC                     u7278:
 21405   00BDBC  0005               	push	
 21406   00BDBE  6EFA               	movwf	pclath,c
 21407   00BDC0  5011               	movf	??_SD_SendCmd^0,w,c
 21408   00BDC2  6EFD               	movwf	tosl,c
 21409   00BDC4  5012               	movf	(??_SD_SendCmd+1)^0,w,c
 21410   00BDC6  6EFE               	movwf	tosh,c
 21411   00BDC8  6AFF               	clrf	tosu,c
 21412   00BDCA  50FA               	movf	pclath,w,c
 21413   00BDCC  0EFF               	movlw	255
 21414   00BDCE  0012               	return		;indir
 21415   00BDD0                     u7279:
 21416   00BDD0                     l6494:
 21417                           
 21418                           ;mcc_generated_files/sd_spi/sd_spi.c: 1278:     timeout = (uint16_t)20;
 21419   00BDD0  0E00               	movlw	0
 21420   00BDD2  6E1C               	movwf	(SD_SendCmd@timeout+1)^0,c
 21421   00BDD4  0E14               	movlw	20
 21422   00BDD6  6E1B               	movwf	SD_SendCmd@timeout^0,c
 21423   00BDD8                     l6496:
 21424                           
 21425                           ;mcc_generated_files/sd_spi/sd_spi.c: 1280:     {;mcc_generated_files/sd_spi/sd_spi.c: 1
      +                          281:         response.r1._byte = spiMaster[SDFAST].exchangeByte(0xFF);
 21426   00BDD8  0E5B               	movlw	low (_spiMaster+4)
 21427   00BDDA  6EF6               	movwf	tblptrl,c
 21428   00BDDC  0EFF               	movlw	high (_spiMaster+4)
 21429   00BDDE  6EF7               	movwf	tblptrh,c
 21430   00BDE0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21431   00BDE0  6AF8               	clrf	tblptru,c
 21432   00BDE2                     	endif
 21433   00BDE2                     	if	0	;tblptru may be non-zero
 21434   00BDE2                     	endif
 21435   00BDE2  0009               	tblrd		*+
 21436   00BDE4  CFF5 F011          	movff	tablat,??_SD_SendCmd
 21437   00BDE8  0009               	tblrd		*+
 21438   00BDEA  CFF5 F012          	movff	tablat,??_SD_SendCmd+1
 21439   00BDEE  D802               	call	u7288
 21440   00BDF0  EF04  F05F         	goto	u7289
 21441   00BDF4                     u7288:
 21442   00BDF4  0005               	push	
 21443   00BDF6  6EFA               	movwf	pclath,c
 21444   00BDF8  5011               	movf	??_SD_SendCmd^0,w,c
 21445   00BDFA  6EFD               	movwf	tosl,c
 21446   00BDFC  5012               	movf	(??_SD_SendCmd+1)^0,w,c
 21447   00BDFE  6EFE               	movwf	tosh,c
 21448   00BE00  6AFF               	clrf	tosu,c
 21449   00BE02  50FA               	movf	pclath,w,c
 21450   00BE04  0EFF               	movlw	255
 21451   00BE06  0012               	return		;indir
 21452   00BE08                     u7289:
 21453   00BE08  6E1E               	movwf	SD_SendCmd@response^0,c
 21454   00BE0A                     
 21455                           ;mcc_generated_files/sd_spi/sd_spi.c: 1282:         timeout--;
 21456   00BE0A  061B               	decf	SD_SendCmd@timeout^0,f,c
 21457   00BE0C  A0D8               	btfss	status,0,c
 21458   00BE0E  061C               	decf	(SD_SendCmd@timeout+1)^0,f,c
 21459   00BE10                     
 21460                           ;mcc_generated_files/sd_spi/sd_spi.c: 1283:     }while((response.r1._byte == SD_TOKEN_FL
      +                          OATING_BUS) && (timeout != 0));
 21461   00BE10  281E               	incf	SD_SendCmd@response^0,w,c
 21462   00BE12  A4D8               	btfss	status,2,c
 21463   00BE14  EF0E  F05F         	goto	u7291
 21464   00BE18  EF10  F05F         	goto	u7290
 21465   00BE1C                     u7291:
 21466   00BE1C  EF19  F05F         	goto	l6504
 21467   00BE20                     u7290:
 21468   00BE20  501B               	movf	SD_SendCmd@timeout^0,w,c
 21469   00BE22  101C               	iorwf	(SD_SendCmd@timeout+1)^0,w,c
 21470   00BE24  A4D8               	btfss	status,2,c
 21471   00BE26  EF17  F05F         	goto	u7301
 21472   00BE2A  EF19  F05F         	goto	u7300
 21473   00BE2E                     u7301:
 21474   00BE2E  EFEC  F05E         	goto	l6496
 21475   00BE32                     u7300:
 21476   00BE32                     l6504:
 21477                           
 21478                           ;mcc_generated_files/sd_spi/sd_spi.c: 1286:     if(sdmmc_cmdtable[cmd].responsetype == S
      +                          D_RESPONSE_R2)
 21479   00BE32  501D               	movf	SD_SendCmd@cmd^0,w,c
 21480   00BE34  0D04               	mullw	4
 21481   00BE36  0E02               	movlw	2
 21482   00BE38  26F3               	addwf	243,f,c
 21483   00BE3A  0E00               	movlw	0
 21484   00BE3C  22F4               	addwfc	244,f,c
 21485   00BE3E  0E07               	movlw	low _sdmmc_cmdtable
 21486   00BE40  24F3               	addwf	243,w,c
 21487   00BE42  6EF6               	movwf	tblptrl,c
 21488   00BE44  0EFF               	movlw	high _sdmmc_cmdtable
 21489   00BE46  20F4               	addwfc	244,w,c
 21490   00BE48  6EF7               	movwf	tblptrh,c
 21491   00BE4A                     	if	1	;There are 3 active tblptr bytes
 21492   00BE4A  6AF8               	clrf	tblptru,c
 21493   00BE4C  0E00               	movlw	low (__mediumconst shr (0+16))
 21494   00BE4E  22F8               	addwfc	tblptru,f,c
 21495   00BE50                     	endif
 21496   00BE50  0008               	tblrd		*
 21497   00BE52  50F5               	movf	tablat,w,c
 21498   00BE54  0A02               	xorlw	2
 21499   00BE56  A4D8               	btfss	status,2,c
 21500   00BE58  EF30  F05F         	goto	u7311
 21501   00BE5C  EF32  F05F         	goto	u7310
 21502   00BE60                     u7311:
 21503   00BE60  EF4F  F05F         	goto	l6510
 21504   00BE64                     u7310:
 21505   00BE64                     
 21506                           ;mcc_generated_files/sd_spi/sd_spi.c: 1287:     {;mcc_generated_files/sd_spi/sd_spi.c: 1
      +                          288:         response.r2._byte1 = response.r1._byte;
 21507   00BE64  C01E  F01F         	movff	SD_SendCmd@response,SD_SendCmd@response+1
 21508   00BE68                     
 21509                           ;mcc_generated_files/sd_spi/sd_spi.c: 1289:         response.r2._byte0 = spiMaster[SDFAS
      +                          T].exchangeByte(0xFF);
 21510   00BE68  0E5B               	movlw	low (_spiMaster+4)
 21511   00BE6A  6EF6               	movwf	tblptrl,c
 21512   00BE6C  0EFF               	movlw	high (_spiMaster+4)
 21513   00BE6E  6EF7               	movwf	tblptrh,c
 21514   00BE70                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21515   00BE70  6AF8               	clrf	tblptru,c
 21516   00BE72                     	endif
 21517   00BE72                     	if	0	;tblptru may be non-zero
 21518   00BE72                     	endif
 21519   00BE72  0009               	tblrd		*+
 21520   00BE74  CFF5 F011          	movff	tablat,??_SD_SendCmd
 21521   00BE78  0009               	tblrd		*+
 21522   00BE7A  CFF5 F012          	movff	tablat,??_SD_SendCmd+1
 21523   00BE7E  D802               	call	u7328
 21524   00BE80  EF4C  F05F         	goto	u7329
 21525   00BE84                     u7328:
 21526   00BE84  0005               	push	
 21527   00BE86  6EFA               	movwf	pclath,c
 21528   00BE88  5011               	movf	??_SD_SendCmd^0,w,c
 21529   00BE8A  6EFD               	movwf	tosl,c
 21530   00BE8C  5012               	movf	(??_SD_SendCmd+1)^0,w,c
 21531   00BE8E  6EFE               	movwf	tosh,c
 21532   00BE90  6AFF               	clrf	tosu,c
 21533   00BE92  50FA               	movf	pclath,w,c
 21534   00BE94  0EFF               	movlw	255
 21535   00BE96  0012               	return		;indir
 21536   00BE98                     u7329:
 21537   00BE98  6E1E               	movwf	SD_SendCmd@response^0,c
 21538                           
 21539                           ;mcc_generated_files/sd_spi/sd_spi.c: 1290:     }
 21540   00BE9A  EF22  F060         	goto	l1241
 21541   00BE9E                     l6510:
 21542   00BE9E  501D               	movf	SD_SendCmd@cmd^0,w,c
 21543   00BEA0  0D04               	mullw	4
 21544   00BEA2  0E02               	movlw	2
 21545   00BEA4  26F3               	addwf	243,f,c
 21546   00BEA6  0E00               	movlw	0
 21547   00BEA8  22F4               	addwfc	244,f,c
 21548   00BEAA  0E07               	movlw	low _sdmmc_cmdtable
 21549   00BEAC  24F3               	addwf	243,w,c
 21550   00BEAE  6EF6               	movwf	tblptrl,c
 21551   00BEB0  0EFF               	movlw	high _sdmmc_cmdtable
 21552   00BEB2  20F4               	addwfc	244,w,c
 21553   00BEB4  6EF7               	movwf	tblptrh,c
 21554   00BEB6                     	if	1	;There are 3 active tblptr bytes
 21555   00BEB6  6AF8               	clrf	tblptru,c
 21556   00BEB8  0E00               	movlw	low (__mediumconst shr (0+16))
 21557   00BEBA  22F8               	addwfc	tblptru,f,c
 21558   00BEBC                     	endif
 21559   00BEBC  0008               	tblrd		*
 21560   00BEBE  50F5               	movf	tablat,w,c
 21561   00BEC0  06E8               	decf	wreg,f,c
 21562   00BEC2  A4D8               	btfss	status,2,c
 21563   00BEC4  EF66  F05F         	goto	u7331
 21564   00BEC8  EF68  F05F         	goto	u7330
 21565   00BECC                     u7331:
 21566   00BECC  EFA5  F05F         	goto	l6524
 21567   00BED0                     u7330:
 21568   00BED0                     
 21569                           ;mcc_generated_files/sd_spi/sd_spi.c: 1292:     {;mcc_generated_files/sd_spi/sd_spi.c: 1
      +                          300:         longTimeout = (uint32_t)0xA0000;
 21570   00BED0  0E00               	movlw	0
 21571   00BED2  6E13               	movwf	SD_SendCmd@longTimeout^0,c
 21572   00BED4  0E00               	movlw	0
 21573   00BED6  6E14               	movwf	(SD_SendCmd@longTimeout+1)^0,c
 21574   00BED8  0E0A               	movlw	10
 21575   00BEDA  6E15               	movwf	(SD_SendCmd@longTimeout+2)^0,c
 21576   00BEDC  0E00               	movlw	0
 21577   00BEDE  6E16               	movwf	(SD_SendCmd@longTimeout+3)^0,c
 21578   00BEE0                     l6514:
 21579                           
 21580                           ;mcc_generated_files/sd_spi/sd_spi.c: 1302:         {;mcc_generated_files/sd_spi/sd_spi.
      +                          c: 1303:             response.r1._byte = spiMaster[SDFAST].exchangeByte(0xFF);
 21581   00BEE0  0E5B               	movlw	low (_spiMaster+4)
 21582   00BEE2  6EF6               	movwf	tblptrl,c
 21583   00BEE4  0EFF               	movlw	high (_spiMaster+4)
 21584   00BEE6  6EF7               	movwf	tblptrh,c
 21585   00BEE8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21586   00BEE8  6AF8               	clrf	tblptru,c
 21587   00BEEA                     	endif
 21588   00BEEA                     	if	0	;tblptru may be non-zero
 21589   00BEEA                     	endif
 21590   00BEEA  0009               	tblrd		*+
 21591   00BEEC  CFF5 F011          	movff	tablat,??_SD_SendCmd
 21592   00BEF0  0009               	tblrd		*+
 21593   00BEF2  CFF5 F012          	movff	tablat,??_SD_SendCmd+1
 21594   00BEF6  D802               	call	u7348
 21595   00BEF8  EF88  F05F         	goto	u7349
 21596   00BEFC                     u7348:
 21597   00BEFC  0005               	push	
 21598   00BEFE  6EFA               	movwf	pclath,c
 21599   00BF00  5011               	movf	??_SD_SendCmd^0,w,c
 21600   00BF02  6EFD               	movwf	tosl,c
 21601   00BF04  5012               	movf	(??_SD_SendCmd+1)^0,w,c
 21602   00BF06  6EFE               	movwf	tosh,c
 21603   00BF08  6AFF               	clrf	tosu,c
 21604   00BF0A  50FA               	movf	pclath,w,c
 21605   00BF0C  0EFF               	movlw	255
 21606   00BF0E  0012               	return		;indir
 21607   00BF10                     u7349:
 21608   00BF10  6E1E               	movwf	SD_SendCmd@response^0,c
 21609   00BF12                     
 21610                           ;mcc_generated_files/sd_spi/sd_spi.c: 1304:             longTimeout--;
 21611   00BF12  0613               	decf	SD_SendCmd@longTimeout^0,f,c
 21612   00BF14  0E00               	movlw	0
 21613   00BF16  5A14               	subwfb	(SD_SendCmd@longTimeout+1)^0,f,c
 21614   00BF18  5A15               	subwfb	(SD_SendCmd@longTimeout+2)^0,f,c
 21615   00BF1A  5A16               	subwfb	(SD_SendCmd@longTimeout+3)^0,f,c
 21616   00BF1C                     
 21617                           ;mcc_generated_files/sd_spi/sd_spi.c: 1305:         }while((response.r1._byte == 0x00) &
      +                          & (longTimeout != 0));
 21618   00BF1C  501E               	movf	SD_SendCmd@response^0,w,c
 21619   00BF1E  A4D8               	btfss	status,2,c
 21620   00BF20  EF94  F05F         	goto	u7351
 21621   00BF24  EF96  F05F         	goto	u7350
 21622   00BF28                     u7351:
 21623   00BF28  EFA1  F05F         	goto	l6522
 21624   00BF2C                     u7350:
 21625   00BF2C  5013               	movf	SD_SendCmd@longTimeout^0,w,c
 21626   00BF2E  1014               	iorwf	(SD_SendCmd@longTimeout+1)^0,w,c
 21627   00BF30  1015               	iorwf	(SD_SendCmd@longTimeout+2)^0,w,c
 21628   00BF32  1016               	iorwf	(SD_SendCmd@longTimeout+3)^0,w,c
 21629   00BF34  A4D8               	btfss	status,2,c
 21630   00BF36  EF9F  F05F         	goto	u7361
 21631   00BF3A  EFA1  F05F         	goto	u7360
 21632   00BF3E                     u7361:
 21633   00BF3E  EF70  F05F         	goto	l6514
 21634   00BF42                     u7360:
 21635   00BF42                     l6522:
 21636                           
 21637                           ;mcc_generated_files/sd_spi/sd_spi.c: 1307:         response.r1._byte = 0x00;
 21638   00BF42  0E00               	movlw	0
 21639   00BF44  6E1E               	movwf	SD_SendCmd@response^0,c
 21640                           
 21641                           ;mcc_generated_files/sd_spi/sd_spi.c: 1308:     }
 21642   00BF46  EF22  F060         	goto	l1241
 21643   00BF4A                     l6524:
 21644   00BF4A  501D               	movf	SD_SendCmd@cmd^0,w,c
 21645   00BF4C  0D04               	mullw	4
 21646   00BF4E  0E02               	movlw	2
 21647   00BF50  26F3               	addwf	243,f,c
 21648   00BF52  0E00               	movlw	0
 21649   00BF54  22F4               	addwfc	244,f,c
 21650   00BF56  0E07               	movlw	low _sdmmc_cmdtable
 21651   00BF58  24F3               	addwf	243,w,c
 21652   00BF5A  6EF6               	movwf	tblptrl,c
 21653   00BF5C  0EFF               	movlw	high _sdmmc_cmdtable
 21654   00BF5E  20F4               	addwfc	244,w,c
 21655   00BF60  6EF7               	movwf	tblptrh,c
 21656   00BF62                     	if	1	;There are 3 active tblptr bytes
 21657   00BF62  6AF8               	clrf	tblptru,c
 21658   00BF64  0E00               	movlw	low (__mediumconst shr (0+16))
 21659   00BF66  22F8               	addwfc	tblptru,f,c
 21660   00BF68                     	endif
 21661   00BF68  0008               	tblrd		*
 21662   00BF6A  50F5               	movf	tablat,w,c
 21663   00BF6C  0A04               	xorlw	4
 21664   00BF6E  A4D8               	btfss	status,2,c
 21665   00BF70  EFBC  F05F         	goto	u7371
 21666   00BF74  EFBE  F05F         	goto	u7370
 21667   00BF78                     u7371:
 21668   00BF78  EF22  F060         	goto	l1241
 21669   00BF7C                     u7370:
 21670   00BF7C                     
 21671                           ;mcc_generated_files/sd_spi/sd_spi.c: 1310:     {;mcc_generated_files/sd_spi/sd_spi.c: 1
      +                          316:         response.r7.bytewise.argument._byte3 = spiMaster[SDFAST].exchangeByte(0xFF)
      +                          ;
 21672   00BF7C  0E5B               	movlw	low (_spiMaster+4)
 21673   00BF7E  6EF6               	movwf	tblptrl,c
 21674   00BF80  0EFF               	movlw	high (_spiMaster+4)
 21675   00BF82  6EF7               	movwf	tblptrh,c
 21676   00BF84                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21677   00BF84  6AF8               	clrf	tblptru,c
 21678   00BF86                     	endif
 21679   00BF86                     	if	0	;tblptru may be non-zero
 21680   00BF86                     	endif
 21681   00BF86  0009               	tblrd		*+
 21682   00BF88  CFF5 F011          	movff	tablat,??_SD_SendCmd
 21683   00BF8C  0009               	tblrd		*+
 21684   00BF8E  CFF5 F012          	movff	tablat,??_SD_SendCmd+1
 21685   00BF92  D802               	call	u7388
 21686   00BF94  EFD6  F05F         	goto	u7389
 21687   00BF98                     u7388:
 21688   00BF98  0005               	push	
 21689   00BF9A  6EFA               	movwf	pclath,c
 21690   00BF9C  5011               	movf	??_SD_SendCmd^0,w,c
 21691   00BF9E  6EFD               	movwf	tosl,c
 21692   00BFA0  5012               	movf	(??_SD_SendCmd+1)^0,w,c
 21693   00BFA2  6EFE               	movwf	tosh,c
 21694   00BFA4  6AFF               	clrf	tosu,c
 21695   00BFA6  50FA               	movf	pclath,w,c
 21696   00BFA8  0EFF               	movlw	255
 21697   00BFAA  0012               	return		;indir
 21698   00BFAC                     u7389:
 21699   00BFAC  6E22               	movwf	(SD_SendCmd@response+4)^0,c
 21700                           
 21701                           ;mcc_generated_files/sd_spi/sd_spi.c: 1317:         response.r7.bytewise.argument._byte2
      +                           = spiMaster[SDFAST].exchangeByte(0xFF);
 21702   00BFAE  0E5B               	movlw	low (_spiMaster+4)
 21703   00BFB0  6EF6               	movwf	tblptrl,c
 21704   00BFB2  0EFF               	movlw	high (_spiMaster+4)
 21705   00BFB4  6EF7               	movwf	tblptrh,c
 21706   00BFB6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21707   00BFB6  6AF8               	clrf	tblptru,c
 21708   00BFB8                     	endif
 21709   00BFB8                     	if	0	;tblptru may be non-zero
 21710   00BFB8                     	endif
 21711   00BFB8  0009               	tblrd		*+
 21712   00BFBA  CFF5 F011          	movff	tablat,??_SD_SendCmd
 21713   00BFBE  0009               	tblrd		*+
 21714   00BFC0  CFF5 F012          	movff	tablat,??_SD_SendCmd+1
 21715   00BFC4  D802               	call	u7398
 21716   00BFC6  EFEF  F05F         	goto	u7399
 21717   00BFCA                     u7398:
 21718   00BFCA  0005               	push	
 21719   00BFCC  6EFA               	movwf	pclath,c
 21720   00BFCE  5011               	movf	??_SD_SendCmd^0,w,c
 21721   00BFD0  6EFD               	movwf	tosl,c
 21722   00BFD2  5012               	movf	(??_SD_SendCmd+1)^0,w,c
 21723   00BFD4  6EFE               	movwf	tosh,c
 21724   00BFD6  6AFF               	clrf	tosu,c
 21725   00BFD8  50FA               	movf	pclath,w,c
 21726   00BFDA  0EFF               	movlw	255
 21727   00BFDC  0012               	return		;indir
 21728   00BFDE                     u7399:
 21729   00BFDE  6E21               	movwf	(SD_SendCmd@response+3)^0,c
 21730                           
 21731                           ;mcc_generated_files/sd_spi/sd_spi.c: 1318:         response.r7.bytewise.argument._byte1
      +                           = spiMaster[SDFAST].exchangeByte(0xFF);
 21732   00BFE0  0E5B               	movlw	low (_spiMaster+4)
 21733   00BFE2  6EF6               	movwf	tblptrl,c
 21734   00BFE4  0EFF               	movlw	high (_spiMaster+4)
 21735   00BFE6  6EF7               	movwf	tblptrh,c
 21736   00BFE8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21737   00BFE8  6AF8               	clrf	tblptru,c
 21738   00BFEA                     	endif
 21739   00BFEA                     	if	0	;tblptru may be non-zero
 21740   00BFEA                     	endif
 21741   00BFEA  0009               	tblrd		*+
 21742   00BFEC  CFF5 F011          	movff	tablat,??_SD_SendCmd
 21743   00BFF0  0009               	tblrd		*+
 21744   00BFF2  CFF5 F012          	movff	tablat,??_SD_SendCmd+1
 21745   00BFF6  D802               	call	u7408
 21746   00BFF8  EF08  F060         	goto	u7409
 21747   00BFFC                     u7408:
 21748   00BFFC  0005               	push	
 21749   00BFFE  6EFA               	movwf	pclath,c
 21750   00C000  5011               	movf	??_SD_SendCmd^0,w,c
 21751   00C002  6EFD               	movwf	tosl,c
 21752   00C004  5012               	movf	(??_SD_SendCmd+1)^0,w,c
 21753   00C006  6EFE               	movwf	tosh,c
 21754   00C008  6AFF               	clrf	tosu,c
 21755   00C00A  50FA               	movf	pclath,w,c
 21756   00C00C  0EFF               	movlw	255
 21757   00C00E  0012               	return		;indir
 21758   00C010                     u7409:
 21759   00C010  6E20               	movwf	(SD_SendCmd@response+2)^0,c
 21760                           
 21761                           ;mcc_generated_files/sd_spi/sd_spi.c: 1319:         response.r7.bytewise.argument._byte0
      +                           = spiMaster[SDFAST].exchangeByte(0xFF);
 21762   00C012  0E5B               	movlw	low (_spiMaster+4)
 21763   00C014  6EF6               	movwf	tblptrl,c
 21764   00C016  0EFF               	movlw	high (_spiMaster+4)
 21765   00C018  6EF7               	movwf	tblptrh,c
 21766   00C01A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21767   00C01A  6AF8               	clrf	tblptru,c
 21768   00C01C                     	endif
 21769   00C01C                     	if	0	;tblptru may be non-zero
 21770   00C01C                     	endif
 21771   00C01C  0009               	tblrd		*+
 21772   00C01E  CFF5 F011          	movff	tablat,??_SD_SendCmd
 21773   00C022  0009               	tblrd		*+
 21774   00C024  CFF5 F012          	movff	tablat,??_SD_SendCmd+1
 21775   00C028  D802               	call	u7418
 21776   00C02A  EF21  F060         	goto	u7419
 21777   00C02E                     u7418:
 21778   00C02E  0005               	push	
 21779   00C030  6EFA               	movwf	pclath,c
 21780   00C032  5011               	movf	??_SD_SendCmd^0,w,c
 21781   00C034  6EFD               	movwf	tosl,c
 21782   00C036  5012               	movf	(??_SD_SendCmd+1)^0,w,c
 21783   00C038  6EFE               	movwf	tosh,c
 21784   00C03A  6AFF               	clrf	tosu,c
 21785   00C03C  50FA               	movf	pclath,w,c
 21786   00C03E  0EFF               	movlw	255
 21787   00C040  0012               	return		;indir
 21788   00C042                     u7419:
 21789   00C042  6E1F               	movwf	(SD_SendCmd@response+1)^0,c
 21790   00C044                     l1241:
 21791                           
 21792                           ;mcc_generated_files/sd_spi/sd_spi.c: 1325:     (void)spiMaster[SDFAST].exchangeByte(0xF
      +                          F);
 21793   00C044  0E5B               	movlw	low (_spiMaster+4)
 21794   00C046  6EF6               	movwf	tblptrl,c
 21795   00C048  0EFF               	movlw	high (_spiMaster+4)
 21796   00C04A  6EF7               	movwf	tblptrh,c
 21797   00C04C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21798   00C04C  6AF8               	clrf	tblptru,c
 21799   00C04E                     	endif
 21800   00C04E                     	if	0	;tblptru may be non-zero
 21801   00C04E                     	endif
 21802   00C04E  0009               	tblrd		*+
 21803   00C050  CFF5 F011          	movff	tablat,??_SD_SendCmd
 21804   00C054  0009               	tblrd		*+
 21805   00C056  CFF5 F012          	movff	tablat,??_SD_SendCmd+1
 21806   00C05A  D802               	call	u7428
 21807   00C05C  EF3A  F060         	goto	u7429
 21808   00C060                     u7428:
 21809   00C060  0005               	push	
 21810   00C062  6EFA               	movwf	pclath,c
 21811   00C064  5011               	movf	??_SD_SendCmd^0,w,c
 21812   00C066  6EFD               	movwf	tosl,c
 21813   00C068  5012               	movf	(??_SD_SendCmd+1)^0,w,c
 21814   00C06A  6EFE               	movwf	tosh,c
 21815   00C06C  6AFF               	clrf	tosu,c
 21816   00C06E  50FA               	movf	pclath,w,c
 21817   00C070  0EFF               	movlw	255
 21818   00C072  0012               	return		;indir
 21819   00C074                     u7429:
 21820   00C074                     
 21821                           ;mcc_generated_files/sd_spi/sd_spi.c: 1328:     if( sdmmc_cmdtable[cmd].moreDataExpected
      +                           == 0 )
 21822   00C074  501D               	movf	SD_SendCmd@cmd^0,w,c
 21823   00C076  0D04               	mullw	4
 21824   00C078  0E03               	movlw	3
 21825   00C07A  26F3               	addwf	243,f,c
 21826   00C07C  0E00               	movlw	0
 21827   00C07E  22F4               	addwfc	244,f,c
 21828   00C080  0E07               	movlw	low _sdmmc_cmdtable
 21829   00C082  24F3               	addwf	243,w,c
 21830   00C084  6EF6               	movwf	tblptrl,c
 21831   00C086  0EFF               	movlw	high _sdmmc_cmdtable
 21832   00C088  20F4               	addwfc	244,w,c
 21833   00C08A  6EF7               	movwf	tblptrh,c
 21834   00C08C                     	if	1	;There are 3 active tblptr bytes
 21835   00C08C  6AF8               	clrf	tblptru,c
 21836   00C08E  0E00               	movlw	low (__mediumconst shr (0+16))
 21837   00C090  22F8               	addwfc	tblptru,f,c
 21838   00C092                     	endif
 21839   00C092  0008               	tblrd		*
 21840   00C094  50F5               	movf	tablat,w,c
 21841   00C096  0900               	iorlw	0
 21842   00C098  A4D8               	btfss	status,2,c
 21843   00C09A  EF51  F060         	goto	u7431
 21844   00C09E  EF53  F060         	goto	u7430
 21845   00C0A2                     u7431:
 21846   00C0A2  EF54  F060         	goto	l6530
 21847   00C0A6                     u7430:
 21848   00C0A6  848B               	bsf	139,2,c	;volatile
 21849   00C0A8                     l6530:
 21850                           
 21851                           ;mcc_generated_files/sd_spi/sd_spi.c: 1333:     return(response);
 21852   00C0A8  EE20  F01E         	lfsr	2,SD_SendCmd@response
 21853   00C0AC  EE00  F00C         	lfsr	0,?_SD_SendCmd
 21854   00C0B0  0E04               	movlw	4
 21855   00C0B2                     u7441:
 21856   00C0B2  CFDB FFEB          	movff	plusw2,plusw0
 21857   00C0B6  06E8               	decf	wreg,f,c
 21858   00C0B8  E2FC               	bc	u7441
 21859   00C0BA  0012               	return		;funcret
 21860   00C0BC                     __end_of_SD_SendCmd:
 21861                           	callstack 0
 21862                           
 21863 ;; *************** function _memcpy *****************
 21864 ;; Defined at:
 21865 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
 21866 ;; Parameters:    Size  Location     Type
 21867 ;;  d1              2    0[COMRAM] PTR void 
 21868 ;;		 -> SD_SendCmd@address_bytes(4), 
 21869 ;;  s1              2    2[COMRAM] PTR const void 
 21870 ;;		 -> SD_SendCmd@address(4), 
 21871 ;;  n               2    4[COMRAM] unsigned int 
 21872 ;; Auto vars:     Size  Location     Type
 21873 ;;  s               2    8[COMRAM] PTR const unsigned char 
 21874 ;;		 -> SD_SendCmd@address(4), 
 21875 ;;  d               2    6[COMRAM] PTR unsigned char 
 21876 ;;		 -> SD_SendCmd@address_bytes(4), 
 21877 ;;  tmp             1   10[COMRAM] unsigned char 
 21878 ;; Return value:  Size  Location     Type
 21879 ;;                  2    0[COMRAM] PTR void 
 21880 ;; Registers used:
 21881 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21882 ;; Tracked objects:
 21883 ;;		On entry : 0/0
 21884 ;;		On exit  : 0/0
 21885 ;;		Unchanged: 0/0
 21886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21887 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21888 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21890 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21891 ;;Total ram usage:       11 bytes
 21892 ;; Hardware stack levels used: 1
 21893 ;; This function calls:
 21894 ;;		Nothing
 21895 ;; This function is called by:
 21896 ;;		_SD_SendCmd
 21897 ;; This function uses a non-reentrant model
 21898 ;;
 21899                           
 21900                           	psect	text63
 21901   007EFA                     __ptext63:
 21902                           	callstack 0
 21903   007EFA                     _memcpy:
 21904                           	callstack 24
 21905   007EFA  C003  F009         	movff	memcpy@s1,memcpy@s
 21906   007EFE  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
 21907   007F02  C001  F007         	movff	memcpy@d1,memcpy@d
 21908   007F06  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
 21909   007F0A  EF97  F03F         	goto	l6452
 21910   007F0E                     l6444:
 21911   007F0E  C009  FFD9         	movff	memcpy@s,fsr2l
 21912   007F12  C00A  FFDA         	movff	memcpy@s+1,fsr2h
 21913   007F16  50DF               	movf	indf2,w,c
 21914   007F18  6E0B               	movwf	memcpy@tmp^0,c
 21915   007F1A  4A09               	infsnz	memcpy@s^0,f,c
 21916   007F1C  2A0A               	incf	(memcpy@s+1)^0,f,c
 21917   007F1E  C007  FFD9         	movff	memcpy@d,fsr2l
 21918   007F22  C008  FFDA         	movff	memcpy@d+1,fsr2h
 21919   007F26  C00B  FFDF         	movff	memcpy@tmp,indf2
 21920   007F2A  4A07               	infsnz	memcpy@d^0,f,c
 21921   007F2C  2A08               	incf	(memcpy@d+1)^0,f,c
 21922   007F2E                     l6452:
 21923   007F2E  0605               	decf	memcpy@n^0,f,c
 21924   007F30  A0D8               	btfss	status,0,c
 21925   007F32  0606               	decf	(memcpy@n+1)^0,f,c
 21926   007F34  2805               	incf	memcpy@n^0,w,c
 21927   007F36  E106               	bnz	u7171
 21928   007F38  2806               	incf	(memcpy@n+1)^0,w,c
 21929   007F3A  A4D8               	btfss	status,2,c
 21930   007F3C  EFA2  F03F         	goto	u7171
 21931   007F40  EFA4  F03F         	goto	u7170
 21932   007F44                     u7171:
 21933   007F44  EF87  F03F         	goto	l6444
 21934   007F48                     u7170:
 21935   007F48  0012               	return		;funcret
 21936   007F4A                     __end_of_memcpy:
 21937                           	callstack 0
 21938                           
 21939 ;; *************** function _SPI1_ExchangeByte *****************
 21940 ;; Defined at:
 21941 ;;		line 94 in file "mcc_generated_files/spi1.c"
 21942 ;; Parameters:    Size  Location     Type
 21943 ;;  data            1    wreg     unsigned char 
 21944 ;; Auto vars:     Size  Location     Type
 21945 ;;  data            1    0[COMRAM] unsigned char 
 21946 ;; Return value:  Size  Location     Type
 21947 ;;                  1    wreg      unsigned char 
 21948 ;; Registers used:
 21949 ;;		wreg, status,2
 21950 ;; Tracked objects:
 21951 ;;		On entry : 0/0
 21952 ;;		On exit  : 0/0
 21953 ;;		Unchanged: 0/0
 21954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21956 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21958 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21959 ;;Total ram usage:        1 bytes
 21960 ;; Hardware stack levels used: 1
 21961 ;; This function calls:
 21962 ;;		Nothing
 21963 ;; This function is called by:
 21964 ;;		_SPI1_WriteBlock
 21965 ;;		_SPI1_ReadBlock
 21966 ;;		_SD_SendCmd
 21967 ;;		_SD_SPI_AsyncWriteTasks
 21968 ;;		_SD_SPI_AsyncReadTasks
 21969 ;;		_SD_SPI_DelayMilliseconds
 21970 ;;		_SD_SPI_MediaInitialize
 21971 ;; This function uses a non-reentrant model
 21972 ;;
 21973                           
 21974                           	psect	text64
 21975   007CD6                     __ptext64:
 21976                           	callstack 0
 21977   007CD6                     _SPI1_ExchangeByte:
 21978                           	callstack 25
 21979                           
 21980                           ;incstack = 0
 21981                           ;SPI1_ExchangeByte@data stored from wreg
 21982   007CD6  6E01               	movwf	SPI1_ExchangeByte@data^0,c
 21983   007CD8                     
 21984                           ;mcc_generated_files/spi1.c: 94: uint8_t SPI1_ExchangeByte(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 95: {;mcc_generated_files/spi1.c: 96:     SSP1BUF = data;
 21985   007CD8  C001  FFC9         	movff	SPI1_ExchangeByte@data,4041	;volatile
 21986   007CDC                     l1325:
 21987   007CDC  A69E               	btfss	158,3,c	;volatile
 21988   007CDE  EF73  F03E         	goto	u7181
 21989   007CE2  EF75  F03E         	goto	u7180
 21990   007CE6                     u7181:
 21991   007CE6  EF6E  F03E         	goto	l1325
 21992   007CEA                     u7180:
 21993   007CEA                     
 21994                           ;mcc_generated_files/spi1.c: 98:     PIR1bits.SSP1IF = 0;
 21995   007CEA  969E               	bcf	158,3,c	;volatile
 21996                           
 21997                           ;mcc_generated_files/spi1.c: 99:     return SSP1BUF;
 21998   007CEC  50C9               	movf	201,w,c	;volatile
 21999   007CEE  0012               	return		;funcret
 22000   007CF0                     __end_of_SPI1_ExchangeByte:
 22001                           	callstack 0
 22002                           
 22003 ;; *************** function _SDFAST_open *****************
 22004 ;; Defined at:
 22005 ;;		line 43 in file "mcc_generated_files/drivers/spi_master.c"
 22006 ;; Parameters:    Size  Location     Type
 22007 ;;		None
 22008 ;; Auto vars:     Size  Location     Type
 22009 ;;		None
 22010 ;; Return value:  Size  Location     Type
 22011 ;;                  1    wreg      _Bool 
 22012 ;; Registers used:
 22013 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22014 ;; Tracked objects:
 22015 ;;		On entry : 0/0
 22016 ;;		On exit  : 0/0
 22017 ;;		Unchanged: 0/0
 22018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22023 ;;Total ram usage:        0 bytes
 22024 ;; Hardware stack levels used: 1
 22025 ;; Hardware stack levels required when called: 1
 22026 ;; This function calls:
 22027 ;;		_SPI1_Open
 22028 ;; This function is called by:
 22029 ;;		_spi_master_open
 22030 ;;		_SD_SPI_SectorWrite
 22031 ;;		_SD_SPI_SectorRead
 22032 ;;		_SD_SPI_MediaInitialize
 22033 ;; This function uses a non-reentrant model
 22034 ;;
 22035                           
 22036                           	psect	text65
 22037   007C28                     __ptext65:
 22038                           	callstack 0
 22039   007C28                     _SDFAST_open:
 22040                           	callstack 25
 22041   007C28                     
 22042                           ;mcc_generated_files/drivers/spi_master.c: 44:     return SPI1_Open(SDFAST_CONFIG);
 22043   007C28  0E00               	movlw	0
 22044   007C2A  EC99  F043         	call	_SPI1_Open
 22045   007C2E  0012               	return		;funcret
 22046   007C30                     __end_of_SDFAST_open:
 22047                           	callstack 0
 22048                           
 22049 ;; *************** function _SDSLOW_open *****************
 22050 ;; Defined at:
 22051 ;;		line 47 in file "mcc_generated_files/drivers/spi_master.c"
 22052 ;; Parameters:    Size  Location     Type
 22053 ;;		None
 22054 ;; Auto vars:     Size  Location     Type
 22055 ;;		None
 22056 ;; Return value:  Size  Location     Type
 22057 ;;                  1    wreg      _Bool 
 22058 ;; Registers used:
 22059 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22060 ;; Tracked objects:
 22061 ;;		On entry : 0/0
 22062 ;;		On exit  : 0/0
 22063 ;;		Unchanged: 0/0
 22064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22069 ;;Total ram usage:        0 bytes
 22070 ;; Hardware stack levels used: 1
 22071 ;; Hardware stack levels required when called: 1
 22072 ;; This function calls:
 22073 ;;		_SPI1_Open
 22074 ;; This function is called by:
 22075 ;;		_spi_master_open
 22076 ;;		_SD_SPI_SectorWrite
 22077 ;;		_SD_SPI_SectorRead
 22078 ;;		_SD_SPI_MediaInitialize
 22079 ;; This function uses a non-reentrant model
 22080 ;;
 22081                           
 22082                           	psect	text66
 22083   007C20                     __ptext66:
 22084                           	callstack 0
 22085   007C20                     _SDSLOW_open:
 22086                           	callstack 25
 22087   007C20                     
 22088                           ;mcc_generated_files/drivers/spi_master.c: 48:     return SPI1_Open(SDSLOW_CONFIG);
 22089   007C20  0E01               	movlw	1
 22090   007C22  EC99  F043         	call	_SPI1_Open
 22091   007C26  0012               	return		;funcret
 22092   007C28                     __end_of_SDSLOW_open:
 22093                           	callstack 0
 22094                           
 22095 ;; *************** function _SPI1_Open *****************
 22096 ;; Defined at:
 22097 ;;		line 74 in file "mcc_generated_files/spi1.c"
 22098 ;; Parameters:    Size  Location     Type
 22099 ;;  spi1UniqueCo    1    wreg     enum E355
 22100 ;; Auto vars:     Size  Location     Type
 22101 ;;  spi1UniqueCo    1    1[COMRAM] enum E355
 22102 ;; Return value:  Size  Location     Type
 22103 ;;                  1    wreg      _Bool 
 22104 ;; Registers used:
 22105 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 22106 ;; Tracked objects:
 22107 ;;		On entry : 0/0
 22108 ;;		On exit  : 0/0
 22109 ;;		Unchanged: 0/0
 22110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22112 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22113 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22114 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22115 ;;Total ram usage:        2 bytes
 22116 ;; Hardware stack levels used: 1
 22117 ;; This function calls:
 22118 ;;		Nothing
 22119 ;; This function is called by:
 22120 ;;		_SDFAST_open
 22121 ;;		_SDSLOW_open
 22122 ;; This function uses a non-reentrant model
 22123 ;;
 22124                           
 22125                           	psect	text67
 22126   008732                     __ptext67:
 22127                           	callstack 0
 22128   008732                     _SPI1_Open:
 22129                           	callstack 25
 22130                           
 22131                           ;incstack = 0
 22132                           ;SPI1_Open@spi1UniqueConfiguration stored from wreg
 22133   008732  6E02               	movwf	SPI1_Open@spi1UniqueConfiguration^0,c
 22134   008734                     
 22135                           ;mcc_generated_files/spi1.c: 74: _Bool SPI1_Open(spi1_modes_t spi1UniqueConfiguration);m
      +                          cc_generated_files/spi1.c: 75: {;mcc_generated_files/spi1.c: 76:     if(!SSP1CON1bits.SS
      +                          PEN)
 22136   008734  BAC6               	btfsc	198,5,c	;volatile
 22137   008736  EF9F  F043         	goto	u7191
 22138   00873A  EFA1  F043         	goto	u7190
 22139   00873E                     u7191:
 22140   00873E  EFF3  F043         	goto	l6472
 22141   008742                     u7190:
 22142   008742                     
 22143                           ;mcc_generated_files/spi1.c: 77:     {;mcc_generated_files/spi1.c: 78:         SSP1STAT 
      +                          = spi1_configuration[spi1UniqueConfiguration].stat;
 22144   008742  5002               	movf	SPI1_Open@spi1UniqueConfiguration^0,w,c
 22145   008744  0D04               	mullw	4
 22146   008746  0E01               	movlw	1
 22147   008748  26F3               	addwf	243,f,c
 22148   00874A  0E00               	movlw	0
 22149   00874C  22F4               	addwfc	244,f,c
 22150   00874E  0E7F               	movlw	low _spi1_configuration
 22151   008750  24F3               	addwf	243,w,c
 22152   008752  6EF6               	movwf	tblptrl,c
 22153   008754  0EFF               	movlw	high _spi1_configuration
 22154   008756  20F4               	addwfc	244,w,c
 22155   008758  6EF7               	movwf	tblptrh,c
 22156   00875A                     	if	1	;There are 3 active tblptr bytes
 22157   00875A  6AF8               	clrf	tblptru,c
 22158   00875C  0E00               	movlw	low (__mediumconst shr (0+16))
 22159   00875E  22F8               	addwfc	tblptru,f,c
 22160   008760                     	endif
 22161   008760  0008               	tblrd		*
 22162   008762  CFF5 FFC7          	movff	tablat,4039	;volatile
 22163                           
 22164                           ;mcc_generated_files/spi1.c: 79:         SSP1CON1 = spi1_configuration[spi1UniqueConfigu
      +                          ration].con1;
 22165   008766  5002               	movf	SPI1_Open@spi1UniqueConfiguration^0,w,c
 22166   008768  0D04               	mullw	4
 22167   00876A  0E7F               	movlw	low _spi1_configuration
 22168   00876C  24F3               	addwf	243,w,c
 22169   00876E  6EF6               	movwf	tblptrl,c
 22170   008770  0EFF               	movlw	high _spi1_configuration
 22171   008772  20F4               	addwfc	244,w,c
 22172   008774  6EF7               	movwf	tblptrh,c
 22173   008776                     	if	1	;There are 3 active tblptr bytes
 22174   008776  6AF8               	clrf	tblptru,c
 22175   008778  0E00               	movlw	low (__mediumconst shr (0+16))
 22176   00877A  22F8               	addwfc	tblptru,f,c
 22177   00877C                     	endif
 22178   00877C  0008               	tblrd		*
 22179   00877E  CFF5 FFC6          	movff	tablat,4038	;volatile
 22180   008782                     
 22181                           ;mcc_generated_files/spi1.c: 80:         SSP1CON2 = 0x00;
 22182   008782  0E00               	movlw	0
 22183   008784  6EC5               	movwf	197,c	;volatile
 22184   008786                     
 22185                           ;mcc_generated_files/spi1.c: 81:         SSP1ADD = spi1_configuration[spi1UniqueConfigur
      +                          ation].add;
 22186   008786  5002               	movf	SPI1_Open@spi1UniqueConfiguration^0,w,c
 22187   008788  0D04               	mullw	4
 22188   00878A  0E02               	movlw	2
 22189   00878C  26F3               	addwf	243,f,c
 22190   00878E  0E00               	movlw	0
 22191   008790  22F4               	addwfc	244,f,c
 22192   008792  0E7F               	movlw	low _spi1_configuration
 22193   008794  24F3               	addwf	243,w,c
 22194   008796  6EF6               	movwf	tblptrl,c
 22195   008798  0EFF               	movlw	high _spi1_configuration
 22196   00879A  20F4               	addwfc	244,w,c
 22197   00879C  6EF7               	movwf	tblptrh,c
 22198   00879E                     	if	1	;There are 3 active tblptr bytes
 22199   00879E  6AF8               	clrf	tblptru,c
 22200   0087A0  0E00               	movlw	low (__mediumconst shr (0+16))
 22201   0087A2  22F8               	addwfc	tblptru,f,c
 22202   0087A4                     	endif
 22203   0087A4  0008               	tblrd		*
 22204   0087A6  CFF5 FFC8          	movff	tablat,4040	;volatile
 22205   0087AA                     
 22206                           ;mcc_generated_files/spi1.c: 82:         TRISCbits.TRISC3 = spi1_configuration[spi1Uniqu
      +                          eConfiguration].operation;
 22207   0087AA  5002               	movf	SPI1_Open@spi1UniqueConfiguration^0,w,c
 22208   0087AC  0D04               	mullw	4
 22209   0087AE  0E03               	movlw	3
 22210   0087B0  26F3               	addwf	243,f,c
 22211   0087B2  0E00               	movlw	0
 22212   0087B4  22F4               	addwfc	244,f,c
 22213   0087B6  0E7F               	movlw	low _spi1_configuration
 22214   0087B8  24F3               	addwf	243,w,c
 22215   0087BA  6EF6               	movwf	tblptrl,c
 22216   0087BC  0EFF               	movlw	high _spi1_configuration
 22217   0087BE  20F4               	addwfc	244,w,c
 22218   0087C0  6EF7               	movwf	tblptrh,c
 22219   0087C2                     	if	1	;There are 3 active tblptr bytes
 22220   0087C2  6AF8               	clrf	tblptru,c
 22221   0087C4  0E00               	movlw	low (__mediumconst shr (0+16))
 22222   0087C6  22F8               	addwfc	tblptru,f,c
 22223   0087C8                     	endif
 22224   0087C8  0008               	tblrd		*
 22225   0087CA  CFF5 F001          	movff	tablat,??_SPI1_Open
 22226   0087CE  4601               	rlncf	??_SPI1_Open^0,f,c
 22227   0087D0  4601               	rlncf	??_SPI1_Open^0,f,c
 22228   0087D2  4601               	rlncf	??_SPI1_Open^0,f,c
 22229   0087D4  5094               	movf	148,w,c	;volatile
 22230   0087D6  1801               	xorwf	??_SPI1_Open^0,w,c
 22231   0087D8  0BF7               	andlw	-9
 22232   0087DA  1801               	xorwf	??_SPI1_Open^0,w,c
 22233   0087DC  6E94               	movwf	148,c	;volatile
 22234   0087DE                     
 22235                           ;mcc_generated_files/spi1.c: 83:         SSP1CON1bits.SSPEN = 1;
 22236   0087DE  8AC6               	bsf	198,5,c	;volatile
 22237   0087E0                     
 22238                           ;mcc_generated_files/spi1.c: 84:         return 1;
 22239   0087E0  0E01               	movlw	1
 22240   0087E2  EFF4  F043         	goto	l1319
 22241   0087E6                     l6472:
 22242                           
 22243                           ;mcc_generated_files/spi1.c: 86:     return 0;
 22244   0087E6  0E00               	movlw	0
 22245   0087E8                     l1319:
 22246   0087E8  0012               	return		;funcret
 22247   0087EA                     __end_of_SPI1_Open:
 22248                           	callstack 0
 22249                           
 22250 ;; *************** function _append *****************
 22251 ;; Defined at:
 22252 ;;		line 169 in file "main.c"
 22253 ;; Parameters:    Size  Location     Type
 22254 ;;  result          2    4[COMRAM] PTR unsigned char 
 22255 ;;		 -> __heap_hi(0), RAM(3895), NULL(0), 
 22256 ;;  dest            2    6[COMRAM] PTR unsigned char 
 22257 ;;		 -> STR_20(6), STR_19(4), STR_18(5), STR_17(11), 
 22258 ;;		 -> temp_data(20), vel_data(20), hum_data(20), alt_data(20), 
 22259 ;;  source          2    8[COMRAM] PTR unsigned char 
 22260 ;;		 -> STR_14(3), 
 22261 ;; Auto vars:     Size  Location     Type
 22262 ;;  counter         2   18[COMRAM] int 
 22263 ;;  dest_size       2   16[COMRAM] int 
 22264 ;;  source_size     2   14[COMRAM] int 
 22265 ;; Return value:  Size  Location     Type
 22266 ;;                  1    wreg      void 
 22267 ;; Registers used:
 22268 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22269 ;; Tracked objects:
 22270 ;;		On entry : 0/0
 22271 ;;		On exit  : 0/0
 22272 ;;		Unchanged: 0/0
 22273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22274 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22275 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22276 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22277 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22278 ;;Total ram usage:       16 bytes
 22279 ;; Hardware stack levels used: 1
 22280 ;; Hardware stack levels required when called: 1
 22281 ;; This function calls:
 22282 ;;		_strlen
 22283 ;; This function is called by:
 22284 ;;		_write_to_file
 22285 ;; This function uses a non-reentrant model
 22286 ;;
 22287                           
 22288                           	psect	text68
 22289   008CF2                     __ptext68:
 22290                           	callstack 0
 22291   008CF2                     _append:
 22292                           	callstack 28
 22293   008CF2                     
 22294                           ;main.c: 169: void append(char* result, char* dest, char* source);main.c: 170: {;main.c:
      +                           171:     int dest_size = (int) strlen(dest);
 22295   008CF2  C007  F001         	movff	append@dest,strlen@s
 22296   008CF6  C008  F002         	movff	append@dest+1,strlen@s+1
 22297   008CFA  EC55  F03F         	call	_strlen	;wreg free
 22298   008CFE  C001  F011         	movff	?_strlen,append@dest_size
 22299   008D02  C002  F012         	movff	?_strlen+1,append@dest_size+1
 22300                           
 22301                           ;main.c: 172:     int source_size = (int) strlen(source);
 22302   008D06  C009  F001         	movff	append@source,strlen@s
 22303   008D0A  C00A  F002         	movff	append@source+1,strlen@s+1
 22304   008D0E  EC55  F03F         	call	_strlen	;wreg free
 22305   008D12  C001  F00F         	movff	?_strlen,append@source_size
 22306   008D16  C002  F010         	movff	?_strlen+1,append@source_size+1
 22307   008D1A                     
 22308                           ;main.c: 173:     int counter;;main.c: 175:     for(counter = 0; counter < dest_size; co
      +                          unter++)
 22309   008D1A  0E00               	movlw	0
 22310   008D1C  6E14               	movwf	(append@counter+1)^0,c
 22311   008D1E  0E00               	movlw	0
 22312   008D20  6E13               	movwf	append@counter^0,c
 22313   008D22  EFB3  F046         	goto	l9450
 22314   008D26                     l9446:
 22315                           
 22316                           ;main.c: 176:         result[counter] = dest[counter];
 22317   008D26  5013               	movf	append@counter^0,w,c
 22318   008D28  2407               	addwf	append@dest^0,w,c
 22319   008D2A  6E0B               	movwf	??_append^0,c
 22320   008D2C  5014               	movf	(append@counter+1)^0,w,c
 22321   008D2E  2008               	addwfc	(append@dest+1)^0,w,c
 22322   008D30  6E0C               	movwf	(??_append+1)^0,c
 22323   008D32  C00B  FFF6         	movff	??_append,tblptrl
 22324   008D36  C00C  FFF7         	movff	??_append+1,tblptrh
 22325   008D3A  0E00               	movlw	low (__mediumconst shr (0+16))
 22326   008D3C  6EF8               	movwf	tblptru,c
 22327   008D3E  5013               	movf	append@counter^0,w,c
 22328   008D40  2405               	addwf	append@result^0,w,c
 22329   008D42  6ED9               	movwf	fsr2l,c
 22330   008D44  5014               	movf	(append@counter+1)^0,w,c
 22331   008D46  2006               	addwfc	(append@result+1)^0,w,c
 22332   008D48  6EDA               	movwf	fsr2h,c
 22333   008D4A  0E0F               	movlw	(high __ramtop+-1)
 22334   008D4C  64F7               	cpfsgt	tblptrh,c
 22335   008D4E  D003               	bra	u12447
 22336   008D50  0008               	tblrd		*
 22337   008D52  50F5               	movf	tablat,w,c
 22338   008D54  D005               	bra	u12440
 22339   008D56                     u12447:
 22340   008D56  CFF6 FFE9          	movff	tblptrl,fsr0l
 22341   008D5A  CFF7 FFEA          	movff	tblptrh,fsr0h
 22342   008D5E  50EF               	movf	indf0,w,c
 22343   008D60                     u12440:
 22344   008D60  6EDF               	movwf	indf2,c
 22345   008D62  4A13               	infsnz	append@counter^0,f,c
 22346   008D64  2A14               	incf	(append@counter+1)^0,f,c
 22347   008D66                     l9450:
 22348   008D66  5011               	movf	append@dest_size^0,w,c
 22349   008D68  5C13               	subwf	append@counter^0,w,c
 22350   008D6A  5014               	movf	(append@counter+1)^0,w,c
 22351   008D6C  0A80               	xorlw	128
 22352   008D6E  6E0B               	movwf	??_append^0,c
 22353   008D70  5012               	movf	(append@dest_size+1)^0,w,c
 22354   008D72  0A80               	xorlw	128
 22355   008D74  580B               	subwfb	??_append^0,w,c
 22356   008D76  A0D8               	btfss	status,0,c
 22357   008D78  EFC0  F046         	goto	u12451
 22358   008D7C  EFC2  F046         	goto	u12450
 22359   008D80                     u12451:
 22360   008D80  EF93  F046         	goto	l9446
 22361   008D84                     u12450:
 22362   008D84                     
 22363                           ;main.c: 178:     for(counter = 0; counter < source_size; counter++)
 22364   008D84  0E00               	movlw	0
 22365   008D86  6E14               	movwf	(append@counter+1)^0,c
 22366   008D88  0E00               	movlw	0
 22367   008D8A  6E13               	movwf	append@counter^0,c
 22368   008D8C  EFE4  F046         	goto	l9458
 22369   008D90                     l9454:
 22370                           
 22371                           ;main.c: 179:         result[counter+dest_size] = source[counter];
 22372   008D90  5013               	movf	append@counter^0,w,c
 22373   008D92  2409               	addwf	append@source^0,w,c
 22374   008D94  6E0B               	movwf	??_append^0,c
 22375   008D96  5014               	movf	(append@counter+1)^0,w,c
 22376   008D98  200A               	addwfc	(append@source+1)^0,w,c
 22377   008D9A  6E0C               	movwf	(??_append+1)^0,c
 22378   008D9C  C00B  FFF6         	movff	??_append,tblptrl
 22379   008DA0  C00C  FFF7         	movff	??_append+1,tblptrh
 22380   008DA4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 22381   008DA4  6AF8               	clrf	tblptru,c
 22382   008DA6                     	endif
 22383   008DA6                     	if	0	;tblptru may be non-zero
 22384   008DA6                     	endif
 22385   008DA6  5013               	movf	append@counter^0,w,c
 22386   008DA8  2405               	addwf	append@result^0,w,c
 22387   008DAA  6E0D               	movwf	(??_append+2)^0,c
 22388   008DAC  5014               	movf	(append@counter+1)^0,w,c
 22389   008DAE  2006               	addwfc	(append@result+1)^0,w,c
 22390   008DB0  6E0E               	movwf	(??_append+3)^0,c
 22391   008DB2  5011               	movf	append@dest_size^0,w,c
 22392   008DB4  240D               	addwf	(??_append+2)^0,w,c
 22393   008DB6  6ED9               	movwf	fsr2l,c
 22394   008DB8  5012               	movf	(append@dest_size+1)^0,w,c
 22395   008DBA  200E               	addwfc	(??_append+3)^0,w,c
 22396   008DBC  6EDA               	movwf	fsr2h,c
 22397   008DBE  0008               	tblrd		*
 22398   008DC0  CFF5 FFDF          	movff	tablat,indf2
 22399   008DC4  4A13               	infsnz	append@counter^0,f,c
 22400   008DC6  2A14               	incf	(append@counter+1)^0,f,c
 22401   008DC8                     l9458:
 22402   008DC8  500F               	movf	append@source_size^0,w,c
 22403   008DCA  5C13               	subwf	append@counter^0,w,c
 22404   008DCC  5014               	movf	(append@counter+1)^0,w,c
 22405   008DCE  0A80               	xorlw	128
 22406   008DD0  6E0B               	movwf	??_append^0,c
 22407   008DD2  5010               	movf	(append@source_size+1)^0,w,c
 22408   008DD4  0A80               	xorlw	128
 22409   008DD6  580B               	subwfb	??_append^0,w,c
 22410   008DD8  A0D8               	btfss	status,0,c
 22411   008DDA  EFF1  F046         	goto	u12461
 22412   008DDE  EFF3  F046         	goto	u12460
 22413   008DE2                     u12461:
 22414   008DE2  EFC8  F046         	goto	l9454
 22415   008DE6                     u12460:
 22416   008DE6                     
 22417                           ;main.c: 181:     result[dest_size + source_size] = '\0';
 22418   008DE6  5011               	movf	append@dest_size^0,w,c
 22419   008DE8  2405               	addwf	append@result^0,w,c
 22420   008DEA  6E0B               	movwf	??_append^0,c
 22421   008DEC  5012               	movf	(append@dest_size+1)^0,w,c
 22422   008DEE  2006               	addwfc	(append@result+1)^0,w,c
 22423   008DF0  6E0C               	movwf	(??_append+1)^0,c
 22424   008DF2  500F               	movf	append@source_size^0,w,c
 22425   008DF4  240B               	addwf	??_append^0,w,c
 22426   008DF6  6ED9               	movwf	fsr2l,c
 22427   008DF8  5010               	movf	(append@source_size+1)^0,w,c
 22428   008DFA  200C               	addwfc	(??_append+1)^0,w,c
 22429   008DFC  6EDA               	movwf	fsr2h,c
 22430   008DFE  0E00               	movlw	0
 22431   008E00  6EDF               	movwf	indf2,c
 22432   008E02  0012               	return		;funcret
 22433   008E04                     __end_of_append:
 22434                           	callstack 0
 22435                           
 22436 ;; *************** function _strlen *****************
 22437 ;; Defined at:
 22438 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strlen.c"
 22439 ;; Parameters:    Size  Location     Type
 22440 ;;  s               2    0[COMRAM] PTR const unsigned char 
 22441 ;;		 -> __heap_hi(0), RAM(3895), STR_20(6), STR_19(4), 
 22442 ;;		 -> STR_18(5), STR_17(11), STR_14(3), temp_data(20), 
 22443 ;;		 -> vel_data(20), hum_data(20), alt_data(20), NULL(0), 
 22444 ;; Auto vars:     Size  Location     Type
 22445 ;;  a               2    2[COMRAM] PTR const unsigned char 
 22446 ;;		 -> __heap_hi(0), RAM(3895), STR_20(6), STR_19(4), 
 22447 ;;		 -> STR_18(5), STR_17(11), STR_14(3), temp_data(20), 
 22448 ;;		 -> vel_data(20), hum_data(20), alt_data(20), NULL(0), 
 22449 ;; Return value:  Size  Location     Type
 22450 ;;                  2    0[COMRAM] unsigned int 
 22451 ;; Registers used:
 22452 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 22453 ;; Tracked objects:
 22454 ;;		On entry : 0/0
 22455 ;;		On exit  : 0/0
 22456 ;;		Unchanged: 0/0
 22457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22458 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22459 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22461 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22462 ;;Total ram usage:        4 bytes
 22463 ;; Hardware stack levels used: 1
 22464 ;; This function calls:
 22465 ;;		Nothing
 22466 ;; This function is called by:
 22467 ;;		_write_to_file
 22468 ;;		_append
 22469 ;; This function uses a non-reentrant model
 22470 ;;
 22471                           
 22472                           	psect	text69
 22473   007EAA                     __ptext69:
 22474                           	callstack 0
 22475   007EAA                     _strlen:
 22476                           	callstack 29
 22477   007EAA  C001  F003         	movff	strlen@s,strlen@a
 22478   007EAE  C002  F004         	movff	strlen@s+1,strlen@a+1
 22479   007EB2  EF5D  F03F         	goto	l8766
 22480   007EB6                     l8764:
 22481   007EB6  4A01               	infsnz	strlen@s^0,f,c
 22482   007EB8  2A02               	incf	(strlen@s+1)^0,f,c
 22483   007EBA                     l8766:
 22484   007EBA  C001  FFF6         	movff	strlen@s,tblptrl
 22485   007EBE  C002  FFF7         	movff	strlen@s+1,tblptrh
 22486   007EC2  0E00               	movlw	low (__mediumconst shr (0+16))
 22487   007EC4  6EF8               	movwf	tblptru,c
 22488   007EC6  0E0F               	movlw	(high __ramtop+-1)
 22489   007EC8  64F7               	cpfsgt	tblptrh,c
 22490   007ECA  D003               	bra	u11247
 22491   007ECC  0008               	tblrd		*
 22492   007ECE  50F5               	movf	tablat,w,c
 22493   007ED0  D005               	bra	u11240
 22494   007ED2                     u11247:
 22495   007ED2  CFF6 FFE9          	movff	tblptrl,fsr0l
 22496   007ED6  CFF7 FFEA          	movff	tblptrh,fsr0h
 22497   007EDA  50EF               	movf	indf0,w,c
 22498   007EDC                     u11240:
 22499   007EDC  0900               	iorlw	0
 22500   007EDE  A4D8               	btfss	status,2,c
 22501   007EE0  EF74  F03F         	goto	u11251
 22502   007EE4  EF76  F03F         	goto	u11250
 22503   007EE8                     u11251:
 22504   007EE8  EF5B  F03F         	goto	l8764
 22505   007EEC                     u11250:
 22506   007EEC  5003               	movf	strlen@a^0,w,c
 22507   007EEE  5C01               	subwf	strlen@s^0,w,c
 22508   007EF0  6E01               	movwf	?_strlen^0,c
 22509   007EF2  5004               	movf	(strlen@a+1)^0,w,c
 22510   007EF4  5802               	subwfb	(strlen@s+1)^0,w,c
 22511   007EF6  6E02               	movwf	(?_strlen+1)^0,c
 22512   007EF8  0012               	return		;funcret
 22513   007EFA                     __end_of_strlen:
 22514                           	callstack 0
 22515                           
 22516 ;; *************** function _get_vel_data *****************
 22517 ;; Defined at:
 22518 ;;		line 158 in file "main.c"
 22519 ;; Parameters:    Size  Location     Type
 22520 ;;  vel_string      2    0[COMRAM] PTR unsigned char 
 22521 ;;		 -> STR_20(6), vel_data(20), 
 22522 ;; Auto vars:     Size  Location     Type
 22523 ;;		None
 22524 ;; Return value:  Size  Location     Type
 22525 ;;                  2    0[COMRAM] PTR unsigned char 
 22526 ;; Registers used:
 22527 ;;		wreg, status,2, status,0
 22528 ;; Tracked objects:
 22529 ;;		On entry : 0/0
 22530 ;;		On exit  : 0/0
 22531 ;;		Unchanged: 0/0
 22532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22533 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22536 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22537 ;;Total ram usage:        2 bytes
 22538 ;; Hardware stack levels used: 1
 22539 ;; This function calls:
 22540 ;;		Nothing
 22541 ;; This function is called by:
 22542 ;;		_main
 22543 ;; This function uses a non-reentrant model
 22544 ;;
 22545                           
 22546                           	psect	text70
 22547   007C96                     __ptext70:
 22548                           	callstack 0
 22549   007C96                     _get_vel_data:
 22550                           	callstack 30
 22551   007C96                     
 22552                           ;main.c: 158: char* get_vel_data (char* vel_string);main.c: 159: {;main.c: 160:     vel_
      +                          string = "10m/s";
 22553   007C96  0EDF               	movlw	low STR_20
 22554   007C98  6E01               	movwf	get_vel_data@vel_string^0,c
 22555   007C9A  0EFF               	movlw	high STR_20
 22556   007C9C  6E02               	movwf	(get_vel_data@vel_string+1)^0,c
 22557                           
 22558                           ;main.c: 161:     return vel_string;
 22559   007C9E  C001  F001         	movff	get_vel_data@vel_string,?_get_vel_data
 22560   007CA2  C002  F002         	movff	get_vel_data@vel_string+1,?_get_vel_data+1
 22561   007CA6  0012               	return		;funcret
 22562   007CA8                     __end_of_get_vel_data:
 22563                           	callstack 0
 22564                           
 22565 ;; *************** function _get_temp_data *****************
 22566 ;; Defined at:
 22567 ;;		line 130 in file "main.c"
 22568 ;; Parameters:    Size  Location     Type
 22569 ;;  temp_string     2   11[COMRAM] PTR unsigned char 
 22570 ;;		 -> STR_17(11), temp_data(20), 
 22571 ;; Auto vars:     Size  Location     Type
 22572 ;;		None
 22573 ;; Return value:  Size  Location     Type
 22574 ;;                  2   11[COMRAM] PTR unsigned char 
 22575 ;; Registers used:
 22576 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22577 ;; Tracked objects:
 22578 ;;		On entry : 0/0
 22579 ;;		On exit  : 0/0
 22580 ;;		Unchanged: 0/0
 22581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22582 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22585 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22586 ;;Total ram usage:        2 bytes
 22587 ;; Hardware stack levels used: 1
 22588 ;; Hardware stack levels required when called: 1
 22589 ;; This function calls:
 22590 ;;		_string_copy
 22591 ;; This function is called by:
 22592 ;;		_main
 22593 ;; This function uses a non-reentrant model
 22594 ;;
 22595                           
 22596                           	psect	text71
 22597   007CF0                     __ptext71:
 22598                           	callstack 0
 22599   007CF0                     _get_temp_data:
 22600                           	callstack 29
 22601   007CF0                     
 22602                           ;main.c: 130: char* get_temp_data(char* temp_string);main.c: 131: {;main.c: 132:     str
      +                          ing_copy(temp_string, "77 degrees");
 22603   007CF0  C00C  F001         	movff	get_temp_data@temp_string,string_copy@dest
 22604   007CF4  C00D  F002         	movff	get_temp_data@temp_string+1,string_copy@dest+1
 22605   007CF8  0EC1               	movlw	low STR_16
 22606   007CFA  6E03               	movwf	string_copy@source^0,c
 22607   007CFC  0EFF               	movlw	high STR_16
 22608   007CFE  6E04               	movwf	(string_copy@source+1)^0,c
 22609   007D00  EC11  F042         	call	_string_copy	;wreg free
 22610   007D04                     
 22611                           ;main.c: 133:     temp_string = "77 degrees";
 22612   007D04  0EC1               	movlw	low STR_16
 22613   007D06  6E0C               	movwf	get_temp_data@temp_string^0,c
 22614   007D08  0EFF               	movlw	high STR_16
 22615   007D0A  6E0D               	movwf	(get_temp_data@temp_string+1)^0,c
 22616   007D0C                     
 22617                           ;main.c: 134:     return temp_string;
 22618   007D0C  C00C  F00C         	movff	get_temp_data@temp_string,?_get_temp_data
 22619   007D10  C00D  F00D         	movff	get_temp_data@temp_string+1,?_get_temp_data+1
 22620   007D14  0012               	return		;funcret
 22621   007D16                     __end_of_get_temp_data:
 22622                           	callstack 0
 22623                           
 22624 ;; *************** function _string_copy *****************
 22625 ;; Defined at:
 22626 ;;		line 188 in file "main.c"
 22627 ;; Parameters:    Size  Location     Type
 22628 ;;  dest            2    0[COMRAM] PTR unsigned char 
 22629 ;;		 -> STR_17(11), temp_data(20), 
 22630 ;;  source          2    2[COMRAM] PTR unsigned char 
 22631 ;;		 -> STR_16(11), 
 22632 ;; Auto vars:     Size  Location     Type
 22633 ;;  counter         2    9[COMRAM] int 
 22634 ;; Return value:  Size  Location     Type
 22635 ;;                  2    0[COMRAM] PTR unsigned char 
 22636 ;; Registers used:
 22637 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 22638 ;; Tracked objects:
 22639 ;;		On entry : 0/0
 22640 ;;		On exit  : 0/0
 22641 ;;		Unchanged: 0/0
 22642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22643 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22644 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22645 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22646 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22647 ;;Total ram usage:       11 bytes
 22648 ;; Hardware stack levels used: 1
 22649 ;; This function calls:
 22650 ;;		Nothing
 22651 ;; This function is called by:
 22652 ;;		_get_temp_data
 22653 ;; This function uses a non-reentrant model
 22654 ;;
 22655                           
 22656                           	psect	text72
 22657   008422                     __ptext72:
 22658                           	callstack 0
 22659   008422                     _string_copy:
 22660                           	callstack 29
 22661   008422                     
 22662                           ;main.c: 188: char* string_copy(char* dest, char* source);main.c: 189: {;main.c: 190:   
      +                            int counter = 0;
 22663   008422  0E00               	movlw	0
 22664   008424  6E0B               	movwf	(string_copy@counter+1)^0,c
 22665   008426  0E00               	movlw	0
 22666   008428  6E0A               	movwf	string_copy@counter^0,c
 22667   00842A                     l9466:
 22668                           
 22669                           ;main.c: 192:     {;main.c: 193:         dest[counter] = source[counter];
 22670   00842A  500A               	movf	string_copy@counter^0,w,c
 22671   00842C  2403               	addwf	string_copy@source^0,w,c
 22672   00842E  6E05               	movwf	??_string_copy^0,c
 22673   008430  500B               	movf	(string_copy@counter+1)^0,w,c
 22674   008432  2004               	addwfc	(string_copy@source+1)^0,w,c
 22675   008434  6E06               	movwf	(??_string_copy+1)^0,c
 22676   008436  C005  FFF6         	movff	??_string_copy,tblptrl
 22677   00843A  C006  FFF7         	movff	??_string_copy+1,tblptrh
 22678   00843E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 22679   00843E  6AF8               	clrf	tblptru,c
 22680   008440                     	endif
 22681   008440                     	if	0	;tblptru may be non-zero
 22682   008440                     	endif
 22683   008440  0008               	tblrd		*
 22684   008442  CFF5 F007          	movff	tablat,??_string_copy+2
 22685   008446  500A               	movf	string_copy@counter^0,w,c
 22686   008448  2401               	addwf	string_copy@dest^0,w,c
 22687   00844A  6E08               	movwf	(??_string_copy+3)^0,c
 22688   00844C  500B               	movf	(string_copy@counter+1)^0,w,c
 22689   00844E  2002               	addwfc	(string_copy@dest+1)^0,w,c
 22690   008450  6E09               	movwf	(??_string_copy+4)^0,c
 22691   008452  C008  FFF6         	movff	??_string_copy+3,tblptrl
 22692   008456  C009  FFF7         	movff	??_string_copy+4,tblptrh
 22693   00845A  0E00               	movlw	low (__mediumconst shr (0+16))
 22694   00845C  6EF8               	movwf	tblptru,c
 22695   00845E  0E0F               	movlw	(high __ramtop+-1)
 22696   008460  64F7               	cpfsgt	tblptrh,c
 22697   008462  D004               	bra	u12477
 22698   008464  C007  FFF5         	movff	??_string_copy+2,tablat
 22699   008468  000C               	tblwt		*
 22700   00846A  D006               	bra	u12470
 22701   00846C                     u12477:
 22702   00846C  CFF6 FFE9          	movff	tblptrl,fsr0l
 22703   008470  CFF7 FFEA          	movff	tblptrh,fsr0h
 22704   008474  C007  FFEF         	movff	??_string_copy+2,indf0
 22705   008478                     u12470:
 22706   008478                     
 22707                           ;main.c: 194:         counter++;
 22708   008478  4A0A               	infsnz	string_copy@counter^0,f,c
 22709   00847A  2A0B               	incf	(string_copy@counter+1)^0,f,c
 22710   00847C                     
 22711                           ;main.c: 195:     }
 22712   00847C  500A               	movf	string_copy@counter^0,w,c
 22713   00847E  2403               	addwf	string_copy@source^0,w,c
 22714   008480  6E05               	movwf	??_string_copy^0,c
 22715   008482  500B               	movf	(string_copy@counter+1)^0,w,c
 22716   008484  2004               	addwfc	(string_copy@source+1)^0,w,c
 22717   008486  6E06               	movwf	(??_string_copy+1)^0,c
 22718   008488  C005  FFF6         	movff	??_string_copy,tblptrl
 22719   00848C  C006  FFF7         	movff	??_string_copy+1,tblptrh
 22720   008490                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 22721   008490  6AF8               	clrf	tblptru,c
 22722   008492                     	endif
 22723   008492                     	if	0	;tblptru may be non-zero
 22724   008492                     	endif
 22725   008492  0008               	tblrd		*
 22726   008494  50F5               	movf	tablat,w,c
 22727   008496  0900               	iorlw	0
 22728   008498  A4D8               	btfss	status,2,c
 22729   00849A  EF51  F042         	goto	u12481
 22730   00849E  EF53  F042         	goto	u12480
 22731   0084A2                     u12481:
 22732   0084A2  EF15  F042         	goto	l9466
 22733   0084A6                     u12480:
 22734   0084A6  0012               	return		;funcret
 22735   0084A8                     __end_of_string_copy:
 22736                           	callstack 0
 22737                           
 22738 ;; *************** function _get_hum_data *****************
 22739 ;; Defined at:
 22740 ;;		line 149 in file "main.c"
 22741 ;; Parameters:    Size  Location     Type
 22742 ;;  hum_string      2    0[COMRAM] PTR unsigned char 
 22743 ;;		 -> STR_19(4), hum_data(20), 
 22744 ;; Auto vars:     Size  Location     Type
 22745 ;;		None
 22746 ;; Return value:  Size  Location     Type
 22747 ;;                  2    0[COMRAM] PTR unsigned char 
 22748 ;; Registers used:
 22749 ;;		wreg, status,2, status,0
 22750 ;; Tracked objects:
 22751 ;;		On entry : 0/0
 22752 ;;		On exit  : 0/0
 22753 ;;		Unchanged: 0/0
 22754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22755 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22758 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22759 ;;Total ram usage:        2 bytes
 22760 ;; Hardware stack levels used: 1
 22761 ;; This function calls:
 22762 ;;		Nothing
 22763 ;; This function is called by:
 22764 ;;		_main
 22765 ;; This function uses a non-reentrant model
 22766 ;;
 22767                           
 22768                           	psect	text73
 22769   007C84                     __ptext73:
 22770                           	callstack 0
 22771   007C84                     _get_hum_data:
 22772                           	callstack 30
 22773   007C84                     
 22774                           ;main.c: 149: char* get_hum_data (char* hum_string);main.c: 150: {;main.c: 151:     hum_
      +                          string = "95%";
 22775   007C84  0EF0               	movlw	low STR_19
 22776   007C86  6E01               	movwf	get_hum_data@hum_string^0,c
 22777   007C88  0EFF               	movlw	high STR_19
 22778   007C8A  6E02               	movwf	(get_hum_data@hum_string+1)^0,c
 22779                           
 22780                           ;main.c: 152:     return hum_string;
 22781   007C8C  C001  F001         	movff	get_hum_data@hum_string,?_get_hum_data
 22782   007C90  C002  F002         	movff	get_hum_data@hum_string+1,?_get_hum_data+1
 22783   007C94  0012               	return		;funcret
 22784   007C96                     __end_of_get_hum_data:
 22785                           	callstack 0
 22786                           
 22787 ;; *************** function _get_alt_data *****************
 22788 ;; Defined at:
 22789 ;;		line 140 in file "main.c"
 22790 ;; Parameters:    Size  Location     Type
 22791 ;;  alt_string      2    0[COMRAM] PTR unsigned char 
 22792 ;;		 -> STR_18(5), alt_data(20), 
 22793 ;; Auto vars:     Size  Location     Type
 22794 ;;		None
 22795 ;; Return value:  Size  Location     Type
 22796 ;;                  2    0[COMRAM] PTR unsigned char 
 22797 ;; Registers used:
 22798 ;;		wreg, status,2, status,0
 22799 ;; Tracked objects:
 22800 ;;		On entry : 0/0
 22801 ;;		On exit  : 0/0
 22802 ;;		Unchanged: 0/0
 22803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22804 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22807 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22808 ;;Total ram usage:        2 bytes
 22809 ;; Hardware stack levels used: 1
 22810 ;; This function calls:
 22811 ;;		Nothing
 22812 ;; This function is called by:
 22813 ;;		_main
 22814 ;; This function uses a non-reentrant model
 22815 ;;
 22816                           
 22817                           	psect	text74
 22818   007C72                     __ptext74:
 22819                           	callstack 0
 22820   007C72                     _get_alt_data:
 22821                           	callstack 30
 22822   007C72                     
 22823                           ;main.c: 140: char* get_alt_data (char* alt_string);main.c: 141: {;main.c: 142:     alt_
      +                          string = "200m";
 22824   007C72  0EEB               	movlw	low STR_18
 22825   007C74  6E01               	movwf	get_alt_data@alt_string^0,c
 22826   007C76  0EFF               	movlw	high STR_18
 22827   007C78  6E02               	movwf	(get_alt_data@alt_string+1)^0,c
 22828                           
 22829                           ;main.c: 143:     return alt_string;
 22830   007C7A  C001  F001         	movff	get_alt_data@alt_string,?_get_alt_data
 22831   007C7E  C002  F002         	movff	get_alt_data@alt_string+1,?_get_alt_data+1
 22832   007C82  0012               	return		;funcret
 22833   007C84                     __end_of_get_alt_data:
 22834                           	callstack 0
 22835                           
 22836 ;; *************** function _SYSTEM_Initialize *****************
 22837 ;; Defined at:
 22838 ;;		line 50 in file "mcc_generated_files/mcc.c"
 22839 ;; Parameters:    Size  Location     Type
 22840 ;;		None
 22841 ;; Auto vars:     Size  Location     Type
 22842 ;;		None
 22843 ;; Return value:  Size  Location     Type
 22844 ;;                  1    wreg      void 
 22845 ;; Registers used:
 22846 ;;		wreg, status,2, cstack
 22847 ;; Tracked objects:
 22848 ;;		On entry : 0/0
 22849 ;;		On exit  : 0/0
 22850 ;;		Unchanged: 0/0
 22851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22856 ;;Total ram usage:        0 bytes
 22857 ;; Hardware stack levels used: 1
 22858 ;; Hardware stack levels required when called: 1
 22859 ;; This function calls:
 22860 ;;		_OSCILLATOR_Initialize
 22861 ;;		_PIN_MANAGER_Initialize
 22862 ;;		_SPI1_Initialize
 22863 ;; This function is called by:
 22864 ;;		_main
 22865 ;; This function uses a non-reentrant model
 22866 ;;
 22867                           
 22868                           	psect	text75
 22869   007C52                     __ptext75:
 22870                           	callstack 0
 22871   007C52                     _SYSTEM_Initialize:
 22872                           	callstack 29
 22873   007C52                     
 22874                           ;mcc_generated_files/mcc.c: 53:     SPI1_Initialize();
 22875   007C52  EC30  F03E         	call	_SPI1_Initialize	;wreg free
 22876                           
 22877                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 22878   007C56  ECED  F03E         	call	_PIN_MANAGER_Initialize	;wreg free
 22879                           
 22880                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 22881   007C5A  EC22  F03E         	call	_OSCILLATOR_Initialize	;wreg free
 22882   007C5E  0012               	return		;funcret
 22883   007C60                     __end_of_SYSTEM_Initialize:
 22884                           	callstack 0
 22885                           
 22886 ;; *************** function _SPI1_Initialize *****************
 22887 ;; Defined at:
 22888 ;;		line 64 in file "mcc_generated_files/spi1.c"
 22889 ;; Parameters:    Size  Location     Type
 22890 ;;		None
 22891 ;; Auto vars:     Size  Location     Type
 22892 ;;		None
 22893 ;; Return value:  Size  Location     Type
 22894 ;;                  1    wreg      void 
 22895 ;; Registers used:
 22896 ;;		wreg, status,2
 22897 ;; Tracked objects:
 22898 ;;		On entry : 0/0
 22899 ;;		On exit  : 0/0
 22900 ;;		Unchanged: 0/0
 22901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22906 ;;Total ram usage:        0 bytes
 22907 ;; Hardware stack levels used: 1
 22908 ;; This function calls:
 22909 ;;		Nothing
 22910 ;; This function is called by:
 22911 ;;		_SYSTEM_Initialize
 22912 ;; This function uses a non-reentrant model
 22913 ;;
 22914                           
 22915                           	psect	text76
 22916   007C60                     __ptext76:
 22917                           	callstack 0
 22918   007C60                     _SPI1_Initialize:
 22919                           	callstack 29
 22920   007C60                     
 22921                           ;mcc_generated_files/spi1.c: 67:     SSP1STAT = 0x40;
 22922   007C60  0E40               	movlw	64
 22923   007C62  6EC7               	movwf	199,c	;volatile
 22924                           
 22925                           ;mcc_generated_files/spi1.c: 68:     SSP1CON1 = 0x00;
 22926   007C64  0E00               	movlw	0
 22927   007C66  6EC6               	movwf	198,c	;volatile
 22928                           
 22929                           ;mcc_generated_files/spi1.c: 69:     SSP1ADD = 0x01;
 22930   007C68  0E01               	movlw	1
 22931   007C6A  6EC8               	movwf	200,c	;volatile
 22932   007C6C                     
 22933                           ;mcc_generated_files/spi1.c: 70:     TRISCbits.TRISC3 = 0;
 22934   007C6C  9694               	bcf	148,3,c	;volatile
 22935   007C6E                     
 22936                           ;mcc_generated_files/spi1.c: 71:     SSP1CON1bits.SSPEN = 0;
 22937   007C6E  9AC6               	bcf	198,5,c	;volatile
 22938   007C70  0012               	return		;funcret
 22939   007C72                     __end_of_SPI1_Initialize:
 22940                           	callstack 0
 22941                           
 22942 ;; *************** function _PIN_MANAGER_Initialize *****************
 22943 ;; Defined at:
 22944 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 22945 ;; Parameters:    Size  Location     Type
 22946 ;;		None
 22947 ;; Auto vars:     Size  Location     Type
 22948 ;;		None
 22949 ;; Return value:  Size  Location     Type
 22950 ;;                  1    wreg      void 
 22951 ;; Registers used:
 22952 ;;		wreg, status,2
 22953 ;; Tracked objects:
 22954 ;;		On entry : 0/0
 22955 ;;		On exit  : 0/0
 22956 ;;		Unchanged: 0/0
 22957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22962 ;;Total ram usage:        0 bytes
 22963 ;; Hardware stack levels used: 1
 22964 ;; This function calls:
 22965 ;;		Nothing
 22966 ;; This function is called by:
 22967 ;;		_SYSTEM_Initialize
 22968 ;; This function uses a non-reentrant model
 22969 ;;
 22970                           
 22971                           	psect	text77
 22972   007DDA                     __ptext77:
 22973                           	callstack 0
 22974   007DDA                     _PIN_MANAGER_Initialize:
 22975                           	callstack 29
 22976   007DDA                     
 22977                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 22978   007DDA  0E00               	movlw	0
 22979   007DDC  6E8D               	movwf	141,c	;volatile
 22980                           
 22981                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 22982   007DDE  0E00               	movlw	0
 22983   007DE0  6E8C               	movwf	140,c	;volatile
 22984                           
 22985                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 22986   007DE2  0E00               	movlw	0
 22987   007DE4  6E89               	movwf	137,c	;volatile
 22988                           
 22989                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 22990   007DE6  0E00               	movlw	0
 22991   007DE8  6E8A               	movwf	138,c	;volatile
 22992                           
 22993                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 22994   007DEA  0E00               	movlw	0
 22995   007DEC  6E8B               	movwf	139,c	;volatile
 22996                           
 22997                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 22998   007DEE  0E07               	movlw	7
 22999   007DF0  6E96               	movwf	150,c	;volatile
 23000   007DF2                     
 23001                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
 23002   007DF2  6892               	setf	146,c	;volatile
 23003   007DF4                     
 23004                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 23005   007DF4  6893               	setf	147,c	;volatile
 23006                           
 23007                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xD3;
 23008   007DF6  0ED3               	movlw	211
 23009   007DF8  6E94               	movwf	148,c	;volatile
 23010   007DFA                     
 23011                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 23012   007DFA  6895               	setf	149,c	;volatile
 23013   007DFC                     
 23014                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
 23015   007DFC  010F               	movlb	15	; () banked
 23016   007DFE  693B               	setf	59,b	;volatile
 23017                           
 23018                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xC0;
 23019   007E00  0EC0               	movlw	192
 23020   007E02  6F3A               	movwf	58,b	;volatile
 23021                           
 23022                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x3F;
 23023   007E04  0E3F               	movlw	63
 23024   007E06  6F39               	movwf	57,b	;volatile
 23025                           
 23026                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 23027   007E08  0E07               	movlw	7
 23028   007E0A  6F3C               	movwf	60,b	;volatile
 23029                           
 23030                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x2F;
 23031   007E0C  0E2F               	movlw	47
 23032   007E0E  6F38               	movwf	56,b	;volatile
 23033                           
 23034                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x00;
 23035   007E10  0E00               	movlw	0
 23036   007E12  6E61               	movwf	97,c	;volatile
 23037   007E14                     
 23038                           ; BSR set to: 15
 23039                           ;mcc_generated_files/pin_manager.c: 88:     INTCON2bits.nRBPU = 1;
 23040   007E14  8EF1               	bsf	241,7,c	;volatile
 23041   007E16                     
 23042                           ; BSR set to: 15
 23043   007E16  0012               	return		;funcret
 23044   007E18                     __end_of_PIN_MANAGER_Initialize:
 23045                           	callstack 0
 23046                           
 23047 ;; *************** function _OSCILLATOR_Initialize *****************
 23048 ;; Defined at:
 23049 ;;		line 58 in file "mcc_generated_files/mcc.c"
 23050 ;; Parameters:    Size  Location     Type
 23051 ;;		None
 23052 ;; Auto vars:     Size  Location     Type
 23053 ;;		None
 23054 ;; Return value:  Size  Location     Type
 23055 ;;                  1    wreg      void 
 23056 ;; Registers used:
 23057 ;;		wreg, status,2
 23058 ;; Tracked objects:
 23059 ;;		On entry : 0/0
 23060 ;;		On exit  : 0/0
 23061 ;;		Unchanged: 0/0
 23062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23067 ;;Total ram usage:        0 bytes
 23068 ;; Hardware stack levels used: 1
 23069 ;; This function calls:
 23070 ;;		Nothing
 23071 ;; This function is called by:
 23072 ;;		_SYSTEM_Initialize
 23073 ;; This function uses a non-reentrant model
 23074 ;;
 23075                           
 23076                           	psect	text78
 23077   007C44                     __ptext78:
 23078                           	callstack 0
 23079   007C44                     _OSCILLATOR_Initialize:
 23080                           	callstack 29
 23081   007C44                     
 23082                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x60;
 23083   007C44  0E60               	movlw	96
 23084   007C46  6ED3               	movwf	211,c	;volatile
 23085                           
 23086                           ;mcc_generated_files/mcc.c: 63:     OSCCON2 = 0x04;
 23087   007C48  0E04               	movlw	4
 23088   007C4A  6ED2               	movwf	210,c	;volatile
 23089                           
 23090                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
 23091   007C4C  0E00               	movlw	0
 23092   007C4E  6E9B               	movwf	155,c	;volatile
 23093   007C50  0012               	return		;funcret
 23094   007C52                     __end_of_OSCILLATOR_Initialize:
 23095                           	callstack 0
 23096                           
 23097                           	psect	text79
 23098   000000                     __ptext79:
 23099                           	callstack 0
 23100   000000                     
 23101                           	psect	rparam
 23102   000000                     
 23103                           	psect	idloc
 23104                           
 23105                           ;Config register IDLOC0 @ 0x200000
 23106                           ;	unspecified, using default values
 23107   200000                     	org	2097152
 23108   200000  FF                 	db	255
 23109                           
 23110                           ;Config register IDLOC1 @ 0x200001
 23111                           ;	unspecified, using default values
 23112   200001                     	org	2097153
 23113   200001  FF                 	db	255
 23114                           
 23115                           ;Config register IDLOC2 @ 0x200002
 23116                           ;	unspecified, using default values
 23117   200002                     	org	2097154
 23118   200002  FF                 	db	255
 23119                           
 23120                           ;Config register IDLOC3 @ 0x200003
 23121                           ;	unspecified, using default values
 23122   200003                     	org	2097155
 23123   200003  FF                 	db	255
 23124                           
 23125                           ;Config register IDLOC4 @ 0x200004
 23126                           ;	unspecified, using default values
 23127   200004                     	org	2097156
 23128   200004  FF                 	db	255
 23129                           
 23130                           ;Config register IDLOC5 @ 0x200005
 23131                           ;	unspecified, using default values
 23132   200005                     	org	2097157
 23133   200005  FF                 	db	255
 23134                           
 23135                           ;Config register IDLOC6 @ 0x200006
 23136                           ;	unspecified, using default values
 23137   200006                     	org	2097158
 23138   200006  FF                 	db	255
 23139                           
 23140                           ;Config register IDLOC7 @ 0x200007
 23141                           ;	unspecified, using default values
 23142   200007                     	org	2097159
 23143   200007  FF                 	db	255
 23144                           
 23145                           	psect	config
 23146                           
 23147                           ; Padding undefined space
 23148   300000                     	org	3145728
 23149   300000  FF                 	db	255
 23150                           
 23151                           ;Config register CONFIG1H @ 0x300001
 23152                           ;	Oscillator Selection bits
 23153                           ;	FOSC = INTIO67, Internal oscillator block
 23154                           ;	4X PLL Enable
 23155                           ;	PLLCFG = OFF, Oscillator used directly
 23156                           ;	Primary clock enable bit
 23157                           ;	PRICLKEN = ON, Primary clock is always enabled
 23158                           ;	Fail-Safe Clock Monitor Enable bit
 23159                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 23160                           ;	Internal/External Oscillator Switchover bit
 23161                           ;	IESO = OFF, Oscillator Switchover mode disabled
 23162   300001                     	org	3145729
 23163   300001  28                 	db	40
 23164                           
 23165                           ;Config register CONFIG2L @ 0x300002
 23166                           ;	Power-up Timer Enable bit
 23167                           ;	PWRTEN = OFF, Power up timer disabled
 23168                           ;	Brown-out Reset Enable bits
 23169                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 23170                           ;	Brown Out Reset Voltage bits
 23171                           ;	BORV = 190, VBOR set to 1.90 V nominal
 23172   300002                     	org	3145730
 23173   300002  1F                 	db	31
 23174                           
 23175                           ;Config register CONFIG2H @ 0x300003
 23176                           ;	Watchdog Timer Enable bits
 23177                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 23178                           ;	Watchdog Timer Postscale Select bits
 23179                           ;	WDTPS = 32768, 1:32768
 23180   300003                     	org	3145731
 23181   300003  3C                 	db	60
 23182                           
 23183                           ; Padding undefined space
 23184   300004                     	org	3145732
 23185   300004  FF                 	db	255
 23186                           
 23187                           ;Config register CONFIG3H @ 0x300005
 23188                           ;	CCP2 MUX bit
 23189                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 23190                           ;	PORTB A/D Enable bit
 23191                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
 23192                           ;	P3A/CCP3 Mux bit
 23193                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 23194                           ;	HFINTOSC Fast Start-up
 23195                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 23196                           ;	Timer3 Clock input mux bit
 23197                           ;	T3CMX = PORTC0, T3CKI is on RC0
 23198                           ;	ECCP2 B output mux bit
 23199                           ;	P2BMX = PORTD2, P2B is on RD2
 23200                           ;	MCLR Pin Enable bit
 23201                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 23202   300005                     	org	3145733
 23203   300005  BF                 	db	191
 23204                           
 23205                           ;Config register CONFIG4L @ 0x300006
 23206                           ;	Stack Full/Underflow Reset Enable bit
 23207                           ;	STVREN = ON, Stack full/underflow will cause Reset
 23208                           ;	Single-Supply ICSP Enable bit
 23209                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 23210                           ;	Extended Instruction Set Enable bit
 23211                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 23212                           ;	Background Debug
 23213                           ;	DEBUG = OFF, Disabled
 23214   300006                     	org	3145734
 23215   300006  85                 	db	133
 23216                           
 23217                           ; Padding undefined space
 23218   300007                     	org	3145735
 23219   300007  FF                 	db	255
 23220                           
 23221                           ;Config register CONFIG5L @ 0x300008
 23222                           ;	Code Protection Block 0
 23223                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 23224                           ;	Code Protection Block 1
 23225                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 23226                           ;	Code Protection Block 2
 23227                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 23228                           ;	Code Protection Block 3
 23229                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 23230   300008                     	org	3145736
 23231   300008  0F                 	db	15
 23232                           
 23233                           ;Config register CONFIG5H @ 0x300009
 23234                           ;	Boot Block Code Protection bit
 23235                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 23236                           ;	Data EEPROM Code Protection bit
 23237                           ;	CPD = OFF, Data EEPROM not code-protected
 23238   300009                     	org	3145737
 23239   300009  C0                 	db	192
 23240                           
 23241                           ;Config register CONFIG6L @ 0x30000A
 23242                           ;	Write Protection Block 0
 23243                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 23244                           ;	Write Protection Block 1
 23245                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 23246                           ;	Write Protection Block 2
 23247                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 23248                           ;	Write Protection Block 3
 23249                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 23250   30000A                     	org	3145738
 23251   30000A  0F                 	db	15
 23252                           
 23253                           ;Config register CONFIG6H @ 0x30000B
 23254                           ;	Configuration Register Write Protection bit
 23255                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 23256                           ;	Boot Block Write Protection bit
 23257                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 23258                           ;	Data EEPROM Write Protection bit
 23259                           ;	WRTD = OFF, Data EEPROM not write-protected
 23260   30000B                     	org	3145739
 23261   30000B  E0                 	db	224
 23262                           
 23263                           ;Config register CONFIG7L @ 0x30000C
 23264                           ;	Table Read Protection Block 0
 23265                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 23266                           ;	Table Read Protection Block 1
 23267                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 23268                           ;	Table Read Protection Block 2
 23269                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 23270                           ;	Table Read Protection Block 3
 23271                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 23272   30000C                     	org	3145740
 23273   30000C  0F                 	db	15
 23274                           
 23275                           ;Config register CONFIG7H @ 0x30000D
 23276                           ;	Boot Block Table Read Protection bit
 23277                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 23278   30000D                     	org	3145741
 23279   30000D  40                 	db	64
 23280                           tosu	equ	0xFFF
 23281                           tosh	equ	0xFFE
 23282                           tosl	equ	0xFFD
 23283                           stkptr	equ	0xFFC
 23284                           pclatu	equ	0xFFB
 23285                           pclath	equ	0xFFA
 23286                           pcl	equ	0xFF9
 23287                           tblptru	equ	0xFF8
 23288                           tblptrh	equ	0xFF7
 23289                           tblptrl	equ	0xFF6
 23290                           tablat	equ	0xFF5
 23291                           prodh	equ	0xFF4
 23292                           prodl	equ	0xFF3
 23293                           indf0	equ	0xFEF
 23294                           postinc0	equ	0xFEE
 23295                           postdec0	equ	0xFED
 23296                           preinc0	equ	0xFEC
 23297                           plusw0	equ	0xFEB
 23298                           fsr0h	equ	0xFEA
 23299                           fsr0l	equ	0xFE9
 23300                           wreg	equ	0xFE8
 23301                           indf1	equ	0xFE7
 23302                           postinc1	equ	0xFE6
 23303                           postdec1	equ	0xFE5
 23304                           preinc1	equ	0xFE4
 23305                           plusw1	equ	0xFE3
 23306                           fsr1h	equ	0xFE2
 23307                           fsr1l	equ	0xFE1
 23308                           bsr	equ	0xFE0
 23309                           indf2	equ	0xFDF
 23310                           postinc2	equ	0xFDE
 23311                           postdec2	equ	0xFDD
 23312                           preinc2	equ	0xFDC
 23313                           plusw2	equ	0xFDB
 23314                           fsr2h	equ	0xFDA
 23315                           fsr2l	equ	0xFD9
 23316                           status	equ	0xFD8

Data Sizes:
    Strings     115
    Constant    260
    Data        22
    BSS         2345
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    160     160
    BANK1           256     75     224
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    pb.fp.fs	PTR struct . size(2) Largest target is 0
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    pb.fp.fs	PTR struct . size(2) Largest target is 0
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    pb.fp.fs	PTR struct . size(2) Largest target is 0
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    pb.fp.dir_ptr	PTR unsigned char  size(2) Largest target is 0
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    pb.fp.obj.fs	PTR struct . size(2) Largest target is 0
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    pb.fp.dir_ptr	PTR unsigned char  size(2) Largest target is 0
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    pb.fp.obj.fs	PTR struct . size(2) Largest target is 0
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    pb.fp.dir_ptr	PTR unsigned char  size(2) Largest target is 0
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    pb.fp.obj.fs	PTR struct . size(2) Largest target is 0
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    file.fs	PTR struct . size(2) Largest target is 0
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    f_open@dj.fs	PTR struct . size(2) Largest target is 0
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    f_chdir@dj.fs	PTR struct . size(2) Largest target is 0
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    f_stat@dj.fs	PTR struct . size(2) Largest target is 0
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    f_unlink@dj.fs	PTR struct . size(2) Largest target is 0
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    f_unlink@sdj.fs	PTR struct . size(2) Largest target is 0
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    f_mkdir@dj.fs	PTR struct . size(2) Largest target is 0
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    f_rename@djo.fs	PTR struct . size(2) Largest target is 0
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    f_rename@djn.fs	PTR struct . size(2) Largest target is 0
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    Fil.fs	PTR struct . size(2) Largest target is 0
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    S35$4$0	PTR void  size(2) Largest target is 0

    S35$5$0	PTR void  size(2) Largest target is 0

    Absolute function$0	PTR FTN()void  size(2) Largest target is 0

    ?___simple_search_fl...next	PTR struct chunk size(2) Largest target is 0

    S35$3$0	PTR void  size(2) Largest target is 3895
		 -> __heap_hi(UNKNOWN), RAM(DATA[3895]), Fil(BIGRAM[546]), FatFs(BIGRAM[563]), 
		 -> f_printf@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_gets@s(COMRAM[4]), 
		 -> file(BIGRAM[546]), drive(BIGRAM[563]), FatFsDemo_Tasks@data(COMRAM[13]), NULL(NULL[0]), 

    disk_ioctl@buff	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 3895
		 -> __heap_hi(UNKNOWN), RAM(DATA[3895]), STR_20(CODE[6]), STR_19(CODE[4]), 
		 -> STR_18(CODE[5]), STR_17(CODE[11]), STR_14(CODE[3]), temp_data(BANK1[20]), 
		 -> vel_data(BANK1[20]), hum_data(BANK1[20]), alt_data(BANK1[20]), NULL(NULL[0]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 3895
		 -> __heap_hi(UNKNOWN), RAM(DATA[3895]), STR_20(CODE[6]), STR_19(CODE[4]), 
		 -> STR_18(CODE[5]), STR_17(CODE[11]), STR_14(CODE[3]), temp_data(BANK1[20]), 
		 -> vel_data(BANK1[20]), hum_data(BANK1[20]), alt_data(BANK1[20]), NULL(NULL[0]), 

    memset@dest	PTR void  size(2) Largest target is 3895
		 -> __heap_hi(UNKNOWN), RAM(DATA[3895]), Fil(BIGRAM[546]), FatFs(BIGRAM[563]), 
		 -> f_printf@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_gets@s(COMRAM[4]), 
		 -> file(BIGRAM[546]), drive(BIGRAM[563]), FatFsDemo_Tasks@data(COMRAM[13]), NULL(NULL[0]), 

    memset@s	PTR unsigned char  size(2) Largest target is 3895
		 -> __heap_hi(UNKNOWN), RAM(DATA[3895]), Fil(BIGRAM[546]), FatFs(BIGRAM[563]), 
		 -> f_printf@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_gets@s(COMRAM[4]), 
		 -> file(BIGRAM[546]), drive(BIGRAM[563]), FatFsDemo_Tasks@data(COMRAM[13]), NULL(NULL[0]), 

    memcpy@d1	PTR void  size(2) Largest target is 4
		 -> SD_SendCmd@address_bytes(COMRAM[4]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 4
		 -> SD_SendCmd@address_bytes(COMRAM[4]), 

    memcpy@s1	PTR const void  size(2) Largest target is 4
		 -> SD_SendCmd@address(COMRAM[4]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> SD_SendCmd@address(COMRAM[4]), 

    free@c.....next	PTR struct chunk size(2) Largest target is 0

    free@c...next	PTR struct chunk size(2) Largest target is 0

    __simple_search_fl@best_last.....next	PTR struct chunk size(2) Largest target is 0

    __simple_search_fl@split.....next	PTR struct chunk size(2) Largest target is 0

    __simple_search_fl@split...next	PTR struct chunk size(2) Largest target is 0

    __simple_search_fl@split	PTR struct chunk size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    __simple_search_fl@next...next	PTR struct chunk size(2) Largest target is 0

    __simple_search_fl@next	PTR struct chunk size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    __simple_search_fl@best_last...next	PTR struct chunk size(2) Largest target is 0

    __simple_search_fl@best...next	PTR struct chunk size(2) Largest target is 0

    sp____simple_search_fl...next	PTR struct chunk size(2) Largest target is 0

    __freelist...next	PTR struct chunk size(2) Largest target is 0

    __simple_search_fl@last.....next	PTR struct chunk size(2) Largest target is 0

    __simple_search_fl@last...next	PTR struct chunk size(2) Largest target is 0

    S4047$next	PTR struct chunk size(2) Largest target is 0

    __simple_search_fl@c...next	PTR struct chunk size(2) Largest target is 0

    __simple_search_fl@c	PTR struct chunk size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    __freelist	PTR struct chunk size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    __simple_search_fl@last	PTR struct chunk size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    __simple_search_fl@best_last	PTR struct chunk size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    __simple_search_fl@best	PTR struct chunk size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    __expand_heap@new_brkp	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    brkp	PTR unsigned char  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    __expand_heap@pn	PTR unsigned int  size(2) Largest target is 2
		 -> malloc@m(COMRAM[2]), 

    malloc@sz	PTR unsigned int  size(2) Largest target is 3895
		 -> __heap_hi(UNKNOWN), RAM(DATA[3895]), NULL(NULL[0]), 

    sp____expand_heap	PTR void  size(2) Largest target is 0
		 -> __heap_hi(UNKNOWN), NULL(NULL[0]), 

    malloc@new	PTR unsigned char  size(2) Largest target is 3895
		 -> __heap_hi(UNKNOWN), RAM(DATA[3895]), NULL(NULL[0]), 

    malloc@end	PTR unsigned char  size(2) Largest target is 3895
		 -> __heap_hi(UNKNOWN), RAM(DATA[3895]), NULL(NULL[0]), 

    sp____simple_search_fl	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    malloc@cur	PTR unsigned char  size(2) Largest target is 3895
		 -> __heap_hi(UNKNOWN), RAM(DATA[3895]), NULL(NULL[0]), 

    malloc@p	PTR void  size(2) Largest target is 3895
		 -> __heap_hi(UNKNOWN), RAM(DATA[3895]), NULL(NULL[0]), 

    string_copy@source	PTR unsigned char  size(2) Largest target is 11
		 -> STR_16(CODE[11]), 

    string_copy@dest	PTR unsigned char  size(2) Largest target is 20
		 -> STR_17(CODE[11]), temp_data(BANK1[20]), 

    append@result	PTR unsigned char  size(2) Largest target is 3895
		 -> __heap_hi(UNKNOWN), RAM(DATA[3895]), NULL(NULL[0]), 

    append@source	PTR unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), 

    append@dest	PTR unsigned char  size(2) Largest target is 20
		 -> STR_20(CODE[6]), STR_19(CODE[4]), STR_18(CODE[5]), STR_17(CODE[11]), 
		 -> temp_data(BANK1[20]), vel_data(BANK1[20]), hum_data(BANK1[20]), alt_data(BANK1[20]), 

    get_vel_data@vel_string	PTR unsigned char  size(2) Largest target is 20
		 -> STR_20(CODE[6]), vel_data(BANK1[20]), 

    get_hum_data@hum_string	PTR unsigned char  size(2) Largest target is 20
		 -> STR_19(CODE[4]), hum_data(BANK1[20]), 

    get_alt_data@alt_string	PTR unsigned char  size(2) Largest target is 20
		 -> STR_18(CODE[5]), alt_data(BANK1[20]), 

    sp__string_copy	PTR unsigned char  size(2) Largest target is 20
		 -> STR_17(CODE[11]), temp_data(BANK1[20]), 

    get_temp_data@temp_string	PTR unsigned char  size(2) Largest target is 20
		 -> STR_17(CODE[11]), temp_data(BANK1[20]), 

    write_to_file@file_name	PTR unsigned char  size(2) Largest target is 13
		 -> STR_13(CODE[13]), STR_12(CODE[13]), STR_11(CODE[13]), STR_10(CODE[9]), 

    sp__malloc	PTR void  size(2) Largest target is 3895
		 -> __heap_hi(UNKNOWN), RAM(DATA[3895]), NULL(NULL[0]), 

    write_to_file@data	PTR unsigned char  size(2) Largest target is 20
		 -> STR_20(CODE[6]), STR_19(CODE[4]), STR_18(CODE[5]), STR_17(CODE[11]), 
		 -> temp_data(BANK1[20]), vel_data(BANK1[20]), hum_data(BANK1[20]), alt_data(BANK1[20]), 

    write_to_file@formatted_data	PTR unsigned char  size(2) Largest target is 3895
		 -> __heap_hi(UNKNOWN), RAM(DATA[3895]), NULL(NULL[0]), 

    sp__get_temp_data	PTR unsigned char  size(2) Largest target is 20
		 -> STR_17(CODE[11]), temp_data(BANK1[20]), 

    sp__get_vel_data	PTR unsigned char  size(2) Largest target is 20
		 -> STR_20(CODE[6]), vel_data(BANK1[20]), 

    sp__get_hum_data	PTR unsigned char  size(2) Largest target is 20
		 -> STR_19(CODE[4]), hum_data(BANK1[20]), 

    sp__get_alt_data	PTR unsigned char  size(2) Largest target is 20
		 -> STR_18(CODE[5]), alt_data(BANK1[20]), 

    main@vel_file	PTR unsigned char  size(2) Largest target is 13
		 -> STR_13(CODE[13]), 

    main@hum_file	PTR unsigned char  size(2) Largest target is 13
		 -> STR_12(CODE[13]), 

    main@alt_file	PTR unsigned char  size(2) Largest target is 13
		 -> STR_11(CODE[13]), 

    main@temp_file	PTR unsigned char  size(2) Largest target is 9
		 -> STR_10(CODE[9]), 

    Fil.dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    Fil.obj.fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    SPI1_ExchangeBlock@block	PTR void  size(2) Largest target is 3895
		 -> __heap_hi(UNKNOWN), RAM(DATA[3895]), Fil(BIGRAM[546]), FatFs(BIGRAM[563]), 
		 -> f_printf@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_gets@s(COMRAM[4]), 
		 -> file(BIGRAM[546]), drive(BIGRAM[563]), FatFsDemo_Tasks@data(COMRAM[13]), NULL(NULL[0]), 

    SPI1_ExchangeBlock@data	PTR unsigned char  size(2) Largest target is 3895
		 -> __heap_hi(UNKNOWN), RAM(DATA[3895]), Fil(BIGRAM[546]), FatFs(BIGRAM[563]), 
		 -> f_printf@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_gets@s(COMRAM[4]), 
		 -> file(BIGRAM[546]), drive(BIGRAM[563]), FatFsDemo_Tasks@data(COMRAM[13]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 4
		 -> SD_SendCmd@address_bytes(COMRAM[4]), 

    SD_SPI_AsyncWriteTasks@info.pBuffer	PTR unsigned char  size(2) Largest target is 3895
		 -> __heap_hi(UNKNOWN), RAM(DATA[3895]), Fil(BIGRAM[546]), FatFs(BIGRAM[563]), 
		 -> f_printf@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_gets@s(COMRAM[4]), 
		 -> file(BIGRAM[546]), drive(BIGRAM[563]), FatFsDemo_Tasks@data(COMRAM[13]), NULL(NULL[0]), 

    SD_SPI_AsyncWriteTasks@info	PTR struct SD_ASYNC_IO size(2) Largest target is 14
		 -> SD_SPI_SectorWrite@info(COMRAM[13]), 

    sp__memset	PTR void  size(2) Largest target is 3895
		 -> __heap_hi(UNKNOWN), RAM(DATA[3895]), Fil(BIGRAM[546]), FatFs(BIGRAM[563]), 
		 -> f_printf@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_gets@s(COMRAM[4]), 
		 -> file(BIGRAM[546]), drive(BIGRAM[563]), FatFsDemo_Tasks@data(COMRAM[13]), NULL(NULL[0]), 

    SD_SPI_AsyncReadTasks@info.pBuffer	PTR unsigned char  size(2) Largest target is 3895
		 -> __heap_hi(UNKNOWN), RAM(DATA[3895]), Fil(BIGRAM[546]), FatFs(BIGRAM[563]), 
		 -> f_printf@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_gets@s(COMRAM[4]), 
		 -> file(BIGRAM[546]), drive(BIGRAM[563]), FatFsDemo_Tasks@data(COMRAM[13]), NULL(NULL[0]), 

    SD_SPI_AsyncReadTasks@info	PTR struct SD_ASYNC_IO size(2) Largest target is 14
		 -> SD_SPI_SectorRead@info(COMRAM[13]), 

    SD_SPI_SectorWrite@buffer	PTR const unsigned char  size(2) Largest target is 3895
		 -> drive.win(BIGRAM[512]), file.buf(BIGRAM[512]), pb.buf(COMRAM[64]), pb.buf(COMRAM[64]), 
		 -> pb.buf(COMRAM[64]), FatFs.win(BIGRAM[512]), Fil.buf(BIGRAM[512]), __heap_hi(UNKNOWN), 
		 -> RAM(DATA[3895]), Fil(BIGRAM[546]), FatFs(BIGRAM[563]), f_printf@pb(COMRAM[70]), 
		 -> f_puts@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), file(BIGRAM[546]), drive(BIGRAM[563]), 
		 -> FatFsDemo_Tasks@data(COMRAM[13]), NULL(NULL[0]), 

    info.pBuffer	PTR unsigned char  size(2) Largest target is 3895
		 -> drive.win(BIGRAM[512]), file.buf(BIGRAM[512]), pb.buf(COMRAM[64]), pb.buf(COMRAM[64]), 
		 -> pb.buf(COMRAM[64]), FatFs.win(BIGRAM[512]), Fil.buf(BIGRAM[512]), __heap_hi(UNKNOWN), 
		 -> RAM(DATA[3895]), Fil(BIGRAM[546]), FatFs(BIGRAM[563]), f_printf@pb(COMRAM[70]), 
		 -> f_puts@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_gets@s(COMRAM[4]), file(BIGRAM[546]), 
		 -> drive(BIGRAM[563]), FatFsDemo_Tasks@data(COMRAM[13]), NULL(NULL[0]), 

    SD_SPI_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 563
		 -> Fil(BIGRAM[546]), FatFs(BIGRAM[563]), pb.fp(COMRAM[3]), pb.fp(COMRAM[3]), 
		 -> pb.fp(COMRAM[3]), f_gets@s(COMRAM[4]), file(BIGRAM[546]), drive(BIGRAM[563]), 
		 -> NULL(NULL[0]), 

    info.pBuffer	PTR unsigned char  size(2) Largest target is 3895
		 -> __heap_hi(UNKNOWN), RAM(DATA[3895]), Fil(BIGRAM[546]), FatFs(BIGRAM[563]), 
		 -> f_printf@pb(COMRAM[70]), pb.fp(COMRAM[3]), f_puts@pb(COMRAM[70]), pb.fp(COMRAM[3]), 
		 -> f_putc@pb(COMRAM[70]), pb.fp(COMRAM[3]), f_gets@s(COMRAM[4]), file(BIGRAM[546]), 
		 -> drive(BIGRAM[563]), FatFsDemo_Tasks@data(COMRAM[13]), NULL(NULL[0]), 

    S2289SD_ASYNC_IO$pBuffer	PTR unsigned char  size(2) Largest target is 3895
		 -> __heap_hi(UNKNOWN), RAM(DATA[3895]), Fil(BIGRAM[546]), FatFs(BIGRAM[563]), 
		 -> f_printf@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_gets@s(COMRAM[4]), 
		 -> file(BIGRAM[546]), drive(BIGRAM[563]), FatFsDemo_Tasks@data(COMRAM[13]), NULL(NULL[0]), 

    ioInfo.pBuffer	PTR unsigned char  size(2) Largest target is 3895
		 -> __heap_hi(UNKNOWN), RAM(DATA[3895]), Fil(BIGRAM[546]), FatFs(BIGRAM[563]), 
		 -> f_printf@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), f_gets@s(COMRAM[4]), 
		 -> file(BIGRAM[546]), drive(BIGRAM[563]), FatFsDemo_Tasks@data(COMRAM[13]), NULL(NULL[0]), 

    pb.fp	PTR struct . size(2) Largest target is 0

    pb.fp	PTR struct . size(2) Largest target is 0

    pb.fp	PTR struct . size(2) Largest target is 0

    putc_init@pb.fp.fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    putc_init@pb.fp.dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    putc_init@pb.fp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    putc_init@pb.fp	PTR struct . size(2) Largest target is 0

    putc_flush@pb.fp	PTR struct . size(2) Largest target is 0

    S428$fp	PTR struct . size(2) Largest target is 0

    putc_bfd@pb.fp	PTR struct . size(2) Largest target is 0

    sp__f_gets	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    djn.dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    djn.obj.fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    djo.dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    djo.obj.fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    dj.dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    dj.obj.fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    sdj.dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    sdj.obj.fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    dj.dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    dj.obj.fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    f_truncate@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    f_truncate@fp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    obj.fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    dj.dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    dj.obj.fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    f_readdir@dp.dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    f_readdir@dp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    f_closedir@dp.dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    f_closedir@dp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    f_opendir@dp.dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    f_opendir@dp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    f_lseek@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    f_lseek@fp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    f_lseek@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    f_lseek@fp	PTR struct . size(2) Largest target is 548
		 -> Fil(BIGRAM[546]), 

    dj.dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    dj.obj.fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    f_close@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    f_close@fp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    f_close@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    f_close@fp	PTR struct . size(2) Largest target is 548
		 -> Fil(BIGRAM[546]), file(BIGRAM[546]), 

    f_sync@dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    f_sync@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    f_sync@fp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    f_sync@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    f_sync@fp	PTR struct . size(2) Largest target is 548
		 -> Fil(BIGRAM[546]), file(BIGRAM[546]), 

    f_write@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    f_write@fp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    f_write@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    f_write@fp	PTR struct . size(2) Largest target is 548
		 -> Fil(BIGRAM[546]), pb.fp(COMRAM[3]), pb.fp(COMRAM[3]), pb.fp(COMRAM[3]), 
		 -> file(BIGRAM[546]), 

    f_write@bw	PTR unsigned int  size(2) Largest target is 2
		 -> write_to_file@bw(BANK0[2]), putc_flush@nw(COMRAM[2]), putc_bfd@n(COMRAM[2]), FatFsDemo_Tasks@actualLength(COMRAM[2]), 

    f_write@buff	PTR const void  size(2) Largest target is 3895
		 -> pb.buf(COMRAM[64]), pb.buf(COMRAM[64]), pb.buf(COMRAM[64]), __heap_hi(UNKNOWN), 
		 -> RAM(DATA[3895]), f_printf@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), 
		 -> FatFsDemo_Tasks@data(COMRAM[13]), NULL(NULL[0]), 

    f_write@wbuff	PTR const unsigned char  size(2) Largest target is 3895
		 -> pb.buf(COMRAM[64]), pb.buf(COMRAM[64]), pb.buf(COMRAM[64]), __heap_hi(UNKNOWN), 
		 -> RAM(DATA[3895]), f_printf@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), 
		 -> FatFsDemo_Tasks@data(COMRAM[13]), NULL(NULL[0]), 

    f_read@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    f_read@fp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    f_open@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    f_open@fp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    f_open@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    f_open@path	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_15(CODE[1]), STR_13(CODE[13]), STR_12(CODE[13]), STR_11(CODE[13]), 
		 -> STR_10(CODE[9]), STR_3(CODE[3]), STR_2(CODE[10]), STR_1(CODE[3]), 

    f_open@fp	PTR struct . size(2) Largest target is 548
		 -> Fil(BIGRAM[546]), file(BIGRAM[546]), 

    dj.dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    dj.obj.fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    f_mount@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    f_mount@cfs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    f_mount@path	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_15(CODE[1]), STR_13(CODE[13]), STR_12(CODE[13]), STR_11(CODE[13]), 
		 -> STR_10(CODE[9]), STR_3(CODE[3]), STR_2(CODE[10]), STR_1(CODE[3]), 

    f_mount@rp	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_15(CODE[1]), STR_13(CODE[13]), STR_12(CODE[13]), STR_11(CODE[13]), 
		 -> STR_10(CODE[9]), STR_3(CODE[3]), STR_2(CODE[10]), STR_1(CODE[3]), 

    validate$1262	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    validate@rfs	PTR PTR struct . size(2) Largest target is 2
		 -> f_truncate@fs(COMRAM[2]), f_readdir@fs(COMRAM[2]), f_closedir@fs(COMRAM[2]), f_lseek@fs(BANK0[2]), 
		 -> f_close@fs(BANK0[2]), f_sync@fs(BANK0[2]), f_write@fs(BANK0[2]), f_read@fs(COMRAM[2]), 

    validate@obj.fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    validate@obj	PTR struct . size(2) Largest target is 548
		 -> Fil(BIGRAM[546]), pb.fp(COMRAM[3]), pb.fp(COMRAM[3]), pb.fp(COMRAM[3]), 
		 -> file(BIGRAM[546]), 

    find_volume@pt	PTR unsigned char  size(2) Largest target is 563
		 -> drive.win(BIGRAM[512]), FatFs.win(BIGRAM[512]), FatFs(BIGRAM[563]), drive(BIGRAM[563]), 
		 -> NULL(NULL[0]), 

    FatFs@ff$F442	PTR struct .[1] size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    find_volume@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    find_volume@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> f_rename@path_old(COMRAM[2]), f_mkdir@path(COMRAM[2]), f_unlink@path(COMRAM[2]), f_getfree@path(COMRAM[2]), 
		 -> f_stat@path(COMRAM[2]), f_opendir@path(COMRAM[2]), f_chdir@path(COMRAM[2]), f_open@path(BANK0[2]), 
		 -> f_mount@path(BANK0[2]), 

    find_volume@rfs	PTR PTR struct . size(2) Largest target is 42
		 -> f_rename@fs(COMRAM[2]), f_mkdir@fs(COMRAM[2]), f_unlink@fs(COMRAM[2]), f_getfree@fs(COMRAM[2]), 
		 -> dj.obj(COMRAM[15]), f_stat@dj(COMRAM[40]), f_opendir@fs(COMRAM[2]), f_chdir@fs(COMRAM[2]), 
		 -> f_open@fs(BANK1[2]), f_mount@fs(BANK0[2]), 

    check_fs@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    get_ldnumber@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> f_rename@path_old(COMRAM[2]), f_rename@path_new(COMRAM[2]), f_mkdir@path(COMRAM[2]), f_unlink@path(COMRAM[2]), 
		 -> f_getfree@path(COMRAM[2]), f_stat@path(COMRAM[2]), f_opendir@path(COMRAM[2]), f_chdir@path(COMRAM[2]), 
		 -> f_chdrive@path(COMRAM[2]), f_open@path(BANK0[2]), f_mount@path(BANK0[2]), f_mount@rp(BANK0[2]), 

    get_ldnumber@tp	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_15(CODE[1]), STR_13(CODE[13]), STR_12(CODE[13]), STR_11(CODE[13]), 
		 -> STR_10(CODE[9]), STR_3(CODE[3]), STR_2(CODE[10]), STR_1(CODE[3]), 

    get_ldnumber@tt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_15(CODE[1]), STR_13(CODE[13]), STR_12(CODE[13]), STR_11(CODE[13]), 
		 -> STR_10(CODE[9]), STR_3(CODE[3]), STR_2(CODE[10]), STR_1(CODE[3]), 

    follow_path@path	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_15(CODE[1]), STR_13(CODE[13]), STR_12(CODE[13]), STR_11(CODE[13]), 
		 -> STR_10(CODE[9]), STR_3(CODE[3]), STR_2(CODE[10]), STR_1(CODE[3]), 

    follow_path@dp.dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    follow_path@dp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    follow_path@dp	PTR struct . size(2) Largest target is 42
		 -> f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), f_mkdir@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), 
		 -> f_stat@dj(COMRAM[40]), f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), 

    follow_path@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    create_name@dp.dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    create_name@dp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    create_name@dp	PTR struct . size(2) Largest target is 42
		 -> f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), f_mkdir@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), 
		 -> f_stat@dj(COMRAM[40]), f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), 

    create_name@sfn	PTR unsigned char  size(2) Largest target is 42
		 -> djn.fn(COMRAM[12]), f_rename@djn(COMRAM[40]), djo.fn(COMRAM[12]), f_rename@djo(COMRAM[40]), 
		 -> dj.fn(COMRAM[12]), f_mkdir@dj(COMRAM[40]), dj.fn(COMRAM[12]), f_unlink@dj(COMRAM[40]), 
		 -> dj.fn(COMRAM[12]), f_stat@dj(COMRAM[40]), dj.fn(COMRAM[12]), f_chdir@dj(COMRAM[40]), 
		 -> dj.fn(COMRAM[12]), f_open@dj(BANK1[40]), 

    create_name@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> follow_path@path(BANK0[2]), 

    create_name@p	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_15(CODE[1]), STR_13(CODE[13]), STR_12(CODE[13]), STR_11(CODE[13]), 
		 -> STR_10(CODE[9]), STR_3(CODE[3]), STR_2(CODE[10]), STR_1(CODE[3]), 

    get_fileinfo@dp.dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    get_fileinfo@dp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    dir_remove@dp.dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    dir_remove@dp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    dir_register@dp.dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    dir_register@dp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    dir_register@dp	PTR struct . size(2) Largest target is 42
		 -> f_rename@djn(COMRAM[40]), f_mkdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), 

    dir_register@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    dir_find@dp.dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    dir_find@dp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    dir_find@dp	PTR struct . size(2) Largest target is 42
		 -> f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), f_mkdir@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), 
		 -> f_stat@dj(COMRAM[40]), f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), 

    dir_find@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    dir_read@dp.dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    dir_read@dp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    st_clust@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    st_clust@dir	PTR unsigned char  size(2) Largest target is 563
		 -> drive.win(BIGRAM[512]), FatFs.win(BIGRAM[512]), FatFs(BIGRAM[563]), drive(BIGRAM[563]), 
		 -> NULL(NULL[0]), 

    ld_clust@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    ld_clust@dir	PTR const unsigned char  size(2) Largest target is 563
		 -> drive.win(BIGRAM[512]), FatFs.win(BIGRAM[512]), FatFs(BIGRAM[563]), drive(BIGRAM[563]), 
		 -> NULL(NULL[0]), 

    dir_alloc@dp.dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    dir_alloc@dp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    dir_alloc@dp	PTR struct . size(2) Largest target is 42
		 -> f_rename@djn(COMRAM[40]), f_mkdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), 

    dir_alloc@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    dir_next@dp.dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    dir_next@dp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    dir_next@dp	PTR struct . size(2) Largest target is 42
		 -> f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), f_mkdir@dj(COMRAM[40]), f_unlink@sdj(COMRAM[40]), 
		 -> f_unlink@dj(COMRAM[40]), f_stat@dj(COMRAM[40]), f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), 

    dir_next@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    S403$dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    dir_sdi@dp.dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    dir_sdi@dp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    dir_sdi@dp	PTR struct . size(2) Largest target is 42
		 -> f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), f_mkdir@dj(COMRAM[40]), f_unlink@sdj(COMRAM[40]), 
		 -> f_unlink@dj(COMRAM[40]), f_stat@dj(COMRAM[40]), f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), 

    dir_sdi@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    dir_clear@ibuf	PTR unsigned char  size(2) Largest target is 563
		 -> drive.win(BIGRAM[512]), FatFs.win(BIGRAM[512]), FatFs(BIGRAM[563]), drive(BIGRAM[563]), 
		 -> NULL(NULL[0]), 

    dir_clear@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    create_chain@obj.fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    create_chain@obj	PTR struct . size(2) Largest target is 548
		 -> Fil(BIGRAM[546]), pb.fp(COMRAM[3]), pb.fp(COMRAM[3]), pb.fp(COMRAM[3]), 
		 -> f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), f_mkdir@dj(COMRAM[40]), f_unlink@sdj(COMRAM[40]), 
		 -> f_unlink@dj(COMRAM[40]), f_stat@dj(COMRAM[40]), f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), 
		 -> file(BIGRAM[546]), 

    create_chain@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    remove_chain@obj.fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    remove_chain@obj	PTR struct . size(2) Largest target is 42
		 -> f_mkdir@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), f_open@dj(BANK1[40]), 

    remove_chain@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    put_fat@p	PTR unsigned char  size(2) Largest target is 563
		 -> drive.win(BIGRAM[512]), FatFs.win(BIGRAM[512]), FatFs(BIGRAM[563]), drive(BIGRAM[563]), 
		 -> NULL(NULL[0]), 

    put_fat@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    get_fat@obj.fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    get_fat@obj	PTR struct . size(2) Largest target is 548
		 -> Fil(BIGRAM[546]), pb.fp(COMRAM[3]), pb.fp(COMRAM[3]), pb.fp(COMRAM[3]), 
		 -> f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), f_mkdir@dj(COMRAM[40]), f_unlink@sdj(COMRAM[40]), 
		 -> f_unlink@dj(COMRAM[40]), f_getfree@obj(COMRAM[14]), f_stat@dj(COMRAM[40]), f_chdir@dj(COMRAM[40]), 
		 -> f_open@dj(BANK1[40]), file(BIGRAM[546]), 

    get_fat@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    clst2sect@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    sync_fs@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    move_window@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    sync_window@fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    chk_chr@str	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_5(CODE[15]), 

    mem_cmp@src	PTR const void  size(2) Largest target is 42
		 -> djn.fn(COMRAM[12]), f_rename@djn(COMRAM[40]), djo.fn(COMRAM[12]), f_rename@djo(COMRAM[40]), 
		 -> dj.fn(COMRAM[12]), f_mkdir@dj(COMRAM[40]), dj.fn(COMRAM[12]), f_unlink@dj(COMRAM[40]), 
		 -> dj.fn(COMRAM[12]), f_stat@dj(COMRAM[40]), dj.fn(COMRAM[12]), f_chdir@dj(COMRAM[40]), 
		 -> dj.fn(COMRAM[12]), f_open@dj(BANK1[40]), STR_9(CODE[6]), STR_7(CODE[4]), 

    mem_cmp@s	PTR const unsigned char  size(2) Largest target is 42
		 -> djn.fn(COMRAM[12]), f_rename@djn(COMRAM[40]), djo.fn(COMRAM[12]), f_rename@djo(COMRAM[40]), 
		 -> dj.fn(COMRAM[12]), f_mkdir@dj(COMRAM[40]), dj.fn(COMRAM[12]), f_unlink@dj(COMRAM[40]), 
		 -> dj.fn(COMRAM[12]), f_stat@dj(COMRAM[40]), dj.fn(COMRAM[12]), f_chdir@dj(COMRAM[40]), 
		 -> dj.fn(COMRAM[12]), f_open@dj(BANK1[40]), STR_9(CODE[6]), STR_7(CODE[4]), 

    mem_cmp@dst	PTR const void  size(2) Largest target is 563
		 -> drive.win(BIGRAM[512]), FatFs.win(BIGRAM[512]), FatFs(BIGRAM[563]), drive(BIGRAM[563]), 
		 -> NULL(NULL[0]), 

    mem_cmp@d	PTR const unsigned char  size(2) Largest target is 563
		 -> drive.win(BIGRAM[512]), FatFs.win(BIGRAM[512]), FatFs(BIGRAM[563]), drive(BIGRAM[563]), 
		 -> NULL(NULL[0]), 

    mem_set@dst	PTR void  size(2) Largest target is 563
		 -> drive.win(BIGRAM[512]), djn.fn(COMRAM[12]), FatFs.win(BIGRAM[512]), Fil(BIGRAM[546]), 
		 -> FatFs(BIGRAM[563]), f_printf@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), 
		 -> f_rename@djn(COMRAM[40]), djo.fn(COMRAM[12]), f_rename@djo(COMRAM[40]), dj.fn(COMRAM[12]), 
		 -> f_mkdir@dj(COMRAM[40]), dj.fn(COMRAM[12]), f_unlink@dj(COMRAM[40]), dj.fn(COMRAM[12]), 
		 -> f_stat@dj(COMRAM[40]), dj.fn(COMRAM[12]), f_chdir@dj(COMRAM[40]), dj.fn(COMRAM[12]), 
		 -> f_open@dj(BANK1[40]), file(BIGRAM[546]), drive(BIGRAM[563]), NULL(NULL[0]), 

    mem_set@d	PTR unsigned char  size(2) Largest target is 563
		 -> drive.win(BIGRAM[512]), djn.fn(COMRAM[12]), FatFs.win(BIGRAM[512]), Fil(BIGRAM[546]), 
		 -> FatFs(BIGRAM[563]), f_printf@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), 
		 -> f_rename@djn(COMRAM[40]), djo.fn(COMRAM[12]), f_rename@djo(COMRAM[40]), dj.fn(COMRAM[12]), 
		 -> f_mkdir@dj(COMRAM[40]), dj.fn(COMRAM[12]), f_unlink@dj(COMRAM[40]), dj.fn(COMRAM[12]), 
		 -> f_stat@dj(COMRAM[40]), dj.fn(COMRAM[12]), f_chdir@dj(COMRAM[40]), dj.fn(COMRAM[12]), 
		 -> f_open@dj(BANK1[40]), file(BIGRAM[546]), drive(BIGRAM[563]), NULL(NULL[0]), 

    mem_cpy@src	PTR const void  size(2) Largest target is 3895
		 -> drive.win(BIGRAM[512]), djn.fn(COMRAM[12]), pb.buf(COMRAM[64]), pb.buf(COMRAM[64]), 
		 -> pb.buf(COMRAM[64]), FatFs.win(BIGRAM[512]), __heap_hi(UNKNOWN), RAM(DATA[3895]), 
		 -> FatFs(BIGRAM[563]), f_printf@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), 
		 -> f_rename@djn(COMRAM[40]), f_rename@buf(COMRAM[32]), f_rename@djo(COMRAM[40]), dj.fn(COMRAM[12]), 
		 -> f_mkdir@dj(COMRAM[40]), dj.fn(COMRAM[12]), f_open@dj(BANK1[40]), drive(BIGRAM[563]), 
		 -> FatFsDemo_Tasks@data(COMRAM[13]), NULL(NULL[0]), 

    mem_cpy@s	PTR const unsigned char  size(2) Largest target is 3895
		 -> drive.win(BIGRAM[512]), djn.fn(COMRAM[12]), pb.buf(COMRAM[64]), pb.buf(COMRAM[64]), 
		 -> pb.buf(COMRAM[64]), FatFs.win(BIGRAM[512]), __heap_hi(UNKNOWN), RAM(DATA[3895]), 
		 -> FatFs(BIGRAM[563]), f_printf@pb(COMRAM[70]), f_puts@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), 
		 -> f_rename@djn(COMRAM[40]), f_rename@buf(COMRAM[32]), f_rename@djo(COMRAM[40]), dj.fn(COMRAM[12]), 
		 -> f_mkdir@dj(COMRAM[40]), dj.fn(COMRAM[12]), f_open@dj(BANK1[40]), drive(BIGRAM[563]), 
		 -> FatFsDemo_Tasks@data(COMRAM[13]), NULL(NULL[0]), 

    mem_cpy@dst	PTR void  size(2) Largest target is 563
		 -> drive.win(BIGRAM[512]), file.buf(BIGRAM[512]), FatFs.win(BIGRAM[512]), Fil.buf(BIGRAM[512]), 
		 -> Fil(BIGRAM[546]), FatFs(BIGRAM[563]), pb.fp(COMRAM[3]), pb.fp(COMRAM[3]), 
		 -> pb.fp(COMRAM[3]), f_gets@s(COMRAM[4]), f_rename@djn(COMRAM[40]), f_rename@buf(COMRAM[32]), 
		 -> file(BIGRAM[546]), drive(BIGRAM[563]), NULL(NULL[0]), 

    mem_cpy@d	PTR unsigned char  size(2) Largest target is 563
		 -> drive.win(BIGRAM[512]), file.buf(BIGRAM[512]), FatFs.win(BIGRAM[512]), Fil.buf(BIGRAM[512]), 
		 -> Fil(BIGRAM[546]), FatFs(BIGRAM[563]), pb.fp(COMRAM[3]), pb.fp(COMRAM[3]), 
		 -> pb.fp(COMRAM[3]), f_gets@s(COMRAM[4]), f_rename@djn(COMRAM[40]), f_rename@buf(COMRAM[32]), 
		 -> file(BIGRAM[546]), drive(BIGRAM[563]), NULL(NULL[0]), 

    st_dword@ptr	PTR unsigned char  size(2) Largest target is 563
		 -> drive.win(BIGRAM[512]), FatFs.win(BIGRAM[512]), FatFs(BIGRAM[563]), drive(BIGRAM[563]), 
		 -> NULL(NULL[0]), 

    st_word@ptr	PTR unsigned char  size(2) Largest target is 563
		 -> drive.win(BIGRAM[512]), FatFs.win(BIGRAM[512]), FatFs(BIGRAM[563]), drive(BIGRAM[563]), 
		 -> NULL(NULL[0]), 

    ld_dword@ptr	PTR const unsigned char  size(2) Largest target is 563
		 -> drive.win(BIGRAM[512]), FatFs.win(BIGRAM[512]), FatFs(BIGRAM[563]), drive(BIGRAM[563]), 
		 -> NULL(NULL[0]), 

    ld_word@ptr	PTR const unsigned char  size(2) Largest target is 563
		 -> drive.win(BIGRAM[512]), FatFs.win(BIGRAM[512]), FatFs(BIGRAM[563]), drive(BIGRAM[563]), 
		 -> NULL(NULL[0]), 

    S244$dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    file.dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    S237$fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    file.obj.fs	PTR struct . size(2) Largest target is 563
		 -> FatFs(BIGRAM[563]), drive(BIGRAM[563]), NULL(NULL[0]), 

    disk_write@buff	PTR const unsigned char  size(2) Largest target is 3895
		 -> drive.win(BIGRAM[512]), file.buf(BIGRAM[512]), pb.buf(COMRAM[64]), pb.buf(COMRAM[64]), 
		 -> pb.buf(COMRAM[64]), FatFs.win(BIGRAM[512]), Fil.buf(BIGRAM[512]), __heap_hi(UNKNOWN), 
		 -> RAM(DATA[3895]), Fil(BIGRAM[546]), FatFs(BIGRAM[563]), f_printf@pb(COMRAM[70]), 
		 -> f_puts@pb(COMRAM[70]), f_putc@pb(COMRAM[70]), file(BIGRAM[546]), drive(BIGRAM[563]), 
		 -> FatFsDemo_Tasks@data(COMRAM[13]), NULL(NULL[0]), 

    disk_read@buff	PTR unsigned char  size(2) Largest target is 563
		 -> Fil(BIGRAM[546]), FatFs(BIGRAM[563]), pb.fp(COMRAM[3]), pb.fp(COMRAM[3]), 
		 -> pb.fp(COMRAM[3]), f_gets@s(COMRAM[4]), file(BIGRAM[546]), drive(BIGRAM[563]), 
		 -> NULL(NULL[0]), 

    S35$spiISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    spiMaster.spiISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S35$setSpiISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    spiMaster.setSpiISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S35$readByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ReadByte(), 

    spiMaster.readByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ReadByte(), 

    S35$writeByte	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_WriteByte(), 

    spiMaster.writeByte	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_WriteByte(), 

    S35$readBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_ReadBlock(), 

    spiMaster.readBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_ReadBlock(), 

    S35$writeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_WriteBlock(), 

    spiMaster.writeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_WriteBlock(), 

    S35$exchangeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_ExchangeBlock(), 

    spiMaster.exchangeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_ExchangeBlock(), 

    S35$exchangeByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ExchangeByte(), 

    spiMaster.exchangeByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ExchangeByte(), 

    S35$spiOpen	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SDSLOW_open(), SDFAST_open(), 

    spiMaster.spiOpen	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SDSLOW_open(), SDFAST_open(), 

    S35$spiClose	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    spiMaster.spiClose	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 


Critical Paths under _main in COMRAM

    _malloc->___simple_search_fl
    _f_open->_move_window
    _ld_clust->_ld_word
    _dir_find->_move_window
    _create_name->_mem_set
    _dir_register->_move_window
    _dir_alloc->_move_window
    _dir_clear->_sync_window
    _find_volume->_move_window
    _disk_initialize->_SD_SPI_MediaInitialize
    _SD_SPI_MediaInitialize->_SD_SendCmd
    _SD_SPI_DelayMilliseconds->_SPI1_ExchangeByte
    _check_fs->_move_window
    _put_fat->_move_window
    _get_fat->_move_window
    _clst2sect->___lmul
    _f_sync->_move_window
    _validate->_disk_status
    _sync_fs->_sync_window
    _st_clust->_st_word
    _move_window->_sync_window
    _sync_window->_disk_write
    _disk_write->_SD_SPI_SectorWrite
    _SD_SPI_SectorWrite->_SD_SPI_AsyncWriteTasks
    _SD_SPI_AsyncWriteTasks->_SD_SendCmd
    _disk_read->_SD_SPI_SectorRead
    _SD_SPI_SectorRead->_SD_SPI_AsyncReadTasks
    _SD_SPI_AsyncReadTasks->_SD_SendCmd
    _SD_SendCmd->_memcpy
    _SDSLOW_open->_SPI1_Open
    _SDFAST_open->_SPI1_Open
    _append->_strlen
    _get_temp_data->_string_copy

Critical Paths under _main in BANK0

    _main->_write_to_file
    _write_to_file->_f_open
    _f_write->_create_chain
    _f_open->_follow_path
    _remove_chain->_put_fat
    _follow_path->_dir_find
    _dir_find->_dir_next
    _dir_register->_dir_alloc
    _dir_alloc->_dir_next
    _dir_sdi->_get_fat
    _dir_next->_create_chain
    _dir_clear->_sync_window
    _f_mount->_find_volume
    _find_volume->_check_fs
    _check_fs->_move_window
    _f_lseek->_create_chain
    _create_chain->_put_fat
    _put_fat->_move_window
    _get_fat->_move_window
    _f_close->_f_sync
    _f_sync->_sync_fs
    _sync_fs->_sync_window
    _move_window->_sync_window

Critical Paths under _main in BANK1

    _write_to_file->_f_open

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  820165
                                             67 BANK1      8     8      0
                  _SYSTEM_Initialize
                       _get_alt_data
                       _get_hum_data
                      _get_temp_data
                       _get_vel_data
                      _write_to_file
 ---------------------------------------------------------------------------------
 (1) _write_to_file                                       14    10      4  819285
                                            146 BANK0     14    10      4
                             _append
                            _f_close
                            _f_lseek
                            _f_mount
                             _f_open
                            _f_write
                       _get_alt_data (ARG)
                       _get_hum_data (ARG)
                      _get_temp_data (ARG)
                       _get_vel_data (ARG)
                             _malloc
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _malloc                                              14    12      2    1726
                                             20 COMRAM    12    10      2
                      ___expand_heap
                 ___simple_search_fl
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (3) ___simple_search_fl                                  20    18      2     915
                                              0 COMRAM    20    18      2
 ---------------------------------------------------------------------------------
 (3) ___expand_heap                                        8     6      2     224
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (2) _f_write                                             43    35      8   76149
                                             85 BANK0     43    35      8
                          _clst2sect
                       _create_chain
                          _disk_read
                         _disk_write
                            _mem_cpy
                           _validate
 ---------------------------------------------------------------------------------
 (2) _f_open                                              82    77      5  527683
                                            133 BANK0     13     8      5
                                              0 BANK1     67    67      0
                          _clst2sect
                       _dir_register
                          _disk_read
                        _find_volume
                        _follow_path
                            _get_fat
                           _ld_clust
                           _ld_dword
                            _mem_set
                        _move_window
                       _remove_chain
                           _st_clust
                           _st_dword
 ---------------------------------------------------------------------------------
 (3) _remove_chain                                        25    15     10   51119
                                             56 BANK0     25    15     10
                            _get_fat
                            _put_fat
 ---------------------------------------------------------------------------------
 (3) _follow_path                                         14    10      4  185041
                                            119 BANK0     14    10      4
                        _create_name
                           _dir_find
                            _dir_sdi
                           _ld_clust
 ---------------------------------------------------------------------------------
 (3) _ld_clust                                            12     8      4    2761
                                              7 COMRAM    12     8      4
                            _ld_word
 ---------------------------------------------------------------------------------
 (4) _dir_find                                             8     6      2  148025
                                            111 BANK0      8     6      2
                           _dir_next
                            _dir_sdi
                            _mem_cmp
                        _move_window
 ---------------------------------------------------------------------------------
 (4) _create_name                                         22    18      4    3880
                                              8 COMRAM    22    18      4
                            _chk_chr
                            _dbc_1st
                            _dbc_2nd
                            _mem_set
 ---------------------------------------------------------------------------------
 (5) _dbc_2nd                                              3     1      2      22
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (5) _dbc_1st                                              3     1      2      22
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (5) _chk_chr                                              6     2      4     267
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _dir_register                                         5     3      2  170606
                                            123 BANK0      5     3      2
                          _dir_alloc
                            _mem_cpy
                            _mem_set
                        _move_window
 ---------------------------------------------------------------------------------
 (3) _mem_cpy                                             10     4      6    2539
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (4) _dir_alloc                                           12     8      4  147088
                                            111 BANK0     12     8      4
                           _dir_next
                            _dir_sdi
                        _move_window
 ---------------------------------------------------------------------------------
 (4) _dir_sdi                                             30    24      6   28299
                                             49 BANK0     26    20      6
                          _clst2sect
                            _get_fat
 ---------------------------------------------------------------------------------
 (5) _dir_next                                            30    26      4   99788
                                             85 BANK0     26    22      4
                          _clst2sect
                       _create_chain
                          _dir_clear
                            _get_fat
 ---------------------------------------------------------------------------------
 (6) _dir_clear                                           18    12      6   20189
                                             91 COMRAM     2     2      0
                                             16 BANK0     16    10      6
                          _clst2sect
                         _disk_write
                            _mem_set
                        _sync_window
 ---------------------------------------------------------------------------------
 (2) _f_mount                                             12     7      5   57300
                                            101 BANK0     12     7      5
                        _find_volume
                       _get_ldnumber
 ---------------------------------------------------------------------------------
 (3) _find_volume                                         71    66      5   55392
                                             30 BANK0     71    66      5
                            ___lldiv
                             ___lmul
                           _check_fs
                    _disk_initialize
                        _disk_status
                       _get_ldnumber
                           _ld_dword
                            _ld_word
                        _move_window
 ---------------------------------------------------------------------------------
 (4) _get_ldnumber                                        15    13      2     785
                                              0 COMRAM    13    11      2
 ---------------------------------------------------------------------------------
 (4) _disk_initialize                                      4     4      0    4904
                                             84 COMRAM     4     4      0
             _SD_SPI_MediaInitialize
 ---------------------------------------------------------------------------------
 (5) _SD_SPI_MediaInitialize                              50    50      0    4857
                                             34 COMRAM    50    50      0
                        _SDFAST_open *
                        _SDSLOW_open *
           _SD_SPI_DelayMilliseconds
                         _SD_SendCmd
                         _SPI1_Close *
                  _SPI1_ExchangeByte *
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _SD_SPI_DelayMilliseconds                             5     5      0      67
                                              1 COMRAM     5     5      0
                  _SPI1_ExchangeByte *
 ---------------------------------------------------------------------------------
 (4) _check_fs                                             7     1      6   21470
                                             23 BANK0      7     1      6
                            _ld_word
                            _mem_cmp
                        _move_window
 ---------------------------------------------------------------------------------
 (5) _mem_cmp                                             14     8      6     961
                                              0 COMRAM    14     8      6
 ---------------------------------------------------------------------------------
 (2) _f_lseek                                             41    35      6   96875
                                             85 BANK0     41    35      6
                            ___lldiv
                          _clst2sect
                       _create_chain
                          _disk_read
                         _disk_write
                            _get_fat
                           _validate
 ---------------------------------------------------------------------------------
 (3) _create_chain                                        29    23      6   51614
                                             56 BANK0     29    23      6
                            _get_fat
                            _put_fat
 ---------------------------------------------------------------------------------
 (4) _put_fat                                             33    23     10   25216
                                             23 BANK0     33    23     10
                           _ld_dword
                        _move_window
                           _st_dword
                            _st_word
 ---------------------------------------------------------------------------------
 (4) _get_fat                                             26    20      6   23946
                                             23 BANK0     26    20      6
                           _ld_dword
                            _ld_word
                        _move_window
 ---------------------------------------------------------------------------------
 (5) _ld_word                                              7     5      2    1425
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _ld_dword                                            13     9      4    1337
                                              0 COMRAM    13     9      4
 ---------------------------------------------------------------------------------
 (3) _clst2sect                                           12     6      6    2441
                                             12 COMRAM    12     6      6
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     906
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     798
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _f_close                                              5     3      2   57097
                                             31 BANK0      5     3      2
                             _f_sync
                           _validate
 ---------------------------------------------------------------------------------
 (3) _f_sync                                              11     9      2   55059
                                             24 BANK0      7     5      2
                         _disk_write
                        _move_window
                           _st_clust
                           _st_dword
                            _st_word
                            _sync_fs
                           _validate
 ---------------------------------------------------------------------------------
 (3) _validate                                            11     7      4    1718
                                              4 COMRAM    11     7      4
                        _disk_status
 ---------------------------------------------------------------------------------
 (4) _disk_status                                          4     4      0      48
                                              0 COMRAM     4     4      0
          _SD_SPI_IsMediaInitialized
              _SD_SPI_IsMediaPresent
            _SD_SPI_IsWriteProtected
 ---------------------------------------------------------------------------------
 (5) _SD_SPI_IsWriteProtected                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _SD_SPI_IsMediaPresent                                0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _SD_SPI_IsMediaInitialized                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _sync_fs                                             11     9      2   21156
                                             91 COMRAM     3     1      2
                                             16 BANK0      8     8      0
                         _disk_ioctl
                         _disk_write
                            _mem_set
                           _st_dword
                            _st_word
                        _sync_window
 ---------------------------------------------------------------------------------
 (5) _st_dword                                             6     0      6    2141
                                              0 COMRAM     6     0      6
 ---------------------------------------------------------------------------------
 (3) _mem_set                                              8     2      6    1959
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (5) _disk_ioctl                                           7     4      3     223
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (3) _st_clust                                             9     1      8    2693
                                              4 COMRAM     9     1      8
                            _st_word
 ---------------------------------------------------------------------------------
 (5) _st_word                                              4     0      4     981
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) _move_window                                         11     5      6   18508
                                             91 COMRAM     4     4      0
                                             16 BANK0      7     1      6
                          _disk_read
                        _sync_window
 ---------------------------------------------------------------------------------
 (6) _sync_window                                         19    17      2    7860
                                             88 COMRAM     3     1      2
                                              0 BANK0     16    16      0
                         _disk_write
 ---------------------------------------------------------------------------------
 (3) _disk_write                                          12     4      8    7194
                                             76 COMRAM    12     4      8
                 _SD_SPI_SectorWrite
 ---------------------------------------------------------------------------------
 (4) _SD_SPI_SectorWrite                                  27    19      8    4411
                                             49 COMRAM    27    19      8
                        _SDFAST_open *
                        _SDSLOW_open *
             _SD_SPI_AsyncWriteTasks
                         _SPI1_Close *
 ---------------------------------------------------------------------------------
 (5) _SD_SPI_AsyncWriteTasks                              15    13      2    3621
                                             34 COMRAM    15    13      2
                         _SD_SendCmd
                 _SPI1_ExchangeBlock *
                  _SPI1_ExchangeByte *
 ---------------------------------------------------------------------------------
 (3) _disk_read                                           12     4      8    7042
                                             73 COMRAM    12     4      8
                  _SD_SPI_SectorRead
 ---------------------------------------------------------------------------------
 (4) _SD_SPI_SectorRead                                   27    19      8    5327
                                             46 COMRAM    27    19      8
                        _SDFAST_open *
                        _SDSLOW_open *
              _SD_SPI_AsyncReadTasks
                         _SPI1_Close *
 ---------------------------------------------------------------------------------
 (5) _SPI1_Close                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _SD_SPI_AsyncReadTasks                               12    10      2    4541
                                             34 COMRAM    12    10      2
                         _SD_SendCmd
                 _SPI1_ExchangeBlock *
                  _SPI1_ExchangeByte *
                             _memset
 ---------------------------------------------------------------------------------
 (6) _memset                                              12     6      6     986
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (6) _SPI1_ExchangeBlock                                   6     2      4     346
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _SD_SendCmd                                          23    18      5    2764
                                             11 COMRAM    23    18      5
                  _SPI1_ExchangeByte *
                             _memcpy
 ---------------------------------------------------------------------------------
 (7) _memcpy                                              11     5      6     410
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _SPI1_ExchangeByte                                    1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _SDSLOW_open                                          0     0      0      88
                          _SPI1_Open
 ---------------------------------------------------------------------------------
 (5) _SDFAST_open                                          0     0      0      88
                          _SPI1_Open
 ---------------------------------------------------------------------------------
 (6) _SPI1_Open                                            2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _append                                              16    10      6    1115
                                              4 COMRAM    16    10      6
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     446
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _get_vel_data                                         2     0      2     112
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _get_temp_data                                        2     0      2     452
                                             11 COMRAM     2     0      2
                        _string_copy
 ---------------------------------------------------------------------------------
 (2) _string_copy                                         11     7      4     318
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (1) _get_hum_data                                         2     0      2     112
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _get_alt_data                                         2     0      2     112
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
   _get_alt_data
   _get_hum_data
   _get_temp_data
     _string_copy
   _get_vel_data
   _write_to_file
     _append
       _strlen
     _f_close
       _f_sync
         _disk_write
           _SD_SPI_SectorWrite
             _SDFAST_open *
               _SPI1_Open
             _SDSLOW_open *
               _SPI1_Open
             _SD_SPI_AsyncWriteTasks *
               _SD_SendCmd
                 _SPI1_ExchangeByte *
                 _memcpy *
               _SPI1_ExchangeBlock *
               _SPI1_ExchangeByte *
             _SPI1_Close *
         _move_window
           _disk_read
             _SD_SPI_SectorRead
               _SDFAST_open *
               _SDSLOW_open *
               _SD_SPI_AsyncReadTasks *
                 _SD_SendCmd
                 _SPI1_ExchangeBlock *
                 _SPI1_ExchangeByte *
                 _memset *
               _SPI1_Close *
           _sync_window
             _disk_write
         _st_clust
           _st_word
         _st_dword
         _st_word
         _sync_fs
           _disk_ioctl
           _disk_write
           _mem_set
           _st_dword
           _st_word
           _sync_window
         _validate
           _disk_status
             _SD_SPI_IsMediaInitialized
             _SD_SPI_IsMediaPresent
             _SD_SPI_IsWriteProtected
       _validate
     _f_lseek
       ___lldiv
       _clst2sect
         ___lmul
       _create_chain
         _get_fat
           _ld_dword
           _ld_word
           _move_window
         _put_fat
           _ld_dword
           _move_window
           _st_dword
           _st_word
       _disk_read
       _disk_write
       _get_fat
       _validate
     _f_mount
       _find_volume
         ___lldiv
         ___lmul
         _check_fs
           _ld_word
           _mem_cmp
           _move_window
         _disk_initialize
           _SD_SPI_MediaInitialize
             _SDFAST_open *
             _SDSLOW_open *
             _SD_SPI_DelayMilliseconds *
               _SPI1_ExchangeByte *
             _SD_SendCmd *
             _SPI1_Close *
             _SPI1_ExchangeByte *
             ___lmul *
         _disk_status
         _get_ldnumber
         _ld_dword
         _ld_word
         _move_window
       _get_ldnumber
     _f_open
       _clst2sect
       _dir_register
         _dir_alloc
           _dir_next
             _clst2sect
             _create_chain
             _dir_clear
               _clst2sect
               _disk_write
               _mem_set
               _sync_window
             _get_fat
           _dir_sdi
             _clst2sect
             _get_fat
           _move_window
         _mem_cpy
         _mem_set
         _move_window
       _disk_read
       _find_volume
       _follow_path
         _create_name
           _chk_chr
           _dbc_1st
           _dbc_2nd
           _mem_set
         _dir_find
           _dir_next
           _dir_sdi
           _mem_cmp
           _move_window
         _dir_sdi
         _ld_clust
           _ld_word
       _get_fat
       _ld_clust
       _ld_dword
       _mem_set
       _move_window
       _remove_chain
         _get_fat
         _put_fat
       _st_clust
       _st_dword
     _f_write
       _clst2sect
       _create_chain
       _disk_read
       _disk_write
       _mem_cpy
       _validate
     _get_alt_data (ARG)
     _get_hum_data (ARG)
     _get_temp_data (ARG)
     _get_vel_data (ARG)
     _malloc (ARG)
       ___expand_heap
       ___simple_search_fl
       _strlen (ARG)
     _strlen (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     8AA      46       56.9%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     4B      E0       7       87.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     A0      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRllhh       27      0       0      43        0.0%
BITBIGSFRhhhllh     26      0       0      39        0.0%
BITBIGSFRllhl       24      0       0      44        0.0%
BITBIGSFRhhhlhh     1D      0       0      37        0.0%
BITBIGSFRhhhh        D      0       0      36        0.0%
BITBIGSFRhhhlhl      8      0       0      38        0.0%
BITBIGSFRhhhlll      4      0       0      41        0.0%
BITBIGSFRhhll        4      0       0      42        0.0%
BITBIGSFRhhhlll      2      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1DF      45        0.0%
DATA                 0      0     A89       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Feb 09 17:24:43 2023

                SD_SPI_SectorWrite@result 003C                         _SPI1_ExchangeByte 7CD6  
                             get_fat@clst 0079                  SD_SPI_SectorWrite@status 003D  
           SD_SPI_MediaInitialize@timeout 0053                        _SPI1_ExchangeBlock 7F4A  
                            create_name@c 001E                              create_name@d 0013  
                            create_name@i 0018                              create_name@p 0016  
                           ?_get_vel_data 0001                          get_ldnumber@path 0001  
          SD_SPI_MediaInitialize@response 004E                                        l25 7C2E  
                                      l28 7C26                                        l90 7D44  
                                      l91 7D6E                                        l59 83A0  
                                      l68 7FF0                                        l77 82B0  
                                      l86 8324                        ?_SPI1_ExchangeByte 0001  
                          ??_dir_register 0060                   ??_SD_SPI_IsMediaPresent 0001  
                        disk_write@sector 004F                             create_name@dp 0009  
                           create_name@ni 0014                             create_name@si 001C  
                          create_chain@cs 00B1                            create_chain@fs 00AF  
                          ?_get_temp_data 000C                                       l200 9EAE  
                                     l210 ABC8                                       l203 9EB0  
                                     l140 7DD8                                       l213 AF4C  
                                     l207 8A38                                       l143 88A0  
                                     l215 ABD4                                       l160 7DA0  
                                     l304 CB1A                                       l233 C10A  
                                     l305 CB5A                                       l313 96BA  
                                     l146 7D3C                                       l330 AB5C  
                                     l307 CB52                                       l155 8048  
                                     l228 AF5C                                       l252 C5BA  
                                     l149 823C                                       l405 9B14  
                                     l166 8526                                       l191 9CB2  
                                     l167 852E                                       l415 8BF2  
                                     l175 8166                                       l183 7C42  
                                     l336 AA4A                                       l249 C51C  
                                     l281 CB6A                                       l186 9CB0  
                                     l514 981A                                       l258 A2E0  
                                     l602 D9A2                                       l283 C70E  
                                     l363 B2C8                                       l355 B372  
                                     l179 7C38                                       l508 940E  
                                     l524 FE84                                       l197 896C  
                                     l381 9568                                       l390 7EA8  
                                     l382 956A                                       l439 BC12  
                                     l623 D9A2                                       l615 D524  
                                     l712 80A2                                       l608 D32A  
                                     l617 D500                                       l609 D316  
                                     l706 A0AE                                       l386 8420  
                                     l731 E98A                                       l580 8CB2  
                                     l732 E242                                       l564 F958  
               SD_SPI_AsyncReadTasks@info 0023                                       l558 F7E6  
                                     l590 8B10                                       l486 A4C0  
                                     l495 A558                                       l488 A4AA  
                                     l585 8CDE                                       l569 FC2E  
                                     l586 8CF0                                       l738 E508  
                                     l499 941C                                       l676 F06C  
                                     l597 D9C6                                       l677 ECCA  
                                     l669 F204                                       l699 F1C4  
                     ?_SPI1_ExchangeBlock 0001                                       _Fil 0AF4  
                     ??_SPI1_ExchangeByte 0001                              disk_read@res 0055  
                  get_vel_data@vel_string 0001                            ??_create_chain 009E  
                                     tosl 000FFD                                       wreg 000FE8  
             write_to_file@formatted_data 00FE                   SPI1_ExchangeBlock@block 0001  
              SD_SPI_AsyncReadTasks@bData 002E                            create_name@sfn 001A  
                         create_chain@ncl 00AB                           create_chain@obj 0098  
                         create_chain@scl 00A7                           create_chain@res 00A6  
                             ld_clust@dir 000A                            ??_get_alt_data 0003  
                          fp__SDFAST_open 0000                                      l1100 DACC  
                                    l1030 7C1A                                      l1042 9052  
                                    l1130 DDC0                                      l1051 9004  
                                    l1043 8FC8                                      l1060 90FE  
                                    l1127 DD4C                                      l1224 D110  
                                    l1241 C044                                      l1233 BC16  
                                    l1217 D036                                      l1073 7CD4  
                                    l1250 C0A6                                      l1322 7C16  
                                    l1090 E194                                      l1315 7C70  
                                    l1059 9188                                      l2220 7EF8  
                                    l2204 7F48                                      l1252 C0BA  
                                    l1068 913A                                      l1076 7C1E  
                                    l1084 8102                                      l1420 867A  
                                    l1325 7CDC                                      l1333 7F62  
                                    l1157 B7BE                                      l1421 867A  
                                    l2150 92D0                                      l1319 87E8  
                                    l1327 7CEA                                      l1335 7F70  
                                    l1159 B3C4                                      l2151 9278  
                                    l1432 7D14                                      l1328 7CEE  
                                    l2208 9990                                      l1441 7CA6  
                                    l1337 7F9C                                      l1370 7C5E  
                                    l1450 8E02                                      l1291 7E16  
                                    l1435 7C82                                      l2163 86AE  
                                    l1196 D20E                                      l2148 9284  
                                    l1428 8EE4                                      l1373 7C50  
                                    l1429 8F1C                                      l1438 7C94  
                                    l1470 81D0                                      l1455 84A6  
                                    l2168 8730                                      l2184 A682  
                                    l2176 A7D2                                      l2187 A78C  
                                    l1492 85D2                                      l1485 85C2  
                                    l1469 81C0                                      l7000 82F0  
                                    l7002 82F8                                      l7020 827C  
                                    l7100 88E8                                      l7022 8284  
                                    l7006 8300                                      l7102 88F8  
                                    l7110 896A                                      l7016 8240  
                                    l7008 8322                                      l7040 9B36  
                                    l7104 893E                                      l7120 8196  
                                    l7200 C0C2                                      l7018 8248  
                                    l7026 828C                                      l7042 9B88  
                                    l7050 9CAC                                      l7106 8948  
                                    l7130 7D88                                      l7122 81A0  
                                    l7114 8168                                      l7210 C180  
                                    l7202 C0DC                                      l8010 9A3C  
                                    l8002 99DC                                      l6500 BE10  
                                    l7028 82AE                                      l7044 9B98  
                                    l7036 9B16                                      l7108 894C  
                                    l7124 7D70                                      l7116 8178  
                                    l7140 89D0                                      l7132 896E  
                                    l7060 87EA                                      l7220 C1CA  
                                    l7300 C616                                      l8100 BA0E  
                                    l8012 9A4C                                      l8004 9A08  
                                    l6510 BE9E                                      l6502 BE20  
                                    l7046 9C14                                      l7038 9B1A  
                                    l7070 7D26                                      l7126 7D78  
                                    l7118 8186                                      l7134 897A  
                                    l7062 8890                                      l7054 7DA2  
                                    l7150 ABB4                                      l7230 C280  
                                    l7222 C1D4                                      l7214 C194  
                                    l7206 C112                                      l7302 C640  
                                    l8102 BA22                                      l8110 BA4C  
                                    l8030 B7C0                                      l8022 9AE6  
                                    l8014 9A54                                      l6520 BF2C  
                                    l6512 BED0                                      l6504 BE32  
                                    l7048 9C32                                      l7072 7D2C  
                                    l7128 7D84                                      l7080 81E2  
                                    l7136 89BC                                      l7056 7DD0  
                                    l7160 AC8A                                      l7152 ABDC  
                                    l7144 AB5E                                      l7240 C302  
                                    l7224 C208                                      l7216 C1B8  
                                    l7208 C124                                      l7400 CB04  
                                    l7312 C6B0                                      l7320 C71E  
                                    l7304 C654                                      l8200 9374  
                                    l8120 BAB4                                      l8112 BA5C  
                                    l8040 B810                                      l8032 B7D0  
                                    l8024 9B00                                      l8016 9A7E  
                                    l8008 9A1C                                      l9000 D754  
                                    l6450 7F2A                                      l6442 7EFA  
                                    l6530 C0A8                                      l6522 BF42  
                                    l6514 BEE0                                      l6506 BE64  
                                    l6610 CD72                                      l6602 CCE6  
                                    l7074 7D38                                      l7066 7D16  
                                    l7090 821E                                      l7082 81F0  
                                    l7170 AD40                                      l7162 AC8E  
                                    l7154 ABEE                                      l7146 AB6E  
                                    l7250 C3C4                                      l7242 C32E  
                                    l7234 C294                                      l7226 C214  
                                    l7218 C1BC                                      l7402 CB2E  
                                    l7330 C788                                      l7322 C740  
                                    l7314 C6CC                                      l7306 C680  
                                    l8210 93F2                                      l8202 9390  
                                    l8130 BB02                                      l8122 BACC  
                                    l8114 BA7C                                      l8050 B886  
                                    l8042 B83A                                      l8034 B7DC  
                                    l8018 9AA4                                      l9010 D7DC  
                                    l9002 D774                                      l6460 8782  
                                    l6444 7F0E                                      l6452 7F2E  
                                    l6516 BF12                                      l6524 BF4A  
                                    l6508 BE68                                      l6540 7F7E  
                                    l6620 CDFA                                      l6612 CD82  
                                    l6604 CCFC                                      l7068 7D22  
                                    l7092 822C                                      l7084 81FC  
                                    l7076 81D2                                      l7180 ADF2  
                                    l7172 AD50                                      l7148 AB8A  
                                    l7252 C402                                      l7244 C34E  
                                    l7236 C2B8                                      l7228 C224  
                                    l7404 CB3E                                      l7340 C81E  
                                    l7332 C7A0                                      l7316 C6E0  
                                    l7308 C69C                                      l8220 9716  
                                    l7500 DAFE                                      l8212 9402  
                                    l8204 93B4                                      l7420 9606  
                                    l7412 958E                                      l8140 BB46  
                                    l8132 BB06                                      l8116 BA94  
                                    l8108 BA38                                      l8060 B8D2  
                                    l8052 B896                                      l8044 B856  
                                    l8036 B7F8                                      l8300 A0C0  
                                    l9020 D83E                                      l9012 D7E0  
                                    l9004 D7A0                                      l6462 8786  
                                    l6454 7CD8                                      l6446 7F1A  
                                    l6526 BF7C                                      l6518 BF1C  
                                    l6542 7F82                                      l6534 7F4A  
                                    l6710 D112                                      l6702 D0AA  
                                    l6630 CEB8                                      l6622 CE0E  
                                    l6614 CD96                                      l6606 CD0E  
                                    l7094 88A2                                      l7086 820E  
                                    l7078 81DE                                      l7182 AE3C  
                                    l7174 AD70                                      l7166 ACFA  
                                    l7158 AC5A                                      l7190 AF12  
                                    l7262 C496                                      l7254 C418  
                                    l7246 C3B0                                      l7238 C2C6  
                                    l7270 C5B8                                      l7350 C8B4  
                                    l7342 C83E                                      l7334 C7CA  
                                    l7326 C754                                      l8230 974C  
                                    l7510 DB50                                      l7502 DB00  
                                    l8206 93D0                                      l7430 9690  
                                    l7422 960E                                      l7414 95BA  
                                    l7406 956C                                      l8142 BB56  
                                    l8118 BAB0                                      l8134 BB1E  
                                    l8150 BB82                                      l8070 B910  
                                    l8054 B89E                                      l8046 B85A  
                                    l8038 B808                                      l8302 A0DC  
                                    l9030 D944                                      l9022 D850  
                                    l9006 D7BC                                      l9014 D7F0  
                                    l9102 EC70                                      l6464 87AA  
                                    l6472 87E6                                      l6456 8734  
                                    l6544 7C28                                      l6448 7F1E  
                                    l6528 C074                                      l6480 BC7E  
                                    l6536 7F56                                      l6712 D142  
                                    l6704 D0C2                                      l6632 CEC8  
                                    l6624 CE16                                      l6616 CDB4  
                                    l6608 CD42                                      l6560 CB84  
                                    l6552 CB6C                                      l6800 911E  
                                    l7096 88A8                                      l7088 821A  
                                    l7280 7C18                                      l9200 806A  
                                    l7176 AD80                                      l7168 AD32  
                                    l7264 C568                                      l7256 C482  
                                    l7360 C906                                      l7352 C8C4  
                                    l7344 C854                                      l7336 C7DA  
                                    l7328 C764                                      l8232 976C  
                                    l8224 971C                                      l8216 96BC  
                                    l7440 80E8                                      l7600 DE2E  
                                    l7512 DB52                                      l7504 DB16  
                                    l7520 DB86                                      l8208 93EA  
                                    l7424 961A                                      l7416 95D8  
                                    l7408 9588                                      l8160 BBCE  
                                    l8152 BB9E                                      l8144 BB66  
                                    l8128 BAF2                                      l8080 B94A  
                                    l8072 B918                                      l8056 B8B0  
                                    l8064 B8D8                                      l8048 B86C  
                                    l8400 A3D0                                      l8320 A162  
                                    l8304 A106                                      l9032 D998  
                                    l9024 D88C                                      l9016 D802  
                                    l9008 D7C0                                      l9120 EDAE  
                                    l9104 ECAE                                      l9040 E98C  
                                    l6466 87DE                                      l6458 8742  
                                    l6490 BD8E                                      l6482 BCAE  
                                    l6538 7F72                                      l6730 D19E  
                                    l6706 D0CC                                      l6650 CF0C  
                                    l6626 CE46                                      l6618 CDBC  
                                    l6570 CBF6                                      l6562 CB9A  
                                    l6554 CB70                                      l6810 916C  
                                    l7098 88D8                                      l7450 8360  
                                    l7442 8328                                      l9202 8082  
                                    l7186 AEB6                                      l7362 C930  
                                    l7370 C95E                                      l7346 C870  
                                    l7338 C806                                      l7354 C8D4  
                                    l9210 E1AE                                      l8242 97E0  
                                    l8234 978A                                      l8226 9746  
                                    l8218 96EA                                      l7434 80A6  
                                    l7602 DE30                                      l7522 DBAA  
                                    l7506 DB3A                                      l7426 9624  
                                    l7418 95F8                                      l8162 BBDA  
                                    l8146 BB6A                                      l8090 B98A  
                                    l8082 B94E                                      l8074 B928  
                                    l8066 B8F4                                      l8058 B8C2  
                                    l8410 A430                                      l8402 A3E0  
                                    l8330 A1B0                                      l9034 D9B4  
                                    l9026 D8D0                                      l9018 D820  
                                    l9130 EDF2                                      l9114 ED4C  
                                    l9106 ECE4                                      l9050 E9EC  
                                    l9042 E994                                      l6468 87E0  
                                    l6548 7C20                                      l6492 BDA0  
                                    l6484 BCDE                                      l6476 BC18  
                                    l6900 B5EA                                      l6820 B378  
                                    l6732 D1AE                                      l6708 D100  
                                    l6724 D156                                      l6660 CFA0  
                                    l6652 CF16                                      l6636 CECE  
                                    l6628 CE76                                      l6572 CC0C  
                                    l6580 CC62                                      l6564 CBB4  
                                    l6740 D1B8                                      l6804 9126  
                                    l6812 9170                                      l7284 7CBE  
                                    l7460 839E                                      l7452 8362  
                                    l7444 8330                                      l8260 8C4C  
                                    l8252 8BF4                                      l9204 8092  
                                    l7268 C57E                                      l7380 C9DC  
                                    l7372 C98A                                      l7364 C940  
                                    l7356 C8EA                                      l7348 C88A  
                                    l7292 C5BC                                      l9300 E6E8  
                                    l9220 E20C                                      l9212 E1BE  
                                    l8236 97A8                                      l7436 80B2  
                                    l7620 DEBC                                      l7540 DC5A  
                                    l7524 DBE0                                      l7508 DB4A  
                                    l8180 9300                                      l7428 9646  
                                    l8164 BBEA                                      l8148 BB7A  
                                    l8092 B98E                                      l8068 B904  
                                    l8420 A480                                      l8412 A440  
                                    l8404 A404                                      l8316 A122  
                                    l8324 A168                                      l8308 A10C  
                                    l9036 D9C4                                      l9028 D8D8  
                                    l9132 EE04                                      l9108 ED36  
                                    l9116 ED5E                                      l9044 E9A4  
                                    l6494 BDD0                                      l6486 BD0E  
                                    l6478 BC34                                      l6902 B5FE  
                                    l6830 B3B2                                      l6726 D16C  
                                    l6662 CFB0                                      l6654 CF46  
                                    l6638 CEDE                                      l6590 CCCA  
                                    l6582 CC74                                      l6574 CC18  
                                    l6566 CBBC                                      l6558 CB76  
                                    l6814 9186                                      l6806 9136  
                                    l7454 8376                                      l7446 8344  
                                    l8270 8CEE                                      l8262 8C84  
                                    l8254 8BF8                                      l7198 C0BC  
                                    l7390 CA44                                      l7358 C8FA  
                                    l7294 C5CC                                      l9310 E76E  
                                    l9302 E716                                      l9230 E2F8  
                                    l9222 E226                                      l9214 E1CE  
                                    l8238 97DA                                      l7438 80B8  
                                    l7630 DEEE                                      l7622 DECE  
                                    l7614 DE6C                                      l7550 DCB0  
                                    l7542 DC5E                                      l7534 DC0C  
                                    l7526 DBEE                                      l7470 D9E6  
                                    l8190 931C                                      l8182 9308  
                                    l8174 92D2                                      l8502 F352  
                                    l7702 7C30                                      l8166 BBF6  
                                    l8158 BBB4                                      l8094 B9B8  
                                    l8086 B962                                      l8078 B92E  
                                    l8414 A450                                      l8406 A41C  
                                    l8326 A194                                      l8318 A152  
                                    l9150 EF6A                                      l9134 EE32  
                                    l9126 EDC2                                      l9118 ED96  
                                    l9070 EB28                                      l9062 EA12  
                                    l9054 E9F2                                      l9046 E9BC  
                                    l6496 BDD8                                      l6488 BD3E  
                                    l6760 98D4                                      l6752 983A  
                                    l6904 B65E                                      l6920 B692  
                                    l6840 B432                                      l6832 B3DE  
                                    l6824 B37E                                      l6728 D16E  
                                    l6664 CFC2                                      l6656 CF7A  
                                    l6648 CEF4                                      l6584 CC86  
                                    l6576 CC3C                                      l6568 CBC0  
                                    l6808 913C                                      l7288 7C1C  
                                    l7448 834C                                      l8264 8CAE  
                                    l8256 8C0A                                      l8280 855E  
                                    l7392 CA5A                                      l7376 C9A6  
                                    l7296 C5E4                                      l9320 E84C  
                                    l9304 E742                                      l9240 E490  
                                    l9232 E382                                      l9312 E7A4  
                                    l9224 E28A                                      l9208 E196  
                                    l8248 9818                                      l7640 E0EA  
                                    l7632 DF04                                      l7624 DED2  
                                    l7616 DEAA                                      l7608 DE64  
                                    l7560 DCDA                                      l7552 DCBE  
                                    l7544 DC72                                      l7536 DC46  
                                    l7528 DC04                                      l7480 DA32  
                                    l7472 D9E8                                      l8192 932C  
                                    l8184 9318                                      l8176 92D6  
                                    l8600 F73A                                      l8520 F3EC  
                                    l8512 F398                                      l8504 F362  
                                    l7704 7C30                                      l7712 7C3A  
                                    l8168 BBFE                                      l8096 B9E6  
                                    l8088 B974                                      l8432 A4D2  
                                    l8424 A492                                      l8416 A460  
                                    l8352 A230                                      l8344 A1EC  
                                    l8336 A1CA                                      l9144 EEAA  
                                    l9136 EE52                                      l9152 EF8C  
                                    l9128 EDD2                                      l9080 EBBE  
                                    l9072 EB3A                                      l9064 EA70  
                                    l9056 EA0C                                      l9048 E9CC  
                                    l9400 91A0                                      l6498 BE0A  
                                    l6770 9934                                      l6754 9846  
                                    l6930 B6FA                                      l6922 B6A2  
                                    l6906 B676                                      l6850 B46A  
                                    l6842 B442                                      l6834 B3E2  
                                    l6826 B38C                                      l6818 B374  
                                    l6674 D038                                      l6666 D022  
                                    l6658 CF8A                                      l6586 CCAA  
                                    l6578 CC4C                                      l7458 837C  
                                    l8266 8CC2                                      l8258 8C24  
                                    l8290 85B0                                      l8282 856A  
                                    l8274 8530                                      l7394 CA8A  
                                    l7378 C9BC                                      l7386 CA04  
                                    l7298 C600                                      l9330 E8FE  
                                    l9322 E87C                                      l9314 E7DA  
                                    l9306 E75A                                      l9242 E4A8  
                                    l9234 E432                                      l9226 E2A0  
                                    l9218 E1E2                                      l7650 E12A  
                                    l7642 E100                                      l7634 DF90  
                                    l7626 DED4                                      l7618 DEAC  
                                    l7570 DD20                                      l7562 DCE0  
                                    l7554 DCC8                                      l7546 DC86  
                                    l7490 DA74                                      l7482 DA3A  
                                    l7474 DA26                                      l8194 933E  
                                    l8186 931C                                      l8178 92EE  
                                    l8610 F7B0                                      l8602 F760  
                                    l8522 F408                                      l8514 F3A0  
                                    l8506 F382                                      l8442 F206  
                                    l7810 AFDC                                      l7730 A7E4  
                                    l7722 A7D4                                      l8370 8B78  
                                    l8362 8B12                                      l7714 7C3A  
                                    l8098 B9F8                                      l8426 A4A2  
                                    l8418 A472                                      l8354 A27E  
                                    l8346 A21C                                      l8338 A1E6  
                                    l9170 F0BA                                      l9154 EFBC  
                                    l9146 EF0A                                      l9138 EE94  
                                    l9090 EC38                                      l9082 EBF6  
                                    l9074 EB5C                                      l9066 EA90  
                                    l9410 91DA                                      l9402 91A8  
                                    l6772 9968                                      l6764 98EE  
                                    l6748 981C                                      l6940 B72A  
                                    l6924 B6B8                                      l6908 B686  
                                    l6860 B4A0                                      l6844 B452  
                                    l6836 B40A                                      l6828 B3A2  
                                    l6780 7C14                                      l6676 D068  
                                    l6684 D082                                      l6588 CCBA  
                                    l6596 CCD0                                      l8268 8CCE  
                                    l8292 85B2                                      l8284 8578  
                                    l8276 8540                                      l7396 CA9A  
                                    l7388 CA34                                      l9324 E896  
                                    l9332 E910                                      l9316 E802  
                                    l9260 E54E                                      l9252 E4EC  
                                    l9236 E44E                                      l9228 E2E2  
                                    l7652 E15A                                      l7644 E112  
                                    l7636 E058                                      l7628 DEE4  
                                    l7580 DD7E                                      l7572 DD32  
                                    l7564 DCE6                                      l7548 DC8C  
                                    l7556 DCD2                                      l7492 DA98  
                                    l7484 DA3C                                      l7468 D9C8  
                                    l7900 7FCC                                      l8196 9350  
                                    l8700 FD0A                                      l8620 F818  
                                    l8612 F7C6                                      l8540 F4C6  
                                    l8524 F41C                                      l8532 F476  
                                    l8460 F272                                      l8452 F240  
                                    l8444 F216                                      l7820 B0AC  
                                    l7804 AFC6                                      l7740 A868  
                                    l7732 A7FC                                      l8372 8B88  
                                    l8364 8B22                                      l8436 A4F0  
                                    l8428 A4B8                                      l8356 A2A4  
                                    l9180 F138                                      l9172 F106  
                                    l9156 EFF2                                      l9164 F04E  
                                    l9148 EF58                                      l9076 EB78  
                                    l9068 EACA                                      l9420 9242  
                                    l9412 91EC                                      l9404 91A8  
                                    l6774 9974                                      l6766 991A  
                                    l6758 987C                                      l6942 B72C  
                                    l6926 B6BA                                      l6862 B4D2  
                                    l6838 B40E                                      l6678 D078  
                                    l6598 CCE0                                      l6790 90BA  
                                    l6782 9054                                      l7662 7D40  
                                    l8294 85BC                                      l8286 8582  
                                    l8278 8556                                      l7398 CAB6  
                                    l9334 E956                                      l9326 E8E8  
                                    l9318 E812                                      l9262 E56A  
                                    l9246 E4BC                                      l9238 E464  
                                    l9254 E524                                      l7646 E114  
                                    l7638 E0B2                                      l7590 DDEE  
                                    l7574 DD44                                      l7566 DD0A  
                                    l7558 DCD8                                      l7494 DAA8  
                                    l7486 DA6C                                      l7478 DA2C  
                                    l7902 7FEE                                      l8198 9358  
                                    l8710 FDE6                                      l8702 FD40  
                                    l8630 F8D6                                      l8622 F868  
                                    l8614 F800                                      l8550 F522  
                                    l8542 F4DC                                      l8534 F47E  
                                    l8526 F43C                                      l8518 F3BA  
                                    l8470 F2C0                                      l8462 F282  
                                    l8454 F25A                                      l8446 F22A  
                                    l7830 B170                                      l7814 AFE2  
                                    l7750 A8C8                                      l7742 A87E  
                                    l7734 A82A                                      l7726 A7E4  
                                    l7910 7FF2                                      l8374 8BB0  
                                    l8366 8B3C                                      l8438 A556  
                                    l8390 A35C                                      l8382 A2E2  
                                    l8358 A2DE                                      l9182 F152  
                                    l9166 F09C                                      l9158 F038  
                                    l9174 F118                                      l9094 EC3E  
                                    l9190 F1F2                                      l9086 EC12  
                                    l9078 EB8E                                      l9430 9294  
                                    l9414 9210                                      l9406 91BE  
                                    l6776 997A                                      l6944 B75C  
                                    l6936 B704                                      l6928 B6EA  
                                    l6864 B4E2                                      l6856 B47E  
                                    l6848 B458                                      l6952 B768  
                                    l6960 8F1E                                      l6696 D096  
                                    l6792 90F8                                      l6784 9064  
                                    l7920 9CB4                                      l8288 85A0  
                                    l9280 E608                                      l9272 E584  
                                    l9248 E4D8                                      l7680 84B8  
                                    l7648 E126                                      l7656 E160  
                                    l7592 DDF4                                      l7576 DD4A  
                                    l7568 DD10                                      l7496 DABA  
                                    l7488 DA6E                                      l8704 FD52  
                                    l8712 FE44                                      l8640 F914  
                                    l8608 F792                                      l8560 F564  
                                    l8544 F4E8                                      l8536 F490  
                                    l8528 F46E                                      l8552 F53C  
                                    l8472 F2D0                                      l8464 F284  
                                    l8456 F26C                                      l8448 F23A  
                                    l7832 B18C                                      l7816 B010  
                                    l7808 AFC6                                      l7760 A9A2  
                                    l7744 A896                                      l7912 8014  
                                    l8376 8BDE                                      l8368 8B4C  
                                    l8392 A362                                      l8384 A2F2  
                                    l8296 A0B0                                      l9192 F202  
                                    l9184 F188                                      l9176 F120  
                                    l9168 F0B2                                      l9096 EC5A  
                                    l9088 EC28                                      l8800 A672  
                                    l9432 92A4                                      l9424 924E  
                                    l9416 921C                                      l9408 91C6  
                                    l9450 8D66                                      l9442 8CF2  
                                    l6778 997E                                      l6946 B762  
                                    l6938 B714                                      l6890 B532  
                                    l6866 B4F4                                      l6874 B50A  
                                    l6858 B496                                      l6970 8FC2  
                                    l6962 8F2E                                      l6786 907C  
                                    l7666 7D4A                                      l7930 9DD8  
                                    l7922 9CC2                                      l8730 9F0E  
                                    l8722 9EB2                                      l9338 E96C  
                                    l9290 E67E                                      l9282 E626  
                                    l9274 E5B0                                      l9258 E53E  
                                    l7682 84F4                                      l7594 DE04  
                                    l7586 DDC2                                      l7578 DD4E  
                                    l7498 DACE                                      l8714 FE50  
                                    l8706 FD7A                                      l8642 F918  
                                    l8570 F592                                      l8554 F54E  
                                    l8546 F50E                                      l8538 F496  
                                    l8490 F32A                                      l8474 F2DE  
                                    l8466 F29C                                      l8482 F2EA  
                                    l7842 B1B4                                      l7818 B048  
                                    l7826 B0C4                                      l7770 AA0C  
                                    l7762 A9CE                                      l7738 A830  
                                    l7914 8028                                      l8378 8BF0  
                                    l7690 8104                                      l8394 A380  
                                    l8386 A310                                      l8298 A0B0  
                                    l9186 F1A8                                      l9178 F130  
                                    l9098 EC6A                                      l8810 A704  
                                    l8802 A68A                                      l9434 92AC  
                                    l9426 9270                                      l9418 9230  
                                    l9380 7DFC                                      l9372 7DDA  
                                    l9460 8DE6                                      l9452 8D84  
                                    l9444 8D1A                                      l6892 B54A  
                                    l6868 B504                                      l6884 B51E  
                                    l6964 8F46                                      l6796 9100  
                                    l6788 909E                                      l7668 7D6C  
                                    l7932 9E2A                                      l7924 9CD2  
                                    l8740 9F78                                      l8732 9F60  
                                    l8724 9ECA                                      l9196 804A  
                                    l9276 E5C8                                      l7684 84F8  
                                    l7676 84A8                                      l7596 DE16  
                                    l7588 DDCA                                      l8716 FE6C  
                                    l8708 FDB0                                      l8644 F934  
                                    l8636 F8F2                                      l8628 F88A  
                                    l8580 F622                                      l8572 F5B2  
                                    l8564 F56A                                      l8548 F512  
                                    l8484 F2F6                                      l8468 F2B2  
                                    l7860 B25E                                      l7852 B208  
                                    l7844 B1DE                                      l7836 B192  
                                    l7828 B138                                      l7764 A9EC  
                                    l7780 AAA2                                      l7756 A930  
                                    l7748 A8B2                                      l7916 802C  
                                    l7692 8108                                      l8396 A39E  
                                    l8388 A32E                                      l8900 D22E  
                                    l9188 F1E0                                      l8820 A7B2  
                                    l8812 A728                                      l8804 A69E  
                                    l9436 92B4                                      l9428 928C  
                                    l9390 7C44                                      l9382 7E14  
                                    l9374 7DF2                                      l9470 847C  
                                    l9454 8D90                                      l9446 8D26  
                                    l6894 B55A                                      l6982 8FF0  
                                    l6974 8FCA                                      l6966 8F68  
                                    l6990 903A                                      l6798 910E  
                                    l7934 9E6C                                      l7926 9CEC  
                                    l8750 A03E                                      l8742 9FA4  
                                    l8726 9EDA                                      l9198 805A  
                                    l9294 E692                                      l9286 E63A  
                                    l9278 E5DC                                      l7686 84FC  
                                    l7678 84B8                                      l7598 DE28  
                                    l8670 FA80                                      l8654 F96C  
                                    l8646 F938                                      l8638 F8F6  
                                    l8590 F69E                                      l8582 F63E  
                                    l8574 F5C8                                      l8558 F554  
                                    l8494 F330                                      l8486 F306  
                                    l8478 F2E4                                      l7854 B240  
                                    l7846 B1F0                                      l7838 B1AE  
                                    l7790 AB5A                                      l7782 AABE  
                                    l7758 A95C                                      l7950 9468  
                                    l7942 941E                                      l7918 8030  
                                    l7694 810C                                      l8398 A3B4  
                                    l8910 D28C                                      l8902 D24A  
                                    l8830 8682                                      l8822 A7C6  
                                    l8814 A738                                      l8806 A6B0  
                                    l9438 92C8                                      l9376 7DF4  
                                    l9384 7C60                                      l9464 8422  
                                    l9456 8DC4                                      l9448 8D62  
                                    l6896 B592                                      l6992 9050  
                                    l6984 9000                                      l6976 8FD8  
                                    l6968 8F84                                      l7928 9D08  
                                    l7936 9E7C                                      l8752 A060  
                                    l8744 9FB4                                      l8736 9F66  
                                    l8728 9EF4                                      l9288 E654  
                                    l9296 E6AE                                      l7688 8514  
                                    l8680 FB12                                      l8672 FAAE  
                                    l8664 FA5C                                      l8656 FA24  
                                    l8648 F954                                      l8592 F6C6  
                                    l8576 F5E8                                      l8496 F340  
                                    l8488 F31C                                      l7880 B2E6  
                                    l7872 B298                                      l7856 B258  
                                    l7776 AA3A                                      l7768 A9F2  
                                    l7960 9502                                      l7952 9494  
                                    l7944 942E                                      l7696 812A  
                                    l8920 D2DA                                      l8912 D29A  
                                    l8904 D25A                                      l8840 86D8  
                                    l8832 8692                                      l8816 A770  
                                    l8808 A6C2                                      l9392 918A  
                                    l9378 7DFA                                      l9386 7C6C  
                                    l9466 842A                                      l8762 7EAA  
                                    l9458 8DC8                                      l6898 B5AC  
                                    l6986 9006                                      l6978 8FE8  
                                    l7938 9EAA                                      l8754 A08C  
                                    l8746 9FD8                                      l8738 9F78  
                                    l9298 E6CC                                      l7890 7FA0  
                                    l8682 FB62                                      l8658 FA36  
                                    l8674 FAF0                                      l8594 F6E4  
                                    l8578 F606                                      l7866 B278  
                                    l7882 B320                                      l7794 AF5E  
                                    l7778 AA68                                      l7970 9552  
                                    l7946 9450                                      l7698 8154  
                                    l8930 D33C                                      l8922 D2EC  
                                    l8914 D29E                                      l8906 D262  
                                    l8850 8720                                      l8842 86F6  
                                    l8834 86A6                                      l8818 A7A6  
                                    l9394 918A                                      l9388 7C6E  
                                    l9468 8478                                      l8764 7EB6  
                                    l6988 9036                                      l6996 82B4  
                                    l8756 A09C                                      l8748 A010  
                                    l7892 7FA8                                      l8692 FC8A  
                                    l8684 FB74                                      l8588 F660  
                                    l8860 8A66                                      l7884 B33C  
                                    l7796 AF6E                                      l7788 AAE4  
                                    l7972 9564                                      l7964 9522  
                                    l7956 94A8                                      l7948 9460  
                                    l7980 83D8                                      l8940 D3EA  
                                    l8932 D34C                                      l8924 D2F4  
                                    l8916 D2B6                                      l8908 D27C  
                                    l8844 870C                                      l8836 86C4  
                                    l8780 A59E                                      l8772 A55A  
                                    l9396 918A                                      l8766 7EBA  
                                    l6998 82BC                                      l7990 7E90  
                                    l8758 A0AC                                      l7894 7FBC  
                                    l8694 FCC6                                      l8686 FC00  
                                    l8870 8AA4                                      l8854 8A3A  
                                    l7886 B370                                      l7798 AFA4  
                                    l7966 952A                                      l7958 94D6  
                                    l7982 8410                                      l8950 D470  
                                    l8942 D3FC                                      l8934 D392  
                                    l8926 D30C                                      l8918 D2C8  
                                    l8846 8714                                      l8838 86CC  
                                    l8782 A5BE                                      l8774 A586  
                                    l9398 919C                                      l9670 8E04  
                                    l9664 7C52                                      l8768 7EEC  
                                    l7896 7FC4                                      l8696 FCD6  
                                    l8872 8AB6                                      l8864 8A6C  
                                    l8856 8A42                                      l7968 9542  
                                    l7992 9992                                      l7976 83A2  
                                    l8960 D510                                      l8952 D490  
                                    l8944 D412                                      l8936 D3A4  
                                    l8928 D324                                      l8784 A5D0  
                                    l8792 A618                                      l9680 8EAC  
                                    l9672 8E28                                      l9666 7C72  
                                    l9690 7C96                                      l7986 7E5E  
                                    l8698 FCE8                                      l8882 8AF2  
                                    l8874 8AC2                                      l8866 8A86  
                                    l8858 8A56                                      l7994 99A2  
                                    l7978 83BE                                      l8970 D574  
                                    l8962 D520                                      l8946 D42E  
                                    l8938 D3C8                                      l8954 D4D8  
                                    l8890 D224                                      l8794 A636  
                                    l8786 A5F4                                      l8778 A592  
                                    l9682 8EC6                                      l9674 8E44  
                                    l7988 7E76                                      l8884 8B0E  
                                    l8876 8ADC                                      l8868 8A98  
                                    l7996 99C4                                      l8980 D630  
                                    l8964 D536                                      l8972 D588  
                                    l8956 D4EA                                      l8948 D460  
                                    l8796 A648                                      l8788 A608  
                                    l9676 8E58                                      l9686 7C84  
                                    l9694 7CF0                                      l8878 8AEC  
                                    l7998 99D4                                      l8990 D698  
                                    l8982 D640                                      l8974 D59A  
                                    l8966 D546                                      l8958 D4F8  
                                    l8894 D22A                                      l9678 8E82  
                                    STR_1 FFFB                                      l9696 7D04  
                                    l8992 D6A8                                      l8984 D650  
                                    l8976 D5FC                                      l8968 D548  
                                    l8888 D210                                      STR_2 FFCC  
                                    l9698 7D0C                                      l8994 D6CA  
                                    l8986 D664                                      l8978 D60C  
                                    l8898 D22A                                      STR_4 FF8B  
                                    STR_5 FF8B                                      l8996 D6F2  
                                    l8988 D678                                      STR_6 FFF4  
                                    STR_7 FFF4                                      l8998 D738  
                                    STR_8 FFE5                                      STR_9 FFE5  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      _LATD 000F8C  
                                    _LATE 000F8D                                      u8000 B496  
                                    u8001 B492                                      u7300 BE32  
                                    u8100 B6A2                                      u8020 B4E2  
                                    u7301 BE2E                                      u8101 B69E  
                                    u8021 B4DE                                      u7310 BE64  
                                    u8030 B4F4                                      u7311 BE60  
                                    u8031 B4F0                                      u7208 BC50  
                                    u8040 B54A                                      u8200 82F0  
                                    u9000 DACC                                      u7209 BC7E  
                                    u8041 B546                                      u8201 82EC  
                                    u9001 DAC8                                      u7170 7F48  
                                    u7330 BED0                                      u7218 BC9A  
                                    u8018 B4BC                                      u8210 827C  
                                    u7171 7F44                                      u7331 BECC  
                                    u7219 BCAE                                      u8019 B4D0  
                                    u8211 8278                                      u7180 7CEA  
                                    u7260 BDA0                                      u7228 BCCA  
                                    u8060 B5FE                                      u7500 CC0C  
                                    u8220 9B36                                      u8300 81C0  
                                    u9100 DC72                                      u7181 7CE6  
                                    u7261 BD9C                                      u7229 BCDE  
                                    u8061 B5FA                                      u7501 CC08  
                                    u8221 9B32                                      u8301 81BC  
                                    u9101 DC6E                                      u9021 DB32  
                                    u7190 8742                                      u7430 C0A6  
                                    u7350 BF2C                                      u7238 BCFA  
                                    u8118 B6D6                                      u8150 8FC2  
                                    u8230 9B88                                      u8310 7DA0  
                                    u9110 DC86                                      u9030 DB4A  
                                    u7191 873E                                      u7431 C0A2  
                                    u7351 BF28                                      u7239 BD0E  
                                    u8119 B6EA                                      u8151 8FBE  
                                    u8135 8F50                                      u7511 CC34  
                                    u8231 9B84                                      u8311 7D9C  
                                    u9111 DC82                                      u9031 DB46  
                                    u7408 BFFC                                      u7360 BF42  
                                    u7328 BE84                                      u7248 BD2A  
                                    u8128 B748                                      u8160 8FE8  
                                    u7520 CC4C                                      u8240 9C14  
                                    u8320 89BC                                      u9200 DDBC  
                                    u7441 C0B2                                      u7409 C010  
                                    u7361 BF3E                                      u7329 BE98  
                                    u7249 BD3E                                      u8129 B75C  
                                    u8161 8FE4                                      u7521 CC48  
                                    u8241 9C10                                      u8321 89B8  
                                    u9201 DDB8                                      u9121 DCA8  
                                    u7418 C02E                                      u7370 BF7C  
                                    u7290 BE20                                      u7258 BD5A  
                                    u7450 7F70                                      u8090 B676  
                                    u8058 B5D8                                      u8170 9000  
                                    u7530 CC74                                      u8250 9C32  
                                    u8410 ADEE                                      u8330 AB8A  
                                    u9130 DCBE                                      u9018 DAEA  
                                    u7419 C042                                      u7371 BF78  
                                    u7291 BE1C                                      u7259 BD8E  
                                    u7451 7F6C                                      u8091 B672  
                                    u8059 B5EA                                      u8171 8FFC  
                                    u7531 CC70                                      u8251 9C2E  
                                    u8411 ADEA                                      u8331 AB86  
                                    u9211 DDE6                                      u9131 DCBA  
                                    u9051 DBA2                                      u9019 DAFE  
                                    u7428 C060                                      u7348 BEFC  
                                    u7460 7F9C                                      u8148 8FA0  
                                    u7700 CF8A                                      u7620 CE0E  
                                    u8260 88D8                                      u8420 AE80  
                                    u8340 ABB4                                      u8500 C290  
                                    u9300 DF04                                      u9220 DE04  
                                    u9060 DBE0                                      u7429 C074  
                                    u7349 BF10                                      u7461 7F98  
                                    u8149 8FB2                                      u7701 CF86  
                                    u7621 CE0A                                      u8261 88D4  
                                    u8405 AD5C                                      u8341 ABB0  
                                    u8501 C28C                                      u9301 DF00  
                                    u9221 DE00                                      u9141 DD02  
                                    u9061 DBDC                                      u7278 BDBC  
                                    u8078 B61A                                      u8190 9050  
                                    u7710 CFA0                                      u8270 88F8  
                                    u8430 AEB2                                      u8510 C2C6  
                                    u9230 DE16                                      u9150 DD20  
                                    u9070 DBEE                                      u7279 BDD0  
                                    u8079 B62E                                      u8191 904C  
                                    u7711 CF9C                                      u7551 CCA2  
                                    u7471 CB92                                      u8271 88F4  
                                    u8431 AEAE                                      u8511 C2C2  
                                    u9231 DE12                                      u9151 DD1C  
                                    u9071 DBEA                                      u7288 BDF4  
                                    u8088 B64A                                      u7720 CFC2  
                                    u7608 CD5E                                      u7560 CCBA  
                                    u7480 CBB4                                      u8280 893E  
                                    u8360 AC56                                      u8520 C322  
                                    u8440 C0DC                                      u8600 C640  
                                    u9400 8514                                      u9320 E006  
                                    u9240 DE28                                      u9160 DD32  
                                    u9048 DB70                                      u7289 BE08  
                                    u8089 B65E                                      u7721 CFBE  
                                    u7609 CD72                                      u7561 CCB6  
                                    u7545 CC76                                      u7481 CBB0  
                                    u8281 893A                                      u8425 AE76  
                                    u8361 AC52                                      u8441 C0D8  
                                    u8601 C63C                                      u9401 8510  
                                    u9241 DE24                                      u9161 DD2E  
                                    u9081 DC3E                                      u9049 DB82  
                                    u7810 9836                                      u7618 CDE8  
                                    u7570 CCFC                                      u7490 CBE0  
                                    u8290 8186                                      u8530 C3C0  
                                    u8450 C106                                      u8610 C69C  
                                    u9410 8526                                      u9170 DD44  
                                    u9090 DC56                                      u7811 9832  
                                    u7619 CDFA                                      u7571 CCF8  
                                    u8291 8182                                      u8355 AC1E  
                                    u8531 C3BC                                      u8451 C102  
                                    u8611 C698                                      u9411 8522  
                                    u9315 DF64                                      u9171 DD40  
                                    u9091 DC52                                      u7388 BF98  
                                    u7820 9878                                      u8188 9024  
                                    u7660 CEB8                                      u7580 CD0E  
                                    u7900 9136                                      u8380 ACF6  
                                    u8540 C45C                                      u8700 C88A  
                                    u8620 C6CC                                      u9500 A92C  
                                    u9420 812A                                      u7389 BFAC  
                                    u7821 9874                                      u8189 9036  
                                    u7661 CEB4                                      u7581 CD0A  
                                    u7901 9132                                      u8381 ACF2  
                                    u8525 C318                                      u8701 C886  
                                    u8621 C6C8                                      u9325 DFFC  
                                    u9501 A928                                      u9421 8126  
                                    u7398 BFCA                                      u7830 98EA  
                                    u7670 CF0C                                      u7638 CE32  
                                    u8390 AD40                                      u8550 C492  
                                    u8470 C190                                      u8710 C8B4  
                                    u8630 C70A                                      u9270 DEBC  
                                    u9430 8154                                      u7399 BFDE  
                                    u7831 98E6                                      u7671 CF08  
                                    u7639 CE46                                      u7495 CBD6  
                                    u8391 AD3C                                      u8375 ACBE  
                                    u8551 C48E                                      u8471 C18C  
                                    u8711 C8B0                                      u8631 C706  
                                    u9335 E02C                                      u9271 DEB8  
                                    u9431 8150                                      u7840 9930  
                                    u7808 D18A                                      u7760 D0C2  
                                    u7648 CE62                                      u7920 9186  
                                    u8560 7CD2                                      u8480 C1CA  
                                    u8800 CA5A                                      u8720 C8EA  
                                    u8640 C740                                      u9360 E126  
                                    u9344 E04E                                      u9280 DECE  
                                    u9600 B010                                      u9520 A9EC  
                                    u9440 A7FC                                      u7841 992C  
                                    u7809 D19E                                      u7761 D0BE  
                                    u7649 CE76                                      u7921 9182  
                                    u8561 7CCC                                      u8545 C452  
                                    u8481 C1C6                                      u8465 C154  
                                    u8801 CA56                                      u8721 C8E6  
                                    u8641 C73C                                      u9361 E122  
                                    u9345 E04A                                      u9281 DECA  
                                    u9601 B00C                                      u9521 A9E8  
                                    u9441 A7F8                                      u7850 9990  
                                    u7738 CFDE                                      u7658 CE92  
                                    u8570 7CD4                                      u8810 CA9A  
                                    u8730 C930                                      u8650 C788  
                                    u9354 E08C                                      u9290 DEE4  
                                    u9258 DE4E                                      u9610 B048  
                                    u9530 AA0C                                      u9450 A82A  
                                    u7851 998C                                      u7931 B39A  
                                    u7739 CFF2                                      u7659 CEA6  
                                    u8811 CA96                                      u8731 C92C  
                                    u8651 C784                                      u9355 E086  
                                    u9291 DEE0                                      u9259 DE60  
                                    u9611 B044                                      u9531 AA08  
                                    u9515 A97E                                      u9451 A826  
                                    u7940 B3B2                                      u7780 D110  
                                    u7748 D00E                                      u8820 CB04  
                                    u8740 C95A                                      u8660 C7CA  
                                    u8580 C5E4                                      u8900 8102  
                                    u9268 DE94                                      u9188 DD6C  
                                    u9700 B258                                      u9620 B088  
                                    u9540 AA36                                      u9460 A87E  
                                    u7941 B3AE                                      u7781 D10C  
                                    u7749 D022                                      u8821 CB00  
                                    u8741 C956                                      u8661 C7C6  
                                    u8581 C5E0                                      u8901 80FE  
                                    u9269 DEA8                                      u9189 DD7E  
                                    u9701 B254                                      u9541 AA32  
                                    u9461 A87A                                      u7758 D054  
                                    u7598 CD2A                                      u7918 915A  
                                    u8910 8344                                      u8830 CB3E  
                                    u8750 C9A2                                      u8670 C81E  
                                    u8590 C616                                      u9390 84E6  
                                    u9198 DD9A                                      u9710 B274  
                                    u9630 B0AC                                      u9550 AA68  
                                    u9470 A896                                      u7759 D068  
                                    u7599 CD3E                                      u7919 916C  
                                    u8911 8340                                      u8495 C254  
                                    u8831 CB3A                                      u8751 C99E  
                                    u8671 C81A                                      u8591 C612  
                                    u9199 DDAC                                      u9711 B270  
                                    u9631 B0A8                                      u9551 AA64  
                                    u9471 A892                                      u7960 B3DE  
                                    u7688 CF32                                      u7880 90F8  
                                    u9800 9EAA                                      u8920 8360  
                                    u8760 C9BC                                      u8680 C83A  
                                    u8840 9588                                      u9720 B294  
                                    u9640 B104                                      u9560 AAE0  
                                    u9480 A8C8                                      u7961 B3DA  
                                    u7689 CF46                                      u7881 90F4  
                                    u7865 9086                                      u9801 9EA6  
                                    u8921 835C                                      u8761 C9B8  
                                    u8681 C836                                      u8841 9584  
                                    u9721 B290                                      u9625 B07E  
                                    u9561 AADC                                      u9481 A8C4  
                                    u7778 D0E8                                      u7698 CF62  
                                    u7890 911E                                      u8930 8376  
                                    u8770 C9D8                                      u8690 C854  
                                    u9378 E148                                      u8850 9646  
                                    u9730 B2C4                                      u9650 B138  
                                    u9570 AB04                                      u9490 A908  
                                    u9810 9460                                      u7971 B3FE  
                                    u7955 B3B4                                      u7779 D0FC  
                                    u7699 CF76                                      u7891 911A  
                                    u8931 8372                                      u8771 C9D4  
                                    u8691 C850                                      u9379 E15A  
                                    u8851 9642                                      u9731 B2C0  
                                    u9651 B134                                      u9811 945C  
                                    u8780 CA00                                      u9388 E17E  
                                    u9740 7FBC                                      u8860 9690  
                                    u9660 B18C                                      u9580 AFC6  
                                    u9820 94A4                                      u9900 99D4  
                                    u7981 B42A                                      u8781 C9FC  
                                    u9397 84DC                                      u9389 E190  
                                    u9741 7FB8                                      u8861 968C  
                                    u9661 B188                                      u9645 B0FA  
                                    u9581 AFC2                                      u9821 94A0  
                                    u9901 99D0                                      u7990 B442  
                                    u7798 D12E                                      u7878 90D6  
                                    u8790 CA44                                      u8950 DA26  
                                    u8870 96B8                                      u9670 B1AE  
                                    u9590 AFDC                                      u9830 94D6  
                                    u9750 8014                                      u9910 9A18  
                                    u7991 B43E                                      u7799 D142  
                                    u7879 90E8                                      u8791 CA40  
                                    u8951 DA22                                      u8871 96B2  
                                    u9671 B1AA                                      u9591 AFD8  
                                    u9575 AAFA                                      u9495 A8FE  
                                    u9831 94D2                                      u9751 8010  
                                    u9911 9A14                                      u8880 96BA  
                                    u9680 B1DE                                      u9840 9502  
                                    u9760 8048                                      u9920 9A4C  
                                    u9681 B1DA                                      u9841 94FE  
                                    u9761 8044                                      u9921 9A48  
                                    u9770 9CD2                                      u9690 B1F0  
                                    u9850 951E                                      u9930 9AA4  
                                    u9771 9CCE                                      u8971 DA90  
                                    u9691 B1EC                                      u9851 951A  
                                    u9931 9AA0                                      u9780 9CEC  
                                    u8980 DAA8                                      u8948 DA04  
                                    u9860 9552                                      u9940 9AE2  
                                    u9781 9CE8                                      u8981 DAA4  
                                    u8949 DA16                                      u9861 954E  
                                    u9941 9ADE                                      u9790 9D08  
                                    u8990 DABA                                      u9870 9564  
                                    u9950 9B10                                      u9791 9D04  
                                    u8991 DAB6                                      u9871 9560  
                                    u9951 9B0C                                      u8968 DA58  
                                    u9960 B83A                                      u9880 83D8  
                                    u8969 DA6C                                      u9961 B836  
                                    u9881 83D4                                      u9890 7E90  
                                    u8898 80D4                                      u9970 B86C  
                                    u9891 7E8C                                      u8899 80E8  
                                    u9971 B868                                      u9980 B882  
                                    u9981 B87E                                      u9990 B8B0  
                                    u9991 B8AC                                      _WPUB 000F61  
                                    _Fsid 0127         SD_SPI_MediaInitialize@CSDResponse 002E  
                                    _file 0D16                                      _brkp 011B  
                                    _main 85D4                              find_volume@i 00C0  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    indf0 000FEF                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf1 000FE7  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                      ??_SPI1_ExchangeBlock 0005  
                             ld_dword@ptr 0001                             disk_ioctl@cmd 0001  
                           disk_read@buff 004A                             disk_read@pdrv 0054  
                                    prodh 000FF4                                      prodl 000FF3  
                          ??_get_ldnumber 0003                                      start 0000  
                          ??_get_hum_data 0003                 __end_of_SPI1_ExchangeByte 7CF0  
                  get_hum_data@hum_string 0001                              ?_follow_path 00D7  
                            ___param_bank 000000                            ??_get_vel_data 0003  
                             _string_copy 8422                           create_name@path 000B  
                        create_chain@clst 009A                              main@alt_file 01C4  
                             _sync_window 9B16                              ?_SDFAST_open 0001  
           __end_of_OSCILLATOR_Initialize 7C52                                     l10440 85D8  
                                   l10450 861A                                     l10442 85E2  
                                   l10452 863A                                     l10444 85EA  
                                   l10454 865A                                     l10446 85F2  
                                   l10438 85D4                                     l10448 85FA  
                                   l10680 AF2E                                     l10690 82A0  
                                   l10682 8390                                     l10692 B788  
                                   l10684 7D5E                                     l10676 7FE0  
                                   l10686 8314                                     l10678 C59A  
                                   l10688 D1D8                               ?_SPI1_Close 0001  
                                   ?_main 0001                                     STR_10 FFD6  
                                   STR_11 FF9A                                     STR_20 FFDF  
                                   STR_12 FFB4                                     STR_13 FFA7  
                                   STR_14 FFF8                                     STR_15 FFFA  
                                   STR_16 FFC1                                     STR_17 FFC1  
                                   STR_18 FFEB                                     STR_19 FFF0  
                         __end_of_dbc_2nd 7C44          SPI1_Open@spi1UniqueConfiguration 0002  
                         __end_of_dbc_1st 7C3A                                     u10000 B8C2  
                                   u10001 B8BE                                     u10010 B8D2  
                         __end_of___lldiv 85D4                                     u10011 B8CE  
                                   u10100 BA22                                     u10020 B904  
                                   u10101 BA1E                                     u10021 B900  
                                   u10110 BA34                                     u10030 B95E  
                                   u10111 BA30                                     u10031 B95A  
                                   u11000 F8EE                                     u10200 BBCE  
                                   u10120 BA5C                                     u10040 B974  
                                   u11001 F8EA                                     u10201 BBCA  
                                   u10121 BA58                                     u10041 B970  
                                   u11010 F914                                     u10210 BBEA  
                                   u10130 BA94                                     u10050 B986  
                                   u11011 F910                                     u10211 BBE6  
                                   u10131 BA90                                     u10051 B982  
                                   u10300 9716                                     u10220 9300  
                                   u11100 FB74                                     u11020 F934  
                                   u10140 BACC                                     u10060 B9B8  
                                   u10301 9712                                     u10221 92FC  
                                   u11101 FB70                                     u11021 F930  
                                   u10141 BAC8                                     u10061 B9B4  
                                   u10310 9746                                     u10230 932C  
                                   u11110 FC56                                     u11030 F954  
                                   u10150 BAEE                                     u10070 B9E2  
                                   u10311 9742                                     u10231 9328  
                                   u11031 F950                                     u10151 BAEA  
                                   u10071 B9DE                                     u10400 8C84  
                                   u11200 9EF4                                     u10320 976C  
                                   u10240 933E                                     u11120 FC86  
                                   u11040 F968                                     u10160 BB42  
                                   u10080 B9F8                                     u12000 EFBC  
                                   u10401 8C80                                     u11201 9EF0  
                                   u10321 9768                                     u10241 933A  
                                   u11121 FC82                                     u11041 F964  
                                   u10161 BB3E                                     u10081 B9F4  
                                   u12001 EFB8                                     u10410 8CAE  
                                   u11210 9F0E                                     u10330 978A  
                                   u10250 9350                                     u11130 FCE8  
                                   u11050 FA36                                     u10170 BB56  
                                   u10090 BA0E                                     u12010 EFF2  
                                   u10411 8CAA                                     u11211 9F0A  
                                   u10331 9786                                     u10251 934C  
                                   u11131 FCE4                                     u11115 FC4C  
                                   u11051 FA32                                     u10171 BB52  
                                   u10091 BA0A                                     u12011 EFEE  
                                   u10420 8CC2                                     u11220 9F60  
                                   u12100 E20C                                     u10340 97A8  
                                   u10260 9374                                     u11140 FD0A  
                                   u11060 FA58                                     u10180 BB66  
                                   u10500 A1AC                                     u12020 F038  
                                   u11300 A648                                     u10421 8CBE  
                                   u11221 9F5C                                     u12101 E208  
                                   u10341 97A4                                     u10261 9370  
                                   u11141 FD06                                     u11061 FA54  
                                   u10181 BB62                                     u10501 A1A8  
                                   u12021 F034                                     u11301 A644  
                                   u11230 9FB4                                     u10430 8556  
                                   u12110 E226                                     u10350 97DA  
                                   u10270 9390                                     u11150 FD40  
                                   u11070 FA7C                                     u10190 BBB0  
                                   u10510 A1C6                                     u12030 F0B2  
                                   u11310 A66E                                     u11231 9FB0  
                                   u10431 8552                                     u12111 E222  
                                   u10351 97D6                                     u10271 938C  
                                   u11151 FD3C                                     u11071 FA78  
                                   u10191 BBAC                                     u10511 A1C2  
                                   u12031 F0AE                                     u11311 A66A  
                                   u11240 7EDC                                     u10440 8578  
                                   u12200 E584                                     u12120 E2A0  
                                   u10360 9814                                     u10280 93B4  
                                   u11160 FD7A                                     u11400 8A66  
                                   u10600 A380                                     u10520 A1E6  
                                   u12040 F188                                     u11320 A6B0  
                                   u10441 8574                                     u12201 E580  
                                   u12121 E29C                                     u10361 9810  
                                   u10281 93B0                                     u11161 FD76  
                                   u11401 8A62                                     u10601 A37C  
                                   u10521 A1E2                                     u12041 F184  
                                   u11321 A6AC                                     u11250 7EEC  
                                   u10370 8C0A                                     u10450 85A0  
                                   u12210 E5C8                                     u10290 93EA  
                                   u11170 FDB0                                     u11090 FB0E  
                                   u11410 8A98                                     u10610 A39E  
                                   u10530 A22C                                     u12050 F1F2  
                                   u11330 A6C2                                     u11251 7EE8  
                                   u10371 8C06                                     u10451 859C  
                                   u12211 E5C4                                     u10291 93E6  
                                   u11171 FDAC                                     u11091 FB0A  
                                   u11411 8A94                                     u10611 A39A  
                                   u10531 A228                                     u12051 F1EE  
                                   u11331 A6BE                                     u10380 8C24  
                                   u12060 806A                                     u12300 E84C  
                                   u12220 E626                                     u12140 E2F8  
                                   u11180 FDE6                                     u11420 8AB6  
                                   u10700 A4EC                                     u10620 A3D0  
                                   u10540 A27E                                     u10460 A0DC  
                                   u11500 D2DA                                     u11340 A704  
                                   u11260 A586                                     u10381 8C20  
                                   u12061 8066                                     u12301 E848  
                                   u12221 E622                                     u12141 E2F4  
                                   u11181 FDE2                                     u11085 FACC  
                                   u11421 8AB2                                     u10701 A4E8  
                                   u10621 A3CC                                     u10541 A27A  
                                   u10461 A0D8                                     u11501 D2D6  
                                   u11341 A700                                     u11261 A582  
                                   u10390 8C4C                                     u11190 9EDA  
                                   u12070 8092                                     u12310 E87C  
                                   u12230 E654                                     u12150 E382  
                                   u10710 F23A                                     u11430 8AEC  
                                   u10630 A42C                                     u10550 A2DE  
                                   u10470 A106                                     u11510 D30C  
                                   u11350 A7A6                                     u11270 A5BE  
                                   u11247 7ED2                                     u10391 8C48  
                                   u11191 9ED6                                     u12071 808E  
                                   u12311 E878                                     u12231 E650  
                                   u12151 E37E                                     u12135 E2C2  
                                   u10711 F236                                     u11431 8AE8  
                                   u10631 A428                                     u10551 A2DA  
                                   u10471 A102                                     u11511 D308  
                                   u11351 A7A2                                     u11271 A5BA  
                                   u12320 E896                                     u12240 E67E  
                                   u12160 E464                                     u12080 E1BE  
                                   u10800 F394                                     u10720 F26C  
                                   u10560 8B4C                                     u10640 A460  
                                   u10480 A122                                     u11600 D520  
                                   u11520 D324                                     u11440 D224  
                                   u11360 86A6                                     u11280 A5D0  
                                   u12400 91EC                                     u12321 E892  
                                   u12241 E67A                                     u12161 E460  
                                   u12081 E1BA                                     u10801 F390  
                                   u10721 F268                                     u10561 8B48  
                                   u10641 A45C                                     u10481 A11E  
                                   u11601 D51C                                     u11521 D320  
                                   u11441 D220                                     u11361 86A2  
                                   u11281 A5CC                                     u12401 91E8  
                                   u12330 E8E8                                     u12250 E6CC  
                                   u12170 E4A8                                     u12090 E1DE  
                                   u10810 F3B6                                     u10730 F29C  
                                   u10570 8B88                                     u10650 A472  
                                   u10490 A162                                     u11610 D536  
                                   u11530 D33C                                     u11450 D25A  
                                   u11370 86C4                                     u11290 A636  
                                   u12410 9210                                     u12331 E8E4  
                                   u12251 E6C8                                     u12171 E4A4  
                                   u12091 E1DA                                     u10811 F3B2  
                                   u10731 F298                                     u10571 8B84  
                                   u10651 A46E                                     u10491 A15E  
                                   u11611 D532                                     u11531 D338  
                                   u11451 D256                                     u11371 86C0  
                                   u11291 A632                                     u12411 920C  
                                   u12340 E956                                     u12260 E716  
                                   u12180 E4D8                                     u10900 F5C8  
                                   u10820 F408                                     u10740 F2C0  
                                   u10660 A480                                     u10580 A310  
                                   u11700 D820                                     u11620 D546  
                                   u11540 D34C                                     u11460 D28C  
                                   u11380 86F6                                     u12420 9242  
                                   u12341 E952                                     u12261 E712  
                                   u12181 E4D4                                     u10901 F5C4  
                                   u10821 F404                                     u10741 F2BC  
                                   u10661 A47C                                     u10581 A30C  
                                   u11701 D81C                                     u11621 D542  
                                   u11541 D348                                     u11461 D288  
                                   u11381 86F2                                     u12421 923E  
                                   u12270 E75A                                     u12190 E53A  
                                   u10910 F63E                                     u10830 F490  
                                   u10750 F2D0                                     u10670 A48E  
                                   u10590 A32E                                     u11710 D850  
                                   u11630 D59A                                     u11550 D412  
                                   u11470 D29A                                     u11390 870C  
                                   u12430 9270                                     u12271 E756  
                                   u12191 E536                                     u10911 F63A  
                                   u10831 F48C                                     u10751 F2CC  
                                   u10671 A48A                                     u10591 A32A  
                                   u11711 D84C                                     u11631 D596  
                                   u11551 D40E                                     u11471 D296  
                                   u11391 8708                                     u12431 926C  
                                   u12440 8D60                                     u12280 E78E  
                                   u10920 F65C                                     u10840 F4DC  
                                   u10760 F2DE                                     u10680 A4B8  
                                   u11720 D88C                                     u11640 D6A8  
                                   u11560 D470                                     u11480 D2B6  
                                   u11800 EA70                                     u10921 F658  
                                   u10841 F4D8                                     u10761 F2DA  
                                   u10681 A4B4                                     u11721 D888  
                                   u11641 D6A4                                     u11561 D46C  
                                   u11481 D2B2                                     u11801 EA6C  
                                   u12450 8D84                                     u12290 E7DA  
                                   u10930 F6E4                                     u10850 F522  
                                   u10770 F32A                                     u10690 A4CE  
                                   u11730 D8D0                                     u11650 D6CA  
                                   u11570 D4EA                                     u11490 D2C8  
                                   u11810 EACA                                     u12451 8D80  
                                   u12291 E7D6                                     u10931 F6E0  
                                   u10851 F51E                                     u10771 F326  
                                   u10691 A4CA                                     u11731 D8CC  
                                   u11651 D6C6                                     u11571 D4E6  
                                   u11491 D2C4                                     u11811 EAC6  
                                   u12460 8DE6                                     u10940 F736  
                                   u10860 F53C                                     u10780 F340  
                                   u11740 D8FA                                     u11580 D4F8  
                                   u11900 ECE4                                     u11820 EAF6  
                                   u12380 919C                                     u12461 8DE2  
                                   u12285 E784                                     u10941 F732  
                                   u10861 F538                                     u10781 F33C  
                                   u11581 D4F4                                     u11901 ECE0  
                                   u12381 9198                                     u12470 8478  
                                   u10950 F78E                                     u10870 F54E  
                                   u10790 F34E                                     u11750 D998  
                                   u11670 D7BC                                     u11590 D510  
                                   u11910 ED36                                     u11830 EB3A  
                                   u12390 91BE                                     u12447 8D56  
                                   u10951 F78A                                     u10871 F54A  
                                   u10791 F34A                                     u11751 D994  
                                   u11671 D7B8                                     u11591 D50C  
                                   u11911 ED32                                     u11831 EB36  
                                   u12391 91BA                                     u12480 84A6  
                                   u10960 F7C6                                     u10880 F564  
                                   u11760 D9B4                                     u11680 D7DC  
                                   u11920 EDAE                                     u11840 EB5C  
                                   u12481 84A2                                     u10961 F7C2  
                                   u10881 F560                                     u11761 D9B0  
                                   u11745 D8EE                                     u11681 D7D8  
                                   u11665 D718                                     u11921 EDAA  
                                   u11841 EB58                                     u11825 EAEC  
                                   u10970 F814                                     u10890 F58E  
                                   u11690 D802                                     u11850 EB8E  
                                   u11770 E9CC                                     u10971 F810  
                                   u10891 F58A                                     u11691 D7FE  
                                   u11851 EB8A                                     u11771 E9C8  
                                   u11940 EE04                                     u11860 EC0E  
                                   u11780 E9EC                                     u12477 846C  
                                   u11941 EE00                                     u11861 EC0A  
                                   u11781 E9E8                                     u10990 F886  
                                   u11950 EE32                                     u11870 EC28  
                                   u11790 EA0C                                     u10991 F882  
                                   u11951 EE2E                                     u11935 EDDE  
                                   u11871 EC24                                     u11791 EA08  
                                   u11960 EE94                                     u11880 EC5A  
                                   u10985 F830                                     u11961 EE90  
                                   u11881 EC56                                     u11970 EF0A  
                                   u11890 ECAE                                     u11971 EF06  
                                   u11891 ECAA                                     u12940 8E82  
                                   u12941 8E7E                                     u12950 8EAC  
                                   u12951 8EA8                                     u12960 8EC6  
                                   u11985 EF34                                     u12961 8EC2  
                                   u11995 EF74                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
                         __end_of_f_close 80A4                                     _FatFs 068E  
                         __end_of_chk_chr 8168             SD_SPI_SectorRead@sector_count 0035  
                                   _ExCvt FE87                           __end_of_f_lseek E98C  
                     ___lmul@multiplicand 0005                              main@hum_file 01C6  
                         __end_of_f_mount 8B12                           __end_of_dir_sdi AB5E  
                   _SD_SPI_AsyncReadTasks B374                           __end_of_f_write F206  
                         __end_of_get_fat AF5E                  ??_SD_SPI_AsyncWriteTasks 0025  
                         __end_of_ld_word 7DDA                           __end_of_mem_cmp 8530  
                         __end_of_mem_cpy 804A                           __end_of_mem_set 7DA2  
                                   _drive 08C1                                     _errno 011D  
                           find_volume@br 008B                             find_volume@fs 00C3  
                           find_volume@pt 00A5                              main@vel_file 01C8  
                          disk_ioctl@buff 0002                                     pclath 000FFA  
                          disk_read@count 0050                                     tablat 000FF5  
                          disk_ioctl@pdrv 0006                          ___expand_heap@pn 0001  
                                   plusw0 000FEB                                     plusw1 000FE3  
                                   plusw2 000FDB                            fp__SDSLOW_open 0000  
                         __end_of_put_fat C5BC                                     status 000FD8  
                         __end_of_st_word 7D3E                           __end_of_sync_fs 9EB2  
                           get_ldnumber@i 0005                             disk_write@res 0058  
                             ?_SD_SendCmd 000C                           __initialization 7E18  
                     disk_initialize@pdrv 0057                       disk_initialize@stat 0058  
                            __end_of_main 8682                             ___expand_heap 8682  
                         ??_get_temp_data 000E                                    ??_main 0060  
                           __activetblptr 000003                              ?_SDSLOW_open 0001  
                 _SD_SPI_IsWriteProtected 7C1C                    write_to_file@data_size 00FA  
                           SD_SendCmd@cmd 001D                                    _ANSELA 000F38  
                                  _ANSELB 000F39                                    _ANSELC 000F3A  
                                  _ANSELD 000F3B                                    _ANSELE 000F3C  
                      SD_SPI_SectorRead@i 003B                                    _OSCCON 000FD3  
         SD_SPI_AsyncWriteTasks@data_byte 012C                      __end_of_dir_register 8BF4  
                        __end_of_check_fs 981C                   ?_SD_SPI_MediaInitialize 0001  
                  write_to_file@file_name 00F2                          __end_of_dir_find 9B16  
                       __end_of_SPI1_Open 87EA                          __end_of_dir_next B374  
                            ?_move_window 0070                      __end_of_create_chain CB6C  
                       append@source_size 000F                          __end_of_ld_clust 8422  
                          ?___expand_heap 0001                          __end_of_ld_dword 88A2  
                 ___simple_search_fl@best 0013                                    ___lmul 8168  
                 ___simple_search_fl@last 000D                   ___simple_search_fl@next 000F  
                               ??_dbc_2nd 0003                                 ??_dbc_1st 0003  
                               ??___lldiv 0009                                    _f_open D210  
                                  _ioInfo 0100                                    _f_sync 9EB2  
                                  _append 8CF2                      __end_of_get_alt_data 7C84  
                                  _malloc 918A                                    _memcpy 7EFA  
                                  _memset 981C                                 ??_f_close 0060  
                          find_volume@fmt 00C2                                    clear_0 7E40  
                                  clear_1 7E52                            find_volume@rfs 0080  
                               ??_chk_chr 0005                            find_volume@vol 00AB  
                 SD_SendCmd@address_bytes 0017                                 ??_f_lseek 00BB  
                                  isa$std 000001                                 ??_f_mount 0060  
                           main@temp_file 01C2                                 ??_dir_sdi 0097  
                               ??_f_write 00BD                                 ??_get_fat 007D  
                                  _strlen 7EAA                                 ??_ld_word 0003  
    SD_SPI_DelayMilliseconds@milliseconds 0006                         write_to_file@data 00F4  
                               ??_mem_cmp 0007                                 ??_mem_cpy 0007  
                               ??_mem_set 0007                          __end_of_validate 8CF2  
                  ?_SD_SPI_AsyncReadTasks 0023                      __end_of_get_ldnumber 941E  
              ?_SD_SPI_IsMediaInitialized 0001                              __mediumconst FE86  
                    __end_of_get_hum_data 7C96                           disk_read@sector 004C  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                          __end_of_st_clust 7EAA  
                        __end_of_st_dword 823E                                 ??_put_fat 0081  
                               ??_st_word 0005                                 ??_sync_fs 0070  
                    __end_of_get_vel_data 7CA8        SD_SPI_AsyncWriteTasks@WriteTimeout 0111  
                       _SYSTEM_Initialize 7C52            __end_of_SD_SPI_MediaInitialize E196  
                              __accesstop 0060                   __end_of__initialization 7E58  
                          get_ldnumber@tc 0009                            disk_write@buff 004D  
                          get_ldnumber@tp 000C                            get_ldnumber@tt 0007  
                          _SPI1_ReadBlock 000000                            disk_write@pdrv 0057  
                           _FatFs@ff$F442 0129                        ?_SYSTEM_Initialize 0001  
                           ___rparam_used 000001                                ___freelist 0119  
                           __end_of_ExCvt FF07                            __pcstackCOMRAM 0001  
                            __pidataBANK1 7CA8                       ??_SYSTEM_Initialize 0001  
                      _SD_SPI_SectorWrite 9054                         ??_SPI1_Initialize 0001  
                          _sdmmc_cmdtable FF07                     SPI1_ExchangeByte@data 0001  
                     ?_SD_SPI_SectorWrite 0032                        _spi1_configuration FF7F  
           __end_of_SD_SPI_IsMediaPresent 7C1C                        string_copy@counter 000A  
               ??_SD_SPI_IsWriteProtected 0001         __end_of_SD_SPI_IsMediaInitialized 7CD6  
           SD_SPI_AsyncWriteTasks@command 012B                           write_to_file@bw 00FC  
               __end_of_SYSTEM_Initialize 7C60                __end_of___simple_search_fl A7D4  
                              __pbssBANK1 0100                          _mediaInformation 01D7  
                    ??_SD_SPI_SectorWrite 003A                            _SPI1_WriteByte 000000  
                        _find_volume$1230 009B                          _find_volume$1231 009F  
                         ??___expand_heap 0003                    _SD_SPI_AsyncWriteTasks CB6C  
                                 ?___lmul 0001                              ?_string_copy 0001  
                                 ?_f_open 00E5                    __end_of_sdmmc_cmdtable FF57  
                                 ?_f_sync 0078                                   ?_append 0005  
                       ??_disk_initialize 0055                                   ?_malloc 0015  
                                 ?_memcpy 0001                                   ?_memset 0001  
                            ?_sync_window 0059                            ___lmul@product 0009  
                            ??_SPI1_Close 0001                                   ?_strlen 0001  
       SD_SPI_AsyncReadTasks@blockCounter 0125                                 ?_check_fs 0077  
                              _disk_ioctl 7D3E                 ?_SD_SPI_DelayMilliseconds 0001  
                                 _OSCCON2 000FD2                            follow_path@res 00E4  
                              _disk_write 82B2                SD_SPI_AsyncWriteTasks@info 0023  
                                 _OSCTUNE 000F9B                                   _SSP1ADD 000FC8  
                          remove_chain@fs 00AF                                   _SSP1BUF 000FC9  
                               ?_dir_find 00CF                                 ?_dir_next 00B5  
         SD_SPI_SectorRead@sector_address 002F                       SD_SPI_SectorWrite@i 003E  
                               ?_ld_clust 0008                                 ?_ld_dword 0001  
                           ?_remove_chain 0098                                   _CurrVol 012E  
                            ??_SD_SendCmd 0011                        __end_of_SPI1_Close 7C18  
                       __end_of_dir_clear 96BC                         __end_of_dir_alloc 956C  
                                 __Hparam 0000                         __end_of_clst2sect 8A3A  
                                 __Lparam 0000                                 ?_validate 0005  
                    ___simple_search_fl@c 0011                      ___simple_search_fl@n 0001  
                       __end_of_disk_read 82B2                             _write_to_file 8E04  
                            _f_write$1546 00C9                                f_close@res 0083  
                               ?_st_clust 0005                                   _dbc_2nd 7C3A  
                                 _dbc_1st 7C30                                 ?_st_dword 0001  
                                 ___lldiv 8530                                check_fs@fs 0077  
                         string_copy@dest 0001                  ___simple_search_fl@split 000B  
                                 _f_close 804A                                   __pcinit 7E18  
                                 _chk_chr 8104                                   _f_lseek E196  
                                 __ramtop 1000                                   _f_mount 8A3A  
                                 __ptext0 85D4                                   __ptext1 8E04  
                                 __ptext2 918A                                   __ptext3 A55A  
                                 __ptext4 8682                                   __ptext5 E98C  
                                 __ptext6 D210                                   __ptext7 A0B0  
                                 __ptext8 A2E2                                   __ptext9 83A2  
                                 _dir_sdi A7D4                                   _f_write E98C  
                             validate@obj 0005                                   _get_fat AB5E  
                             validate@res 000F                               validate@rfs 0007  
                              chk_chr@chr 0003                              _dir_register 8B12  
                              chk_chr@str 0001                                   _ld_word 7DA2  
                                 _mem_cmp 84A8                                   _mem_cpy 7FF2  
                   _OSCILLATOR_Initialize 7C44                                   _mem_set 7D70  
                              ??_check_fs 007D                           find_volume@mode 0082  
                         find_volume@path 007E                     SD_SPI_SectorRead@info 003D  
                         find_volume@nrsv 00AD                      fp__SPI1_ExchangeByte 0000  
                         find_volume@stat 00B3                  ??_PIN_MANAGER_Initialize 0001  
                            _create_chain C5BC                        __end_of_SD_SendCmd C0BC  
                              ??_dir_find 00D1                                   _put_fat C0BC  
                              ??_dir_next 00B9                                   _st_word 7D16  
                              f_lseek@bcs 00D4                                ??_ld_clust 000C  
                                 _sync_fs 9CB4                                f_lseek@ofs 00B7  
                              f_lseek@res 00CB                                ??_ld_dword 0005  
                    end_of_initialization 7E58                                   malloc@m 0019  
                                 malloc@n 0015                                   malloc@p 001D  
                            _get_alt_data 7C72                                f_open@clst 0193  
                              f_open@mode 00E9                                f_open@path 00E7  
                          ??_remove_chain 00A2                    ___expand_heap@new_brkp 0007  
                                 memcpy@d 0007                                   memcpy@n 0005  
                                 memcpy@s 0009                                   memset@c 0003  
                                 memset@k 0009                                   memset@n 0005  
                                 memset@s 000B                         __end_of_spiMaster FF7F  
                         disk_status@pdrv 0003                           disk_status@stat 0004  
                         ___lldiv@divisor 0005                                f_mount@cfs 00CD  
                              f_mount@res 00CA                                f_mount@opt 00C9  
                              f_mount@vol 00CF                           ___lldiv@counter 000D  
                            _get_ldnumber 92D2                                ??_validate 0009  
                            _get_hum_data 7C84                            ?_write_to_file 00F2  
                                 postdec1 000FE5                                   postdec2 000FDD  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                                ??_st_clust 000D  
                          move_window@res 0076                                ??_st_dword 0007  
                               _SPI1_Open 8732                              _get_vel_data 7C96  
                              dir_clear@n 007E                                dir_alloc@n 00D8  
                                 strlen@a 0003                                   strlen@s 0001  
                        remove_chain@clst 009A                                dir_find@dp 00CF  
                              dir_find@fs 00D3                   ??_SD_SPI_AsyncReadTasks 0025  
                   __end_of_get_temp_data 7D16          SD_SPI_SectorWrite@sector_address 0032  
                              dir_sdi@csz 00A1                                dir_sdi@ofs 0093  
                              append@dest 0007                                dir_next@dp 00B5  
            SD_SPI_MediaInitialize@c_size 004A                                dir_next@fs 00C9  
                             ?_disk_ioctl 0001        SD_SPI_AsyncWriteTasks@blockCounter 0123  
                              f_write@btw 00B9                                f_write@res 00CD  
             ??_SD_SPI_IsMediaInitialized 0001                               ?_disk_write 004D  
                               _TRISCbits 000F94                                get_fat@obj 0077  
                              get_fat@val 0087                           get_ldnumber@vol 000A  
                         disk_write@count 0053                    SPI1_ExchangeBlock@data 0005  
                           ??_create_name 000D                                ld_clust@cl 0010  
                              ld_clust@fs 0008                           _SPI1_Initialize 7C60  
                           ??_find_volume 0083                                ld_dword@rv 000A  
                           ??_disk_status 0001                                ?_SPI1_Open 0001  
                          __end_of___lmul 81D2                               st_clust@dir 0007  
                          __end_of_f_open D9C8                            __end_of_f_sync A0B0  
                          __end_of_append 8E04                            __end_of_malloc 92D2  
                          __end_of_memcpy 7F4A                    ?_OSCILLATOR_Initialize 0001  
                          __end_of_memset 9992                                ld_word@ptr 0001  
                         ___expand_heap@n 0005                            __end_of_strlen 7EFA  
                     start_initialization 7E18                               st_dword@val 0003  
                             st_dword@ptr 0001                             fp__SPI1_Close 0000  
                              malloc@lock 010D                                mem_cmp@cnt 0005  
                              mem_cmp@dst 0001                                mem_cmp@src 0003  
                              mem_cpy@cnt 0005                               put_fat@clst 0079  
                              mem_cpy@dst 0001                                mem_cpy@src 0003  
                         _disk_initialize 7F9E                   ?_SD_SPI_AsyncWriteTasks 0023  
                              mem_set@cnt 0005                                mem_set@dst 0001  
                              mem_set@val 0003                           ??_write_to_file 00F6  
               _SD_SPI_IsMediaInitialized 7CBE                             ??_follow_path 00DB  
                      ___simple_search_fl A55A                       __end_of_create_name BC14  
        __end_of_SD_SPI_DelayMilliseconds 8104                                  ??___lmul 0009  
            ___simple_search_fl@best_last 0009                                  ??_f_open 00EA  
                                ??_f_sync 0060                                  ??_append 000B  
                             __pdataBANK1 01CA                                  ??_malloc 0017  
                     __end_of_find_volume FE86                       __end_of_disk_status 83A2  
                                ??_memcpy 0007                                  ??_memset 0007  
                           ??_SDFAST_open 0003                        SD_SendCmd@response 001E  
                     ?___simple_search_fl 0001                                memset@dest 0001  
                    __end_of_remove_chain A2E2                                  ??_strlen 0003  
                               ___heap_hi 068E                                 ___heap_lo 01E0  
                             __pbssBIGRAM 068E                             _SPI1_ReadByte 000000  
          SD_SPI_AsyncWriteTasks@response 0029                             __pcstackBANK0 0060  
                           __pcstackBANK1 017F                     _SD_SPI_IsMediaPresent 7C18  
                       _SD_SPI_SectorRead 8F1E                   __end_of_SPI1_Initialize 7C72  
                            check_fs@sect 0079                        ?_SD_SPI_SectorRead 002F  
                         _SPI1_WriteBlock 000000                      ??___simple_search_fl 0003  
          __end_of_SD_SPI_AsyncWriteTasks D210                         string_copy@source 0003  
                     ??_SD_SPI_SectorRead 0037           SD_SPI_DelayMilliseconds@timeout 0004  
                  _PIN_MANAGER_Initialize 7DDA                     __end_of___expand_heap 8732  
                           __pmediumconst FE86                                 _dir_clear 956C  
                                ?_dbc_2nd 0001                                 _dir_alloc 941E  
                                ?_dbc_1st 0001                                  ?___lldiv 0001  
                               _clst2sect 896E                               ??_SPI1_Open 0001  
                ?_SD_SPI_IsWriteProtected 0001                                  ?_f_close 007F  
                               _disk_read 823E                                  ?_chk_chr 0001  
                           follow_path@dp 00D7                             follow_path@fs 00E1  
                                ?_f_lseek 00B5                             follow_path@ns 00E3  
                           _validate$1262 000D                       __end_of_follow_path A55A  
                                ?_f_mount 00C5                                  ?_dir_sdi 0091  
                                ?_f_write 00B5                                  ?_get_fat 0077  
                           ??_SDSLOW_open 0003                                  ?_ld_word 0001  
                                ?_mem_cmp 0001                                  ?_mem_cpy 0001  
                                ?_mem_set 0001                 __end_of_SD_SPI_SectorRead 9054  
                     __end_of_SDFAST_open 7C30                  ??_SD_SPI_MediaInitialize 0023  
                               f_close@fp 007F                                 f_close@fs 0081  
                                ?_put_fat 0077                                  ?_st_word 0001  
                 __end_of_disk_initialize 7FF2                                  ?_sync_fs 005C  
                             _get_fat$612 0085                         find_volume@fasize 00B8  
SD_SPI_AsyncWriteTasks@preEraseBlockCount 002E                __end_of_SPI1_ExchangeBlock 7F9E  
                         append@dest_size 0011                   SD_SPI_SectorRead@buffer 0033  
                             _create_name B7C0                                 f_lseek@fp 00B5  
                               f_lseek@fs 00D8                                  _LATCbits 000F8B  
                       find_volume@szbfat 00A1                                 f_open@bcs 0187  
                               f_open@ofs 018F                                 f_open@res 0199  
                       find_volume@sysect 00A7                   SD_SPI_SectorRead@result 0039  
                 SD_SPI_SectorRead@status 003A            SD_SPI_SectorWrite@sector_count 0038  
                  get_alt_data@alt_string 0001                               _find_volume F206  
                             _disk_status 8326                             ??_move_window 005C  
                               f_mount@fs 00C5                                 f_mount@rp 00CB  
                         follow_path@path 00D9                                  _PIR1bits 000F9E  
           SD_SPI_AsyncReadTasks@response 0029                                 _spiMaster FF57  
                               _temp_data 016B                             move_window@fs 0070  
                                _SSP1CON1 000FC6                                  _SSP1CON2 000FC5  
                              ?_dir_clear 0070                                 dir_find@c 00D5  
                              ?_dir_alloc 00CF                           remove_chain@obj 0098  
                         remove_chain@res 00AE                           remove_chain@nxt 00AA  
                                _SSP1STAT 000FC7                                ?_clst2sect 000D  
                               f_sync@dir 007B                                 f_sync@res 007A  
                               dir_sdi@dp 0091                                 dir_sdi@fs 00A9  
                              ?_disk_read 004A                                 f_write@cc 00D2  
                               f_write@bw 00BB                                 f_write@fp 00B5  
                               f_write@fs 00DE               SD_SPI_MediaInitialize@count 0049  
             SD_SPI_MediaInitialize@index 0047                                 get_fat@bc 008D  
                               get_fat@fs 008F                                 get_fat@wc 008B  
                _SD_SPI_DelayMilliseconds 80A4             __end_of_SD_SPI_AsyncReadTasks B7C0  
                            ??_disk_ioctl 0004                    ?_SD_SPI_IsMediaPresent 0001  
                            ??_disk_write 0055                              f_lseek@ifptr 00CC  
                            f_lseek@nsect 00D0                                st_clust@cl 0009  
                              st_clust@fs 0005                          ?_SPI1_Initialize 0001  
                       ___lmul@multiplier 0001                               _INTCON2bits 000FF1  
                     __end_of_SDSLOW_open 7C28                                 copy_data0 7E2C  
                               ld_word@rv 0006                                 malloc@end 011F  
                               malloc@cur 0121                                 malloc@new 001F  
                       SD_SendCmd@address 000C                                put_fat@res 0097  
                              put_fat@val 007D                         move_window@sector 0072  
                         dir_next@stretch 00B7                                  __Hrparam 0000  
                               memcpy@tmp 000B           __end_of_SD_SPI_IsWriteProtected 7C20  
                                __Lrparam 0000                               _follow_path A2E2  
                      __end_of_disk_ioctl 7D70                        __end_of_disk_write 8326  
                       SD_SendCmd@timeout 001B                   ??_OSCILLATOR_Initialize 0001  
                              st_word@val 0003                                st_word@ptr 0001  
                     __end_of_move_window 896E                               _SDFAST_open 7C28  
                                dbc_2nd@c 0003                                  dbc_1st@c 0003  
             _SD_SPI_MediaInitialize$4529 0042                                  _check_fs 96BC  
                   SD_SendCmd@longTimeout 0013                                  _alt_data 0157  
                         dir_register@res 00DF                             dir_clear@ibuf 0076  
                           dir_clear@clst 0072                             dir_clear@sect 0078  
                                __ptext10 9992                                  __ptext11 B7C0  
                                __ptext20 956C                                  __ptext12 7C3A  
                                __ptext21 8A3A                                  __ptext13 7C30  
                                __ptext30 C5BC                                  __ptext22 F206  
                                __ptext14 8104                                  __ptext31 C0BC  
                                __ptext23 92D2                                  __ptext15 8B12  
                                __ptext40 8BF4                                  __ptext32 AB5E  
                                __ptext24 7F9E                                  __ptext16 7FF2  
                                __ptext41 8326                                  __ptext33 7DA2  
                                __ptext25 D9C8                                  __ptext17 941E  
                                __ptext50 7D16                                  __ptext42 7C1C  
                                __ptext34 87EA                                  __ptext26 80A4  
                                __ptext18 A7D4                                  __ptext51 88A2  
                                __ptext43 7C18                                  __ptext35 896E  
                                __ptext27 96BC                                  __ptext19 AF5E  
                                __ptext60 981C                                  __ptext52 9B16  
                                __ptext44 7CBE                                  __ptext36 8168  
                                __ptext28 84A8                                  __ptext61 7F4A  
                                __ptext53 82B2                                  __ptext45 9CB4  
                                __ptext37 8530                                  __ptext29 E196  
                                __ptext70 7C96                                  __ptext62 BC14  
                                __ptext54 9054                                  __ptext46 81D2  
                                __ptext38 804A                                  __ptext71 7CF0  
                                __ptext63 7EFA                                  __ptext55 CB6C  
                                __ptext47 7D70                                  __ptext39 9EB2  
                                __ptext72 8422                                  __ptext64 7CD6  
                                __ptext56 823E                                  __ptext48 7D3E  
                                __ptext73 7C84                                  __ptext65 7C28  
                                __ptext57 8F1E                                  __ptext49 7E5E  
                                __ptext74 7C72                                  __ptext66 7C20  
                                __ptext58 7C14                                  __ptext75 7C52  
                                __ptext67 8732                                  __ptext59 B374  
                                __ptext76 7C60                                  __ptext68 8CF2  
                                _dir_find 9992                                  __ptext77 7DDA  
                                __ptext69 7EAA                                  __ptext78 7C44  
                                __ptext79 0000                              _SSP1CON1bits 000FC6  
                                _dir_next AF5E                             dir_alloc@nent 00D1  
                        ?_disk_initialize 0001                                  _ld_clust 83A2  
                                _ld_dword 87EA                            sync_window@res 005B  
                              sync_fs@res 005E                              _remove_chain A0B0  
                                _hum_data 0143                          find_volume@bsect 00BC  
                        find_volume@nclst 00B4                     fp__SPI1_ExchangeBlock 0000  
 SD_SPI_AsyncReadTasks@longTimeoutCounter 0115                          find_volume@tsect 00AF  
                                f_open@dj 019A                                  f_open@cl 018B  
                                f_open@fp 00E5                                  f_open@fs 0197  
                                f_open@dw 017F                                  f_open@sc 0183  
                                _validate 8BF4                                  _vel_data 012F  
                                isa$xinst 000000                             ??_string_copy 0005  
                                f_sync@fp 0078                                  f_sync@fs 007D  
                             ??_dir_clear 005C                               ??_dir_alloc 00D3  
                                _st_clust 7E5E                                  _st_dword 81D2  
                             ??_clst2sect 0013                             ??_sync_window 0060  
                             ??_disk_read 0052                               f_lseek@clst 00DA  
             SPI1_ExchangeBlock@blockSize 0003                  get_temp_data@temp_string 000C  
                                malloc@sz 001B                               _SDSLOW_open 7C20  
                                mem_cmp@d 0009                                  mem_cmp@r 000D  
                                mem_cmp@s 000B                                _INTCONbits 000FF2  
                               put_fat@bc 0095                                  mem_cpy@d 0007  
                               put_fat@fs 0077                                  mem_cpy@s 0009  
                                mem_set@d 0007                                  memcpy@d1 0001  
                                memcpy@s1 0003         ___simple_search_fl@remaining_size 0007  
                           clst2sect@clst 000F                       FatFsDemo_Tasks@F259 01CA  
                          dir_register@dp 00DB                            dir_register@fs 00DD  
                            dir_clear@szb 007C                          ___lldiv@dividend 0001  
                 ?_PIN_MANAGER_Initialize 0001                              dir_alloc@res 00DA  
                           sync_window@fs 0059      SD_SPI_AsyncReadTasks@SingleBlockRead 012D  
                             f_mount@path 00C7                                 sync_fs@fs 005C  
                   __end_of_write_to_file 8F1E                               _move_window 88A2  
                           append@counter 0013                    _SD_SPI_MediaInitialize D9C8  
                                put_fat@p 0093                                _SPI1_Close 7C14  
       SD_SPI_MediaInitialize@c_size_mult 0046                             ?_dir_register 00DB  
         SD_SPI_MediaInitialize@block_len 0048                       __end_of_string_copy 84A8  
                           _get_temp_data 7CF0                               dir_clear@fs 0070  
                             dir_alloc@dp 00CF                               dir_alloc@fs 00D6  
                        ___lldiv@quotient 0009                       __end_of_sync_window 9CB4  
                             dir_find@res 00D6                         remove_chain@pclst 009E  
                           ?_create_chain 0098                          _create_name$1092 000F  
                        _create_name$1097 0011                              dir_next@clst 00CB  
                            append@result 0005                              append@source 0009  
                           ?_get_alt_data 0001                               clst2sect@fs 000D  
                             dir_sdi@clst 00A5                __end_of_SD_SPI_SectorWrite 918A  
          __end_of_PIN_MANAGER_Initialize 7E18                              ?_create_name 0009  
                             dir_next@ofs 00C5                              f_write@csect 00D0  
                            f_write@wbuff 00CE                               f_write@buff 00B7  
                             f_write@clst 00D4                                _SD_SendCmd BC14  
                             f_write@sect 00DA                              ?_find_volume 007E  
                             f_write@wcnt 00D8                             ?_get_ldnumber 0001  
                SD_SPI_SectorWrite@buffer 0036                              ?_disk_status 0001  
                             _put_fat$641 008F                               _put_fat$642 0091  
              __end_of_spi1_configuration FF8B                             ?_get_hum_data 0001  
              ??_SD_SPI_DelayMilliseconds 0002                    SD_SPI_SectorWrite@info 0040  
