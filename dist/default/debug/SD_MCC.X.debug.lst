

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Feb 07 11:31:17 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    85                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    86                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    87   000000                     
    88                           ; Generated 06/04/2022 GMT
    89                           ; 
    90                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    91                           ; All rights reserved.
    92                           ; 
    93                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    94                           ; 
    95                           ; Redistribution and use in source and binary forms, with or without modification, are
    96                           ; permitted provided that the following conditions are met:
    97                           ; 
    98                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    99                           ;        conditions and the following disclaimer.
   100                           ; 
   101                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   102                           ;        of conditions and the following disclaimer in the documentation and/or other
   103                           ;        materials provided with the distribution. Publication is not required when
   104                           ;        this file is used in an embedded application.
   105                           ; 
   106                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   107                           ;        software without specific prior written permission.
   108                           ; 
   109                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   110                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   111                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   112                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   113                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   114                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   115                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   116                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   117                           ; 
   118                           ; 
   119                           ; Code-generator required, PIC18F46K22 Definitions
   120                           ; 
   121                           ; SFR Addresses
   122   000000                     
   123 ;; Function _SPI1_WriteBlock is unused but had its address taken
   124   000000                     
   125 ;; Function _SPI1_ReadBlock is unused but had its address taken
   126   000000                     
   127 ;; Function _SPI1_WriteByte is unused but had its address taken
   128   000000                     
   129 ;; Function _SPI1_ReadByte is unused but had its address taken
   130   000000                     
   131                           	psect	idataBANK1
   132   008AF4                     __pidataBANK1:
   133                           	callstack 0
   134                           
   135                           ;initializer for FatFsDemo_Tasks@F259
   136   008AF4  48                 	db	72
   137   008AF5  65                 	db	101
   138   008AF6  6C                 	db	108
   139   008AF7  6C                 	db	108
   140   008AF8  6F                 	db	111
   141   008AF9  20                 	db	32
   142   008AFA  57                 	db	87
   143   008AFB  6F                 	db	111
   144   008AFC  72                 	db	114
   145   008AFD  6C                 	db	108
   146   008AFE  64                 	db	100
   147   008AFF  21                 	db	33
   148   008B00  00                 	db	0
   149                           
   150                           ;initializer for _mediaInformation
   151   008B01  00                 	db	0
   152   008B02  0200               	dw	512
   153   008B04  00                 	db	0
   154   008B05  0000               	dw	0
   155   008B07  0000               	dw	0
   156   008B09  00                 	db	0
   157                           
   158                           	psect	mediumconst
   159   00FEBA                     __pmediumconst:
   160                           	callstack 0
   161   00FEBA  00                 	db	0
   162   00FEBB                     _ExCvt:
   163                           	callstack 0
   164   00FEBB  80                 	db	128
   165   00FEBC  9A                 	db	154
   166   00FEBD  45                 	db	69
   167   00FEBE  41                 	db	65
   168   00FEBF  8E                 	db	142
   169   00FEC0  41                 	db	65
   170   00FEC1  8F                 	db	143
   171   00FEC2  80                 	db	128
   172   00FEC3  45                 	db	69
   173   00FEC4  45                 	db	69
   174   00FEC5  45                 	db	69
   175   00FEC6  49                 	db	73
   176   00FEC7  49                 	db	73
   177   00FEC8  49                 	db	73
   178   00FEC9  8E                 	db	142
   179   00FECA  8F                 	db	143
   180   00FECB  90                 	db	144
   181   00FECC  92                 	db	146
   182   00FECD  92                 	db	146
   183   00FECE  4F                 	db	79
   184   00FECF  99                 	db	153
   185   00FED0  4F                 	db	79
   186   00FED1  55                 	db	85
   187   00FED2  55                 	db	85
   188   00FED3  59                 	db	89
   189   00FED4  99                 	db	153
   190   00FED5  9A                 	db	154
   191   00FED6  9B                 	db	155
   192   00FED7  9C                 	db	156
   193   00FED8  9D                 	db	157
   194   00FED9  9E                 	db	158
   195   00FEDA  9F                 	db	159
   196   00FEDB  41                 	db	65
   197   00FEDC  49                 	db	73
   198   00FEDD  4F                 	db	79
   199   00FEDE  55                 	db	85
   200   00FEDF  A5                 	db	165
   201   00FEE0  A5                 	db	165
   202   00FEE1  A6                 	db	166
   203   00FEE2  A7                 	db	167
   204   00FEE3  A8                 	db	168
   205   00FEE4  A9                 	db	169
   206   00FEE5  AA                 	db	170
   207   00FEE6  AB                 	db	171
   208   00FEE7  AC                 	db	172
   209   00FEE8  AD                 	db	173
   210   00FEE9  AE                 	db	174
   211   00FEEA  AF                 	db	175
   212   00FEEB  B0                 	db	176
   213   00FEEC  B1                 	db	177
   214   00FEED  B2                 	db	178
   215   00FEEE  B3                 	db	179
   216   00FEEF  B4                 	db	180
   217   00FEF0  B5                 	db	181
   218   00FEF1  B6                 	db	182
   219   00FEF2  B7                 	db	183
   220   00FEF3  B8                 	db	184
   221   00FEF4  B9                 	db	185
   222   00FEF5  BA                 	db	186
   223   00FEF6  BB                 	db	187
   224   00FEF7  BC                 	db	188
   225   00FEF8  BD                 	db	189
   226   00FEF9  BE                 	db	190
   227   00FEFA  BF                 	db	191
   228   00FEFB  C0                 	db	192
   229   00FEFC  C1                 	db	193
   230   00FEFD  C2                 	db	194
   231   00FEFE  C3                 	db	195
   232   00FEFF  C4                 	db	196
   233   00FF00  C5                 	db	197
   234   00FF01  C6                 	db	198
   235   00FF02  C7                 	db	199
   236   00FF03  C8                 	db	200
   237   00FF04  C9                 	db	201
   238   00FF05  CA                 	db	202
   239   00FF06  CB                 	db	203
   240   00FF07  CC                 	db	204
   241   00FF08  CD                 	db	205
   242   00FF09  CE                 	db	206
   243   00FF0A  CF                 	db	207
   244   00FF0B  D0                 	db	208
   245   00FF0C  D1                 	db	209
   246   00FF0D  D2                 	db	210
   247   00FF0E  D3                 	db	211
   248   00FF0F  D4                 	db	212
   249   00FF10  D5                 	db	213
   250   00FF11  D6                 	db	214
   251   00FF12  D7                 	db	215
   252   00FF13  D8                 	db	216
   253   00FF14  D9                 	db	217
   254   00FF15  DA                 	db	218
   255   00FF16  DB                 	db	219
   256   00FF17  DC                 	db	220
   257   00FF18  DD                 	db	221
   258   00FF19  DE                 	db	222
   259   00FF1A  DF                 	db	223
   260   00FF1B  E0                 	db	224
   261   00FF1C  E1                 	db	225
   262   00FF1D  E2                 	db	226
   263   00FF1E  E3                 	db	227
   264   00FF1F  E4                 	db	228
   265   00FF20  E5                 	db	229
   266   00FF21  E6                 	db	230
   267   00FF22  E7                 	db	231
   268   00FF23  E8                 	db	232
   269   00FF24  E9                 	db	233
   270   00FF25  EA                 	db	234
   271   00FF26  EB                 	db	235
   272   00FF27  EC                 	db	236
   273   00FF28  ED                 	db	237
   274   00FF29  EE                 	db	238
   275   00FF2A  EF                 	db	239
   276   00FF2B  F0                 	db	240
   277   00FF2C  F1                 	db	241
   278   00FF2D  F2                 	db	242
   279   00FF2E  F3                 	db	243
   280   00FF2F  F4                 	db	244
   281   00FF30  F5                 	db	245
   282   00FF31  F6                 	db	246
   283   00FF32  F7                 	db	247
   284   00FF33  F8                 	db	248
   285   00FF34  F9                 	db	249
   286   00FF35  FA                 	db	250
   287   00FF36  FB                 	db	251
   288   00FF37  FC                 	db	252
   289   00FF38  FD                 	db	253
   290   00FF39  FE                 	db	254
   291   00FF3A  FF                 	db	255
   292   00FF3B                     __end_of_ExCvt:
   293                           	callstack 0
   294   00FF3B                     _sdmmc_cmdtable:
   295                           	callstack 0
   296   00FF3B  00                 	db	0
   297   00FF3C  95                 	db	149
   298   00FF3D  00                 	db	0
   299   00FF3E  00                 	db	0
   300   00FF3F  01                 	db	1
   301   00FF40  F9                 	db	249
   302   00FF41  00                 	db	0
   303   00FF42  00                 	db	0
   304   00FF43  08                 	db	8
   305   00FF44  87                 	db	135
   306   00FF45  04                 	db	4
   307   00FF46  00                 	db	0
   308   00FF47  09                 	db	9
   309   00FF48  AF                 	db	175
   310   00FF49  00                 	db	0
   311   00FF4A  01                 	db	1
   312   00FF4B  0A                 	db	10
   313   00FF4C  1B                 	db	27
   314   00FF4D  00                 	db	0
   315   00FF4E  01                 	db	1
   316   00FF4F  0C                 	db	12
   317   00FF50  C3                 	db	195
   318   00FF51  01                 	db	1
   319   00FF52  00                 	db	0
   320   00FF53  0D                 	db	13
   321   00FF54  AF                 	db	175
   322   00FF55  02                 	db	2
   323   00FF56  00                 	db	0
   324   00FF57  10                 	db	16
   325   00FF58  FF                 	db	255
   326   00FF59  00                 	db	0
   327   00FF5A  00                 	db	0
   328   00FF5B  11                 	db	17
   329   00FF5C  FF                 	db	255
   330   00FF5D  00                 	db	0
   331   00FF5E  01                 	db	1
   332   00FF5F  12                 	db	18
   333   00FF60  FF                 	db	255
   334   00FF61  00                 	db	0
   335   00FF62  01                 	db	1
   336   00FF63  18                 	db	24
   337   00FF64  FF                 	db	255
   338   00FF65  00                 	db	0
   339   00FF66  01                 	db	1
   340   00FF67  19                 	db	25
   341   00FF68  FF                 	db	255
   342   00FF69  00                 	db	0
   343   00FF6A  01                 	db	1
   344   00FF6B  20                 	db	32
   345   00FF6C  FF                 	db	255
   346   00FF6D  00                 	db	0
   347   00FF6E  00                 	db	0
   348   00FF6F  21                 	db	33
   349   00FF70  FF                 	db	255
   350   00FF71  00                 	db	0
   351   00FF72  00                 	db	0
   352   00FF73  26                 	db	38
   353   00FF74  DF                 	db	223
   354   00FF75  01                 	db	1
   355   00FF76  00                 	db	0
   356   00FF77  37                 	db	55
   357   00FF78  73                 	db	115
   358   00FF79  00                 	db	0
   359   00FF7A  00                 	db	0
   360   00FF7B  3A                 	db	58
   361   00FF7C  25                 	db	37
   362   00FF7D  04                 	db	4
   363   00FF7E  00                 	db	0
   364   00FF7F  3B                 	db	59
   365   00FF80  25                 	db	37
   366   00FF81  00                 	db	0
   367   00FF82  00                 	db	0
   368   00FF83  29                 	db	41
   369   00FF84  FF                 	db	255
   370   00FF85  04                 	db	4
   371   00FF86  00                 	db	0
   372   00FF87  17                 	db	23
   373   00FF88  FF                 	db	255
   374   00FF89  00                 	db	0
   375   00FF8A  00                 	db	0
   376   00FF8B                     __end_of_sdmmc_cmdtable:
   377                           	callstack 0
   378   00FF8B                     _spiMaster:
   379                           	callstack 0
   380   00FF8B  96                 	db	low _SPI1_Close
   381   00FF8C  8A                 	db	high _SPI1_Close
   382   00FF8D  AA                 	db	low _SDFAST_open
   383   00FF8E  8A                 	db	high _SDFAST_open
   384   00FF8F  22                 	db	low _SPI1_ExchangeByte
   385   00FF90  8B                 	db	high _SPI1_ExchangeByte
   386   00FF91  C8                 	db	low _SPI1_ExchangeBlock
   387   00FF92  91                 	db	high _SPI1_ExchangeBlock
   388   00FF93  00                 	db	0
   389   00FF94  00                 	db	0
   390   00FF95  00                 	db	0
   391   00FF96  00                 	db	0
   392   00FF97  00                 	db	0
   393   00FF98  00                 	db	0
   394   00FF99  00                 	db	0
   395   00FF9A  00                 	db	0
   396   00FF9B  00                 	db	0
   397   00FF9C  00                 	db	0
   398   00FF9D  00                 	db	0
   399   00FF9E  00                 	db	0
   400   00FF9F  96                 	db	low _SPI1_Close
   401   00FFA0  8A                 	db	high _SPI1_Close
   402   00FFA1  A2                 	db	low _SDSLOW_open
   403   00FFA2  8A                 	db	high _SDSLOW_open
   404   00FFA3  22                 	db	low _SPI1_ExchangeByte
   405   00FFA4  8B                 	db	high _SPI1_ExchangeByte
   406   00FFA5  C8                 	db	low _SPI1_ExchangeBlock
   407   00FFA6  91                 	db	high _SPI1_ExchangeBlock
   408   00FFA7  00                 	db	0
   409   00FFA8  00                 	db	0
   410   00FFA9  00                 	db	0
   411   00FFAA  00                 	db	0
   412   00FFAB  00                 	db	0
   413   00FFAC  00                 	db	0
   414   00FFAD  00                 	db	0
   415   00FFAE  00                 	db	0
   416   00FFAF  00                 	db	0
   417   00FFB0  00                 	db	0
   418   00FFB1  00                 	db	0
   419   00FFB2  00                 	db	0
   420   00FFB3                     __end_of_spiMaster:
   421                           	callstack 0
   422   00FFB3                     _spi1_configuration:
   423                           	callstack 0
   424   00FFB3  1A                 	db	26
   425   00FFB4  00                 	db	0
   426   00FFB5  01                 	db	1
   427   00FFB6  00                 	db	0
   428   00FFB7  1A                 	db	26
   429   00FFB8  00                 	db	0
   430   00FFB9  04                 	db	4
   431   00FFBA  00                 	db	0
   432   00FFBB  00                 	db	0
   433   00FFBC  40                 	db	64
   434   00FFBD  01                 	db	1
   435   00FFBE  00                 	db	0
   436   00FFBF                     __end_of_spi1_configuration:
   437                           	callstack 0
   438   000000                     _ANSELA	set	3896
   439   000000                     _ANSELB	set	3897
   440   000000                     _ANSELC	set	3898
   441   000000                     _ANSELD	set	3899
   442   000000                     _TRISD	set	3989
   443   000000                     _TRISC	set	3988
   444   000000                     _TRISB	set	3987
   445   000000                     _LATC	set	3979
   446   000000                     _LATB	set	3978
   447   000000                     _LATA	set	3977
   448   000000                     _LATD	set	3980
   449   000000                     _LATE	set	3981
   450   000000                     _LATCbits	set	3979
   451   000000                     _SSP1CON1bits	set	4038
   452   000000                     _TRISCbits	set	3988
   453   000000                     _TRISA	set	3986
   454   000000                     _TRISE	set	3990
   455   000000                     _OSCTUNE	set	3995
   456   000000                     _PIR1bits	set	3998
   457   000000                     _SSP1CON2	set	4037
   458   000000                     _SSP1CON1	set	4038
   459   000000                     _SSP1STAT	set	4039
   460   000000                     _INTCON2bits	set	4081
   461   000000                     _WPUB	set	3937
   462   000000                     _ANSELE	set	3900
   463   000000                     _INTCONbits	set	4082
   464   000000                     _OSCCON2	set	4050
   465   000000                     _OSCCON	set	4051
   466   000000                     _SSP1BUF	set	4041
   467   000000                     _SSP1ADD	set	4040
   468   00FFBF                     STR_7:
   469   00FFBF  22                 	db	34
   470   00FFC0  2A                 	db	42
   471   00FFC1  2B                 	db	43
   472   00FFC2  2C                 	db	44
   473   00FFC3  3A                 	db	58	;':'
   474   00FFC4  3B                 	db	59	;';'
   475   00FFC5  3C                 	db	60	;'<'
   476   00FFC6  3D                 	db	61	;'='
   477   00FFC7  3E                 	db	62	;'>'
   478   00FFC8  3F                 	db	63	;'?'
   479   00FFC9  5B                 	db	91	;'['
   480   00FFCA  5D                 	db	93	;']'
   481   00FFCB  7C                 	db	124
   482   00FFCC  7F                 	db	127
   483   00FFCD  00                 	db	0
   484   00FFCE                     STR_3:
   485   00FFCE  48                 	db	72	;'H'
   486   00FFCF  65                 	db	101	;'e'
   487   00FFD0  6C                 	db	108	;'l'
   488   00FFD1  6C                 	db	108	;'l'
   489   00FFD2  6F                 	db	111	;'o'
   490   00FFD3  20                 	db	32
   491   00FFD4  77                 	db	119	;'w'
   492   00FFD5  6F                 	db	111	;'o'
   493   00FFD6  72                 	db	114	;'r'
   494   00FFD7  6C                 	db	108	;'l'
   495   00FFD8  64                 	db	100	;'d'
   496   00FFD9  21                 	db	33
   497   00FFDA  0D                 	db	13
   498   00FFDB  0A                 	db	10
   499   00FFDC  00                 	db	0
   500   00FFDD  48                 	db	72	;'H'
   501   00FFDE  45                 	db	69	;'E'
   502   00FFDF  4C                 	db	76	;'L'
   503   00FFE0  4C                 	db	76	;'L'
   504   00FFE1  4F                 	db	79	;'O'
   505   00FFE2  2E                 	db	46
   506   00FFE3  54                 	db	84	;'T'
   507   00FFE4  58                 	db	88	;'X'
   508   00FFE5  54                 	db	84	;'T'
   509   00FFE6  00                 	db	0
   510   00FFE7                     STR_2:
   511   00FFE7  68                 	db	104	;'h'
   512   00FFE8  65                 	db	101	;'e'
   513   00FFE9  6C                 	db	108	;'l'
   514   00FFEA  6C                 	db	108	;'l'
   515   00FFEB  6F                 	db	111	;'o'
   516   00FFEC  2E                 	db	46
   517   00FFED  74                 	db	116	;'t'
   518   00FFEE  78                 	db	120	;'x'
   519   00FFEF  74                 	db	116	;'t'
   520   00FFF0  00                 	db	0
   521   00FFF1                     STR_11:
   522   00FFF1  46                 	db	70	;'F'
   523   00FFF2  41                 	db	65	;'A'
   524   00FFF3  54                 	db	84	;'T'
   525   00FFF4  33                 	db	51	;'3'
   526   00FFF5  32                 	db	50	;'2'
   527   00FFF6  00                 	db	0
   528   00FFF7                     STR_9:
   529   00FFF7  46                 	db	70	;'F'
   530   00FFF8  41                 	db	65	;'A'
   531   00FFF9  54                 	db	84	;'T'
   532   00FFFA  00                 	db	0
   533   00FFFB                     STR_4:
   534   00FFFB  30                 	db	48	;'0'
   535   00FFFC  3A                 	db	58	;':'
   536   00FFFD  00                 	db	0
   537   00FFFE  00                 	db	0	; dummy byte at the end
   538   000000                     
   539                           ; #config settings
   540                           
   541                           	psect	cinit
   542   008CDA                     __pcinit:
   543                           	callstack 0
   544   008CDA                     start_initialization:
   545                           	callstack 0
   546   008CDA                     __initialization:
   547                           	callstack 0
   548                           
   549                           ; Initialize objects allocated to BANK1 (22 bytes)
   550                           ; load TBLPTR registers with __pidataBANK1
   551   008CDA  0EF4               	movlw	low __pidataBANK1
   552   008CDC  6EF6               	movwf	tblptrl,c
   553   008CDE  0E8A               	movlw	high __pidataBANK1
   554   008CE0  6EF7               	movwf	tblptrh,c
   555   008CE2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   556   008CE4  6EF8               	movwf	tblptru,c
   557   008CE6  EE01  F043         	lfsr	0,__pdataBANK1
   558   008CEA  EE10 F016          	lfsr	1,22
   559   008CEE                     copy_data0:
   560   008CEE  0009               	tblrd		*+
   561   008CF0  CFF5 FFEE          	movff	tablat,postinc0
   562   008CF4  50E5               	movf	postdec1,w,c
   563   008CF6  50E1               	movf	fsr1l,w,c
   564   008CF8  E1FA               	bnz	copy_data0
   565                           
   566                           ; Clear objects allocated to BIGRAM (2218 bytes)
   567   008CFA  EE06  F08E         	lfsr	0,__pbssBIGRAM
   568   008CFE  EE18 F0AA          	lfsr	1,2218
   569   008D02                     clear_0:
   570   008D02  6AEE               	clrf	postinc0,c
   571   008D04  50E5               	movf	postdec1,w,c
   572   008D06  50E1               	movf	fsr1l,w,c
   573   008D08  E1FC               	bnz	clear_0
   574   008D0A  50E2               	movf	fsr1h,w,c
   575   008D0C  E1FA               	bnz	clear_0
   576                           
   577                           ; Clear objects allocated to BANK1 (21 bytes)
   578   008D0E  EE01  F059         	lfsr	0,__pbssBANK1
   579   008D12  0E15               	movlw	21
   580   008D14                     clear_1:
   581   008D14  6AEE               	clrf	postinc0,c
   582   008D16  06E8               	decf	wreg,f,c
   583   008D18  E1FD               	bnz	clear_1
   584                           
   585                           ; Clear objects allocated to BANK0 (12 bytes)
   586   008D1A  EE00  F0F4         	lfsr	0,__pbssBANK0
   587   008D1E  0E0C               	movlw	12
   588   008D20                     clear_2:
   589   008D20  6AEE               	clrf	postinc0,c
   590   008D22  06E8               	decf	wreg,f,c
   591   008D24  E1FD               	bnz	clear_2
   592   008D26                     end_of_initialization:
   593                           	callstack 0
   594   008D26                     __end_of__initialization:
   595                           	callstack 0
   596   008D26  0100               	movlb	0
   597   008D28  EF6B  F049         	goto	_main	;jump to C main() function
   598                           
   599                           	psect	bssBANK0
   600   0000F4                     __pbssBANK0:
   601                           	callstack 0
   602   0000F4                     _Fsid:
   603                           	callstack 0
   604   0000F4                     	ds	2
   605   0000F6                     _FatFs@ff$F1589:
   606                           	callstack 0
   607   0000F6                     	ds	2
   608   0000F8                     SD_SPI_AsyncWriteTasks@blockCounter:
   609                           	callstack 0
   610   0000F8                     	ds	2
   611   0000FA                     SD_SPI_AsyncReadTasks@blockCounter:
   612                           	callstack 0
   613   0000FA                     	ds	2
   614   0000FC                     _CurrVol:
   615                           	callstack 0
   616   0000FC                     	ds	1
   617   0000FD                     SD_SPI_AsyncWriteTasks@command:
   618                           	callstack 0
   619   0000FD                     	ds	1
   620   0000FE                     SD_SPI_AsyncWriteTasks@data_byte:
   621                           	callstack 0
   622   0000FE                     	ds	1
   623   0000FF                     SD_SPI_AsyncReadTasks@SingleBlockRead:
   624                           	callstack 0
   625   0000FF                     	ds	1
   626                           
   627                           	psect	bssBANK1
   628   000159                     __pbssBANK1:
   629                           	callstack 0
   630   000159                     _ioInfo:
   631                           	callstack 0
   632   000159                     	ds	13
   633   000166                     SD_SPI_AsyncWriteTasks@WriteTimeout:
   634                           	callstack 0
   635   000166                     	ds	4
   636   00016A                     SD_SPI_AsyncReadTasks@longTimeoutCounter:
   637                           	callstack 0
   638   00016A                     	ds	4
   639                           
   640                           	psect	dataBANK1
   641   000143                     __pdataBANK1:
   642                           	callstack 0
   643   000143                     FatFsDemo_Tasks@F259:
   644                           	callstack 0
   645   000143                     	ds	13
   646   000150                     _mediaInformation:
   647                           	callstack 0
   648   000150                     	ds	9
   649                           
   650                           	psect	bssBIGRAM
   651   00068E                     __pbssBIGRAM:
   652                           	callstack 0
   653   00068E                     _drive:
   654                           	callstack 0
   655   00068E                     	ds	563
   656   0008C1                     _FatFs:
   657                           	callstack 0
   658   0008C1                     	ds	563
   659   000AF4                     _file:
   660                           	callstack 0
   661   000AF4                     	ds	546
   662   000D16                     _Fil:
   663                           	callstack 0
   664   000D16                     	ds	546
   665                           
   666                           	psect	cstackBANK1
   667   000100                     __pcstackBANK1:
   668                           	callstack 0
   669   000100                     f_open@dw:
   670                           	callstack 0
   671                           
   672                           ; 4 bytes @ 0x0
   673   000100                     	ds	4
   674   000104                     f_open@sc:
   675                           	callstack 0
   676                           
   677                           ; 4 bytes @ 0x4
   678   000104                     	ds	4
   679   000108                     f_open@bcs:
   680                           	callstack 0
   681                           
   682                           ; 4 bytes @ 0x8
   683   000108                     	ds	4
   684   00010C                     f_open@cl:
   685                           	callstack 0
   686                           
   687                           ; 4 bytes @ 0xC
   688   00010C                     	ds	4
   689   000110                     f_open@ofs:
   690                           	callstack 0
   691                           
   692                           ; 4 bytes @ 0x10
   693   000110                     	ds	4
   694   000114                     f_open@clst:
   695                           	callstack 0
   696                           
   697                           ; 4 bytes @ 0x14
   698   000114                     	ds	4
   699   000118                     f_open@fs:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0x18
   703   000118                     	ds	2
   704   00011A                     f_open@res:
   705                           	callstack 0
   706                           
   707                           ; 1 bytes @ 0x1A
   708   00011A                     	ds	1
   709   00011B                     f_open@dj:
   710                           	callstack 0
   711                           
   712                           ; 40 bytes @ 0x1B
   713   00011B                     	ds	40
   714                           
   715                           	psect	cstackBANK0
   716   000060                     __pcstackBANK0:
   717                           	callstack 0
   718   000060                     ??_sync_window:
   719                           
   720                           ; 1 bytes @ 0x0
   721   000060                     	ds	16
   722   000070                     ??_sync_fs:
   723   000070                     move_window@fs:
   724                           	callstack 0
   725   000070                     dir_clear@fs:
   726                           	callstack 0
   727                           
   728                           ; 2 bytes @ 0x10
   729   000070                     	ds	2
   730   000072                     move_window@sector:
   731                           	callstack 0
   732   000072                     dir_clear@clst:
   733                           	callstack 0
   734                           
   735                           ; 4 bytes @ 0x12
   736   000072                     	ds	4
   737   000076                     move_window@res:
   738                           	callstack 0
   739   000076                     dir_clear@ibuf:
   740                           	callstack 0
   741                           
   742                           ; 2 bytes @ 0x16
   743   000076                     	ds	1
   744   000077                     ?_get_fat:
   745                           	callstack 0
   746   000077                     get_fat@obj:
   747                           	callstack 0
   748   000077                     put_fat@fs:
   749                           	callstack 0
   750   000077                     check_fs@fs:
   751                           	callstack 0
   752                           
   753                           ; 2 bytes @ 0x17
   754   000077                     	ds	1
   755   000078                     f_sync@fp:
   756                           	callstack 0
   757   000078                     dir_clear@sect:
   758                           	callstack 0
   759                           
   760                           ; 4 bytes @ 0x18
   761   000078                     	ds	1
   762   000079                     get_fat@clst:
   763                           	callstack 0
   764   000079                     put_fat@clst:
   765                           	callstack 0
   766   000079                     check_fs@sect:
   767                           	callstack 0
   768                           
   769                           ; 4 bytes @ 0x19
   770   000079                     	ds	1
   771   00007A                     f_sync@res:
   772                           	callstack 0
   773                           
   774                           ; 1 bytes @ 0x1A
   775   00007A                     	ds	1
   776   00007B                     f_sync@dir:
   777                           	callstack 0
   778                           
   779                           ; 2 bytes @ 0x1B
   780   00007B                     	ds	1
   781   00007C                     dir_clear@szb:
   782                           	callstack 0
   783                           
   784                           ; 2 bytes @ 0x1C
   785   00007C                     	ds	1
   786   00007D                     ??_get_fat:
   787   00007D                     f_sync@fs:
   788                           	callstack 0
   789   00007D                     put_fat@val:
   790                           	callstack 0
   791                           
   792                           ; 4 bytes @ 0x1D
   793   00007D                     	ds	1
   794   00007E                     dir_clear@n:
   795                           	callstack 0
   796   00007E                     find_volume@path:
   797                           	callstack 0
   798                           
   799                           ; 2 bytes @ 0x1E
   800   00007E                     	ds	1
   801   00007F                     f_close@fp:
   802                           	callstack 0
   803                           
   804                           ; 2 bytes @ 0x1F
   805   00007F                     	ds	1
   806   000080                     find_volume@rfs:
   807                           	callstack 0
   808                           
   809                           ; 2 bytes @ 0x20
   810   000080                     	ds	1
   811   000081                     ??_put_fat:
   812   000081                     f_close@fs:
   813                           	callstack 0
   814                           
   815                           ; 2 bytes @ 0x21
   816   000081                     	ds	1
   817   000082                     find_volume@mode:
   818                           	callstack 0
   819                           
   820                           ; 1 bytes @ 0x22
   821   000082                     	ds	1
   822   000083                     ??_find_volume:
   823   000083                     f_close@res:
   824                           	callstack 0
   825                           
   826                           ; 1 bytes @ 0x23
   827   000083                     	ds	2
   828   000085                     _get_fat$1759:
   829                           	callstack 0
   830                           
   831                           ; 2 bytes @ 0x25
   832   000085                     	ds	2
   833   000087                     get_fat@val:
   834                           	callstack 0
   835                           
   836                           ; 4 bytes @ 0x27
   837   000087                     	ds	4
   838   00008B                     get_fat@wc:
   839                           	callstack 0
   840   00008B                     find_volume@br:
   841                           	callstack 0
   842                           
   843                           ; 16 bytes @ 0x2B
   844   00008B                     	ds	2
   845   00008D                     get_fat@bc:
   846                           	callstack 0
   847                           
   848                           ; 2 bytes @ 0x2D
   849   00008D                     	ds	2
   850   00008F                     get_fat@fs:
   851                           	callstack 0
   852   00008F                     _put_fat$1788:
   853                           	callstack 0
   854                           
   855                           ; 2 bytes @ 0x2F
   856   00008F                     	ds	2
   857   000091                     _put_fat$1789:
   858                           	callstack 0
   859   000091                     dir_sdi@dp:
   860                           	callstack 0
   861                           
   862                           ; 2 bytes @ 0x31
   863   000091                     	ds	2
   864   000093                     put_fat@p:
   865                           	callstack 0
   866   000093                     dir_sdi@ofs:
   867                           	callstack 0
   868                           
   869                           ; 4 bytes @ 0x33
   870   000093                     	ds	2
   871   000095                     put_fat@bc:
   872                           	callstack 0
   873                           
   874                           ; 2 bytes @ 0x35
   875   000095                     	ds	2
   876   000097                     ??_dir_sdi:
   877   000097                     put_fat@res:
   878                           	callstack 0
   879                           
   880                           ; 1 bytes @ 0x37
   881   000097                     	ds	1
   882   000098                     ?_create_chain:
   883                           	callstack 0
   884   000098                     remove_chain@obj:
   885                           	callstack 0
   886   000098                     create_chain@obj:
   887                           	callstack 0
   888                           
   889                           ; 2 bytes @ 0x38
   890   000098                     	ds	2
   891   00009A                     remove_chain@clst:
   892                           	callstack 0
   893   00009A                     create_chain@clst:
   894                           	callstack 0
   895                           
   896                           ; 4 bytes @ 0x3A
   897   00009A                     	ds	1
   898   00009B                     _find_volume$2377:
   899                           	callstack 0
   900                           
   901                           ; 4 bytes @ 0x3B
   902   00009B                     	ds	3
   903   00009E                     ??_create_chain:
   904   00009E                     remove_chain@pclst:
   905                           	callstack 0
   906                           
   907                           ; 4 bytes @ 0x3E
   908   00009E                     	ds	1
   909   00009F                     _find_volume$2378:
   910                           	callstack 0
   911                           
   912                           ; 2 bytes @ 0x3F
   913   00009F                     	ds	2
   914   0000A1                     dir_sdi@csz:
   915                           	callstack 0
   916   0000A1                     find_volume@szbfat:
   917                           	callstack 0
   918                           
   919                           ; 4 bytes @ 0x41
   920   0000A1                     	ds	1
   921   0000A2                     ??_remove_chain:
   922                           
   923                           ; 1 bytes @ 0x42
   924   0000A2                     	ds	3
   925   0000A5                     find_volume@pt:
   926                           	callstack 0
   927   0000A5                     dir_sdi@clst:
   928                           	callstack 0
   929                           
   930                           ; 4 bytes @ 0x45
   931   0000A5                     	ds	1
   932   0000A6                     create_chain@res:
   933                           	callstack 0
   934                           
   935                           ; 1 bytes @ 0x46
   936   0000A6                     	ds	1
   937   0000A7                     create_chain@scl:
   938                           	callstack 0
   939   0000A7                     find_volume@sysect:
   940                           	callstack 0
   941                           
   942                           ; 4 bytes @ 0x47
   943   0000A7                     	ds	2
   944   0000A9                     dir_sdi@fs:
   945                           	callstack 0
   946                           
   947                           ; 2 bytes @ 0x49
   948   0000A9                     	ds	1
   949   0000AA                     remove_chain@nxt:
   950                           	callstack 0
   951                           
   952                           ; 4 bytes @ 0x4A
   953   0000AA                     	ds	1
   954   0000AB                     find_volume@vol:
   955                           	callstack 0
   956   0000AB                     create_chain@ncl:
   957                           	callstack 0
   958                           
   959                           ; 4 bytes @ 0x4B
   960   0000AB                     	ds	2
   961   0000AD                     find_volume@nrsv:
   962                           	callstack 0
   963                           
   964                           ; 2 bytes @ 0x4D
   965   0000AD                     	ds	1
   966   0000AE                     remove_chain@res:
   967                           	callstack 0
   968                           
   969                           ; 1 bytes @ 0x4E
   970   0000AE                     	ds	1
   971   0000AF                     remove_chain@fs:
   972                           	callstack 0
   973   0000AF                     create_chain@fs:
   974                           	callstack 0
   975   0000AF                     find_volume@tsect:
   976                           	callstack 0
   977                           
   978                           ; 4 bytes @ 0x4F
   979   0000AF                     	ds	2
   980   0000B1                     create_chain@cs:
   981                           	callstack 0
   982                           
   983                           ; 4 bytes @ 0x51
   984   0000B1                     	ds	2
   985   0000B3                     find_volume@stat:
   986                           	callstack 0
   987                           
   988                           ; 1 bytes @ 0x53
   989   0000B3                     	ds	1
   990   0000B4                     find_volume@nclst:
   991                           	callstack 0
   992                           
   993                           ; 4 bytes @ 0x54
   994   0000B4                     	ds	1
   995   0000B5                     dir_next@dp:
   996                           	callstack 0
   997   0000B5                     f_write@fp:
   998                           	callstack 0
   999                           
  1000                           ; 2 bytes @ 0x55
  1001   0000B5                     	ds	2
  1002   0000B7                     dir_next@stretch:
  1003                           	callstack 0
  1004   0000B7                     f_write@buff:
  1005                           	callstack 0
  1006                           
  1007                           ; 2 bytes @ 0x57
  1008   0000B7                     	ds	1
  1009   0000B8                     find_volume@fasize:
  1010                           	callstack 0
  1011                           
  1012                           ; 4 bytes @ 0x58
  1013   0000B8                     	ds	1
  1014   0000B9                     ??_dir_next:
  1015   0000B9                     f_write@btw:
  1016                           	callstack 0
  1017                           
  1018                           ; 2 bytes @ 0x59
  1019   0000B9                     	ds	2
  1020   0000BB                     f_write@bw:
  1021                           	callstack 0
  1022                           
  1023                           ; 2 bytes @ 0x5B
  1024   0000BB                     	ds	1
  1025   0000BC                     find_volume@bsect:
  1026                           	callstack 0
  1027                           
  1028                           ; 4 bytes @ 0x5C
  1029   0000BC                     	ds	1
  1030   0000BD                     ??_f_write:
  1031                           
  1032                           ; 1 bytes @ 0x5D
  1033   0000BD                     	ds	3
  1034   0000C0                     find_volume@i:
  1035                           	callstack 0
  1036                           
  1037                           ; 2 bytes @ 0x60
  1038   0000C0                     	ds	2
  1039   0000C2                     find_volume@fmt:
  1040                           	callstack 0
  1041                           
  1042                           ; 1 bytes @ 0x62
  1043   0000C2                     	ds	1
  1044   0000C3                     find_volume@fs:
  1045                           	callstack 0
  1046                           
  1047                           ; 2 bytes @ 0x63
  1048   0000C3                     	ds	2
  1049   0000C5                     f_mount@fs:
  1050                           	callstack 0
  1051   0000C5                     dir_next@ofs:
  1052                           	callstack 0
  1053                           
  1054                           ; 4 bytes @ 0x65
  1055   0000C5                     	ds	2
  1056   0000C7                     f_mount@path:
  1057                           	callstack 0
  1058                           
  1059                           ; 2 bytes @ 0x67
  1060   0000C7                     	ds	2
  1061   0000C9                     f_mount@opt:
  1062                           	callstack 0
  1063   0000C9                     dir_next@fs:
  1064                           	callstack 0
  1065   0000C9                     _f_write$2693:
  1066                           	callstack 0
  1067                           
  1068                           ; 4 bytes @ 0x69
  1069   0000C9                     	ds	1
  1070   0000CA                     f_mount@res:
  1071                           	callstack 0
  1072                           
  1073                           ; 1 bytes @ 0x6A
  1074   0000CA                     	ds	1
  1075   0000CB                     f_mount@rp:
  1076                           	callstack 0
  1077   0000CB                     dir_next@clst:
  1078                           	callstack 0
  1079                           
  1080                           ; 4 bytes @ 0x6B
  1081   0000CB                     	ds	2
  1082   0000CD                     f_write@res:
  1083                           	callstack 0
  1084   0000CD                     f_mount@cfs:
  1085                           	callstack 0
  1086                           
  1087                           ; 2 bytes @ 0x6D
  1088   0000CD                     	ds	1
  1089   0000CE                     f_write@wbuff:
  1090                           	callstack 0
  1091                           
  1092                           ; 2 bytes @ 0x6E
  1093   0000CE                     	ds	1
  1094   0000CF                     dir_alloc@dp:
  1095                           	callstack 0
  1096   0000CF                     dir_find@dp:
  1097                           	callstack 0
  1098   0000CF                     f_mount@vol:
  1099                           	callstack 0
  1100                           
  1101                           ; 2 bytes @ 0x6F
  1102   0000CF                     	ds	1
  1103   0000D0                     f_write@csect:
  1104                           	callstack 0
  1105                           
  1106                           ; 2 bytes @ 0x70
  1107   0000D0                     	ds	1
  1108   0000D1                     ??_dir_find:
  1109   0000D1                     dir_alloc@nent:
  1110                           	callstack 0
  1111                           
  1112                           ; 2 bytes @ 0x71
  1113   0000D1                     	ds	1
  1114   0000D2                     f_write@cc:
  1115                           	callstack 0
  1116                           
  1117                           ; 2 bytes @ 0x72
  1118   0000D2                     	ds	1
  1119   0000D3                     ??_dir_alloc:
  1120   0000D3                     dir_find@fs:
  1121                           	callstack 0
  1122                           
  1123                           ; 2 bytes @ 0x73
  1124   0000D3                     	ds	1
  1125   0000D4                     f_write@clst:
  1126                           	callstack 0
  1127                           
  1128                           ; 4 bytes @ 0x74
  1129   0000D4                     	ds	1
  1130   0000D5                     dir_find@c:
  1131                           	callstack 0
  1132                           
  1133                           ; 1 bytes @ 0x75
  1134   0000D5                     	ds	1
  1135   0000D6                     dir_find@res:
  1136                           	callstack 0
  1137   0000D6                     dir_alloc@fs:
  1138                           	callstack 0
  1139                           
  1140                           ; 2 bytes @ 0x76
  1141   0000D6                     	ds	1
  1142   0000D7                     follow_path@dp:
  1143                           	callstack 0
  1144                           
  1145                           ; 2 bytes @ 0x77
  1146   0000D7                     	ds	1
  1147   0000D8                     dir_alloc@n:
  1148                           	callstack 0
  1149   0000D8                     f_write@wcnt:
  1150                           	callstack 0
  1151                           
  1152                           ; 2 bytes @ 0x78
  1153   0000D8                     	ds	1
  1154   0000D9                     follow_path@path:
  1155                           	callstack 0
  1156                           
  1157                           ; 2 bytes @ 0x79
  1158   0000D9                     	ds	1
  1159   0000DA                     dir_alloc@res:
  1160                           	callstack 0
  1161   0000DA                     f_write@sect:
  1162                           	callstack 0
  1163                           
  1164                           ; 4 bytes @ 0x7A
  1165   0000DA                     	ds	1
  1166   0000DB                     ??_follow_path:
  1167   0000DB                     dir_register@dp:
  1168                           	callstack 0
  1169                           
  1170                           ; 2 bytes @ 0x7B
  1171   0000DB                     	ds	2
  1172   0000DD                     dir_register@fs:
  1173                           	callstack 0
  1174                           
  1175                           ; 2 bytes @ 0x7D
  1176   0000DD                     	ds	1
  1177   0000DE                     f_write@fs:
  1178                           	callstack 0
  1179                           
  1180                           ; 2 bytes @ 0x7E
  1181   0000DE                     	ds	1
  1182   0000DF                     dir_register@res:
  1183                           	callstack 0
  1184                           
  1185                           ; 1 bytes @ 0x7F
  1186   0000DF                     	ds	2
  1187   0000E1                     follow_path@fs:
  1188                           	callstack 0
  1189                           
  1190                           ; 2 bytes @ 0x81
  1191   0000E1                     	ds	2
  1192   0000E3                     follow_path@ns:
  1193                           	callstack 0
  1194                           
  1195                           ; 1 bytes @ 0x83
  1196   0000E3                     	ds	1
  1197   0000E4                     follow_path@res:
  1198                           	callstack 0
  1199                           
  1200                           ; 1 bytes @ 0x84
  1201   0000E4                     	ds	1
  1202   0000E5                     f_open@fp:
  1203                           	callstack 0
  1204                           
  1205                           ; 2 bytes @ 0x85
  1206   0000E5                     	ds	2
  1207   0000E7                     f_open@path:
  1208                           	callstack 0
  1209                           
  1210                           ; 2 bytes @ 0x87
  1211   0000E7                     	ds	2
  1212   0000E9                     f_open@mode:
  1213                           	callstack 0
  1214                           
  1215                           ; 1 bytes @ 0x89
  1216   0000E9                     	ds	1
  1217   0000EA                     ??_f_open:
  1218                           
  1219                           ; 1 bytes @ 0x8A
  1220   0000EA                     	ds	8
  1221   0000F2                     main@bw:
  1222                           	callstack 0
  1223                           
  1224                           ; 2 bytes @ 0x92
  1225   0000F2                     	ds	2
  1226                           
  1227                           	psect	cstackCOMRAM
  1228   000001                     __pcstackCOMRAM:
  1229                           	callstack 0
  1230   000001                     ??_SPI1_Open:
  1231   000001                     ??_disk_status:
  1232   000001                     ?_ld_word:
  1233                           	callstack 0
  1234   000001                     ?_mem_cmp:
  1235                           	callstack 0
  1236   000001                     ?_chk_chr:
  1237                           	callstack 0
  1238   000001                     ?_dbc_1st:
  1239                           	callstack 0
  1240   000001                     ?_dbc_2nd:
  1241                           	callstack 0
  1242   000001                     ?_get_ldnumber:
  1243                           	callstack 0
  1244   000001                     ?_ld_dword:
  1245                           	callstack 0
  1246   000001                     ?___lmul:
  1247                           	callstack 0
  1248   000001                     ?___lldiv:
  1249                           	callstack 0
  1250   000001                     SPI1_ExchangeByte@data:
  1251                           	callstack 0
  1252   000001                     disk_ioctl@cmd:
  1253                           	callstack 0
  1254   000001                     SPI1_ExchangeBlock@block:
  1255                           	callstack 0
  1256   000001                     ld_word@ptr:
  1257                           	callstack 0
  1258   000001                     ld_dword@ptr:
  1259                           	callstack 0
  1260   000001                     st_word@ptr:
  1261                           	callstack 0
  1262   000001                     st_dword@ptr:
  1263                           	callstack 0
  1264   000001                     mem_cpy@dst:
  1265                           	callstack 0
  1266   000001                     mem_set@dst:
  1267                           	callstack 0
  1268   000001                     mem_cmp@dst:
  1269                           	callstack 0
  1270   000001                     chk_chr@str:
  1271                           	callstack 0
  1272   000001                     get_ldnumber@path:
  1273                           	callstack 0
  1274   000001                     memcpy@d1:
  1275                           	callstack 0
  1276   000001                     memset@dest:
  1277                           	callstack 0
  1278   000001                     ___lmul@multiplier:
  1279                           	callstack 0
  1280   000001                     ___lldiv@dividend:
  1281                           	callstack 0
  1282                           
  1283                           ; 4 bytes @ 0x0
  1284   000001                     	ds	1
  1285   000002                     ??_SD_SPI_DelayMilliseconds:
  1286   000002                     SPI1_Open@spi1UniqueConfiguration:
  1287                           	callstack 0
  1288   000002                     disk_ioctl@buff:
  1289                           	callstack 0
  1290                           
  1291                           ; 2 bytes @ 0x1
  1292   000002                     	ds	1
  1293   000003                     ??_ld_word:
  1294   000003                     ??_get_ldnumber:
  1295   000003                     disk_status@pdrv:
  1296                           	callstack 0
  1297   000003                     dbc_1st@c:
  1298                           	callstack 0
  1299   000003                     dbc_2nd@c:
  1300                           	callstack 0
  1301   000003                     SPI1_ExchangeBlock@blockSize:
  1302                           	callstack 0
  1303   000003                     st_word@val:
  1304                           	callstack 0
  1305   000003                     mem_cpy@src:
  1306                           	callstack 0
  1307   000003                     mem_set@val:
  1308                           	callstack 0
  1309   000003                     mem_cmp@src:
  1310                           	callstack 0
  1311   000003                     chk_chr@chr:
  1312                           	callstack 0
  1313   000003                     memcpy@s1:
  1314                           	callstack 0
  1315   000003                     memset@c:
  1316                           	callstack 0
  1317   000003                     st_dword@val:
  1318                           	callstack 0
  1319                           
  1320                           ; 4 bytes @ 0x2
  1321   000003                     	ds	1
  1322   000004                     ??_disk_ioctl:
  1323   000004                     disk_status@stat:
  1324                           	callstack 0
  1325   000004                     SD_SPI_DelayMilliseconds@timeout:
  1326                           	callstack 0
  1327                           
  1328                           ; 2 bytes @ 0x3
  1329   000004                     	ds	1
  1330   000005                     ??_ld_dword:
  1331   000005                     ??_chk_chr:
  1332   000005                     SPI1_ExchangeBlock@data:
  1333                           	callstack 0
  1334   000005                     mem_cpy@cnt:
  1335                           	callstack 0
  1336   000005                     mem_set@cnt:
  1337                           	callstack 0
  1338   000005                     mem_cmp@cnt:
  1339                           	callstack 0
  1340   000005                     st_clust@fs:
  1341                           	callstack 0
  1342   000005                     get_ldnumber@i:
  1343                           	callstack 0
  1344   000005                     validate@obj:
  1345                           	callstack 0
  1346   000005                     memcpy@n:
  1347                           	callstack 0
  1348   000005                     memset@n:
  1349                           	callstack 0
  1350   000005                     ___lmul@multiplicand:
  1351                           	callstack 0
  1352   000005                     ___lldiv@divisor:
  1353                           	callstack 0
  1354                           
  1355                           ; 4 bytes @ 0x4
  1356   000005                     	ds	1
  1357   000006                     SD_SPI_DelayMilliseconds@milliseconds:
  1358                           	callstack 0
  1359   000006                     disk_ioctl@pdrv:
  1360                           	callstack 0
  1361   000006                     ld_word@rv:
  1362                           	callstack 0
  1363                           
  1364                           ; 2 bytes @ 0x5
  1365   000006                     	ds	1
  1366   000007                     ??_memset:
  1367   000007                     ??_mem_cmp:
  1368   000007                     mem_cpy@d:
  1369                           	callstack 0
  1370   000007                     mem_set@d:
  1371                           	callstack 0
  1372   000007                     st_clust@dir:
  1373                           	callstack 0
  1374   000007                     get_ldnumber@tt:
  1375                           	callstack 0
  1376   000007                     validate@rfs:
  1377                           	callstack 0
  1378   000007                     memcpy@d:
  1379                           	callstack 0
  1380                           
  1381                           ; 2 bytes @ 0x6
  1382   000007                     	ds	1
  1383   000008                     ?_ld_clust:
  1384                           	callstack 0
  1385   000008                     ld_clust@fs:
  1386                           	callstack 0
  1387                           
  1388                           ; 2 bytes @ 0x7
  1389   000008                     	ds	1
  1390   000009                     ??_validate:
  1391   000009                     get_ldnumber@tc:
  1392                           	callstack 0
  1393   000009                     mem_cpy@s:
  1394                           	callstack 0
  1395   000009                     mem_cmp@d:
  1396                           	callstack 0
  1397   000009                     create_name@dp:
  1398                           	callstack 0
  1399   000009                     memcpy@s:
  1400                           	callstack 0
  1401   000009                     st_clust@cl:
  1402                           	callstack 0
  1403   000009                     ___lmul@product:
  1404                           	callstack 0
  1405   000009                     ___lldiv@quotient:
  1406                           	callstack 0
  1407                           
  1408                           ; 4 bytes @ 0x8
  1409   000009                     	ds	1
  1410   00000A                     ld_clust@dir:
  1411                           	callstack 0
  1412   00000A                     get_ldnumber@vol:
  1413                           	callstack 0
  1414   00000A                     ld_dword@rv:
  1415                           	callstack 0
  1416                           
  1417                           ; 4 bytes @ 0x9
  1418   00000A                     	ds	1
  1419   00000B                     memcpy@tmp:
  1420                           	callstack 0
  1421   00000B                     mem_cmp@s:
  1422                           	callstack 0
  1423   00000B                     create_name@path:
  1424                           	callstack 0
  1425   00000B                     memset@k:
  1426                           	callstack 0
  1427                           
  1428                           ; 2 bytes @ 0xA
  1429   00000B                     	ds	1
  1430   00000C                     ??_ld_clust:
  1431   00000C                     ?_SD_SendCmd:
  1432                           	callstack 0
  1433   00000C                     get_ldnumber@tp:
  1434                           	callstack 0
  1435   00000C                     SD_SendCmd@address:
  1436                           	callstack 0
  1437                           
  1438                           ; 4 bytes @ 0xB
  1439   00000C                     	ds	1
  1440   00000D                     ??_create_name:
  1441   00000D                     ?_clst2sect:
  1442                           	callstack 0
  1443   00000D                     ___lldiv@counter:
  1444                           	callstack 0
  1445   00000D                     mem_cmp@r:
  1446                           	callstack 0
  1447   00000D                     clst2sect@fs:
  1448                           	callstack 0
  1449   00000D                     _validate$2409:
  1450                           	callstack 0
  1451   00000D                     memset@s:
  1452                           	callstack 0
  1453                           
  1454                           ; 2 bytes @ 0xC
  1455   00000D                     	ds	2
  1456   00000F                     validate@res:
  1457                           	callstack 0
  1458   00000F                     _create_name$2239:
  1459                           	callstack 0
  1460   00000F                     clst2sect@clst:
  1461                           	callstack 0
  1462                           
  1463                           ; 4 bytes @ 0xE
  1464   00000F                     	ds	1
  1465   000010                     ld_clust@cl:
  1466                           	callstack 0
  1467                           
  1468                           ; 4 bytes @ 0xF
  1469   000010                     	ds	1
  1470   000011                     ??_SD_SendCmd:
  1471   000011                     _create_name$2244:
  1472                           	callstack 0
  1473                           
  1474                           ; 2 bytes @ 0x10
  1475   000011                     	ds	2
  1476   000013                     ??_clst2sect:
  1477   000013                     create_name@d:
  1478                           	callstack 0
  1479   000013                     SD_SendCmd@longTimeout:
  1480                           	callstack 0
  1481                           
  1482                           ; 4 bytes @ 0x12
  1483   000013                     	ds	1
  1484   000014                     create_name@ni:
  1485                           	callstack 0
  1486                           
  1487                           ; 2 bytes @ 0x13
  1488   000014                     	ds	2
  1489   000016                     create_name@p:
  1490                           	callstack 0
  1491                           
  1492                           ; 2 bytes @ 0x15
  1493   000016                     	ds	1
  1494   000017                     SD_SendCmd@address_bytes:
  1495                           	callstack 0
  1496                           
  1497                           ; 4 bytes @ 0x16
  1498   000017                     	ds	1
  1499   000018                     create_name@i:
  1500                           	callstack 0
  1501                           
  1502                           ; 2 bytes @ 0x17
  1503   000018                     	ds	2
  1504   00001A                     create_name@sfn:
  1505                           	callstack 0
  1506                           
  1507                           ; 2 bytes @ 0x19
  1508   00001A                     	ds	1
  1509   00001B                     SD_SendCmd@timeout:
  1510                           	callstack 0
  1511                           
  1512                           ; 2 bytes @ 0x1A
  1513   00001B                     	ds	1
  1514   00001C                     create_name@si:
  1515                           	callstack 0
  1516                           
  1517                           ; 2 bytes @ 0x1B
  1518   00001C                     	ds	1
  1519   00001D                     SD_SendCmd@cmd:
  1520                           	callstack 0
  1521                           
  1522                           ; 1 bytes @ 0x1C
  1523   00001D                     	ds	1
  1524   00001E                     create_name@c:
  1525                           	callstack 0
  1526   00001E                     SD_SendCmd@response:
  1527                           	callstack 0
  1528                           
  1529                           ; 5 bytes @ 0x1D
  1530   00001E                     	ds	5
  1531   000023                     ??_SD_SPI_MediaInitialize:
  1532   000023                     SD_SPI_AsyncReadTasks@info:
  1533                           	callstack 0
  1534   000023                     SD_SPI_AsyncWriteTasks@info:
  1535                           	callstack 0
  1536                           
  1537                           ; 2 bytes @ 0x22
  1538   000023                     	ds	2
  1539   000025                     ??_SD_SPI_AsyncReadTasks:
  1540   000025                     ??_SD_SPI_AsyncWriteTasks:
  1541                           
  1542                           ; 1 bytes @ 0x24
  1543   000025                     	ds	4
  1544   000029                     SD_SPI_AsyncReadTasks@response:
  1545                           	callstack 0
  1546   000029                     SD_SPI_AsyncWriteTasks@response:
  1547                           	callstack 0
  1548                           
  1549                           ; 5 bytes @ 0x28
  1550   000029                     	ds	5
  1551   00002E                     SD_SPI_AsyncReadTasks@bData:
  1552                           	callstack 0
  1553   00002E                     SD_SPI_AsyncWriteTasks@preEraseBlockCount:
  1554                           	callstack 0
  1555   00002E                     SD_SPI_MediaInitialize@CSDResponse:
  1556                           	callstack 0
  1557                           
  1558                           ; 20 bytes @ 0x2D
  1559   00002E                     	ds	1
  1560   00002F                     SD_SPI_SectorRead@sector_address:
  1561                           	callstack 0
  1562                           
  1563                           ; 4 bytes @ 0x2E
  1564   00002F                     	ds	3
  1565   000032                     SD_SPI_SectorWrite@sector_address:
  1566                           	callstack 0
  1567                           
  1568                           ; 4 bytes @ 0x31
  1569   000032                     	ds	1
  1570   000033                     SD_SPI_SectorRead@buffer:
  1571                           	callstack 0
  1572                           
  1573                           ; 2 bytes @ 0x32
  1574   000033                     	ds	2
  1575   000035                     SD_SPI_SectorRead@sector_count:
  1576                           	callstack 0
  1577                           
  1578                           ; 2 bytes @ 0x34
  1579   000035                     	ds	1
  1580   000036                     SD_SPI_SectorWrite@buffer:
  1581                           	callstack 0
  1582                           
  1583                           ; 2 bytes @ 0x35
  1584   000036                     	ds	1
  1585   000037                     ??_SD_SPI_SectorRead:
  1586                           
  1587                           ; 1 bytes @ 0x36
  1588   000037                     	ds	1
  1589   000038                     SD_SPI_SectorWrite@sector_count:
  1590                           	callstack 0
  1591                           
  1592                           ; 2 bytes @ 0x37
  1593   000038                     	ds	1
  1594   000039                     SD_SPI_SectorRead@result:
  1595                           	callstack 0
  1596                           
  1597                           ; 1 bytes @ 0x38
  1598   000039                     	ds	1
  1599   00003A                     ??_SD_SPI_SectorWrite:
  1600   00003A                     SD_SPI_SectorRead@status:
  1601                           	callstack 0
  1602                           
  1603                           ; 1 bytes @ 0x39
  1604   00003A                     	ds	1
  1605   00003B                     SD_SPI_SectorRead@i:
  1606                           	callstack 0
  1607                           
  1608                           ; 2 bytes @ 0x3A
  1609   00003B                     	ds	1
  1610   00003C                     SD_SPI_SectorWrite@result:
  1611                           	callstack 0
  1612                           
  1613                           ; 1 bytes @ 0x3B
  1614   00003C                     	ds	1
  1615   00003D                     SD_SPI_SectorWrite@status:
  1616                           	callstack 0
  1617   00003D                     SD_SPI_SectorRead@info:
  1618                           	callstack 0
  1619                           
  1620                           ; 13 bytes @ 0x3C
  1621   00003D                     	ds	1
  1622   00003E                     SD_SPI_SectorWrite@i:
  1623                           	callstack 0
  1624                           
  1625                           ; 2 bytes @ 0x3D
  1626   00003E                     	ds	2
  1627   000040                     SD_SPI_SectorWrite@info:
  1628                           	callstack 0
  1629                           
  1630                           ; 13 bytes @ 0x3F
  1631   000040                     	ds	2
  1632   000042                     _SD_SPI_MediaInitialize$4163:
  1633                           	callstack 0
  1634                           
  1635                           ; 4 bytes @ 0x41
  1636   000042                     	ds	4
  1637   000046                     SD_SPI_MediaInitialize@c_size_mult:
  1638                           	callstack 0
  1639                           
  1640                           ; 1 bytes @ 0x45
  1641   000046                     	ds	1
  1642   000047                     SD_SPI_MediaInitialize@index:
  1643                           	callstack 0
  1644                           
  1645                           ; 1 bytes @ 0x46
  1646   000047                     	ds	1
  1647   000048                     SD_SPI_MediaInitialize@block_len:
  1648                           	callstack 0
  1649                           
  1650                           ; 1 bytes @ 0x47
  1651   000048                     	ds	1
  1652   000049                     SD_SPI_MediaInitialize@count:
  1653                           	callstack 0
  1654                           
  1655                           ; 1 bytes @ 0x48
  1656   000049                     	ds	1
  1657   00004A                     disk_read@buff:
  1658                           	callstack 0
  1659   00004A                     SD_SPI_MediaInitialize@c_size:
  1660                           	callstack 0
  1661                           
  1662                           ; 4 bytes @ 0x49
  1663   00004A                     	ds	2
  1664   00004C                     disk_read@sector:
  1665                           	callstack 0
  1666                           
  1667                           ; 4 bytes @ 0x4B
  1668   00004C                     	ds	1
  1669   00004D                     disk_write@buff:
  1670                           	callstack 0
  1671                           
  1672                           ; 2 bytes @ 0x4C
  1673   00004D                     	ds	1
  1674   00004E                     SD_SPI_MediaInitialize@response:
  1675                           	callstack 0
  1676                           
  1677                           ; 5 bytes @ 0x4D
  1678   00004E                     	ds	1
  1679   00004F                     disk_write@sector:
  1680                           	callstack 0
  1681                           
  1682                           ; 4 bytes @ 0x4E
  1683   00004F                     	ds	1
  1684   000050                     disk_read@count:
  1685                           	callstack 0
  1686                           
  1687                           ; 2 bytes @ 0x4F
  1688   000050                     	ds	2
  1689   000052                     ??_disk_read:
  1690                           
  1691                           ; 1 bytes @ 0x51
  1692   000052                     	ds	1
  1693   000053                     SD_SPI_MediaInitialize@timeout:
  1694                           	callstack 0
  1695   000053                     disk_write@count:
  1696                           	callstack 0
  1697                           
  1698                           ; 2 bytes @ 0x52
  1699   000053                     	ds	1
  1700   000054                     disk_read@pdrv:
  1701                           	callstack 0
  1702                           
  1703                           ; 1 bytes @ 0x53
  1704   000054                     	ds	1
  1705   000055                     ??_disk_initialize:
  1706   000055                     ??_disk_write:
  1707   000055                     disk_read@res:
  1708                           	callstack 0
  1709                           
  1710                           ; 1 bytes @ 0x54
  1711   000055                     	ds	2
  1712   000057                     disk_initialize@pdrv:
  1713                           	callstack 0
  1714   000057                     disk_write@pdrv:
  1715                           	callstack 0
  1716                           
  1717                           ; 1 bytes @ 0x56
  1718   000057                     	ds	1
  1719   000058                     disk_initialize@stat:
  1720                           	callstack 0
  1721   000058                     disk_write@res:
  1722                           	callstack 0
  1723                           
  1724                           ; 1 bytes @ 0x57
  1725   000058                     	ds	1
  1726   000059                     sync_window@fs:
  1727                           	callstack 0
  1728                           
  1729                           ; 2 bytes @ 0x58
  1730   000059                     	ds	2
  1731   00005B                     sync_window@res:
  1732                           	callstack 0
  1733                           
  1734                           ; 1 bytes @ 0x5A
  1735   00005B                     	ds	1
  1736   00005C                     sync_fs@fs:
  1737                           	callstack 0
  1738                           
  1739                           ; 2 bytes @ 0x5B
  1740   00005C                     	ds	2
  1741   00005E                     sync_fs@res:
  1742                           	callstack 0
  1743                           
  1744                           ; 1 bytes @ 0x5D
  1745   00005E                     	ds	2
  1746   000060                     
  1747                           ; 1 bytes @ 0x5F
  1748 ;;
  1749 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1750 ;;
  1751 ;; *************** function _main *****************
  1752 ;; Defined at:
  1753 ;;		line 51 in file "main.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;		None
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;  bw              2  146[BANK0 ] unsigned int 
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  1    wreg      void 
  1760 ;; Registers used:
  1761 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1768 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1770 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1771 ;;Total ram usage:        2 bytes
  1772 ;; Hardware stack levels required when called: 13
  1773 ;; This function calls:
  1774 ;;		_SYSTEM_Initialize
  1775 ;;		_f_close
  1776 ;;		_f_mount
  1777 ;;		_f_open
  1778 ;;		_f_write
  1779 ;; This function is called by:
  1780 ;;		Startup code after reset
  1781 ;; This function uses a non-reentrant model
  1782 ;;
  1783                           
  1784                           	psect	text0
  1785   0092D6                     __ptext0:
  1786                           	callstack 0
  1787   0092D6                     _main:
  1788                           	callstack 18
  1789   0092D6                     
  1790                           ;main.c: 53:     UINT bw;;main.c: 55:     SYSTEM_Initialize();
  1791   0092D6  EC6A  F045         	call	_SYSTEM_Initialize	;wreg free
  1792   0092DA                     
  1793                           ;main.c: 73:     if (f_mount(&FatFs, "", 1) == FR_OK) {
  1794   0092DA  0EC1               	movlw	low _FatFs
  1795   0092DC  0100               	movlb	0	; () banked
  1796   0092DE  6FC5               	movwf	f_mount@fs& (0+255),b
  1797   0092E0  0E08               	movlw	high _FatFs
  1798   0092E2  6FC6               	movwf	(f_mount@fs+1)& (0+255),b
  1799   0092E4  0EDC               	movlw	low (STR_3+14)
  1800   0092E6  6FC7               	movwf	f_mount@path& (0+255),b
  1801   0092E8  0EFF               	movlw	high (STR_3+14)
  1802   0092EA  6FC8               	movwf	(f_mount@path+1)& (0+255),b
  1803   0092EC  0E01               	movlw	1
  1804   0092EE  6FC9               	movwf	f_mount@opt& (0+255),b
  1805   0092F0  EC8B  F04B         	call	_f_mount	;wreg free
  1806   0092F4  0900               	iorlw	0
  1807   0092F6  A4D8               	btfss	status,2,c
  1808   0092F8  EF80  F049         	goto	u11621
  1809   0092FC  EF82  F049         	goto	u11620
  1810   009300                     u11621:
  1811   009300  EFB1  F049         	goto	l64
  1812   009304                     u11620:
  1813   009304                     
  1814                           ;main.c: 75:   if (f_open(&Fil, "hello.txt", 0x10 | 0x01 | 0x02) == FR_OK) {
  1815   009304  0E16               	movlw	low _Fil
  1816   009306  0100               	movlb	0	; () banked
  1817   009308  6FE5               	movwf	f_open@fp& (0+255),b
  1818   00930A  0E0D               	movlw	high _Fil
  1819   00930C  6FE6               	movwf	(f_open@fp+1)& (0+255),b
  1820   00930E  0EE7               	movlw	low STR_2
  1821   009310  6FE7               	movwf	f_open@path& (0+255),b
  1822   009312  0EFF               	movlw	high STR_2
  1823   009314  6FE8               	movwf	(f_open@path+1)& (0+255),b
  1824   009316  0E13               	movlw	19
  1825   009318  6FE9               	movwf	f_open@mode& (0+255),b
  1826   00931A  EC23  F06D         	call	_f_open	;wreg free
  1827   00931E  0900               	iorlw	0
  1828   009320  A4D8               	btfss	status,2,c
  1829   009322  EF95  F049         	goto	u11631
  1830   009326  EF97  F049         	goto	u11630
  1831   00932A                     u11631:
  1832   00932A  EFB1  F049         	goto	l64
  1833   00932E                     u11630:
  1834   00932E                     
  1835                           ;main.c: 79:    f_write(&Fil, "Hello world!\r\n", 14, &bw);
  1836   00932E  0E16               	movlw	low _Fil
  1837   009330  0100               	movlb	0	; () banked
  1838   009332  6FB5               	movwf	f_write@fp& (0+255),b
  1839   009334  0E0D               	movlw	high _Fil
  1840   009336  6FB6               	movwf	(f_write@fp+1)& (0+255),b
  1841   009338  0ECE               	movlw	low STR_3
  1842   00933A  6FB7               	movwf	f_write@buff& (0+255),b
  1843   00933C  0EFF               	movlw	high STR_3
  1844   00933E  6FB8               	movwf	(f_write@buff+1)& (0+255),b
  1845   009340  0E00               	movlw	0
  1846   009342  6FBA               	movwf	(f_write@btw+1)& (0+255),b
  1847   009344  0E0E               	movlw	14
  1848   009346  6FB9               	movwf	f_write@btw& (0+255),b
  1849   009348  0EF2               	movlw	low main@bw
  1850   00934A  6FBB               	movwf	f_write@bw& (0+255),b
  1851   00934C  0E00               	movlw	high main@bw
  1852   00934E  6FBC               	movwf	(f_write@bw+1)& (0+255),b
  1853   009350  ECE6  F074         	call	_f_write	;wreg free
  1854   009354  0E16               	movlw	low _Fil
  1855   009356  0100               	movlb	0	; () banked
  1856   009358  6F7F               	movwf	f_close@fp& (0+255),b
  1857   00935A  0E0D               	movlw	high _Fil
  1858   00935C  6F80               	movwf	(f_close@fp+1)& (0+255),b
  1859   00935E  ECC0  F046         	call	_f_close	;wreg free
  1860   009362                     l64:
  1861   009362  EFB1  F049         	goto	l64
  1862   009366  EF00  F000         	goto	start
  1863   00936A                     __end_of_main:
  1864                           	callstack 0
  1865                           
  1866 ;; *************** function _f_write *****************
  1867 ;; Defined at:
  1868 ;;		line 3810 in file "mcc_generated_files/fatfs/ff.c"
  1869 ;; Parameters:    Size  Location     Type
  1870 ;;  fp              2   85[BANK0 ] PTR struct .
  1871 ;;		 -> file(546), Fil(546), 
  1872 ;;  buff            2   87[BANK0 ] PTR const void 
  1873 ;;		 -> FatFsDemo_Tasks@data(13), STR_3(15), 
  1874 ;;  btw             2   89[BANK0 ] unsigned int 
  1875 ;;  bw              2   91[BANK0 ] PTR unsigned int 
  1876 ;;		 -> FatFsDemo_Tasks@actualLength(2), main@bw(2), 
  1877 ;; Auto vars:     Size  Location     Type
  1878 ;;  sect            4  122[BANK0 ] unsigned long 
  1879 ;;  clst            4  116[BANK0 ] unsigned long 
  1880 ;;  fs              2  126[BANK0 ] PTR struct .
  1881 ;;		 -> drive(563), NULL(0), FatFs(563), 
  1882 ;;  wcnt            2  120[BANK0 ] unsigned int 
  1883 ;;  cc              2  114[BANK0 ] unsigned int 
  1884 ;;  csect           2  112[BANK0 ] unsigned int 
  1885 ;;  wbuff           2  110[BANK0 ] PTR const unsigned char 
  1886 ;;		 -> FatFsDemo_Tasks@data(13), STR_3(15), 
  1887 ;;  res             1  109[BANK0 ] enum E68
  1888 ;; Return value:  Size  Location     Type
  1889 ;;                  1    wreg      enum E6428
  1890 ;; Registers used:
  1891 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  1892 ;; Tracked objects:
  1893 ;;		On entry : 0/0
  1894 ;;		On exit  : 0/0
  1895 ;;		Unchanged: 0/0
  1896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1897 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1898 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1899 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1900 ;;      Totals:         0      43       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1901 ;;Total ram usage:       43 bytes
  1902 ;; Hardware stack levels used: 1
  1903 ;; Hardware stack levels required when called: 9
  1904 ;; This function calls:
  1905 ;;		_clst2sect
  1906 ;;		_create_chain
  1907 ;;		_disk_read
  1908 ;;		_disk_write
  1909 ;;		_mem_cpy
  1910 ;;		_validate
  1911 ;; This function is called by:
  1912 ;;		_main
  1913 ;;		_FatFsDemo_Tasks
  1914 ;; This function uses a non-reentrant model
  1915 ;;
  1916                           
  1917                           	psect	text1
  1918   00E9CC                     __ptext1:
  1919                           	callstack 0
  1920   00E9CC                     _f_write:
  1921                           	callstack 21
  1922   00E9CC                     
  1923                           ;mcc_generated_files/fatfs/ff.c: 3811:  FIL* fp,;mcc_generated_files/fatfs/ff.c: 3812:  
      +                          const void* buff,;mcc_generated_files/fatfs/ff.c: 3813:  UINT btw,;mcc_generated_files/f
      +                          atfs/ff.c: 3814:  UINT* bw;mcc_generated_files/fatfs/ff.c: 3816: {;mcc_generated_files/f
      +                          atfs/ff.c: 3817:  FRESULT res;;mcc_generated_files/fatfs/ff.c: 3818:  FATFS *fs;;mcc_gen
      +                          erated_files/fatfs/ff.c: 3819:  DWORD clst, sect;;mcc_generated_files/fatfs/ff.c: 3820: 
      +                           UINT wcnt, cc, csect;;mcc_generated_files/fatfs/ff.c: 3821:  const BYTE *wbuff = (const
      +                           BYTE*)buff;
  1924   00E9CC  C0B7  F0CE         	movff	f_write@buff,f_write@wbuff
  1925   00E9D0  C0B8  F0CF         	movff	f_write@buff+1,f_write@wbuff+1
  1926   00E9D4                     
  1927                           ;mcc_generated_files/fatfs/ff.c: 3824:  *bw = 0;
  1928   00E9D4  C0BB  FFD9         	movff	f_write@bw,fsr2l
  1929   00E9D8  C0BC  FFDA         	movff	f_write@bw+1,fsr2h
  1930   00E9DC  0E00               	movlw	0
  1931   00E9DE  6EDE               	movwf	postinc2,c
  1932   00E9E0  0E00               	movlw	0
  1933   00E9E2  6EDD               	movwf	postdec2,c
  1934   00E9E4                     
  1935                           ;mcc_generated_files/fatfs/ff.c: 3825:  res = validate(&fp->obj, &fs);
  1936   00E9E4  C0B5  F005         	movff	f_write@fp,validate@obj
  1937   00E9E8  C0B6  F006         	movff	f_write@fp+1,validate@obj+1
  1938   00E9EC  0EDE               	movlw	low f_write@fs
  1939   00E9EE  6E07               	movwf	validate@rfs^0,c
  1940   00E9F0  0E00               	movlw	high f_write@fs
  1941   00E9F2  6E08               	movwf	(validate@rfs+1)^0,c
  1942   00E9F4  EC68  F04C         	call	_validate	;wreg free
  1943   00E9F8  0100               	movlb	0	; () banked
  1944   00E9FA  6FCD               	movwf	f_write@res& (0+255),b
  1945   00E9FC                     
  1946                           ; BSR set to: 0
  1947                           ;mcc_generated_files/fatfs/ff.c: 3826:  if (res != FR_OK || (res = (FRESULT)fp->err) != 
      +                          FR_OK) return res;
  1948   00E9FC  51CD               	movf	f_write@res& (0+255),w,b
  1949   00E9FE  A4D8               	btfss	status,2,c
  1950   00EA00  EF04  F075         	goto	u11141
  1951   00EA04  EF06  F075         	goto	u11140
  1952   00EA08                     u11141:
  1953   00EA08  EF1D  F079         	goto	l1056
  1954   00EA0C                     u11140:
  1955   00EA0C                     
  1956                           ; BSR set to: 0
  1957   00EA0C  EE20 F00F          	lfsr	2,15
  1958   00EA10  51B5               	movf	f_write@fp& (0+255),w,b
  1959   00EA12  26D9               	addwf	fsr2l,f,c
  1960   00EA14  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  1961   00EA16  22DA               	addwfc	fsr2h,f,c
  1962   00EA18  50DF               	movf	indf2,w,c
  1963   00EA1A  6FCD               	movwf	f_write@res& (0+255),b
  1964   00EA1C  51CD               	movf	f_write@res& (0+255),w,b
  1965   00EA1E  B4D8               	btfsc	status,2,c
  1966   00EA20  EF14  F075         	goto	u11151
  1967   00EA24  EF16  F075         	goto	u11150
  1968   00EA28                     u11151:
  1969   00EA28  EF18  F075         	goto	l8161
  1970   00EA2C                     u11150:
  1971   00EA2C  EF1D  F079         	goto	l1056
  1972   00EA30                     l8161:
  1973                           
  1974                           ; BSR set to: 0
  1975                           ;mcc_generated_files/fatfs/ff.c: 3827:  if (!(fp->flag & 0x02)) return FR_DENIED;
  1976   00EA30  EE20 F00E          	lfsr	2,14
  1977   00EA34  51B5               	movf	f_write@fp& (0+255),w,b
  1978   00EA36  26D9               	addwf	fsr2l,f,c
  1979   00EA38  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  1980   00EA3A  22DA               	addwfc	fsr2h,f,c
  1981   00EA3C  B2DF               	btfsc	indf2,1,c
  1982   00EA3E  EF23  F075         	goto	u11161
  1983   00EA42  EF25  F075         	goto	u11160
  1984   00EA46                     u11161:
  1985   00EA46  EF27  F075         	goto	l8167
  1986   00EA4A                     u11160:
  1987   00EA4A  EF1D  F079         	goto	l1056
  1988   00EA4E                     l8167:
  1989                           
  1990                           ; BSR set to: 0
  1991   00EA4E  EE20 F010          	lfsr	2,16
  1992   00EA52  51B5               	movf	f_write@fp& (0+255),w,b
  1993   00EA54  26D9               	addwf	fsr2l,f,c
  1994   00EA56  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  1995   00EA58  22DA               	addwfc	fsr2h,f,c
  1996   00EA5A  EE10 F010          	lfsr	1,16
  1997   00EA5E  51B5               	movf	f_write@fp& (0+255),w,b
  1998   00EA60  26E1               	addwf	fsr1l,f,c
  1999   00EA62  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  2000   00EA64  22E2               	addwfc	fsr1h,f,c
  2001   00EA66  CFE6 F0C1          	movff	postinc1,??_f_write+4
  2002   00EA6A  CFE6 F0C2          	movff	postinc1,??_f_write+5
  2003   00EA6E  CFE6 F0C3          	movff	postinc1,??_f_write+6
  2004   00EA72  CFE6 F0C4          	movff	postinc1,??_f_write+7
  2005   00EA76  51B9               	movf	f_write@btw& (0+255),w,b
  2006   00EA78  25C1               	addwf	(??_f_write+4)& (0+255),w,b
  2007   00EA7A  6FC5               	movwf	(??_f_write+8)& (0+255),b
  2008   00EA7C  51BA               	movf	(f_write@btw+1)& (0+255),w,b
  2009   00EA7E  21C2               	addwfc	(??_f_write+5)& (0+255),w,b
  2010   00EA80  6FC6               	movwf	(??_f_write+9)& (0+255),b
  2011   00EA82  0E00               	movlw	0
  2012   00EA84  21C3               	addwfc	(??_f_write+6)& (0+255),w,b
  2013   00EA86  6FC7               	movwf	(??_f_write+10)& (0+255),b
  2014   00EA88  0E00               	movlw	0
  2015   00EA8A  21C4               	addwfc	(??_f_write+7)& (0+255),w,b
  2016   00EA8C  6FC8               	movwf	(??_f_write+11)& (0+255),b
  2017   00EA8E  50DE               	movf	postinc2,w,c
  2018   00EA90  5DC5               	subwf	(??_f_write+8)& (0+255),w,b
  2019   00EA92  50DE               	movf	postinc2,w,c
  2020   00EA94  59C6               	subwfb	(??_f_write+9)& (0+255),w,b
  2021   00EA96  50DE               	movf	postinc2,w,c
  2022   00EA98  59C7               	subwfb	(??_f_write+10)& (0+255),w,b
  2023   00EA9A  50DE               	movf	postinc2,w,c
  2024   00EA9C  59C8               	subwfb	(??_f_write+11)& (0+255),w,b
  2025   00EA9E  B0D8               	btfsc	status,0,c
  2026   00EAA0  EF54  F075         	goto	u11171
  2027   00EAA4  EF56  F075         	goto	u11170
  2028   00EAA8                     u11171:
  2029   00EAA8  EF0C  F079         	goto	l8281
  2030   00EAAC                     u11170:
  2031   00EAAC                     
  2032                           ; BSR set to: 0
  2033                           ;mcc_generated_files/fatfs/ff.c: 3831:   btw = (UINT)(0xFFFFFFFF - (DWORD)fp->fptr);
  2034   00EAAC  EE20 F010          	lfsr	2,16
  2035   00EAB0  51B5               	movf	f_write@fp& (0+255),w,b
  2036   00EAB2  26D9               	addwf	fsr2l,f,c
  2037   00EAB4  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  2038   00EAB6  22DA               	addwfc	fsr2h,f,c
  2039   00EAB8  CFDE F0BD          	movff	postinc2,??_f_write
  2040   00EABC  CFDD F0BE          	movff	postdec2,??_f_write+1
  2041   00EAC0  1DBD               	comf	??_f_write& (0+255),w,b
  2042   00EAC2  6FB9               	movwf	f_write@btw& (0+255),b
  2043   00EAC4  1DBE               	comf	(??_f_write+1)& (0+255),w,b
  2044   00EAC6  6FBA               	movwf	(f_write@btw+1)& (0+255),b
  2045   00EAC8  EF0C  F079         	goto	l8281
  2046   00EACC                     l8171:
  2047                           
  2048                           ; BSR set to: 0
  2049                           ;mcc_generated_files/fatfs/ff.c: 3835:   btw -= wcnt, *bw += wcnt, wbuff += wcnt, fp->fp
      +                          tr += wcnt, fp->obj.objsize = (fp->fptr > fp->obj.objsize) ? fp->fptr : fp->obj.objsize)
      +                           {;mcc_generated_files/fatfs/ff.c: 3836:   if (fp->fptr % ((UINT)512) == 0) {
  2050   00EACC  EE20 F010          	lfsr	2,16
  2051   00EAD0  51B5               	movf	f_write@fp& (0+255),w,b
  2052   00EAD2  26D9               	addwf	fsr2l,f,c
  2053   00EAD4  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  2054   00EAD6  22DA               	addwfc	fsr2h,f,c
  2055   00EAD8  0EFF               	movlw	255
  2056   00EADA  14DE               	andwf	postinc2,w,c
  2057   00EADC  6FBD               	movwf	??_f_write& (0+255),b
  2058   00EADE  0E01               	movlw	1
  2059   00EAE0  14DE               	andwf	postinc2,w,c
  2060   00EAE2  6FBE               	movwf	(??_f_write+1)& (0+255),b
  2061   00EAE4  0E00               	movlw	0
  2062   00EAE6  14DE               	andwf	postinc2,w,c
  2063   00EAE8  6FBF               	movwf	(??_f_write+2)& (0+255),b
  2064   00EAEA  0E00               	movlw	0
  2065   00EAEC  14DE               	andwf	postinc2,w,c
  2066   00EAEE  6FC0               	movwf	(??_f_write+3)& (0+255),b
  2067   00EAF0  51BD               	movf	??_f_write& (0+255),w,b
  2068   00EAF2  11BE               	iorwf	(??_f_write+1)& (0+255),w,b
  2069   00EAF4  11BF               	iorwf	(??_f_write+2)& (0+255),w,b
  2070   00EAF6  11C0               	iorwf	(??_f_write+3)& (0+255),w,b
  2071   00EAF8  A4D8               	btfss	status,2,c
  2072   00EAFA  EF81  F075         	goto	u11181
  2073   00EAFE  EF83  F075         	goto	u11180
  2074   00EB02                     u11181:
  2075   00EB02  EF52  F078         	goto	l1063
  2076   00EB06                     u11180:
  2077   00EB06                     
  2078                           ; BSR set to: 0
  2079                           ;mcc_generated_files/fatfs/ff.c: 3837:    csect = (UINT)(fp->fptr / ((UINT)512)) & (fs->
      +                          csize - 1);
  2080   00EB06  EE20 F010          	lfsr	2,16
  2081   00EB0A  51B5               	movf	f_write@fp& (0+255),w,b
  2082   00EB0C  26D9               	addwf	fsr2l,f,c
  2083   00EB0E  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  2084   00EB10  22DA               	addwfc	fsr2h,f,c
  2085   00EB12  CFDE F0BD          	movff	postinc2,??_f_write
  2086   00EB16  CFDE F0BE          	movff	postinc2,??_f_write+1
  2087   00EB1A  CFDE F0BF          	movff	postinc2,??_f_write+2
  2088   00EB1E  CFDE F0C0          	movff	postinc2,??_f_write+3
  2089   00EB22  0E0A               	movlw	10
  2090   00EB24  EF99  F075         	goto	u11190
  2091   00EB28                     u11195:
  2092   00EB28  90D8               	bcf	status,0,c
  2093   00EB2A  33C0               	rrcf	(??_f_write+3)& (0+255),f,b
  2094   00EB2C  33BF               	rrcf	(??_f_write+2)& (0+255),f,b
  2095   00EB2E  33BE               	rrcf	(??_f_write+1)& (0+255),f,b
  2096   00EB30  33BD               	rrcf	??_f_write& (0+255),f,b
  2097   00EB32                     u11190:
  2098   00EB32  2EE8               	decfsz	wreg,f,c
  2099   00EB34  EF94  F075         	goto	u11195
  2100   00EB38  EE20 F009          	lfsr	2,9
  2101   00EB3C  51DE               	movf	f_write@fs& (0+255),w,b
  2102   00EB3E  26D9               	addwf	fsr2l,f,c
  2103   00EB40  51DF               	movf	(f_write@fs+1)& (0+255),w,b
  2104   00EB42  22DA               	addwfc	fsr2h,f,c
  2105   00EB44  CFDE F0C1          	movff	postinc2,??_f_write+4
  2106   00EB48  CFDD F0C2          	movff	postdec2,??_f_write+5
  2107   00EB4C  0EFF               	movlw	255
  2108   00EB4E  25C1               	addwf	(??_f_write+4)& (0+255),w,b
  2109   00EB50  6FC3               	movwf	(??_f_write+6)& (0+255),b
  2110   00EB52  0EFF               	movlw	255
  2111   00EB54  21C2               	addwfc	(??_f_write+5)& (0+255),w,b
  2112   00EB56  6FC4               	movwf	(??_f_write+7)& (0+255),b
  2113   00EB58  51BD               	movf	??_f_write& (0+255),w,b
  2114   00EB5A  15C3               	andwf	(??_f_write+6)& (0+255),w,b
  2115   00EB5C  6FD0               	movwf	f_write@csect& (0+255),b
  2116   00EB5E  51BE               	movf	(??_f_write+1)& (0+255),w,b
  2117   00EB60  15C4               	andwf	(??_f_write+7)& (0+255),w,b
  2118   00EB62  6FD1               	movwf	(f_write@csect+1)& (0+255),b
  2119   00EB64                     
  2120                           ; BSR set to: 0
  2121                           ;mcc_generated_files/fatfs/ff.c: 3838:    if (csect == 0) {
  2122   00EB64  51D0               	movf	f_write@csect& (0+255),w,b
  2123   00EB66  11D1               	iorwf	(f_write@csect+1)& (0+255),w,b
  2124   00EB68  A4D8               	btfss	status,2,c
  2125   00EB6A  EFB9  F075         	goto	u11201
  2126   00EB6E  EFBB  F075         	goto	u11200
  2127   00EB72                     u11201:
  2128   00EB72  EF81  F076         	goto	l1064
  2129   00EB76                     u11200:
  2130   00EB76                     
  2131                           ; BSR set to: 0
  2132                           ;mcc_generated_files/fatfs/ff.c: 3839:     if (fp->fptr == 0) {
  2133   00EB76  EE20 F010          	lfsr	2,16
  2134   00EB7A  51B5               	movf	f_write@fp& (0+255),w,b
  2135   00EB7C  26D9               	addwf	fsr2l,f,c
  2136   00EB7E  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  2137   00EB80  22DA               	addwfc	fsr2h,f,c
  2138   00EB82  50DE               	movf	postinc2,w,c
  2139   00EB84  10DE               	iorwf	postinc2,w,c
  2140   00EB86  10DE               	iorwf	postinc2,w,c
  2141   00EB88  10DE               	iorwf	postinc2,w,c
  2142   00EB8A  A4D8               	btfss	status,2,c
  2143   00EB8C  EFCA  F075         	goto	u11211
  2144   00EB90  EFCC  F075         	goto	u11210
  2145   00EB94                     u11211:
  2146   00EB94  EFFD  F075         	goto	l8185
  2147   00EB98                     u11210:
  2148   00EB98                     
  2149                           ; BSR set to: 0
  2150                           ;mcc_generated_files/fatfs/ff.c: 3840:      clst = fp->obj.sclust;
  2151   00EB98  EE20 F006          	lfsr	2,6
  2152   00EB9C  51B5               	movf	f_write@fp& (0+255),w,b
  2153   00EB9E  26D9               	addwf	fsr2l,f,c
  2154   00EBA0  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  2155   00EBA2  22DA               	addwfc	fsr2h,f,c
  2156   00EBA4  CFDE F0D4          	movff	postinc2,f_write@clst
  2157   00EBA8  CFDE F0D5          	movff	postinc2,f_write@clst+1
  2158   00EBAC  CFDE F0D6          	movff	postinc2,f_write@clst+2
  2159   00EBB0  CFDE F0D7          	movff	postinc2,f_write@clst+3
  2160   00EBB4                     
  2161                           ; BSR set to: 0
  2162                           ;mcc_generated_files/fatfs/ff.c: 3841:      if (clst == 0) {
  2163   00EBB4  51D4               	movf	f_write@clst& (0+255),w,b
  2164   00EBB6  11D5               	iorwf	(f_write@clst+1)& (0+255),w,b
  2165   00EBB8  11D6               	iorwf	(f_write@clst+2)& (0+255),w,b
  2166   00EBBA  11D7               	iorwf	(f_write@clst+3)& (0+255),w,b
  2167   00EBBC  A4D8               	btfss	status,2,c
  2168   00EBBE  EFE3  F075         	goto	u11221
  2169   00EBC2  EFE5  F075         	goto	u11220
  2170   00EBC6                     u11221:
  2171   00EBC6  EF19  F076         	goto	l8187
  2172   00EBCA                     u11220:
  2173   00EBCA                     
  2174                           ; BSR set to: 0
  2175                           ;mcc_generated_files/fatfs/ff.c: 3842:       clst = create_chain(&fp->obj, 0);
  2176   00EBCA  C0B5  F098         	movff	f_write@fp,create_chain@obj
  2177   00EBCE  C0B6  F099         	movff	f_write@fp+1,create_chain@obj+1
  2178   00EBD2  0E00               	movlw	0
  2179   00EBD4  6F9A               	movwf	create_chain@clst& (0+255),b
  2180   00EBD6  0E00               	movlw	0
  2181   00EBD8  6F9B               	movwf	(create_chain@clst+1)& (0+255),b
  2182   00EBDA  0E00               	movlw	0
  2183   00EBDC  6F9C               	movwf	(create_chain@clst+2)& (0+255),b
  2184   00EBDE  0E00               	movlw	0
  2185   00EBE0  6F9D               	movwf	(create_chain@clst+3)& (0+255),b
  2186   00EBE2  ECEF  F066         	call	_create_chain	;wreg free
  2187   00EBE6  C098  F0D4         	movff	?_create_chain,f_write@clst
  2188   00EBEA  C099  F0D5         	movff	?_create_chain+1,f_write@clst+1
  2189   00EBEE  C09A  F0D6         	movff	?_create_chain+2,f_write@clst+2
  2190   00EBF2  C09B  F0D7         	movff	?_create_chain+3,f_write@clst+3
  2191   00EBF6  EF19  F076         	goto	l8187
  2192   00EBFA                     l8185:
  2193                           
  2194                           ; BSR set to: 0
  2195                           ;mcc_generated_files/fatfs/ff.c: 3850:      {;mcc_generated_files/fatfs/ff.c: 3851:     
      +                            clst = create_chain(&fp->obj, fp->clust);
  2196   00EBFA  C0B5  F098         	movff	f_write@fp,create_chain@obj
  2197   00EBFE  C0B6  F099         	movff	f_write@fp+1,create_chain@obj+1
  2198   00EC02  EE20 F014          	lfsr	2,20
  2199   00EC06  51B5               	movf	f_write@fp& (0+255),w,b
  2200   00EC08  26D9               	addwf	fsr2l,f,c
  2201   00EC0A  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  2202   00EC0C  22DA               	addwfc	fsr2h,f,c
  2203   00EC0E  CFDE F09A          	movff	postinc2,create_chain@clst
  2204   00EC12  CFDE F09B          	movff	postinc2,create_chain@clst+1
  2205   00EC16  CFDE F09C          	movff	postinc2,create_chain@clst+2
  2206   00EC1A  CFDE F09D          	movff	postinc2,create_chain@clst+3
  2207   00EC1E  ECEF  F066         	call	_create_chain	;wreg free
  2208   00EC22  C098  F0D4         	movff	?_create_chain,f_write@clst
  2209   00EC26  C099  F0D5         	movff	?_create_chain+1,f_write@clst+1
  2210   00EC2A  C09A  F0D6         	movff	?_create_chain+2,f_write@clst+2
  2211   00EC2E  C09B  F0D7         	movff	?_create_chain+3,f_write@clst+3
  2212   00EC32                     l8187:
  2213                           
  2214                           ;mcc_generated_files/fatfs/ff.c: 3854:     if (clst == 0) break;
  2215   00EC32  0100               	movlb	0	; () banked
  2216   00EC34  51D4               	movf	f_write@clst& (0+255),w,b
  2217   00EC36  11D5               	iorwf	(f_write@clst+1)& (0+255),w,b
  2218   00EC38  11D6               	iorwf	(f_write@clst+2)& (0+255),w,b
  2219   00EC3A  11D7               	iorwf	(f_write@clst+3)& (0+255),w,b
  2220   00EC3C  A4D8               	btfss	status,2,c
  2221   00EC3E  EF23  F076         	goto	u11231
  2222   00EC42  EF25  F076         	goto	u11230
  2223   00EC46                     u11231:
  2224   00EC46  EF27  F076         	goto	l8191
  2225   00EC4A                     u11230:
  2226   00EC4A  EF15  F079         	goto	l8283
  2227   00EC4E                     l8191:
  2228                           
  2229                           ; BSR set to: 0
  2230                           ;mcc_generated_files/fatfs/ff.c: 3855:     if (clst == 1) { fp->err = (BYTE)(FR_INT_ERR)
      +                          ; return FR_INT_ERR; };
  2231   00EC4E  05D4               	decf	f_write@clst& (0+255),w,b
  2232   00EC50  11D5               	iorwf	(f_write@clst+1)& (0+255),w,b
  2233   00EC52  11D6               	iorwf	(f_write@clst+2)& (0+255),w,b
  2234   00EC54  11D7               	iorwf	(f_write@clst+3)& (0+255),w,b
  2235   00EC56  A4D8               	btfss	status,2,c
  2236   00EC58  EF30  F076         	goto	u11241
  2237   00EC5C  EF32  F076         	goto	u11240
  2238   00EC60                     u11241:
  2239   00EC60  EF3C  F076         	goto	l8197
  2240   00EC64                     u11240:
  2241   00EC64                     
  2242                           ; BSR set to: 0
  2243   00EC64  EE20 F00F          	lfsr	2,15
  2244   00EC68  51B5               	movf	f_write@fp& (0+255),w,b
  2245   00EC6A  26D9               	addwf	fsr2l,f,c
  2246   00EC6C  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  2247   00EC6E  22DA               	addwfc	fsr2h,f,c
  2248   00EC70  0E02               	movlw	2
  2249   00EC72  6EDF               	movwf	indf2,c
  2250   00EC74  EF1D  F079         	goto	l1056
  2251   00EC78                     l8197:
  2252                           
  2253                           ; BSR set to: 0
  2254                           ;mcc_generated_files/fatfs/ff.c: 3856:     if (clst == 0xFFFFFFFF) { fp->err = (BYTE)(FR
      +                          _DISK_ERR); return FR_DISK_ERR; };
  2255   00EC78  29D4               	incf	f_write@clst& (0+255),w,b
  2256   00EC7A  E10A               	bnz	u11251
  2257   00EC7C  29D5               	incf	(f_write@clst+1)& (0+255),w,b
  2258   00EC7E  E108               	bnz	u11251
  2259   00EC80  29D6               	incf	(f_write@clst+2)& (0+255),w,b
  2260   00EC82  E106               	bnz	u11251
  2261   00EC84  29D7               	incf	(f_write@clst+3)& (0+255),w,b
  2262   00EC86  A4D8               	btfss	status,2,c
  2263   00EC88  EF48  F076         	goto	u11251
  2264   00EC8C  EF4A  F076         	goto	u11250
  2265   00EC90                     u11251:
  2266   00EC90  EF54  F076         	goto	l8203
  2267   00EC94                     u11250:
  2268   00EC94                     
  2269                           ; BSR set to: 0
  2270   00EC94  EE20 F00F          	lfsr	2,15
  2271   00EC98  51B5               	movf	f_write@fp& (0+255),w,b
  2272   00EC9A  26D9               	addwf	fsr2l,f,c
  2273   00EC9C  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  2274   00EC9E  22DA               	addwfc	fsr2h,f,c
  2275   00ECA0  0E01               	movlw	1
  2276   00ECA2  6EDF               	movwf	indf2,c
  2277   00ECA4  EF1D  F079         	goto	l1056
  2278   00ECA8                     l8203:
  2279                           
  2280                           ; BSR set to: 0
  2281                           ;mcc_generated_files/fatfs/ff.c: 3857:     fp->clust = clst;
  2282   00ECA8  EE20 F014          	lfsr	2,20
  2283   00ECAC  51B5               	movf	f_write@fp& (0+255),w,b
  2284   00ECAE  26D9               	addwf	fsr2l,f,c
  2285   00ECB0  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  2286   00ECB2  22DA               	addwfc	fsr2h,f,c
  2287   00ECB4  C0D4  FFDE         	movff	f_write@clst,postinc2
  2288   00ECB8  C0D5  FFDE         	movff	f_write@clst+1,postinc2
  2289   00ECBC  C0D6  FFDE         	movff	f_write@clst+2,postinc2
  2290   00ECC0  C0D7  FFDE         	movff	f_write@clst+3,postinc2
  2291                           
  2292                           ;mcc_generated_files/fatfs/ff.c: 3858:     if (fp->obj.sclust == 0) fp->obj.sclust = cls
      +                          t;
  2293   00ECC4  EE20 F006          	lfsr	2,6
  2294   00ECC8  51B5               	movf	f_write@fp& (0+255),w,b
  2295   00ECCA  26D9               	addwf	fsr2l,f,c
  2296   00ECCC  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  2297   00ECCE  22DA               	addwfc	fsr2h,f,c
  2298   00ECD0  50DE               	movf	postinc2,w,c
  2299   00ECD2  10DE               	iorwf	postinc2,w,c
  2300   00ECD4  10DE               	iorwf	postinc2,w,c
  2301   00ECD6  10DE               	iorwf	postinc2,w,c
  2302   00ECD8  A4D8               	btfss	status,2,c
  2303   00ECDA  EF71  F076         	goto	u11261
  2304   00ECDE  EF73  F076         	goto	u11260
  2305   00ECE2                     u11261:
  2306   00ECE2  EF81  F076         	goto	l1064
  2307   00ECE6                     u11260:
  2308   00ECE6                     
  2309                           ; BSR set to: 0
  2310   00ECE6  EE20 F006          	lfsr	2,6
  2311   00ECEA  51B5               	movf	f_write@fp& (0+255),w,b
  2312   00ECEC  26D9               	addwf	fsr2l,f,c
  2313   00ECEE  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  2314   00ECF0  22DA               	addwfc	fsr2h,f,c
  2315   00ECF2  C0D4  FFDE         	movff	f_write@clst,postinc2
  2316   00ECF6  C0D5  FFDE         	movff	f_write@clst+1,postinc2
  2317   00ECFA  C0D6  FFDE         	movff	f_write@clst+2,postinc2
  2318   00ECFE  C0D7  FFDE         	movff	f_write@clst+3,postinc2
  2319   00ED02                     l1064:
  2320                           
  2321                           ; BSR set to: 0
  2322                           ;mcc_generated_files/fatfs/ff.c: 3863:    if (fp->flag & 0x80) {
  2323   00ED02  EE20 F00E          	lfsr	2,14
  2324   00ED06  51B5               	movf	f_write@fp& (0+255),w,b
  2325   00ED08  26D9               	addwf	fsr2l,f,c
  2326   00ED0A  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  2327   00ED0C  22DA               	addwfc	fsr2h,f,c
  2328   00ED0E  AEDF               	btfss	indf2,7,c
  2329   00ED10  EF8C  F076         	goto	u11271
  2330   00ED14  EF8E  F076         	goto	u11270
  2331   00ED18                     u11271:
  2332   00ED18  EFCB  F076         	goto	l8215
  2333   00ED1C                     u11270:
  2334   00ED1C                     
  2335                           ; BSR set to: 0
  2336                           ;mcc_generated_files/fatfs/ff.c: 3864:     if (disk_write(fs->pdrv, fp->buf, fp->sect, 1
      +                          ) != RES_OK) { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
  2337   00ED1C  0E22               	movlw	34
  2338   00ED1E  25B5               	addwf	f_write@fp& (0+255),w,b
  2339   00ED20  6E4D               	movwf	disk_write@buff^0,c
  2340   00ED22  0E00               	movlw	0
  2341   00ED24  21B6               	addwfc	(f_write@fp+1)& (0+255),w,b
  2342   00ED26  6E4E               	movwf	(disk_write@buff+1)^0,c
  2343   00ED28  EE20 F018          	lfsr	2,24
  2344   00ED2C  51B5               	movf	f_write@fp& (0+255),w,b
  2345   00ED2E  26D9               	addwf	fsr2l,f,c
  2346   00ED30  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  2347   00ED32  22DA               	addwfc	fsr2h,f,c
  2348   00ED34  CFDE F04F          	movff	postinc2,disk_write@sector
  2349   00ED38  CFDE F050          	movff	postinc2,disk_write@sector+1
  2350   00ED3C  CFDE F051          	movff	postinc2,disk_write@sector+2
  2351   00ED40  CFDE F052          	movff	postinc2,disk_write@sector+3
  2352   00ED44  0E00               	movlw	0
  2353   00ED46  6E54               	movwf	(disk_write@count+1)^0,c
  2354   00ED48  0E01               	movlw	1
  2355   00ED4A  6E53               	movwf	disk_write@count^0,c
  2356   00ED4C  EE20 F001          	lfsr	2,1
  2357   00ED50  51DE               	movf	f_write@fs& (0+255),w,b
  2358   00ED52  26D9               	addwf	fsr2l,f,c
  2359   00ED54  51DF               	movf	(f_write@fs+1)& (0+255),w,b
  2360   00ED56  22DA               	addwfc	fsr2h,f,c
  2361   00ED58  50DF               	movf	indf2,w,c
  2362   00ED5A  EC2C  F048         	call	_disk_write
  2363   00ED5E  0900               	iorlw	0
  2364   00ED60  B4D8               	btfsc	status,2,c
  2365   00ED62  EFB5  F076         	goto	u11281
  2366   00ED66  EFB7  F076         	goto	u11280
  2367   00ED6A                     u11281:
  2368   00ED6A  EFC2  F076         	goto	l8213
  2369   00ED6E                     u11280:
  2370   00ED6E  0100               	movlb	0	; () banked
  2371   00ED70  EE20 F00F          	lfsr	2,15
  2372   00ED74  51B5               	movf	f_write@fp& (0+255),w,b
  2373   00ED76  26D9               	addwf	fsr2l,f,c
  2374   00ED78  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  2375   00ED7A  22DA               	addwfc	fsr2h,f,c
  2376   00ED7C  0E01               	movlw	1
  2377   00ED7E  6EDF               	movwf	indf2,c
  2378   00ED80  EF1D  F079         	goto	l1056
  2379   00ED84                     l8213:
  2380                           
  2381                           ;mcc_generated_files/fatfs/ff.c: 3865:     fp->flag &= (BYTE)~0x80;
  2382   00ED84  0100               	movlb	0	; () banked
  2383   00ED86  EE20 F00E          	lfsr	2,14
  2384   00ED8A  51B5               	movf	f_write@fp& (0+255),w,b
  2385   00ED8C  26D9               	addwf	fsr2l,f,c
  2386   00ED8E  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  2387   00ED90  22DA               	addwfc	fsr2h,f,c
  2388   00ED92  0E7F               	movlw	127
  2389   00ED94  16DF               	andwf	indf2,f,c
  2390   00ED96                     l8215:
  2391                           
  2392                           ; BSR set to: 0
  2393                           ;mcc_generated_files/fatfs/ff.c: 3868:    sect = clst2sect(fs, fp->clust);
  2394   00ED96  C0DE  F00D         	movff	f_write@fs,clst2sect@fs
  2395   00ED9A  C0DF  F00E         	movff	f_write@fs+1,clst2sect@fs+1
  2396   00ED9E  EE20 F014          	lfsr	2,20
  2397   00EDA2  51B5               	movf	f_write@fp& (0+255),w,b
  2398   00EDA4  26D9               	addwf	fsr2l,f,c
  2399   00EDA6  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  2400   00EDA8  22DA               	addwfc	fsr2h,f,c
  2401   00EDAA  CFDE F00F          	movff	postinc2,clst2sect@clst
  2402   00EDAE  CFDE F010          	movff	postinc2,clst2sect@clst+1
  2403   00EDB2  CFDE F011          	movff	postinc2,clst2sect@clst+2
  2404   00EDB6  CFDE F012          	movff	postinc2,clst2sect@clst+3
  2405   00EDBA  EC25  F04B         	call	_clst2sect	;wreg free
  2406   00EDBE  C00D  F0DA         	movff	?_clst2sect,f_write@sect
  2407   00EDC2  C00E  F0DB         	movff	?_clst2sect+1,f_write@sect+1
  2408   00EDC6  C00F  F0DC         	movff	?_clst2sect+2,f_write@sect+2
  2409   00EDCA  C010  F0DD         	movff	?_clst2sect+3,f_write@sect+3
  2410   00EDCE                     
  2411                           ;mcc_generated_files/fatfs/ff.c: 3869:    if (sect == 0) { fp->err = (BYTE)(FR_INT_ERR);
      +                           return FR_INT_ERR; };
  2412   00EDCE  0100               	movlb	0	; () banked
  2413   00EDD0  51DA               	movf	f_write@sect& (0+255),w,b
  2414   00EDD2  11DB               	iorwf	(f_write@sect+1)& (0+255),w,b
  2415   00EDD4  11DC               	iorwf	(f_write@sect+2)& (0+255),w,b
  2416   00EDD6  11DD               	iorwf	(f_write@sect+3)& (0+255),w,b
  2417   00EDD8  A4D8               	btfss	status,2,c
  2418   00EDDA  EFF1  F076         	goto	u11291
  2419   00EDDE  EFF3  F076         	goto	u11290
  2420   00EDE2                     u11291:
  2421   00EDE2  EFFD  F076         	goto	l8223
  2422   00EDE6                     u11290:
  2423   00EDE6                     
  2424                           ; BSR set to: 0
  2425   00EDE6  EE20 F00F          	lfsr	2,15
  2426   00EDEA  51B5               	movf	f_write@fp& (0+255),w,b
  2427   00EDEC  26D9               	addwf	fsr2l,f,c
  2428   00EDEE  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  2429   00EDF0  22DA               	addwfc	fsr2h,f,c
  2430   00EDF2  0E02               	movlw	2
  2431   00EDF4  6EDF               	movwf	indf2,c
  2432   00EDF6  EF1D  F079         	goto	l1056
  2433   00EDFA                     l8223:
  2434                           
  2435                           ; BSR set to: 0
  2436                           ;mcc_generated_files/fatfs/ff.c: 3870:    sect += csect;
  2437   00EDFA  51D0               	movf	f_write@csect& (0+255),w,b
  2438   00EDFC  27DA               	addwf	f_write@sect& (0+255),f,b
  2439   00EDFE  51D1               	movf	(f_write@csect+1)& (0+255),w,b
  2440   00EE00  23DB               	addwfc	(f_write@sect+1)& (0+255),f,b
  2441   00EE02  0E00               	movlw	0
  2442   00EE04  23DC               	addwfc	(f_write@sect+2)& (0+255),f,b
  2443   00EE06  0E00               	movlw	0
  2444   00EE08  23DD               	addwfc	(f_write@sect+3)& (0+255),f,b
  2445   00EE0A                     
  2446                           ; BSR set to: 0
  2447                           ;mcc_generated_files/fatfs/ff.c: 3871:    cc = btw / ((UINT)512);
  2448   00EE0A  C0B9  F0BD         	movff	f_write@btw,??_f_write
  2449   00EE0E  C0BA  F0BE         	movff	f_write@btw+1,??_f_write+1
  2450   00EE12  0E09               	movlw	9
  2451   00EE14  6FBF               	movwf	(??_f_write+2)& (0+255),b
  2452   00EE16                     u11305:
  2453   00EE16  90D8               	bcf	status,0,c
  2454   00EE18  33BE               	rrcf	(??_f_write+1)& (0+255),f,b
  2455   00EE1A  33BD               	rrcf	??_f_write& (0+255),f,b
  2456   00EE1C  2FBF               	decfsz	(??_f_write+2)& (0+255),f,b
  2457   00EE1E  EF0B  F077         	goto	u11305
  2458   00EE22  C0BD  F0D2         	movff	??_f_write,f_write@cc
  2459   00EE26  C0BE  F0D3         	movff	??_f_write+1,f_write@cc+1
  2460   00EE2A                     
  2461                           ; BSR set to: 0
  2462                           ;mcc_generated_files/fatfs/ff.c: 3872:    if (cc > 0) {
  2463   00EE2A  51D2               	movf	f_write@cc& (0+255),w,b
  2464   00EE2C  11D3               	iorwf	(f_write@cc+1)& (0+255),w,b
  2465   00EE2E  B4D8               	btfsc	status,2,c
  2466   00EE30  EF1C  F077         	goto	u11311
  2467   00EE34  EF1E  F077         	goto	u11310
  2468   00EE38                     u11311:
  2469   00EE38  EFE2  F077         	goto	l8247
  2470   00EE3C                     u11310:
  2471   00EE3C                     
  2472                           ; BSR set to: 0
  2473                           ;mcc_generated_files/fatfs/ff.c: 3873:     if (csect + cc > fs->csize) {
  2474   00EE3C  51D2               	movf	f_write@cc& (0+255),w,b
  2475   00EE3E  25D0               	addwf	f_write@csect& (0+255),w,b
  2476   00EE40  6FBD               	movwf	??_f_write& (0+255),b
  2477   00EE42  51D3               	movf	(f_write@cc+1)& (0+255),w,b
  2478   00EE44  21D1               	addwfc	(f_write@csect+1)& (0+255),w,b
  2479   00EE46  6FBE               	movwf	(??_f_write+1)& (0+255),b
  2480   00EE48  EE20 F009          	lfsr	2,9
  2481   00EE4C  51DE               	movf	f_write@fs& (0+255),w,b
  2482   00EE4E  26D9               	addwf	fsr2l,f,c
  2483   00EE50  51DF               	movf	(f_write@fs+1)& (0+255),w,b
  2484   00EE52  22DA               	addwfc	fsr2h,f,c
  2485   00EE54  51BD               	movf	??_f_write& (0+255),w,b
  2486   00EE56  5CDE               	subwf	postinc2,w,c
  2487   00EE58  51BE               	movf	(??_f_write+1)& (0+255),w,b
  2488   00EE5A  58DE               	subwfb	postinc2,w,c
  2489   00EE5C  B0D8               	btfsc	status,0,c
  2490   00EE5E  EF33  F077         	goto	u11321
  2491   00EE62  EF35  F077         	goto	u11320
  2492   00EE66                     u11321:
  2493   00EE66  EF45  F077         	goto	l8233
  2494   00EE6A                     u11320:
  2495   00EE6A                     
  2496                           ; BSR set to: 0
  2497                           ;mcc_generated_files/fatfs/ff.c: 3874:      cc = fs->csize - csect;
  2498   00EE6A  EE20 F009          	lfsr	2,9
  2499   00EE6E  51DE               	movf	f_write@fs& (0+255),w,b
  2500   00EE70  26D9               	addwf	fsr2l,f,c
  2501   00EE72  51DF               	movf	(f_write@fs+1)& (0+255),w,b
  2502   00EE74  22DA               	addwfc	fsr2h,f,c
  2503   00EE76  CFDE F0BD          	movff	postinc2,??_f_write
  2504   00EE7A  CFDD F0BE          	movff	postdec2,??_f_write+1
  2505   00EE7E  51D0               	movf	f_write@csect& (0+255),w,b
  2506   00EE80  5DBD               	subwf	??_f_write& (0+255),w,b
  2507   00EE82  6FD2               	movwf	f_write@cc& (0+255),b
  2508   00EE84  51D1               	movf	(f_write@csect+1)& (0+255),w,b
  2509   00EE86  59BE               	subwfb	(??_f_write+1)& (0+255),w,b
  2510   00EE88  6FD3               	movwf	(f_write@cc+1)& (0+255),b
  2511   00EE8A                     l8233:
  2512                           
  2513                           ; BSR set to: 0
  2514                           ;mcc_generated_files/fatfs/ff.c: 3876:     if (disk_write(fs->pdrv, wbuff, sect, cc) != 
      +                          RES_OK) { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
  2515   00EE8A  C0CE  F04D         	movff	f_write@wbuff,disk_write@buff
  2516   00EE8E  C0CF  F04E         	movff	f_write@wbuff+1,disk_write@buff+1
  2517   00EE92  C0DA  F04F         	movff	f_write@sect,disk_write@sector
  2518   00EE96  C0DB  F050         	movff	f_write@sect+1,disk_write@sector+1
  2519   00EE9A  C0DC  F051         	movff	f_write@sect+2,disk_write@sector+2
  2520   00EE9E  C0DD  F052         	movff	f_write@sect+3,disk_write@sector+3
  2521   00EEA2  C0D2  F053         	movff	f_write@cc,disk_write@count
  2522   00EEA6  C0D3  F054         	movff	f_write@cc+1,disk_write@count+1
  2523   00EEAA  EE20 F001          	lfsr	2,1
  2524   00EEAE  51DE               	movf	f_write@fs& (0+255),w,b
  2525   00EEB0  26D9               	addwf	fsr2l,f,c
  2526   00EEB2  51DF               	movf	(f_write@fs+1)& (0+255),w,b
  2527   00EEB4  22DA               	addwfc	fsr2h,f,c
  2528   00EEB6  50DF               	movf	indf2,w,c
  2529   00EEB8  EC2C  F048         	call	_disk_write
  2530   00EEBC  0900               	iorlw	0
  2531   00EEBE  B4D8               	btfsc	status,2,c
  2532   00EEC0  EF64  F077         	goto	u11331
  2533   00EEC4  EF66  F077         	goto	u11330
  2534   00EEC8                     u11331:
  2535   00EEC8  EF71  F077         	goto	l8239
  2536   00EECC                     u11330:
  2537   00EECC  0100               	movlb	0	; () banked
  2538   00EECE  EE20 F00F          	lfsr	2,15
  2539   00EED2  51B5               	movf	f_write@fp& (0+255),w,b
  2540   00EED4  26D9               	addwf	fsr2l,f,c
  2541   00EED6  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  2542   00EED8  22DA               	addwfc	fsr2h,f,c
  2543   00EEDA  0E01               	movlw	1
  2544   00EEDC  6EDF               	movwf	indf2,c
  2545   00EEDE  EF1D  F079         	goto	l1056
  2546   00EEE2                     l8239:
  2547                           
  2548                           ;mcc_generated_files/fatfs/ff.c: 3884:     if (fp->sect - sect < cc) {
  2549   00EEE2  0100               	movlb	0	; () banked
  2550   00EEE4  51D2               	movf	f_write@cc& (0+255),w,b
  2551   00EEE6  6FBD               	movwf	??_f_write& (0+255),b
  2552   00EEE8  51D3               	movf	(f_write@cc+1)& (0+255),w,b
  2553   00EEEA  6FBE               	movwf	(??_f_write+1)& (0+255),b
  2554   00EEEC  6BBF               	clrf	(??_f_write+2)& (0+255),b
  2555   00EEEE  6BC0               	clrf	(??_f_write+3)& (0+255),b
  2556   00EEF0  EE20 F018          	lfsr	2,24
  2557   00EEF4  51B5               	movf	f_write@fp& (0+255),w,b
  2558   00EEF6  26D9               	addwf	fsr2l,f,c
  2559   00EEF8  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  2560   00EEFA  22DA               	addwfc	fsr2h,f,c
  2561   00EEFC  CFDE F0C1          	movff	postinc2,??_f_write+4
  2562   00EF00  CFDE F0C2          	movff	postinc2,??_f_write+5
  2563   00EF04  CFDE F0C3          	movff	postinc2,??_f_write+6
  2564   00EF08  CFDE F0C4          	movff	postinc2,??_f_write+7
  2565   00EF0C  51DA               	movf	f_write@sect& (0+255),w,b
  2566   00EF0E  5DC1               	subwf	(??_f_write+4)& (0+255),w,b
  2567   00EF10  6FC5               	movwf	(??_f_write+8)& (0+255),b
  2568   00EF12  51DB               	movf	(f_write@sect+1)& (0+255),w,b
  2569   00EF14  59C2               	subwfb	(??_f_write+5)& (0+255),w,b
  2570   00EF16  6FC6               	movwf	(??_f_write+9)& (0+255),b
  2571   00EF18  51DC               	movf	(f_write@sect+2)& (0+255),w,b
  2572   00EF1A  59C3               	subwfb	(??_f_write+6)& (0+255),w,b
  2573   00EF1C  6FC7               	movwf	(??_f_write+10)& (0+255),b
  2574   00EF1E  51DD               	movf	(f_write@sect+3)& (0+255),w,b
  2575   00EF20  59C4               	subwfb	(??_f_write+7)& (0+255),w,b
  2576   00EF22  6FC8               	movwf	(??_f_write+11)& (0+255),b
  2577   00EF24  51BD               	movf	??_f_write& (0+255),w,b
  2578   00EF26  5DC5               	subwf	(??_f_write+8)& (0+255),w,b
  2579   00EF28  51BE               	movf	(??_f_write+1)& (0+255),w,b
  2580   00EF2A  59C6               	subwfb	(??_f_write+9)& (0+255),w,b
  2581   00EF2C  51BF               	movf	(??_f_write+2)& (0+255),w,b
  2582   00EF2E  59C7               	subwfb	(??_f_write+10)& (0+255),w,b
  2583   00EF30  51C0               	movf	(??_f_write+3)& (0+255),w,b
  2584   00EF32  59C8               	subwfb	(??_f_write+11)& (0+255),w,b
  2585   00EF34  B0D8               	btfsc	status,0,c
  2586   00EF36  EF9F  F077         	goto	u11341
  2587   00EF3A  EFA1  F077         	goto	u11340
  2588   00EF3E                     u11341:
  2589   00EF3E  EFD1  F077         	goto	l8245
  2590   00EF42                     u11340:
  2591   00EF42                     
  2592                           ; BSR set to: 0
  2593                           ;mcc_generated_files/fatfs/ff.c: 3885:      mem_cpy(fp->buf, wbuff + ((fp->sect - sect) 
      +                          * ((UINT)512)), ((UINT)512));
  2594   00EF42  0E22               	movlw	34
  2595   00EF44  25B5               	addwf	f_write@fp& (0+255),w,b
  2596   00EF46  6E01               	movwf	mem_cpy@dst^0,c
  2597   00EF48  0E00               	movlw	0
  2598   00EF4A  21B6               	addwfc	(f_write@fp+1)& (0+255),w,b
  2599   00EF4C  6E02               	movwf	(mem_cpy@dst+1)^0,c
  2600   00EF4E  EE20 F018          	lfsr	2,24
  2601   00EF52  51B5               	movf	f_write@fp& (0+255),w,b
  2602   00EF54  26D9               	addwf	fsr2l,f,c
  2603   00EF56  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  2604   00EF58  22DA               	addwfc	fsr2h,f,c
  2605   00EF5A  CFDE F0BD          	movff	postinc2,??_f_write
  2606   00EF5E  CFDD F0BE          	movff	postdec2,??_f_write+1
  2607   00EF62  51DA               	movf	f_write@sect& (0+255),w,b
  2608   00EF64  5FBD               	subwf	??_f_write& (0+255),f,b
  2609   00EF66  51DB               	movf	(f_write@sect+1)& (0+255),w,b
  2610   00EF68  5BBE               	subwfb	(??_f_write+1)& (0+255),f,b
  2611   00EF6A  0E09               	movlw	9
  2612   00EF6C                     u11355:
  2613   00EF6C  90D8               	bcf	status,0,c
  2614   00EF6E  37BD               	rlcf	??_f_write& (0+255),f,b
  2615   00EF70  37BE               	rlcf	(??_f_write+1)& (0+255),f,b
  2616   00EF72  2EE8               	decfsz	wreg,f,c
  2617   00EF74  EFB6  F077         	goto	u11355
  2618   00EF78  51BD               	movf	??_f_write& (0+255),w,b
  2619   00EF7A  25CE               	addwf	f_write@wbuff& (0+255),w,b
  2620   00EF7C  6E03               	movwf	mem_cpy@src^0,c
  2621   00EF7E  51BE               	movf	(??_f_write+1)& (0+255),w,b
  2622   00EF80  21CF               	addwfc	(f_write@wbuff+1)& (0+255),w,b
  2623   00EF82  6E04               	movwf	(mem_cpy@src+1)^0,c
  2624   00EF84  0E02               	movlw	2
  2625   00EF86  6E06               	movwf	(mem_cpy@cnt+1)^0,c
  2626   00EF88  0E00               	movlw	0
  2627   00EF8A  6E05               	movwf	mem_cpy@cnt^0,c
  2628   00EF8C  ECBA  F047         	call	_mem_cpy	;wreg free
  2629   00EF90                     
  2630                           ;mcc_generated_files/fatfs/ff.c: 3886:      fp->flag &= (BYTE)~0x80;
  2631   00EF90  0100               	movlb	0	; () banked
  2632   00EF92  EE20 F00E          	lfsr	2,14
  2633   00EF96  51B5               	movf	f_write@fp& (0+255),w,b
  2634   00EF98  26D9               	addwf	fsr2l,f,c
  2635   00EF9A  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  2636   00EF9C  22DA               	addwfc	fsr2h,f,c
  2637   00EF9E  0E7F               	movlw	127
  2638   00EFA0  16DF               	andwf	indf2,f,c
  2639   00EFA2                     l8245:
  2640                           
  2641                           ; BSR set to: 0
  2642                           ;mcc_generated_files/fatfs/ff.c: 3890:     wcnt = ((UINT)512) * cc;
  2643   00EFA2  C0D2  F0BD         	movff	f_write@cc,??_f_write
  2644   00EFA6  C0D3  F0BE         	movff	f_write@cc+1,??_f_write+1
  2645   00EFAA  0E09               	movlw	9
  2646   00EFAC                     u11365:
  2647   00EFAC  90D8               	bcf	status,0,c
  2648   00EFAE  37BD               	rlcf	??_f_write& (0+255),f,b
  2649   00EFB0  37BE               	rlcf	(??_f_write+1)& (0+255),f,b
  2650   00EFB2  2EE8               	decfsz	wreg,f,c
  2651   00EFB4  EFD6  F077         	goto	u11365
  2652   00EFB8  C0BD  F0D8         	movff	??_f_write,f_write@wcnt
  2653   00EFBC  C0BE  F0D9         	movff	??_f_write+1,f_write@wcnt+1
  2654                           
  2655                           ;mcc_generated_files/fatfs/ff.c: 3891:     continue;
  2656   00EFC0  EFA8  F078         	goto	l8267
  2657   00EFC4                     l8247:
  2658                           
  2659                           ; BSR set to: 0
  2660                           ;mcc_generated_files/fatfs/ff.c: 3899:    if (fp->sect != sect &&
  2661   00EFC4  EE20 F018          	lfsr	2,24
  2662   00EFC8  51B5               	movf	f_write@fp& (0+255),w,b
  2663   00EFCA  26D9               	addwf	fsr2l,f,c
  2664   00EFCC  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  2665   00EFCE  22DA               	addwfc	fsr2h,f,c
  2666   00EFD0  51DA               	movf	f_write@sect& (0+255),w,b
  2667   00EFD2  18DE               	xorwf	postinc2,w,c
  2668   00EFD4  E10F               	bnz	u11370
  2669   00EFD6  51DB               	movf	(f_write@sect+1)& (0+255),w,b
  2670   00EFD8  18DE               	xorwf	postinc2,w,c
  2671   00EFDA  E10C               	bnz	u11370
  2672   00EFDC  51DC               	movf	(f_write@sect+2)& (0+255),w,b
  2673   00EFDE  18DE               	xorwf	postinc2,w,c
  2674   00EFE0  E109               	bnz	u11370
  2675   00EFE2  51DD               	movf	(f_write@sect+3)& (0+255),w,b
  2676   00EFE4  18DE               	xorwf	postinc2,w,c
  2677   00EFE6  B4D8               	btfsc	status,2,c
  2678   00EFE8  EFF8  F077         	goto	u11371
  2679   00EFEC  EFFA  F077         	goto	u11370
  2680   00EFF0                     u11371:
  2681   00EFF0  EF43  F078         	goto	l8257
  2682   00EFF4                     u11370:
  2683   00EFF4                     
  2684                           ; BSR set to: 0
  2685   00EFF4  EE20 F00A          	lfsr	2,10
  2686   00EFF8  51B5               	movf	f_write@fp& (0+255),w,b
  2687   00EFFA  26D9               	addwf	fsr2l,f,c
  2688   00EFFC  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  2689   00EFFE  22DA               	addwfc	fsr2h,f,c
  2690   00F000  EE10 F010          	lfsr	1,16
  2691   00F004  51B5               	movf	f_write@fp& (0+255),w,b
  2692   00F006  26E1               	addwf	fsr1l,f,c
  2693   00F008  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  2694   00F00A  22E2               	addwfc	fsr1h,f,c
  2695   00F00C  50DE               	movf	postinc2,w,c
  2696   00F00E  5CE6               	subwf	postinc1,w,c
  2697   00F010  50DE               	movf	postinc2,w,c
  2698   00F012  58E6               	subwfb	postinc1,w,c
  2699   00F014  50DE               	movf	postinc2,w,c
  2700   00F016  58E6               	subwfb	postinc1,w,c
  2701   00F018  50DE               	movf	postinc2,w,c
  2702   00F01A  58E6               	subwfb	postinc1,w,c
  2703   00F01C  B0D8               	btfsc	status,0,c
  2704   00F01E  EF13  F078         	goto	u11381
  2705   00F022  EF15  F078         	goto	u11380
  2706   00F026                     u11381:
  2707   00F026  EF43  F078         	goto	l8257
  2708   00F02A                     u11380:
  2709   00F02A                     
  2710                           ; BSR set to: 0
  2711   00F02A  0E22               	movlw	34
  2712   00F02C  25B5               	addwf	f_write@fp& (0+255),w,b
  2713   00F02E  6E4A               	movwf	disk_read@buff^0,c
  2714   00F030  0E00               	movlw	0
  2715   00F032  21B6               	addwfc	(f_write@fp+1)& (0+255),w,b
  2716   00F034  6E4B               	movwf	(disk_read@buff+1)^0,c
  2717   00F036  C0DA  F04C         	movff	f_write@sect,disk_read@sector
  2718   00F03A  C0DB  F04D         	movff	f_write@sect+1,disk_read@sector+1
  2719   00F03E  C0DC  F04E         	movff	f_write@sect+2,disk_read@sector+2
  2720   00F042  C0DD  F04F         	movff	f_write@sect+3,disk_read@sector+3
  2721   00F046  0E00               	movlw	0
  2722   00F048  6E51               	movwf	(disk_read@count+1)^0,c
  2723   00F04A  0E01               	movlw	1
  2724   00F04C  6E50               	movwf	disk_read@count^0,c
  2725   00F04E  EE20 F001          	lfsr	2,1
  2726   00F052  51DE               	movf	f_write@fs& (0+255),w,b
  2727   00F054  26D9               	addwf	fsr2l,f,c
  2728   00F056  51DF               	movf	(f_write@fs+1)& (0+255),w,b
  2729   00F058  22DA               	addwfc	fsr2h,f,c
  2730   00F05A  50DF               	movf	indf2,w,c
  2731   00F05C  ECF2  F047         	call	_disk_read
  2732   00F060  0900               	iorlw	0
  2733   00F062  B4D8               	btfsc	status,2,c
  2734   00F064  EF36  F078         	goto	u11391
  2735   00F068  EF38  F078         	goto	u11390
  2736   00F06C                     u11391:
  2737   00F06C  EF43  F078         	goto	l8257
  2738   00F070                     u11390:
  2739   00F070                     
  2740                           ;mcc_generated_files/fatfs/ff.c: 3901:     disk_read(fs->pdrv, fp->buf, sect, 1) != RES_
      +                          OK) {;mcc_generated_files/fatfs/ff.c: 3902:      { fp->err = (BYTE)(FR_DISK_ERR); return
      +                           FR_DISK_ERR; };
  2741   00F070  0100               	movlb	0	; () banked
  2742   00F072  EE20 F00F          	lfsr	2,15
  2743   00F076  51B5               	movf	f_write@fp& (0+255),w,b
  2744   00F078  26D9               	addwf	fsr2l,f,c
  2745   00F07A  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  2746   00F07C  22DA               	addwfc	fsr2h,f,c
  2747   00F07E  0E01               	movlw	1
  2748   00F080  6EDF               	movwf	indf2,c
  2749   00F082  EF1D  F079         	goto	l1056
  2750   00F086                     l8257:
  2751                           
  2752                           ;mcc_generated_files/fatfs/ff.c: 3905:    fp->sect = sect;
  2753   00F086  0100               	movlb	0	; () banked
  2754   00F088  EE20 F018          	lfsr	2,24
  2755   00F08C  51B5               	movf	f_write@fp& (0+255),w,b
  2756   00F08E  26D9               	addwf	fsr2l,f,c
  2757   00F090  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  2758   00F092  22DA               	addwfc	fsr2h,f,c
  2759   00F094  C0DA  FFDE         	movff	f_write@sect,postinc2
  2760   00F098  C0DB  FFDE         	movff	f_write@sect+1,postinc2
  2761   00F09C  C0DC  FFDE         	movff	f_write@sect+2,postinc2
  2762   00F0A0  C0DD  FFDE         	movff	f_write@sect+3,postinc2
  2763   00F0A4                     l1063:
  2764                           
  2765                           ; BSR set to: 0
  2766                           ;mcc_generated_files/fatfs/ff.c: 3907:   wcnt = ((UINT)512) - (UINT)fp->fptr % ((UINT)51
      +                          2);
  2767   00F0A4  EE20 F010          	lfsr	2,16
  2768   00F0A8  51B5               	movf	f_write@fp& (0+255),w,b
  2769   00F0AA  26D9               	addwf	fsr2l,f,c
  2770   00F0AC  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  2771   00F0AE  22DA               	addwfc	fsr2h,f,c
  2772   00F0B0  CFDE F0BD          	movff	postinc2,??_f_write
  2773   00F0B4  CFDD F0BE          	movff	postdec2,??_f_write+1
  2774   00F0B8  0EFF               	movlw	255
  2775   00F0BA  15BD               	andwf	??_f_write& (0+255),w,b
  2776   00F0BC  6FBF               	movwf	(??_f_write+2)& (0+255),b
  2777   00F0BE  0E01               	movlw	1
  2778   00F0C0  15BE               	andwf	(??_f_write+1)& (0+255),w,b
  2779   00F0C2  6FC0               	movwf	(??_f_write+3)& (0+255),b
  2780   00F0C4  51BF               	movf	(??_f_write+2)& (0+255),w,b
  2781   00F0C6  0800               	sublw	0
  2782   00F0C8  6FD8               	movwf	f_write@wcnt& (0+255),b
  2783   00F0CA  51C0               	movf	(??_f_write+3)& (0+255),w,b
  2784   00F0CC  A0D8               	btfss	status,0,c
  2785   00F0CE  2AE8               	incf	wreg,f,c
  2786   00F0D0  0802               	sublw	2
  2787   00F0D2  6FD9               	movwf	(f_write@wcnt+1)& (0+255),b
  2788   00F0D4                     
  2789                           ; BSR set to: 0
  2790                           ;mcc_generated_files/fatfs/ff.c: 3908:   if (wcnt > btw) wcnt = btw;
  2791   00F0D4  51D8               	movf	f_write@wcnt& (0+255),w,b
  2792   00F0D6  5DB9               	subwf	f_write@btw& (0+255),w,b
  2793   00F0D8  51D9               	movf	(f_write@wcnt+1)& (0+255),w,b
  2794   00F0DA  59BA               	subwfb	(f_write@btw+1)& (0+255),w,b
  2795   00F0DC  B0D8               	btfsc	status,0,c
  2796   00F0DE  EF73  F078         	goto	u11401
  2797   00F0E2  EF75  F078         	goto	u11400
  2798   00F0E6                     u11401:
  2799   00F0E6  EF79  F078         	goto	l8263
  2800   00F0EA                     u11400:
  2801   00F0EA                     
  2802                           ; BSR set to: 0
  2803   00F0EA  C0B9  F0D8         	movff	f_write@btw,f_write@wcnt
  2804   00F0EE  C0BA  F0D9         	movff	f_write@btw+1,f_write@wcnt+1
  2805   00F0F2                     l8263:
  2806                           
  2807                           ; BSR set to: 0
  2808                           ;mcc_generated_files/fatfs/ff.c: 3914:   mem_cpy(fp->buf + fp->fptr % ((UINT)512), wbuff
      +                          , wcnt);
  2809   00F0F2  EE20 F010          	lfsr	2,16
  2810   00F0F6  51B5               	movf	f_write@fp& (0+255),w,b
  2811   00F0F8  26D9               	addwf	fsr2l,f,c
  2812   00F0FA  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  2813   00F0FC  22DA               	addwfc	fsr2h,f,c
  2814   00F0FE  CFDE F0BD          	movff	postinc2,??_f_write
  2815   00F102  CFDD F0BE          	movff	postdec2,??_f_write+1
  2816   00F106  0EFF               	movlw	255
  2817   00F108  15BD               	andwf	??_f_write& (0+255),w,b
  2818   00F10A  6FBF               	movwf	(??_f_write+2)& (0+255),b
  2819   00F10C  0E01               	movlw	1
  2820   00F10E  15BE               	andwf	(??_f_write+1)& (0+255),w,b
  2821   00F110  6FC0               	movwf	(??_f_write+3)& (0+255),b
  2822   00F112  51BF               	movf	(??_f_write+2)& (0+255),w,b
  2823   00F114  25B5               	addwf	f_write@fp& (0+255),w,b
  2824   00F116  6FC1               	movwf	(??_f_write+4)& (0+255),b
  2825   00F118  51C0               	movf	(??_f_write+3)& (0+255),w,b
  2826   00F11A  21B6               	addwfc	(f_write@fp+1)& (0+255),w,b
  2827   00F11C  6FC2               	movwf	(??_f_write+5)& (0+255),b
  2828   00F11E  0E22               	movlw	34
  2829   00F120  25C1               	addwf	(??_f_write+4)& (0+255),w,b
  2830   00F122  6E01               	movwf	mem_cpy@dst^0,c
  2831   00F124  0E00               	movlw	0
  2832   00F126  21C2               	addwfc	(??_f_write+5)& (0+255),w,b
  2833   00F128  6E02               	movwf	(mem_cpy@dst+1)^0,c
  2834   00F12A  C0CE  F003         	movff	f_write@wbuff,mem_cpy@src
  2835   00F12E  C0CF  F004         	movff	f_write@wbuff+1,mem_cpy@src+1
  2836   00F132  C0D8  F005         	movff	f_write@wcnt,mem_cpy@cnt
  2837   00F136  C0D9  F006         	movff	f_write@wcnt+1,mem_cpy@cnt+1
  2838   00F13A  ECBA  F047         	call	_mem_cpy	;wreg free
  2839   00F13E                     
  2840                           ;mcc_generated_files/fatfs/ff.c: 3915:   fp->flag |= 0x80;
  2841   00F13E  0100               	movlb	0	; () banked
  2842   00F140  EE20 F00E          	lfsr	2,14
  2843   00F144  51B5               	movf	f_write@fp& (0+255),w,b
  2844   00F146  26D9               	addwf	fsr2l,f,c
  2845   00F148  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  2846   00F14A  22DA               	addwfc	fsr2h,f,c
  2847   00F14C  0E00               	movlw	0
  2848   00F14E  8EDB               	bsf	plusw2,7,c
  2849   00F150                     l8267:
  2850                           
  2851                           ; BSR set to: 0
  2852   00F150  51D8               	movf	f_write@wcnt& (0+255),w,b
  2853   00F152  5FB9               	subwf	f_write@btw& (0+255),f,b
  2854   00F154  51D9               	movf	(f_write@wcnt+1)& (0+255),w,b
  2855   00F156  5BBA               	subwfb	(f_write@btw+1)& (0+255),f,b
  2856   00F158                     
  2857                           ; BSR set to: 0
  2858   00F158  C0BB  FFD9         	movff	f_write@bw,fsr2l
  2859   00F15C  C0BC  FFDA         	movff	f_write@bw+1,fsr2h
  2860   00F160  51D8               	movf	f_write@wcnt& (0+255),w,b
  2861   00F162  26DE               	addwf	postinc2,f,c
  2862   00F164  51D9               	movf	(f_write@wcnt+1)& (0+255),w,b
  2863   00F166  22DD               	addwfc	postdec2,f,c
  2864   00F168                     
  2865                           ; BSR set to: 0
  2866   00F168  51D8               	movf	f_write@wcnt& (0+255),w,b
  2867   00F16A  27CE               	addwf	f_write@wbuff& (0+255),f,b
  2868   00F16C  51D9               	movf	(f_write@wcnt+1)& (0+255),w,b
  2869   00F16E  23CF               	addwfc	(f_write@wbuff+1)& (0+255),f,b
  2870   00F170                     
  2871                           ; BSR set to: 0
  2872   00F170  EE20 F010          	lfsr	2,16
  2873   00F174  51B5               	movf	f_write@fp& (0+255),w,b
  2874   00F176  26D9               	addwf	fsr2l,f,c
  2875   00F178  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  2876   00F17A  22DA               	addwfc	fsr2h,f,c
  2877   00F17C  51D8               	movf	f_write@wcnt& (0+255),w,b
  2878   00F17E  26DE               	addwf	postinc2,f,c
  2879   00F180  51D9               	movf	(f_write@wcnt+1)& (0+255),w,b
  2880   00F182  22DE               	addwfc	postinc2,f,c
  2881   00F184  0E00               	movlw	0
  2882   00F186  22DE               	addwfc	postinc2,f,c
  2883   00F188  22DE               	addwfc	postinc2,f,c
  2884   00F18A                     
  2885                           ; BSR set to: 0
  2886   00F18A  EE20 F010          	lfsr	2,16
  2887   00F18E  51B5               	movf	f_write@fp& (0+255),w,b
  2888   00F190  26D9               	addwf	fsr2l,f,c
  2889   00F192  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  2890   00F194  22DA               	addwfc	fsr2h,f,c
  2891   00F196  EE10 F00A          	lfsr	1,10
  2892   00F19A  51B5               	movf	f_write@fp& (0+255),w,b
  2893   00F19C  26E1               	addwf	fsr1l,f,c
  2894   00F19E  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  2895   00F1A0  22E2               	addwfc	fsr1h,f,c
  2896   00F1A2  50DE               	movf	postinc2,w,c
  2897   00F1A4  5CE6               	subwf	postinc1,w,c
  2898   00F1A6  50DE               	movf	postinc2,w,c
  2899   00F1A8  58E6               	subwfb	postinc1,w,c
  2900   00F1AA  50DE               	movf	postinc2,w,c
  2901   00F1AC  58E6               	subwfb	postinc1,w,c
  2902   00F1AE  50DE               	movf	postinc2,w,c
  2903   00F1B0  58E6               	subwfb	postinc1,w,c
  2904   00F1B2  A0D8               	btfss	status,0,c
  2905   00F1B4  EFDE  F078         	goto	u11411
  2906   00F1B8  EFE0  F078         	goto	u11410
  2907   00F1BC                     u11411:
  2908   00F1BC  EFF0  F078         	goto	l8279
  2909   00F1C0                     u11410:
  2910   00F1C0                     
  2911                           ; BSR set to: 0
  2912   00F1C0  EE20 F00A          	lfsr	2,10
  2913   00F1C4  51B5               	movf	f_write@fp& (0+255),w,b
  2914   00F1C6  26D9               	addwf	fsr2l,f,c
  2915   00F1C8  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  2916   00F1CA  22DA               	addwfc	fsr2h,f,c
  2917   00F1CC  CFDE F0C9          	movff	postinc2,_f_write$2693
  2918   00F1D0  CFDE F0CA          	movff	postinc2,_f_write$2693+1
  2919   00F1D4  CFDE F0CB          	movff	postinc2,_f_write$2693+2
  2920   00F1D8  CFDE F0CC          	movff	postinc2,_f_write$2693+3
  2921   00F1DC  EFFE  F078         	goto	l1086
  2922   00F1E0                     l8279:
  2923                           
  2924                           ; BSR set to: 0
  2925   00F1E0  EE20 F010          	lfsr	2,16
  2926   00F1E4  51B5               	movf	f_write@fp& (0+255),w,b
  2927   00F1E6  26D9               	addwf	fsr2l,f,c
  2928   00F1E8  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  2929   00F1EA  22DA               	addwfc	fsr2h,f,c
  2930   00F1EC  CFDE F0C9          	movff	postinc2,_f_write$2693
  2931   00F1F0  CFDE F0CA          	movff	postinc2,_f_write$2693+1
  2932   00F1F4  CFDE F0CB          	movff	postinc2,_f_write$2693+2
  2933   00F1F8  CFDE F0CC          	movff	postinc2,_f_write$2693+3
  2934   00F1FC                     l1086:
  2935                           
  2936                           ; BSR set to: 0
  2937   00F1FC  EE20 F00A          	lfsr	2,10
  2938   00F200  51B5               	movf	f_write@fp& (0+255),w,b
  2939   00F202  26D9               	addwf	fsr2l,f,c
  2940   00F204  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  2941   00F206  22DA               	addwfc	fsr2h,f,c
  2942   00F208  C0C9  FFDE         	movff	_f_write$2693,postinc2
  2943   00F20C  C0CA  FFDE         	movff	_f_write$2693+1,postinc2
  2944   00F210  C0CB  FFDE         	movff	_f_write$2693+2,postinc2
  2945   00F214  C0CC  FFDE         	movff	_f_write$2693+3,postinc2
  2946   00F218                     l8281:
  2947                           
  2948                           ; BSR set to: 0
  2949   00F218  51B9               	movf	f_write@btw& (0+255),w,b
  2950   00F21A  11BA               	iorwf	(f_write@btw+1)& (0+255),w,b
  2951   00F21C  A4D8               	btfss	status,2,c
  2952   00F21E  EF13  F079         	goto	u11421
  2953   00F222  EF15  F079         	goto	u11420
  2954   00F226                     u11421:
  2955   00F226  EF66  F075         	goto	l8171
  2956   00F22A                     u11420:
  2957   00F22A                     l8283:
  2958                           
  2959                           ; BSR set to: 0
  2960                           ;mcc_generated_files/fatfs/ff.c: 3919:  fp->flag |= 0x40;
  2961   00F22A  EE20 F00E          	lfsr	2,14
  2962   00F22E  51B5               	movf	f_write@fp& (0+255),w,b
  2963   00F230  26D9               	addwf	fsr2l,f,c
  2964   00F232  51B6               	movf	(f_write@fp+1)& (0+255),w,b
  2965   00F234  22DA               	addwfc	fsr2h,f,c
  2966   00F236  0E00               	movlw	0
  2967   00F238  8CDB               	bsf	plusw2,6,c
  2968   00F23A                     l1056:
  2969                           
  2970                           ; BSR set to: 0
  2971   00F23A  0012               	return		;funcret
  2972   00F23C                     __end_of_f_write:
  2973                           	callstack 0
  2974                           
  2975 ;; *************** function _f_open *****************
  2976 ;; Defined at:
  2977 ;;		line 3520 in file "mcc_generated_files/fatfs/ff.c"
  2978 ;; Parameters:    Size  Location     Type
  2979 ;;  fp              2  133[BANK0 ] PTR struct .
  2980 ;;		 -> file(546), Fil(546), 
  2981 ;;  path            2  135[BANK0 ] PTR const unsigned char 
  2982 ;;		 -> STR_6(3), STR_5(10), STR_4(3), STR_2(10), 
  2983 ;;		 -> STR_1(1), 
  2984 ;;  mode            1  137[BANK0 ] unsigned char 
  2985 ;; Auto vars:     Size  Location     Type
  2986 ;;  dj             40   27[BANK1 ] struct .
  2987 ;;  clst            4   20[BANK1 ] unsigned long 
  2988 ;;  ofs             4   16[BANK1 ] unsigned long 
  2989 ;;  cl              4   12[BANK1 ] unsigned long 
  2990 ;;  bcs             4    8[BANK1 ] unsigned long 
  2991 ;;  sc              4    4[BANK1 ] unsigned long 
  2992 ;;  dw              4    0[BANK1 ] unsigned long 
  2993 ;;  fs              2   24[BANK1 ] PTR struct .
  2994 ;;		 -> drive(563), NULL(0), FatFs(563), 
  2995 ;;  res             1   26[BANK1 ] enum E68
  2996 ;; Return value:  Size  Location     Type
  2997 ;;                  1    wreg      enum E6428
  2998 ;; Registers used:
  2999 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  3000 ;; Tracked objects:
  3001 ;;		On entry : 0/0
  3002 ;;		On exit  : 0/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3005 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3006 ;;      Locals:         0       0      67       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3007 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3008 ;;      Totals:         0      13      67       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3009 ;;Total ram usage:       80 bytes
  3010 ;; Hardware stack levels used: 1
  3011 ;; Hardware stack levels required when called: 12
  3012 ;; This function calls:
  3013 ;;		_clst2sect
  3014 ;;		_dir_register
  3015 ;;		_disk_read
  3016 ;;		_find_volume
  3017 ;;		_follow_path
  3018 ;;		_get_fat
  3019 ;;		_ld_clust
  3020 ;;		_ld_dword
  3021 ;;		_mem_set
  3022 ;;		_move_window
  3023 ;;		_remove_chain
  3024 ;;		_st_clust
  3025 ;;		_st_dword
  3026 ;; This function is called by:
  3027 ;;		_main
  3028 ;;		_FatFsDemo_Tasks
  3029 ;; This function uses a non-reentrant model
  3030 ;;
  3031                           
  3032                           	psect	text2
  3033   00DA46                     __ptext2:
  3034                           	callstack 0
  3035   00DA46                     _f_open:
  3036                           	callstack 18
  3037   00DA46                     
  3038                           ;mcc_generated_files/fatfs/ff.c: 3521:  FIL* fp,;mcc_generated_files/fatfs/ff.c: 3522:  
      +                          const TCHAR* path,;mcc_generated_files/fatfs/ff.c: 3523:  BYTE mode;mcc_generated_files/
      +                          fatfs/ff.c: 3525: {;mcc_generated_files/fatfs/ff.c: 3526:  FRESULT res;;mcc_generated_fi
      +                          les/fatfs/ff.c: 3527:  FFDIR dj;;mcc_generated_files/fatfs/ff.c: 3528:  FATFS *fs;;mcc_g
      +                          enerated_files/fatfs/ff.c: 3530:  DWORD dw, cl, bcs, clst, sc;;mcc_generated_files/fatfs
      +                          /ff.c: 3531:  FSIZE_t ofs;;mcc_generated_files/fatfs/ff.c: 3536:  if (!fp) return FR_INV
      +                          ALID_OBJECT;
  3039   00DA46  0100               	movlb	0	; () banked
  3040   00DA48  51E5               	movf	f_open@fp& (0+255),w,b
  3041   00DA4A  11E6               	iorwf	(f_open@fp+1)& (0+255),w,b
  3042   00DA4C  A4D8               	btfss	status,2,c
  3043   00DA4E  EF2B  F06D         	goto	u10811
  3044   00DA52  EF2D  F06D         	goto	u10810
  3045   00DA56                     u10811:
  3046   00DA56  EF30  F06D         	goto	l8005
  3047   00DA5A                     u10810:
  3048   00DA5A                     
  3049                           ; BSR set to: 0
  3050   00DA5A  0E09               	movlw	9
  3051   00DA5C  EFFE  F070         	goto	l984
  3052   00DA60                     l8005:
  3053   00DA60                     
  3054                           ; BSR set to: 0
  3055   00DA60  0E3F               	movlw	63
  3056   00DA62  17E9               	andwf	f_open@mode& (0+255),f,b
  3057   00DA64                     
  3058                           ; BSR set to: 0
  3059                           ;mcc_generated_files/fatfs/ff.c: 3540:  res = find_volume(&path, &fs, mode);
  3060   00DA64  0EE7               	movlw	low f_open@path
  3061   00DA66  6F7E               	movwf	find_volume@path& (0+255),b
  3062   00DA68  0E00               	movlw	high f_open@path
  3063   00DA6A  6F7F               	movwf	(find_volume@path+1)& (0+255),b
  3064   00DA6C  0E18               	movlw	low f_open@fs
  3065   00DA6E  6F80               	movwf	find_volume@rfs& (0+255),b
  3066   00DA70  0E01               	movlw	high f_open@fs
  3067   00DA72  6F81               	movwf	(find_volume@rfs+1)& (0+255),b
  3068   00DA74  C0E9  F082         	movff	f_open@mode,find_volume@mode
  3069   00DA78  EC1E  F079         	call	_find_volume	;wreg free
  3070   00DA7C  0101               	movlb	1	; () banked
  3071   00DA7E  6F1A               	movwf	f_open@res& (0+255),b
  3072   00DA80                     
  3073                           ; BSR set to: 1
  3074                           ;mcc_generated_files/fatfs/ff.c: 3541:  if (res == FR_OK) {
  3075   00DA80  511A               	movf	f_open@res& (0+255),w,b
  3076   00DA82  A4D8               	btfss	status,2,c
  3077   00DA84  EF46  F06D         	goto	u10821
  3078   00DA88  EF48  F06D         	goto	u10820
  3079   00DA8C                     u10821:
  3080   00DA8C  EFEC  F070         	goto	l989
  3081   00DA90                     u10820:
  3082   00DA90                     
  3083                           ; BSR set to: 1
  3084                           ;mcc_generated_files/fatfs/ff.c: 3542:   dj.obj.fs = fs;
  3085   00DA90  C118  F11B         	movff	f_open@fs,f_open@dj
  3086   00DA94  C119  F11C         	movff	f_open@fs+1,f_open@dj+1
  3087   00DA98                     
  3088                           ; BSR set to: 1
  3089                           ;mcc_generated_files/fatfs/ff.c: 3544:   res = follow_path(&dj, path);
  3090   00DA98  0E1B               	movlw	low f_open@dj
  3091   00DA9A  0100               	movlb	0	; () banked
  3092   00DA9C  6FD7               	movwf	follow_path@dp& (0+255),b
  3093   00DA9E  0E01               	movlw	high f_open@dj
  3094   00DAA0  6FD8               	movwf	(follow_path@dp+1)& (0+255),b
  3095   00DAA2  C0E7  F0D9         	movff	f_open@path,follow_path@path
  3096   00DAA6  C0E8  F0DA         	movff	f_open@path+1,follow_path@path+1
  3097   00DAAA  EC6A  F055         	call	_follow_path	;wreg free
  3098   00DAAE  0101               	movlb	1	; () banked
  3099   00DAB0  6F1A               	movwf	f_open@res& (0+255),b
  3100   00DAB2                     
  3101                           ; BSR set to: 1
  3102                           ;mcc_generated_files/fatfs/ff.c: 3546:   if (res == FR_OK) {
  3103   00DAB2  511A               	movf	f_open@res& (0+255),w,b
  3104   00DAB4  A4D8               	btfss	status,2,c
  3105   00DAB6  EF5F  F06D         	goto	u10831
  3106   00DABA  EF61  F06D         	goto	u10830
  3107   00DABE                     u10831:
  3108   00DABE  EF6A  F06D         	goto	l8025
  3109   00DAC2                     u10830:
  3110   00DAC2                     
  3111                           ; BSR set to: 1
  3112                           ;mcc_generated_files/fatfs/ff.c: 3547:    if (dj.fn[11] & 0x80) {
  3113   00DAC2  AF42               	btfss	(f_open@dj+39)& (0+255),7,b
  3114   00DAC4  EF66  F06D         	goto	u10841
  3115   00DAC8  EF68  F06D         	goto	u10840
  3116   00DACC                     u10841:
  3117   00DACC  EF6A  F06D         	goto	l8025
  3118   00DAD0                     u10840:
  3119   00DAD0                     
  3120                           ; BSR set to: 1
  3121                           ;mcc_generated_files/fatfs/ff.c: 3548:     res = FR_INVALID_NAME;
  3122   00DAD0  0E06               	movlw	6
  3123   00DAD2  6F1A               	movwf	f_open@res& (0+255),b
  3124   00DAD4                     l8025:
  3125                           
  3126                           ; BSR set to: 1
  3127                           ;mcc_generated_files/fatfs/ff.c: 3557:   if (mode & (0x08 | 0x10 | 0x04)) {
  3128   00DAD4  C0E9  F0EA         	movff	f_open@mode,??_f_open
  3129   00DAD8  0E1C               	movlw	28
  3130   00DADA  0100               	movlb	0	; () banked
  3131   00DADC  17EA               	andwf	??_f_open& (0+255),f,b
  3132   00DADE  B4D8               	btfsc	status,2,c
  3133   00DAE0  EF74  F06D         	goto	u10851
  3134   00DAE4  EF76  F06D         	goto	u10850
  3135   00DAE8                     u10851:
  3136   00DAE8  EF87  F06E         	goto	l8065
  3137   00DAEC                     u10850:
  3138   00DAEC                     
  3139                           ; BSR set to: 0
  3140                           ;mcc_generated_files/fatfs/ff.c: 3558:    if (res != FR_OK) {
  3141   00DAEC  0101               	movlb	1	; () banked
  3142   00DAEE  511A               	movf	f_open@res& (0+255),w,b
  3143   00DAF0  B4D8               	btfsc	status,2,c
  3144   00DAF2  EF7D  F06D         	goto	u10861
  3145   00DAF6  EF7F  F06D         	goto	u10860
  3146   00DAFA                     u10861:
  3147   00DAFA  EF95  F06D         	goto	l8035
  3148   00DAFE                     u10860:
  3149   00DAFE                     
  3150                           ; BSR set to: 1
  3151                           ;mcc_generated_files/fatfs/ff.c: 3559:     if (res == FR_NO_FILE) {
  3152   00DAFE  0E04               	movlw	4
  3153   00DB00  191A               	xorwf	f_open@res& (0+255),w,b
  3154   00DB02  A4D8               	btfss	status,2,c
  3155   00DB04  EF86  F06D         	goto	u10871
  3156   00DB08  EF88  F06D         	goto	u10870
  3157   00DB0C                     u10871:
  3158   00DB0C  EF91  F06D         	goto	l8033
  3159   00DB10                     u10870:
  3160   00DB10                     
  3161                           ; BSR set to: 1
  3162                           ;mcc_generated_files/fatfs/ff.c: 3563:      res = dir_register(&dj);
  3163   00DB10  0E1B               	movlw	low f_open@dj
  3164   00DB12  0100               	movlb	0	; () banked
  3165   00DB14  6FDB               	movwf	dir_register@dp& (0+255),b
  3166   00DB16  0E01               	movlw	high f_open@dj
  3167   00DB18  6FDC               	movwf	(dir_register@dp+1)& (0+255),b
  3168   00DB1A  ECF7  F04B         	call	_dir_register	;wreg free
  3169   00DB1E  0101               	movlb	1	; () banked
  3170   00DB20  6F1A               	movwf	f_open@res& (0+255),b
  3171   00DB22                     l8033:
  3172                           
  3173                           ; BSR set to: 1
  3174                           ;mcc_generated_files/fatfs/ff.c: 3566:     mode |= 0x08;
  3175   00DB22  0100               	movlb	0	; () banked
  3176   00DB24  87E9               	bsf	f_open@mode& (0+255),3,b
  3177                           
  3178                           ;mcc_generated_files/fatfs/ff.c: 3567:    }
  3179   00DB26  EFB0  F06D         	goto	l995
  3180   00DB2A                     l8035:
  3181                           
  3182                           ; BSR set to: 1
  3183                           ;mcc_generated_files/fatfs/ff.c: 3569:     if (dj.obj.attr & (0x01 | 0x10)) {
  3184   00DB2A  C11F  F0EA         	movff	f_open@dj+4,??_f_open
  3185   00DB2E  0E11               	movlw	17
  3186   00DB30  0100               	movlb	0	; () banked
  3187   00DB32  17EA               	andwf	??_f_open& (0+255),f,b
  3188   00DB34  B4D8               	btfsc	status,2,c
  3189   00DB36  EF9F  F06D         	goto	u10881
  3190   00DB3A  EFA1  F06D         	goto	u10880
  3191   00DB3E                     u10881:
  3192   00DB3E  EFA6  F06D         	goto	l996
  3193   00DB42                     u10880:
  3194   00DB42                     
  3195                           ; BSR set to: 0
  3196                           ;mcc_generated_files/fatfs/ff.c: 3570:      res = FR_DENIED;
  3197   00DB42  0E07               	movlw	7
  3198   00DB44  0101               	movlb	1	; () banked
  3199   00DB46  6F1A               	movwf	f_open@res& (0+255),b
  3200                           
  3201                           ;mcc_generated_files/fatfs/ff.c: 3571:     } else {
  3202   00DB48  EFB0  F06D         	goto	l995
  3203   00DB4C                     l996:
  3204                           
  3205                           ; BSR set to: 0
  3206                           ;mcc_generated_files/fatfs/ff.c: 3572:      if (mode & 0x04) res = FR_EXIST;
  3207   00DB4C  A5E9               	btfss	f_open@mode& (0+255),2,b
  3208   00DB4E  EFAB  F06D         	goto	u10891
  3209   00DB52  EFAD  F06D         	goto	u10890
  3210   00DB56                     u10891:
  3211   00DB56  EFB0  F06D         	goto	l995
  3212   00DB5A                     u10890:
  3213   00DB5A                     
  3214                           ; BSR set to: 0
  3215   00DB5A  0E08               	movlw	8
  3216   00DB5C  0101               	movlb	1	; () banked
  3217   00DB5E  6F1A               	movwf	f_open@res& (0+255),b
  3218   00DB60                     l995:
  3219                           
  3220                           ;mcc_generated_files/fatfs/ff.c: 3575:    if (res == FR_OK && (mode & 0x08)) {
  3221   00DB60  0101               	movlb	1	; () banked
  3222   00DB62  511A               	movf	f_open@res& (0+255),w,b
  3223   00DB64  A4D8               	btfss	status,2,c
  3224   00DB66  EFB7  F06D         	goto	u10901
  3225   00DB6A  EFB9  F06D         	goto	u10900
  3226   00DB6E                     u10901:
  3227   00DB6E  EFAD  F06E         	goto	l1002
  3228   00DB72                     u10900:
  3229   00DB72                     
  3230                           ; BSR set to: 1
  3231   00DB72  0100               	movlb	0	; () banked
  3232   00DB74  A7E9               	btfss	f_open@mode& (0+255),3,b
  3233   00DB76  EFBF  F06D         	goto	u10911
  3234   00DB7A  EFC1  F06D         	goto	u10910
  3235   00DB7E                     u10911:
  3236   00DB7E  EFAD  F06E         	goto	l1002
  3237   00DB82                     u10910:
  3238   00DB82                     
  3239                           ; BSR set to: 0
  3240                           ;mcc_generated_files/fatfs/ff.c: 3594:     {;mcc_generated_files/fatfs/ff.c: 3596:      
      +                          cl = ld_clust(fs, dj.dir);
  3241   00DB82  C118  F008         	movff	f_open@fs,ld_clust@fs
  3242   00DB86  C119  F009         	movff	f_open@fs+1,ld_clust@fs+1
  3243   00DB8A  C135  F00A         	movff	f_open@dj+26,ld_clust@dir
  3244   00DB8E  C136  F00B         	movff	f_open@dj+27,ld_clust@dir+1
  3245   00DB92  ECA4  F048         	call	_ld_clust	;wreg free
  3246   00DB96  C008  F10C         	movff	?_ld_clust,f_open@cl
  3247   00DB9A  C009  F10D         	movff	?_ld_clust+1,f_open@cl+1
  3248   00DB9E  C00A  F10E         	movff	?_ld_clust+2,f_open@cl+2
  3249   00DBA2  C00B  F10F         	movff	?_ld_clust+3,f_open@cl+3
  3250                           
  3251                           ;mcc_generated_files/fatfs/ff.c: 3597:      st_dword(dj.dir + 14, ((DWORD)(2023 - 1980) 
      +                          << 25 | (DWORD)2 << 21 | (DWORD)6 << 16));
  3252   00DBA6  0E0E               	movlw	14
  3253   00DBA8  0101               	movlb	1	; () banked
  3254   00DBAA  2535               	addwf	(f_open@dj+26)& (0+255),w,b
  3255   00DBAC  6E01               	movwf	st_dword@ptr^0,c
  3256   00DBAE  0E00               	movlw	0
  3257   00DBB0  2136               	addwfc	(f_open@dj+27)& (0+255),w,b
  3258   00DBB2  6E02               	movwf	(st_dword@ptr+1)^0,c
  3259   00DBB4  0E00               	movlw	0
  3260   00DBB6  6E03               	movwf	st_dword@val^0,c
  3261   00DBB8  0E00               	movlw	0
  3262   00DBBA  6E04               	movwf	(st_dword@val+1)^0,c
  3263   00DBBC  0E46               	movlw	70
  3264   00DBBE  6E05               	movwf	(st_dword@val+2)^0,c
  3265   00DBC0  0E56               	movlw	86
  3266   00DBC2  6E06               	movwf	(st_dword@val+3)^0,c
  3267   00DBC4  EC84  F047         	call	_st_dword	;wreg free
  3268   00DBC8                     
  3269                           ;mcc_generated_files/fatfs/ff.c: 3598:      dj.dir[11] = 0x20;
  3270   00DBC8  0101               	movlb	1	; () banked
  3271   00DBCA  EE20 F00B          	lfsr	2,11
  3272   00DBCE  5135               	movf	(f_open@dj+26)& (0+255),w,b
  3273   00DBD0  26D9               	addwf	fsr2l,f,c
  3274   00DBD2  5136               	movf	(f_open@dj+27)& (0+255),w,b
  3275   00DBD4  22DA               	addwfc	fsr2h,f,c
  3276   00DBD6  0E20               	movlw	32
  3277   00DBD8  6EDF               	movwf	indf2,c
  3278   00DBDA                     
  3279                           ; BSR set to: 1
  3280                           ;mcc_generated_files/fatfs/ff.c: 3599:      st_clust(fs, dj.dir, 0);
  3281   00DBDA  C118  F005         	movff	f_open@fs,st_clust@fs
  3282   00DBDE  C119  F006         	movff	f_open@fs+1,st_clust@fs+1
  3283   00DBE2  C135  F007         	movff	f_open@dj+26,st_clust@dir
  3284   00DBE6  C136  F008         	movff	f_open@dj+27,st_clust@dir+1
  3285   00DBEA  0E00               	movlw	0
  3286   00DBEC  6E09               	movwf	st_clust@cl^0,c
  3287   00DBEE  0E00               	movlw	0
  3288   00DBF0  6E0A               	movwf	(st_clust@cl+1)^0,c
  3289   00DBF2  0E00               	movlw	0
  3290   00DBF4  6E0B               	movwf	(st_clust@cl+2)^0,c
  3291   00DBF6  0E00               	movlw	0
  3292   00DBF8  6E0C               	movwf	(st_clust@cl+3)^0,c
  3293   00DBFA  EC1F  F046         	call	_st_clust	;wreg free
  3294   00DBFE                     
  3295                           ;mcc_generated_files/fatfs/ff.c: 3600:      st_dword(dj.dir + 28, 0);
  3296   00DBFE  0E1C               	movlw	28
  3297   00DC00  0101               	movlb	1	; () banked
  3298   00DC02  2535               	addwf	(f_open@dj+26)& (0+255),w,b
  3299   00DC04  6E01               	movwf	st_dword@ptr^0,c
  3300   00DC06  0E00               	movlw	0
  3301   00DC08  2136               	addwfc	(f_open@dj+27)& (0+255),w,b
  3302   00DC0A  6E02               	movwf	(st_dword@ptr+1)^0,c
  3303   00DC0C  0E00               	movlw	0
  3304   00DC0E  6E03               	movwf	st_dword@val^0,c
  3305   00DC10  0E00               	movlw	0
  3306   00DC12  6E04               	movwf	(st_dword@val+1)^0,c
  3307   00DC14  0E00               	movlw	0
  3308   00DC16  6E05               	movwf	(st_dword@val+2)^0,c
  3309   00DC18  0E00               	movlw	0
  3310   00DC1A  6E06               	movwf	(st_dword@val+3)^0,c
  3311   00DC1C  EC84  F047         	call	_st_dword	;wreg free
  3312   00DC20                     
  3313                           ;mcc_generated_files/fatfs/ff.c: 3601:      fs->wflag = 1;
  3314   00DC20  0101               	movlb	1	; () banked
  3315   00DC22  EE20 F003          	lfsr	2,3
  3316   00DC26  5118               	movf	f_open@fs& (0+255),w,b
  3317   00DC28  26D9               	addwf	fsr2l,f,c
  3318   00DC2A  5119               	movf	(f_open@fs+1)& (0+255),w,b
  3319   00DC2C  22DA               	addwfc	fsr2h,f,c
  3320   00DC2E  0E01               	movlw	1
  3321   00DC30  6EDF               	movwf	indf2,c
  3322   00DC32                     
  3323                           ; BSR set to: 1
  3324                           ;mcc_generated_files/fatfs/ff.c: 3602:      if (cl != 0) {
  3325   00DC32  510C               	movf	f_open@cl& (0+255),w,b
  3326   00DC34  110D               	iorwf	(f_open@cl+1)& (0+255),w,b
  3327   00DC36  110E               	iorwf	(f_open@cl+2)& (0+255),w,b
  3328   00DC38  110F               	iorwf	(f_open@cl+3)& (0+255),w,b
  3329   00DC3A  B4D8               	btfsc	status,2,c
  3330   00DC3C  EF22  F06E         	goto	u10921
  3331   00DC40  EF24  F06E         	goto	u10920
  3332   00DC44                     u10921:
  3333   00DC44  EFAD  F06E         	goto	l1002
  3334   00DC48                     u10920:
  3335   00DC48                     
  3336                           ; BSR set to: 1
  3337                           ;mcc_generated_files/fatfs/ff.c: 3603:       dw = fs->winsect;
  3338   00DC48  EE20 F02F          	lfsr	2,47
  3339   00DC4C  5118               	movf	f_open@fs& (0+255),w,b
  3340   00DC4E  26D9               	addwf	fsr2l,f,c
  3341   00DC50  5119               	movf	(f_open@fs+1)& (0+255),w,b
  3342   00DC52  22DA               	addwfc	fsr2h,f,c
  3343   00DC54  CFDE F100          	movff	postinc2,f_open@dw
  3344   00DC58  CFDE F101          	movff	postinc2,f_open@dw+1
  3345   00DC5C  CFDE F102          	movff	postinc2,f_open@dw+2
  3346   00DC60  CFDE F103          	movff	postinc2,f_open@dw+3
  3347   00DC64                     
  3348                           ; BSR set to: 1
  3349                           ;mcc_generated_files/fatfs/ff.c: 3604:       res = remove_chain(&dj.obj, cl, 0);
  3350   00DC64  0E1B               	movlw	low f_open@dj
  3351   00DC66  0100               	movlb	0	; () banked
  3352   00DC68  6F98               	movwf	remove_chain@obj& (0+255),b
  3353   00DC6A  0E01               	movlw	high f_open@dj
  3354   00DC6C  6F99               	movwf	(remove_chain@obj+1)& (0+255),b
  3355   00DC6E  C10C  F09A         	movff	f_open@cl,remove_chain@clst
  3356   00DC72  C10D  F09B         	movff	f_open@cl+1,remove_chain@clst+1
  3357   00DC76  C10E  F09C         	movff	f_open@cl+2,remove_chain@clst+2
  3358   00DC7A  C10F  F09D         	movff	f_open@cl+3,remove_chain@clst+3
  3359   00DC7E  0E00               	movlw	0
  3360   00DC80  6F9E               	movwf	remove_chain@pclst& (0+255),b
  3361   00DC82  0E00               	movlw	0
  3362   00DC84  6F9F               	movwf	(remove_chain@pclst+1)& (0+255),b
  3363   00DC86  0E00               	movlw	0
  3364   00DC88  6FA0               	movwf	(remove_chain@pclst+2)& (0+255),b
  3365   00DC8A  0E00               	movlw	0
  3366   00DC8C  6FA1               	movwf	(remove_chain@pclst+3)& (0+255),b
  3367   00DC8E  EC51  F054         	call	_remove_chain	;wreg free
  3368   00DC92  0101               	movlb	1	; () banked
  3369   00DC94  6F1A               	movwf	f_open@res& (0+255),b
  3370   00DC96                     
  3371                           ; BSR set to: 1
  3372                           ;mcc_generated_files/fatfs/ff.c: 3605:       if (res == FR_OK) {
  3373   00DC96  511A               	movf	f_open@res& (0+255),w,b
  3374   00DC98  A4D8               	btfss	status,2,c
  3375   00DC9A  EF51  F06E         	goto	u10931
  3376   00DC9E  EF53  F06E         	goto	u10930
  3377   00DCA2                     u10931:
  3378   00DCA2  EFAD  F06E         	goto	l1002
  3379   00DCA6                     u10930:
  3380   00DCA6                     
  3381                           ; BSR set to: 1
  3382                           ;mcc_generated_files/fatfs/ff.c: 3606:        res = move_window(fs, dw);
  3383   00DCA6  C118  F070         	movff	f_open@fs,move_window@fs
  3384   00DCAA  C119  F071         	movff	f_open@fs+1,move_window@fs+1
  3385   00DCAE  C100  F072         	movff	f_open@dw,move_window@sector
  3386   00DCB2  C101  F073         	movff	f_open@dw+1,move_window@sector+1
  3387   00DCB6  C102  F074         	movff	f_open@dw+2,move_window@sector+2
  3388   00DCBA  C103  F075         	movff	f_open@dw+3,move_window@sector+3
  3389   00DCBE  ECBF  F04A         	call	_move_window	;wreg free
  3390   00DCC2  0101               	movlb	1	; () banked
  3391   00DCC4  6F1A               	movwf	f_open@res& (0+255),b
  3392   00DCC6                     
  3393                           ; BSR set to: 1
  3394                           ;mcc_generated_files/fatfs/ff.c: 3607:        fs->last_clst = cl - 1;
  3395   00DCC6  0EFF               	movlw	255
  3396   00DCC8  250C               	addwf	f_open@cl& (0+255),w,b
  3397   00DCCA  0100               	movlb	0	; () banked
  3398   00DCCC  6FEA               	movwf	??_f_open& (0+255),b
  3399   00DCCE  0EFF               	movlw	255
  3400   00DCD0  0101               	movlb	1	; () banked
  3401   00DCD2  210D               	addwfc	(f_open@cl+1)& (0+255),w,b
  3402   00DCD4  0100               	movlb	0	; () banked
  3403   00DCD6  6FEB               	movwf	(??_f_open+1)& (0+255),b
  3404   00DCD8  0EFF               	movlw	255
  3405   00DCDA  0101               	movlb	1	; () banked
  3406   00DCDC  210E               	addwfc	(f_open@cl+2)& (0+255),w,b
  3407   00DCDE  0100               	movlb	0	; () banked
  3408   00DCE0  6FEC               	movwf	(??_f_open+2)& (0+255),b
  3409   00DCE2  0EFF               	movlw	255
  3410   00DCE4  0101               	movlb	1	; () banked
  3411   00DCE6  210F               	addwfc	(f_open@cl+3)& (0+255),w,b
  3412   00DCE8  0100               	movlb	0	; () banked
  3413   00DCEA  6FED               	movwf	(??_f_open+3)& (0+255),b
  3414   00DCEC  0101               	movlb	1	; () banked
  3415   00DCEE  EE20 F00B          	lfsr	2,11
  3416   00DCF2  5118               	movf	f_open@fs& (0+255),w,b
  3417   00DCF4  26D9               	addwf	fsr2l,f,c
  3418   00DCF6  5119               	movf	(f_open@fs+1)& (0+255),w,b
  3419   00DCF8  22DA               	addwfc	fsr2h,f,c
  3420   00DCFA  C0EA  FFDE         	movff	??_f_open,postinc2
  3421   00DCFE  C0EB  FFDE         	movff	??_f_open+1,postinc2
  3422   00DD02  C0EC  FFDE         	movff	??_f_open+2,postinc2
  3423   00DD06  C0ED  FFDE         	movff	??_f_open+3,postinc2
  3424   00DD0A  EFAD  F06E         	goto	l1002
  3425   00DD0E                     l8065:
  3426                           
  3427                           ; BSR set to: 0
  3428                           ;mcc_generated_files/fatfs/ff.c: 3614:    if (res == FR_OK) {
  3429   00DD0E  0101               	movlb	1	; () banked
  3430   00DD10  511A               	movf	f_open@res& (0+255),w,b
  3431   00DD12  A4D8               	btfss	status,2,c
  3432   00DD14  EF8E  F06E         	goto	u10941
  3433   00DD18  EF90  F06E         	goto	u10940
  3434   00DD1C                     u10941:
  3435   00DD1C  EFAD  F06E         	goto	l1002
  3436   00DD20                     u10940:
  3437   00DD20                     
  3438                           ; BSR set to: 1
  3439                           ;mcc_generated_files/fatfs/ff.c: 3615:     if (dj.obj.attr & 0x10) {
  3440   00DD20  A91F               	btfss	(f_open@dj+4)& (0+255),4,b
  3441   00DD22  EF95  F06E         	goto	u10951
  3442   00DD26  EF97  F06E         	goto	u10950
  3443   00DD2A                     u10951:
  3444   00DD2A  EF9B  F06E         	goto	l1004
  3445   00DD2E                     u10950:
  3446   00DD2E                     
  3447                           ; BSR set to: 1
  3448                           ;mcc_generated_files/fatfs/ff.c: 3616:      res = FR_NO_FILE;
  3449   00DD2E  0E04               	movlw	4
  3450   00DD30  6F1A               	movwf	f_open@res& (0+255),b
  3451                           
  3452                           ;mcc_generated_files/fatfs/ff.c: 3617:     } else {
  3453   00DD32  EFAD  F06E         	goto	l1002
  3454   00DD36                     l1004:
  3455                           
  3456                           ; BSR set to: 1
  3457                           ;mcc_generated_files/fatfs/ff.c: 3618:      if ((mode & 0x02) && (dj.obj.attr & 0x01)) {
  3458   00DD36  0100               	movlb	0	; () banked
  3459   00DD38  A3E9               	btfss	f_open@mode& (0+255),1,b
  3460   00DD3A  EFA1  F06E         	goto	u10961
  3461   00DD3E  EFA3  F06E         	goto	u10960
  3462   00DD42                     u10961:
  3463   00DD42  EFAD  F06E         	goto	l1002
  3464   00DD46                     u10960:
  3465   00DD46                     
  3466                           ; BSR set to: 0
  3467   00DD46  0101               	movlb	1	; () banked
  3468   00DD48  A11F               	btfss	(f_open@dj+4)& (0+255),0,b
  3469   00DD4A  EFA9  F06E         	goto	u10971
  3470   00DD4E  EFAB  F06E         	goto	u10970
  3471   00DD52                     u10971:
  3472   00DD52  EFAD  F06E         	goto	l1002
  3473   00DD56                     u10970:
  3474   00DD56                     
  3475                           ; BSR set to: 1
  3476                           ;mcc_generated_files/fatfs/ff.c: 3619:       res = FR_DENIED;
  3477   00DD56  0E07               	movlw	7
  3478   00DD58  6F1A               	movwf	f_open@res& (0+255),b
  3479   00DD5A                     l1002:
  3480                           
  3481                           ;mcc_generated_files/fatfs/ff.c: 3624:   if (res == FR_OK) {
  3482   00DD5A  0101               	movlb	1	; () banked
  3483   00DD5C  511A               	movf	f_open@res& (0+255),w,b
  3484   00DD5E  A4D8               	btfss	status,2,c
  3485   00DD60  EFB4  F06E         	goto	u10981
  3486   00DD64  EFB6  F06E         	goto	u10980
  3487   00DD68                     u10981:
  3488   00DD68  EFDF  F06E         	goto	l8083
  3489   00DD6C                     u10980:
  3490   00DD6C                     
  3491                           ; BSR set to: 1
  3492                           ;mcc_generated_files/fatfs/ff.c: 3625:    if (mode & 0x08) mode |= 0x40;
  3493   00DD6C  0100               	movlb	0	; () banked
  3494   00DD6E  A7E9               	btfss	f_open@mode& (0+255),3,b
  3495   00DD70  EFBC  F06E         	goto	u10991
  3496   00DD74  EFBE  F06E         	goto	u10990
  3497   00DD78                     u10991:
  3498   00DD78  EFBF  F06E         	goto	l8079
  3499   00DD7C                     u10990:
  3500   00DD7C                     
  3501                           ; BSR set to: 0
  3502   00DD7C  8DE9               	bsf	f_open@mode& (0+255),6,b
  3503   00DD7E                     l8079:
  3504                           
  3505                           ; BSR set to: 0
  3506                           ;mcc_generated_files/fatfs/ff.c: 3626:    fp->dir_sect = fs->winsect;
  3507   00DD7E  0101               	movlb	1	; () banked
  3508   00DD80  EE20 F02F          	lfsr	2,47
  3509   00DD84  5118               	movf	f_open@fs& (0+255),w,b
  3510   00DD86  26D9               	addwf	fsr2l,f,c
  3511   00DD88  5119               	movf	(f_open@fs+1)& (0+255),w,b
  3512   00DD8A  22DA               	addwfc	fsr2h,f,c
  3513   00DD8C  0100               	movlb	0	; () banked
  3514   00DD8E  EE10 F01C          	lfsr	1,28
  3515   00DD92  51E5               	movf	f_open@fp& (0+255),w,b
  3516   00DD94  26E1               	addwf	fsr1l,f,c
  3517   00DD96  51E6               	movf	(f_open@fp+1)& (0+255),w,b
  3518   00DD98  22E2               	addwfc	fsr1h,f,c
  3519   00DD9A  CFDE FFE6          	movff	postinc2,postinc1
  3520   00DD9E  CFDE FFE6          	movff	postinc2,postinc1
  3521   00DDA2  CFDE FFE6          	movff	postinc2,postinc1
  3522   00DDA6  CFDE FFE6          	movff	postinc2,postinc1
  3523   00DDAA                     
  3524                           ; BSR set to: 0
  3525                           ;mcc_generated_files/fatfs/ff.c: 3627:    fp->dir_ptr = dj.dir;
  3526   00DDAA  EE20 F020          	lfsr	2,32
  3527   00DDAE  51E5               	movf	f_open@fp& (0+255),w,b
  3528   00DDB0  26D9               	addwf	fsr2l,f,c
  3529   00DDB2  51E6               	movf	(f_open@fp+1)& (0+255),w,b
  3530   00DDB4  22DA               	addwfc	fsr2h,f,c
  3531   00DDB6  C135  FFDE         	movff	f_open@dj+26,postinc2
  3532   00DDBA  C136  FFDD         	movff	f_open@dj+27,postdec2
  3533   00DDBE                     l8083:
  3534                           
  3535                           ;mcc_generated_files/fatfs/ff.c: 3645:   if (res == FR_OK) {
  3536   00DDBE  0101               	movlb	1	; () banked
  3537   00DDC0  511A               	movf	f_open@res& (0+255),w,b
  3538   00DDC2  A4D8               	btfss	status,2,c
  3539   00DDC4  EFE6  F06E         	goto	u11001
  3540   00DDC8  EFE8  F06E         	goto	u11000
  3541   00DDCC                     u11001:
  3542   00DDCC  EFEC  F070         	goto	l989
  3543   00DDD0                     u11000:
  3544   00DDD0                     
  3545                           ; BSR set to: 1
  3546                           ;mcc_generated_files/fatfs/ff.c: 3654:    {;mcc_generated_files/fatfs/ff.c: 3655:     fp
      +                          ->obj.sclust = ld_clust(fs, dj.dir);
  3547   00DDD0  C118  F008         	movff	f_open@fs,ld_clust@fs
  3548   00DDD4  C119  F009         	movff	f_open@fs+1,ld_clust@fs+1
  3549   00DDD8  C135  F00A         	movff	f_open@dj+26,ld_clust@dir
  3550   00DDDC  C136  F00B         	movff	f_open@dj+27,ld_clust@dir+1
  3551   00DDE0  ECA4  F048         	call	_ld_clust	;wreg free
  3552   00DDE4  0100               	movlb	0	; () banked
  3553   00DDE6  EE20 F006          	lfsr	2,6
  3554   00DDEA  51E5               	movf	f_open@fp& (0+255),w,b
  3555   00DDEC  26D9               	addwf	fsr2l,f,c
  3556   00DDEE  51E6               	movf	(f_open@fp+1)& (0+255),w,b
  3557   00DDF0  22DA               	addwfc	fsr2h,f,c
  3558   00DDF2  C008  FFDE         	movff	?_ld_clust,postinc2
  3559   00DDF6  C009  FFDE         	movff	?_ld_clust+1,postinc2
  3560   00DDFA  C00A  FFDE         	movff	?_ld_clust+2,postinc2
  3561   00DDFE  C00B  FFDE         	movff	?_ld_clust+3,postinc2
  3562                           
  3563                           ;mcc_generated_files/fatfs/ff.c: 3656:     fp->obj.objsize = ld_dword(dj.dir + 28);
  3564   00DE02  0E1C               	movlw	28
  3565   00DE04  0101               	movlb	1	; () banked
  3566   00DE06  2535               	addwf	(f_open@dj+26)& (0+255),w,b
  3567   00DE08  6E01               	movwf	ld_dword@ptr^0,c
  3568   00DE0A  0E00               	movlw	0
  3569   00DE0C  2136               	addwfc	(f_open@dj+27)& (0+255),w,b
  3570   00DE0E  6E02               	movwf	(ld_dword@ptr+1)^0,c
  3571   00DE10  EC63  F04A         	call	_ld_dword	;wreg free
  3572   00DE14  0100               	movlb	0	; () banked
  3573   00DE16  EE20 F00A          	lfsr	2,10
  3574   00DE1A  51E5               	movf	f_open@fp& (0+255),w,b
  3575   00DE1C  26D9               	addwf	fsr2l,f,c
  3576   00DE1E  51E6               	movf	(f_open@fp+1)& (0+255),w,b
  3577   00DE20  22DA               	addwfc	fsr2h,f,c
  3578   00DE22  C001  FFDE         	movff	?_ld_dword,postinc2
  3579   00DE26  C002  FFDE         	movff	?_ld_dword+1,postinc2
  3580   00DE2A  C003  FFDE         	movff	?_ld_dword+2,postinc2
  3581   00DE2E  C004  FFDE         	movff	?_ld_dword+3,postinc2
  3582   00DE32                     
  3583                           ; BSR set to: 0
  3584                           ;mcc_generated_files/fatfs/ff.c: 3657:    };mcc_generated_files/fatfs/ff.c: 3661:    fp-
      +                          >obj.fs = fs;
  3585   00DE32  C0E5  FFD9         	movff	f_open@fp,fsr2l
  3586   00DE36  C0E6  FFDA         	movff	f_open@fp+1,fsr2h
  3587   00DE3A  C118  FFDE         	movff	f_open@fs,postinc2
  3588   00DE3E  C119  FFDD         	movff	f_open@fs+1,postdec2
  3589   00DE42                     
  3590                           ; BSR set to: 0
  3591                           ;mcc_generated_files/fatfs/ff.c: 3662:    fp->obj.id = fs->id;
  3592   00DE42  0101               	movlb	1	; () banked
  3593   00DE44  EE20 F005          	lfsr	2,5
  3594   00DE48  5118               	movf	f_open@fs& (0+255),w,b
  3595   00DE4A  26D9               	addwf	fsr2l,f,c
  3596   00DE4C  5119               	movf	(f_open@fs+1)& (0+255),w,b
  3597   00DE4E  22DA               	addwfc	fsr2h,f,c
  3598   00DE50  0100               	movlb	0	; () banked
  3599   00DE52  EE10 F002          	lfsr	1,2
  3600   00DE56  51E5               	movf	f_open@fp& (0+255),w,b
  3601   00DE58  26E1               	addwf	fsr1l,f,c
  3602   00DE5A  51E6               	movf	(f_open@fp+1)& (0+255),w,b
  3603   00DE5C  22E2               	addwfc	fsr1h,f,c
  3604   00DE5E  CFDE FFE6          	movff	postinc2,postinc1
  3605   00DE62  CFDD FFE5          	movff	postdec2,postdec1
  3606   00DE66                     
  3607                           ; BSR set to: 0
  3608                           ;mcc_generated_files/fatfs/ff.c: 3663:    fp->flag = mode;
  3609   00DE66  EE20 F00E          	lfsr	2,14
  3610   00DE6A  51E5               	movf	f_open@fp& (0+255),w,b
  3611   00DE6C  26D9               	addwf	fsr2l,f,c
  3612   00DE6E  51E6               	movf	(f_open@fp+1)& (0+255),w,b
  3613   00DE70  22DA               	addwfc	fsr2h,f,c
  3614   00DE72  C0E9  FFDF         	movff	f_open@mode,indf2
  3615   00DE76                     
  3616                           ; BSR set to: 0
  3617                           ;mcc_generated_files/fatfs/ff.c: 3664:    fp->err = 0;
  3618   00DE76  EE20 F00F          	lfsr	2,15
  3619   00DE7A  51E5               	movf	f_open@fp& (0+255),w,b
  3620   00DE7C  26D9               	addwf	fsr2l,f,c
  3621   00DE7E  51E6               	movf	(f_open@fp+1)& (0+255),w,b
  3622   00DE80  22DA               	addwfc	fsr2h,f,c
  3623   00DE82  0E00               	movlw	0
  3624   00DE84  6EDF               	movwf	indf2,c
  3625   00DE86                     
  3626                           ; BSR set to: 0
  3627                           ;mcc_generated_files/fatfs/ff.c: 3665:    fp->sect = 0;
  3628   00DE86  EE20 F018          	lfsr	2,24
  3629   00DE8A  51E5               	movf	f_open@fp& (0+255),w,b
  3630   00DE8C  26D9               	addwf	fsr2l,f,c
  3631   00DE8E  51E6               	movf	(f_open@fp+1)& (0+255),w,b
  3632   00DE90  22DA               	addwfc	fsr2h,f,c
  3633   00DE92  6ADE               	clrf	postinc2,c
  3634   00DE94  6ADE               	clrf	postinc2,c
  3635   00DE96  6ADE               	clrf	postinc2,c
  3636   00DE98  6ADD               	clrf	postdec2,c
  3637   00DE9A                     
  3638                           ; BSR set to: 0
  3639                           ;mcc_generated_files/fatfs/ff.c: 3666:    fp->fptr = 0;
  3640   00DE9A  EE20 F010          	lfsr	2,16
  3641   00DE9E  51E5               	movf	f_open@fp& (0+255),w,b
  3642   00DEA0  26D9               	addwf	fsr2l,f,c
  3643   00DEA2  51E6               	movf	(f_open@fp+1)& (0+255),w,b
  3644   00DEA4  22DA               	addwfc	fsr2h,f,c
  3645   00DEA6  6ADE               	clrf	postinc2,c
  3646   00DEA8  6ADE               	clrf	postinc2,c
  3647   00DEAA  6ADE               	clrf	postinc2,c
  3648   00DEAC  6ADD               	clrf	postdec2,c
  3649   00DEAE                     
  3650                           ; BSR set to: 0
  3651                           ;mcc_generated_files/fatfs/ff.c: 3669:    mem_set(fp->buf, 0, 512);
  3652   00DEAE  0E22               	movlw	34
  3653   00DEB0  25E5               	addwf	f_open@fp& (0+255),w,b
  3654   00DEB2  6E01               	movwf	mem_set@dst^0,c
  3655   00DEB4  0E00               	movlw	0
  3656   00DEB6  21E6               	addwfc	(f_open@fp+1)& (0+255),w,b
  3657   00DEB8  6E02               	movwf	(mem_set@dst+1)^0,c
  3658   00DEBA  0E00               	movlw	0
  3659   00DEBC  6E04               	movwf	(mem_set@val+1)^0,c
  3660   00DEBE  0E00               	movlw	0
  3661   00DEC0  6E03               	movwf	mem_set@val^0,c
  3662   00DEC2  0E02               	movlw	2
  3663   00DEC4  6E06               	movwf	(mem_set@cnt+1)^0,c
  3664   00DEC6  0E00               	movlw	0
  3665   00DEC8  6E05               	movwf	mem_set@cnt^0,c
  3666   00DECA  ECCB  F045         	call	_mem_set	;wreg free
  3667   00DECE                     
  3668                           ;mcc_generated_files/fatfs/ff.c: 3671:    if ((mode & 0x20) && fp->obj.objsize > 0) {
  3669   00DECE  0100               	movlb	0	; () banked
  3670   00DED0  ABE9               	btfss	f_open@mode& (0+255),5,b
  3671   00DED2  EF6D  F06F         	goto	u11011
  3672   00DED6  EF6F  F06F         	goto	u11010
  3673   00DEDA                     u11011:
  3674   00DEDA  EFEC  F070         	goto	l989
  3675   00DEDE                     u11010:
  3676   00DEDE                     
  3677                           ; BSR set to: 0
  3678   00DEDE  EE20 F00A          	lfsr	2,10
  3679   00DEE2  51E5               	movf	f_open@fp& (0+255),w,b
  3680   00DEE4  26D9               	addwf	fsr2l,f,c
  3681   00DEE6  51E6               	movf	(f_open@fp+1)& (0+255),w,b
  3682   00DEE8  22DA               	addwfc	fsr2h,f,c
  3683   00DEEA  50DE               	movf	postinc2,w,c
  3684   00DEEC  10DE               	iorwf	postinc2,w,c
  3685   00DEEE  10DE               	iorwf	postinc2,w,c
  3686   00DEF0  10DE               	iorwf	postinc2,w,c
  3687   00DEF2  B4D8               	btfsc	status,2,c
  3688   00DEF4  EF7E  F06F         	goto	u11021
  3689   00DEF8  EF80  F06F         	goto	u11020
  3690   00DEFC                     u11021:
  3691   00DEFC  EFEC  F070         	goto	l989
  3692   00DF00                     u11020:
  3693   00DF00                     
  3694                           ; BSR set to: 0
  3695                           ;mcc_generated_files/fatfs/ff.c: 3672:     fp->fptr = fp->obj.objsize;
  3696   00DF00  EE20 F00A          	lfsr	2,10
  3697   00DF04  51E5               	movf	f_open@fp& (0+255),w,b
  3698   00DF06  26D9               	addwf	fsr2l,f,c
  3699   00DF08  51E6               	movf	(f_open@fp+1)& (0+255),w,b
  3700   00DF0A  22DA               	addwfc	fsr2h,f,c
  3701   00DF0C  EE10 F010          	lfsr	1,16
  3702   00DF10  51E5               	movf	f_open@fp& (0+255),w,b
  3703   00DF12  26E1               	addwf	fsr1l,f,c
  3704   00DF14  51E6               	movf	(f_open@fp+1)& (0+255),w,b
  3705   00DF16  22E2               	addwfc	fsr1h,f,c
  3706   00DF18  CFDE FFE6          	movff	postinc2,postinc1
  3707   00DF1C  CFDE FFE6          	movff	postinc2,postinc1
  3708   00DF20  CFDE FFE6          	movff	postinc2,postinc1
  3709   00DF24  CFDE FFE6          	movff	postinc2,postinc1
  3710   00DF28                     
  3711                           ; BSR set to: 0
  3712                           ;mcc_generated_files/fatfs/ff.c: 3673:     bcs = (DWORD)fs->csize * ((UINT)512);
  3713   00DF28  0101               	movlb	1	; () banked
  3714   00DF2A  EE20 F009          	lfsr	2,9
  3715   00DF2E  5118               	movf	f_open@fs& (0+255),w,b
  3716   00DF30  26D9               	addwf	fsr2l,f,c
  3717   00DF32  5119               	movf	(f_open@fs+1)& (0+255),w,b
  3718   00DF34  22DA               	addwfc	fsr2h,f,c
  3719   00DF36  CFDE F0EA          	movff	postinc2,??_f_open
  3720   00DF3A  CFDD F0EB          	movff	postdec2,??_f_open+1
  3721   00DF3E  0100               	movlb	0	; () banked
  3722   00DF40  51EA               	movf	??_f_open& (0+255),w,b
  3723   00DF42  6FEC               	movwf	(??_f_open+2)& (0+255),b
  3724   00DF44  51EB               	movf	(??_f_open+1)& (0+255),w,b
  3725   00DF46  6FED               	movwf	(??_f_open+3)& (0+255),b
  3726   00DF48  6BEE               	clrf	(??_f_open+4)& (0+255),b
  3727   00DF4A  6BEF               	clrf	(??_f_open+5)& (0+255),b
  3728   00DF4C  0E09               	movlw	9
  3729   00DF4E                     u11035:
  3730   00DF4E  90D8               	bcf	status,0,c
  3731   00DF50  37EC               	rlcf	(??_f_open+2)& (0+255),f,b
  3732   00DF52  37ED               	rlcf	(??_f_open+3)& (0+255),f,b
  3733   00DF54  37EE               	rlcf	(??_f_open+4)& (0+255),f,b
  3734   00DF56  37EF               	rlcf	(??_f_open+5)& (0+255),f,b
  3735   00DF58  2EE8               	decfsz	wreg,f,c
  3736   00DF5A  EFA7  F06F         	goto	u11035
  3737   00DF5E  C0EC  F108         	movff	??_f_open+2,f_open@bcs
  3738   00DF62  C0ED  F109         	movff	??_f_open+3,f_open@bcs+1
  3739   00DF66  C0EE  F10A         	movff	??_f_open+4,f_open@bcs+2
  3740   00DF6A  C0EF  F10B         	movff	??_f_open+5,f_open@bcs+3
  3741   00DF6E                     
  3742                           ; BSR set to: 0
  3743                           ;mcc_generated_files/fatfs/ff.c: 3674:     clst = fp->obj.sclust;
  3744   00DF6E  EE20 F006          	lfsr	2,6
  3745   00DF72  51E5               	movf	f_open@fp& (0+255),w,b
  3746   00DF74  26D9               	addwf	fsr2l,f,c
  3747   00DF76  51E6               	movf	(f_open@fp+1)& (0+255),w,b
  3748   00DF78  22DA               	addwfc	fsr2h,f,c
  3749   00DF7A  CFDE F114          	movff	postinc2,f_open@clst
  3750   00DF7E  CFDE F115          	movff	postinc2,f_open@clst+1
  3751   00DF82  CFDE F116          	movff	postinc2,f_open@clst+2
  3752   00DF86  CFDE F117          	movff	postinc2,f_open@clst+3
  3753   00DF8A                     
  3754                           ; BSR set to: 0
  3755                           ;mcc_generated_files/fatfs/ff.c: 3675:     for (ofs = fp->obj.objsize; res == FR_OK && o
      +                          fs > bcs; ofs -= bcs) {
  3756   00DF8A  EE20 F00A          	lfsr	2,10
  3757   00DF8E  51E5               	movf	f_open@fp& (0+255),w,b
  3758   00DF90  26D9               	addwf	fsr2l,f,c
  3759   00DF92  51E6               	movf	(f_open@fp+1)& (0+255),w,b
  3760   00DF94  22DA               	addwfc	fsr2h,f,c
  3761   00DF96  CFDE F110          	movff	postinc2,f_open@ofs
  3762   00DF9A  CFDE F111          	movff	postinc2,f_open@ofs+1
  3763   00DF9E  CFDE F112          	movff	postinc2,f_open@ofs+2
  3764   00DFA2  CFDE F113          	movff	postinc2,f_open@ofs+3
  3765   00DFA6  EF13  F070         	goto	l8125
  3766   00DFAA                     l8113:
  3767                           
  3768                           ; BSR set to: 1
  3769                           ;mcc_generated_files/fatfs/ff.c: 3676:      clst = get_fat(&fp->obj, clst);
  3770   00DFAA  C0E5  F077         	movff	f_open@fp,get_fat@obj
  3771   00DFAE  C0E6  F078         	movff	f_open@fp+1,get_fat@obj+1
  3772   00DFB2  C114  F079         	movff	f_open@clst,get_fat@clst
  3773   00DFB6  C115  F07A         	movff	f_open@clst+1,get_fat@clst+1
  3774   00DFBA  C116  F07B         	movff	f_open@clst+2,get_fat@clst+2
  3775   00DFBE  C117  F07C         	movff	f_open@clst+3,get_fat@clst+3
  3776   00DFC2  ECB7  F059         	call	_get_fat	;wreg free
  3777   00DFC6  C077  F114         	movff	?_get_fat,f_open@clst
  3778   00DFCA  C078  F115         	movff	?_get_fat+1,f_open@clst+1
  3779   00DFCE  C079  F116         	movff	?_get_fat+2,f_open@clst+2
  3780   00DFD2  C07A  F117         	movff	?_get_fat+3,f_open@clst+3
  3781   00DFD6                     
  3782                           ;mcc_generated_files/fatfs/ff.c: 3677:      if (clst <= 1) res = FR_INT_ERR;
  3783   00DFD6  0101               	movlb	1	; () banked
  3784   00DFD8  5117               	movf	(f_open@clst+3)& (0+255),w,b
  3785   00DFDA  1116               	iorwf	(f_open@clst+2)& (0+255),w,b
  3786   00DFDC  1115               	iorwf	(f_open@clst+1)& (0+255),w,b
  3787   00DFDE  E107               	bnz	u11041
  3788   00DFE0  0E02               	movlw	2
  3789   00DFE2  5D14               	subwf	f_open@clst& (0+255),w,b
  3790   00DFE4  B0D8               	btfsc	status,0,c
  3791   00DFE6  EFF7  F06F         	goto	u11041
  3792   00DFEA  EFF9  F06F         	goto	u11040
  3793   00DFEE                     u11041:
  3794   00DFEE  EFFB  F06F         	goto	l8119
  3795   00DFF2                     u11040:
  3796   00DFF2                     
  3797                           ; BSR set to: 1
  3798   00DFF2  0E02               	movlw	2
  3799   00DFF4  6F1A               	movwf	f_open@res& (0+255),b
  3800   00DFF6                     l8119:
  3801                           
  3802                           ; BSR set to: 1
  3803                           ;mcc_generated_files/fatfs/ff.c: 3678:      if (clst == 0xFFFFFFFF) res = FR_DISK_ERR;
  3804   00DFF6  2914               	incf	f_open@clst& (0+255),w,b
  3805   00DFF8  E10A               	bnz	u11051
  3806   00DFFA  2915               	incf	(f_open@clst+1)& (0+255),w,b
  3807   00DFFC  E108               	bnz	u11051
  3808   00DFFE  2916               	incf	(f_open@clst+2)& (0+255),w,b
  3809   00E000  E106               	bnz	u11051
  3810   00E002  2917               	incf	(f_open@clst+3)& (0+255),w,b
  3811   00E004  A4D8               	btfss	status,2,c
  3812   00E006  EF07  F070         	goto	u11051
  3813   00E00A  EF09  F070         	goto	u11050
  3814   00E00E                     u11051:
  3815   00E00E  EF0B  F070         	goto	l8123
  3816   00E012                     u11050:
  3817   00E012                     
  3818                           ; BSR set to: 1
  3819   00E012  0E01               	movlw	1
  3820   00E014  6F1A               	movwf	f_open@res& (0+255),b
  3821   00E016                     l8123:
  3822                           
  3823                           ; BSR set to: 1
  3824                           ;mcc_generated_files/fatfs/ff.c: 3679:     }
  3825   00E016  5108               	movf	f_open@bcs& (0+255),w,b
  3826   00E018  5F10               	subwf	f_open@ofs& (0+255),f,b
  3827   00E01A  5109               	movf	(f_open@bcs+1)& (0+255),w,b
  3828   00E01C  5B11               	subwfb	(f_open@ofs+1)& (0+255),f,b
  3829   00E01E  510A               	movf	(f_open@bcs+2)& (0+255),w,b
  3830   00E020  5B12               	subwfb	(f_open@ofs+2)& (0+255),f,b
  3831   00E022  510B               	movf	(f_open@bcs+3)& (0+255),w,b
  3832   00E024  5B13               	subwfb	(f_open@ofs+3)& (0+255),f,b
  3833   00E026                     l8125:
  3834   00E026  0101               	movlb	1	; () banked
  3835   00E028  511A               	movf	f_open@res& (0+255),w,b
  3836   00E02A  A4D8               	btfss	status,2,c
  3837   00E02C  EF1A  F070         	goto	u11061
  3838   00E030  EF1C  F070         	goto	u11060
  3839   00E034                     u11061:
  3840   00E034  EF2B  F070         	goto	l8129
  3841   00E038                     u11060:
  3842   00E038                     
  3843                           ; BSR set to: 1
  3844   00E038  5110               	movf	f_open@ofs& (0+255),w,b
  3845   00E03A  5D08               	subwf	f_open@bcs& (0+255),w,b
  3846   00E03C  5111               	movf	(f_open@ofs+1)& (0+255),w,b
  3847   00E03E  5909               	subwfb	(f_open@bcs+1)& (0+255),w,b
  3848   00E040  5112               	movf	(f_open@ofs+2)& (0+255),w,b
  3849   00E042  590A               	subwfb	(f_open@bcs+2)& (0+255),w,b
  3850   00E044  5113               	movf	(f_open@ofs+3)& (0+255),w,b
  3851   00E046  590B               	subwfb	(f_open@bcs+3)& (0+255),w,b
  3852   00E048  A0D8               	btfss	status,0,c
  3853   00E04A  EF29  F070         	goto	u11071
  3854   00E04E  EF2B  F070         	goto	u11070
  3855   00E052                     u11071:
  3856   00E052  EFD5  F06F         	goto	l8113
  3857   00E056                     u11070:
  3858   00E056                     l8129:
  3859                           
  3860                           ; BSR set to: 1
  3861                           ;mcc_generated_files/fatfs/ff.c: 3680:     fp->clust = clst;
  3862   00E056  0100               	movlb	0	; () banked
  3863   00E058  EE20 F014          	lfsr	2,20
  3864   00E05C  51E5               	movf	f_open@fp& (0+255),w,b
  3865   00E05E  26D9               	addwf	fsr2l,f,c
  3866   00E060  51E6               	movf	(f_open@fp+1)& (0+255),w,b
  3867   00E062  22DA               	addwfc	fsr2h,f,c
  3868   00E064  C114  FFDE         	movff	f_open@clst,postinc2
  3869   00E068  C115  FFDE         	movff	f_open@clst+1,postinc2
  3870   00E06C  C116  FFDE         	movff	f_open@clst+2,postinc2
  3871   00E070  C117  FFDE         	movff	f_open@clst+3,postinc2
  3872   00E074                     
  3873                           ; BSR set to: 0
  3874                           ;mcc_generated_files/fatfs/ff.c: 3681:     if (res == FR_OK && ofs % ((UINT)512)) {
  3875   00E074  0101               	movlb	1	; () banked
  3876   00E076  511A               	movf	f_open@res& (0+255),w,b
  3877   00E078  A4D8               	btfss	status,2,c
  3878   00E07A  EF41  F070         	goto	u11081
  3879   00E07E  EF43  F070         	goto	u11080
  3880   00E082                     u11081:
  3881   00E082  EFEC  F070         	goto	l989
  3882   00E086                     u11080:
  3883   00E086                     
  3884                           ; BSR set to: 1
  3885   00E086  0EFF               	movlw	255
  3886   00E088  1510               	andwf	f_open@ofs& (0+255),w,b
  3887   00E08A  0100               	movlb	0	; () banked
  3888   00E08C  6FEA               	movwf	??_f_open& (0+255),b
  3889   00E08E  0E01               	movlw	1
  3890   00E090  0101               	movlb	1	; () banked
  3891   00E092  1511               	andwf	(f_open@ofs+1)& (0+255),w,b
  3892   00E094  0100               	movlb	0	; () banked
  3893   00E096  6FEB               	movwf	(??_f_open+1)& (0+255),b
  3894   00E098  0E00               	movlw	0
  3895   00E09A  0101               	movlb	1	; () banked
  3896   00E09C  1512               	andwf	(f_open@ofs+2)& (0+255),w,b
  3897   00E09E  0100               	movlb	0	; () banked
  3898   00E0A0  6FEC               	movwf	(??_f_open+2)& (0+255),b
  3899   00E0A2  0E00               	movlw	0
  3900   00E0A4  0101               	movlb	1	; () banked
  3901   00E0A6  1513               	andwf	(f_open@ofs+3)& (0+255),w,b
  3902   00E0A8  0100               	movlb	0	; () banked
  3903   00E0AA  6FED               	movwf	(??_f_open+3)& (0+255),b
  3904   00E0AC  51EA               	movf	??_f_open& (0+255),w,b
  3905   00E0AE  11EB               	iorwf	(??_f_open+1)& (0+255),w,b
  3906   00E0B0  11EC               	iorwf	(??_f_open+2)& (0+255),w,b
  3907   00E0B2  11ED               	iorwf	(??_f_open+3)& (0+255),w,b
  3908   00E0B4  B4D8               	btfsc	status,2,c
  3909   00E0B6  EF5F  F070         	goto	u11091
  3910   00E0BA  EF61  F070         	goto	u11090
  3911   00E0BE                     u11091:
  3912   00E0BE  EFEC  F070         	goto	l989
  3913   00E0C2                     u11090:
  3914   00E0C2                     
  3915                           ; BSR set to: 0
  3916                           ;mcc_generated_files/fatfs/ff.c: 3682:      if ((sc = clst2sect(fs, clst)) == 0) {
  3917   00E0C2  C118  F00D         	movff	f_open@fs,clst2sect@fs
  3918   00E0C6  C119  F00E         	movff	f_open@fs+1,clst2sect@fs+1
  3919   00E0CA  C114  F00F         	movff	f_open@clst,clst2sect@clst
  3920   00E0CE  C115  F010         	movff	f_open@clst+1,clst2sect@clst+1
  3921   00E0D2  C116  F011         	movff	f_open@clst+2,clst2sect@clst+2
  3922   00E0D6  C117  F012         	movff	f_open@clst+3,clst2sect@clst+3
  3923   00E0DA  EC25  F04B         	call	_clst2sect	;wreg free
  3924   00E0DE  C00D  F104         	movff	?_clst2sect,f_open@sc
  3925   00E0E2  C00E  F105         	movff	?_clst2sect+1,f_open@sc+1
  3926   00E0E6  C00F  F106         	movff	?_clst2sect+2,f_open@sc+2
  3927   00E0EA  C010  F107         	movff	?_clst2sect+3,f_open@sc+3
  3928   00E0EE  0101               	movlb	1	; () banked
  3929   00E0F0  5104               	movf	f_open@sc& (0+255),w,b
  3930   00E0F2  1105               	iorwf	(f_open@sc+1)& (0+255),w,b
  3931   00E0F4  1106               	iorwf	(f_open@sc+2)& (0+255),w,b
  3932   00E0F6  1107               	iorwf	(f_open@sc+3)& (0+255),w,b
  3933   00E0F8  A4D8               	btfss	status,2,c
  3934   00E0FA  EF81  F070         	goto	u11101
  3935   00E0FE  EF83  F070         	goto	u11100
  3936   00E102                     u11101:
  3937   00E102  EF87  F070         	goto	l8139
  3938   00E106                     u11100:
  3939   00E106                     
  3940                           ; BSR set to: 1
  3941                           ;mcc_generated_files/fatfs/ff.c: 3683:       res = FR_INT_ERR;
  3942   00E106  0E02               	movlw	2
  3943   00E108  6F1A               	movwf	f_open@res& (0+255),b
  3944                           
  3945                           ;mcc_generated_files/fatfs/ff.c: 3684:      } else {
  3946   00E10A  EFEC  F070         	goto	l989
  3947   00E10E                     l8139:
  3948                           
  3949                           ; BSR set to: 1
  3950                           ;mcc_generated_files/fatfs/ff.c: 3685:       fp->sect = sc + (DWORD)(ofs / ((UINT)512));
  3951   00E10E  C110  F0EA         	movff	f_open@ofs,??_f_open
  3952   00E112  C111  F0EB         	movff	f_open@ofs+1,??_f_open+1
  3953   00E116  C112  F0EC         	movff	f_open@ofs+2,??_f_open+2
  3954   00E11A  C113  F0ED         	movff	f_open@ofs+3,??_f_open+3
  3955   00E11E  0E0A               	movlw	10
  3956   00E120  EF98  F070         	goto	u11110
  3957   00E124                     u11115:
  3958   00E124  0100               	movlb	0	; () banked
  3959   00E126  90D8               	bcf	status,0,c
  3960   00E128  33ED               	rrcf	(??_f_open+3)& (0+255),f,b
  3961   00E12A  33EC               	rrcf	(??_f_open+2)& (0+255),f,b
  3962   00E12C  33EB               	rrcf	(??_f_open+1)& (0+255),f,b
  3963   00E12E  33EA               	rrcf	??_f_open& (0+255),f,b
  3964   00E130                     u11110:
  3965   00E130  2EE8               	decfsz	wreg,f,c
  3966   00E132  EF92  F070         	goto	u11115
  3967   00E136  0101               	movlb	1	; () banked
  3968   00E138  5104               	movf	f_open@sc& (0+255),w,b
  3969   00E13A  0100               	movlb	0	; () banked
  3970   00E13C  25EA               	addwf	??_f_open& (0+255),w,b
  3971   00E13E  6FEE               	movwf	(??_f_open+4)& (0+255),b
  3972   00E140  0101               	movlb	1	; () banked
  3973   00E142  5105               	movf	(f_open@sc+1)& (0+255),w,b
  3974   00E144  0100               	movlb	0	; () banked
  3975   00E146  21EB               	addwfc	(??_f_open+1)& (0+255),w,b
  3976   00E148  6FEF               	movwf	(??_f_open+5)& (0+255),b
  3977   00E14A  0101               	movlb	1	; () banked
  3978   00E14C  5106               	movf	(f_open@sc+2)& (0+255),w,b
  3979   00E14E  0100               	movlb	0	; () banked
  3980   00E150  21EC               	addwfc	(??_f_open+2)& (0+255),w,b
  3981   00E152  6FF0               	movwf	(??_f_open+6)& (0+255),b
  3982   00E154  0101               	movlb	1	; () banked
  3983   00E156  5107               	movf	(f_open@sc+3)& (0+255),w,b
  3984   00E158  0100               	movlb	0	; () banked
  3985   00E15A  21ED               	addwfc	(??_f_open+3)& (0+255),w,b
  3986   00E15C  6FF1               	movwf	(??_f_open+7)& (0+255),b
  3987   00E15E  EE20 F018          	lfsr	2,24
  3988   00E162  51E5               	movf	f_open@fp& (0+255),w,b
  3989   00E164  26D9               	addwf	fsr2l,f,c
  3990   00E166  51E6               	movf	(f_open@fp+1)& (0+255),w,b
  3991   00E168  22DA               	addwfc	fsr2h,f,c
  3992   00E16A  C0EE  FFDE         	movff	??_f_open+4,postinc2
  3993   00E16E  C0EF  FFDE         	movff	??_f_open+5,postinc2
  3994   00E172  C0F0  FFDE         	movff	??_f_open+6,postinc2
  3995   00E176  C0F1  FFDE         	movff	??_f_open+7,postinc2
  3996   00E17A                     
  3997                           ; BSR set to: 0
  3998                           ;mcc_generated_files/fatfs/ff.c: 3687:       if (disk_read(fs->pdrv, fp->buf, fp->sect, 
      +                          1) != RES_OK) res = FR_DISK_ERR;
  3999   00E17A  0E22               	movlw	34
  4000   00E17C  25E5               	addwf	f_open@fp& (0+255),w,b
  4001   00E17E  6E4A               	movwf	disk_read@buff^0,c
  4002   00E180  0E00               	movlw	0
  4003   00E182  21E6               	addwfc	(f_open@fp+1)& (0+255),w,b
  4004   00E184  6E4B               	movwf	(disk_read@buff+1)^0,c
  4005   00E186  EE20 F018          	lfsr	2,24
  4006   00E18A  51E5               	movf	f_open@fp& (0+255),w,b
  4007   00E18C  26D9               	addwf	fsr2l,f,c
  4008   00E18E  51E6               	movf	(f_open@fp+1)& (0+255),w,b
  4009   00E190  22DA               	addwfc	fsr2h,f,c
  4010   00E192  CFDE F04C          	movff	postinc2,disk_read@sector
  4011   00E196  CFDE F04D          	movff	postinc2,disk_read@sector+1
  4012   00E19A  CFDE F04E          	movff	postinc2,disk_read@sector+2
  4013   00E19E  CFDE F04F          	movff	postinc2,disk_read@sector+3
  4014   00E1A2  0E00               	movlw	0
  4015   00E1A4  6E51               	movwf	(disk_read@count+1)^0,c
  4016   00E1A6  0E01               	movlw	1
  4017   00E1A8  6E50               	movwf	disk_read@count^0,c
  4018   00E1AA  0101               	movlb	1	; () banked
  4019   00E1AC  EE20 F001          	lfsr	2,1
  4020   00E1B0  5118               	movf	f_open@fs& (0+255),w,b
  4021   00E1B2  26D9               	addwf	fsr2l,f,c
  4022   00E1B4  5119               	movf	(f_open@fs+1)& (0+255),w,b
  4023   00E1B6  22DA               	addwfc	fsr2h,f,c
  4024   00E1B8  50DF               	movf	indf2,w,c
  4025   00E1BA  ECF2  F047         	call	_disk_read
  4026   00E1BE  0900               	iorlw	0
  4027   00E1C0  B4D8               	btfsc	status,2,c
  4028   00E1C2  EFE5  F070         	goto	u11121
  4029   00E1C6  EFE7  F070         	goto	u11120
  4030   00E1CA                     u11121:
  4031   00E1CA  EFEC  F070         	goto	l1010
  4032   00E1CE                     u11120:
  4033   00E1CE  0E01               	movlw	1
  4034   00E1D0  0101               	movlb	1	; () banked
  4035   00E1D2  6F1A               	movwf	f_open@res& (0+255),b
  4036   00E1D4  EFEC  F070         	goto	l989
  4037   00E1D8                     l1010:
  4038   00E1D8                     l989:
  4039                           
  4040                           ;mcc_generated_files/fatfs/ff.c: 3698:  if (res != FR_OK) fp->obj.fs = 0;
  4041   00E1D8  0101               	movlb	1	; () banked
  4042   00E1DA  511A               	movf	f_open@res& (0+255),w,b
  4043   00E1DC  B4D8               	btfsc	status,2,c
  4044   00E1DE  EFF3  F070         	goto	u11131
  4045   00E1E2  EFF5  F070         	goto	u11130
  4046   00E1E6                     u11131:
  4047   00E1E6  EFFD  F070         	goto	l8147
  4048   00E1EA                     u11130:
  4049   00E1EA                     
  4050                           ; BSR set to: 1
  4051   00E1EA  C0E5  FFD9         	movff	f_open@fp,fsr2l
  4052   00E1EE  C0E6  FFDA         	movff	f_open@fp+1,fsr2h
  4053   00E1F2  0E00               	movlw	0
  4054   00E1F4  6EDE               	movwf	postinc2,c
  4055   00E1F6  0E00               	movlw	0
  4056   00E1F8  6EDD               	movwf	postdec2,c
  4057   00E1FA                     l8147:
  4058                           
  4059                           ; BSR set to: 1
  4060                           ;mcc_generated_files/fatfs/ff.c: 3700:  return res;
  4061   00E1FA  511A               	movf	f_open@res& (0+255),w,b
  4062   00E1FC                     l984:
  4063   00E1FC  0012               	return		;funcret
  4064   00E1FE                     __end_of_f_open:
  4065                           	callstack 0
  4066                           
  4067 ;; *************** function _remove_chain *****************
  4068 ;; Defined at:
  4069 ;;		line 1408 in file "mcc_generated_files/fatfs/ff.c"
  4070 ;; Parameters:    Size  Location     Type
  4071 ;;  obj             2   56[BANK0 ] PTR struct .
  4072 ;;		 -> f_mkdir@dj(40), f_unlink@dj(40), f_open@dj(40), 
  4073 ;;  clst            4   58[BANK0 ] unsigned long 
  4074 ;;  pclst           4   62[BANK0 ] unsigned long 
  4075 ;; Auto vars:     Size  Location     Type
  4076 ;;  nxt             4   74[BANK0 ] unsigned long 
  4077 ;;  fs              2   79[BANK0 ] PTR struct .
  4078 ;;		 -> drive(563), NULL(0), FatFs(563), 
  4079 ;;  res             1   78[BANK0 ] enum E68
  4080 ;; Return value:  Size  Location     Type
  4081 ;;                  1    wreg      enum E68
  4082 ;; Registers used:
  4083 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  4084 ;; Tracked objects:
  4085 ;;		On entry : 0/0
  4086 ;;		On exit  : 0/0
  4087 ;;		Unchanged: 0/0
  4088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4089 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4090 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4091 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4092 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4093 ;;Total ram usage:       25 bytes
  4094 ;; Hardware stack levels used: 1
  4095 ;; Hardware stack levels required when called: 8
  4096 ;; This function calls:
  4097 ;;		_get_fat
  4098 ;;		_put_fat
  4099 ;; This function is called by:
  4100 ;;		_f_open
  4101 ;;		_f_truncate
  4102 ;;		_f_unlink
  4103 ;;		_f_mkdir
  4104 ;; This function uses a non-reentrant model
  4105 ;;
  4106                           
  4107                           	psect	text3
  4108   00A8A2                     __ptext3:
  4109                           	callstack 0
  4110   00A8A2                     _remove_chain:
  4111                           	callstack 21
  4112   00A8A2                     
  4113                           ;mcc_generated_files/fatfs/ff.c: 1415:  DWORD nxt;;mcc_generated_files/fatfs/ff.c: 1416:
      +                            FATFS *fs = obj->fs;
  4114   00A8A2  C098  FFD9         	movff	remove_chain@obj,fsr2l
  4115   00A8A6  C099  FFDA         	movff	remove_chain@obj+1,fsr2h
  4116   00A8AA  CFDE F0AF          	movff	postinc2,remove_chain@fs
  4117   00A8AE  CFDD F0B0          	movff	postdec2,remove_chain@fs+1
  4118   00A8B2                     
  4119                           ;mcc_generated_files/fatfs/ff.c: 1424:  if (clst < 2 || clst >= fs->n_fatent) return FR_
      +                          INT_ERR;
  4120   00A8B2  0100               	movlb	0	; () banked
  4121   00A8B4  519D               	movf	(remove_chain@clst+3)& (0+255),w,b
  4122   00A8B6  119C               	iorwf	(remove_chain@clst+2)& (0+255),w,b
  4123   00A8B8  119B               	iorwf	(remove_chain@clst+1)& (0+255),w,b
  4124   00A8BA  E109               	bnz	u9990
  4125   00A8BC  0E02               	movlw	2
  4126   00A8BE  5D9A               	subwf	remove_chain@clst& (0+255),w,b
  4127   00A8C0  A0D8               	btfss	status,0,c
  4128   00A8C2  EF65  F054         	goto	u9991
  4129   00A8C6  EF67  F054         	goto	u9990
  4130   00A8CA                     u9991:
  4131   00A8CA  EF7C  F054         	goto	l7505
  4132   00A8CE                     u9990:
  4133   00A8CE                     
  4134                           ; BSR set to: 0
  4135   00A8CE  EE20 F017          	lfsr	2,23
  4136   00A8D2  51AF               	movf	remove_chain@fs& (0+255),w,b
  4137   00A8D4  26D9               	addwf	fsr2l,f,c
  4138   00A8D6  51B0               	movf	(remove_chain@fs+1)& (0+255),w,b
  4139   00A8D8  22DA               	addwfc	fsr2h,f,c
  4140   00A8DA  50DE               	movf	postinc2,w,c
  4141   00A8DC  5D9A               	subwf	remove_chain@clst& (0+255),w,b
  4142   00A8DE  50DE               	movf	postinc2,w,c
  4143   00A8E0  599B               	subwfb	(remove_chain@clst+1)& (0+255),w,b
  4144   00A8E2  50DE               	movf	postinc2,w,c
  4145   00A8E4  599C               	subwfb	(remove_chain@clst+2)& (0+255),w,b
  4146   00A8E6  50DE               	movf	postinc2,w,c
  4147   00A8E8  599D               	subwfb	(remove_chain@clst+3)& (0+255),w,b
  4148   00A8EA  A0D8               	btfss	status,0,c
  4149   00A8EC  EF7A  F054         	goto	u10001
  4150   00A8F0  EF7C  F054         	goto	u10000
  4151   00A8F4                     u10001:
  4152   00A8F4  EF7F  F054         	goto	l7509
  4153   00A8F8                     u10000:
  4154   00A8F8                     l7505:
  4155                           
  4156                           ; BSR set to: 0
  4157   00A8F8  0E02               	movlw	2
  4158   00A8FA  EF69  F055         	goto	l645
  4159   00A8FE                     l7509:
  4160                           
  4161                           ; BSR set to: 0
  4162                           ;mcc_generated_files/fatfs/ff.c: 1427:  if (pclst != 0 && (!0 || fs->fs_type != 4 || obj
      +                          ->stat != 2)) {
  4163   00A8FE  519E               	movf	remove_chain@pclst& (0+255),w,b
  4164   00A900  119F               	iorwf	(remove_chain@pclst+1)& (0+255),w,b
  4165   00A902  11A0               	iorwf	(remove_chain@pclst+2)& (0+255),w,b
  4166   00A904  11A1               	iorwf	(remove_chain@pclst+3)& (0+255),w,b
  4167   00A906  B4D8               	btfsc	status,2,c
  4168   00A908  EF88  F054         	goto	u10011
  4169   00A90C  EF8A  F054         	goto	u10010
  4170   00A910                     u10011:
  4171   00A910  EFAD  F054         	goto	l7525
  4172   00A914                     u10010:
  4173   00A914                     
  4174                           ; BSR set to: 0
  4175                           ;mcc_generated_files/fatfs/ff.c: 1428:   res = put_fat(fs, pclst, 0xFFFFFFFF);
  4176   00A914  C0AF  F077         	movff	remove_chain@fs,put_fat@fs
  4177   00A918  C0B0  F078         	movff	remove_chain@fs+1,put_fat@fs+1
  4178   00A91C  C09E  F079         	movff	remove_chain@pclst,put_fat@clst
  4179   00A920  C09F  F07A         	movff	remove_chain@pclst+1,put_fat@clst+1
  4180   00A924  C0A0  F07B         	movff	remove_chain@pclst+2,put_fat@clst+2
  4181   00A928  C0A1  F07C         	movff	remove_chain@pclst+3,put_fat@clst+3
  4182   00A92C  0EFF               	movlw	255
  4183   00A92E  6F7D               	movwf	put_fat@val& (0+255),b
  4184   00A930  0EFF               	movlw	255
  4185   00A932  6F7E               	movwf	(put_fat@val+1)& (0+255),b
  4186   00A934  0EFF               	movlw	255
  4187   00A936  6F7F               	movwf	(put_fat@val+2)& (0+255),b
  4188   00A938  0EFF               	movlw	255
  4189   00A93A  6F80               	movwf	(put_fat@val+3)& (0+255),b
  4190   00A93C  EC6F  F064         	call	_put_fat	;wreg free
  4191   00A940  0100               	movlb	0	; () banked
  4192   00A942  6FAE               	movwf	remove_chain@res& (0+255),b
  4193   00A944                     
  4194                           ; BSR set to: 0
  4195                           ;mcc_generated_files/fatfs/ff.c: 1429:   if (res != FR_OK) return res;
  4196   00A944  51AE               	movf	remove_chain@res& (0+255),w,b
  4197   00A946  B4D8               	btfsc	status,2,c
  4198   00A948  EFA8  F054         	goto	u10021
  4199   00A94C  EFAA  F054         	goto	u10020
  4200   00A950                     u10021:
  4201   00A950  EFAD  F054         	goto	l7525
  4202   00A954                     u10020:
  4203   00A954                     l7521:
  4204                           
  4205                           ; BSR set to: 0
  4206   00A954  51AE               	movf	remove_chain@res& (0+255),w,b
  4207   00A956  EF69  F055         	goto	l645
  4208   00A95A                     l7525:
  4209                           
  4210                           ; BSR set to: 0
  4211                           ;mcc_generated_files/fatfs/ff.c: 1434:   nxt = get_fat(obj, clst);
  4212   00A95A  C098  F077         	movff	remove_chain@obj,get_fat@obj
  4213   00A95E  C099  F078         	movff	remove_chain@obj+1,get_fat@obj+1
  4214   00A962  C09A  F079         	movff	remove_chain@clst,get_fat@clst
  4215   00A966  C09B  F07A         	movff	remove_chain@clst+1,get_fat@clst+1
  4216   00A96A  C09C  F07B         	movff	remove_chain@clst+2,get_fat@clst+2
  4217   00A96E  C09D  F07C         	movff	remove_chain@clst+3,get_fat@clst+3
  4218   00A972  ECB7  F059         	call	_get_fat	;wreg free
  4219   00A976  C077  F0AA         	movff	?_get_fat,remove_chain@nxt
  4220   00A97A  C078  F0AB         	movff	?_get_fat+1,remove_chain@nxt+1
  4221   00A97E  C079  F0AC         	movff	?_get_fat+2,remove_chain@nxt+2
  4222   00A982  C07A  F0AD         	movff	?_get_fat+3,remove_chain@nxt+3
  4223   00A986                     
  4224                           ;mcc_generated_files/fatfs/ff.c: 1435:   if (nxt == 0) break;
  4225   00A986  0100               	movlb	0	; () banked
  4226   00A988  51AA               	movf	remove_chain@nxt& (0+255),w,b
  4227   00A98A  11AB               	iorwf	(remove_chain@nxt+1)& (0+255),w,b
  4228   00A98C  11AC               	iorwf	(remove_chain@nxt+2)& (0+255),w,b
  4229   00A98E  11AD               	iorwf	(remove_chain@nxt+3)& (0+255),w,b
  4230   00A990  A4D8               	btfss	status,2,c
  4231   00A992  EFCD  F054         	goto	u10031
  4232   00A996  EFCF  F054         	goto	u10030
  4233   00A99A                     u10031:
  4234   00A99A  EFD1  F054         	goto	l7531
  4235   00A99E                     u10030:
  4236   00A99E  EF68  F055         	goto	l7559
  4237   00A9A2                     l7531:
  4238                           
  4239                           ; BSR set to: 0
  4240                           ;mcc_generated_files/fatfs/ff.c: 1436:   if (nxt == 1) return FR_INT_ERR;
  4241   00A9A2  05AA               	decf	remove_chain@nxt& (0+255),w,b
  4242   00A9A4  11AB               	iorwf	(remove_chain@nxt+1)& (0+255),w,b
  4243   00A9A6  11AC               	iorwf	(remove_chain@nxt+2)& (0+255),w,b
  4244   00A9A8  11AD               	iorwf	(remove_chain@nxt+3)& (0+255),w,b
  4245   00A9AA  A4D8               	btfss	status,2,c
  4246   00A9AC  EFDA  F054         	goto	u10041
  4247   00A9B0  EFDC  F054         	goto	u10040
  4248   00A9B4                     u10041:
  4249   00A9B4  EFDE  F054         	goto	l7537
  4250   00A9B8                     u10040:
  4251   00A9B8  EF7C  F054         	goto	l7505
  4252   00A9BC                     l7537:
  4253                           
  4254                           ; BSR set to: 0
  4255                           ;mcc_generated_files/fatfs/ff.c: 1437:   if (nxt == 0xFFFFFFFF) return FR_DISK_ERR;
  4256   00A9BC  29AA               	incf	remove_chain@nxt& (0+255),w,b
  4257   00A9BE  E10A               	bnz	u10051
  4258   00A9C0  29AB               	incf	(remove_chain@nxt+1)& (0+255),w,b
  4259   00A9C2  E108               	bnz	u10051
  4260   00A9C4  29AC               	incf	(remove_chain@nxt+2)& (0+255),w,b
  4261   00A9C6  E106               	bnz	u10051
  4262   00A9C8  29AD               	incf	(remove_chain@nxt+3)& (0+255),w,b
  4263   00A9CA  A4D8               	btfss	status,2,c
  4264   00A9CC  EFEA  F054         	goto	u10051
  4265   00A9D0  EFEC  F054         	goto	u10050
  4266   00A9D4                     u10051:
  4267   00A9D4  EFEF  F054         	goto	l7545
  4268   00A9D8                     u10050:
  4269   00A9D8                     
  4270                           ; BSR set to: 0
  4271   00A9D8  0E01               	movlw	1
  4272   00A9DA  EF69  F055         	goto	l645
  4273   00A9DE                     l7545:
  4274                           
  4275                           ; BSR set to: 0
  4276                           ;mcc_generated_files/fatfs/ff.c: 1439:    res = put_fat(fs, clst, 0);
  4277   00A9DE  C0AF  F077         	movff	remove_chain@fs,put_fat@fs
  4278   00A9E2  C0B0  F078         	movff	remove_chain@fs+1,put_fat@fs+1
  4279   00A9E6  C09A  F079         	movff	remove_chain@clst,put_fat@clst
  4280   00A9EA  C09B  F07A         	movff	remove_chain@clst+1,put_fat@clst+1
  4281   00A9EE  C09C  F07B         	movff	remove_chain@clst+2,put_fat@clst+2
  4282   00A9F2  C09D  F07C         	movff	remove_chain@clst+3,put_fat@clst+3
  4283   00A9F6  0E00               	movlw	0
  4284   00A9F8  6F7D               	movwf	put_fat@val& (0+255),b
  4285   00A9FA  0E00               	movlw	0
  4286   00A9FC  6F7E               	movwf	(put_fat@val+1)& (0+255),b
  4287   00A9FE  0E00               	movlw	0
  4288   00AA00  6F7F               	movwf	(put_fat@val+2)& (0+255),b
  4289   00AA02  0E00               	movlw	0
  4290   00AA04  6F80               	movwf	(put_fat@val+3)& (0+255),b
  4291   00AA06  EC6F  F064         	call	_put_fat	;wreg free
  4292   00AA0A  0100               	movlb	0	; () banked
  4293   00AA0C  6FAE               	movwf	remove_chain@res& (0+255),b
  4294   00AA0E                     
  4295                           ; BSR set to: 0
  4296                           ;mcc_generated_files/fatfs/ff.c: 1440:    if (res != FR_OK) return res;
  4297   00AA0E  51AE               	movf	remove_chain@res& (0+255),w,b
  4298   00AA10  B4D8               	btfsc	status,2,c
  4299   00AA12  EF0D  F055         	goto	u10061
  4300   00AA16  EF0F  F055         	goto	u10060
  4301   00AA1A                     u10061:
  4302   00AA1A  EF11  F055         	goto	l7553
  4303   00AA1E                     u10060:
  4304   00AA1E  EFAA  F054         	goto	l7521
  4305   00AA22                     l7553:
  4306                           
  4307                           ; BSR set to: 0
  4308                           ;mcc_generated_files/fatfs/ff.c: 1442:   if (fs->free_clst < fs->n_fatent - 2) {
  4309   00AA22  EE20 F017          	lfsr	2,23
  4310   00AA26  51AF               	movf	remove_chain@fs& (0+255),w,b
  4311   00AA28  26D9               	addwf	fsr2l,f,c
  4312   00AA2A  51B0               	movf	(remove_chain@fs+1)& (0+255),w,b
  4313   00AA2C  22DA               	addwfc	fsr2h,f,c
  4314   00AA2E  0EFE               	movlw	254
  4315   00AA30  24DE               	addwf	postinc2,w,c
  4316   00AA32  6FA2               	movwf	??_remove_chain& (0+255),b
  4317   00AA34  0EFF               	movlw	255
  4318   00AA36  20DE               	addwfc	postinc2,w,c
  4319   00AA38  6FA3               	movwf	(??_remove_chain+1)& (0+255),b
  4320   00AA3A  0EFF               	movlw	255
  4321   00AA3C  20DE               	addwfc	postinc2,w,c
  4322   00AA3E  6FA4               	movwf	(??_remove_chain+2)& (0+255),b
  4323   00AA40  0EFF               	movlw	255
  4324   00AA42  20DE               	addwfc	postinc2,w,c
  4325   00AA44  6FA5               	movwf	(??_remove_chain+3)& (0+255),b
  4326   00AA46  EE20 F00F          	lfsr	2,15
  4327   00AA4A  51AF               	movf	remove_chain@fs& (0+255),w,b
  4328   00AA4C  26D9               	addwf	fsr2l,f,c
  4329   00AA4E  51B0               	movf	(remove_chain@fs+1)& (0+255),w,b
  4330   00AA50  22DA               	addwfc	fsr2h,f,c
  4331   00AA52  51A2               	movf	??_remove_chain& (0+255),w,b
  4332   00AA54  5CDE               	subwf	postinc2,w,c
  4333   00AA56  51A3               	movf	(??_remove_chain+1)& (0+255),w,b
  4334   00AA58  58DE               	subwfb	postinc2,w,c
  4335   00AA5A  51A4               	movf	(??_remove_chain+2)& (0+255),w,b
  4336   00AA5C  58DE               	subwfb	postinc2,w,c
  4337   00AA5E  51A5               	movf	(??_remove_chain+3)& (0+255),w,b
  4338   00AA60  58DE               	subwfb	postinc2,w,c
  4339   00AA62  B0D8               	btfsc	status,0,c
  4340   00AA64  EF36  F055         	goto	u10071
  4341   00AA68  EF38  F055         	goto	u10070
  4342   00AA6C                     u10071:
  4343   00AA6C  EF4B  F055         	goto	l7557
  4344   00AA70                     u10070:
  4345   00AA70                     
  4346                           ; BSR set to: 0
  4347                           ;mcc_generated_files/fatfs/ff.c: 1443:    fs->free_clst++;
  4348   00AA70  EE20 F00F          	lfsr	2,15
  4349   00AA74  51AF               	movf	remove_chain@fs& (0+255),w,b
  4350   00AA76  26D9               	addwf	fsr2l,f,c
  4351   00AA78  51B0               	movf	(remove_chain@fs+1)& (0+255),w,b
  4352   00AA7A  22DA               	addwfc	fsr2h,f,c
  4353   00AA7C  2ADE               	incf	postinc2,f,c
  4354   00AA7E  0E00               	movlw	0
  4355   00AA80  22DE               	addwfc	postinc2,f,c
  4356   00AA82  22DE               	addwfc	postinc2,f,c
  4357   00AA84  22DE               	addwfc	postinc2,f,c
  4358                           
  4359                           ;mcc_generated_files/fatfs/ff.c: 1444:    fs->fsi_flag |= 1;
  4360   00AA86  EE20 F004          	lfsr	2,4
  4361   00AA8A  51AF               	movf	remove_chain@fs& (0+255),w,b
  4362   00AA8C  26D9               	addwf	fsr2l,f,c
  4363   00AA8E  51B0               	movf	(remove_chain@fs+1)& (0+255),w,b
  4364   00AA90  22DA               	addwfc	fsr2h,f,c
  4365   00AA92  0E00               	movlw	0
  4366   00AA94  80DB               	bsf	plusw2,0,c
  4367   00AA96                     l7557:
  4368                           
  4369                           ; BSR set to: 0
  4370                           ;mcc_generated_files/fatfs/ff.c: 1464:   clst = nxt;
  4371   00AA96  C0AA  F09A         	movff	remove_chain@nxt,remove_chain@clst
  4372   00AA9A  C0AB  F09B         	movff	remove_chain@nxt+1,remove_chain@clst+1
  4373   00AA9E  C0AC  F09C         	movff	remove_chain@nxt+2,remove_chain@clst+2
  4374   00AAA2  C0AD  F09D         	movff	remove_chain@nxt+3,remove_chain@clst+3
  4375                           
  4376                           ;mcc_generated_files/fatfs/ff.c: 1465:  } while (clst < fs->n_fatent);
  4377   00AAA6  EE20 F017          	lfsr	2,23
  4378   00AAAA  51AF               	movf	remove_chain@fs& (0+255),w,b
  4379   00AAAC  26D9               	addwf	fsr2l,f,c
  4380   00AAAE  51B0               	movf	(remove_chain@fs+1)& (0+255),w,b
  4381   00AAB0  22DA               	addwfc	fsr2h,f,c
  4382   00AAB2  50DE               	movf	postinc2,w,c
  4383   00AAB4  5D9A               	subwf	remove_chain@clst& (0+255),w,b
  4384   00AAB6  50DE               	movf	postinc2,w,c
  4385   00AAB8  599B               	subwfb	(remove_chain@clst+1)& (0+255),w,b
  4386   00AABA  50DE               	movf	postinc2,w,c
  4387   00AABC  599C               	subwfb	(remove_chain@clst+2)& (0+255),w,b
  4388   00AABE  50DE               	movf	postinc2,w,c
  4389   00AAC0  599D               	subwfb	(remove_chain@clst+3)& (0+255),w,b
  4390   00AAC2  A0D8               	btfss	status,0,c
  4391   00AAC4  EF66  F055         	goto	u10081
  4392   00AAC8  EF68  F055         	goto	u10080
  4393   00AACC                     u10081:
  4394   00AACC  EFAD  F054         	goto	l7525
  4395   00AAD0                     u10080:
  4396   00AAD0                     l7559:
  4397                           
  4398                           ; BSR set to: 0
  4399                           ;mcc_generated_files/fatfs/ff.c: 1493:  return FR_OK;
  4400   00AAD0  0E00               	movlw	0
  4401   00AAD2                     l645:
  4402                           
  4403                           ; BSR set to: 0
  4404   00AAD2  0012               	return		;funcret
  4405   00AAD4                     __end_of_remove_chain:
  4406                           	callstack 0
  4407                           
  4408 ;; *************** function _follow_path *****************
  4409 ;; Defined at:
  4410 ;;		line 3015 in file "mcc_generated_files/fatfs/ff.c"
  4411 ;; Parameters:    Size  Location     Type
  4412 ;;  dp              2  119[BANK0 ] PTR struct .
  4413 ;;		 -> f_rename@djn(40), f_rename@djo(40), f_mkdir@dj(40), f_unlink@dj(40), 
  4414 ;;		 -> f_stat@dj(40), f_chdir@dj(40), f_open@dj(40), 
  4415 ;;  path            2  121[BANK0 ] PTR const unsigned char 
  4416 ;;		 -> STR_6(3), STR_5(10), STR_4(3), STR_2(10), 
  4417 ;;		 -> STR_1(1), 
  4418 ;; Auto vars:     Size  Location     Type
  4419 ;;  fs              2  129[BANK0 ] PTR struct .
  4420 ;;		 -> drive(563), NULL(0), FatFs(563), 
  4421 ;;  res             1  132[BANK0 ] enum E68
  4422 ;;  ns              1  131[BANK0 ] unsigned char 
  4423 ;; Return value:  Size  Location     Type
  4424 ;;                  1    wreg      enum E68
  4425 ;; Registers used:
  4426 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  4427 ;; Tracked objects:
  4428 ;;		On entry : 0/0
  4429 ;;		On exit  : 0/0
  4430 ;;		Unchanged: 0/0
  4431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4432 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4433 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4434 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4435 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4436 ;;Total ram usage:       14 bytes
  4437 ;; Hardware stack levels used: 1
  4438 ;; Hardware stack levels required when called: 11
  4439 ;; This function calls:
  4440 ;;		_create_name
  4441 ;;		_dir_find
  4442 ;;		_dir_sdi
  4443 ;;		_ld_clust
  4444 ;; This function is called by:
  4445 ;;		_f_open
  4446 ;;		_f_chdir
  4447 ;;		_f_opendir
  4448 ;;		_f_stat
  4449 ;;		_f_unlink
  4450 ;;		_f_mkdir
  4451 ;;		_f_rename
  4452 ;; This function uses a non-reentrant model
  4453 ;;
  4454                           
  4455                           	psect	text4
  4456   00AAD4                     __ptext4:
  4457                           	callstack 0
  4458   00AAD4                     _follow_path:
  4459                           	callstack 18
  4460   00AAD4                     
  4461                           ;mcc_generated_files/fatfs/ff.c: 3016:  FFDIR* dp,;mcc_generated_files/fatfs/ff.c: 3017:
      +                            const TCHAR* path;mcc_generated_files/fatfs/ff.c: 3019: {;mcc_generated_files/fatfs/ff
      +                          .c: 3020:  FRESULT res;;mcc_generated_files/fatfs/ff.c: 3021:  BYTE ns;;mcc_generated_fi
      +                          les/fatfs/ff.c: 3022:  FATFS *fs = dp->obj.fs;
  4462   00AAD4  C0D7  FFD9         	movff	follow_path@dp,fsr2l
  4463   00AAD8  C0D8  FFDA         	movff	follow_path@dp+1,fsr2h
  4464   00AADC  CFDE F0E1          	movff	postinc2,follow_path@fs
  4465   00AAE0  CFDD F0E2          	movff	postdec2,follow_path@fs+1
  4466   00AAE4                     
  4467                           ;mcc_generated_files/fatfs/ff.c: 3026:  if (*path != '/' && *path != '\\') {
  4468   00AAE4  C0D9  FFF6         	movff	follow_path@path,tblptrl
  4469   00AAE8  C0DA  FFF7         	movff	follow_path@path+1,tblptrh
  4470   00AAEC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4471   00AAEC  6AF8               	clrf	tblptru,c
  4472   00AAEE                     	endif
  4473   00AAEE                     	if	0	;tblptru may be non-zero
  4474   00AAEE                     	endif
  4475   00AAEE  0008               	tblrd		*
  4476   00AAF0  50F5               	movf	tablat,w,c
  4477   00AAF2  0A2F               	xorlw	47
  4478   00AAF4  B4D8               	btfsc	status,2,c
  4479   00AAF6  EF7F  F055         	goto	u10111
  4480   00AAFA  EF81  F055         	goto	u10110
  4481   00AAFE                     u10111:
  4482   00AAFE  EFAA  F055         	goto	l7593
  4483   00AB02                     u10110:
  4484   00AB02  C0D9  FFF6         	movff	follow_path@path,tblptrl
  4485   00AB06  C0DA  FFF7         	movff	follow_path@path+1,tblptrh
  4486   00AB0A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4487   00AB0A  6AF8               	clrf	tblptru,c
  4488   00AB0C                     	endif
  4489   00AB0C                     	if	0	;tblptru may be non-zero
  4490   00AB0C                     	endif
  4491   00AB0C  0008               	tblrd		*
  4492   00AB0E  50F5               	movf	tablat,w,c
  4493   00AB10  0A5C               	xorlw	92
  4494   00AB12  B4D8               	btfsc	status,2,c
  4495   00AB14  EF8E  F055         	goto	u10121
  4496   00AB18  EF90  F055         	goto	u10120
  4497   00AB1C                     u10121:
  4498   00AB1C  EFAA  F055         	goto	l7593
  4499   00AB20                     u10120:
  4500   00AB20                     
  4501                           ;mcc_generated_files/fatfs/ff.c: 3027:   dp->obj.sclust = fs->cdir;
  4502   00AB20  0100               	movlb	0	; () banked
  4503   00AB22  EE20 F013          	lfsr	2,19
  4504   00AB26  51E1               	movf	follow_path@fs& (0+255),w,b
  4505   00AB28  26D9               	addwf	fsr2l,f,c
  4506   00AB2A  51E2               	movf	(follow_path@fs+1)& (0+255),w,b
  4507   00AB2C  22DA               	addwfc	fsr2h,f,c
  4508   00AB2E  EE10 F006          	lfsr	1,6
  4509   00AB32  51D7               	movf	follow_path@dp& (0+255),w,b
  4510   00AB34  26E1               	addwf	fsr1l,f,c
  4511   00AB36  51D8               	movf	(follow_path@dp+1)& (0+255),w,b
  4512   00AB38  22E2               	addwfc	fsr1h,f,c
  4513   00AB3A  CFDE FFE6          	movff	postinc2,postinc1
  4514   00AB3E  CFDE FFE6          	movff	postinc2,postinc1
  4515   00AB42  CFDE FFE6          	movff	postinc2,postinc1
  4516   00AB46  CFDE FFE6          	movff	postinc2,postinc1
  4517                           
  4518                           ;mcc_generated_files/fatfs/ff.c: 3028:  } else
  4519   00AB4A  EFD3  F055         	goto	l7599
  4520   00AB4E                     l7591:
  4521   00AB4E  0100               	movlb	0	; () banked
  4522   00AB50  4BD9               	infsnz	follow_path@path& (0+255),f,b
  4523   00AB52  2BDA               	incf	(follow_path@path+1)& (0+255),f,b
  4524   00AB54                     l7593:
  4525   00AB54  C0D9  FFF6         	movff	follow_path@path,tblptrl
  4526   00AB58  C0DA  FFF7         	movff	follow_path@path+1,tblptrh
  4527   00AB5C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4528   00AB5C  6AF8               	clrf	tblptru,c
  4529   00AB5E                     	endif
  4530   00AB5E                     	if	0	;tblptru may be non-zero
  4531   00AB5E                     	endif
  4532   00AB5E  0008               	tblrd		*
  4533   00AB60  50F5               	movf	tablat,w,c
  4534   00AB62  0A2F               	xorlw	47
  4535   00AB64  B4D8               	btfsc	status,2,c
  4536   00AB66  EFB7  F055         	goto	u10131
  4537   00AB6A  EFB9  F055         	goto	u10130
  4538   00AB6E                     u10131:
  4539   00AB6E  EFA7  F055         	goto	l7591
  4540   00AB72                     u10130:
  4541   00AB72  C0D9  FFF6         	movff	follow_path@path,tblptrl
  4542   00AB76  C0DA  FFF7         	movff	follow_path@path+1,tblptrh
  4543   00AB7A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4544   00AB7A  6AF8               	clrf	tblptru,c
  4545   00AB7C                     	endif
  4546   00AB7C                     	if	0	;tblptru may be non-zero
  4547   00AB7C                     	endif
  4548   00AB7C  0008               	tblrd		*
  4549   00AB7E  50F5               	movf	tablat,w,c
  4550   00AB80  0A5C               	xorlw	92
  4551   00AB82  B4D8               	btfsc	status,2,c
  4552   00AB84  EFC6  F055         	goto	u10141
  4553   00AB88  EFC8  F055         	goto	u10140
  4554   00AB8C                     u10141:
  4555   00AB8C  EFA7  F055         	goto	l7591
  4556   00AB90                     u10140:
  4557   00AB90                     
  4558                           ;mcc_generated_files/fatfs/ff.c: 3032:   dp->obj.sclust = 0;
  4559   00AB90  0100               	movlb	0	; () banked
  4560   00AB92  EE20 F006          	lfsr	2,6
  4561   00AB96  51D7               	movf	follow_path@dp& (0+255),w,b
  4562   00AB98  26D9               	addwf	fsr2l,f,c
  4563   00AB9A  51D8               	movf	(follow_path@dp+1)& (0+255),w,b
  4564   00AB9C  22DA               	addwfc	fsr2h,f,c
  4565   00AB9E  6ADE               	clrf	postinc2,c
  4566   00ABA0  6ADE               	clrf	postinc2,c
  4567   00ABA2  6ADE               	clrf	postinc2,c
  4568   00ABA4  6ADD               	clrf	postdec2,c
  4569   00ABA6                     l7599:
  4570                           
  4571                           ; BSR set to: 0
  4572                           ;mcc_generated_files/fatfs/ff.c: 3051:  if ((UINT)*path < ' ') {
  4573   00ABA6  C0D9  FFF6         	movff	follow_path@path,tblptrl
  4574   00ABAA  C0DA  FFF7         	movff	follow_path@path+1,tblptrh
  4575   00ABAE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4576   00ABAE  6AF8               	clrf	tblptru,c
  4577   00ABB0                     	endif
  4578   00ABB0                     	if	0	;tblptru may be non-zero
  4579   00ABB0                     	endif
  4580   00ABB0  0E20               	movlw	32
  4581   00ABB2  0008               	tblrd		*
  4582   00ABB4  60F5               	cpfslt	tablat,c
  4583   00ABB6  EFDF  F055         	goto	u10151
  4584   00ABBA  EFE1  F055         	goto	u10150
  4585   00ABBE                     u10151:
  4586   00ABBE  EFFB  F055         	goto	l7605
  4587   00ABC2                     u10150:
  4588   00ABC2                     
  4589                           ; BSR set to: 0
  4590                           ;mcc_generated_files/fatfs/ff.c: 3052:   dp->fn[11] = 0x80;
  4591   00ABC2  EE20 F027          	lfsr	2,39
  4592   00ABC6  51D7               	movf	follow_path@dp& (0+255),w,b
  4593   00ABC8  26D9               	addwf	fsr2l,f,c
  4594   00ABCA  51D8               	movf	(follow_path@dp+1)& (0+255),w,b
  4595   00ABCC  22DA               	addwfc	fsr2h,f,c
  4596   00ABCE  0E80               	movlw	128
  4597   00ABD0  6EDF               	movwf	indf2,c
  4598   00ABD2                     
  4599                           ; BSR set to: 0
  4600                           ;mcc_generated_files/fatfs/ff.c: 3053:   res = dir_sdi(dp, 0);
  4601   00ABD2  C0D7  F091         	movff	follow_path@dp,dir_sdi@dp
  4602   00ABD6  C0D8  F092         	movff	follow_path@dp+1,dir_sdi@dp+1
  4603   00ABDA  0E00               	movlw	0
  4604   00ABDC  6F93               	movwf	dir_sdi@ofs& (0+255),b
  4605   00ABDE  0E00               	movlw	0
  4606   00ABE0  6F94               	movwf	(dir_sdi@ofs+1)& (0+255),b
  4607   00ABE2  0E00               	movlw	0
  4608   00ABE4  6F95               	movwf	(dir_sdi@ofs+2)& (0+255),b
  4609   00ABE6  0E00               	movlw	0
  4610   00ABE8  6F96               	movwf	(dir_sdi@ofs+3)& (0+255),b
  4611   00ABEA  ECF2  F057         	call	_dir_sdi	;wreg free
  4612   00ABEE  0100               	movlb	0	; () banked
  4613   00ABF0  6FE4               	movwf	follow_path@res& (0+255),b
  4614                           
  4615                           ;mcc_generated_files/fatfs/ff.c: 3055:  } else {
  4616   00ABF2  EFA4  F056         	goto	l7639
  4617   00ABF6                     l7605:
  4618                           
  4619                           ; BSR set to: 0
  4620                           ;mcc_generated_files/fatfs/ff.c: 3057:    res = create_name(dp, &path);
  4621   00ABF6  C0D7  F009         	movff	follow_path@dp,create_name@dp
  4622   00ABFA  C0D8  F00A         	movff	follow_path@dp+1,create_name@dp+1
  4623   00ABFE  0ED9               	movlw	low follow_path@path
  4624   00AC00  6E0B               	movwf	create_name@path^0,c
  4625   00AC02  0E00               	movlw	high follow_path@path
  4626   00AC04  6E0C               	movwf	(create_name@path+1)^0,c
  4627   00AC06  ECC2  F05D         	call	_create_name	;wreg free
  4628   00AC0A  0100               	movlb	0	; () banked
  4629   00AC0C  6FE4               	movwf	follow_path@res& (0+255),b
  4630   00AC0E                     
  4631                           ; BSR set to: 0
  4632                           ;mcc_generated_files/fatfs/ff.c: 3058:    if (res != FR_OK) break;
  4633   00AC0E  51E4               	movf	follow_path@res& (0+255),w,b
  4634   00AC10  B4D8               	btfsc	status,2,c
  4635   00AC12  EF0D  F056         	goto	u10161
  4636   00AC16  EF0F  F056         	goto	u10160
  4637   00AC1A                     u10161:
  4638   00AC1A  EF11  F056         	goto	l7611
  4639   00AC1E                     u10160:
  4640   00AC1E  EFA4  F056         	goto	l7639
  4641   00AC22                     l7611:
  4642                           
  4643                           ; BSR set to: 0
  4644                           ;mcc_generated_files/fatfs/ff.c: 3059:    res = dir_find(dp);
  4645   00AC22  C0D7  F0CF         	movff	follow_path@dp,dir_find@dp
  4646   00AC26  C0D8  F0D0         	movff	follow_path@dp+1,dir_find@dp+1
  4647   00AC2A  ECC2  F050         	call	_dir_find	;wreg free
  4648   00AC2E  0100               	movlb	0	; () banked
  4649   00AC30  6FE4               	movwf	follow_path@res& (0+255),b
  4650   00AC32                     
  4651                           ; BSR set to: 0
  4652                           ;mcc_generated_files/fatfs/ff.c: 3060:    ns = dp->fn[11];
  4653   00AC32  EE20 F027          	lfsr	2,39
  4654   00AC36  51D7               	movf	follow_path@dp& (0+255),w,b
  4655   00AC38  26D9               	addwf	fsr2l,f,c
  4656   00AC3A  51D8               	movf	(follow_path@dp+1)& (0+255),w,b
  4657   00AC3C  22DA               	addwfc	fsr2h,f,c
  4658   00AC3E  50DF               	movf	indf2,w,c
  4659   00AC40  6FE3               	movwf	follow_path@ns& (0+255),b
  4660   00AC42                     
  4661                           ; BSR set to: 0
  4662                           ;mcc_generated_files/fatfs/ff.c: 3061:    if (res != FR_OK) {
  4663   00AC42  51E4               	movf	follow_path@res& (0+255),w,b
  4664   00AC44  B4D8               	btfsc	status,2,c
  4665   00AC46  EF27  F056         	goto	u10171
  4666   00AC4A  EF29  F056         	goto	u10170
  4667   00AC4E                     u10171:
  4668   00AC4E  EF59  F056         	goto	l873
  4669   00AC52                     u10170:
  4670   00AC52                     
  4671                           ; BSR set to: 0
  4672                           ;mcc_generated_files/fatfs/ff.c: 3063:      if (1 && (ns & 0x20)) {
  4673   00AC52  0E04               	movlw	4
  4674   00AC54  19E4               	xorwf	follow_path@res& (0+255),w,b
  4675   00AC56  A4D8               	btfss	status,2,c
  4676   00AC58  EF30  F056         	goto	u10181
  4677   00AC5C  EF32  F056         	goto	u10180
  4678   00AC60                     u10181:
  4679   00AC60  EFA4  F056         	goto	l7639
  4680   00AC64                     u10180:
  4681   00AC64                     
  4682                           ; BSR set to: 0
  4683   00AC64  ABE3               	btfss	follow_path@ns& (0+255),5,b
  4684   00AC66  EF37  F056         	goto	u10191
  4685   00AC6A  EF39  F056         	goto	u10190
  4686   00AC6E                     u10191:
  4687   00AC6E  EF4E  F056         	goto	l875
  4688   00AC72                     u10190:
  4689   00AC72                     
  4690                           ; BSR set to: 0
  4691                           ;mcc_generated_files/fatfs/ff.c: 3064:       if (!(ns & 0x04)) continue;
  4692   00AC72  B5E3               	btfsc	follow_path@ns& (0+255),2,b
  4693   00AC74  EF3E  F056         	goto	u10201
  4694   00AC78  EF40  F056         	goto	u10200
  4695   00AC7C                     u10201:
  4696   00AC7C  EF42  F056         	goto	l7625
  4697   00AC80                     u10200:
  4698   00AC80  EFFB  F055         	goto	l7605
  4699   00AC84                     l7625:
  4700                           
  4701                           ; BSR set to: 0
  4702                           ;mcc_generated_files/fatfs/ff.c: 3065:       dp->fn[11] = 0x80;
  4703   00AC84  EE20 F027          	lfsr	2,39
  4704   00AC88  51D7               	movf	follow_path@dp& (0+255),w,b
  4705   00AC8A  26D9               	addwf	fsr2l,f,c
  4706   00AC8C  51D8               	movf	(follow_path@dp+1)& (0+255),w,b
  4707   00AC8E  22DA               	addwfc	fsr2h,f,c
  4708   00AC90  0E80               	movlw	128
  4709   00AC92  6EDF               	movwf	indf2,c
  4710   00AC94                     
  4711                           ; BSR set to: 0
  4712                           ;mcc_generated_files/fatfs/ff.c: 3066:       res = FR_OK;
  4713   00AC94  0E00               	movlw	0
  4714   00AC96  6FE4               	movwf	follow_path@res& (0+255),b
  4715                           
  4716                           ;mcc_generated_files/fatfs/ff.c: 3067:      } else {
  4717   00AC98  EFA4  F056         	goto	l7639
  4718   00AC9C                     l875:
  4719                           
  4720                           ; BSR set to: 0
  4721                           ;mcc_generated_files/fatfs/ff.c: 3068:       if (!(ns & 0x04)) res = FR_NO_PATH;
  4722   00AC9C  B5E3               	btfsc	follow_path@ns& (0+255),2,b
  4723   00AC9E  EF53  F056         	goto	u10211
  4724   00ACA2  EF55  F056         	goto	u10210
  4725   00ACA6                     u10211:
  4726   00ACA6  EFA4  F056         	goto	l7639
  4727   00ACAA                     u10210:
  4728   00ACAA                     l7629:
  4729                           
  4730                           ; BSR set to: 0
  4731   00ACAA  0E05               	movlw	5
  4732   00ACAC  6FE4               	movwf	follow_path@res& (0+255),b
  4733   00ACAE  EFA4  F056         	goto	l7639
  4734   00ACB2                     l873:
  4735                           
  4736                           ; BSR set to: 0
  4737                           ;mcc_generated_files/fatfs/ff.c: 3073:    if (ns & 0x04) break;
  4738   00ACB2  A5E3               	btfss	follow_path@ns& (0+255),2,b
  4739   00ACB4  EF5E  F056         	goto	u10221
  4740   00ACB8  EF60  F056         	goto	u10220
  4741   00ACBC                     u10221:
  4742   00ACBC  EF62  F056         	goto	l7633
  4743   00ACC0                     u10220:
  4744   00ACC0  EFA4  F056         	goto	l7639
  4745   00ACC4                     l7633:
  4746                           
  4747                           ; BSR set to: 0
  4748                           ;mcc_generated_files/fatfs/ff.c: 3075:    if (!(dp->obj.attr & 0x10)) {
  4749   00ACC4  EE20 F004          	lfsr	2,4
  4750   00ACC8  51D7               	movf	follow_path@dp& (0+255),w,b
  4751   00ACCA  26D9               	addwf	fsr2l,f,c
  4752   00ACCC  51D8               	movf	(follow_path@dp+1)& (0+255),w,b
  4753   00ACCE  22DA               	addwfc	fsr2h,f,c
  4754   00ACD0  B8DF               	btfsc	indf2,4,c
  4755   00ACD2  EF6D  F056         	goto	u10231
  4756   00ACD6  EF6F  F056         	goto	u10230
  4757   00ACDA                     u10231:
  4758   00ACDA  EF71  F056         	goto	l7637
  4759   00ACDE                     u10230:
  4760   00ACDE  EF55  F056         	goto	l7629
  4761   00ACE2                     l7637:
  4762                           
  4763                           ; BSR set to: 0
  4764                           ;mcc_generated_files/fatfs/ff.c: 3086:    {;mcc_generated_files/fatfs/ff.c: 3087:     dp
      +                          ->obj.sclust = ld_clust(fs, fs->win + dp->dptr % ((UINT)512));
  4765   00ACE2  C0E1  F008         	movff	follow_path@fs,ld_clust@fs
  4766   00ACE6  C0E2  F009         	movff	follow_path@fs+1,ld_clust@fs+1
  4767   00ACEA  EE20 F00E          	lfsr	2,14
  4768   00ACEE  51D7               	movf	follow_path@dp& (0+255),w,b
  4769   00ACF0  26D9               	addwf	fsr2l,f,c
  4770   00ACF2  51D8               	movf	(follow_path@dp+1)& (0+255),w,b
  4771   00ACF4  22DA               	addwfc	fsr2h,f,c
  4772   00ACF6  CFDE F0DB          	movff	postinc2,??_follow_path
  4773   00ACFA  CFDD F0DC          	movff	postdec2,??_follow_path+1
  4774   00ACFE  0EFF               	movlw	255
  4775   00AD00  15DB               	andwf	??_follow_path& (0+255),w,b
  4776   00AD02  6FDD               	movwf	(??_follow_path+2)& (0+255),b
  4777   00AD04  0E01               	movlw	1
  4778   00AD06  15DC               	andwf	(??_follow_path+1)& (0+255),w,b
  4779   00AD08  6FDE               	movwf	(??_follow_path+3)& (0+255),b
  4780   00AD0A  51DD               	movf	(??_follow_path+2)& (0+255),w,b
  4781   00AD0C  25E1               	addwf	follow_path@fs& (0+255),w,b
  4782   00AD0E  6FDF               	movwf	(??_follow_path+4)& (0+255),b
  4783   00AD10  51DE               	movf	(??_follow_path+3)& (0+255),w,b
  4784   00AD12  21E2               	addwfc	(follow_path@fs+1)& (0+255),w,b
  4785   00AD14  6FE0               	movwf	(??_follow_path+5)& (0+255),b
  4786   00AD16  0E33               	movlw	51
  4787   00AD18  25DF               	addwf	(??_follow_path+4)& (0+255),w,b
  4788   00AD1A  6E0A               	movwf	ld_clust@dir^0,c
  4789   00AD1C  0E00               	movlw	0
  4790   00AD1E  21E0               	addwfc	(??_follow_path+5)& (0+255),w,b
  4791   00AD20  6E0B               	movwf	(ld_clust@dir+1)^0,c
  4792   00AD22  ECA4  F048         	call	_ld_clust	;wreg free
  4793   00AD26  0100               	movlb	0	; () banked
  4794   00AD28  EE20 F006          	lfsr	2,6
  4795   00AD2C  51D7               	movf	follow_path@dp& (0+255),w,b
  4796   00AD2E  26D9               	addwf	fsr2l,f,c
  4797   00AD30  51D8               	movf	(follow_path@dp+1)& (0+255),w,b
  4798   00AD32  22DA               	addwfc	fsr2h,f,c
  4799   00AD34  C008  FFDE         	movff	?_ld_clust,postinc2
  4800   00AD38  C009  FFDE         	movff	?_ld_clust+1,postinc2
  4801   00AD3C  C00A  FFDE         	movff	?_ld_clust+2,postinc2
  4802   00AD40  C00B  FFDE         	movff	?_ld_clust+3,postinc2
  4803   00AD44  EFFB  F055         	goto	l7605
  4804   00AD48                     l7639:
  4805                           
  4806                           ; BSR set to: 0
  4807                           ;mcc_generated_files/fatfs/ff.c: 3092:  return res;
  4808   00AD48  51E4               	movf	follow_path@res& (0+255),w,b
  4809   00AD4A                     
  4810                           ; BSR set to: 0
  4811   00AD4A  0012               	return		;funcret
  4812   00AD4C                     __end_of_follow_path:
  4813                           	callstack 0
  4814                           
  4815 ;; *************** function _ld_clust *****************
  4816 ;; Defined at:
  4817 ;;		line 1825 in file "mcc_generated_files/fatfs/ff.c"
  4818 ;; Parameters:    Size  Location     Type
  4819 ;;  fs              2    7[COMRAM] PTR struct .
  4820 ;;		 -> drive(563), NULL(0), FatFs(563), 
  4821 ;;  dir             2    9[COMRAM] PTR const unsigned char 
  4822 ;;		 -> FatFs.win(512), drive.win(512), drive(563), NULL(0), 
  4823 ;;		 -> FatFs(563), 
  4824 ;; Auto vars:     Size  Location     Type
  4825 ;;  cl              4   15[COMRAM] unsigned long 
  4826 ;; Return value:  Size  Location     Type
  4827 ;;                  4    7[COMRAM] unsigned long 
  4828 ;; Registers used:
  4829 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4830 ;; Tracked objects:
  4831 ;;		On entry : 0/0
  4832 ;;		On exit  : 0/0
  4833 ;;		Unchanged: 0/0
  4834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4835 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4836 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4837 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4838 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4839 ;;Total ram usage:       12 bytes
  4840 ;; Hardware stack levels used: 1
  4841 ;; Hardware stack levels required when called: 1
  4842 ;; This function calls:
  4843 ;;		_ld_word
  4844 ;; This function is called by:
  4845 ;;		_follow_path
  4846 ;;		_f_open
  4847 ;;		_f_chdir
  4848 ;;		_f_opendir
  4849 ;;		_f_unlink
  4850 ;;		_f_rename
  4851 ;; This function uses a non-reentrant model
  4852 ;;
  4853                           
  4854                           	psect	text5
  4855   009148                     __ptext5:
  4856                           	callstack 0
  4857   009148                     _ld_clust:
  4858                           	callstack 28
  4859   009148                     
  4860                           ;mcc_generated_files/fatfs/ff.c: 1826:  FATFS* fs,;mcc_generated_files/fatfs/ff.c: 1827:
      +                            const BYTE* dir;mcc_generated_files/fatfs/ff.c: 1829: {;mcc_generated_files/fatfs/ff.c
      +                          : 1830:  DWORD cl;;mcc_generated_files/fatfs/ff.c: 1832:  cl = ld_word(dir + 26);
  4861   009148  0E1A               	movlw	26
  4862   00914A  240A               	addwf	ld_clust@dir^0,w,c
  4863   00914C  6E01               	movwf	ld_word@ptr^0,c
  4864   00914E  0E00               	movlw	0
  4865   009150  200B               	addwfc	(ld_clust@dir+1)^0,w,c
  4866   009152  6E02               	movwf	(ld_word@ptr+1)^0,c
  4867   009154  ECE4  F045         	call	_ld_word	;wreg free
  4868   009158  C001  F010         	movff	?_ld_word,ld_clust@cl
  4869   00915C  C002  F011         	movff	?_ld_word+1,ld_clust@cl+1
  4870   009160  6A12               	clrf	(ld_clust@cl+2)^0,c
  4871   009162  6A13               	clrf	(ld_clust@cl+3)^0,c
  4872   009164                     
  4873                           ;mcc_generated_files/fatfs/ff.c: 1833:  if (fs->fs_type == 3) {
  4874   009164  C008  FFD9         	movff	ld_clust@fs,fsr2l
  4875   009168  C009  FFDA         	movff	ld_clust@fs+1,fsr2h
  4876   00916C  0E03               	movlw	3
  4877   00916E  18DE               	xorwf	postinc2,w,c
  4878   009170  A4D8               	btfss	status,2,c
  4879   009172  EFBD  F048         	goto	u9411
  4880   009176  EFBF  F048         	goto	u9410
  4881   00917A                     u9411:
  4882   00917A  EFDB  F048         	goto	l7163
  4883   00917E                     u9410:
  4884   00917E                     
  4885                           ;mcc_generated_files/fatfs/ff.c: 1834:   cl |= (DWORD)ld_word(dir + 20) << 16;
  4886   00917E  0E14               	movlw	20
  4887   009180  240A               	addwf	ld_clust@dir^0,w,c
  4888   009182  6E01               	movwf	ld_word@ptr^0,c
  4889   009184  0E00               	movlw	0
  4890   009186  200B               	addwfc	(ld_clust@dir+1)^0,w,c
  4891   009188  6E02               	movwf	(ld_word@ptr+1)^0,c
  4892   00918A  ECE4  F045         	call	_ld_word	;wreg free
  4893   00918E  5001               	movf	?_ld_word^0,w,c
  4894   009190  6E0C               	movwf	??_ld_clust^0,c
  4895   009192  5002               	movf	(?_ld_word+1)^0,w,c
  4896   009194  6E0D               	movwf	(??_ld_clust+1)^0,c
  4897   009196  6A0E               	clrf	(??_ld_clust+2)^0,c
  4898   009198  6A0F               	clrf	(??_ld_clust+3)^0,c
  4899   00919A  C00D  F00F         	movff	??_ld_clust+1,??_ld_clust+3
  4900   00919E  C00C  F00E         	movff	??_ld_clust,??_ld_clust+2
  4901   0091A2  6A0D               	clrf	(??_ld_clust+1)^0,c
  4902   0091A4  6A0C               	clrf	??_ld_clust^0,c
  4903   0091A6  500C               	movf	??_ld_clust^0,w,c
  4904   0091A8  1210               	iorwf	ld_clust@cl^0,f,c
  4905   0091AA  500D               	movf	(??_ld_clust+1)^0,w,c
  4906   0091AC  1211               	iorwf	(ld_clust@cl+1)^0,f,c
  4907   0091AE  500E               	movf	(??_ld_clust+2)^0,w,c
  4908   0091B0  1212               	iorwf	(ld_clust@cl+2)^0,f,c
  4909   0091B2  500F               	movf	(??_ld_clust+3)^0,w,c
  4910   0091B4  1213               	iorwf	(ld_clust@cl+3)^0,f,c
  4911   0091B6                     l7163:
  4912                           
  4913                           ;mcc_generated_files/fatfs/ff.c: 1837:  return cl;
  4914   0091B6  C010  F008         	movff	ld_clust@cl,?_ld_clust
  4915   0091BA  C011  F009         	movff	ld_clust@cl+1,?_ld_clust+1
  4916   0091BE  C012  F00A         	movff	ld_clust@cl+2,?_ld_clust+2
  4917   0091C2  C013  F00B         	movff	ld_clust@cl+3,?_ld_clust+3
  4918   0091C6  0012               	return		;funcret
  4919   0091C8                     __end_of_ld_clust:
  4920                           	callstack 0
  4921                           
  4922 ;; *************** function _dir_find *****************
  4923 ;; Defined at:
  4924 ;;		line 2403 in file "mcc_generated_files/fatfs/ff.c"
  4925 ;; Parameters:    Size  Location     Type
  4926 ;;  dp              2  111[BANK0 ] PTR struct .
  4927 ;;		 -> f_rename@djn(40), f_rename@djo(40), f_mkdir@dj(40), f_unlink@dj(40), 
  4928 ;;		 -> f_stat@dj(40), f_chdir@dj(40), f_open@dj(40), 
  4929 ;; Auto vars:     Size  Location     Type
  4930 ;;  fs              2  115[BANK0 ] PTR struct .
  4931 ;;		 -> drive(563), NULL(0), FatFs(563), 
  4932 ;;  res             1  118[BANK0 ] enum E68
  4933 ;;  c               1  117[BANK0 ] unsigned char 
  4934 ;; Return value:  Size  Location     Type
  4935 ;;                  1    wreg      enum E68
  4936 ;; Registers used:
  4937 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  4938 ;; Tracked objects:
  4939 ;;		On entry : 0/0
  4940 ;;		On exit  : 0/0
  4941 ;;		Unchanged: 0/0
  4942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4943 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4944 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4945 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4946 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4947 ;;Total ram usage:        8 bytes
  4948 ;; Hardware stack levels used: 1
  4949 ;; Hardware stack levels required when called: 10
  4950 ;; This function calls:
  4951 ;;		_dir_next
  4952 ;;		_dir_sdi
  4953 ;;		_mem_cmp
  4954 ;;		_move_window
  4955 ;; This function is called by:
  4956 ;;		_follow_path
  4957 ;; This function uses a non-reentrant model
  4958 ;;
  4959                           
  4960                           	psect	text6
  4961   00A184                     __ptext6:
  4962                           	callstack 0
  4963   00A184                     _dir_find:
  4964                           	callstack 18
  4965   00A184                     
  4966                           ;mcc_generated_files/fatfs/ff.c: 2404:  FFDIR* dp;mcc_generated_files/fatfs/ff.c: 2406: 
      +                          {;mcc_generated_files/fatfs/ff.c: 2407:  FRESULT res;;mcc_generated_files/fatfs/ff.c: 24
      +                          08:  FATFS *fs = dp->obj.fs;
  4967   00A184  C0CF  FFD9         	movff	dir_find@dp,fsr2l
  4968   00A188  C0D0  FFDA         	movff	dir_find@dp+1,fsr2h
  4969   00A18C  CFDE F0D3          	movff	postinc2,dir_find@fs
  4970   00A190  CFDD F0D4          	movff	postdec2,dir_find@fs+1
  4971   00A194                     
  4972                           ;mcc_generated_files/fatfs/ff.c: 2409:  BYTE c;;mcc_generated_files/fatfs/ff.c: 2414:  r
      +                          es = dir_sdi(dp, 0);
  4973   00A194  C0CF  F091         	movff	dir_find@dp,dir_sdi@dp
  4974   00A198  C0D0  F092         	movff	dir_find@dp+1,dir_sdi@dp+1
  4975   00A19C  0E00               	movlw	0
  4976   00A19E  0100               	movlb	0	; () banked
  4977   00A1A0  6F93               	movwf	dir_sdi@ofs& (0+255),b
  4978   00A1A2  0E00               	movlw	0
  4979   00A1A4  6F94               	movwf	(dir_sdi@ofs+1)& (0+255),b
  4980   00A1A6  0E00               	movlw	0
  4981   00A1A8  6F95               	movwf	(dir_sdi@ofs+2)& (0+255),b
  4982   00A1AA  0E00               	movlw	0
  4983   00A1AC  6F96               	movwf	(dir_sdi@ofs+3)& (0+255),b
  4984   00A1AE  ECF2  F057         	call	_dir_sdi	;wreg free
  4985   00A1B2  0100               	movlb	0	; () banked
  4986   00A1B4  6FD6               	movwf	dir_find@res& (0+255),b
  4987   00A1B6                     
  4988                           ; BSR set to: 0
  4989                           ;mcc_generated_files/fatfs/ff.c: 2415:  if (res != FR_OK) return res;
  4990   00A1B6  51D6               	movf	dir_find@res& (0+255),w,b
  4991   00A1B8  B4D8               	btfsc	status,2,c
  4992   00A1BA  EFE1  F050         	goto	u9431
  4993   00A1BE  EFE3  F050         	goto	u9430
  4994   00A1C2                     u9431:
  4995   00A1C2  EFE7  F050         	goto	l7183
  4996   00A1C6                     u9430:
  4997   00A1C6                     l7179:
  4998   00A1C6  0100               	movlb	0	; () banked
  4999   00A1C8  51D6               	movf	dir_find@res& (0+255),w,b
  5000   00A1CA  EF83  F051         	goto	l792
  5001   00A1CE                     l7183:
  5002                           
  5003                           ; BSR set to: 0
  5004                           ;mcc_generated_files/fatfs/ff.c: 2441:   res = move_window(fs, dp->sect);
  5005   00A1CE  C0D3  F070         	movff	dir_find@fs,move_window@fs
  5006   00A1D2  C0D4  F071         	movff	dir_find@fs+1,move_window@fs+1
  5007   00A1D6  EE20 F016          	lfsr	2,22
  5008   00A1DA  51CF               	movf	dir_find@dp& (0+255),w,b
  5009   00A1DC  26D9               	addwf	fsr2l,f,c
  5010   00A1DE  51D0               	movf	(dir_find@dp+1)& (0+255),w,b
  5011   00A1E0  22DA               	addwfc	fsr2h,f,c
  5012   00A1E2  CFDE F072          	movff	postinc2,move_window@sector
  5013   00A1E6  CFDE F073          	movff	postinc2,move_window@sector+1
  5014   00A1EA  CFDE F074          	movff	postinc2,move_window@sector+2
  5015   00A1EE  CFDE F075          	movff	postinc2,move_window@sector+3
  5016   00A1F2  ECBF  F04A         	call	_move_window	;wreg free
  5017   00A1F6  0100               	movlb	0	; () banked
  5018   00A1F8  6FD6               	movwf	dir_find@res& (0+255),b
  5019   00A1FA                     
  5020                           ; BSR set to: 0
  5021                           ;mcc_generated_files/fatfs/ff.c: 2442:   if (res != FR_OK) break;
  5022   00A1FA  51D6               	movf	dir_find@res& (0+255),w,b
  5023   00A1FC  B4D8               	btfsc	status,2,c
  5024   00A1FE  EF03  F051         	goto	u9441
  5025   00A202  EF05  F051         	goto	u9440
  5026   00A206                     u9441:
  5027   00A206  EF07  F051         	goto	l7189
  5028   00A20A                     u9440:
  5029   00A20A  EFE3  F050         	goto	l7179
  5030   00A20E                     l7189:
  5031                           
  5032                           ; BSR set to: 0
  5033                           ;mcc_generated_files/fatfs/ff.c: 2443:   c = dp->dir[0];
  5034   00A20E  EE20 F01A          	lfsr	2,26
  5035   00A212  51CF               	movf	dir_find@dp& (0+255),w,b
  5036   00A214  26D9               	addwf	fsr2l,f,c
  5037   00A216  51D0               	movf	(dir_find@dp+1)& (0+255),w,b
  5038   00A218  22DA               	addwfc	fsr2h,f,c
  5039   00A21A  CFDE F0D1          	movff	postinc2,??_dir_find
  5040   00A21E  CFDD F0D2          	movff	postdec2,??_dir_find+1
  5041   00A222  C0D1  FFD9         	movff	??_dir_find,fsr2l
  5042   00A226  C0D2  FFDA         	movff	??_dir_find+1,fsr2h
  5043   00A22A  50DF               	movf	indf2,w,c
  5044   00A22C  6FD5               	movwf	dir_find@c& (0+255),b
  5045   00A22E                     
  5046                           ; BSR set to: 0
  5047                           ;mcc_generated_files/fatfs/ff.c: 2444:   if (c == 0) { res = FR_NO_FILE; break; }
  5048   00A22E  51D5               	movf	dir_find@c& (0+255),w,b
  5049   00A230  A4D8               	btfss	status,2,c
  5050   00A232  EF1D  F051         	goto	u9451
  5051   00A236  EF1F  F051         	goto	u9450
  5052   00A23A                     u9451:
  5053   00A23A  EF23  F051         	goto	l7195
  5054   00A23E                     u9450:
  5055   00A23E                     
  5056                           ; BSR set to: 0
  5057   00A23E  0E04               	movlw	4
  5058   00A240  6FD6               	movwf	dir_find@res& (0+255),b
  5059   00A242  EFE3  F050         	goto	l7179
  5060   00A246                     l7195:
  5061                           
  5062                           ; BSR set to: 0
  5063                           ;mcc_generated_files/fatfs/ff.c: 2467:   dp->obj.attr = dp->dir[11] & 0x3F;
  5064   00A246  EE20 F004          	lfsr	2,4
  5065   00A24A  51CF               	movf	dir_find@dp& (0+255),w,b
  5066   00A24C  26D9               	addwf	fsr2l,f,c
  5067   00A24E  51D0               	movf	(dir_find@dp+1)& (0+255),w,b
  5068   00A250  22DA               	addwfc	fsr2h,f,c
  5069   00A252  EE10 F01A          	lfsr	1,26
  5070   00A256  51CF               	movf	dir_find@dp& (0+255),w,b
  5071   00A258  26E1               	addwf	fsr1l,f,c
  5072   00A25A  51D0               	movf	(dir_find@dp+1)& (0+255),w,b
  5073   00A25C  22E2               	addwfc	fsr1h,f,c
  5074   00A25E  EE00 F00B          	lfsr	0,11
  5075   00A262  50E6               	movf	postinc1,w,c
  5076   00A264  26E9               	addwf	fsr0l,f,c
  5077   00A266  50E5               	movf	postdec1,w,c
  5078   00A268  22EA               	addwfc	fsr0h,f,c
  5079   00A26A  50EF               	movf	indf0,w,c
  5080   00A26C  0B3F               	andlw	63
  5081   00A26E  6EDF               	movwf	indf2,c
  5082   00A270                     
  5083                           ; BSR set to: 0
  5084                           ;mcc_generated_files/fatfs/ff.c: 2468:   if (!(dp->dir[11] & 0x08) && !mem_cmp(dp->dir, 
      +                          dp->fn, 11)) break;
  5085   00A270  EE20 F01A          	lfsr	2,26
  5086   00A274  51CF               	movf	dir_find@dp& (0+255),w,b
  5087   00A276  26D9               	addwf	fsr2l,f,c
  5088   00A278  51D0               	movf	(dir_find@dp+1)& (0+255),w,b
  5089   00A27A  22DA               	addwfc	fsr2h,f,c
  5090   00A27C  EE10 F00B          	lfsr	1,11
  5091   00A280  50DE               	movf	postinc2,w,c
  5092   00A282  26E1               	addwf	fsr1l,f,c
  5093   00A284  50DD               	movf	postdec2,w,c
  5094   00A286  22E2               	addwfc	fsr1h,f,c
  5095   00A288  B6E7               	btfsc	indf1,3,c
  5096   00A28A  EF49  F051         	goto	u9461
  5097   00A28E  EF4B  F051         	goto	u9460
  5098   00A292                     u9461:
  5099   00A292  EF6C  F051         	goto	l7203
  5100   00A296                     u9460:
  5101   00A296                     
  5102                           ; BSR set to: 0
  5103   00A296  EE20 F01A          	lfsr	2,26
  5104   00A29A  51CF               	movf	dir_find@dp& (0+255),w,b
  5105   00A29C  26D9               	addwf	fsr2l,f,c
  5106   00A29E  51D0               	movf	(dir_find@dp+1)& (0+255),w,b
  5107   00A2A0  22DA               	addwfc	fsr2h,f,c
  5108   00A2A2  CFDE F001          	movff	postinc2,mem_cmp@dst
  5109   00A2A6  CFDD F002          	movff	postdec2,mem_cmp@dst+1
  5110   00A2AA  0E1C               	movlw	28
  5111   00A2AC  25CF               	addwf	dir_find@dp& (0+255),w,b
  5112   00A2AE  6E03               	movwf	mem_cmp@src^0,c
  5113   00A2B0  0E00               	movlw	0
  5114   00A2B2  21D0               	addwfc	(dir_find@dp+1)& (0+255),w,b
  5115   00A2B4  6E04               	movwf	(mem_cmp@src+1)^0,c
  5116   00A2B6  0E00               	movlw	0
  5117   00A2B8  6E06               	movwf	(mem_cmp@cnt+1)^0,c
  5118   00A2BA  0E0B               	movlw	11
  5119   00A2BC  6E05               	movwf	mem_cmp@cnt^0,c
  5120   00A2BE  EC27  F049         	call	_mem_cmp	;wreg free
  5121   00A2C2  5001               	movf	?_mem_cmp^0,w,c
  5122   00A2C4  1002               	iorwf	(?_mem_cmp+1)^0,w,c
  5123   00A2C6  A4D8               	btfss	status,2,c
  5124   00A2C8  EF68  F051         	goto	u9471
  5125   00A2CC  EF6A  F051         	goto	u9470
  5126   00A2D0                     u9471:
  5127   00A2D0  EF6C  F051         	goto	l7203
  5128   00A2D4                     u9470:
  5129   00A2D4  EFE3  F050         	goto	l7179
  5130   00A2D8                     l7203:
  5131                           
  5132                           ;mcc_generated_files/fatfs/ff.c: 2470:   res = dir_next(dp, 0);
  5133   00A2D8  C0CF  F0B5         	movff	dir_find@dp,dir_next@dp
  5134   00A2DC  C0D0  F0B6         	movff	dir_find@dp+1,dir_next@dp+1
  5135   00A2E0  0E00               	movlw	0
  5136   00A2E2  0100               	movlb	0	; () banked
  5137   00A2E4  6FB8               	movwf	(dir_next@stretch+1)& (0+255),b
  5138   00A2E6  0E00               	movlw	0
  5139   00A2E8  6FB7               	movwf	dir_next@stretch& (0+255),b
  5140   00A2EA  ECB7  F05B         	call	_dir_next	;wreg free
  5141   00A2EE  0100               	movlb	0	; () banked
  5142   00A2F0  6FD6               	movwf	dir_find@res& (0+255),b
  5143   00A2F2                     
  5144                           ; BSR set to: 0
  5145                           ;mcc_generated_files/fatfs/ff.c: 2471:  } while (res == FR_OK);
  5146   00A2F2  51D6               	movf	dir_find@res& (0+255),w,b
  5147   00A2F4  B4D8               	btfsc	status,2,c
  5148   00A2F6  EF7F  F051         	goto	u9481
  5149   00A2FA  EF81  F051         	goto	u9480
  5150   00A2FE                     u9481:
  5151   00A2FE  EFE7  F050         	goto	l7183
  5152   00A302                     u9480:
  5153   00A302  EFE3  F050         	goto	l7179
  5154   00A306                     l792:
  5155                           
  5156                           ; BSR set to: 0
  5157   00A306  0012               	return		;funcret
  5158   00A308                     __end_of_dir_find:
  5159                           	callstack 0
  5160                           
  5161 ;; *************** function _create_name *****************
  5162 ;; Defined at:
  5163 ;;		line 2818 in file "mcc_generated_files/fatfs/ff.c"
  5164 ;; Parameters:    Size  Location     Type
  5165 ;;  dp              2    8[COMRAM] PTR struct .
  5166 ;;		 -> f_rename@djn(40), f_rename@djo(40), f_mkdir@dj(40), f_unlink@dj(40), 
  5167 ;;		 -> f_stat@dj(40), f_chdir@dj(40), f_open@dj(40), 
  5168 ;;  path            2   10[COMRAM] PTR PTR const unsigned c
  5169 ;;		 -> follow_path@path(2), 
  5170 ;; Auto vars:     Size  Location     Type
  5171 ;;  si              2   27[COMRAM] unsigned int 
  5172 ;;  sfn             2   25[COMRAM] PTR unsigned char 
  5173 ;;		 -> djn.fn(12), f_rename@djn(40), djo.fn(12), f_rename@djo(40), 
  5174 ;;		 -> dj.fn(12), f_mkdir@dj(40), dj.fn(12), f_unlink@dj(40), 
  5175 ;;		 -> dj.fn(12), f_stat@dj(40), dj.fn(12), f_chdir@dj(40), 
  5176 ;;		 -> dj.fn(12), f_open@dj(40), 
  5177 ;;  i               2   23[COMRAM] unsigned int 
  5178 ;;  p               2   21[COMRAM] PTR const unsigned char 
  5179 ;;		 -> STR_6(3), STR_5(10), STR_4(3), STR_2(10), 
  5180 ;;		 -> STR_1(1), 
  5181 ;;  ni              2   19[COMRAM] unsigned int 
  5182 ;;  c               1   29[COMRAM] unsigned char 
  5183 ;;  d               1   18[COMRAM] unsigned char 
  5184 ;; Return value:  Size  Location     Type
  5185 ;;                  1    wreg      enum E68
  5186 ;; Registers used:
  5187 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5188 ;; Tracked objects:
  5189 ;;		On entry : 0/0
  5190 ;;		On exit  : 0/0
  5191 ;;		Unchanged: 0/0
  5192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5193 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5194 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5195 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5196 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5197 ;;Total ram usage:       22 bytes
  5198 ;; Hardware stack levels used: 1
  5199 ;; Hardware stack levels required when called: 1
  5200 ;; This function calls:
  5201 ;;		_chk_chr
  5202 ;;		_dbc_1st
  5203 ;;		_dbc_2nd
  5204 ;;		_mem_set
  5205 ;; This function is called by:
  5206 ;;		_follow_path
  5207 ;; This function uses a non-reentrant model
  5208 ;;
  5209                           
  5210                           	psect	text7
  5211   00BB84                     __ptext7:
  5212                           	callstack 0
  5213   00BB84                     _create_name:
  5214                           	callstack 27
  5215   00BB84                     
  5216                           ;mcc_generated_files/fatfs/ff.c: 2819:  FFDIR* dp,;mcc_generated_files/fatfs/ff.c: 2820:
      +                            const TCHAR** path;mcc_generated_files/fatfs/ff.c: 2822: {;mcc_generated_files/fatfs/f
      +                          f.c: 2945:  BYTE c, d, *sfn;;mcc_generated_files/fatfs/ff.c: 2946:  UINT ni, si, i;;mcc_
      +                          generated_files/fatfs/ff.c: 2947:  const char *p;;mcc_generated_files/fatfs/ff.c: 2950: 
      +                           p = *path; sfn = dp->fn;
  5217   00BB84  C00B  FFD9         	movff	create_name@path,fsr2l
  5218   00BB88  C00C  FFDA         	movff	create_name@path+1,fsr2h
  5219   00BB8C  CFDE F016          	movff	postinc2,create_name@p
  5220   00BB90  CFDD F017          	movff	postdec2,create_name@p+1
  5221   00BB94  0E1C               	movlw	28
  5222   00BB96  2409               	addwf	create_name@dp^0,w,c
  5223   00BB98  6E1A               	movwf	create_name@sfn^0,c
  5224   00BB9A  0E00               	movlw	0
  5225   00BB9C  200A               	addwfc	(create_name@dp+1)^0,w,c
  5226   00BB9E  6E1B               	movwf	(create_name@sfn+1)^0,c
  5227   00BBA0                     
  5228                           ;mcc_generated_files/fatfs/ff.c: 2951:  mem_set(sfn, ' ', 11);
  5229   00BBA0  C01A  F001         	movff	create_name@sfn,mem_set@dst
  5230   00BBA4  C01B  F002         	movff	create_name@sfn+1,mem_set@dst+1
  5231   00BBA8  0E00               	movlw	0
  5232   00BBAA  6E04               	movwf	(mem_set@val+1)^0,c
  5233   00BBAC  0E20               	movlw	32
  5234   00BBAE  6E03               	movwf	mem_set@val^0,c
  5235   00BBB0  0E00               	movlw	0
  5236   00BBB2  6E06               	movwf	(mem_set@cnt+1)^0,c
  5237   00BBB4  0E0B               	movlw	11
  5238   00BBB6  6E05               	movwf	mem_set@cnt^0,c
  5239   00BBB8  ECCB  F045         	call	_mem_set	;wreg free
  5240   00BBBC                     
  5241                           ;mcc_generated_files/fatfs/ff.c: 2952:  si = i = 0; ni = 8;
  5242   00BBBC  0E00               	movlw	0
  5243   00BBBE  6E19               	movwf	(create_name@i+1)^0,c
  5244   00BBC0  0E00               	movlw	0
  5245   00BBC2  6E18               	movwf	create_name@i^0,c
  5246   00BBC4  C018  F01C         	movff	create_name@i,create_name@si
  5247   00BBC8  C019  F01D         	movff	create_name@i+1,create_name@si+1
  5248   00BBCC  0E00               	movlw	0
  5249   00BBCE  6E15               	movwf	(create_name@ni+1)^0,c
  5250   00BBD0  0E08               	movlw	8
  5251   00BBD2  6E14               	movwf	create_name@ni^0,c
  5252   00BBD4                     
  5253                           ;mcc_generated_files/fatfs/ff.c: 2954:  if (p[si] == '.') {
  5254   00BBD4  501C               	movf	create_name@si^0,w,c
  5255   00BBD6  2416               	addwf	create_name@p^0,w,c
  5256   00BBD8  6E0D               	movwf	??_create_name^0,c
  5257   00BBDA  501D               	movf	(create_name@si+1)^0,w,c
  5258   00BBDC  2017               	addwfc	(create_name@p+1)^0,w,c
  5259   00BBDE  6E0E               	movwf	(??_create_name+1)^0,c
  5260   00BBE0  C00D  FFF6         	movff	??_create_name,tblptrl
  5261   00BBE4  C00E  FFF7         	movff	??_create_name+1,tblptrh
  5262   00BBE8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5263   00BBE8  6AF8               	clrf	tblptru,c
  5264   00BBEA                     	endif
  5265   00BBEA                     	if	0	;tblptru may be non-zero
  5266   00BBEA                     	endif
  5267   00BBEA  0008               	tblrd		*
  5268   00BBEC  50F5               	movf	tablat,w,c
  5269   00BBEE  0A2E               	xorlw	46
  5270   00BBF0  A4D8               	btfss	status,2,c
  5271   00BBF2  EFFD  F05D         	goto	u9491
  5272   00BBF6  EFFF  F05D         	goto	u9490
  5273   00BBFA                     u9491:
  5274   00BBFA  EF79  F05E         	goto	l7259
  5275   00BBFE                     u9490:
  5276   00BBFE                     l7223:
  5277                           
  5278                           ;mcc_generated_files/fatfs/ff.c: 2956:    c = (BYTE)p[si++];
  5279   00BBFE  501C               	movf	create_name@si^0,w,c
  5280   00BC00  2416               	addwf	create_name@p^0,w,c
  5281   00BC02  6E0D               	movwf	??_create_name^0,c
  5282   00BC04  501D               	movf	(create_name@si+1)^0,w,c
  5283   00BC06  2017               	addwfc	(create_name@p+1)^0,w,c
  5284   00BC08  6E0E               	movwf	(??_create_name+1)^0,c
  5285   00BC0A  C00D  FFF6         	movff	??_create_name,tblptrl
  5286   00BC0E  C00E  FFF7         	movff	??_create_name+1,tblptrh
  5287   00BC12                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5288   00BC12  6AF8               	clrf	tblptru,c
  5289   00BC14                     	endif
  5290   00BC14                     	if	0	;tblptru may be non-zero
  5291   00BC14                     	endif
  5292   00BC14  0008               	tblrd		*
  5293   00BC16  CFF5 F01E          	movff	tablat,create_name@c
  5294   00BC1A  4A1C               	infsnz	create_name@si^0,f,c
  5295   00BC1C  2A1D               	incf	(create_name@si+1)^0,f,c
  5296   00BC1E                     
  5297                           ;mcc_generated_files/fatfs/ff.c: 2957:    if (c != '.' || si >= 3) break;
  5298   00BC1E  0E2E               	movlw	46
  5299   00BC20  181E               	xorwf	create_name@c^0,w,c
  5300   00BC22  A4D8               	btfss	status,2,c
  5301   00BC24  EF16  F05E         	goto	u9501
  5302   00BC28  EF18  F05E         	goto	u9500
  5303   00BC2C                     u9501:
  5304   00BC2C  EF31  F05E         	goto	l7235
  5305   00BC30                     u9500:
  5306   00BC30  501D               	movf	(create_name@si+1)^0,w,c
  5307   00BC32  E109               	bnz	u9510
  5308   00BC34  0E03               	movlw	3
  5309   00BC36  5C1C               	subwf	create_name@si^0,w,c
  5310   00BC38  A0D8               	btfss	status,0,c
  5311   00BC3A  EF21  F05E         	goto	u9511
  5312   00BC3E  EF23  F05E         	goto	u9510
  5313   00BC42                     u9511:
  5314   00BC42  EF25  F05E         	goto	l7231
  5315   00BC46                     u9510:
  5316   00BC46  EF31  F05E         	goto	l7235
  5317   00BC4A                     l7231:
  5318                           
  5319                           ;mcc_generated_files/fatfs/ff.c: 2958:    sfn[i++] = c;
  5320   00BC4A  5018               	movf	create_name@i^0,w,c
  5321   00BC4C  241A               	addwf	create_name@sfn^0,w,c
  5322   00BC4E  6ED9               	movwf	fsr2l,c
  5323   00BC50  5019               	movf	(create_name@i+1)^0,w,c
  5324   00BC52  201B               	addwfc	(create_name@sfn+1)^0,w,c
  5325   00BC54  6EDA               	movwf	fsr2h,c
  5326   00BC56  C01E  FFDF         	movff	create_name@c,indf2
  5327   00BC5A  4A18               	infsnz	create_name@i^0,f,c
  5328   00BC5C  2A19               	incf	(create_name@i+1)^0,f,c
  5329                           
  5330                           ;mcc_generated_files/fatfs/ff.c: 2959:   }
  5331   00BC5E  EFFF  F05D         	goto	l7223
  5332   00BC62                     l7235:
  5333                           
  5334                           ;mcc_generated_files/fatfs/ff.c: 2960:   if (c != '/' && c != '\\' && c > ' ') return FR
      +                          _INVALID_NAME;
  5335   00BC62  0E2F               	movlw	47
  5336   00BC64  181E               	xorwf	create_name@c^0,w,c
  5337   00BC66  B4D8               	btfsc	status,2,c
  5338   00BC68  EF38  F05E         	goto	u9521
  5339   00BC6C  EF3A  F05E         	goto	u9520
  5340   00BC70                     u9521:
  5341   00BC70  EF4E  F05E         	goto	l7245
  5342   00BC74                     u9520:
  5343   00BC74  0E5C               	movlw	92
  5344   00BC76  181E               	xorwf	create_name@c^0,w,c
  5345   00BC78  B4D8               	btfsc	status,2,c
  5346   00BC7A  EF41  F05E         	goto	u9531
  5347   00BC7E  EF43  F05E         	goto	u9530
  5348   00BC82                     u9531:
  5349   00BC82  EF4E  F05E         	goto	l7245
  5350   00BC86                     u9530:
  5351   00BC86  0E20               	movlw	32
  5352   00BC88  641E               	cpfsgt	create_name@c^0,c
  5353   00BC8A  EF49  F05E         	goto	u9541
  5354   00BC8E  EF4B  F05E         	goto	u9540
  5355   00BC92                     u9541:
  5356   00BC92  EF4E  F05E         	goto	l7245
  5357   00BC96                     u9540:
  5358   00BC96                     l7241:
  5359   00BC96  0E06               	movlw	6
  5360   00BC98  EFEB  F05F         	goto	l826
  5361   00BC9C                     l7245:
  5362                           
  5363                           ;mcc_generated_files/fatfs/ff.c: 2961:   *path = p + si;
  5364   00BC9C  501C               	movf	create_name@si^0,w,c
  5365   00BC9E  2416               	addwf	create_name@p^0,w,c
  5366   00BCA0  6E0D               	movwf	??_create_name^0,c
  5367   00BCA2  501D               	movf	(create_name@si+1)^0,w,c
  5368   00BCA4  2017               	addwfc	(create_name@p+1)^0,w,c
  5369   00BCA6  6E0E               	movwf	(??_create_name+1)^0,c
  5370   00BCA8  C00B  FFD9         	movff	create_name@path,fsr2l
  5371   00BCAC  C00C  FFDA         	movff	create_name@path+1,fsr2h
  5372   00BCB0  C00D  FFDE         	movff	??_create_name,postinc2
  5373   00BCB4  C00E  FFDD         	movff	??_create_name+1,postdec2
  5374   00BCB8                     
  5375                           ;mcc_generated_files/fatfs/ff.c: 2962:   sfn[11] = (c <= ' ') ? 0x04 | 0x20 : 0x20;
  5376   00BCB8  0E20               	movlw	32
  5377   00BCBA  641E               	cpfsgt	create_name@c^0,c
  5378   00BCBC  EF62  F05E         	goto	u9551
  5379   00BCC0  EF64  F05E         	goto	u9550
  5380   00BCC4                     u9551:
  5381   00BCC4  EF6A  F05E         	goto	l7251
  5382   00BCC8                     u9550:
  5383   00BCC8  0E00               	movlw	0
  5384   00BCCA  6E10               	movwf	(_create_name$2239+1)^0,c
  5385   00BCCC  0E20               	movlw	32
  5386   00BCCE  6E0F               	movwf	_create_name$2239^0,c
  5387   00BCD0  EF6E  F05E         	goto	l7253
  5388   00BCD4                     l7251:
  5389   00BCD4  0E00               	movlw	0
  5390   00BCD6  6E10               	movwf	(_create_name$2239+1)^0,c
  5391   00BCD8  0E24               	movlw	36
  5392   00BCDA  6E0F               	movwf	_create_name$2239^0,c
  5393   00BCDC                     l7253:
  5394   00BCDC  EE20 F00B          	lfsr	2,11
  5395   00BCE0  501A               	movf	create_name@sfn^0,w,c
  5396   00BCE2  26D9               	addwf	fsr2l,f,c
  5397   00BCE4  501B               	movf	(create_name@sfn+1)^0,w,c
  5398   00BCE6  22DA               	addwfc	fsr2h,f,c
  5399   00BCE8  C00F  FFDF         	movff	_create_name$2239,indf2
  5400   00BCEC                     l7255:
  5401                           
  5402                           ;mcc_generated_files/fatfs/ff.c: 2963:   return FR_OK;
  5403   00BCEC  0E00               	movlw	0
  5404   00BCEE  EFEB  F05F         	goto	l826
  5405   00BCF2                     l7259:
  5406                           
  5407                           ;mcc_generated_files/fatfs/ff.c: 2967:   c = (BYTE)p[si++];
  5408   00BCF2  501C               	movf	create_name@si^0,w,c
  5409   00BCF4  2416               	addwf	create_name@p^0,w,c
  5410   00BCF6  6E0D               	movwf	??_create_name^0,c
  5411   00BCF8  501D               	movf	(create_name@si+1)^0,w,c
  5412   00BCFA  2017               	addwfc	(create_name@p+1)^0,w,c
  5413   00BCFC  6E0E               	movwf	(??_create_name+1)^0,c
  5414   00BCFE  C00D  FFF6         	movff	??_create_name,tblptrl
  5415   00BD02  C00E  FFF7         	movff	??_create_name+1,tblptrh
  5416   00BD06                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5417   00BD06  6AF8               	clrf	tblptru,c
  5418   00BD08                     	endif
  5419   00BD08                     	if	0	;tblptru may be non-zero
  5420   00BD08                     	endif
  5421   00BD08  0008               	tblrd		*
  5422   00BD0A  CFF5 F01E          	movff	tablat,create_name@c
  5423   00BD0E  4A1C               	infsnz	create_name@si^0,f,c
  5424   00BD10  2A1D               	incf	(create_name@si+1)^0,f,c
  5425   00BD12                     
  5426                           ;mcc_generated_files/fatfs/ff.c: 2968:   if (c <= ' ') break;
  5427   00BD12  0E21               	movlw	33
  5428   00BD14  601E               	cpfslt	create_name@c^0,c
  5429   00BD16  EF8F  F05E         	goto	u9561
  5430   00BD1A  EF91  F05E         	goto	u9560
  5431   00BD1E                     u9561:
  5432   00BD1E  EF93  F05E         	goto	l7267
  5433   00BD22                     u9560:
  5434   00BD22  EFA3  F05F         	goto	l7331
  5435   00BD26                     l7267:
  5436                           
  5437                           ;mcc_generated_files/fatfs/ff.c: 2969:   if (c == '/' || c == '\\') {
  5438   00BD26  0E2F               	movlw	47
  5439   00BD28  181E               	xorwf	create_name@c^0,w,c
  5440   00BD2A  B4D8               	btfsc	status,2,c
  5441   00BD2C  EF9A  F05E         	goto	u9571
  5442   00BD30  EF9C  F05E         	goto	u9570
  5443   00BD34                     u9571:
  5444   00BD34  EFA9  F05E         	goto	l7273
  5445   00BD38                     u9570:
  5446   00BD38  0E5C               	movlw	92
  5447   00BD3A  181E               	xorwf	create_name@c^0,w,c
  5448   00BD3C  A4D8               	btfss	status,2,c
  5449   00BD3E  EFA3  F05E         	goto	u9581
  5450   00BD42  EFA5  F05E         	goto	u9580
  5451   00BD46                     u9581:
  5452   00BD46  EFD5  F05E         	goto	l7277
  5453   00BD4A                     u9580:
  5454   00BD4A  EFA9  F05E         	goto	l7273
  5455   00BD4E                     l7271:
  5456   00BD4E  4A1C               	infsnz	create_name@si^0,f,c
  5457   00BD50  2A1D               	incf	(create_name@si+1)^0,f,c
  5458   00BD52                     l7273:
  5459   00BD52  501C               	movf	create_name@si^0,w,c
  5460   00BD54  2416               	addwf	create_name@p^0,w,c
  5461   00BD56  6E0D               	movwf	??_create_name^0,c
  5462   00BD58  501D               	movf	(create_name@si+1)^0,w,c
  5463   00BD5A  2017               	addwfc	(create_name@p+1)^0,w,c
  5464   00BD5C  6E0E               	movwf	(??_create_name+1)^0,c
  5465   00BD5E  C00D  FFF6         	movff	??_create_name,tblptrl
  5466   00BD62  C00E  FFF7         	movff	??_create_name+1,tblptrh
  5467   00BD66                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5468   00BD66  6AF8               	clrf	tblptru,c
  5469   00BD68                     	endif
  5470   00BD68                     	if	0	;tblptru may be non-zero
  5471   00BD68                     	endif
  5472   00BD68  0008               	tblrd		*
  5473   00BD6A  50F5               	movf	tablat,w,c
  5474   00BD6C  0A2F               	xorlw	47
  5475   00BD6E  B4D8               	btfsc	status,2,c
  5476   00BD70  EFBC  F05E         	goto	u9591
  5477   00BD74  EFBE  F05E         	goto	u9590
  5478   00BD78                     u9591:
  5479   00BD78  EFA7  F05E         	goto	l7271
  5480   00BD7C                     u9590:
  5481   00BD7C  501C               	movf	create_name@si^0,w,c
  5482   00BD7E  2416               	addwf	create_name@p^0,w,c
  5483   00BD80  6E0D               	movwf	??_create_name^0,c
  5484   00BD82  501D               	movf	(create_name@si+1)^0,w,c
  5485   00BD84  2017               	addwfc	(create_name@p+1)^0,w,c
  5486   00BD86  6E0E               	movwf	(??_create_name+1)^0,c
  5487   00BD88  C00D  FFF6         	movff	??_create_name,tblptrl
  5488   00BD8C  C00E  FFF7         	movff	??_create_name+1,tblptrh
  5489   00BD90                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5490   00BD90  6AF8               	clrf	tblptru,c
  5491   00BD92                     	endif
  5492   00BD92                     	if	0	;tblptru may be non-zero
  5493   00BD92                     	endif
  5494   00BD92  0008               	tblrd		*
  5495   00BD94  50F5               	movf	tablat,w,c
  5496   00BD96  0A5C               	xorlw	92
  5497   00BD98  B4D8               	btfsc	status,2,c
  5498   00BD9A  EFD1  F05E         	goto	u9601
  5499   00BD9E  EFD3  F05E         	goto	u9600
  5500   00BDA2                     u9601:
  5501   00BDA2  EFA7  F05E         	goto	l7271
  5502   00BDA6                     u9600:
  5503   00BDA6  EFA3  F05F         	goto	l7331
  5504   00BDAA                     l7277:
  5505                           
  5506                           ;mcc_generated_files/fatfs/ff.c: 2973:   if (c == '.' || i >= ni) {
  5507   00BDAA  0E2E               	movlw	46
  5508   00BDAC  181E               	xorwf	create_name@c^0,w,c
  5509   00BDAE  B4D8               	btfsc	status,2,c
  5510   00BDB0  EFDC  F05E         	goto	u9611
  5511   00BDB4  EFDE  F05E         	goto	u9610
  5512   00BDB8                     u9611:
  5513   00BDB8  EFE9  F05E         	goto	l7281
  5514   00BDBC                     u9610:
  5515   00BDBC  5014               	movf	create_name@ni^0,w,c
  5516   00BDBE  5C18               	subwf	create_name@i^0,w,c
  5517   00BDC0  5015               	movf	(create_name@ni+1)^0,w,c
  5518   00BDC2  5819               	subwfb	(create_name@i+1)^0,w,c
  5519   00BDC4  A0D8               	btfss	status,0,c
  5520   00BDC6  EFE7  F05E         	goto	u9621
  5521   00BDCA  EFE9  F05E         	goto	u9620
  5522   00BDCE                     u9621:
  5523   00BDCE  EF08  F05F         	goto	l7291
  5524   00BDD2                     u9620:
  5525   00BDD2                     l7281:
  5526                           
  5527                           ;mcc_generated_files/fatfs/ff.c: 2974:    if (ni == 11 || c != '.') return FR_INVALID_NA
      +                          ME;
  5528   00BDD2  0E0B               	movlw	11
  5529   00BDD4  1814               	xorwf	create_name@ni^0,w,c
  5530   00BDD6  1015               	iorwf	(create_name@ni+1)^0,w,c
  5531   00BDD8  B4D8               	btfsc	status,2,c
  5532   00BDDA  EFF1  F05E         	goto	u9631
  5533   00BDDE  EFF3  F05E         	goto	u9630
  5534   00BDE2                     u9631:
  5535   00BDE2  EF4B  F05E         	goto	l7241
  5536   00BDE6                     u9630:
  5537   00BDE6  0E2E               	movlw	46
  5538   00BDE8  181E               	xorwf	create_name@c^0,w,c
  5539   00BDEA  B4D8               	btfsc	status,2,c
  5540   00BDEC  EFFA  F05E         	goto	u9641
  5541   00BDF0  EFFC  F05E         	goto	u9640
  5542   00BDF4                     u9641:
  5543   00BDF4  EFFE  F05E         	goto	l7289
  5544   00BDF8                     u9640:
  5545   00BDF8  EF4B  F05E         	goto	l7241
  5546   00BDFC                     l7289:
  5547                           
  5548                           ;mcc_generated_files/fatfs/ff.c: 2975:    i = 8; ni = 11;
  5549   00BDFC  0E00               	movlw	0
  5550   00BDFE  6E19               	movwf	(create_name@i+1)^0,c
  5551   00BE00  0E08               	movlw	8
  5552   00BE02  6E18               	movwf	create_name@i^0,c
  5553   00BE04  0E00               	movlw	0
  5554   00BE06  6E15               	movwf	(create_name@ni+1)^0,c
  5555   00BE08  0E0B               	movlw	11
  5556   00BE0A  6E14               	movwf	create_name@ni^0,c
  5557                           
  5558                           ;mcc_generated_files/fatfs/ff.c: 2976:    continue;
  5559   00BE0C  EF79  F05E         	goto	l7259
  5560   00BE10                     l7291:
  5561                           
  5562                           ;mcc_generated_files/fatfs/ff.c: 2983:   if (c >= 0x80) {
  5563   00BE10  0E7F               	movlw	127
  5564   00BE12  641E               	cpfsgt	create_name@c^0,c
  5565   00BE14  EF0E  F05F         	goto	u9651
  5566   00BE18  EF10  F05F         	goto	u9650
  5567   00BE1C                     u9651:
  5568   00BE1C  EF20  F05F         	goto	l7295
  5569   00BE20                     u9650:
  5570   00BE20                     
  5571                           ;mcc_generated_files/fatfs/ff.c: 2984:    c = ExCvt[c & 0x7F];
  5572   00BE20  501E               	movf	create_name@c^0,w,c
  5573   00BE22  0B7F               	andlw	127
  5574   00BE24  6E0D               	movwf	??_create_name^0,c
  5575   00BE26  6A0E               	clrf	(??_create_name+1)^0,c
  5576   00BE28  0EBB               	movlw	low _ExCvt
  5577   00BE2A  240D               	addwf	??_create_name^0,w,c
  5578   00BE2C  6EF6               	movwf	tblptrl,c
  5579   00BE2E  0EFE               	movlw	high _ExCvt
  5580   00BE30  200E               	addwfc	(??_create_name+1)^0,w,c
  5581   00BE32  6EF7               	movwf	tblptrh,c
  5582   00BE34                     	if	1	;There are 3 active tblptr bytes
  5583   00BE34  6AF8               	clrf	tblptru,c
  5584   00BE36  0E00               	movlw	low (__mediumconst shr (0+16))
  5585   00BE38  22F8               	addwfc	tblptru,f,c
  5586   00BE3A                     	endif
  5587   00BE3A  0008               	tblrd		*
  5588   00BE3C  CFF5 F01E          	movff	tablat,create_name@c
  5589   00BE40                     l7295:
  5590                           
  5591                           ;mcc_generated_files/fatfs/ff.c: 2987:   if (dbc_1st(c)) {
  5592   00BE40  501E               	movf	create_name@c^0,w,c
  5593   00BE42  EC59  F045         	call	_dbc_1st
  5594   00BE46  5001               	movf	?_dbc_1st^0,w,c
  5595   00BE48  1002               	iorwf	(?_dbc_1st+1)^0,w,c
  5596   00BE4A  B4D8               	btfsc	status,2,c
  5597   00BE4C  EF2A  F05F         	goto	u9661
  5598   00BE50  EF2C  F05F         	goto	u9660
  5599   00BE54                     u9661:
  5600   00BE54  EF71  F05F         	goto	l7315
  5601   00BE58                     u9660:
  5602   00BE58                     
  5603                           ;mcc_generated_files/fatfs/ff.c: 2988:    d = (BYTE)p[si++];
  5604   00BE58  501C               	movf	create_name@si^0,w,c
  5605   00BE5A  2416               	addwf	create_name@p^0,w,c
  5606   00BE5C  6E0D               	movwf	??_create_name^0,c
  5607   00BE5E  501D               	movf	(create_name@si+1)^0,w,c
  5608   00BE60  2017               	addwfc	(create_name@p+1)^0,w,c
  5609   00BE62  6E0E               	movwf	(??_create_name+1)^0,c
  5610   00BE64  C00D  FFF6         	movff	??_create_name,tblptrl
  5611   00BE68  C00E  FFF7         	movff	??_create_name+1,tblptrh
  5612   00BE6C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5613   00BE6C  6AF8               	clrf	tblptru,c
  5614   00BE6E                     	endif
  5615   00BE6E                     	if	0	;tblptru may be non-zero
  5616   00BE6E                     	endif
  5617   00BE6E  0008               	tblrd		*
  5618   00BE70  CFF5 F013          	movff	tablat,create_name@d
  5619   00BE74  4A1C               	infsnz	create_name@si^0,f,c
  5620   00BE76  2A1D               	incf	(create_name@si+1)^0,f,c
  5621   00BE78                     
  5622                           ;mcc_generated_files/fatfs/ff.c: 2989:    if (!dbc_2nd(d) || i >= ni - 1) return FR_INVA
      +                          LID_NAME;
  5623   00BE78  5013               	movf	create_name@d^0,w,c
  5624   00BE7A  EC5E  F045         	call	_dbc_2nd
  5625   00BE7E  5001               	movf	?_dbc_2nd^0,w,c
  5626   00BE80  1002               	iorwf	(?_dbc_2nd+1)^0,w,c
  5627   00BE82  B4D8               	btfsc	status,2,c
  5628   00BE84  EF46  F05F         	goto	u9671
  5629   00BE88  EF48  F05F         	goto	u9670
  5630   00BE8C                     u9671:
  5631   00BE8C  EF4B  F05E         	goto	l7241
  5632   00BE90                     u9670:
  5633   00BE90  0EFF               	movlw	255
  5634   00BE92  2414               	addwf	create_name@ni^0,w,c
  5635   00BE94  6E0D               	movwf	??_create_name^0,c
  5636   00BE96  0EFF               	movlw	255
  5637   00BE98  2015               	addwfc	(create_name@ni+1)^0,w,c
  5638   00BE9A  6E0E               	movwf	(??_create_name+1)^0,c
  5639   00BE9C  500D               	movf	??_create_name^0,w,c
  5640   00BE9E  5C18               	subwf	create_name@i^0,w,c
  5641   00BEA0  500E               	movf	(??_create_name+1)^0,w,c
  5642   00BEA2  5819               	subwfb	(create_name@i+1)^0,w,c
  5643   00BEA4  A0D8               	btfss	status,0,c
  5644   00BEA6  EF57  F05F         	goto	u9681
  5645   00BEAA  EF59  F05F         	goto	u9680
  5646   00BEAE                     u9681:
  5647   00BEAE  EF5B  F05F         	goto	l7309
  5648   00BEB2                     u9680:
  5649   00BEB2  EF4B  F05E         	goto	l7241
  5650   00BEB6                     l7309:
  5651                           
  5652                           ;mcc_generated_files/fatfs/ff.c: 2990:    sfn[i++] = c;
  5653   00BEB6  5018               	movf	create_name@i^0,w,c
  5654   00BEB8  241A               	addwf	create_name@sfn^0,w,c
  5655   00BEBA  6ED9               	movwf	fsr2l,c
  5656   00BEBC  5019               	movf	(create_name@i+1)^0,w,c
  5657   00BEBE  201B               	addwfc	(create_name@sfn+1)^0,w,c
  5658   00BEC0  6EDA               	movwf	fsr2h,c
  5659   00BEC2  C01E  FFDF         	movff	create_name@c,indf2
  5660   00BEC6  4A18               	infsnz	create_name@i^0,f,c
  5661   00BEC8  2A19               	incf	(create_name@i+1)^0,f,c
  5662   00BECA                     
  5663                           ;mcc_generated_files/fatfs/ff.c: 2991:    sfn[i++] = d;
  5664   00BECA  5018               	movf	create_name@i^0,w,c
  5665   00BECC  241A               	addwf	create_name@sfn^0,w,c
  5666   00BECE  6ED9               	movwf	fsr2l,c
  5667   00BED0  5019               	movf	(create_name@i+1)^0,w,c
  5668   00BED2  201B               	addwfc	(create_name@sfn+1)^0,w,c
  5669   00BED4  6EDA               	movwf	fsr2h,c
  5670   00BED6  C013  FFDF         	movff	create_name@d,indf2
  5671   00BEDA  4A18               	infsnz	create_name@i^0,f,c
  5672   00BEDC  2A19               	incf	(create_name@i+1)^0,f,c
  5673                           
  5674                           ;mcc_generated_files/fatfs/ff.c: 2992:   } else {
  5675   00BEDE  EF79  F05E         	goto	l7259
  5676   00BEE2                     l7315:
  5677                           
  5678                           ;mcc_generated_files/fatfs/ff.c: 2993:    if (chk_chr("\"*+,:;<=>\?[]|\x7F", c)) return 
      +                          FR_INVALID_NAME;
  5679   00BEE2  0EBF               	movlw	low STR_7
  5680   00BEE4  6E01               	movwf	chk_chr@str^0,c
  5681   00BEE6  0EFF               	movlw	high STR_7
  5682   00BEE8  6E02               	movwf	(chk_chr@str+1)^0,c
  5683   00BEEA  C01E  F003         	movff	create_name@c,chk_chr@chr
  5684   00BEEE  6A04               	clrf	(chk_chr@chr+1)^0,c
  5685   00BEF0  EC1D  F047         	call	_chk_chr	;wreg free
  5686   00BEF4  5001               	movf	?_chk_chr^0,w,c
  5687   00BEF6  1002               	iorwf	(?_chk_chr+1)^0,w,c
  5688   00BEF8  B4D8               	btfsc	status,2,c
  5689   00BEFA  EF81  F05F         	goto	u9691
  5690   00BEFE  EF83  F05F         	goto	u9690
  5691   00BF02                     u9691:
  5692   00BF02  EF85  F05F         	goto	l7321
  5693   00BF06                     u9690:
  5694   00BF06  EF4B  F05E         	goto	l7241
  5695   00BF0A                     l7321:
  5696                           
  5697                           ;mcc_generated_files/fatfs/ff.c: 2994:    if (((c) >= 'a' && (c) <= 'z')) c -= 0x20;
  5698   00BF0A  0E60               	movlw	96
  5699   00BF0C  641E               	cpfsgt	create_name@c^0,c
  5700   00BF0E  EF8B  F05F         	goto	u9701
  5701   00BF12  EF8D  F05F         	goto	u9700
  5702   00BF16                     u9701:
  5703   00BF16  EF97  F05F         	goto	l7327
  5704   00BF1A                     u9700:
  5705   00BF1A  0E7B               	movlw	123
  5706   00BF1C  601E               	cpfslt	create_name@c^0,c
  5707   00BF1E  EF93  F05F         	goto	u9711
  5708   00BF22  EF95  F05F         	goto	u9710
  5709   00BF26                     u9711:
  5710   00BF26  EF97  F05F         	goto	l7327
  5711   00BF2A                     u9710:
  5712   00BF2A  0E20               	movlw	32
  5713   00BF2C  5E1E               	subwf	create_name@c^0,f,c
  5714   00BF2E                     l7327:
  5715                           
  5716                           ;mcc_generated_files/fatfs/ff.c: 2995:    sfn[i++] = c;
  5717   00BF2E  5018               	movf	create_name@i^0,w,c
  5718   00BF30  241A               	addwf	create_name@sfn^0,w,c
  5719   00BF32  6ED9               	movwf	fsr2l,c
  5720   00BF34  5019               	movf	(create_name@i+1)^0,w,c
  5721   00BF36  201B               	addwfc	(create_name@sfn+1)^0,w,c
  5722   00BF38  6EDA               	movwf	fsr2h,c
  5723   00BF3A  C01E  FFDF         	movff	create_name@c,indf2
  5724   00BF3E  4A18               	infsnz	create_name@i^0,f,c
  5725   00BF40  2A19               	incf	(create_name@i+1)^0,f,c
  5726   00BF42  EF79  F05E         	goto	l7259
  5727   00BF46                     l7331:
  5728                           
  5729                           ;mcc_generated_files/fatfs/ff.c: 2998:  *path = p + si;
  5730   00BF46  501C               	movf	create_name@si^0,w,c
  5731   00BF48  2416               	addwf	create_name@p^0,w,c
  5732   00BF4A  6E0D               	movwf	??_create_name^0,c
  5733   00BF4C  501D               	movf	(create_name@si+1)^0,w,c
  5734   00BF4E  2017               	addwfc	(create_name@p+1)^0,w,c
  5735   00BF50  6E0E               	movwf	(??_create_name+1)^0,c
  5736   00BF52  C00B  FFD9         	movff	create_name@path,fsr2l
  5737   00BF56  C00C  FFDA         	movff	create_name@path+1,fsr2h
  5738   00BF5A  C00D  FFDE         	movff	??_create_name,postinc2
  5739   00BF5E  C00E  FFDD         	movff	??_create_name+1,postdec2
  5740   00BF62                     
  5741                           ;mcc_generated_files/fatfs/ff.c: 2999:  if (i == 0) return FR_INVALID_NAME;
  5742   00BF62  5018               	movf	create_name@i^0,w,c
  5743   00BF64  1019               	iorwf	(create_name@i+1)^0,w,c
  5744   00BF66  A4D8               	btfss	status,2,c
  5745   00BF68  EFB8  F05F         	goto	u9721
  5746   00BF6C  EFBA  F05F         	goto	u9720
  5747   00BF70                     u9721:
  5748   00BF70  EFBC  F05F         	goto	l7339
  5749   00BF74                     u9720:
  5750   00BF74  EF4B  F05E         	goto	l7241
  5751   00BF78                     l7339:
  5752                           
  5753                           ;mcc_generated_files/fatfs/ff.c: 3001:  if (sfn[0] == 0xE5) sfn[0] = 0x05;
  5754   00BF78  C01A  FFD9         	movff	create_name@sfn,fsr2l
  5755   00BF7C  C01B  FFDA         	movff	create_name@sfn+1,fsr2h
  5756   00BF80  0EE5               	movlw	229
  5757   00BF82  18DE               	xorwf	postinc2,w,c
  5758   00BF84  A4D8               	btfss	status,2,c
  5759   00BF86  EFC7  F05F         	goto	u9731
  5760   00BF8A  EFC9  F05F         	goto	u9730
  5761   00BF8E                     u9731:
  5762   00BF8E  EFCF  F05F         	goto	l7343
  5763   00BF92                     u9730:
  5764   00BF92  C01A  FFD9         	movff	create_name@sfn,fsr2l
  5765   00BF96  C01B  FFDA         	movff	create_name@sfn+1,fsr2h
  5766   00BF9A  0E05               	movlw	5
  5767   00BF9C  6EDF               	movwf	indf2,c
  5768   00BF9E                     l7343:
  5769                           
  5770                           ;mcc_generated_files/fatfs/ff.c: 3002:  sfn[11] = (c <= ' ') ? 0x04 : 0;
  5771   00BF9E  0E20               	movlw	32
  5772   00BFA0  641E               	cpfsgt	create_name@c^0,c
  5773   00BFA2  EFD5  F05F         	goto	u9741
  5774   00BFA6  EFD7  F05F         	goto	u9740
  5775   00BFAA                     u9741:
  5776   00BFAA  EFDD  F05F         	goto	l7347
  5777   00BFAE                     u9740:
  5778   00BFAE  0E00               	movlw	0
  5779   00BFB0  6E12               	movwf	(_create_name$2244+1)^0,c
  5780   00BFB2  0E00               	movlw	0
  5781   00BFB4  6E11               	movwf	_create_name$2244^0,c
  5782   00BFB6  EFE1  F05F         	goto	l7349
  5783   00BFBA                     l7347:
  5784   00BFBA  0E00               	movlw	0
  5785   00BFBC  6E12               	movwf	(_create_name$2244+1)^0,c
  5786   00BFBE  0E04               	movlw	4
  5787   00BFC0  6E11               	movwf	_create_name$2244^0,c
  5788   00BFC2                     l7349:
  5789   00BFC2  EE20 F00B          	lfsr	2,11
  5790   00BFC6  501A               	movf	create_name@sfn^0,w,c
  5791   00BFC8  26D9               	addwf	fsr2l,f,c
  5792   00BFCA  501B               	movf	(create_name@sfn+1)^0,w,c
  5793   00BFCC  22DA               	addwfc	fsr2h,f,c
  5794   00BFCE  C011  FFDF         	movff	_create_name$2244,indf2
  5795   00BFD2  EF76  F05E         	goto	l7255
  5796   00BFD6                     l826:
  5797   00BFD6  0012               	return		;funcret
  5798   00BFD8                     __end_of_create_name:
  5799                           	callstack 0
  5800                           
  5801 ;; *************** function _dbc_2nd *****************
  5802 ;; Defined at:
  5803 ;;		line 713 in file "mcc_generated_files/fatfs/ff.c"
  5804 ;; Parameters:    Size  Location     Type
  5805 ;;  c               1    wreg     unsigned char 
  5806 ;; Auto vars:     Size  Location     Type
  5807 ;;  c               1    2[COMRAM] unsigned char 
  5808 ;; Return value:  Size  Location     Type
  5809 ;;                  2    0[COMRAM] int 
  5810 ;; Registers used:
  5811 ;;		wreg, status,2
  5812 ;; Tracked objects:
  5813 ;;		On entry : 0/0
  5814 ;;		On exit  : 0/0
  5815 ;;		Unchanged: 0/0
  5816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5817 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5818 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5820 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5821 ;;Total ram usage:        3 bytes
  5822 ;; Hardware stack levels used: 1
  5823 ;; This function calls:
  5824 ;;		Nothing
  5825 ;; This function is called by:
  5826 ;;		_create_name
  5827 ;; This function uses a non-reentrant model
  5828 ;;
  5829                           
  5830                           	psect	text8
  5831   008ABC                     __ptext8:
  5832                           	callstack 0
  5833   008ABC                     _dbc_2nd:
  5834                           	callstack 27
  5835   008ABC  0E00               	movlw	0
  5836   008ABE  6E02               	movwf	(?_dbc_2nd+1)^0,c
  5837   008AC0  0E00               	movlw	0
  5838   008AC2  6E01               	movwf	?_dbc_2nd^0,c
  5839   008AC4  0012               	return		;funcret
  5840   008AC6                     __end_of_dbc_2nd:
  5841                           	callstack 0
  5842                           
  5843 ;; *************** function _dbc_1st *****************
  5844 ;; Defined at:
  5845 ;;		line 693 in file "mcc_generated_files/fatfs/ff.c"
  5846 ;; Parameters:    Size  Location     Type
  5847 ;;  c               1    wreg     unsigned char 
  5848 ;; Auto vars:     Size  Location     Type
  5849 ;;  c               1    2[COMRAM] unsigned char 
  5850 ;; Return value:  Size  Location     Type
  5851 ;;                  2    0[COMRAM] int 
  5852 ;; Registers used:
  5853 ;;		wreg, status,2
  5854 ;; Tracked objects:
  5855 ;;		On entry : 0/0
  5856 ;;		On exit  : 0/0
  5857 ;;		Unchanged: 0/0
  5858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5859 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5860 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5862 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5863 ;;Total ram usage:        3 bytes
  5864 ;; Hardware stack levels used: 1
  5865 ;; This function calls:
  5866 ;;		Nothing
  5867 ;; This function is called by:
  5868 ;;		_create_name
  5869 ;; This function uses a non-reentrant model
  5870 ;;
  5871                           
  5872                           	psect	text9
  5873   008AB2                     __ptext9:
  5874                           	callstack 0
  5875   008AB2                     _dbc_1st:
  5876                           	callstack 27
  5877   008AB2  0E00               	movlw	0
  5878   008AB4  6E02               	movwf	(?_dbc_1st+1)^0,c
  5879   008AB6  0E00               	movlw	0
  5880   008AB8  6E01               	movwf	?_dbc_1st^0,c
  5881   008ABA  0012               	return		;funcret
  5882   008ABC                     __end_of_dbc_1st:
  5883                           	callstack 0
  5884                           
  5885 ;; *************** function _chk_chr *****************
  5886 ;; Defined at:
  5887 ;;		line 685 in file "mcc_generated_files/fatfs/ff.c"
  5888 ;; Parameters:    Size  Location     Type
  5889 ;;  str             2    0[COMRAM] PTR const unsigned char 
  5890 ;;		 -> STR_8(15), 
  5891 ;;  chr             2    2[COMRAM] int 
  5892 ;; Auto vars:     Size  Location     Type
  5893 ;;		None
  5894 ;; Return value:  Size  Location     Type
  5895 ;;                  2    0[COMRAM] int 
  5896 ;; Registers used:
  5897 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  5898 ;; Tracked objects:
  5899 ;;		On entry : 0/0
  5900 ;;		On exit  : 0/0
  5901 ;;		Unchanged: 0/0
  5902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5903 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5905 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5906 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5907 ;;Total ram usage:        6 bytes
  5908 ;; Hardware stack levels used: 1
  5909 ;; This function calls:
  5910 ;;		Nothing
  5911 ;; This function is called by:
  5912 ;;		_create_name
  5913 ;; This function uses a non-reentrant model
  5914 ;;
  5915                           
  5916                           	psect	text10
  5917   008E3A                     __ptext10:
  5918                           	callstack 0
  5919   008E3A                     _chk_chr:
  5920                           	callstack 27
  5921   008E3A                     
  5922                           ;mcc_generated_files/fatfs/ff.c: 685: static int chk_chr (const char* str, int chr);mcc_
      +                          generated_files/fatfs/ff.c: 686: {;mcc_generated_files/fatfs/ff.c: 687:  while (*str && 
      +                          *str != chr) str++;
  5923   008E3A  EF21  F047         	goto	l6875
  5924   008E3E                     l6873:
  5925   008E3E  4A01               	infsnz	chk_chr@str^0,f,c
  5926   008E40  2A02               	incf	(chk_chr@str+1)^0,f,c
  5927   008E42                     l6875:
  5928   008E42  C001  FFF6         	movff	chk_chr@str,tblptrl
  5929   008E46  C002  FFF7         	movff	chk_chr@str+1,tblptrh
  5930   008E4A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5931   008E4A  6AF8               	clrf	tblptru,c
  5932   008E4C                     	endif
  5933   008E4C                     	if	0	;tblptru may be non-zero
  5934   008E4C                     	endif
  5935   008E4C  0008               	tblrd		*
  5936   008E4E  50F5               	movf	tablat,w,c
  5937   008E50  0900               	iorlw	0
  5938   008E52  B4D8               	btfsc	status,2,c
  5939   008E54  EF2E  F047         	goto	u8941
  5940   008E58  EF30  F047         	goto	u8940
  5941   008E5C                     u8941:
  5942   008E5C  EF45  F047         	goto	l6879
  5943   008E60                     u8940:
  5944   008E60  C001  FFF6         	movff	chk_chr@str,tblptrl
  5945   008E64  C002  FFF7         	movff	chk_chr@str+1,tblptrh
  5946   008E68                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5947   008E68  6AF8               	clrf	tblptru,c
  5948   008E6A                     	endif
  5949   008E6A                     	if	0	;tblptru may be non-zero
  5950   008E6A                     	endif
  5951   008E6A  0008               	tblrd		*
  5952   008E6C  50F5               	movf	tablat,w,c
  5953   008E6E  6E05               	movwf	??_chk_chr^0,c
  5954   008E70  6A06               	clrf	(??_chk_chr+1)^0,c
  5955   008E72  5003               	movf	chk_chr@chr^0,w,c
  5956   008E74  1805               	xorwf	??_chk_chr^0,w,c
  5957   008E76  E107               	bnz	u8951
  5958   008E78  5004               	movf	(chk_chr@chr+1)^0,w,c
  5959   008E7A  1806               	xorwf	(??_chk_chr+1)^0,w,c
  5960   008E7C  A4D8               	btfss	status,2,c
  5961   008E7E  EF43  F047         	goto	u8951
  5962   008E82  EF45  F047         	goto	u8950
  5963   008E86                     u8951:
  5964   008E86  EF1F  F047         	goto	l6873
  5965   008E8A                     u8950:
  5966   008E8A                     l6879:
  5967                           
  5968                           ;mcc_generated_files/fatfs/ff.c: 688:  return *str;
  5969   008E8A  C001  FFF6         	movff	chk_chr@str,tblptrl
  5970   008E8E  C002  FFF7         	movff	chk_chr@str+1,tblptrh
  5971   008E92                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5972   008E92  6AF8               	clrf	tblptru,c
  5973   008E94                     	endif
  5974   008E94                     	if	0	;tblptru may be non-zero
  5975   008E94                     	endif
  5976   008E94  0008               	tblrd		*
  5977   008E96  50F5               	movf	tablat,w,c
  5978   008E98  6E01               	movwf	?_chk_chr^0,c
  5979   008E9A  6A02               	clrf	(?_chk_chr+1)^0,c
  5980   008E9C  0012               	return		;funcret
  5981   008E9E                     __end_of_chk_chr:
  5982                           	callstack 0
  5983                           
  5984 ;; *************** function _dir_register *****************
  5985 ;; Defined at:
  5986 ;;		line 2484 in file "mcc_generated_files/fatfs/ff.c"
  5987 ;; Parameters:    Size  Location     Type
  5988 ;;  dp              2  123[BANK0 ] PTR struct .
  5989 ;;		 -> f_rename@djn(40), f_mkdir@dj(40), f_open@dj(40), 
  5990 ;; Auto vars:     Size  Location     Type
  5991 ;;  fs              2  125[BANK0 ] PTR struct .
  5992 ;;		 -> drive(563), NULL(0), FatFs(563), 
  5993 ;;  res             1  127[BANK0 ] enum E68
  5994 ;; Return value:  Size  Location     Type
  5995 ;;                  1    wreg      enum E68
  5996 ;; Registers used:
  5997 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  5998 ;; Tracked objects:
  5999 ;;		On entry : 0/0
  6000 ;;		On exit  : 0/0
  6001 ;;		Unchanged: 0/0
  6002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6003 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6004 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6006 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6007 ;;Total ram usage:        5 bytes
  6008 ;; Hardware stack levels used: 1
  6009 ;; Hardware stack levels required when called: 11
  6010 ;; This function calls:
  6011 ;;		_dir_alloc
  6012 ;;		_mem_cpy
  6013 ;;		_mem_set
  6014 ;;		_move_window
  6015 ;; This function is called by:
  6016 ;;		_f_open
  6017 ;;		_f_mkdir
  6018 ;;		_f_rename
  6019 ;; This function uses a non-reentrant model
  6020 ;;
  6021                           
  6022                           	psect	text11
  6023   0097EE                     __ptext11:
  6024                           	callstack 0
  6025   0097EE                     _dir_register:
  6026                           	callstack 18
  6027   0097EE                     
  6028                           ;mcc_generated_files/fatfs/ff.c: 2485:  FFDIR* dp;mcc_generated_files/fatfs/ff.c: 2487: 
      +                          {;mcc_generated_files/fatfs/ff.c: 2488:  FRESULT res;;mcc_generated_files/fatfs/ff.c: 24
      +                          89:  FATFS *fs = dp->obj.fs;
  6029   0097EE  C0DB  FFD9         	movff	dir_register@dp,fsr2l
  6030   0097F2  C0DC  FFDA         	movff	dir_register@dp+1,fsr2h
  6031   0097F6  CFDE F0DD          	movff	postinc2,dir_register@fs
  6032   0097FA  CFDD F0DE          	movff	postdec2,dir_register@fs+1
  6033   0097FE                     
  6034                           ;mcc_generated_files/fatfs/ff.c: 2561:  res = dir_alloc(dp, 1);
  6035   0097FE  C0DB  F0CF         	movff	dir_register@dp,dir_alloc@dp
  6036   009802  C0DC  F0D0         	movff	dir_register@dp+1,dir_alloc@dp+1
  6037   009806  0E00               	movlw	0
  6038   009808  0100               	movlb	0	; () banked
  6039   00980A  6FD2               	movwf	(dir_alloc@nent+1)& (0+255),b
  6040   00980C  0E01               	movlw	1
  6041   00980E  6FD1               	movwf	dir_alloc@nent& (0+255),b
  6042   009810  ECC3  F04E         	call	_dir_alloc	;wreg free
  6043   009814  0100               	movlb	0	; () banked
  6044   009816  6FDF               	movwf	dir_register@res& (0+255),b
  6045   009818                     
  6046                           ; BSR set to: 0
  6047                           ;mcc_generated_files/fatfs/ff.c: 2566:  if (res == FR_OK) {
  6048   009818  51DF               	movf	dir_register@res& (0+255),w,b
  6049   00981A  A4D8               	btfss	status,2,c
  6050   00981C  EF12  F04C         	goto	u10091
  6051   009820  EF14  F04C         	goto	u10090
  6052   009824                     u10091:
  6053   009824  EF66  F04C         	goto	l7579
  6054   009828                     u10090:
  6055   009828                     
  6056                           ; BSR set to: 0
  6057                           ;mcc_generated_files/fatfs/ff.c: 2567:   res = move_window(fs, dp->sect);
  6058   009828  C0DD  F070         	movff	dir_register@fs,move_window@fs
  6059   00982C  C0DE  F071         	movff	dir_register@fs+1,move_window@fs+1
  6060   009830  EE20 F016          	lfsr	2,22
  6061   009834  51DB               	movf	dir_register@dp& (0+255),w,b
  6062   009836  26D9               	addwf	fsr2l,f,c
  6063   009838  51DC               	movf	(dir_register@dp+1)& (0+255),w,b
  6064   00983A  22DA               	addwfc	fsr2h,f,c
  6065   00983C  CFDE F072          	movff	postinc2,move_window@sector
  6066   009840  CFDE F073          	movff	postinc2,move_window@sector+1
  6067   009844  CFDE F074          	movff	postinc2,move_window@sector+2
  6068   009848  CFDE F075          	movff	postinc2,move_window@sector+3
  6069   00984C  ECBF  F04A         	call	_move_window	;wreg free
  6070   009850  0100               	movlb	0	; () banked
  6071   009852  6FDF               	movwf	dir_register@res& (0+255),b
  6072   009854                     
  6073                           ; BSR set to: 0
  6074                           ;mcc_generated_files/fatfs/ff.c: 2568:   if (res == FR_OK) {
  6075   009854  51DF               	movf	dir_register@res& (0+255),w,b
  6076   009856  A4D8               	btfss	status,2,c
  6077   009858  EF30  F04C         	goto	u10101
  6078   00985C  EF32  F04C         	goto	u10100
  6079   009860                     u10101:
  6080   009860  EF66  F04C         	goto	l7579
  6081   009864                     u10100:
  6082   009864                     
  6083                           ; BSR set to: 0
  6084                           ;mcc_generated_files/fatfs/ff.c: 2569:    mem_set(dp->dir, 0, 32);
  6085   009864  EE20 F01A          	lfsr	2,26
  6086   009868  51DB               	movf	dir_register@dp& (0+255),w,b
  6087   00986A  26D9               	addwf	fsr2l,f,c
  6088   00986C  51DC               	movf	(dir_register@dp+1)& (0+255),w,b
  6089   00986E  22DA               	addwfc	fsr2h,f,c
  6090   009870  CFDE F001          	movff	postinc2,mem_set@dst
  6091   009874  CFDD F002          	movff	postdec2,mem_set@dst+1
  6092   009878  0E00               	movlw	0
  6093   00987A  6E04               	movwf	(mem_set@val+1)^0,c
  6094   00987C  0E00               	movlw	0
  6095   00987E  6E03               	movwf	mem_set@val^0,c
  6096   009880  0E00               	movlw	0
  6097   009882  6E06               	movwf	(mem_set@cnt+1)^0,c
  6098   009884  0E20               	movlw	32
  6099   009886  6E05               	movwf	mem_set@cnt^0,c
  6100   009888  ECCB  F045         	call	_mem_set	;wreg free
  6101   00988C                     
  6102                           ;mcc_generated_files/fatfs/ff.c: 2570:    mem_cpy(dp->dir + 0, dp->fn, 11);
  6103   00988C  0100               	movlb	0	; () banked
  6104   00988E  EE20 F01A          	lfsr	2,26
  6105   009892  51DB               	movf	dir_register@dp& (0+255),w,b
  6106   009894  26D9               	addwf	fsr2l,f,c
  6107   009896  51DC               	movf	(dir_register@dp+1)& (0+255),w,b
  6108   009898  22DA               	addwfc	fsr2h,f,c
  6109   00989A  CFDE F001          	movff	postinc2,mem_cpy@dst
  6110   00989E  CFDD F002          	movff	postdec2,mem_cpy@dst+1
  6111   0098A2  0E1C               	movlw	28
  6112   0098A4  25DB               	addwf	dir_register@dp& (0+255),w,b
  6113   0098A6  6E03               	movwf	mem_cpy@src^0,c
  6114   0098A8  0E00               	movlw	0
  6115   0098AA  21DC               	addwfc	(dir_register@dp+1)& (0+255),w,b
  6116   0098AC  6E04               	movwf	(mem_cpy@src+1)^0,c
  6117   0098AE  0E00               	movlw	0
  6118   0098B0  6E06               	movwf	(mem_cpy@cnt+1)^0,c
  6119   0098B2  0E0B               	movlw	11
  6120   0098B4  6E05               	movwf	mem_cpy@cnt^0,c
  6121   0098B6  ECBA  F047         	call	_mem_cpy	;wreg free
  6122   0098BA                     
  6123                           ;mcc_generated_files/fatfs/ff.c: 2574:    fs->wflag = 1;
  6124   0098BA  0100               	movlb	0	; () banked
  6125   0098BC  EE20 F003          	lfsr	2,3
  6126   0098C0  51DD               	movf	dir_register@fs& (0+255),w,b
  6127   0098C2  26D9               	addwf	fsr2l,f,c
  6128   0098C4  51DE               	movf	(dir_register@fs+1)& (0+255),w,b
  6129   0098C6  22DA               	addwfc	fsr2h,f,c
  6130   0098C8  0E01               	movlw	1
  6131   0098CA  6EDF               	movwf	indf2,c
  6132   0098CC                     l7579:
  6133                           
  6134                           ; BSR set to: 0
  6135                           ;mcc_generated_files/fatfs/ff.c: 2578:  return res;
  6136   0098CC  51DF               	movf	dir_register@res& (0+255),w,b
  6137   0098CE                     
  6138                           ; BSR set to: 0
  6139   0098CE  0012               	return		;funcret
  6140   0098D0                     __end_of_dir_register:
  6141                           	callstack 0
  6142                           
  6143 ;; *************** function _mem_cpy *****************
  6144 ;; Defined at:
  6145 ;;		line 646 in file "mcc_generated_files/fatfs/ff.c"
  6146 ;; Parameters:    Size  Location     Type
  6147 ;;  dst             2    0[COMRAM] PTR void 
  6148 ;;		 -> FatFs.win(512), Fil.buf(512), drive.win(512), file.buf(512), 
  6149 ;;		 -> f_rename@djn(40), f_rename@buf(32), file(546), drive(563), 
  6150 ;;		 -> NULL(0), Fil(546), FatFs(563), 
  6151 ;;  src             2    2[COMRAM] PTR const void 
  6152 ;;		 -> FatFs.win(512), drive.win(512), djn.fn(12), f_rename@djn(40), 
  6153 ;;		 -> f_rename@buf(32), f_rename@djo(40), dj.fn(12), f_mkdir@dj(40), 
  6154 ;;		 -> dj.fn(12), f_open@dj(40), drive(563), FatFsDemo_Tasks@data(13), 
  6155 ;;		 -> NULL(0), STR_3(15), FatFs(563), 
  6156 ;;  cnt             2    4[COMRAM] unsigned int 
  6157 ;; Auto vars:     Size  Location     Type
  6158 ;;  s               2    8[COMRAM] PTR const unsigned char 
  6159 ;;		 -> FatFs.win(512), drive.win(512), djn.fn(12), f_rename@djn(40), 
  6160 ;;		 -> f_rename@buf(32), f_rename@djo(40), dj.fn(12), f_mkdir@dj(40), 
  6161 ;;		 -> dj.fn(12), f_open@dj(40), drive(563), FatFsDemo_Tasks@data(13), 
  6162 ;;		 -> NULL(0), STR_3(15), FatFs(563), 
  6163 ;;  d               2    6[COMRAM] PTR unsigned char 
  6164 ;;		 -> FatFs.win(512), Fil.buf(512), drive.win(512), file.buf(512), 
  6165 ;;		 -> f_rename@djn(40), f_rename@buf(32), file(546), drive(563), 
  6166 ;;		 -> NULL(0), Fil(546), FatFs(563), 
  6167 ;; Return value:  Size  Location     Type
  6168 ;;                  1    wreg      void 
  6169 ;; Registers used:
  6170 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6171 ;; Tracked objects:
  6172 ;;		On entry : 0/0
  6173 ;;		On exit  : 0/0
  6174 ;;		Unchanged: 0/0
  6175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6176 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6177 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6179 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6180 ;;Total ram usage:       10 bytes
  6181 ;; Hardware stack levels used: 1
  6182 ;; This function calls:
  6183 ;;		Nothing
  6184 ;; This function is called by:
  6185 ;;		_dir_register
  6186 ;;		_f_write
  6187 ;;		_f_read
  6188 ;;		_f_mkdir
  6189 ;;		_f_rename
  6190 ;; This function uses a non-reentrant model
  6191 ;;
  6192                           
  6193                           	psect	text12
  6194   008F74                     __ptext12:
  6195                           	callstack 0
  6196   008F74                     _mem_cpy:
  6197                           	callstack 29
  6198   008F74                     
  6199                           ;mcc_generated_files/fatfs/ff.c: 646: static void mem_cpy (void* dst, const void* src, U
      +                          INT cnt);mcc_generated_files/fatfs/ff.c: 647: {;mcc_generated_files/fatfs/ff.c: 648:  BY
      +                          TE *d = (BYTE*)dst;
  6200   008F74  C001  F007         	movff	mem_cpy@dst,mem_cpy@d
  6201   008F78  C002  F008         	movff	mem_cpy@dst+1,mem_cpy@d+1
  6202                           
  6203                           ;mcc_generated_files/fatfs/ff.c: 649:  const BYTE *s = (const BYTE*)src;
  6204   008F7C  C003  F009         	movff	mem_cpy@src,mem_cpy@s
  6205   008F80  C004  F00A         	movff	mem_cpy@src+1,mem_cpy@s+1
  6206                           
  6207                           ;mcc_generated_files/fatfs/ff.c: 651:  if (cnt != 0) {
  6208   008F84  5005               	movf	mem_cpy@cnt^0,w,c
  6209   008F86  1006               	iorwf	(mem_cpy@cnt+1)^0,w,c
  6210   008F88  B4D8               	btfsc	status,2,c
  6211   008F8A  EFC9  F047         	goto	u9271
  6212   008F8E  EFCB  F047         	goto	u9270
  6213   008F92                     u9271:
  6214   008F92  EFF1  F047         	goto	l542
  6215   008F96                     u9270:
  6216   008F96                     l7093:
  6217                           
  6218                           ;mcc_generated_files/fatfs/ff.c: 653:    *d++ = *s++;
  6219   008F96  C009  FFF6         	movff	mem_cpy@s,tblptrl
  6220   008F9A  C00A  FFF7         	movff	mem_cpy@s+1,tblptrh
  6221   008F9E  0E00               	movlw	low (__mediumconst shr (0+16))
  6222   008FA0  6EF8               	movwf	tblptru,c
  6223   008FA2  C007  FFD9         	movff	mem_cpy@d,fsr2l
  6224   008FA6  C008  FFDA         	movff	mem_cpy@d+1,fsr2h
  6225   008FAA  0E0F               	movlw	(high __ramtop+-1)
  6226   008FAC  64F7               	cpfsgt	tblptrh,c
  6227   008FAE  D003               	bra	u9287
  6228   008FB0  0008               	tblrd		*
  6229   008FB2  50F5               	movf	tablat,w,c
  6230   008FB4  D005               	bra	u9280
  6231   008FB6                     u9287:
  6232   008FB6  CFF6 FFE9          	movff	tblptrl,fsr0l
  6233   008FBA  CFF7 FFEA          	movff	tblptrh,fsr0h
  6234   008FBE  50EF               	movf	indf0,w,c
  6235   008FC0                     u9280:
  6236   008FC0  6EDF               	movwf	indf2,c
  6237   008FC2  4A09               	infsnz	mem_cpy@s^0,f,c
  6238   008FC4  2A0A               	incf	(mem_cpy@s+1)^0,f,c
  6239   008FC6  4A07               	infsnz	mem_cpy@d^0,f,c
  6240   008FC8  2A08               	incf	(mem_cpy@d+1)^0,f,c
  6241   008FCA                     
  6242                           ;mcc_generated_files/fatfs/ff.c: 654:   } while (--cnt);
  6243   008FCA  0605               	decf	mem_cpy@cnt^0,f,c
  6244   008FCC  A0D8               	btfss	status,0,c
  6245   008FCE  0606               	decf	(mem_cpy@cnt+1)^0,f,c
  6246   008FD0  5005               	movf	mem_cpy@cnt^0,w,c
  6247   008FD2  1006               	iorwf	(mem_cpy@cnt+1)^0,w,c
  6248   008FD4  A4D8               	btfss	status,2,c
  6249   008FD6  EFEF  F047         	goto	u9291
  6250   008FDA  EFF1  F047         	goto	u9290
  6251   008FDE                     u9291:
  6252   008FDE  EFCB  F047         	goto	l7093
  6253   008FE2                     u9290:
  6254   008FE2                     l542:
  6255   008FE2  0012               	return		;funcret
  6256   008FE4                     __end_of_mem_cpy:
  6257                           	callstack 0
  6258                           
  6259 ;; *************** function _dir_alloc *****************
  6260 ;; Defined at:
  6261 ;;		line 1783 in file "mcc_generated_files/fatfs/ff.c"
  6262 ;; Parameters:    Size  Location     Type
  6263 ;;  dp              2  111[BANK0 ] PTR struct .
  6264 ;;		 -> f_rename@djn(40), f_mkdir@dj(40), f_open@dj(40), 
  6265 ;;  nent            2  113[BANK0 ] unsigned int 
  6266 ;; Auto vars:     Size  Location     Type
  6267 ;;  n               2  120[BANK0 ] unsigned int 
  6268 ;;  fs              2  118[BANK0 ] PTR struct .
  6269 ;;		 -> drive(563), NULL(0), FatFs(563), 
  6270 ;;  res             1  122[BANK0 ] enum E68
  6271 ;; Return value:  Size  Location     Type
  6272 ;;                  1    wreg      enum E68
  6273 ;; Registers used:
  6274 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  6275 ;; Tracked objects:
  6276 ;;		On entry : 0/0
  6277 ;;		On exit  : 0/0
  6278 ;;		Unchanged: 0/0
  6279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6280 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6281 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6282 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6283 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6284 ;;Total ram usage:       12 bytes
  6285 ;; Hardware stack levels used: 1
  6286 ;; Hardware stack levels required when called: 10
  6287 ;; This function calls:
  6288 ;;		_dir_next
  6289 ;;		_dir_sdi
  6290 ;;		_move_window
  6291 ;; This function is called by:
  6292 ;;		_dir_register
  6293 ;; This function uses a non-reentrant model
  6294 ;;
  6295                           
  6296                           	psect	text13
  6297   009D86                     __ptext13:
  6298                           	callstack 0
  6299   009D86                     _dir_alloc:
  6300                           	callstack 18
  6301   009D86                     
  6302                           ;mcc_generated_files/fatfs/ff.c: 1784:  FFDIR* dp,;mcc_generated_files/fatfs/ff.c: 1785:
      +                            UINT nent;mcc_generated_files/fatfs/ff.c: 1787: {;mcc_generated_files/fatfs/ff.c: 1788
      +                          :  FRESULT res;;mcc_generated_files/fatfs/ff.c: 1789:  UINT n;;mcc_generated_files/fatfs
      +                          /ff.c: 1790:  FATFS *fs = dp->obj.fs;
  6303   009D86  C0CF  FFD9         	movff	dir_alloc@dp,fsr2l
  6304   009D8A  C0D0  FFDA         	movff	dir_alloc@dp+1,fsr2h
  6305   009D8E  CFDE F0D6          	movff	postinc2,dir_alloc@fs
  6306   009D92  CFDD F0D7          	movff	postdec2,dir_alloc@fs+1
  6307   009D96                     
  6308                           ;mcc_generated_files/fatfs/ff.c: 1793:  res = dir_sdi(dp, 0);
  6309   009D96  C0CF  F091         	movff	dir_alloc@dp,dir_sdi@dp
  6310   009D9A  C0D0  F092         	movff	dir_alloc@dp+1,dir_sdi@dp+1
  6311   009D9E  0E00               	movlw	0
  6312   009DA0  0100               	movlb	0	; () banked
  6313   009DA2  6F93               	movwf	dir_sdi@ofs& (0+255),b
  6314   009DA4  0E00               	movlw	0
  6315   009DA6  6F94               	movwf	(dir_sdi@ofs+1)& (0+255),b
  6316   009DA8  0E00               	movlw	0
  6317   009DAA  6F95               	movwf	(dir_sdi@ofs+2)& (0+255),b
  6318   009DAC  0E00               	movlw	0
  6319   009DAE  6F96               	movwf	(dir_sdi@ofs+3)& (0+255),b
  6320   009DB0  ECF2  F057         	call	_dir_sdi	;wreg free
  6321   009DB4  0100               	movlb	0	; () banked
  6322   009DB6  6FDA               	movwf	dir_alloc@res& (0+255),b
  6323   009DB8                     
  6324                           ; BSR set to: 0
  6325                           ;mcc_generated_files/fatfs/ff.c: 1794:  if (res == FR_OK) {
  6326   009DB8  51DA               	movf	dir_alloc@res& (0+255),w,b
  6327   009DBA  A4D8               	btfss	status,2,c
  6328   009DBC  EFE2  F04E         	goto	u9341
  6329   009DC0  EFE4  F04E         	goto	u9340
  6330   009DC4                     u9341:
  6331   009DC4  EF5D  F04F         	goto	l7151
  6332   009DC8                     u9340:
  6333   009DC8                     
  6334                           ; BSR set to: 0
  6335                           ;mcc_generated_files/fatfs/ff.c: 1795:   n = 0;
  6336   009DC8  0E00               	movlw	0
  6337   009DCA  6FD9               	movwf	(dir_alloc@n+1)& (0+255),b
  6338   009DCC  0E00               	movlw	0
  6339   009DCE  6FD8               	movwf	dir_alloc@n& (0+255),b
  6340   009DD0                     l7131:
  6341                           
  6342                           ; BSR set to: 0
  6343                           ;mcc_generated_files/fatfs/ff.c: 1797:    res = move_window(fs, dp->sect);
  6344   009DD0  C0D6  F070         	movff	dir_alloc@fs,move_window@fs
  6345   009DD4  C0D7  F071         	movff	dir_alloc@fs+1,move_window@fs+1
  6346   009DD8  EE20 F016          	lfsr	2,22
  6347   009DDC  51CF               	movf	dir_alloc@dp& (0+255),w,b
  6348   009DDE  26D9               	addwf	fsr2l,f,c
  6349   009DE0  51D0               	movf	(dir_alloc@dp+1)& (0+255),w,b
  6350   009DE2  22DA               	addwfc	fsr2h,f,c
  6351   009DE4  CFDE F072          	movff	postinc2,move_window@sector
  6352   009DE8  CFDE F073          	movff	postinc2,move_window@sector+1
  6353   009DEC  CFDE F074          	movff	postinc2,move_window@sector+2
  6354   009DF0  CFDE F075          	movff	postinc2,move_window@sector+3
  6355   009DF4  ECBF  F04A         	call	_move_window	;wreg free
  6356   009DF8  0100               	movlb	0	; () banked
  6357   009DFA  6FDA               	movwf	dir_alloc@res& (0+255),b
  6358   009DFC                     
  6359                           ; BSR set to: 0
  6360                           ;mcc_generated_files/fatfs/ff.c: 1798:    if (res != FR_OK) break;
  6361   009DFC  51DA               	movf	dir_alloc@res& (0+255),w,b
  6362   009DFE  B4D8               	btfsc	status,2,c
  6363   009E00  EF04  F04F         	goto	u9351
  6364   009E04  EF06  F04F         	goto	u9350
  6365   009E08                     u9351:
  6366   009E08  EF08  F04F         	goto	l7137
  6367   009E0C                     u9350:
  6368   009E0C  EF5D  F04F         	goto	l7151
  6369   009E10                     l7137:
  6370                           
  6371                           ; BSR set to: 0
  6372                           ;mcc_generated_files/fatfs/ff.c: 1802:    if (dp->dir[0] == 0xE5 || dp->dir[0] == 0) {
  6373   009E10  EE20 F01A          	lfsr	2,26
  6374   009E14  51CF               	movf	dir_alloc@dp& (0+255),w,b
  6375   009E16  26D9               	addwf	fsr2l,f,c
  6376   009E18  51D0               	movf	(dir_alloc@dp+1)& (0+255),w,b
  6377   009E1A  22DA               	addwfc	fsr2h,f,c
  6378   009E1C  CFDE F0D3          	movff	postinc2,??_dir_alloc
  6379   009E20  CFDD F0D4          	movff	postdec2,??_dir_alloc+1
  6380   009E24  C0D3  FFD9         	movff	??_dir_alloc,fsr2l
  6381   009E28  C0D4  FFDA         	movff	??_dir_alloc+1,fsr2h
  6382   009E2C  0EE5               	movlw	229
  6383   009E2E  18DE               	xorwf	postinc2,w,c
  6384   009E30  B4D8               	btfsc	status,2,c
  6385   009E32  EF1D  F04F         	goto	u9361
  6386   009E36  EF1F  F04F         	goto	u9360
  6387   009E3A                     u9361:
  6388   009E3A  EF35  F04F         	goto	l7141
  6389   009E3E                     u9360:
  6390   009E3E                     
  6391                           ; BSR set to: 0
  6392   009E3E  EE20 F01A          	lfsr	2,26
  6393   009E42  51CF               	movf	dir_alloc@dp& (0+255),w,b
  6394   009E44  26D9               	addwf	fsr2l,f,c
  6395   009E46  51D0               	movf	(dir_alloc@dp+1)& (0+255),w,b
  6396   009E48  22DA               	addwfc	fsr2h,f,c
  6397   009E4A  CFDE F0D3          	movff	postinc2,??_dir_alloc
  6398   009E4E  CFDD F0D4          	movff	postdec2,??_dir_alloc+1
  6399   009E52  C0D3  FFD9         	movff	??_dir_alloc,fsr2l
  6400   009E56  C0D4  FFDA         	movff	??_dir_alloc+1,fsr2h
  6401   009E5A  50DF               	movf	indf2,w,c
  6402   009E5C  A4D8               	btfss	status,2,c
  6403   009E5E  EF33  F04F         	goto	u9371
  6404   009E62  EF35  F04F         	goto	u9370
  6405   009E66                     u9371:
  6406   009E66  EF45  F04F         	goto	l7145
  6407   009E6A                     u9370:
  6408   009E6A                     l7141:
  6409                           
  6410                           ; BSR set to: 0
  6411                           ;mcc_generated_files/fatfs/ff.c: 1804:     if (++n == nent) break;
  6412   009E6A  4BD8               	infsnz	dir_alloc@n& (0+255),f,b
  6413   009E6C  2BD9               	incf	(dir_alloc@n+1)& (0+255),f,b
  6414   009E6E  51D1               	movf	dir_alloc@nent& (0+255),w,b
  6415   009E70  19D8               	xorwf	dir_alloc@n& (0+255),w,b
  6416   009E72  E107               	bnz	u9381
  6417   009E74  51D2               	movf	(dir_alloc@nent+1)& (0+255),w,b
  6418   009E76  19D9               	xorwf	(dir_alloc@n+1)& (0+255),w,b
  6419   009E78  A4D8               	btfss	status,2,c
  6420   009E7A  EF41  F04F         	goto	u9381
  6421   009E7E  EF43  F04F         	goto	u9380
  6422   009E82                     u9381:
  6423   009E82  EF49  F04F         	goto	l7147
  6424   009E86                     u9380:
  6425   009E86  EF5D  F04F         	goto	l7151
  6426   009E8A                     l7145:
  6427                           
  6428                           ; BSR set to: 0
  6429                           ;mcc_generated_files/fatfs/ff.c: 1806:     n = 0;
  6430   009E8A  0E00               	movlw	0
  6431   009E8C  6FD9               	movwf	(dir_alloc@n+1)& (0+255),b
  6432   009E8E  0E00               	movlw	0
  6433   009E90  6FD8               	movwf	dir_alloc@n& (0+255),b
  6434   009E92                     l7147:
  6435                           
  6436                           ; BSR set to: 0
  6437                           ;mcc_generated_files/fatfs/ff.c: 1808:    res = dir_next(dp, 1);
  6438   009E92  C0CF  F0B5         	movff	dir_alloc@dp,dir_next@dp
  6439   009E96  C0D0  F0B6         	movff	dir_alloc@dp+1,dir_next@dp+1
  6440   009E9A  0E00               	movlw	0
  6441   009E9C  6FB8               	movwf	(dir_next@stretch+1)& (0+255),b
  6442   009E9E  0E01               	movlw	1
  6443   009EA0  6FB7               	movwf	dir_next@stretch& (0+255),b
  6444   009EA2  ECB7  F05B         	call	_dir_next	;wreg free
  6445   009EA6  0100               	movlb	0	; () banked
  6446   009EA8  6FDA               	movwf	dir_alloc@res& (0+255),b
  6447   009EAA                     
  6448                           ; BSR set to: 0
  6449                           ;mcc_generated_files/fatfs/ff.c: 1809:   } while (res == FR_OK);
  6450   009EAA  51DA               	movf	dir_alloc@res& (0+255),w,b
  6451   009EAC  B4D8               	btfsc	status,2,c
  6452   009EAE  EF5B  F04F         	goto	u9391
  6453   009EB2  EF5D  F04F         	goto	u9390
  6454   009EB6                     u9391:
  6455   009EB6  EFE8  F04E         	goto	l7131
  6456   009EBA                     u9390:
  6457   009EBA                     l7151:
  6458                           
  6459                           ; BSR set to: 0
  6460                           ;mcc_generated_files/fatfs/ff.c: 1812:  if (res == FR_NO_FILE) res = FR_DENIED;
  6461   009EBA  0E04               	movlw	4
  6462   009EBC  19DA               	xorwf	dir_alloc@res& (0+255),w,b
  6463   009EBE  A4D8               	btfss	status,2,c
  6464   009EC0  EF64  F04F         	goto	u9401
  6465   009EC4  EF66  F04F         	goto	u9400
  6466   009EC8                     u9401:
  6467   009EC8  EF68  F04F         	goto	l768
  6468   009ECC                     u9400:
  6469   009ECC                     
  6470                           ; BSR set to: 0
  6471   009ECC  0E07               	movlw	7
  6472   009ECE  6FDA               	movwf	dir_alloc@res& (0+255),b
  6473   009ED0                     l768:
  6474                           
  6475                           ; BSR set to: 0
  6476                           ;mcc_generated_files/fatfs/ff.c: 1813:  return res;
  6477   009ED0  51DA               	movf	dir_alloc@res& (0+255),w,b
  6478   009ED2                     
  6479                           ; BSR set to: 0
  6480   009ED2  0012               	return		;funcret
  6481   009ED4                     __end_of_dir_alloc:
  6482                           	callstack 0
  6483                           
  6484 ;; *************** function _dir_sdi *****************
  6485 ;; Defined at:
  6486 ;;		line 1675 in file "mcc_generated_files/fatfs/ff.c"
  6487 ;; Parameters:    Size  Location     Type
  6488 ;;  dp              2   49[BANK0 ] PTR struct .
  6489 ;;		 -> f_rename@djn(40), f_rename@djo(40), f_mkdir@dj(40), f_unlink@sdj(40), 
  6490 ;;		 -> f_unlink@dj(40), f_stat@dj(40), f_chdir@dj(40), f_open@dj(40), 
  6491 ;;  ofs             4   51[BANK0 ] unsigned long 
  6492 ;; Auto vars:     Size  Location     Type
  6493 ;;  clst            4   69[BANK0 ] unsigned long 
  6494 ;;  csz             4   65[BANK0 ] unsigned long 
  6495 ;;  fs              2   73[BANK0 ] PTR struct .
  6496 ;;		 -> drive(563), NULL(0), FatFs(563), 
  6497 ;; Return value:  Size  Location     Type
  6498 ;;                  1    wreg      enum E68
  6499 ;; Registers used:
  6500 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  6501 ;; Tracked objects:
  6502 ;;		On entry : 0/0
  6503 ;;		On exit  : 0/0
  6504 ;;		Unchanged: 0/0
  6505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6506 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6507 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6508 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6509 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6510 ;;Total ram usage:       26 bytes
  6511 ;; Hardware stack levels used: 1
  6512 ;; Hardware stack levels required when called: 8
  6513 ;; This function calls:
  6514 ;;		_clst2sect
  6515 ;;		_get_fat
  6516 ;; This function is called by:
  6517 ;;		_dir_alloc
  6518 ;;		_dir_find
  6519 ;;		_follow_path
  6520 ;;		_f_opendir
  6521 ;;		_f_readdir
  6522 ;;		_f_unlink
  6523 ;; This function uses a non-reentrant model
  6524 ;;
  6525                           
  6526                           	psect	text14
  6527   00AFE4                     __ptext14:
  6528                           	callstack 0
  6529   00AFE4                     _dir_sdi:
  6530                           	callstack 20
  6531   00AFE4                     
  6532                           ;mcc_generated_files/fatfs/ff.c: 1676:  FFDIR* dp,;mcc_generated_files/fatfs/ff.c: 1677:
      +                            DWORD ofs;mcc_generated_files/fatfs/ff.c: 1679: {;mcc_generated_files/fatfs/ff.c: 1680
      +                          :  DWORD csz, clst;;mcc_generated_files/fatfs/ff.c: 1681:  FATFS *fs = dp->obj.fs;
  6533   00AFE4  C091  FFD9         	movff	dir_sdi@dp,fsr2l
  6534   00AFE8  C092  FFDA         	movff	dir_sdi@dp+1,fsr2h
  6535   00AFEC  CFDE F0A9          	movff	postinc2,dir_sdi@fs
  6536   00AFF0  CFDD F0AA          	movff	postdec2,dir_sdi@fs+1
  6537   00AFF4  0100               	movlb	0	; () banked
  6538   00AFF6  5196               	movf	(dir_sdi@ofs+3)& (0+255),w,b
  6539   00AFF8  E107               	bnz	u8961
  6540   00AFFA  0E20               	movlw	32
  6541   00AFFC  5D95               	subwf	(dir_sdi@ofs+2)& (0+255),w,b
  6542   00AFFE  B0D8               	btfsc	status,0,c
  6543   00B000  EF04  F058         	goto	u8961
  6544   00B004  EF06  F058         	goto	u8960
  6545   00B008                     u8961:
  6546   00B008  EF1D  F058         	goto	l6915
  6547   00B00C                     u8960:
  6548   00B00C                     
  6549                           ; BSR set to: 0
  6550   00B00C  0E1F               	movlw	31
  6551   00B00E  1593               	andwf	dir_sdi@ofs& (0+255),w,b
  6552   00B010  6F97               	movwf	??_dir_sdi& (0+255),b
  6553   00B012  0E00               	movlw	0
  6554   00B014  1594               	andwf	(dir_sdi@ofs+1)& (0+255),w,b
  6555   00B016  6F98               	movwf	(??_dir_sdi+1)& (0+255),b
  6556   00B018  0E00               	movlw	0
  6557   00B01A  1595               	andwf	(dir_sdi@ofs+2)& (0+255),w,b
  6558   00B01C  6F99               	movwf	(??_dir_sdi+2)& (0+255),b
  6559   00B01E  0E00               	movlw	0
  6560   00B020  1596               	andwf	(dir_sdi@ofs+3)& (0+255),w,b
  6561   00B022  6F9A               	movwf	(??_dir_sdi+3)& (0+255),b
  6562   00B024  5197               	movf	??_dir_sdi& (0+255),w,b
  6563   00B026  1198               	iorwf	(??_dir_sdi+1)& (0+255),w,b
  6564   00B028  1199               	iorwf	(??_dir_sdi+2)& (0+255),w,b
  6565   00B02A  119A               	iorwf	(??_dir_sdi+3)& (0+255),w,b
  6566   00B02C  B4D8               	btfsc	status,2,c
  6567   00B02E  EF1B  F058         	goto	u8971
  6568   00B032  EF1D  F058         	goto	u8970
  6569   00B036                     u8971:
  6570   00B036  EF20  F058         	goto	l6919
  6571   00B03A                     u8970:
  6572   00B03A                     l6915:
  6573                           
  6574                           ; BSR set to: 0
  6575                           ;mcc_generated_files/fatfs/ff.c: 1685:   return FR_INT_ERR;
  6576   00B03A  0E02               	movlw	2
  6577   00B03C  EFB6  F059         	goto	l717
  6578   00B040                     l6919:
  6579                           
  6580                           ; BSR set to: 0
  6581                           ;mcc_generated_files/fatfs/ff.c: 1687:  dp->dptr = ofs;
  6582   00B040  EE20 F00E          	lfsr	2,14
  6583   00B044  5191               	movf	dir_sdi@dp& (0+255),w,b
  6584   00B046  26D9               	addwf	fsr2l,f,c
  6585   00B048  5192               	movf	(dir_sdi@dp+1)& (0+255),w,b
  6586   00B04A  22DA               	addwfc	fsr2h,f,c
  6587   00B04C  C093  FFDE         	movff	dir_sdi@ofs,postinc2
  6588   00B050  C094  FFDE         	movff	dir_sdi@ofs+1,postinc2
  6589   00B054  C095  FFDE         	movff	dir_sdi@ofs+2,postinc2
  6590   00B058  C096  FFDE         	movff	dir_sdi@ofs+3,postinc2
  6591                           
  6592                           ;mcc_generated_files/fatfs/ff.c: 1688:  clst = dp->obj.sclust;
  6593   00B05C  EE20 F006          	lfsr	2,6
  6594   00B060  5191               	movf	dir_sdi@dp& (0+255),w,b
  6595   00B062  26D9               	addwf	fsr2l,f,c
  6596   00B064  5192               	movf	(dir_sdi@dp+1)& (0+255),w,b
  6597   00B066  22DA               	addwfc	fsr2h,f,c
  6598   00B068  CFDE F0A5          	movff	postinc2,dir_sdi@clst
  6599   00B06C  CFDE F0A6          	movff	postinc2,dir_sdi@clst+1
  6600   00B070  CFDE F0A7          	movff	postinc2,dir_sdi@clst+2
  6601   00B074  CFDE F0A8          	movff	postinc2,dir_sdi@clst+3
  6602   00B078                     
  6603                           ; BSR set to: 0
  6604                           ;mcc_generated_files/fatfs/ff.c: 1689:  if (clst == 0 && fs->fs_type >= 3) {
  6605   00B078  51A5               	movf	dir_sdi@clst& (0+255),w,b
  6606   00B07A  11A6               	iorwf	(dir_sdi@clst+1)& (0+255),w,b
  6607   00B07C  11A7               	iorwf	(dir_sdi@clst+2)& (0+255),w,b
  6608   00B07E  11A8               	iorwf	(dir_sdi@clst+3)& (0+255),w,b
  6609   00B080  A4D8               	btfss	status,2,c
  6610   00B082  EF45  F058         	goto	u8981
  6611   00B086  EF47  F058         	goto	u8980
  6612   00B08A                     u8981:
  6613   00B08A  EF61  F058         	goto	l6929
  6614   00B08E                     u8980:
  6615   00B08E                     
  6616                           ; BSR set to: 0
  6617   00B08E  C0A9  FFD9         	movff	dir_sdi@fs,fsr2l
  6618   00B092  C0AA  FFDA         	movff	dir_sdi@fs+1,fsr2h
  6619   00B096  0E02               	movlw	2
  6620   00B098  64DF               	cpfsgt	indf2,c
  6621   00B09A  EF51  F058         	goto	u8991
  6622   00B09E  EF53  F058         	goto	u8990
  6623   00B0A2                     u8991:
  6624   00B0A2  EF61  F058         	goto	l6929
  6625   00B0A6                     u8990:
  6626   00B0A6                     
  6627                           ; BSR set to: 0
  6628                           ;mcc_generated_files/fatfs/ff.c: 1690:   clst = fs->dirbase;
  6629   00B0A6  EE20 F027          	lfsr	2,39
  6630   00B0AA  51A9               	movf	dir_sdi@fs& (0+255),w,b
  6631   00B0AC  26D9               	addwf	fsr2l,f,c
  6632   00B0AE  51AA               	movf	(dir_sdi@fs+1)& (0+255),w,b
  6633   00B0B0  22DA               	addwfc	fsr2h,f,c
  6634   00B0B2  CFDE F0A5          	movff	postinc2,dir_sdi@clst
  6635   00B0B6  CFDE F0A6          	movff	postinc2,dir_sdi@clst+1
  6636   00B0BA  CFDE F0A7          	movff	postinc2,dir_sdi@clst+2
  6637   00B0BE  CFDE F0A8          	movff	postinc2,dir_sdi@clst+3
  6638   00B0C2                     l6929:
  6639                           
  6640                           ; BSR set to: 0
  6641                           ;mcc_generated_files/fatfs/ff.c: 1694:  if (clst == 0) {
  6642   00B0C2  51A5               	movf	dir_sdi@clst& (0+255),w,b
  6643   00B0C4  11A6               	iorwf	(dir_sdi@clst+1)& (0+255),w,b
  6644   00B0C6  11A7               	iorwf	(dir_sdi@clst+2)& (0+255),w,b
  6645   00B0C8  11A8               	iorwf	(dir_sdi@clst+3)& (0+255),w,b
  6646   00B0CA  A4D8               	btfss	status,2,c
  6647   00B0CC  EF6A  F058         	goto	u9001
  6648   00B0D0  EF6C  F058         	goto	u9000
  6649   00B0D4                     u9001:
  6650   00B0D4  EFB6  F058         	goto	l6939
  6651   00B0D8                     u9000:
  6652   00B0D8                     
  6653                           ; BSR set to: 0
  6654                           ;mcc_generated_files/fatfs/ff.c: 1695:   if (ofs / 32 >= fs->n_rootdir) return FR_INT_ER
      +                          R;
  6655   00B0D8  EE20 F007          	lfsr	2,7
  6656   00B0DC  51A9               	movf	dir_sdi@fs& (0+255),w,b
  6657   00B0DE  26D9               	addwf	fsr2l,f,c
  6658   00B0E0  51AA               	movf	(dir_sdi@fs+1)& (0+255),w,b
  6659   00B0E2  22DA               	addwfc	fsr2h,f,c
  6660   00B0E4  CFDE F097          	movff	postinc2,??_dir_sdi
  6661   00B0E8  CFDD F098          	movff	postdec2,??_dir_sdi+1
  6662   00B0EC  5197               	movf	??_dir_sdi& (0+255),w,b
  6663   00B0EE  6F99               	movwf	(??_dir_sdi+2)& (0+255),b
  6664   00B0F0  5198               	movf	(??_dir_sdi+1)& (0+255),w,b
  6665   00B0F2  6F9A               	movwf	(??_dir_sdi+3)& (0+255),b
  6666   00B0F4  6B9B               	clrf	(??_dir_sdi+4)& (0+255),b
  6667   00B0F6  6B9C               	clrf	(??_dir_sdi+5)& (0+255),b
  6668   00B0F8  C093  F09D         	movff	dir_sdi@ofs,??_dir_sdi+6
  6669   00B0FC  C094  F09E         	movff	dir_sdi@ofs+1,??_dir_sdi+7
  6670   00B100  C095  F09F         	movff	dir_sdi@ofs+2,??_dir_sdi+8
  6671   00B104  C096  F0A0         	movff	dir_sdi@ofs+3,??_dir_sdi+9
  6672   00B108  0E06               	movlw	6
  6673   00B10A  EF8C  F058         	goto	u9010
  6674   00B10E                     u9015:
  6675   00B10E  90D8               	bcf	status,0,c
  6676   00B110  33A0               	rrcf	(??_dir_sdi+9)& (0+255),f,b
  6677   00B112  339F               	rrcf	(??_dir_sdi+8)& (0+255),f,b
  6678   00B114  339E               	rrcf	(??_dir_sdi+7)& (0+255),f,b
  6679   00B116  339D               	rrcf	(??_dir_sdi+6)& (0+255),f,b
  6680   00B118                     u9010:
  6681   00B118  2EE8               	decfsz	wreg,f,c
  6682   00B11A  EF87  F058         	goto	u9015
  6683   00B11E  5199               	movf	(??_dir_sdi+2)& (0+255),w,b
  6684   00B120  5D9D               	subwf	(??_dir_sdi+6)& (0+255),w,b
  6685   00B122  519A               	movf	(??_dir_sdi+3)& (0+255),w,b
  6686   00B124  599E               	subwfb	(??_dir_sdi+7)& (0+255),w,b
  6687   00B126  519B               	movf	(??_dir_sdi+4)& (0+255),w,b
  6688   00B128  599F               	subwfb	(??_dir_sdi+8)& (0+255),w,b
  6689   00B12A  519C               	movf	(??_dir_sdi+5)& (0+255),w,b
  6690   00B12C  59A0               	subwfb	(??_dir_sdi+9)& (0+255),w,b
  6691   00B12E  A0D8               	btfss	status,0,c
  6692   00B130  EF9C  F058         	goto	u9021
  6693   00B134  EF9E  F058         	goto	u9020
  6694   00B138                     u9021:
  6695   00B138  EFA0  F058         	goto	l6937
  6696   00B13C                     u9020:
  6697   00B13C  EF1D  F058         	goto	l6915
  6698   00B140                     l6937:
  6699                           
  6700                           ; BSR set to: 0
  6701                           ;mcc_generated_files/fatfs/ff.c: 1696:   dp->sect = fs->dirbase;
  6702   00B140  EE20 F027          	lfsr	2,39
  6703   00B144  51A9               	movf	dir_sdi@fs& (0+255),w,b
  6704   00B146  26D9               	addwf	fsr2l,f,c
  6705   00B148  51AA               	movf	(dir_sdi@fs+1)& (0+255),w,b
  6706   00B14A  22DA               	addwfc	fsr2h,f,c
  6707   00B14C  EE10 F016          	lfsr	1,22
  6708   00B150  5191               	movf	dir_sdi@dp& (0+255),w,b
  6709   00B152  26E1               	addwf	fsr1l,f,c
  6710   00B154  5192               	movf	(dir_sdi@dp+1)& (0+255),w,b
  6711   00B156  22E2               	addwfc	fsr1h,f,c
  6712   00B158  CFDE FFE6          	movff	postinc2,postinc1
  6713   00B15C  CFDE FFE6          	movff	postinc2,postinc1
  6714   00B160  CFDE FFE6          	movff	postinc2,postinc1
  6715   00B164  CFDE FFE6          	movff	postinc2,postinc1
  6716                           
  6717                           ;mcc_generated_files/fatfs/ff.c: 1698:  } else {
  6718   00B168  EF59  F059         	goto	l6961
  6719   00B16C                     l6939:
  6720                           
  6721                           ; BSR set to: 0
  6722                           ;mcc_generated_files/fatfs/ff.c: 1699:   csz = (DWORD)fs->csize * ((UINT)512);
  6723   00B16C  EE20 F009          	lfsr	2,9
  6724   00B170  51A9               	movf	dir_sdi@fs& (0+255),w,b
  6725   00B172  26D9               	addwf	fsr2l,f,c
  6726   00B174  51AA               	movf	(dir_sdi@fs+1)& (0+255),w,b
  6727   00B176  22DA               	addwfc	fsr2h,f,c
  6728   00B178  CFDE F097          	movff	postinc2,??_dir_sdi
  6729   00B17C  CFDD F098          	movff	postdec2,??_dir_sdi+1
  6730   00B180  5197               	movf	??_dir_sdi& (0+255),w,b
  6731   00B182  6F99               	movwf	(??_dir_sdi+2)& (0+255),b
  6732   00B184  5198               	movf	(??_dir_sdi+1)& (0+255),w,b
  6733   00B186  6F9A               	movwf	(??_dir_sdi+3)& (0+255),b
  6734   00B188  6B9B               	clrf	(??_dir_sdi+4)& (0+255),b
  6735   00B18A  6B9C               	clrf	(??_dir_sdi+5)& (0+255),b
  6736   00B18C  0E09               	movlw	9
  6737   00B18E                     u9035:
  6738   00B18E  90D8               	bcf	status,0,c
  6739   00B190  3799               	rlcf	(??_dir_sdi+2)& (0+255),f,b
  6740   00B192  379A               	rlcf	(??_dir_sdi+3)& (0+255),f,b
  6741   00B194  379B               	rlcf	(??_dir_sdi+4)& (0+255),f,b
  6742   00B196  379C               	rlcf	(??_dir_sdi+5)& (0+255),f,b
  6743   00B198  2EE8               	decfsz	wreg,f,c
  6744   00B19A  EFC7  F058         	goto	u9035
  6745   00B19E  C099  F0A1         	movff	??_dir_sdi+2,dir_sdi@csz
  6746   00B1A2  C09A  F0A2         	movff	??_dir_sdi+3,dir_sdi@csz+1
  6747   00B1A6  C09B  F0A3         	movff	??_dir_sdi+4,dir_sdi@csz+2
  6748   00B1AA  C09C  F0A4         	movff	??_dir_sdi+5,dir_sdi@csz+3
  6749                           
  6750                           ;mcc_generated_files/fatfs/ff.c: 1700:   while (ofs >= csz) {
  6751   00B1AE  EF2D  F059         	goto	l723
  6752   00B1B2                     l6941:
  6753                           
  6754                           ; BSR set to: 0
  6755                           ;mcc_generated_files/fatfs/ff.c: 1701:    clst = get_fat(&dp->obj, clst);
  6756   00B1B2  C091  F077         	movff	dir_sdi@dp,get_fat@obj
  6757   00B1B6  C092  F078         	movff	dir_sdi@dp+1,get_fat@obj+1
  6758   00B1BA  C0A5  F079         	movff	dir_sdi@clst,get_fat@clst
  6759   00B1BE  C0A6  F07A         	movff	dir_sdi@clst+1,get_fat@clst+1
  6760   00B1C2  C0A7  F07B         	movff	dir_sdi@clst+2,get_fat@clst+2
  6761   00B1C6  C0A8  F07C         	movff	dir_sdi@clst+3,get_fat@clst+3
  6762   00B1CA  ECB7  F059         	call	_get_fat	;wreg free
  6763   00B1CE  C077  F0A5         	movff	?_get_fat,dir_sdi@clst
  6764   00B1D2  C078  F0A6         	movff	?_get_fat+1,dir_sdi@clst+1
  6765   00B1D6  C079  F0A7         	movff	?_get_fat+2,dir_sdi@clst+2
  6766   00B1DA  C07A  F0A8         	movff	?_get_fat+3,dir_sdi@clst+3
  6767   00B1DE                     
  6768                           ;mcc_generated_files/fatfs/ff.c: 1702:    if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
  6769   00B1DE  0100               	movlb	0	; () banked
  6770   00B1E0  29A5               	incf	dir_sdi@clst& (0+255),w,b
  6771   00B1E2  E10A               	bnz	u9041
  6772   00B1E4  29A6               	incf	(dir_sdi@clst+1)& (0+255),w,b
  6773   00B1E6  E108               	bnz	u9041
  6774   00B1E8  29A7               	incf	(dir_sdi@clst+2)& (0+255),w,b
  6775   00B1EA  E106               	bnz	u9041
  6776   00B1EC  29A8               	incf	(dir_sdi@clst+3)& (0+255),w,b
  6777   00B1EE  A4D8               	btfss	status,2,c
  6778   00B1F0  EFFC  F058         	goto	u9041
  6779   00B1F4  EFFE  F058         	goto	u9040
  6780   00B1F8                     u9041:
  6781   00B1F8  EF01  F059         	goto	l6949
  6782   00B1FC                     u9040:
  6783   00B1FC                     
  6784                           ; BSR set to: 0
  6785   00B1FC  0E01               	movlw	1
  6786   00B1FE  EFB6  F059         	goto	l717
  6787   00B202                     l6949:
  6788                           
  6789                           ; BSR set to: 0
  6790                           ;mcc_generated_files/fatfs/ff.c: 1703:    if (clst < 2 || clst >= fs->n_fatent) return F
      +                          R_INT_ERR;
  6791   00B202  51A8               	movf	(dir_sdi@clst+3)& (0+255),w,b
  6792   00B204  11A7               	iorwf	(dir_sdi@clst+2)& (0+255),w,b
  6793   00B206  11A6               	iorwf	(dir_sdi@clst+1)& (0+255),w,b
  6794   00B208  E109               	bnz	u9050
  6795   00B20A  0E02               	movlw	2
  6796   00B20C  5DA5               	subwf	dir_sdi@clst& (0+255),w,b
  6797   00B20E  A0D8               	btfss	status,0,c
  6798   00B210  EF0C  F059         	goto	u9051
  6799   00B214  EF0E  F059         	goto	u9050
  6800   00B218                     u9051:
  6801   00B218  EF1D  F058         	goto	l6915
  6802   00B21C                     u9050:
  6803   00B21C                     
  6804                           ; BSR set to: 0
  6805   00B21C  EE20 F017          	lfsr	2,23
  6806   00B220  51A9               	movf	dir_sdi@fs& (0+255),w,b
  6807   00B222  26D9               	addwf	fsr2l,f,c
  6808   00B224  51AA               	movf	(dir_sdi@fs+1)& (0+255),w,b
  6809   00B226  22DA               	addwfc	fsr2h,f,c
  6810   00B228  50DE               	movf	postinc2,w,c
  6811   00B22A  5DA5               	subwf	dir_sdi@clst& (0+255),w,b
  6812   00B22C  50DE               	movf	postinc2,w,c
  6813   00B22E  59A6               	subwfb	(dir_sdi@clst+1)& (0+255),w,b
  6814   00B230  50DE               	movf	postinc2,w,c
  6815   00B232  59A7               	subwfb	(dir_sdi@clst+2)& (0+255),w,b
  6816   00B234  50DE               	movf	postinc2,w,c
  6817   00B236  59A8               	subwfb	(dir_sdi@clst+3)& (0+255),w,b
  6818   00B238  A0D8               	btfss	status,0,c
  6819   00B23A  EF21  F059         	goto	u9061
  6820   00B23E  EF23  F059         	goto	u9060
  6821   00B242                     u9061:
  6822   00B242  EF25  F059         	goto	l6957
  6823   00B246                     u9060:
  6824   00B246  EF1D  F058         	goto	l6915
  6825   00B24A                     l6957:
  6826                           
  6827                           ; BSR set to: 0
  6828                           ;mcc_generated_files/fatfs/ff.c: 1704:    ofs -= csz;
  6829   00B24A  51A1               	movf	dir_sdi@csz& (0+255),w,b
  6830   00B24C  5F93               	subwf	dir_sdi@ofs& (0+255),f,b
  6831   00B24E  51A2               	movf	(dir_sdi@csz+1)& (0+255),w,b
  6832   00B250  5B94               	subwfb	(dir_sdi@ofs+1)& (0+255),f,b
  6833   00B252  51A3               	movf	(dir_sdi@csz+2)& (0+255),w,b
  6834   00B254  5B95               	subwfb	(dir_sdi@ofs+2)& (0+255),f,b
  6835   00B256  51A4               	movf	(dir_sdi@csz+3)& (0+255),w,b
  6836   00B258  5B96               	subwfb	(dir_sdi@ofs+3)& (0+255),f,b
  6837   00B25A                     l723:
  6838                           
  6839                           ; BSR set to: 0
  6840                           ;mcc_generated_files/fatfs/ff.c: 1700:   while (ofs >= csz) {
  6841   00B25A  51A1               	movf	dir_sdi@csz& (0+255),w,b
  6842   00B25C  5D93               	subwf	dir_sdi@ofs& (0+255),w,b
  6843   00B25E  51A2               	movf	(dir_sdi@csz+1)& (0+255),w,b
  6844   00B260  5994               	subwfb	(dir_sdi@ofs+1)& (0+255),w,b
  6845   00B262  51A3               	movf	(dir_sdi@csz+2)& (0+255),w,b
  6846   00B264  5995               	subwfb	(dir_sdi@ofs+2)& (0+255),w,b
  6847   00B266  51A4               	movf	(dir_sdi@csz+3)& (0+255),w,b
  6848   00B268  5996               	subwfb	(dir_sdi@ofs+3)& (0+255),w,b
  6849   00B26A  B0D8               	btfsc	status,0,c
  6850   00B26C  EF3A  F059         	goto	u9071
  6851   00B270  EF3C  F059         	goto	u9070
  6852   00B274                     u9071:
  6853   00B274  EFD9  F058         	goto	l6941
  6854   00B278                     u9070:
  6855   00B278                     
  6856                           ; BSR set to: 0
  6857                           ;mcc_generated_files/fatfs/ff.c: 1706:   dp->sect = clst2sect(fs, clst);
  6858   00B278  C0A9  F00D         	movff	dir_sdi@fs,clst2sect@fs
  6859   00B27C  C0AA  F00E         	movff	dir_sdi@fs+1,clst2sect@fs+1
  6860   00B280  C0A5  F00F         	movff	dir_sdi@clst,clst2sect@clst
  6861   00B284  C0A6  F010         	movff	dir_sdi@clst+1,clst2sect@clst+1
  6862   00B288  C0A7  F011         	movff	dir_sdi@clst+2,clst2sect@clst+2
  6863   00B28C  C0A8  F012         	movff	dir_sdi@clst+3,clst2sect@clst+3
  6864   00B290  EC25  F04B         	call	_clst2sect	;wreg free
  6865   00B294  0100               	movlb	0	; () banked
  6866   00B296  EE20 F016          	lfsr	2,22
  6867   00B29A  5191               	movf	dir_sdi@dp& (0+255),w,b
  6868   00B29C  26D9               	addwf	fsr2l,f,c
  6869   00B29E  5192               	movf	(dir_sdi@dp+1)& (0+255),w,b
  6870   00B2A0  22DA               	addwfc	fsr2h,f,c
  6871   00B2A2  C00D  FFDE         	movff	?_clst2sect,postinc2
  6872   00B2A6  C00E  FFDE         	movff	?_clst2sect+1,postinc2
  6873   00B2AA  C00F  FFDE         	movff	?_clst2sect+2,postinc2
  6874   00B2AE  C010  FFDE         	movff	?_clst2sect+3,postinc2
  6875   00B2B2                     l6961:
  6876                           
  6877                           ; BSR set to: 0
  6878                           ;mcc_generated_files/fatfs/ff.c: 1708:  dp->clust = clst;
  6879   00B2B2  EE20 F012          	lfsr	2,18
  6880   00B2B6  5191               	movf	dir_sdi@dp& (0+255),w,b
  6881   00B2B8  26D9               	addwf	fsr2l,f,c
  6882   00B2BA  5192               	movf	(dir_sdi@dp+1)& (0+255),w,b
  6883   00B2BC  22DA               	addwfc	fsr2h,f,c
  6884   00B2BE  C0A5  FFDE         	movff	dir_sdi@clst,postinc2
  6885   00B2C2  C0A6  FFDE         	movff	dir_sdi@clst+1,postinc2
  6886   00B2C6  C0A7  FFDE         	movff	dir_sdi@clst+2,postinc2
  6887   00B2CA  C0A8  FFDE         	movff	dir_sdi@clst+3,postinc2
  6888   00B2CE                     
  6889                           ; BSR set to: 0
  6890                           ;mcc_generated_files/fatfs/ff.c: 1709:  if (dp->sect == 0) return FR_INT_ERR;
  6891   00B2CE  EE20 F016          	lfsr	2,22
  6892   00B2D2  5191               	movf	dir_sdi@dp& (0+255),w,b
  6893   00B2D4  26D9               	addwf	fsr2l,f,c
  6894   00B2D6  5192               	movf	(dir_sdi@dp+1)& (0+255),w,b
  6895   00B2D8  22DA               	addwfc	fsr2h,f,c
  6896   00B2DA  50DE               	movf	postinc2,w,c
  6897   00B2DC  10DE               	iorwf	postinc2,w,c
  6898   00B2DE  10DE               	iorwf	postinc2,w,c
  6899   00B2E0  10DE               	iorwf	postinc2,w,c
  6900   00B2E2  A4D8               	btfss	status,2,c
  6901   00B2E4  EF76  F059         	goto	u9081
  6902   00B2E8  EF78  F059         	goto	u9080
  6903   00B2EC                     u9081:
  6904   00B2EC  EF7A  F059         	goto	l6969
  6905   00B2F0                     u9080:
  6906   00B2F0  EF1D  F058         	goto	l6915
  6907   00B2F4                     l6969:
  6908                           
  6909                           ; BSR set to: 0
  6910                           ;mcc_generated_files/fatfs/ff.c: 1710:  dp->sect += ofs / ((UINT)512);
  6911   00B2F4  C093  F097         	movff	dir_sdi@ofs,??_dir_sdi
  6912   00B2F8  C094  F098         	movff	dir_sdi@ofs+1,??_dir_sdi+1
  6913   00B2FC  C095  F099         	movff	dir_sdi@ofs+2,??_dir_sdi+2
  6914   00B300  C096  F09A         	movff	dir_sdi@ofs+3,??_dir_sdi+3
  6915   00B304  0E0A               	movlw	10
  6916   00B306  EF8A  F059         	goto	u9090
  6917   00B30A                     u9095:
  6918   00B30A  90D8               	bcf	status,0,c
  6919   00B30C  339A               	rrcf	(??_dir_sdi+3)& (0+255),f,b
  6920   00B30E  3399               	rrcf	(??_dir_sdi+2)& (0+255),f,b
  6921   00B310  3398               	rrcf	(??_dir_sdi+1)& (0+255),f,b
  6922   00B312  3397               	rrcf	??_dir_sdi& (0+255),f,b
  6923   00B314                     u9090:
  6924   00B314  2EE8               	decfsz	wreg,f,c
  6925   00B316  EF85  F059         	goto	u9095
  6926   00B31A  EE20 F016          	lfsr	2,22
  6927   00B31E  5191               	movf	dir_sdi@dp& (0+255),w,b
  6928   00B320  26D9               	addwf	fsr2l,f,c
  6929   00B322  5192               	movf	(dir_sdi@dp+1)& (0+255),w,b
  6930   00B324  22DA               	addwfc	fsr2h,f,c
  6931   00B326  5197               	movf	??_dir_sdi& (0+255),w,b
  6932   00B328  26DE               	addwf	postinc2,f,c
  6933   00B32A  5198               	movf	(??_dir_sdi+1)& (0+255),w,b
  6934   00B32C  22DE               	addwfc	postinc2,f,c
  6935   00B32E  5199               	movf	(??_dir_sdi+2)& (0+255),w,b
  6936   00B330  22DE               	addwfc	postinc2,f,c
  6937   00B332  519A               	movf	(??_dir_sdi+3)& (0+255),w,b
  6938   00B334  22DE               	addwfc	postinc2,f,c
  6939                           
  6940                           ;mcc_generated_files/fatfs/ff.c: 1711:  dp->dir = fs->win + (ofs % ((UINT)512));
  6941   00B336  0EFF               	movlw	255
  6942   00B338  1593               	andwf	dir_sdi@ofs& (0+255),w,b
  6943   00B33A  6F97               	movwf	??_dir_sdi& (0+255),b
  6944   00B33C  0E01               	movlw	1
  6945   00B33E  1594               	andwf	(dir_sdi@ofs+1)& (0+255),w,b
  6946   00B340  6F98               	movwf	(??_dir_sdi+1)& (0+255),b
  6947   00B342  5197               	movf	??_dir_sdi& (0+255),w,b
  6948   00B344  25A9               	addwf	dir_sdi@fs& (0+255),w,b
  6949   00B346  6F99               	movwf	(??_dir_sdi+2)& (0+255),b
  6950   00B348  5198               	movf	(??_dir_sdi+1)& (0+255),w,b
  6951   00B34A  21AA               	addwfc	(dir_sdi@fs+1)& (0+255),w,b
  6952   00B34C  6F9A               	movwf	(??_dir_sdi+3)& (0+255),b
  6953   00B34E  0E33               	movlw	51
  6954   00B350  2799               	addwf	(??_dir_sdi+2)& (0+255),f,b
  6955   00B352  0E00               	movlw	0
  6956   00B354  239A               	addwfc	(??_dir_sdi+3)& (0+255),f,b
  6957   00B356  EE20 F01A          	lfsr	2,26
  6958   00B35A  5191               	movf	dir_sdi@dp& (0+255),w,b
  6959   00B35C  26D9               	addwf	fsr2l,f,c
  6960   00B35E  5192               	movf	(dir_sdi@dp+1)& (0+255),w,b
  6961   00B360  22DA               	addwfc	fsr2h,f,c
  6962   00B362  C099  FFDE         	movff	??_dir_sdi+2,postinc2
  6963   00B366  C09A  FFDD         	movff	??_dir_sdi+3,postdec2
  6964   00B36A                     
  6965                           ; BSR set to: 0
  6966                           ;mcc_generated_files/fatfs/ff.c: 1713:  return FR_OK;
  6967   00B36A  0E00               	movlw	0
  6968   00B36C                     l717:
  6969                           
  6970                           ; BSR set to: 0
  6971   00B36C  0012               	return		;funcret
  6972   00B36E                     __end_of_dir_sdi:
  6973                           	callstack 0
  6974                           
  6975 ;; *************** function _dir_next *****************
  6976 ;; Defined at:
  6977 ;;		line 1723 in file "mcc_generated_files/fatfs/ff.c"
  6978 ;; Parameters:    Size  Location     Type
  6979 ;;  dp              2   85[BANK0 ] PTR struct .
  6980 ;;		 -> f_rename@djn(40), f_rename@djo(40), f_mkdir@dj(40), f_unlink@sdj(40), 
  6981 ;;		 -> f_unlink@dj(40), f_stat@dj(40), f_chdir@dj(40), f_open@dj(40), 
  6982 ;;  stretch         2   87[BANK0 ] int 
  6983 ;; Auto vars:     Size  Location     Type
  6984 ;;  clst            4  107[BANK0 ] unsigned long 
  6985 ;;  ofs             4  101[BANK0 ] unsigned long 
  6986 ;;  fs              2  105[BANK0 ] PTR struct .
  6987 ;;		 -> drive(563), NULL(0), FatFs(563), 
  6988 ;; Return value:  Size  Location     Type
  6989 ;;                  1    wreg      enum E68
  6990 ;; Registers used:
  6991 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  6992 ;; Tracked objects:
  6993 ;;		On entry : 0/0
  6994 ;;		On exit  : 0/0
  6995 ;;		Unchanged: 0/0
  6996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6997 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6998 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6999 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7000 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7001 ;;Total ram usage:       26 bytes
  7002 ;; Hardware stack levels used: 1
  7003 ;; Hardware stack levels required when called: 9
  7004 ;; This function calls:
  7005 ;;		_clst2sect
  7006 ;;		_create_chain
  7007 ;;		_dir_clear
  7008 ;;		_get_fat
  7009 ;; This function is called by:
  7010 ;;		_dir_alloc
  7011 ;;		_dir_find
  7012 ;;		_dir_read
  7013 ;;		_f_readdir
  7014 ;; This function uses a non-reentrant model
  7015 ;;
  7016                           
  7017                           	psect	text15
  7018   00B76E                     __ptext15:
  7019                           	callstack 0
  7020   00B76E                     _dir_next:
  7021                           	callstack 18
  7022   00B76E                     
  7023                           ;mcc_generated_files/fatfs/ff.c: 1724:  FFDIR* dp,;mcc_generated_files/fatfs/ff.c: 1725:
      +                            int stretch;mcc_generated_files/fatfs/ff.c: 1727: {;mcc_generated_files/fatfs/ff.c: 17
      +                          28:  DWORD ofs, clst;;mcc_generated_files/fatfs/ff.c: 1729:  FATFS *fs = dp->obj.fs;
  7024   00B76E  C0B5  FFD9         	movff	dir_next@dp,fsr2l
  7025   00B772  C0B6  FFDA         	movff	dir_next@dp+1,fsr2h
  7026   00B776  CFDE F0C9          	movff	postinc2,dir_next@fs
  7027   00B77A  CFDD F0CA          	movff	postdec2,dir_next@fs+1
  7028   00B77E                     
  7029                           ;mcc_generated_files/fatfs/ff.c: 1732:  ofs = dp->dptr + 32;
  7030   00B77E  0100               	movlb	0	; () banked
  7031   00B780  EE20 F00E          	lfsr	2,14
  7032   00B784  51B5               	movf	dir_next@dp& (0+255),w,b
  7033   00B786  26D9               	addwf	fsr2l,f,c
  7034   00B788  51B6               	movf	(dir_next@dp+1)& (0+255),w,b
  7035   00B78A  22DA               	addwfc	fsr2h,f,c
  7036   00B78C  CFDE F0B9          	movff	postinc2,??_dir_next
  7037   00B790  CFDE F0BA          	movff	postinc2,??_dir_next+1
  7038   00B794  CFDE F0BB          	movff	postinc2,??_dir_next+2
  7039   00B798  CFDE F0BC          	movff	postinc2,??_dir_next+3
  7040   00B79C  0E20               	movlw	32
  7041   00B79E  25B9               	addwf	??_dir_next& (0+255),w,b
  7042   00B7A0  6FC5               	movwf	dir_next@ofs& (0+255),b
  7043   00B7A2  0E00               	movlw	0
  7044   00B7A4  21BA               	addwfc	(??_dir_next+1)& (0+255),w,b
  7045   00B7A6  6FC6               	movwf	(dir_next@ofs+1)& (0+255),b
  7046   00B7A8  0E00               	movlw	0
  7047   00B7AA  21BB               	addwfc	(??_dir_next+2)& (0+255),w,b
  7048   00B7AC  6FC7               	movwf	(dir_next@ofs+2)& (0+255),b
  7049   00B7AE  0E00               	movlw	0
  7050   00B7B0  21BC               	addwfc	(??_dir_next+3)& (0+255),w,b
  7051   00B7B2  6FC8               	movwf	(dir_next@ofs+3)& (0+255),b
  7052   00B7B4                     
  7053                           ; BSR set to: 0
  7054                           ;mcc_generated_files/fatfs/ff.c: 1733:  if (dp->sect == 0 || ofs >= (DWORD)((0 && fs->fs
      +                          _type == 4) ? 0x10000000 : 0x200000)) return FR_NO_FILE;
  7055   00B7B4  EE20 F016          	lfsr	2,22
  7056   00B7B8  51B5               	movf	dir_next@dp& (0+255),w,b
  7057   00B7BA  26D9               	addwf	fsr2l,f,c
  7058   00B7BC  51B6               	movf	(dir_next@dp+1)& (0+255),w,b
  7059   00B7BE  22DA               	addwfc	fsr2h,f,c
  7060   00B7C0  50DE               	movf	postinc2,w,c
  7061   00B7C2  10DE               	iorwf	postinc2,w,c
  7062   00B7C4  10DE               	iorwf	postinc2,w,c
  7063   00B7C6  10DE               	iorwf	postinc2,w,c
  7064   00B7C8  B4D8               	btfsc	status,2,c
  7065   00B7CA  EFE9  F05B         	goto	u9101
  7066   00B7CE  EFEB  F05B         	goto	u9100
  7067   00B7D2                     u9101:
  7068   00B7D2  EFF6  F05B         	goto	l6991
  7069   00B7D6                     u9100:
  7070   00B7D6                     
  7071                           ; BSR set to: 0
  7072   00B7D6  51C8               	movf	(dir_next@ofs+3)& (0+255),w,b
  7073   00B7D8  E109               	bnz	u9110
  7074   00B7DA  0E20               	movlw	32
  7075   00B7DC  5DC7               	subwf	(dir_next@ofs+2)& (0+255),w,b
  7076   00B7DE  A0D8               	btfss	status,0,c
  7077   00B7E0  EFF4  F05B         	goto	u9111
  7078   00B7E4  EFF6  F05B         	goto	u9110
  7079   00B7E8                     u9111:
  7080   00B7E8  EFF9  F05B         	goto	l6995
  7081   00B7EC                     u9110:
  7082   00B7EC                     l6991:
  7083                           
  7084                           ; BSR set to: 0
  7085   00B7EC  0E04               	movlw	4
  7086   00B7EE  EFC1  F05D         	goto	l742
  7087   00B7F2                     l6995:
  7088                           
  7089                           ; BSR set to: 0
  7090                           ;mcc_generated_files/fatfs/ff.c: 1735:  if (ofs % ((UINT)512) == 0) {
  7091   00B7F2  0EFF               	movlw	255
  7092   00B7F4  15C5               	andwf	dir_next@ofs& (0+255),w,b
  7093   00B7F6  6FB9               	movwf	??_dir_next& (0+255),b
  7094   00B7F8  0E01               	movlw	1
  7095   00B7FA  15C6               	andwf	(dir_next@ofs+1)& (0+255),w,b
  7096   00B7FC  6FBA               	movwf	(??_dir_next+1)& (0+255),b
  7097   00B7FE  0E00               	movlw	0
  7098   00B800  15C7               	andwf	(dir_next@ofs+2)& (0+255),w,b
  7099   00B802  6FBB               	movwf	(??_dir_next+2)& (0+255),b
  7100   00B804  0E00               	movlw	0
  7101   00B806  15C8               	andwf	(dir_next@ofs+3)& (0+255),w,b
  7102   00B808  6FBC               	movwf	(??_dir_next+3)& (0+255),b
  7103   00B80A  51B9               	movf	??_dir_next& (0+255),w,b
  7104   00B80C  11BA               	iorwf	(??_dir_next+1)& (0+255),w,b
  7105   00B80E  11BB               	iorwf	(??_dir_next+2)& (0+255),w,b
  7106   00B810  11BC               	iorwf	(??_dir_next+3)& (0+255),w,b
  7107   00B812  A4D8               	btfss	status,2,c
  7108   00B814  EF0E  F05C         	goto	u9121
  7109   00B818  EF10  F05C         	goto	u9120
  7110   00B81C                     u9121:
  7111   00B81C  EF98  F05D         	goto	l7063
  7112   00B820                     u9120:
  7113   00B820                     
  7114                           ; BSR set to: 0
  7115                           ;mcc_generated_files/fatfs/ff.c: 1736:   dp->sect++;
  7116   00B820  EE20 F016          	lfsr	2,22
  7117   00B824  51B5               	movf	dir_next@dp& (0+255),w,b
  7118   00B826  26D9               	addwf	fsr2l,f,c
  7119   00B828  51B6               	movf	(dir_next@dp+1)& (0+255),w,b
  7120   00B82A  22DA               	addwfc	fsr2h,f,c
  7121   00B82C  2ADE               	incf	postinc2,f,c
  7122   00B82E  0E00               	movlw	0
  7123   00B830  22DE               	addwfc	postinc2,f,c
  7124   00B832  22DE               	addwfc	postinc2,f,c
  7125   00B834  22DE               	addwfc	postinc2,f,c
  7126                           
  7127                           ;mcc_generated_files/fatfs/ff.c: 1738:   if (dp->clust == 0) {
  7128   00B836  EE20 F012          	lfsr	2,18
  7129   00B83A  51B5               	movf	dir_next@dp& (0+255),w,b
  7130   00B83C  26D9               	addwf	fsr2l,f,c
  7131   00B83E  51B6               	movf	(dir_next@dp+1)& (0+255),w,b
  7132   00B840  22DA               	addwfc	fsr2h,f,c
  7133   00B842  50DE               	movf	postinc2,w,c
  7134   00B844  10DE               	iorwf	postinc2,w,c
  7135   00B846  10DE               	iorwf	postinc2,w,c
  7136   00B848  10DE               	iorwf	postinc2,w,c
  7137   00B84A  A4D8               	btfss	status,2,c
  7138   00B84C  EF2A  F05C         	goto	u9131
  7139   00B850  EF2C  F05C         	goto	u9130
  7140   00B854                     u9131:
  7141   00B854  EF6A  F05C         	goto	l7007
  7142   00B858                     u9130:
  7143   00B858                     
  7144                           ; BSR set to: 0
  7145                           ;mcc_generated_files/fatfs/ff.c: 1739:    if (ofs / 32 >= fs->n_rootdir) {
  7146   00B858  EE20 F007          	lfsr	2,7
  7147   00B85C  51C9               	movf	dir_next@fs& (0+255),w,b
  7148   00B85E  26D9               	addwf	fsr2l,f,c
  7149   00B860  51CA               	movf	(dir_next@fs+1)& (0+255),w,b
  7150   00B862  22DA               	addwfc	fsr2h,f,c
  7151   00B864  CFDE F0B9          	movff	postinc2,??_dir_next
  7152   00B868  CFDD F0BA          	movff	postdec2,??_dir_next+1
  7153   00B86C  51B9               	movf	??_dir_next& (0+255),w,b
  7154   00B86E  6FBB               	movwf	(??_dir_next+2)& (0+255),b
  7155   00B870  51BA               	movf	(??_dir_next+1)& (0+255),w,b
  7156   00B872  6FBC               	movwf	(??_dir_next+3)& (0+255),b
  7157   00B874  6BBD               	clrf	(??_dir_next+4)& (0+255),b
  7158   00B876  6BBE               	clrf	(??_dir_next+5)& (0+255),b
  7159   00B878  C0C5  F0BF         	movff	dir_next@ofs,??_dir_next+6
  7160   00B87C  C0C6  F0C0         	movff	dir_next@ofs+1,??_dir_next+7
  7161   00B880  C0C7  F0C1         	movff	dir_next@ofs+2,??_dir_next+8
  7162   00B884  C0C8  F0C2         	movff	dir_next@ofs+3,??_dir_next+9
  7163   00B888  0E06               	movlw	6
  7164   00B88A  EF4C  F05C         	goto	u9140
  7165   00B88E                     u9145:
  7166   00B88E  90D8               	bcf	status,0,c
  7167   00B890  33C2               	rrcf	(??_dir_next+9)& (0+255),f,b
  7168   00B892  33C1               	rrcf	(??_dir_next+8)& (0+255),f,b
  7169   00B894  33C0               	rrcf	(??_dir_next+7)& (0+255),f,b
  7170   00B896  33BF               	rrcf	(??_dir_next+6)& (0+255),f,b
  7171   00B898                     u9140:
  7172   00B898  2EE8               	decfsz	wreg,f,c
  7173   00B89A  EF47  F05C         	goto	u9145
  7174   00B89E  51BB               	movf	(??_dir_next+2)& (0+255),w,b
  7175   00B8A0  5DBF               	subwf	(??_dir_next+6)& (0+255),w,b
  7176   00B8A2  51BC               	movf	(??_dir_next+3)& (0+255),w,b
  7177   00B8A4  59C0               	subwfb	(??_dir_next+7)& (0+255),w,b
  7178   00B8A6  51BD               	movf	(??_dir_next+4)& (0+255),w,b
  7179   00B8A8  59C1               	subwfb	(??_dir_next+8)& (0+255),w,b
  7180   00B8AA  51BE               	movf	(??_dir_next+5)& (0+255),w,b
  7181   00B8AC  59C2               	subwfb	(??_dir_next+9)& (0+255),w,b
  7182   00B8AE  A0D8               	btfss	status,0,c
  7183   00B8B0  EF5C  F05C         	goto	u9151
  7184   00B8B4  EF5E  F05C         	goto	u9150
  7185   00B8B8                     u9151:
  7186   00B8B8  EF98  F05D         	goto	l7063
  7187   00B8BC                     u9150:
  7188   00B8BC                     
  7189                           ; BSR set to: 0
  7190                           ;mcc_generated_files/fatfs/ff.c: 1740:     dp->sect = 0; return FR_NO_FILE;
  7191   00B8BC  EE20 F016          	lfsr	2,22
  7192   00B8C0  51B5               	movf	dir_next@dp& (0+255),w,b
  7193   00B8C2  26D9               	addwf	fsr2l,f,c
  7194   00B8C4  51B6               	movf	(dir_next@dp+1)& (0+255),w,b
  7195   00B8C6  22DA               	addwfc	fsr2h,f,c
  7196   00B8C8  6ADE               	clrf	postinc2,c
  7197   00B8CA  6ADE               	clrf	postinc2,c
  7198   00B8CC  6ADE               	clrf	postinc2,c
  7199   00B8CE  6ADD               	clrf	postdec2,c
  7200   00B8D0  EFF6  F05B         	goto	l6991
  7201   00B8D4                     l7007:
  7202                           
  7203                           ; BSR set to: 0
  7204                           ;mcc_generated_files/fatfs/ff.c: 1744:    if ((ofs / ((UINT)512) & (fs->csize - 1)) == 0
      +                          ) {
  7205   00B8D4  EE20 F009          	lfsr	2,9
  7206   00B8D8  51C9               	movf	dir_next@fs& (0+255),w,b
  7207   00B8DA  26D9               	addwf	fsr2l,f,c
  7208   00B8DC  51CA               	movf	(dir_next@fs+1)& (0+255),w,b
  7209   00B8DE  22DA               	addwfc	fsr2h,f,c
  7210   00B8E0  CFDE F0B9          	movff	postinc2,??_dir_next
  7211   00B8E4  CFDD F0BA          	movff	postdec2,??_dir_next+1
  7212   00B8E8  0EFF               	movlw	255
  7213   00B8EA  25B9               	addwf	??_dir_next& (0+255),w,b
  7214   00B8EC  6FBB               	movwf	(??_dir_next+2)& (0+255),b
  7215   00B8EE  0EFF               	movlw	255
  7216   00B8F0  21BA               	addwfc	(??_dir_next+1)& (0+255),w,b
  7217   00B8F2  6FBC               	movwf	(??_dir_next+3)& (0+255),b
  7218   00B8F4  C0C5  F0BD         	movff	dir_next@ofs,??_dir_next+4
  7219   00B8F8  C0C6  F0BE         	movff	dir_next@ofs+1,??_dir_next+5
  7220   00B8FC  C0C7  F0BF         	movff	dir_next@ofs+2,??_dir_next+6
  7221   00B900  C0C8  F0C0         	movff	dir_next@ofs+3,??_dir_next+7
  7222   00B904  0E0A               	movlw	10
  7223   00B906  EF8A  F05C         	goto	u9160
  7224   00B90A                     u9165:
  7225   00B90A  90D8               	bcf	status,0,c
  7226   00B90C  33C0               	rrcf	(??_dir_next+7)& (0+255),f,b
  7227   00B90E  33BF               	rrcf	(??_dir_next+6)& (0+255),f,b
  7228   00B910  33BE               	rrcf	(??_dir_next+5)& (0+255),f,b
  7229   00B912  33BD               	rrcf	(??_dir_next+4)& (0+255),f,b
  7230   00B914                     u9160:
  7231   00B914  2EE8               	decfsz	wreg,f,c
  7232   00B916  EF85  F05C         	goto	u9165
  7233   00B91A  51BB               	movf	(??_dir_next+2)& (0+255),w,b
  7234   00B91C  15BD               	andwf	(??_dir_next+4)& (0+255),w,b
  7235   00B91E  6FC1               	movwf	(??_dir_next+8)& (0+255),b
  7236   00B920  51BC               	movf	(??_dir_next+3)& (0+255),w,b
  7237   00B922  15BE               	andwf	(??_dir_next+5)& (0+255),w,b
  7238   00B924  6FC2               	movwf	(??_dir_next+9)& (0+255),b
  7239   00B926  0E00               	movlw	0
  7240   00B928  15BF               	andwf	(??_dir_next+6)& (0+255),w,b
  7241   00B92A  6FC3               	movwf	(??_dir_next+10)& (0+255),b
  7242   00B92C  0E00               	movlw	0
  7243   00B92E  15C0               	andwf	(??_dir_next+7)& (0+255),w,b
  7244   00B930  6FC4               	movwf	(??_dir_next+11)& (0+255),b
  7245   00B932  51C1               	movf	(??_dir_next+8)& (0+255),w,b
  7246   00B934  11C2               	iorwf	(??_dir_next+9)& (0+255),w,b
  7247   00B936  11C3               	iorwf	(??_dir_next+10)& (0+255),w,b
  7248   00B938  11C4               	iorwf	(??_dir_next+11)& (0+255),w,b
  7249   00B93A  A4D8               	btfss	status,2,c
  7250   00B93C  EFA2  F05C         	goto	u9171
  7251   00B940  EFA4  F05C         	goto	u9170
  7252   00B944                     u9171:
  7253   00B944  EF98  F05D         	goto	l7063
  7254   00B948                     u9170:
  7255   00B948                     
  7256                           ; BSR set to: 0
  7257                           ;mcc_generated_files/fatfs/ff.c: 1745:     clst = get_fat(&dp->obj, dp->clust);
  7258   00B948  C0B5  F077         	movff	dir_next@dp,get_fat@obj
  7259   00B94C  C0B6  F078         	movff	dir_next@dp+1,get_fat@obj+1
  7260   00B950  EE20 F012          	lfsr	2,18
  7261   00B954  51B5               	movf	dir_next@dp& (0+255),w,b
  7262   00B956  26D9               	addwf	fsr2l,f,c
  7263   00B958  51B6               	movf	(dir_next@dp+1)& (0+255),w,b
  7264   00B95A  22DA               	addwfc	fsr2h,f,c
  7265   00B95C  CFDE F079          	movff	postinc2,get_fat@clst
  7266   00B960  CFDE F07A          	movff	postinc2,get_fat@clst+1
  7267   00B964  CFDE F07B          	movff	postinc2,get_fat@clst+2
  7268   00B968  CFDE F07C          	movff	postinc2,get_fat@clst+3
  7269   00B96C  ECB7  F059         	call	_get_fat	;wreg free
  7270   00B970  C077  F0CB         	movff	?_get_fat,dir_next@clst
  7271   00B974  C078  F0CC         	movff	?_get_fat+1,dir_next@clst+1
  7272   00B978  C079  F0CD         	movff	?_get_fat+2,dir_next@clst+2
  7273   00B97C  C07A  F0CE         	movff	?_get_fat+3,dir_next@clst+3
  7274   00B980                     
  7275                           ;mcc_generated_files/fatfs/ff.c: 1746:     if (clst <= 1) return FR_INT_ERR;
  7276   00B980  0100               	movlb	0	; () banked
  7277   00B982  51CE               	movf	(dir_next@clst+3)& (0+255),w,b
  7278   00B984  11CD               	iorwf	(dir_next@clst+2)& (0+255),w,b
  7279   00B986  11CC               	iorwf	(dir_next@clst+1)& (0+255),w,b
  7280   00B988  E107               	bnz	u9181
  7281   00B98A  0E02               	movlw	2
  7282   00B98C  5DCB               	subwf	dir_next@clst& (0+255),w,b
  7283   00B98E  B0D8               	btfsc	status,0,c
  7284   00B990  EFCC  F05C         	goto	u9181
  7285   00B994  EFCE  F05C         	goto	u9180
  7286   00B998                     u9181:
  7287   00B998  EFD1  F05C         	goto	l7017
  7288   00B99C                     u9180:
  7289   00B99C                     l7013:
  7290                           
  7291                           ; BSR set to: 0
  7292   00B99C  0E02               	movlw	2
  7293   00B99E  EFC1  F05D         	goto	l742
  7294   00B9A2                     l7017:
  7295                           
  7296                           ; BSR set to: 0
  7297                           ;mcc_generated_files/fatfs/ff.c: 1747:     if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
  7298   00B9A2  29CB               	incf	dir_next@clst& (0+255),w,b
  7299   00B9A4  E10A               	bnz	u9191
  7300   00B9A6  29CC               	incf	(dir_next@clst+1)& (0+255),w,b
  7301   00B9A8  E108               	bnz	u9191
  7302   00B9AA  29CD               	incf	(dir_next@clst+2)& (0+255),w,b
  7303   00B9AC  E106               	bnz	u9191
  7304   00B9AE  29CE               	incf	(dir_next@clst+3)& (0+255),w,b
  7305   00B9B0  A4D8               	btfss	status,2,c
  7306   00B9B2  EFDD  F05C         	goto	u9191
  7307   00B9B6  EFDF  F05C         	goto	u9190
  7308   00B9BA                     u9191:
  7309   00B9BA  EFE2  F05C         	goto	l7023
  7310   00B9BE                     u9190:
  7311   00B9BE                     l7019:
  7312   00B9BE  0E01               	movlw	1
  7313   00B9C0  EFC1  F05D         	goto	l742
  7314   00B9C4                     l7023:
  7315                           
  7316                           ; BSR set to: 0
  7317                           ;mcc_generated_files/fatfs/ff.c: 1748:     if (clst >= fs->n_fatent) {
  7318   00B9C4  EE20 F017          	lfsr	2,23
  7319   00B9C8  51C9               	movf	dir_next@fs& (0+255),w,b
  7320   00B9CA  26D9               	addwf	fsr2l,f,c
  7321   00B9CC  51CA               	movf	(dir_next@fs+1)& (0+255),w,b
  7322   00B9CE  22DA               	addwfc	fsr2h,f,c
  7323   00B9D0  50DE               	movf	postinc2,w,c
  7324   00B9D2  5DCB               	subwf	dir_next@clst& (0+255),w,b
  7325   00B9D4  50DE               	movf	postinc2,w,c
  7326   00B9D6  59CC               	subwfb	(dir_next@clst+1)& (0+255),w,b
  7327   00B9D8  50DE               	movf	postinc2,w,c
  7328   00B9DA  59CD               	subwfb	(dir_next@clst+2)& (0+255),w,b
  7329   00B9DC  50DE               	movf	postinc2,w,c
  7330   00B9DE  59CE               	subwfb	(dir_next@clst+3)& (0+255),w,b
  7331   00B9E0  A0D8               	btfss	status,0,c
  7332   00B9E2  EFF5  F05C         	goto	u9201
  7333   00B9E6  EFF7  F05C         	goto	u9200
  7334   00B9EA                     u9201:
  7335   00B9EA  EF6C  F05D         	goto	l750
  7336   00B9EE                     u9200:
  7337   00B9EE                     
  7338                           ; BSR set to: 0
  7339                           ;mcc_generated_files/fatfs/ff.c: 1750:      if (!stretch) {
  7340   00B9EE  51B7               	movf	dir_next@stretch& (0+255),w,b
  7341   00B9F0  11B8               	iorwf	(dir_next@stretch+1)& (0+255),w,b
  7342   00B9F2  A4D8               	btfss	status,2,c
  7343   00B9F4  EFFE  F05C         	goto	u9211
  7344   00B9F8  EF00  F05D         	goto	u9210
  7345   00B9FC                     u9211:
  7346   00B9FC  EF0C  F05D         	goto	l7033
  7347   00BA00                     u9210:
  7348   00BA00                     
  7349                           ; BSR set to: 0
  7350                           ;mcc_generated_files/fatfs/ff.c: 1751:       dp->sect = 0; return FR_NO_FILE;
  7351   00BA00  EE20 F016          	lfsr	2,22
  7352   00BA04  51B5               	movf	dir_next@dp& (0+255),w,b
  7353   00BA06  26D9               	addwf	fsr2l,f,c
  7354   00BA08  51B6               	movf	(dir_next@dp+1)& (0+255),w,b
  7355   00BA0A  22DA               	addwfc	fsr2h,f,c
  7356   00BA0C  6ADE               	clrf	postinc2,c
  7357   00BA0E  6ADE               	clrf	postinc2,c
  7358   00BA10  6ADE               	clrf	postinc2,c
  7359   00BA12  6ADD               	clrf	postdec2,c
  7360   00BA14  EFF6  F05B         	goto	l6991
  7361   00BA18                     l7033:
  7362                           
  7363                           ; BSR set to: 0
  7364                           ;mcc_generated_files/fatfs/ff.c: 1753:      clst = create_chain(&dp->obj, dp->clust);
  7365   00BA18  C0B5  F098         	movff	dir_next@dp,create_chain@obj
  7366   00BA1C  C0B6  F099         	movff	dir_next@dp+1,create_chain@obj+1
  7367   00BA20  EE20 F012          	lfsr	2,18
  7368   00BA24  51B5               	movf	dir_next@dp& (0+255),w,b
  7369   00BA26  26D9               	addwf	fsr2l,f,c
  7370   00BA28  51B6               	movf	(dir_next@dp+1)& (0+255),w,b
  7371   00BA2A  22DA               	addwfc	fsr2h,f,c
  7372   00BA2C  CFDE F09A          	movff	postinc2,create_chain@clst
  7373   00BA30  CFDE F09B          	movff	postinc2,create_chain@clst+1
  7374   00BA34  CFDE F09C          	movff	postinc2,create_chain@clst+2
  7375   00BA38  CFDE F09D          	movff	postinc2,create_chain@clst+3
  7376   00BA3C  ECEF  F066         	call	_create_chain	;wreg free
  7377   00BA40  C098  F0CB         	movff	?_create_chain,dir_next@clst
  7378   00BA44  C099  F0CC         	movff	?_create_chain+1,dir_next@clst+1
  7379   00BA48  C09A  F0CD         	movff	?_create_chain+2,dir_next@clst+2
  7380   00BA4C  C09B  F0CE         	movff	?_create_chain+3,dir_next@clst+3
  7381   00BA50                     
  7382                           ;mcc_generated_files/fatfs/ff.c: 1754:      if (clst == 0) return FR_DENIED;
  7383   00BA50  0100               	movlb	0	; () banked
  7384   00BA52  51CB               	movf	dir_next@clst& (0+255),w,b
  7385   00BA54  11CC               	iorwf	(dir_next@clst+1)& (0+255),w,b
  7386   00BA56  11CD               	iorwf	(dir_next@clst+2)& (0+255),w,b
  7387   00BA58  11CE               	iorwf	(dir_next@clst+3)& (0+255),w,b
  7388   00BA5A  A4D8               	btfss	status,2,c
  7389   00BA5C  EF32  F05D         	goto	u9221
  7390   00BA60  EF34  F05D         	goto	u9220
  7391   00BA64                     u9221:
  7392   00BA64  EF37  F05D         	goto	l7041
  7393   00BA68                     u9220:
  7394   00BA68                     
  7395                           ; BSR set to: 0
  7396   00BA68  0E07               	movlw	7
  7397   00BA6A  EFC1  F05D         	goto	l742
  7398   00BA6E                     l7041:
  7399                           
  7400                           ; BSR set to: 0
  7401                           ;mcc_generated_files/fatfs/ff.c: 1755:      if (clst == 1) return FR_INT_ERR;
  7402   00BA6E  05CB               	decf	dir_next@clst& (0+255),w,b
  7403   00BA70  11CC               	iorwf	(dir_next@clst+1)& (0+255),w,b
  7404   00BA72  11CD               	iorwf	(dir_next@clst+2)& (0+255),w,b
  7405   00BA74  11CE               	iorwf	(dir_next@clst+3)& (0+255),w,b
  7406   00BA76  A4D8               	btfss	status,2,c
  7407   00BA78  EF40  F05D         	goto	u9231
  7408   00BA7C  EF42  F05D         	goto	u9230
  7409   00BA80                     u9231:
  7410   00BA80  EF44  F05D         	goto	l7047
  7411   00BA84                     u9230:
  7412   00BA84  EFCE  F05C         	goto	l7013
  7413   00BA88                     l7047:
  7414                           
  7415                           ; BSR set to: 0
  7416                           ;mcc_generated_files/fatfs/ff.c: 1756:      if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
  7417   00BA88  29CB               	incf	dir_next@clst& (0+255),w,b
  7418   00BA8A  E10A               	bnz	u9241
  7419   00BA8C  29CC               	incf	(dir_next@clst+1)& (0+255),w,b
  7420   00BA8E  E108               	bnz	u9241
  7421   00BA90  29CD               	incf	(dir_next@clst+2)& (0+255),w,b
  7422   00BA92  E106               	bnz	u9241
  7423   00BA94  29CE               	incf	(dir_next@clst+3)& (0+255),w,b
  7424   00BA96  A4D8               	btfss	status,2,c
  7425   00BA98  EF50  F05D         	goto	u9241
  7426   00BA9C  EF52  F05D         	goto	u9240
  7427   00BAA0                     u9241:
  7428   00BAA0  EF54  F05D         	goto	l7053
  7429   00BAA4                     u9240:
  7430   00BAA4  EFDF  F05C         	goto	l7019
  7431   00BAA8                     l7053:
  7432                           
  7433                           ; BSR set to: 0
  7434                           ;mcc_generated_files/fatfs/ff.c: 1757:      if (dir_clear(fs, clst) != FR_OK) return FR_
      +                          DISK_ERR;
  7435   00BAA8  C0C9  F070         	movff	dir_next@fs,dir_clear@fs
  7436   00BAAC  C0CA  F071         	movff	dir_next@fs+1,dir_clear@fs+1
  7437   00BAB0  C0CB  F072         	movff	dir_next@clst,dir_clear@clst
  7438   00BAB4  C0CC  F073         	movff	dir_next@clst+1,dir_clear@clst+1
  7439   00BAB8  C0CD  F074         	movff	dir_next@clst+2,dir_clear@clst+2
  7440   00BABC  C0CE  F075         	movff	dir_next@clst+3,dir_clear@clst+3
  7441   00BAC0  EC6A  F04F         	call	_dir_clear	;wreg free
  7442   00BAC4  0900               	iorlw	0
  7443   00BAC6  B4D8               	btfsc	status,2,c
  7444   00BAC8  EF68  F05D         	goto	u9251
  7445   00BACC  EF6A  F05D         	goto	u9250
  7446   00BAD0                     u9251:
  7447   00BAD0  EF6C  F05D         	goto	l750
  7448   00BAD4                     u9250:
  7449   00BAD4  EFDF  F05C         	goto	l7019
  7450   00BAD8                     l750:
  7451                           
  7452                           ;mcc_generated_files/fatfs/ff.c: 1764:     dp->clust = clst;
  7453   00BAD8  0100               	movlb	0	; () banked
  7454   00BADA  EE20 F012          	lfsr	2,18
  7455   00BADE  51B5               	movf	dir_next@dp& (0+255),w,b
  7456   00BAE0  26D9               	addwf	fsr2l,f,c
  7457   00BAE2  51B6               	movf	(dir_next@dp+1)& (0+255),w,b
  7458   00BAE4  22DA               	addwfc	fsr2h,f,c
  7459   00BAE6  C0CB  FFDE         	movff	dir_next@clst,postinc2
  7460   00BAEA  C0CC  FFDE         	movff	dir_next@clst+1,postinc2
  7461   00BAEE  C0CD  FFDE         	movff	dir_next@clst+2,postinc2
  7462   00BAF2  C0CE  FFDE         	movff	dir_next@clst+3,postinc2
  7463   00BAF6                     
  7464                           ; BSR set to: 0
  7465                           ;mcc_generated_files/fatfs/ff.c: 1765:     dp->sect = clst2sect(fs, clst);
  7466   00BAF6  C0C9  F00D         	movff	dir_next@fs,clst2sect@fs
  7467   00BAFA  C0CA  F00E         	movff	dir_next@fs+1,clst2sect@fs+1
  7468   00BAFE  C0CB  F00F         	movff	dir_next@clst,clst2sect@clst
  7469   00BB02  C0CC  F010         	movff	dir_next@clst+1,clst2sect@clst+1
  7470   00BB06  C0CD  F011         	movff	dir_next@clst+2,clst2sect@clst+2
  7471   00BB0A  C0CE  F012         	movff	dir_next@clst+3,clst2sect@clst+3
  7472   00BB0E  EC25  F04B         	call	_clst2sect	;wreg free
  7473   00BB12  0100               	movlb	0	; () banked
  7474   00BB14  EE20 F016          	lfsr	2,22
  7475   00BB18  51B5               	movf	dir_next@dp& (0+255),w,b
  7476   00BB1A  26D9               	addwf	fsr2l,f,c
  7477   00BB1C  51B6               	movf	(dir_next@dp+1)& (0+255),w,b
  7478   00BB1E  22DA               	addwfc	fsr2h,f,c
  7479   00BB20  C00D  FFDE         	movff	?_clst2sect,postinc2
  7480   00BB24  C00E  FFDE         	movff	?_clst2sect+1,postinc2
  7481   00BB28  C00F  FFDE         	movff	?_clst2sect+2,postinc2
  7482   00BB2C  C010  FFDE         	movff	?_clst2sect+3,postinc2
  7483   00BB30                     l7063:
  7484                           
  7485                           ; BSR set to: 0
  7486                           ;mcc_generated_files/fatfs/ff.c: 1769:  dp->dptr = ofs;
  7487   00BB30  EE20 F00E          	lfsr	2,14
  7488   00BB34  51B5               	movf	dir_next@dp& (0+255),w,b
  7489   00BB36  26D9               	addwf	fsr2l,f,c
  7490   00BB38  51B6               	movf	(dir_next@dp+1)& (0+255),w,b
  7491   00BB3A  22DA               	addwfc	fsr2h,f,c
  7492   00BB3C  C0C5  FFDE         	movff	dir_next@ofs,postinc2
  7493   00BB40  C0C6  FFDE         	movff	dir_next@ofs+1,postinc2
  7494   00BB44  C0C7  FFDE         	movff	dir_next@ofs+2,postinc2
  7495   00BB48  C0C8  FFDE         	movff	dir_next@ofs+3,postinc2
  7496   00BB4C                     
  7497                           ; BSR set to: 0
  7498                           ;mcc_generated_files/fatfs/ff.c: 1770:  dp->dir = fs->win + ofs % ((UINT)512);
  7499   00BB4C  0EFF               	movlw	255
  7500   00BB4E  15C5               	andwf	dir_next@ofs& (0+255),w,b
  7501   00BB50  6FB9               	movwf	??_dir_next& (0+255),b
  7502   00BB52  0E01               	movlw	1
  7503   00BB54  15C6               	andwf	(dir_next@ofs+1)& (0+255),w,b
  7504   00BB56  6FBA               	movwf	(??_dir_next+1)& (0+255),b
  7505   00BB58  51B9               	movf	??_dir_next& (0+255),w,b
  7506   00BB5A  25C9               	addwf	dir_next@fs& (0+255),w,b
  7507   00BB5C  6FBB               	movwf	(??_dir_next+2)& (0+255),b
  7508   00BB5E  51BA               	movf	(??_dir_next+1)& (0+255),w,b
  7509   00BB60  21CA               	addwfc	(dir_next@fs+1)& (0+255),w,b
  7510   00BB62  6FBC               	movwf	(??_dir_next+3)& (0+255),b
  7511   00BB64  0E33               	movlw	51
  7512   00BB66  27BB               	addwf	(??_dir_next+2)& (0+255),f,b
  7513   00BB68  0E00               	movlw	0
  7514   00BB6A  23BC               	addwfc	(??_dir_next+3)& (0+255),f,b
  7515   00BB6C  EE20 F01A          	lfsr	2,26
  7516   00BB70  51B5               	movf	dir_next@dp& (0+255),w,b
  7517   00BB72  26D9               	addwf	fsr2l,f,c
  7518   00BB74  51B6               	movf	(dir_next@dp+1)& (0+255),w,b
  7519   00BB76  22DA               	addwfc	fsr2h,f,c
  7520   00BB78  C0BB  FFDE         	movff	??_dir_next+2,postinc2
  7521   00BB7C  C0BC  FFDD         	movff	??_dir_next+3,postdec2
  7522   00BB80                     
  7523                           ; BSR set to: 0
  7524                           ;mcc_generated_files/fatfs/ff.c: 1772:  return FR_OK;
  7525   00BB80  0E00               	movlw	0
  7526   00BB82                     l742:
  7527   00BB82  0012               	return		;funcret
  7528   00BB84                     __end_of_dir_next:
  7529                           	callstack 0
  7530                           
  7531 ;; *************** function _dir_clear *****************
  7532 ;; Defined at:
  7533 ;;		line 1636 in file "mcc_generated_files/fatfs/ff.c"
  7534 ;; Parameters:    Size  Location     Type
  7535 ;;  fs              2   16[BANK0 ] PTR struct .
  7536 ;;		 -> drive(563), NULL(0), FatFs(563), 
  7537 ;;  clst            4   18[BANK0 ] unsigned long 
  7538 ;; Auto vars:     Size  Location     Type
  7539 ;;  sect            4   24[BANK0 ] unsigned long 
  7540 ;;  n               2   30[BANK0 ] unsigned int 
  7541 ;;  szb             2   28[BANK0 ] unsigned int 
  7542 ;;  ibuf            2   22[BANK0 ] PTR unsigned char 
  7543 ;;		 -> FatFs.win(512), drive.win(512), drive(563), NULL(0), 
  7544 ;;		 -> FatFs(563), 
  7545 ;; Return value:  Size  Location     Type
  7546 ;;                  1    wreg      enum E68
  7547 ;; Registers used:
  7548 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  7549 ;; Tracked objects:
  7550 ;;		On entry : 0/0
  7551 ;;		On exit  : 0/0
  7552 ;;		Unchanged: 0/0
  7553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7554 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7555 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7556 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7557 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7558 ;;Total ram usage:       18 bytes
  7559 ;; Hardware stack levels used: 1
  7560 ;; Hardware stack levels required when called: 6
  7561 ;; This function calls:
  7562 ;;		_clst2sect
  7563 ;;		_disk_write
  7564 ;;		_mem_set
  7565 ;;		_sync_window
  7566 ;; This function is called by:
  7567 ;;		_dir_next
  7568 ;;		_f_mkdir
  7569 ;; This function uses a non-reentrant model
  7570 ;;
  7571                           
  7572                           	psect	text16
  7573   009ED4                     __ptext16:
  7574                           	callstack 0
  7575   009ED4                     _dir_clear:
  7576                           	callstack 20
  7577   009ED4                     
  7578                           ;mcc_generated_files/fatfs/ff.c: 1637:  FATFS *fs,;mcc_generated_files/fatfs/ff.c: 1638:
      +                            DWORD clst;mcc_generated_files/fatfs/ff.c: 1640: {;mcc_generated_files/fatfs/ff.c: 164
      +                          1:  DWORD sect;;mcc_generated_files/fatfs/ff.c: 1642:  UINT n, szb;;mcc_generated_files/
      +                          fatfs/ff.c: 1643:  BYTE *ibuf;;mcc_generated_files/fatfs/ff.c: 1646:  if (sync_window(fs
      +                          ) != FR_OK) return FR_DISK_ERR;
  7579   009ED4  C070  F059         	movff	dir_clear@fs,sync_window@fs
  7580   009ED8  C071  F05A         	movff	dir_clear@fs+1,sync_window@fs+1
  7581   009EDC  EC84  F051         	call	_sync_window	;wreg free
  7582   009EE0  0900               	iorlw	0
  7583   009EE2  B4D8               	btfsc	status,2,c
  7584   009EE4  EF76  F04F         	goto	u8381
  7585   009EE8  EF78  F04F         	goto	u8380
  7586   009EEC                     u8381:
  7587   009EEC  EF7B  F04F         	goto	l6601
  7588   009EF0                     u8380:
  7589   009EF0  0E01               	movlw	1
  7590   009EF2  EF11  F050         	goto	l700
  7591   009EF6                     l6601:
  7592                           
  7593                           ;mcc_generated_files/fatfs/ff.c: 1647:  sect = clst2sect(fs, clst);
  7594   009EF6  C070  F00D         	movff	dir_clear@fs,clst2sect@fs
  7595   009EFA  C071  F00E         	movff	dir_clear@fs+1,clst2sect@fs+1
  7596   009EFE  C072  F00F         	movff	dir_clear@clst,clst2sect@clst
  7597   009F02  C073  F010         	movff	dir_clear@clst+1,clst2sect@clst+1
  7598   009F06  C074  F011         	movff	dir_clear@clst+2,clst2sect@clst+2
  7599   009F0A  C075  F012         	movff	dir_clear@clst+3,clst2sect@clst+3
  7600   009F0E  EC25  F04B         	call	_clst2sect	;wreg free
  7601   009F12  C00D  F078         	movff	?_clst2sect,dir_clear@sect
  7602   009F16  C00E  F079         	movff	?_clst2sect+1,dir_clear@sect+1
  7603   009F1A  C00F  F07A         	movff	?_clst2sect+2,dir_clear@sect+2
  7604   009F1E  C010  F07B         	movff	?_clst2sect+3,dir_clear@sect+3
  7605   009F22                     
  7606                           ;mcc_generated_files/fatfs/ff.c: 1648:  fs->winsect = sect;
  7607   009F22  0100               	movlb	0	; () banked
  7608   009F24  EE20 F02F          	lfsr	2,47
  7609   009F28  5170               	movf	dir_clear@fs& (0+255),w,b
  7610   009F2A  26D9               	addwf	fsr2l,f,c
  7611   009F2C  5171               	movf	(dir_clear@fs+1)& (0+255),w,b
  7612   009F2E  22DA               	addwfc	fsr2h,f,c
  7613   009F30  C078  FFDE         	movff	dir_clear@sect,postinc2
  7614   009F34  C079  FFDE         	movff	dir_clear@sect+1,postinc2
  7615   009F38  C07A  FFDE         	movff	dir_clear@sect+2,postinc2
  7616   009F3C  C07B  FFDE         	movff	dir_clear@sect+3,postinc2
  7617   009F40                     
  7618                           ; BSR set to: 0
  7619                           ;mcc_generated_files/fatfs/ff.c: 1649:  mem_set(fs->win, 0, ((UINT)512));
  7620   009F40  0E33               	movlw	51
  7621   009F42  2570               	addwf	dir_clear@fs& (0+255),w,b
  7622   009F44  6E01               	movwf	mem_set@dst^0,c
  7623   009F46  0E00               	movlw	0
  7624   009F48  2171               	addwfc	(dir_clear@fs+1)& (0+255),w,b
  7625   009F4A  6E02               	movwf	(mem_set@dst+1)^0,c
  7626   009F4C  0E00               	movlw	0
  7627   009F4E  6E04               	movwf	(mem_set@val+1)^0,c
  7628   009F50  0E00               	movlw	0
  7629   009F52  6E03               	movwf	mem_set@val^0,c
  7630   009F54  0E02               	movlw	2
  7631   009F56  6E06               	movwf	(mem_set@cnt+1)^0,c
  7632   009F58  0E00               	movlw	0
  7633   009F5A  6E05               	movwf	mem_set@cnt^0,c
  7634   009F5C  ECCB  F045         	call	_mem_set	;wreg free
  7635   009F60                     
  7636                           ;mcc_generated_files/fatfs/ff.c: 1660:  {;mcc_generated_files/fatfs/ff.c: 1661:   ibuf =
      +                           fs->win; szb = 1;
  7637   009F60  0E33               	movlw	51
  7638   009F62  0100               	movlb	0	; () banked
  7639   009F64  2570               	addwf	dir_clear@fs& (0+255),w,b
  7640   009F66  6F76               	movwf	dir_clear@ibuf& (0+255),b
  7641   009F68  0E00               	movlw	0
  7642   009F6A  2171               	addwfc	(dir_clear@fs+1)& (0+255),w,b
  7643   009F6C  6F77               	movwf	(dir_clear@ibuf+1)& (0+255),b
  7644   009F6E                     
  7645                           ; BSR set to: 0
  7646   009F6E  0E00               	movlw	0
  7647   009F70  6F7D               	movwf	(dir_clear@szb+1)& (0+255),b
  7648   009F72  0E01               	movlw	1
  7649   009F74  6F7C               	movwf	dir_clear@szb& (0+255),b
  7650   009F76                     
  7651                           ; BSR set to: 0
  7652                           ;mcc_generated_files/fatfs/ff.c: 1662:   for (n = 0; n < fs->csize && disk_write(fs->pdr
      +                          v, ibuf, sect + n, szb) == RES_OK; n += szb) ;
  7653   009F76  0E00               	movlw	0
  7654   009F78  6F7F               	movwf	(dir_clear@n+1)& (0+255),b
  7655   009F7A  0E00               	movlw	0
  7656   009F7C  6F7E               	movwf	dir_clear@n& (0+255),b
  7657   009F7E  EFC6  F04F         	goto	l6615
  7658   009F82                     l6613:
  7659   009F82  0100               	movlb	0	; () banked
  7660   009F84  517C               	movf	dir_clear@szb& (0+255),w,b
  7661   009F86  277E               	addwf	dir_clear@n& (0+255),f,b
  7662   009F88  517D               	movf	(dir_clear@szb+1)& (0+255),w,b
  7663   009F8A  237F               	addwfc	(dir_clear@n+1)& (0+255),f,b
  7664   009F8C                     l6615:
  7665                           
  7666                           ; BSR set to: 0
  7667   009F8C  EE20 F009          	lfsr	2,9
  7668   009F90  5170               	movf	dir_clear@fs& (0+255),w,b
  7669   009F92  26D9               	addwf	fsr2l,f,c
  7670   009F94  5171               	movf	(dir_clear@fs+1)& (0+255),w,b
  7671   009F96  22DA               	addwfc	fsr2h,f,c
  7672   009F98  50DE               	movf	postinc2,w,c
  7673   009F9A  5D7E               	subwf	dir_clear@n& (0+255),w,b
  7674   009F9C  50DE               	movf	postinc2,w,c
  7675   009F9E  597F               	subwfb	(dir_clear@n+1)& (0+255),w,b
  7676   009FA0  B0D8               	btfsc	status,0,c
  7677   009FA2  EFD5  F04F         	goto	u8391
  7678   009FA6  EFD7  F04F         	goto	u8390
  7679   009FAA                     u8391:
  7680   009FAA  EFFC  F04F         	goto	l6619
  7681   009FAE                     u8390:
  7682   009FAE                     
  7683                           ; BSR set to: 0
  7684   009FAE  C076  F04D         	movff	dir_clear@ibuf,disk_write@buff
  7685   009FB2  C077  F04E         	movff	dir_clear@ibuf+1,disk_write@buff+1
  7686   009FB6  517E               	movf	dir_clear@n& (0+255),w,b
  7687   009FB8  2578               	addwf	dir_clear@sect& (0+255),w,b
  7688   009FBA  6E4F               	movwf	disk_write@sector^0,c
  7689   009FBC  517F               	movf	(dir_clear@n+1)& (0+255),w,b
  7690   009FBE  2179               	addwfc	(dir_clear@sect+1)& (0+255),w,b
  7691   009FC0  6E50               	movwf	(disk_write@sector+1)^0,c
  7692   009FC2  0E00               	movlw	0
  7693   009FC4  217A               	addwfc	(dir_clear@sect+2)& (0+255),w,b
  7694   009FC6  6E51               	movwf	(disk_write@sector+2)^0,c
  7695   009FC8  0E00               	movlw	0
  7696   009FCA  217B               	addwfc	(dir_clear@sect+3)& (0+255),w,b
  7697   009FCC  6E52               	movwf	(disk_write@sector+3)^0,c
  7698   009FCE  C07C  F053         	movff	dir_clear@szb,disk_write@count
  7699   009FD2  C07D  F054         	movff	dir_clear@szb+1,disk_write@count+1
  7700   009FD6  EE20 F001          	lfsr	2,1
  7701   009FDA  5170               	movf	dir_clear@fs& (0+255),w,b
  7702   009FDC  26D9               	addwf	fsr2l,f,c
  7703   009FDE  5171               	movf	(dir_clear@fs+1)& (0+255),w,b
  7704   009FE0  22DA               	addwfc	fsr2h,f,c
  7705   009FE2  50DF               	movf	indf2,w,c
  7706   009FE4  EC2C  F048         	call	_disk_write
  7707   009FE8  0900               	iorlw	0
  7708   009FEA  B4D8               	btfsc	status,2,c
  7709   009FEC  EFFA  F04F         	goto	u8401
  7710   009FF0  EFFC  F04F         	goto	u8400
  7711   009FF4                     u8401:
  7712   009FF4  EFC1  F04F         	goto	l6613
  7713   009FF8                     u8400:
  7714   009FF8                     l6619:
  7715                           
  7716                           ;mcc_generated_files/fatfs/ff.c: 1663:  };mcc_generated_files/fatfs/ff.c: 1664:  return 
      +                          (n == fs->csize) ? FR_OK : FR_DISK_ERR;
  7717   009FF8  0100               	movlb	0	; () banked
  7718   009FFA  EE20 F009          	lfsr	2,9
  7719   009FFE  5170               	movf	dir_clear@fs& (0+255),w,b
  7720   00A000  26D9               	addwf	fsr2l,f,c
  7721   00A002  5171               	movf	(dir_clear@fs+1)& (0+255),w,b
  7722   00A004  22DA               	addwfc	fsr2h,f,c
  7723   00A006  517E               	movf	dir_clear@n& (0+255),w,b
  7724   00A008  18DE               	xorwf	postinc2,w,c
  7725   00A00A  E107               	bnz	u8411
  7726   00A00C  517F               	movf	(dir_clear@n+1)& (0+255),w,b
  7727   00A00E  18DE               	xorwf	postinc2,w,c
  7728   00A010  A4D8               	btfss	status,2,c
  7729   00A012  EF0D  F050         	goto	u8411
  7730   00A016  EF10  F050         	goto	u8410
  7731   00A01A                     u8411:
  7732   00A01A  0E01               	movlw	1
  7733   00A01C  EF11  F050         	goto	u8420
  7734   00A020                     u8410:
  7735   00A020  0E00               	movlw	0
  7736   00A022                     u8420:
  7737   00A022                     l700:
  7738   00A022  0012               	return		;funcret
  7739   00A024                     __end_of_dir_clear:
  7740                           	callstack 0
  7741                           
  7742 ;; *************** function _clst2sect *****************
  7743 ;; Defined at:
  7744 ;;		line 1124 in file "mcc_generated_files/fatfs/ff.c"
  7745 ;; Parameters:    Size  Location     Type
  7746 ;;  fs              2   12[COMRAM] PTR struct .
  7747 ;;		 -> drive(563), NULL(0), FatFs(563), 
  7748 ;;  clst            4   14[COMRAM] unsigned long 
  7749 ;; Auto vars:     Size  Location     Type
  7750 ;;		None
  7751 ;; Return value:  Size  Location     Type
  7752 ;;                  4   12[COMRAM] unsigned long 
  7753 ;; Registers used:
  7754 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7755 ;; Tracked objects:
  7756 ;;		On entry : 0/0
  7757 ;;		On exit  : 0/0
  7758 ;;		Unchanged: 0/0
  7759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7760 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7762 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7763 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7764 ;;Total ram usage:       12 bytes
  7765 ;; Hardware stack levels used: 1
  7766 ;; Hardware stack levels required when called: 1
  7767 ;; This function calls:
  7768 ;;		___lmul
  7769 ;; This function is called by:
  7770 ;;		_dir_clear
  7771 ;;		_dir_sdi
  7772 ;;		_dir_next
  7773 ;;		_f_open
  7774 ;;		_f_write
  7775 ;;		_f_read
  7776 ;;		_f_lseek
  7777 ;;		_f_rename
  7778 ;; This function uses a non-reentrant model
  7779 ;;
  7780                           
  7781                           	psect	text17
  7782   00964A                     __ptext17:
  7783                           	callstack 0
  7784   00964A                     _clst2sect:
  7785                           	callstack 28
  7786   00964A                     
  7787                           ;mcc_generated_files/fatfs/ff.c: 1125:  FATFS* fs,;mcc_generated_files/fatfs/ff.c: 1126:
      +                            DWORD clst;mcc_generated_files/fatfs/ff.c: 1128: {;mcc_generated_files/fatfs/ff.c: 112
      +                          9:  clst -= 2;
  7788   00964A  0E02               	movlw	2
  7789   00964C  5E0F               	subwf	clst2sect@clst^0,f,c
  7790   00964E  0E00               	movlw	0
  7791   009650  5A10               	subwfb	(clst2sect@clst+1)^0,f,c
  7792   009652  5A11               	subwfb	(clst2sect@clst+2)^0,f,c
  7793   009654  5A12               	subwfb	(clst2sect@clst+3)^0,f,c
  7794   009656                     
  7795                           ;mcc_generated_files/fatfs/ff.c: 1130:  if (clst >= fs->n_fatent - 2) return 0;
  7796   009656  EE20 F017          	lfsr	2,23
  7797   00965A  500D               	movf	clst2sect@fs^0,w,c
  7798   00965C  26D9               	addwf	fsr2l,f,c
  7799   00965E  500E               	movf	(clst2sect@fs+1)^0,w,c
  7800   009660  22DA               	addwfc	fsr2h,f,c
  7801   009662  0EFE               	movlw	254
  7802   009664  24DE               	addwf	postinc2,w,c
  7803   009666  6E13               	movwf	??_clst2sect^0,c
  7804   009668  0EFF               	movlw	255
  7805   00966A  20DE               	addwfc	postinc2,w,c
  7806   00966C  6E14               	movwf	(??_clst2sect+1)^0,c
  7807   00966E  0EFF               	movlw	255
  7808   009670  20DE               	addwfc	postinc2,w,c
  7809   009672  6E15               	movwf	(??_clst2sect+2)^0,c
  7810   009674  0EFF               	movlw	255
  7811   009676  20DE               	addwfc	postinc2,w,c
  7812   009678  6E16               	movwf	(??_clst2sect+3)^0,c
  7813   00967A  5013               	movf	??_clst2sect^0,w,c
  7814   00967C  5C0F               	subwf	clst2sect@clst^0,w,c
  7815   00967E  5014               	movf	(??_clst2sect+1)^0,w,c
  7816   009680  5810               	subwfb	(clst2sect@clst+1)^0,w,c
  7817   009682  5015               	movf	(??_clst2sect+2)^0,w,c
  7818   009684  5811               	subwfb	(clst2sect@clst+2)^0,w,c
  7819   009686  5016               	movf	(??_clst2sect+3)^0,w,c
  7820   009688  5812               	subwfb	(clst2sect@clst+3)^0,w,c
  7821   00968A  A0D8               	btfss	status,0,c
  7822   00968C  EF4A  F04B         	goto	u7841
  7823   009690  EF4C  F04B         	goto	u7840
  7824   009694                     u7841:
  7825   009694  EF56  F04B         	goto	l6321
  7826   009698                     u7840:
  7827   009698  0E00               	movlw	0
  7828   00969A  6E0D               	movwf	?_clst2sect^0,c
  7829   00969C  0E00               	movlw	0
  7830   00969E  6E0E               	movwf	(?_clst2sect+1)^0,c
  7831   0096A0  0E00               	movlw	0
  7832   0096A2  6E0F               	movwf	(?_clst2sect+2)^0,c
  7833   0096A4  0E00               	movlw	0
  7834   0096A6  6E10               	movwf	(?_clst2sect+3)^0,c
  7835   0096A8  EF8A  F04B         	goto	l594
  7836   0096AC                     l6321:
  7837                           
  7838                           ;mcc_generated_files/fatfs/ff.c: 1131:  return fs->database + fs->csize * clst;
  7839   0096AC  EE20 F02B          	lfsr	2,43
  7840   0096B0  500D               	movf	clst2sect@fs^0,w,c
  7841   0096B2  26D9               	addwf	fsr2l,f,c
  7842   0096B4  500E               	movf	(clst2sect@fs+1)^0,w,c
  7843   0096B6  22DA               	addwfc	fsr2h,f,c
  7844   0096B8  CFDE F013          	movff	postinc2,??_clst2sect
  7845   0096BC  CFDE F014          	movff	postinc2,??_clst2sect+1
  7846   0096C0  CFDE F015          	movff	postinc2,??_clst2sect+2
  7847   0096C4  CFDE F016          	movff	postinc2,??_clst2sect+3
  7848   0096C8  EE20 F009          	lfsr	2,9
  7849   0096CC  500D               	movf	clst2sect@fs^0,w,c
  7850   0096CE  26D9               	addwf	fsr2l,f,c
  7851   0096D0  500E               	movf	(clst2sect@fs+1)^0,w,c
  7852   0096D2  22DA               	addwfc	fsr2h,f,c
  7853   0096D4  CFDE F017          	movff	postinc2,??_clst2sect+4
  7854   0096D8  CFDD F018          	movff	postdec2,??_clst2sect+5
  7855   0096DC  C017  F001         	movff	??_clst2sect+4,___lmul@multiplier
  7856   0096E0  C018  F002         	movff	??_clst2sect+5,___lmul@multiplier+1
  7857   0096E4  6A03               	clrf	(___lmul@multiplier+2)^0,c
  7858   0096E6  6A04               	clrf	(___lmul@multiplier+3)^0,c
  7859   0096E8  C00F  F005         	movff	clst2sect@clst,___lmul@multiplicand
  7860   0096EC  C010  F006         	movff	clst2sect@clst+1,___lmul@multiplicand+1
  7861   0096F0  C011  F007         	movff	clst2sect@clst+2,___lmul@multiplicand+2
  7862   0096F4  C012  F008         	movff	clst2sect@clst+3,___lmul@multiplicand+3
  7863   0096F8  EC4F  F047         	call	___lmul	;wreg free
  7864   0096FC  5013               	movf	??_clst2sect^0,w,c
  7865   0096FE  2401               	addwf	?___lmul^0,w,c
  7866   009700  6E0D               	movwf	?_clst2sect^0,c
  7867   009702  5014               	movf	(??_clst2sect+1)^0,w,c
  7868   009704  2002               	addwfc	(?___lmul+1)^0,w,c
  7869   009706  6E0E               	movwf	(?_clst2sect+1)^0,c
  7870   009708  5015               	movf	(??_clst2sect+2)^0,w,c
  7871   00970A  2003               	addwfc	(?___lmul+2)^0,w,c
  7872   00970C  6E0F               	movwf	(?_clst2sect+2)^0,c
  7873   00970E  5016               	movf	(??_clst2sect+3)^0,w,c
  7874   009710  2004               	addwfc	(?___lmul+3)^0,w,c
  7875   009712  6E10               	movwf	(?_clst2sect+3)^0,c
  7876   009714                     l594:
  7877   009714  0012               	return		;funcret
  7878   009716                     __end_of_clst2sect:
  7879                           	callstack 0
  7880                           
  7881 ;; *************** function _create_chain *****************
  7882 ;; Defined at:
  7883 ;;		line 1503 in file "mcc_generated_files/fatfs/ff.c"
  7884 ;; Parameters:    Size  Location     Type
  7885 ;;  obj             2   56[BANK0 ] PTR struct .
  7886 ;;		 -> f_rename@djn(40), f_rename@djo(40), f_mkdir@dj(40), f_unlink@sdj(40), 
  7887 ;;		 -> f_unlink@dj(40), f_stat@dj(40), f_chdir@dj(40), f_open@dj(40), 
  7888 ;;		 -> file(546), Fil(546), 
  7889 ;;  clst            4   58[BANK0 ] unsigned long 
  7890 ;; Auto vars:     Size  Location     Type
  7891 ;;  cs              4   81[BANK0 ] unsigned long 
  7892 ;;  ncl             4   75[BANK0 ] unsigned long 
  7893 ;;  scl             4   71[BANK0 ] unsigned long 
  7894 ;;  fs              2   79[BANK0 ] PTR struct .
  7895 ;;		 -> drive(563), NULL(0), FatFs(563), 
  7896 ;;  res             1   70[BANK0 ] enum E68
  7897 ;; Return value:  Size  Location     Type
  7898 ;;                  4   56[BANK0 ] unsigned long 
  7899 ;; Registers used:
  7900 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  7901 ;; Tracked objects:
  7902 ;;		On entry : 0/0
  7903 ;;		On exit  : 0/0
  7904 ;;		Unchanged: 0/0
  7905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7906 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7907 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7908 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7909 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7910 ;;Total ram usage:       29 bytes
  7911 ;; Hardware stack levels used: 1
  7912 ;; Hardware stack levels required when called: 8
  7913 ;; This function calls:
  7914 ;;		_get_fat
  7915 ;;		_put_fat
  7916 ;; This function is called by:
  7917 ;;		_dir_next
  7918 ;;		_f_write
  7919 ;;		_f_lseek
  7920 ;;		_f_mkdir
  7921 ;; This function uses a non-reentrant model
  7922 ;;
  7923                           
  7924                           	psect	text18
  7925   00CDDE                     __ptext18:
  7926                           	callstack 0
  7927   00CDDE                     _create_chain:
  7928                           	callstack 21
  7929   00CDDE                     
  7930                           ;mcc_generated_files/fatfs/ff.c: 1504:  FFOBJID* obj,;mcc_generated_files/fatfs/ff.c: 15
      +                          05:  DWORD clst;mcc_generated_files/fatfs/ff.c: 1507: {;mcc_generated_files/fatfs/ff.c: 
      +                          1508:  DWORD cs, ncl, scl;;mcc_generated_files/fatfs/ff.c: 1509:  FRESULT res;;mcc_gener
      +                          ated_files/fatfs/ff.c: 1510:  FATFS *fs = obj->fs;
  7931   00CDDE  C098  FFD9         	movff	create_chain@obj,fsr2l
  7932   00CDE2  C099  FFDA         	movff	create_chain@obj+1,fsr2h
  7933   00CDE6  CFDE F0AF          	movff	postinc2,create_chain@fs
  7934   00CDEA  CFDD F0B0          	movff	postdec2,create_chain@fs+1
  7935   00CDEE                     
  7936                           ;mcc_generated_files/fatfs/ff.c: 1513:  if (clst == 0) {
  7937   00CDEE  0100               	movlb	0	; () banked
  7938   00CDF0  519A               	movf	create_chain@clst& (0+255),w,b
  7939   00CDF2  119B               	iorwf	(create_chain@clst+1)& (0+255),w,b
  7940   00CDF4  119C               	iorwf	(create_chain@clst+2)& (0+255),w,b
  7941   00CDF6  119D               	iorwf	(create_chain@clst+3)& (0+255),w,b
  7942   00CDF8  A4D8               	btfss	status,2,c
  7943   00CDFA  EF01  F067         	goto	u8121
  7944   00CDFE  EF03  F067         	goto	u8120
  7945   00CE02                     u8121:
  7946   00CE02  EF3B  F067         	goto	l6493
  7947   00CE06                     u8120:
  7948   00CE06                     
  7949                           ; BSR set to: 0
  7950                           ;mcc_generated_files/fatfs/ff.c: 1514:   scl = fs->last_clst;
  7951   00CE06  EE20 F00B          	lfsr	2,11
  7952   00CE0A  51AF               	movf	create_chain@fs& (0+255),w,b
  7953   00CE0C  26D9               	addwf	fsr2l,f,c
  7954   00CE0E  51B0               	movf	(create_chain@fs+1)& (0+255),w,b
  7955   00CE10  22DA               	addwfc	fsr2h,f,c
  7956   00CE12  CFDE F0A7          	movff	postinc2,create_chain@scl
  7957   00CE16  CFDE F0A8          	movff	postinc2,create_chain@scl+1
  7958   00CE1A  CFDE F0A9          	movff	postinc2,create_chain@scl+2
  7959   00CE1E  CFDE F0AA          	movff	postinc2,create_chain@scl+3
  7960   00CE22                     
  7961                           ; BSR set to: 0
  7962                           ;mcc_generated_files/fatfs/ff.c: 1515:   if (scl == 0 || scl >= fs->n_fatent) scl = 1;
  7963   00CE22  51A7               	movf	create_chain@scl& (0+255),w,b
  7964   00CE24  11A8               	iorwf	(create_chain@scl+1)& (0+255),w,b
  7965   00CE26  11A9               	iorwf	(create_chain@scl+2)& (0+255),w,b
  7966   00CE28  11AA               	iorwf	(create_chain@scl+3)& (0+255),w,b
  7967   00CE2A  B4D8               	btfsc	status,2,c
  7968   00CE2C  EF1A  F067         	goto	u8131
  7969   00CE30  EF1C  F067         	goto	u8130
  7970   00CE34                     u8131:
  7971   00CE34  EF31  F067         	goto	l6491
  7972   00CE38                     u8130:
  7973   00CE38                     
  7974                           ; BSR set to: 0
  7975   00CE38  EE20 F017          	lfsr	2,23
  7976   00CE3C  51AF               	movf	create_chain@fs& (0+255),w,b
  7977   00CE3E  26D9               	addwf	fsr2l,f,c
  7978   00CE40  51B0               	movf	(create_chain@fs+1)& (0+255),w,b
  7979   00CE42  22DA               	addwfc	fsr2h,f,c
  7980   00CE44  50DE               	movf	postinc2,w,c
  7981   00CE46  5DA7               	subwf	create_chain@scl& (0+255),w,b
  7982   00CE48  50DE               	movf	postinc2,w,c
  7983   00CE4A  59A8               	subwfb	(create_chain@scl+1)& (0+255),w,b
  7984   00CE4C  50DE               	movf	postinc2,w,c
  7985   00CE4E  59A9               	subwfb	(create_chain@scl+2)& (0+255),w,b
  7986   00CE50  50DE               	movf	postinc2,w,c
  7987   00CE52  59AA               	subwfb	(create_chain@scl+3)& (0+255),w,b
  7988   00CE54  A0D8               	btfss	status,0,c
  7989   00CE56  EF2F  F067         	goto	u8141
  7990   00CE5A  EF31  F067         	goto	u8140
  7991   00CE5E                     u8141:
  7992   00CE5E  EFA0  F067         	goto	l6509
  7993   00CE62                     u8140:
  7994   00CE62                     l6491:
  7995                           
  7996                           ; BSR set to: 0
  7997   00CE62  0E01               	movlw	1
  7998   00CE64  6FA7               	movwf	create_chain@scl& (0+255),b
  7999   00CE66  0E00               	movlw	0
  8000   00CE68  6FA8               	movwf	(create_chain@scl+1)& (0+255),b
  8001   00CE6A  0E00               	movlw	0
  8002   00CE6C  6FA9               	movwf	(create_chain@scl+2)& (0+255),b
  8003   00CE6E  0E00               	movlw	0
  8004   00CE70  6FAA               	movwf	(create_chain@scl+3)& (0+255),b
  8005   00CE72  EFA0  F067         	goto	l6509
  8006   00CE76                     l6493:
  8007                           
  8008                           ; BSR set to: 0
  8009                           ;mcc_generated_files/fatfs/ff.c: 1518:   cs = get_fat(obj, clst);
  8010   00CE76  C098  F077         	movff	create_chain@obj,get_fat@obj
  8011   00CE7A  C099  F078         	movff	create_chain@obj+1,get_fat@obj+1
  8012   00CE7E  C09A  F079         	movff	create_chain@clst,get_fat@clst
  8013   00CE82  C09B  F07A         	movff	create_chain@clst+1,get_fat@clst+1
  8014   00CE86  C09C  F07B         	movff	create_chain@clst+2,get_fat@clst+2
  8015   00CE8A  C09D  F07C         	movff	create_chain@clst+3,get_fat@clst+3
  8016   00CE8E  ECB7  F059         	call	_get_fat	;wreg free
  8017   00CE92  C077  F0B1         	movff	?_get_fat,create_chain@cs
  8018   00CE96  C078  F0B2         	movff	?_get_fat+1,create_chain@cs+1
  8019   00CE9A  C079  F0B3         	movff	?_get_fat+2,create_chain@cs+2
  8020   00CE9E  C07A  F0B4         	movff	?_get_fat+3,create_chain@cs+3
  8021   00CEA2                     
  8022                           ;mcc_generated_files/fatfs/ff.c: 1519:   if (cs < 2) return 1;
  8023   00CEA2  0100               	movlb	0	; () banked
  8024   00CEA4  51B4               	movf	(create_chain@cs+3)& (0+255),w,b
  8025   00CEA6  11B3               	iorwf	(create_chain@cs+2)& (0+255),w,b
  8026   00CEA8  11B2               	iorwf	(create_chain@cs+1)& (0+255),w,b
  8027   00CEAA  E107               	bnz	u8151
  8028   00CEAC  0E02               	movlw	2
  8029   00CEAE  5DB1               	subwf	create_chain@cs& (0+255),w,b
  8030   00CEB0  B0D8               	btfsc	status,0,c
  8031   00CEB2  EF5D  F067         	goto	u8151
  8032   00CEB6  EF5F  F067         	goto	u8150
  8033   00CEBA                     u8151:
  8034   00CEBA  EF69  F067         	goto	l6501
  8035   00CEBE                     u8150:
  8036   00CEBE                     
  8037                           ; BSR set to: 0
  8038   00CEBE  0E01               	movlw	1
  8039   00CEC0  6F98               	movwf	?_create_chain& (0+255),b
  8040   00CEC2  0E00               	movlw	0
  8041   00CEC4  6F99               	movwf	(?_create_chain+1)& (0+255),b
  8042   00CEC6  0E00               	movlw	0
  8043   00CEC8  6F9A               	movwf	(?_create_chain+2)& (0+255),b
  8044   00CECA  0E00               	movlw	0
  8045   00CECC  6F9B               	movwf	(?_create_chain+3)& (0+255),b
  8046   00CECE  EFC6  F069         	goto	l668
  8047   00CED2                     l6501:
  8048                           
  8049                           ; BSR set to: 0
  8050                           ;mcc_generated_files/fatfs/ff.c: 1520:   if (cs == 0xFFFFFFFF) return cs;
  8051   00CED2  29B1               	incf	create_chain@cs& (0+255),w,b
  8052   00CED4  E10A               	bnz	u8161
  8053   00CED6  29B2               	incf	(create_chain@cs+1)& (0+255),w,b
  8054   00CED8  E108               	bnz	u8161
  8055   00CEDA  29B3               	incf	(create_chain@cs+2)& (0+255),w,b
  8056   00CEDC  E106               	bnz	u8161
  8057   00CEDE  29B4               	incf	(create_chain@cs+3)& (0+255),w,b
  8058   00CEE0  A4D8               	btfss	status,2,c
  8059   00CEE2  EF75  F067         	goto	u8161
  8060   00CEE6  EF77  F067         	goto	u8160
  8061   00CEEA                     u8161:
  8062   00CEEA  EF81  F067         	goto	l6505
  8063   00CEEE                     u8160:
  8064   00CEEE                     l6503:
  8065                           
  8066                           ; BSR set to: 0
  8067   00CEEE  C0B1  F098         	movff	create_chain@cs,?_create_chain
  8068   00CEF2  C0B2  F099         	movff	create_chain@cs+1,?_create_chain+1
  8069   00CEF6  C0B3  F09A         	movff	create_chain@cs+2,?_create_chain+2
  8070   00CEFA  C0B4  F09B         	movff	create_chain@cs+3,?_create_chain+3
  8071   00CEFE  EFC6  F069         	goto	l668
  8072   00CF02                     l6505:
  8073                           
  8074                           ; BSR set to: 0
  8075                           ;mcc_generated_files/fatfs/ff.c: 1521:   if (cs < fs->n_fatent) return cs;
  8076   00CF02  EE20 F017          	lfsr	2,23
  8077   00CF06  51AF               	movf	create_chain@fs& (0+255),w,b
  8078   00CF08  26D9               	addwf	fsr2l,f,c
  8079   00CF0A  51B0               	movf	(create_chain@fs+1)& (0+255),w,b
  8080   00CF0C  22DA               	addwfc	fsr2h,f,c
  8081   00CF0E  50DE               	movf	postinc2,w,c
  8082   00CF10  5DB1               	subwf	create_chain@cs& (0+255),w,b
  8083   00CF12  50DE               	movf	postinc2,w,c
  8084   00CF14  59B2               	subwfb	(create_chain@cs+1)& (0+255),w,b
  8085   00CF16  50DE               	movf	postinc2,w,c
  8086   00CF18  59B3               	subwfb	(create_chain@cs+2)& (0+255),w,b
  8087   00CF1A  50DE               	movf	postinc2,w,c
  8088   00CF1C  59B4               	subwfb	(create_chain@cs+3)& (0+255),w,b
  8089   00CF1E  B0D8               	btfsc	status,0,c
  8090   00CF20  EF94  F067         	goto	u8171
  8091   00CF24  EF96  F067         	goto	u8170
  8092   00CF28                     u8171:
  8093   00CF28  EF98  F067         	goto	l670
  8094   00CF2C                     u8170:
  8095   00CF2C  EF77  F067         	goto	l6503
  8096   00CF30                     l670:
  8097                           
  8098                           ; BSR set to: 0
  8099                           ;mcc_generated_files/fatfs/ff.c: 1522:   scl = clst;
  8100   00CF30  C09A  F0A7         	movff	create_chain@clst,create_chain@scl
  8101   00CF34  C09B  F0A8         	movff	create_chain@clst+1,create_chain@scl+1
  8102   00CF38  C09C  F0A9         	movff	create_chain@clst+2,create_chain@scl+2
  8103   00CF3C  C09D  F0AA         	movff	create_chain@clst+3,create_chain@scl+3
  8104   00CF40                     l6509:
  8105                           
  8106                           ; BSR set to: 0
  8107                           ;mcc_generated_files/fatfs/ff.c: 1524:  if (fs->free_clst == 0) return 0;
  8108   00CF40  EE20 F00F          	lfsr	2,15
  8109   00CF44  51AF               	movf	create_chain@fs& (0+255),w,b
  8110   00CF46  26D9               	addwf	fsr2l,f,c
  8111   00CF48  51B0               	movf	(create_chain@fs+1)& (0+255),w,b
  8112   00CF4A  22DA               	addwfc	fsr2h,f,c
  8113   00CF4C  50DE               	movf	postinc2,w,c
  8114   00CF4E  10DE               	iorwf	postinc2,w,c
  8115   00CF50  10DE               	iorwf	postinc2,w,c
  8116   00CF52  10DE               	iorwf	postinc2,w,c
  8117   00CF54  A4D8               	btfss	status,2,c
  8118   00CF56  EFAF  F067         	goto	u8181
  8119   00CF5A  EFB1  F067         	goto	u8180
  8120   00CF5E                     u8181:
  8121   00CF5E  EFBB  F067         	goto	l6515
  8122   00CF62                     u8180:
  8123   00CF62                     l6511:
  8124                           
  8125                           ; BSR set to: 0
  8126   00CF62  0E00               	movlw	0
  8127   00CF64  6F98               	movwf	?_create_chain& (0+255),b
  8128   00CF66  0E00               	movlw	0
  8129   00CF68  6F99               	movwf	(?_create_chain+1)& (0+255),b
  8130   00CF6A  0E00               	movlw	0
  8131   00CF6C  6F9A               	movwf	(?_create_chain+2)& (0+255),b
  8132   00CF6E  0E00               	movlw	0
  8133   00CF70  6F9B               	movwf	(?_create_chain+3)& (0+255),b
  8134   00CF72  EFC6  F069         	goto	l668
  8135   00CF76                     l6515:
  8136                           
  8137                           ; BSR set to: 0
  8138                           ;mcc_generated_files/fatfs/ff.c: 1552:  {;mcc_generated_files/fatfs/ff.c: 1553:   ncl = 
      +                          0;
  8139   00CF76  0E00               	movlw	0
  8140   00CF78  6FAB               	movwf	create_chain@ncl& (0+255),b
  8141   00CF7A  0E00               	movlw	0
  8142   00CF7C  6FAC               	movwf	(create_chain@ncl+1)& (0+255),b
  8143   00CF7E  0E00               	movlw	0
  8144   00CF80  6FAD               	movwf	(create_chain@ncl+2)& (0+255),b
  8145   00CF82  0E00               	movlw	0
  8146   00CF84  6FAE               	movwf	(create_chain@ncl+3)& (0+255),b
  8147   00CF86                     
  8148                           ; BSR set to: 0
  8149                           ;mcc_generated_files/fatfs/ff.c: 1554:   if (scl == clst) {
  8150   00CF86  519A               	movf	create_chain@clst& (0+255),w,b
  8151   00CF88  19A7               	xorwf	create_chain@scl& (0+255),w,b
  8152   00CF8A  E10D               	bnz	u8191
  8153   00CF8C  519B               	movf	(create_chain@clst+1)& (0+255),w,b
  8154   00CF8E  19A8               	xorwf	(create_chain@scl+1)& (0+255),w,b
  8155   00CF90  E10A               	bnz	u8191
  8156   00CF92  519C               	movf	(create_chain@clst+2)& (0+255),w,b
  8157   00CF94  19A9               	xorwf	(create_chain@scl+2)& (0+255),w,b
  8158   00CF96  E107               	bnz	u8191
  8159   00CF98  519D               	movf	(create_chain@clst+3)& (0+255),w,b
  8160   00CF9A  19AA               	xorwf	(create_chain@scl+3)& (0+255),w,b
  8161   00CF9C  A4D8               	btfss	status,2,c
  8162   00CF9E  EFD3  F067         	goto	u8191
  8163   00CFA2  EFD5  F067         	goto	u8190
  8164   00CFA6                     u8191:
  8165   00CFA6  EF7B  F068         	goto	l6543
  8166   00CFAA                     u8190:
  8167   00CFAA                     
  8168                           ; BSR set to: 0
  8169                           ;mcc_generated_files/fatfs/ff.c: 1555:    ncl = scl + 1;
  8170   00CFAA  0E01               	movlw	1
  8171   00CFAC  25A7               	addwf	create_chain@scl& (0+255),w,b
  8172   00CFAE  6FAB               	movwf	create_chain@ncl& (0+255),b
  8173   00CFB0  0E00               	movlw	0
  8174   00CFB2  21A8               	addwfc	(create_chain@scl+1)& (0+255),w,b
  8175   00CFB4  6FAC               	movwf	(create_chain@ncl+1)& (0+255),b
  8176   00CFB6  0E00               	movlw	0
  8177   00CFB8  21A9               	addwfc	(create_chain@scl+2)& (0+255),w,b
  8178   00CFBA  6FAD               	movwf	(create_chain@ncl+2)& (0+255),b
  8179   00CFBC  0E00               	movlw	0
  8180   00CFBE  21AA               	addwfc	(create_chain@scl+3)& (0+255),w,b
  8181   00CFC0  6FAE               	movwf	(create_chain@ncl+3)& (0+255),b
  8182   00CFC2                     
  8183                           ; BSR set to: 0
  8184                           ;mcc_generated_files/fatfs/ff.c: 1556:    if (ncl >= fs->n_fatent) ncl = 2;
  8185   00CFC2  EE20 F017          	lfsr	2,23
  8186   00CFC6  51AF               	movf	create_chain@fs& (0+255),w,b
  8187   00CFC8  26D9               	addwf	fsr2l,f,c
  8188   00CFCA  51B0               	movf	(create_chain@fs+1)& (0+255),w,b
  8189   00CFCC  22DA               	addwfc	fsr2h,f,c
  8190   00CFCE  50DE               	movf	postinc2,w,c
  8191   00CFD0  5DAB               	subwf	create_chain@ncl& (0+255),w,b
  8192   00CFD2  50DE               	movf	postinc2,w,c
  8193   00CFD4  59AC               	subwfb	(create_chain@ncl+1)& (0+255),w,b
  8194   00CFD6  50DE               	movf	postinc2,w,c
  8195   00CFD8  59AD               	subwfb	(create_chain@ncl+2)& (0+255),w,b
  8196   00CFDA  50DE               	movf	postinc2,w,c
  8197   00CFDC  59AE               	subwfb	(create_chain@ncl+3)& (0+255),w,b
  8198   00CFDE  A0D8               	btfss	status,0,c
  8199   00CFE0  EFF4  F067         	goto	u8201
  8200   00CFE4  EFF6  F067         	goto	u8200
  8201   00CFE8                     u8201:
  8202   00CFE8  EFFE  F067         	goto	l6525
  8203   00CFEC                     u8200:
  8204   00CFEC                     
  8205                           ; BSR set to: 0
  8206   00CFEC  0E02               	movlw	2
  8207   00CFEE  6FAB               	movwf	create_chain@ncl& (0+255),b
  8208   00CFF0  0E00               	movlw	0
  8209   00CFF2  6FAC               	movwf	(create_chain@ncl+1)& (0+255),b
  8210   00CFF4  0E00               	movlw	0
  8211   00CFF6  6FAD               	movwf	(create_chain@ncl+2)& (0+255),b
  8212   00CFF8  0E00               	movlw	0
  8213   00CFFA  6FAE               	movwf	(create_chain@ncl+3)& (0+255),b
  8214   00CFFC                     l6525:
  8215                           
  8216                           ; BSR set to: 0
  8217                           ;mcc_generated_files/fatfs/ff.c: 1557:    cs = get_fat(obj, ncl);
  8218   00CFFC  C098  F077         	movff	create_chain@obj,get_fat@obj
  8219   00D000  C099  F078         	movff	create_chain@obj+1,get_fat@obj+1
  8220   00D004  C0AB  F079         	movff	create_chain@ncl,get_fat@clst
  8221   00D008  C0AC  F07A         	movff	create_chain@ncl+1,get_fat@clst+1
  8222   00D00C  C0AD  F07B         	movff	create_chain@ncl+2,get_fat@clst+2
  8223   00D010  C0AE  F07C         	movff	create_chain@ncl+3,get_fat@clst+3
  8224   00D014  ECB7  F059         	call	_get_fat	;wreg free
  8225   00D018  C077  F0B1         	movff	?_get_fat,create_chain@cs
  8226   00D01C  C078  F0B2         	movff	?_get_fat+1,create_chain@cs+1
  8227   00D020  C079  F0B3         	movff	?_get_fat+2,create_chain@cs+2
  8228   00D024  C07A  F0B4         	movff	?_get_fat+3,create_chain@cs+3
  8229   00D028                     
  8230                           ;mcc_generated_files/fatfs/ff.c: 1558:    if (cs == 1 || cs == 0xFFFFFFFF) return cs;
  8231   00D028  0100               	movlb	0	; () banked
  8232   00D02A  05B1               	decf	create_chain@cs& (0+255),w,b
  8233   00D02C  11B2               	iorwf	(create_chain@cs+1)& (0+255),w,b
  8234   00D02E  11B3               	iorwf	(create_chain@cs+2)& (0+255),w,b
  8235   00D030  11B4               	iorwf	(create_chain@cs+3)& (0+255),w,b
  8236   00D032  B4D8               	btfsc	status,2,c
  8237   00D034  EF1E  F068         	goto	u8211
  8238   00D038  EF20  F068         	goto	u8210
  8239   00D03C                     u8211:
  8240   00D03C  EF77  F067         	goto	l6503
  8241   00D040                     u8210:
  8242   00D040                     
  8243                           ; BSR set to: 0
  8244   00D040  29B1               	incf	create_chain@cs& (0+255),w,b
  8245   00D042  E10A               	bnz	u8221
  8246   00D044  29B2               	incf	(create_chain@cs+1)& (0+255),w,b
  8247   00D046  E108               	bnz	u8221
  8248   00D048  29B3               	incf	(create_chain@cs+2)& (0+255),w,b
  8249   00D04A  E106               	bnz	u8221
  8250   00D04C  29B4               	incf	(create_chain@cs+3)& (0+255),w,b
  8251   00D04E  A4D8               	btfss	status,2,c
  8252   00D050  EF2C  F068         	goto	u8221
  8253   00D054  EF2E  F068         	goto	u8220
  8254   00D058                     u8221:
  8255   00D058  EF30  F068         	goto	l6531
  8256   00D05C                     u8220:
  8257   00D05C  EF77  F067         	goto	l6503
  8258   00D060                     l6531:
  8259                           
  8260                           ; BSR set to: 0
  8261                           ;mcc_generated_files/fatfs/ff.c: 1559:    if (cs != 0) {
  8262   00D060  51B1               	movf	create_chain@cs& (0+255),w,b
  8263   00D062  11B2               	iorwf	(create_chain@cs+1)& (0+255),w,b
  8264   00D064  11B3               	iorwf	(create_chain@cs+2)& (0+255),w,b
  8265   00D066  11B4               	iorwf	(create_chain@cs+3)& (0+255),w,b
  8266   00D068  B4D8               	btfsc	status,2,c
  8267   00D06A  EF39  F068         	goto	u8231
  8268   00D06E  EF3B  F068         	goto	u8230
  8269   00D072                     u8231:
  8270   00D072  EF7B  F068         	goto	l6543
  8271   00D076                     u8230:
  8272   00D076                     
  8273                           ; BSR set to: 0
  8274                           ;mcc_generated_files/fatfs/ff.c: 1560:     cs = fs->last_clst;
  8275   00D076  EE20 F00B          	lfsr	2,11
  8276   00D07A  51AF               	movf	create_chain@fs& (0+255),w,b
  8277   00D07C  26D9               	addwf	fsr2l,f,c
  8278   00D07E  51B0               	movf	(create_chain@fs+1)& (0+255),w,b
  8279   00D080  22DA               	addwfc	fsr2h,f,c
  8280   00D082  CFDE F0B1          	movff	postinc2,create_chain@cs
  8281   00D086  CFDE F0B2          	movff	postinc2,create_chain@cs+1
  8282   00D08A  CFDE F0B3          	movff	postinc2,create_chain@cs+2
  8283   00D08E  CFDE F0B4          	movff	postinc2,create_chain@cs+3
  8284   00D092                     
  8285                           ; BSR set to: 0
  8286                           ;mcc_generated_files/fatfs/ff.c: 1561:     if (cs >= 2 && cs < fs->n_fatent) scl = cs;
  8287   00D092  51B4               	movf	(create_chain@cs+3)& (0+255),w,b
  8288   00D094  11B3               	iorwf	(create_chain@cs+2)& (0+255),w,b
  8289   00D096  11B2               	iorwf	(create_chain@cs+1)& (0+255),w,b
  8290   00D098  E109               	bnz	u8240
  8291   00D09A  0E02               	movlw	2
  8292   00D09C  5DB1               	subwf	create_chain@cs& (0+255),w,b
  8293   00D09E  A0D8               	btfss	status,0,c
  8294   00D0A0  EF54  F068         	goto	u8241
  8295   00D0A4  EF56  F068         	goto	u8240
  8296   00D0A8                     u8241:
  8297   00D0A8  EF73  F068         	goto	l6541
  8298   00D0AC                     u8240:
  8299   00D0AC                     
  8300                           ; BSR set to: 0
  8301   00D0AC  EE20 F017          	lfsr	2,23
  8302   00D0B0  51AF               	movf	create_chain@fs& (0+255),w,b
  8303   00D0B2  26D9               	addwf	fsr2l,f,c
  8304   00D0B4  51B0               	movf	(create_chain@fs+1)& (0+255),w,b
  8305   00D0B6  22DA               	addwfc	fsr2h,f,c
  8306   00D0B8  50DE               	movf	postinc2,w,c
  8307   00D0BA  5DB1               	subwf	create_chain@cs& (0+255),w,b
  8308   00D0BC  50DE               	movf	postinc2,w,c
  8309   00D0BE  59B2               	subwfb	(create_chain@cs+1)& (0+255),w,b
  8310   00D0C0  50DE               	movf	postinc2,w,c
  8311   00D0C2  59B3               	subwfb	(create_chain@cs+2)& (0+255),w,b
  8312   00D0C4  50DE               	movf	postinc2,w,c
  8313   00D0C6  59B4               	subwfb	(create_chain@cs+3)& (0+255),w,b
  8314   00D0C8  B0D8               	btfsc	status,0,c
  8315   00D0CA  EF69  F068         	goto	u8251
  8316   00D0CE  EF6B  F068         	goto	u8250
  8317   00D0D2                     u8251:
  8318   00D0D2  EF73  F068         	goto	l6541
  8319   00D0D6                     u8250:
  8320   00D0D6                     
  8321                           ; BSR set to: 0
  8322   00D0D6  C0B1  F0A7         	movff	create_chain@cs,create_chain@scl
  8323   00D0DA  C0B2  F0A8         	movff	create_chain@cs+1,create_chain@scl+1
  8324   00D0DE  C0B3  F0A9         	movff	create_chain@cs+2,create_chain@scl+2
  8325   00D0E2  C0B4  F0AA         	movff	create_chain@cs+3,create_chain@scl+3
  8326   00D0E6                     l6541:
  8327                           
  8328                           ; BSR set to: 0
  8329                           ;mcc_generated_files/fatfs/ff.c: 1562:     ncl = 0;
  8330   00D0E6  0E00               	movlw	0
  8331   00D0E8  6FAB               	movwf	create_chain@ncl& (0+255),b
  8332   00D0EA  0E00               	movlw	0
  8333   00D0EC  6FAC               	movwf	(create_chain@ncl+1)& (0+255),b
  8334   00D0EE  0E00               	movlw	0
  8335   00D0F0  6FAD               	movwf	(create_chain@ncl+2)& (0+255),b
  8336   00D0F2  0E00               	movlw	0
  8337   00D0F4  6FAE               	movwf	(create_chain@ncl+3)& (0+255),b
  8338   00D0F6                     l6543:
  8339                           
  8340                           ; BSR set to: 0
  8341                           ;mcc_generated_files/fatfs/ff.c: 1565:   if (ncl == 0) {
  8342   00D0F6  51AB               	movf	create_chain@ncl& (0+255),w,b
  8343   00D0F8  11AC               	iorwf	(create_chain@ncl+1)& (0+255),w,b
  8344   00D0FA  11AD               	iorwf	(create_chain@ncl+2)& (0+255),w,b
  8345   00D0FC  11AE               	iorwf	(create_chain@ncl+3)& (0+255),w,b
  8346   00D0FE  A4D8               	btfss	status,2,c
  8347   00D100  EF84  F068         	goto	u8261
  8348   00D104  EF86  F068         	goto	u8260
  8349   00D108                     u8261:
  8350   00D108  EF13  F069         	goto	l6575
  8351   00D10C                     u8260:
  8352   00D10C                     
  8353                           ; BSR set to: 0
  8354                           ;mcc_generated_files/fatfs/ff.c: 1566:    ncl = scl;
  8355   00D10C  C0A7  F0AB         	movff	create_chain@scl,create_chain@ncl
  8356   00D110  C0A8  F0AC         	movff	create_chain@scl+1,create_chain@ncl+1
  8357   00D114  C0A9  F0AD         	movff	create_chain@scl+2,create_chain@ncl+2
  8358   00D118  C0AA  F0AE         	movff	create_chain@scl+3,create_chain@ncl+3
  8359   00D11C                     l6547:
  8360                           
  8361                           ; BSR set to: 0
  8362                           ;mcc_generated_files/fatfs/ff.c: 1568:     ncl++;
  8363   00D11C  0E01               	movlw	1
  8364   00D11E  27AB               	addwf	create_chain@ncl& (0+255),f,b
  8365   00D120  0E00               	movlw	0
  8366   00D122  23AC               	addwfc	(create_chain@ncl+1)& (0+255),f,b
  8367   00D124  23AD               	addwfc	(create_chain@ncl+2)& (0+255),f,b
  8368   00D126  23AE               	addwfc	(create_chain@ncl+3)& (0+255),f,b
  8369   00D128                     
  8370                           ; BSR set to: 0
  8371                           ;mcc_generated_files/fatfs/ff.c: 1569:     if (ncl >= fs->n_fatent) {
  8372   00D128  EE20 F017          	lfsr	2,23
  8373   00D12C  51AF               	movf	create_chain@fs& (0+255),w,b
  8374   00D12E  26D9               	addwf	fsr2l,f,c
  8375   00D130  51B0               	movf	(create_chain@fs+1)& (0+255),w,b
  8376   00D132  22DA               	addwfc	fsr2h,f,c
  8377   00D134  50DE               	movf	postinc2,w,c
  8378   00D136  5DAB               	subwf	create_chain@ncl& (0+255),w,b
  8379   00D138  50DE               	movf	postinc2,w,c
  8380   00D13A  59AC               	subwfb	(create_chain@ncl+1)& (0+255),w,b
  8381   00D13C  50DE               	movf	postinc2,w,c
  8382   00D13E  59AD               	subwfb	(create_chain@ncl+2)& (0+255),w,b
  8383   00D140  50DE               	movf	postinc2,w,c
  8384   00D142  59AE               	subwfb	(create_chain@ncl+3)& (0+255),w,b
  8385   00D144  A0D8               	btfss	status,0,c
  8386   00D146  EFA7  F068         	goto	u8271
  8387   00D14A  EFA9  F068         	goto	u8270
  8388   00D14E                     u8271:
  8389   00D14E  EFC0  F068         	goto	l6559
  8390   00D152                     u8270:
  8391   00D152                     
  8392                           ; BSR set to: 0
  8393                           ;mcc_generated_files/fatfs/ff.c: 1570:      ncl = 2;
  8394   00D152  0E02               	movlw	2
  8395   00D154  6FAB               	movwf	create_chain@ncl& (0+255),b
  8396   00D156  0E00               	movlw	0
  8397   00D158  6FAC               	movwf	(create_chain@ncl+1)& (0+255),b
  8398   00D15A  0E00               	movlw	0
  8399   00D15C  6FAD               	movwf	(create_chain@ncl+2)& (0+255),b
  8400   00D15E  0E00               	movlw	0
  8401   00D160  6FAE               	movwf	(create_chain@ncl+3)& (0+255),b
  8402   00D162                     
  8403                           ; BSR set to: 0
  8404                           ;mcc_generated_files/fatfs/ff.c: 1571:      if (ncl > scl) return 0;
  8405   00D162  51AA               	movf	(create_chain@scl+3)& (0+255),w,b
  8406   00D164  11A9               	iorwf	(create_chain@scl+2)& (0+255),w,b
  8407   00D166  11A8               	iorwf	(create_chain@scl+1)& (0+255),w,b
  8408   00D168  E107               	bnz	u8281
  8409   00D16A  0E02               	movlw	2
  8410   00D16C  5DA7               	subwf	create_chain@scl& (0+255),w,b
  8411   00D16E  B0D8               	btfsc	status,0,c
  8412   00D170  EFBC  F068         	goto	u8281
  8413   00D174  EFBE  F068         	goto	u8280
  8414   00D178                     u8281:
  8415   00D178  EFC0  F068         	goto	l6559
  8416   00D17C                     u8280:
  8417   00D17C  EFB1  F067         	goto	l6511
  8418   00D180                     l6559:
  8419                           
  8420                           ; BSR set to: 0
  8421                           ;mcc_generated_files/fatfs/ff.c: 1573:     cs = get_fat(obj, ncl);
  8422   00D180  C098  F077         	movff	create_chain@obj,get_fat@obj
  8423   00D184  C099  F078         	movff	create_chain@obj+1,get_fat@obj+1
  8424   00D188  C0AB  F079         	movff	create_chain@ncl,get_fat@clst
  8425   00D18C  C0AC  F07A         	movff	create_chain@ncl+1,get_fat@clst+1
  8426   00D190  C0AD  F07B         	movff	create_chain@ncl+2,get_fat@clst+2
  8427   00D194  C0AE  F07C         	movff	create_chain@ncl+3,get_fat@clst+3
  8428   00D198  ECB7  F059         	call	_get_fat	;wreg free
  8429   00D19C  C077  F0B1         	movff	?_get_fat,create_chain@cs
  8430   00D1A0  C078  F0B2         	movff	?_get_fat+1,create_chain@cs+1
  8431   00D1A4  C079  F0B3         	movff	?_get_fat+2,create_chain@cs+2
  8432   00D1A8  C07A  F0B4         	movff	?_get_fat+3,create_chain@cs+3
  8433   00D1AC                     
  8434                           ;mcc_generated_files/fatfs/ff.c: 1574:     if (cs == 0) break;
  8435   00D1AC  0100               	movlb	0	; () banked
  8436   00D1AE  51B1               	movf	create_chain@cs& (0+255),w,b
  8437   00D1B0  11B2               	iorwf	(create_chain@cs+1)& (0+255),w,b
  8438   00D1B2  11B3               	iorwf	(create_chain@cs+2)& (0+255),w,b
  8439   00D1B4  11B4               	iorwf	(create_chain@cs+3)& (0+255),w,b
  8440   00D1B6  A4D8               	btfss	status,2,c
  8441   00D1B8  EFE0  F068         	goto	u8291
  8442   00D1BC  EFE2  F068         	goto	u8290
  8443   00D1C0                     u8291:
  8444   00D1C0  EFE4  F068         	goto	l6565
  8445   00D1C4                     u8290:
  8446   00D1C4  EF13  F069         	goto	l6575
  8447   00D1C8                     l6565:
  8448                           
  8449                           ; BSR set to: 0
  8450                           ;mcc_generated_files/fatfs/ff.c: 1575:     if (cs == 1 || cs == 0xFFFFFFFF) return cs;
  8451   00D1C8  05B1               	decf	create_chain@cs& (0+255),w,b
  8452   00D1CA  11B2               	iorwf	(create_chain@cs+1)& (0+255),w,b
  8453   00D1CC  11B3               	iorwf	(create_chain@cs+2)& (0+255),w,b
  8454   00D1CE  11B4               	iorwf	(create_chain@cs+3)& (0+255),w,b
  8455   00D1D0  B4D8               	btfsc	status,2,c
  8456   00D1D2  EFED  F068         	goto	u8301
  8457   00D1D6  EFEF  F068         	goto	u8300
  8458   00D1DA                     u8301:
  8459   00D1DA  EF77  F067         	goto	l6503
  8460   00D1DE                     u8300:
  8461   00D1DE                     
  8462                           ; BSR set to: 0
  8463   00D1DE  29B1               	incf	create_chain@cs& (0+255),w,b
  8464   00D1E0  E10A               	bnz	u8311
  8465   00D1E2  29B2               	incf	(create_chain@cs+1)& (0+255),w,b
  8466   00D1E4  E108               	bnz	u8311
  8467   00D1E6  29B3               	incf	(create_chain@cs+2)& (0+255),w,b
  8468   00D1E8  E106               	bnz	u8311
  8469   00D1EA  29B4               	incf	(create_chain@cs+3)& (0+255),w,b
  8470   00D1EC  A4D8               	btfss	status,2,c
  8471   00D1EE  EFFB  F068         	goto	u8311
  8472   00D1F2  EFFD  F068         	goto	u8310
  8473   00D1F6                     u8311:
  8474   00D1F6  EFFF  F068         	goto	l6569
  8475   00D1FA                     u8310:
  8476   00D1FA  EF77  F067         	goto	l6503
  8477   00D1FE                     l6569:
  8478                           
  8479                           ; BSR set to: 0
  8480                           ;mcc_generated_files/fatfs/ff.c: 1576:     if (ncl == scl) return 0;
  8481   00D1FE  51A7               	movf	create_chain@scl& (0+255),w,b
  8482   00D200  19AB               	xorwf	create_chain@ncl& (0+255),w,b
  8483   00D202  E10D               	bnz	u8321
  8484   00D204  51A8               	movf	(create_chain@scl+1)& (0+255),w,b
  8485   00D206  19AC               	xorwf	(create_chain@ncl+1)& (0+255),w,b
  8486   00D208  E10A               	bnz	u8321
  8487   00D20A  51A9               	movf	(create_chain@scl+2)& (0+255),w,b
  8488   00D20C  19AD               	xorwf	(create_chain@ncl+2)& (0+255),w,b
  8489   00D20E  E107               	bnz	u8321
  8490   00D210  51AA               	movf	(create_chain@scl+3)& (0+255),w,b
  8491   00D212  19AE               	xorwf	(create_chain@ncl+3)& (0+255),w,b
  8492   00D214  A4D8               	btfss	status,2,c
  8493   00D216  EF0F  F069         	goto	u8321
  8494   00D21A  EF11  F069         	goto	u8320
  8495   00D21E                     u8321:
  8496   00D21E  EF8E  F068         	goto	l6547
  8497   00D222                     u8320:
  8498   00D222  EFB1  F067         	goto	l6511
  8499   00D226                     l6575:
  8500                           
  8501                           ; BSR set to: 0
  8502                           ;mcc_generated_files/fatfs/ff.c: 1579:   res = put_fat(fs, ncl, 0xFFFFFFFF);
  8503   00D226  C0AF  F077         	movff	create_chain@fs,put_fat@fs
  8504   00D22A  C0B0  F078         	movff	create_chain@fs+1,put_fat@fs+1
  8505   00D22E  C0AB  F079         	movff	create_chain@ncl,put_fat@clst
  8506   00D232  C0AC  F07A         	movff	create_chain@ncl+1,put_fat@clst+1
  8507   00D236  C0AD  F07B         	movff	create_chain@ncl+2,put_fat@clst+2
  8508   00D23A  C0AE  F07C         	movff	create_chain@ncl+3,put_fat@clst+3
  8509   00D23E  0EFF               	movlw	255
  8510   00D240  6F7D               	movwf	put_fat@val& (0+255),b
  8511   00D242  0EFF               	movlw	255
  8512   00D244  6F7E               	movwf	(put_fat@val+1)& (0+255),b
  8513   00D246  0EFF               	movlw	255
  8514   00D248  6F7F               	movwf	(put_fat@val+2)& (0+255),b
  8515   00D24A  0EFF               	movlw	255
  8516   00D24C  6F80               	movwf	(put_fat@val+3)& (0+255),b
  8517   00D24E  EC6F  F064         	call	_put_fat	;wreg free
  8518   00D252  0100               	movlb	0	; () banked
  8519   00D254  6FA6               	movwf	create_chain@res& (0+255),b
  8520   00D256                     
  8521                           ; BSR set to: 0
  8522                           ;mcc_generated_files/fatfs/ff.c: 1580:   if (res == FR_OK && clst != 0) {
  8523   00D256  51A6               	movf	create_chain@res& (0+255),w,b
  8524   00D258  A4D8               	btfss	status,2,c
  8525   00D25A  EF31  F069         	goto	u8331
  8526   00D25E  EF33  F069         	goto	u8330
  8527   00D262                     u8331:
  8528   00D262  EF56  F069         	goto	l6583
  8529   00D266                     u8330:
  8530   00D266                     
  8531                           ; BSR set to: 0
  8532   00D266  519A               	movf	create_chain@clst& (0+255),w,b
  8533   00D268  119B               	iorwf	(create_chain@clst+1)& (0+255),w,b
  8534   00D26A  119C               	iorwf	(create_chain@clst+2)& (0+255),w,b
  8535   00D26C  119D               	iorwf	(create_chain@clst+3)& (0+255),w,b
  8536   00D26E  B4D8               	btfsc	status,2,c
  8537   00D270  EF3C  F069         	goto	u8341
  8538   00D274  EF3E  F069         	goto	u8340
  8539   00D278                     u8341:
  8540   00D278  EF56  F069         	goto	l6583
  8541   00D27C                     u8340:
  8542   00D27C                     
  8543                           ; BSR set to: 0
  8544                           ;mcc_generated_files/fatfs/ff.c: 1581:    res = put_fat(fs, clst, ncl);
  8545   00D27C  C0AF  F077         	movff	create_chain@fs,put_fat@fs
  8546   00D280  C0B0  F078         	movff	create_chain@fs+1,put_fat@fs+1
  8547   00D284  C09A  F079         	movff	create_chain@clst,put_fat@clst
  8548   00D288  C09B  F07A         	movff	create_chain@clst+1,put_fat@clst+1
  8549   00D28C  C09C  F07B         	movff	create_chain@clst+2,put_fat@clst+2
  8550   00D290  C09D  F07C         	movff	create_chain@clst+3,put_fat@clst+3
  8551   00D294  C0AB  F07D         	movff	create_chain@ncl,put_fat@val
  8552   00D298  C0AC  F07E         	movff	create_chain@ncl+1,put_fat@val+1
  8553   00D29C  C0AD  F07F         	movff	create_chain@ncl+2,put_fat@val+2
  8554   00D2A0  C0AE  F080         	movff	create_chain@ncl+3,put_fat@val+3
  8555   00D2A4  EC6F  F064         	call	_put_fat	;wreg free
  8556   00D2A8  0100               	movlb	0	; () banked
  8557   00D2AA  6FA6               	movwf	create_chain@res& (0+255),b
  8558   00D2AC                     l6583:
  8559                           
  8560                           ; BSR set to: 0
  8561                           ;mcc_generated_files/fatfs/ff.c: 1583:  };mcc_generated_files/fatfs/ff.c: 1585:  if (res
      +                           == FR_OK) {
  8562   00D2AC  51A6               	movf	create_chain@res& (0+255),w,b
  8563   00D2AE  A4D8               	btfss	status,2,c
  8564   00D2B0  EF5C  F069         	goto	u8351
  8565   00D2B4  EF5E  F069         	goto	u8350
  8566   00D2B8                     u8351:
  8567   00D2B8  EFA8  F069         	goto	l6591
  8568   00D2BC                     u8350:
  8569   00D2BC                     
  8570                           ; BSR set to: 0
  8571                           ;mcc_generated_files/fatfs/ff.c: 1586:   fs->last_clst = ncl;
  8572   00D2BC  EE20 F00B          	lfsr	2,11
  8573   00D2C0  51AF               	movf	create_chain@fs& (0+255),w,b
  8574   00D2C2  26D9               	addwf	fsr2l,f,c
  8575   00D2C4  51B0               	movf	(create_chain@fs+1)& (0+255),w,b
  8576   00D2C6  22DA               	addwfc	fsr2h,f,c
  8577   00D2C8  C0AB  FFDE         	movff	create_chain@ncl,postinc2
  8578   00D2CC  C0AC  FFDE         	movff	create_chain@ncl+1,postinc2
  8579   00D2D0  C0AD  FFDE         	movff	create_chain@ncl+2,postinc2
  8580   00D2D4  C0AE  FFDE         	movff	create_chain@ncl+3,postinc2
  8581   00D2D8                     
  8582                           ; BSR set to: 0
  8583                           ;mcc_generated_files/fatfs/ff.c: 1587:   if (fs->free_clst <= fs->n_fatent - 2) fs->free
      +                          _clst--;
  8584   00D2D8  EE20 F00F          	lfsr	2,15
  8585   00D2DC  51AF               	movf	create_chain@fs& (0+255),w,b
  8586   00D2DE  26D9               	addwf	fsr2l,f,c
  8587   00D2E0  51B0               	movf	(create_chain@fs+1)& (0+255),w,b
  8588   00D2E2  22DA               	addwfc	fsr2h,f,c
  8589   00D2E4  EE10 F017          	lfsr	1,23
  8590   00D2E8  51AF               	movf	create_chain@fs& (0+255),w,b
  8591   00D2EA  26E1               	addwf	fsr1l,f,c
  8592   00D2EC  51B0               	movf	(create_chain@fs+1)& (0+255),w,b
  8593   00D2EE  22E2               	addwfc	fsr1h,f,c
  8594   00D2F0  0EFE               	movlw	254
  8595   00D2F2  24E6               	addwf	postinc1,w,c
  8596   00D2F4  6FA2               	movwf	(??_create_chain+4)& (0+255),b
  8597   00D2F6  0EFF               	movlw	255
  8598   00D2F8  20E6               	addwfc	postinc1,w,c
  8599   00D2FA  6FA3               	movwf	(??_create_chain+5)& (0+255),b
  8600   00D2FC  0EFF               	movlw	255
  8601   00D2FE  20E6               	addwfc	postinc1,w,c
  8602   00D300  6FA4               	movwf	(??_create_chain+6)& (0+255),b
  8603   00D302  0EFF               	movlw	255
  8604   00D304  20E6               	addwfc	postinc1,w,c
  8605   00D306  6FA5               	movwf	(??_create_chain+7)& (0+255),b
  8606   00D308  50DE               	movf	postinc2,w,c
  8607   00D30A  5DA2               	subwf	(??_create_chain+4)& (0+255),w,b
  8608   00D30C  50DE               	movf	postinc2,w,c
  8609   00D30E  59A3               	subwfb	(??_create_chain+5)& (0+255),w,b
  8610   00D310  50DE               	movf	postinc2,w,c
  8611   00D312  59A4               	subwfb	(??_create_chain+6)& (0+255),w,b
  8612   00D314  50DE               	movf	postinc2,w,c
  8613   00D316  59A5               	subwfb	(??_create_chain+7)& (0+255),w,b
  8614   00D318  A0D8               	btfss	status,0,c
  8615   00D31A  EF91  F069         	goto	u8361
  8616   00D31E  EF93  F069         	goto	u8360
  8617   00D322                     u8361:
  8618   00D322  EF9E  F069         	goto	l691
  8619   00D326                     u8360:
  8620   00D326                     
  8621                           ; BSR set to: 0
  8622   00D326  EE20 F00F          	lfsr	2,15
  8623   00D32A  51AF               	movf	create_chain@fs& (0+255),w,b
  8624   00D32C  26D9               	addwf	fsr2l,f,c
  8625   00D32E  51B0               	movf	(create_chain@fs+1)& (0+255),w,b
  8626   00D330  22DA               	addwfc	fsr2h,f,c
  8627   00D332  06DE               	decf	postinc2,f,c
  8628   00D334  0E00               	movlw	0
  8629   00D336  5ADE               	subwfb	postinc2,f,c
  8630   00D338  5ADE               	subwfb	postinc2,f,c
  8631   00D33A  5ADE               	subwfb	postinc2,f,c
  8632   00D33C                     l691:
  8633                           
  8634                           ; BSR set to: 0
  8635                           ;mcc_generated_files/fatfs/ff.c: 1588:   fs->fsi_flag |= 1;
  8636   00D33C  EE20 F004          	lfsr	2,4
  8637   00D340  51AF               	movf	create_chain@fs& (0+255),w,b
  8638   00D342  26D9               	addwf	fsr2l,f,c
  8639   00D344  51B0               	movf	(create_chain@fs+1)& (0+255),w,b
  8640   00D346  22DA               	addwfc	fsr2h,f,c
  8641   00D348  0E00               	movlw	0
  8642   00D34A  80DB               	bsf	plusw2,0,c
  8643                           
  8644                           ;mcc_generated_files/fatfs/ff.c: 1589:  } else {
  8645   00D34C  EFBE  F069         	goto	l692
  8646   00D350                     l6591:
  8647                           
  8648                           ; BSR set to: 0
  8649                           ;mcc_generated_files/fatfs/ff.c: 1590:   ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;
  8650   00D350  05A6               	decf	create_chain@res& (0+255),w,b
  8651   00D352  B4D8               	btfsc	status,2,c
  8652   00D354  EFAE  F069         	goto	u8371
  8653   00D358  EFB0  F069         	goto	u8370
  8654   00D35C                     u8371:
  8655   00D35C  EFBA  F069         	goto	l694
  8656   00D360                     u8370:
  8657   00D360                     
  8658                           ; BSR set to: 0
  8659   00D360  0E01               	movlw	1
  8660   00D362  6FAB               	movwf	create_chain@ncl& (0+255),b
  8661   00D364  0E00               	movlw	0
  8662   00D366  6FAC               	movwf	(create_chain@ncl+1)& (0+255),b
  8663   00D368  0E00               	movlw	0
  8664   00D36A  6FAD               	movwf	(create_chain@ncl+2)& (0+255),b
  8665   00D36C  0E00               	movlw	0
  8666   00D36E  6FAE               	movwf	(create_chain@ncl+3)& (0+255),b
  8667   00D370  EFBE  F069         	goto	l692
  8668   00D374                     l694:
  8669                           
  8670                           ; BSR set to: 0
  8671   00D374  69AB               	setf	create_chain@ncl& (0+255),b
  8672   00D376  69AC               	setf	(create_chain@ncl+1)& (0+255),b
  8673   00D378  69AD               	setf	(create_chain@ncl+2)& (0+255),b
  8674   00D37A  69AE               	setf	(create_chain@ncl+3)& (0+255),b
  8675   00D37C                     l692:
  8676                           
  8677                           ; BSR set to: 0
  8678                           ;mcc_generated_files/fatfs/ff.c: 1593:  return ncl;
  8679   00D37C  C0AB  F098         	movff	create_chain@ncl,?_create_chain
  8680   00D380  C0AC  F099         	movff	create_chain@ncl+1,?_create_chain+1
  8681   00D384  C0AD  F09A         	movff	create_chain@ncl+2,?_create_chain+2
  8682   00D388  C0AE  F09B         	movff	create_chain@ncl+3,?_create_chain+3
  8683   00D38C                     l668:
  8684                           
  8685                           ; BSR set to: 0
  8686   00D38C  0012               	return		;funcret
  8687   00D38E                     __end_of_create_chain:
  8688                           	callstack 0
  8689                           
  8690 ;; *************** function _put_fat *****************
  8691 ;; Defined at:
  8692 ;;		line 1218 in file "mcc_generated_files/fatfs/ff.c"
  8693 ;; Parameters:    Size  Location     Type
  8694 ;;  fs              2   23[BANK0 ] PTR struct .
  8695 ;;		 -> drive(563), NULL(0), FatFs(563), 
  8696 ;;  clst            4   25[BANK0 ] unsigned long 
  8697 ;;  val             4   29[BANK0 ] unsigned long 
  8698 ;; Auto vars:     Size  Location     Type
  8699 ;;  bc              2   53[BANK0 ] unsigned int 
  8700 ;;  p               2   51[BANK0 ] PTR unsigned char 
  8701 ;;		 -> FatFs.win(512), drive.win(512), drive(563), NULL(0), 
  8702 ;;		 -> FatFs(563), 
  8703 ;;  res             1   55[BANK0 ] enum E68
  8704 ;; Return value:  Size  Location     Type
  8705 ;;                  1    wreg      enum E68
  8706 ;; Registers used:
  8707 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  8708 ;; Tracked objects:
  8709 ;;		On entry : 0/0
  8710 ;;		On exit  : 0/0
  8711 ;;		Unchanged: 0/0
  8712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8713 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8714 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8715 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8716 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8717 ;;Total ram usage:       33 bytes
  8718 ;; Hardware stack levels used: 1
  8719 ;; Hardware stack levels required when called: 7
  8720 ;; This function calls:
  8721 ;;		_ld_dword
  8722 ;;		_move_window
  8723 ;;		_st_dword
  8724 ;;		_st_word
  8725 ;; This function is called by:
  8726 ;;		_remove_chain
  8727 ;;		_create_chain
  8728 ;; This function uses a non-reentrant model
  8729 ;;
  8730                           
  8731                           	psect	text19
  8732   00C8DE                     __ptext19:
  8733                           	callstack 0
  8734   00C8DE                     _put_fat:
  8735                           	callstack 21
  8736   00C8DE                     
  8737                           ;mcc_generated_files/fatfs/ff.c: 1219:  FATFS* fs,;mcc_generated_files/fatfs/ff.c: 1220:
      +                            DWORD clst,;mcc_generated_files/fatfs/ff.c: 1221:  DWORD val;mcc_generated_files/fatfs
      +                          /ff.c: 1223: {;mcc_generated_files/fatfs/ff.c: 1224:  UINT bc;;mcc_generated_files/fatfs
      +                          /ff.c: 1225:  BYTE *p;;mcc_generated_files/fatfs/ff.c: 1226:  FRESULT res = FR_INT_ERR;
  8738   00C8DE  0E02               	movlw	2
  8739   00C8E0  0100               	movlb	0	; () banked
  8740   00C8E2  6F97               	movwf	put_fat@res& (0+255),b
  8741   00C8E4                     
  8742                           ; BSR set to: 0
  8743                           ;mcc_generated_files/fatfs/ff.c: 1229:  if (clst >= 2 && clst < fs->n_fatent) {
  8744   00C8E4  517C               	movf	(put_fat@clst+3)& (0+255),w,b
  8745   00C8E6  117B               	iorwf	(put_fat@clst+2)& (0+255),w,b
  8746   00C8E8  117A               	iorwf	(put_fat@clst+1)& (0+255),w,b
  8747   00C8EA  E109               	bnz	u7960
  8748   00C8EC  0E02               	movlw	2
  8749   00C8EE  5D79               	subwf	put_fat@clst& (0+255),w,b
  8750   00C8F0  A0D8               	btfss	status,0,c
  8751   00C8F2  EF7D  F064         	goto	u7961
  8752   00C8F6  EF7F  F064         	goto	u7960
  8753   00C8FA                     u7961:
  8754   00C8FA  EFED  F066         	goto	l6451
  8755   00C8FE                     u7960:
  8756   00C8FE                     
  8757                           ; BSR set to: 0
  8758   00C8FE  EE20 F017          	lfsr	2,23
  8759   00C902  5177               	movf	put_fat@fs& (0+255),w,b
  8760   00C904  26D9               	addwf	fsr2l,f,c
  8761   00C906  5178               	movf	(put_fat@fs+1)& (0+255),w,b
  8762   00C908  22DA               	addwfc	fsr2h,f,c
  8763   00C90A  50DE               	movf	postinc2,w,c
  8764   00C90C  5D79               	subwf	put_fat@clst& (0+255),w,b
  8765   00C90E  50DE               	movf	postinc2,w,c
  8766   00C910  597A               	subwfb	(put_fat@clst+1)& (0+255),w,b
  8767   00C912  50DE               	movf	postinc2,w,c
  8768   00C914  597B               	subwfb	(put_fat@clst+2)& (0+255),w,b
  8769   00C916  50DE               	movf	postinc2,w,c
  8770   00C918  597C               	subwfb	(put_fat@clst+3)& (0+255),w,b
  8771   00C91A  B0D8               	btfsc	status,0,c
  8772   00C91C  EF92  F064         	goto	u7971
  8773   00C920  EF94  F064         	goto	u7970
  8774   00C924                     u7971:
  8775   00C924  EFED  F066         	goto	l6451
  8776   00C928                     u7970:
  8777   00C928  EFD0  F066         	goto	l6449
  8778   00C92C                     l620:
  8779                           
  8780                           ; BSR set to: 0
  8781                           ;mcc_generated_files/fatfs/ff.c: 1232:    bc = (UINT)clst; bc += bc / 2;
  8782   00C92C  C079  F095         	movff	put_fat@clst,put_fat@bc
  8783   00C930  C07A  F096         	movff	put_fat@clst+1,put_fat@bc+1
  8784   00C934                     
  8785                           ; BSR set to: 0
  8786   00C934  90D8               	bcf	status,0,c
  8787   00C936  3196               	rrcf	(put_fat@bc+1)& (0+255),w,b
  8788   00C938  6F82               	movwf	(??_put_fat+1)& (0+255),b
  8789   00C93A  3195               	rrcf	put_fat@bc& (0+255),w,b
  8790   00C93C  6F81               	movwf	??_put_fat& (0+255),b
  8791   00C93E  5181               	movf	??_put_fat& (0+255),w,b
  8792   00C940  2795               	addwf	put_fat@bc& (0+255),f,b
  8793   00C942  5182               	movf	(??_put_fat+1)& (0+255),w,b
  8794   00C944  2396               	addwfc	(put_fat@bc+1)& (0+255),f,b
  8795   00C946                     
  8796                           ; BSR set to: 0
  8797                           ;mcc_generated_files/fatfs/ff.c: 1233:    res = move_window(fs, fs->fatbase + (bc / ((UI
      +                          NT)512)));
  8798   00C946  C077  F070         	movff	put_fat@fs,move_window@fs
  8799   00C94A  C078  F071         	movff	put_fat@fs+1,move_window@fs+1
  8800   00C94E  EE20 F023          	lfsr	2,35
  8801   00C952  5177               	movf	put_fat@fs& (0+255),w,b
  8802   00C954  26D9               	addwf	fsr2l,f,c
  8803   00C956  5178               	movf	(put_fat@fs+1)& (0+255),w,b
  8804   00C958  22DA               	addwfc	fsr2h,f,c
  8805   00C95A  CFDE F081          	movff	postinc2,??_put_fat
  8806   00C95E  CFDE F082          	movff	postinc2,??_put_fat+1
  8807   00C962  CFDE F083          	movff	postinc2,??_put_fat+2
  8808   00C966  CFDE F084          	movff	postinc2,??_put_fat+3
  8809   00C96A  C095  F085         	movff	put_fat@bc,??_put_fat+4
  8810   00C96E  C096  F086         	movff	put_fat@bc+1,??_put_fat+5
  8811   00C972  0E09               	movlw	9
  8812   00C974  6F87               	movwf	(??_put_fat+6)& (0+255),b
  8813   00C976                     u7985:
  8814   00C976  90D8               	bcf	status,0,c
  8815   00C978  3386               	rrcf	(??_put_fat+5)& (0+255),f,b
  8816   00C97A  3385               	rrcf	(??_put_fat+4)& (0+255),f,b
  8817   00C97C  2F87               	decfsz	(??_put_fat+6)& (0+255),f,b
  8818   00C97E  EFBB  F064         	goto	u7985
  8819   00C982  5185               	movf	(??_put_fat+4)& (0+255),w,b
  8820   00C984  2581               	addwf	??_put_fat& (0+255),w,b
  8821   00C986  6F72               	movwf	move_window@sector& (0+255),b
  8822   00C988  5186               	movf	(??_put_fat+5)& (0+255),w,b
  8823   00C98A  2182               	addwfc	(??_put_fat+1)& (0+255),w,b
  8824   00C98C  6F73               	movwf	(move_window@sector+1)& (0+255),b
  8825   00C98E  0E00               	movlw	0
  8826   00C990  2183               	addwfc	(??_put_fat+2)& (0+255),w,b
  8827   00C992  6F74               	movwf	(move_window@sector+2)& (0+255),b
  8828   00C994  0E00               	movlw	0
  8829   00C996  2184               	addwfc	(??_put_fat+3)& (0+255),w,b
  8830   00C998  6F75               	movwf	(move_window@sector+3)& (0+255),b
  8831   00C99A  ECBF  F04A         	call	_move_window	;wreg free
  8832   00C99E  0100               	movlb	0	; () banked
  8833   00C9A0  6F97               	movwf	put_fat@res& (0+255),b
  8834   00C9A2                     
  8835                           ; BSR set to: 0
  8836                           ;mcc_generated_files/fatfs/ff.c: 1234:    if (res != FR_OK) break;
  8837   00C9A2  5197               	movf	put_fat@res& (0+255),w,b
  8838   00C9A4  B4D8               	btfsc	status,2,c
  8839   00C9A6  EFD7  F064         	goto	u7991
  8840   00C9AA  EFD9  F064         	goto	u7990
  8841   00C9AE                     u7991:
  8842   00C9AE  EFDB  F064         	goto	l6395
  8843   00C9B2                     u7990:
  8844   00C9B2  EFED  F066         	goto	l6451
  8845   00C9B6                     l6395:
  8846                           
  8847                           ; BSR set to: 0
  8848                           ;mcc_generated_files/fatfs/ff.c: 1235:    p = fs->win + bc++ % ((UINT)512);
  8849   00C9B6  0EFF               	movlw	255
  8850   00C9B8  1595               	andwf	put_fat@bc& (0+255),w,b
  8851   00C9BA  6F81               	movwf	??_put_fat& (0+255),b
  8852   00C9BC  0E01               	movlw	1
  8853   00C9BE  1596               	andwf	(put_fat@bc+1)& (0+255),w,b
  8854   00C9C0  6F82               	movwf	(??_put_fat+1)& (0+255),b
  8855   00C9C2  5181               	movf	??_put_fat& (0+255),w,b
  8856   00C9C4  2577               	addwf	put_fat@fs& (0+255),w,b
  8857   00C9C6  6F83               	movwf	(??_put_fat+2)& (0+255),b
  8858   00C9C8  5182               	movf	(??_put_fat+1)& (0+255),w,b
  8859   00C9CA  2178               	addwfc	(put_fat@fs+1)& (0+255),w,b
  8860   00C9CC  6F84               	movwf	(??_put_fat+3)& (0+255),b
  8861   00C9CE  0E33               	movlw	51
  8862   00C9D0  2583               	addwf	(??_put_fat+2)& (0+255),w,b
  8863   00C9D2  6F93               	movwf	put_fat@p& (0+255),b
  8864   00C9D4  0E00               	movlw	0
  8865   00C9D6  2184               	addwfc	(??_put_fat+3)& (0+255),w,b
  8866   00C9D8  6F94               	movwf	(put_fat@p+1)& (0+255),b
  8867   00C9DA                     
  8868                           ; BSR set to: 0
  8869   00C9DA  4B95               	infsnz	put_fat@bc& (0+255),f,b
  8870   00C9DC  2B96               	incf	(put_fat@bc+1)& (0+255),f,b
  8871   00C9DE                     
  8872                           ; BSR set to: 0
  8873                           ;mcc_generated_files/fatfs/ff.c: 1236:    *p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val <<
      +                           4)) : (BYTE)val;
  8874   00C9DE  B179               	btfsc	put_fat@clst& (0+255),0,b
  8875   00C9E0  EFF4  F064         	goto	u8001
  8876   00C9E4  EFF6  F064         	goto	u8000
  8877   00C9E8                     u8001:
  8878   00C9E8  EFFB  F064         	goto	l6403
  8879   00C9EC                     u8000:
  8880   00C9EC                     
  8881                           ; BSR set to: 0
  8882   00C9EC  C07D  F08F         	movff	put_fat@val,_put_fat$1788
  8883   00C9F0  6B90               	clrf	(_put_fat$1788+1)& (0+255),b
  8884   00C9F2  EF15  F065         	goto	l6405
  8885   00C9F6                     l6403:
  8886                           
  8887                           ; BSR set to: 0
  8888   00C9F6  517D               	movf	put_fat@val& (0+255),w,b
  8889   00C9F8  6F81               	movwf	??_put_fat& (0+255),b
  8890   00C9FA  6B82               	clrf	(??_put_fat+1)& (0+255),b
  8891   00C9FC  3B81               	swapf	??_put_fat& (0+255),f,b
  8892   00C9FE  3B82               	swapf	(??_put_fat+1)& (0+255),f,b
  8893   00CA00  0EF0               	movlw	240
  8894   00CA02  1782               	andwf	(??_put_fat+1)& (0+255),f,b
  8895   00CA04  5181               	movf	??_put_fat& (0+255),w,b
  8896   00CA06  0B0F               	andlw	15
  8897   00CA08  1382               	iorwf	(??_put_fat+1)& (0+255),f,b
  8898   00CA0A  0EF0               	movlw	240
  8899   00CA0C  1781               	andwf	??_put_fat& (0+255),f,b
  8900   00CA0E  C093  FFD9         	movff	put_fat@p,fsr2l
  8901   00CA12  C094  FFDA         	movff	put_fat@p+1,fsr2h
  8902   00CA16  50DF               	movf	indf2,w,c
  8903   00CA18  0B0F               	andlw	15
  8904   00CA1A  6F83               	movwf	(??_put_fat+2)& (0+255),b
  8905   00CA1C  6B84               	clrf	(??_put_fat+3)& (0+255),b
  8906   00CA1E  5181               	movf	??_put_fat& (0+255),w,b
  8907   00CA20  1183               	iorwf	(??_put_fat+2)& (0+255),w,b
  8908   00CA22  6F8F               	movwf	_put_fat$1788& (0+255),b
  8909   00CA24  5182               	movf	(??_put_fat+1)& (0+255),w,b
  8910   00CA26  1184               	iorwf	(??_put_fat+3)& (0+255),w,b
  8911   00CA28  6F90               	movwf	(_put_fat$1788+1)& (0+255),b
  8912   00CA2A                     l6405:
  8913                           
  8914                           ; BSR set to: 0
  8915   00CA2A  C093  FFD9         	movff	put_fat@p,fsr2l
  8916   00CA2E  C094  FFDA         	movff	put_fat@p+1,fsr2h
  8917   00CA32  C08F  FFDF         	movff	_put_fat$1788,indf2
  8918   00CA36                     
  8919                           ; BSR set to: 0
  8920                           ;mcc_generated_files/fatfs/ff.c: 1237:    fs->wflag = 1;
  8921   00CA36  EE20 F003          	lfsr	2,3
  8922   00CA3A  5177               	movf	put_fat@fs& (0+255),w,b
  8923   00CA3C  26D9               	addwf	fsr2l,f,c
  8924   00CA3E  5178               	movf	(put_fat@fs+1)& (0+255),w,b
  8925   00CA40  22DA               	addwfc	fsr2h,f,c
  8926   00CA42  0E01               	movlw	1
  8927   00CA44  6EDF               	movwf	indf2,c
  8928   00CA46                     
  8929                           ; BSR set to: 0
  8930                           ;mcc_generated_files/fatfs/ff.c: 1238:    res = move_window(fs, fs->fatbase + (bc / ((UI
      +                          NT)512)));
  8931   00CA46  C077  F070         	movff	put_fat@fs,move_window@fs
  8932   00CA4A  C078  F071         	movff	put_fat@fs+1,move_window@fs+1
  8933   00CA4E  EE20 F023          	lfsr	2,35
  8934   00CA52  5177               	movf	put_fat@fs& (0+255),w,b
  8935   00CA54  26D9               	addwf	fsr2l,f,c
  8936   00CA56  5178               	movf	(put_fat@fs+1)& (0+255),w,b
  8937   00CA58  22DA               	addwfc	fsr2h,f,c
  8938   00CA5A  CFDE F081          	movff	postinc2,??_put_fat
  8939   00CA5E  CFDE F082          	movff	postinc2,??_put_fat+1
  8940   00CA62  CFDE F083          	movff	postinc2,??_put_fat+2
  8941   00CA66  CFDE F084          	movff	postinc2,??_put_fat+3
  8942   00CA6A  C095  F085         	movff	put_fat@bc,??_put_fat+4
  8943   00CA6E  C096  F086         	movff	put_fat@bc+1,??_put_fat+5
  8944   00CA72  0E09               	movlw	9
  8945   00CA74  6F87               	movwf	(??_put_fat+6)& (0+255),b
  8946   00CA76                     u8015:
  8947   00CA76  90D8               	bcf	status,0,c
  8948   00CA78  3386               	rrcf	(??_put_fat+5)& (0+255),f,b
  8949   00CA7A  3385               	rrcf	(??_put_fat+4)& (0+255),f,b
  8950   00CA7C  2F87               	decfsz	(??_put_fat+6)& (0+255),f,b
  8951   00CA7E  EF3B  F065         	goto	u8015
  8952   00CA82  5185               	movf	(??_put_fat+4)& (0+255),w,b
  8953   00CA84  2581               	addwf	??_put_fat& (0+255),w,b
  8954   00CA86  6F72               	movwf	move_window@sector& (0+255),b
  8955   00CA88  5186               	movf	(??_put_fat+5)& (0+255),w,b
  8956   00CA8A  2182               	addwfc	(??_put_fat+1)& (0+255),w,b
  8957   00CA8C  6F73               	movwf	(move_window@sector+1)& (0+255),b
  8958   00CA8E  0E00               	movlw	0
  8959   00CA90  2183               	addwfc	(??_put_fat+2)& (0+255),w,b
  8960   00CA92  6F74               	movwf	(move_window@sector+2)& (0+255),b
  8961   00CA94  0E00               	movlw	0
  8962   00CA96  2184               	addwfc	(??_put_fat+3)& (0+255),w,b
  8963   00CA98  6F75               	movwf	(move_window@sector+3)& (0+255),b
  8964   00CA9A  ECBF  F04A         	call	_move_window	;wreg free
  8965   00CA9E  0100               	movlb	0	; () banked
  8966   00CAA0  6F97               	movwf	put_fat@res& (0+255),b
  8967   00CAA2                     
  8968                           ; BSR set to: 0
  8969                           ;mcc_generated_files/fatfs/ff.c: 1239:    if (res != FR_OK) break;
  8970   00CAA2  5197               	movf	put_fat@res& (0+255),w,b
  8971   00CAA4  B4D8               	btfsc	status,2,c
  8972   00CAA6  EF57  F065         	goto	u8021
  8973   00CAAA  EF59  F065         	goto	u8020
  8974   00CAAE                     u8021:
  8975   00CAAE  EF5B  F065         	goto	l6415
  8976   00CAB2                     u8020:
  8977   00CAB2  EFED  F066         	goto	l6451
  8978   00CAB6                     l6415:
  8979                           
  8980                           ; BSR set to: 0
  8981                           ;mcc_generated_files/fatfs/ff.c: 1240:    p = fs->win + bc % ((UINT)512);
  8982   00CAB6  0EFF               	movlw	255
  8983   00CAB8  1595               	andwf	put_fat@bc& (0+255),w,b
  8984   00CABA  6F81               	movwf	??_put_fat& (0+255),b
  8985   00CABC  0E01               	movlw	1
  8986   00CABE  1596               	andwf	(put_fat@bc+1)& (0+255),w,b
  8987   00CAC0  6F82               	movwf	(??_put_fat+1)& (0+255),b
  8988   00CAC2  5181               	movf	??_put_fat& (0+255),w,b
  8989   00CAC4  2577               	addwf	put_fat@fs& (0+255),w,b
  8990   00CAC6  6F83               	movwf	(??_put_fat+2)& (0+255),b
  8991   00CAC8  5182               	movf	(??_put_fat+1)& (0+255),w,b
  8992   00CACA  2178               	addwfc	(put_fat@fs+1)& (0+255),w,b
  8993   00CACC  6F84               	movwf	(??_put_fat+3)& (0+255),b
  8994   00CACE  0E33               	movlw	51
  8995   00CAD0  2583               	addwf	(??_put_fat+2)& (0+255),w,b
  8996   00CAD2  6F93               	movwf	put_fat@p& (0+255),b
  8997   00CAD4  0E00               	movlw	0
  8998   00CAD6  2184               	addwfc	(??_put_fat+3)& (0+255),w,b
  8999   00CAD8  6F94               	movwf	(put_fat@p+1)& (0+255),b
  9000   00CADA                     
  9001                           ; BSR set to: 0
  9002                           ;mcc_generated_files/fatfs/ff.c: 1241:    *p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0x
      +                          F0) | ((BYTE)(val >> 8) & 0x0F));
  9003   00CADA  B179               	btfsc	put_fat@clst& (0+255),0,b
  9004   00CADC  EF72  F065         	goto	u8031
  9005   00CAE0  EF74  F065         	goto	u8030
  9006   00CAE4                     u8031:
  9007   00CAE4  EF92  F065         	goto	l6421
  9008   00CAE8                     u8030:
  9009   00CAE8                     
  9010                           ; BSR set to: 0
  9011   00CAE8  C07D  F081         	movff	put_fat@val,??_put_fat
  9012   00CAEC  C07E  F082         	movff	put_fat@val+1,??_put_fat+1
  9013   00CAF0  C07F  F083         	movff	put_fat@val+2,??_put_fat+2
  9014   00CAF4  C080  F084         	movff	put_fat@val+3,??_put_fat+3
  9015   00CAF8  C082  F081         	movff	??_put_fat+1,??_put_fat
  9016   00CAFC  C083  F082         	movff	??_put_fat+2,??_put_fat+1
  9017   00CB00  C084  F083         	movff	??_put_fat+3,??_put_fat+2
  9018   00CB04  6B84               	clrf	(??_put_fat+3)& (0+255),b
  9019   00CB06  0E0F               	movlw	15
  9020   00CB08  1781               	andwf	??_put_fat& (0+255),f,b
  9021   00CB0A  C093  FFD9         	movff	put_fat@p,fsr2l
  9022   00CB0E  C094  FFDA         	movff	put_fat@p+1,fsr2h
  9023   00CB12  50DF               	movf	indf2,w,c
  9024   00CB14  0BF0               	andlw	240
  9025   00CB16  1181               	iorwf	??_put_fat& (0+255),w,b
  9026   00CB18  6F85               	movwf	(??_put_fat+4)& (0+255),b
  9027   00CB1A  5185               	movf	(??_put_fat+4)& (0+255),w,b
  9028   00CB1C  6F91               	movwf	_put_fat$1789& (0+255),b
  9029   00CB1E  6B92               	clrf	(_put_fat$1789+1)& (0+255),b
  9030   00CB20  EFA8  F065         	goto	l6423
  9031   00CB24                     l6421:
  9032                           
  9033                           ; BSR set to: 0
  9034   00CB24  C07D  F081         	movff	put_fat@val,??_put_fat
  9035   00CB28  C07E  F082         	movff	put_fat@val+1,??_put_fat+1
  9036   00CB2C  C07F  F083         	movff	put_fat@val+2,??_put_fat+2
  9037   00CB30  C080  F084         	movff	put_fat@val+3,??_put_fat+3
  9038   00CB34  0E05               	movlw	5
  9039   00CB36  EFA2  F065         	goto	u8040
  9040   00CB3A                     u8045:
  9041   00CB3A  90D8               	bcf	status,0,c
  9042   00CB3C  3384               	rrcf	(??_put_fat+3)& (0+255),f,b
  9043   00CB3E  3383               	rrcf	(??_put_fat+2)& (0+255),f,b
  9044   00CB40  3382               	rrcf	(??_put_fat+1)& (0+255),f,b
  9045   00CB42  3381               	rrcf	??_put_fat& (0+255),f,b
  9046   00CB44                     u8040:
  9047   00CB44  2EE8               	decfsz	wreg,f,c
  9048   00CB46  EF9D  F065         	goto	u8045
  9049   00CB4A  5181               	movf	??_put_fat& (0+255),w,b
  9050   00CB4C  6F91               	movwf	_put_fat$1789& (0+255),b
  9051   00CB4E  6B92               	clrf	(_put_fat$1789+1)& (0+255),b
  9052   00CB50                     l6423:
  9053                           
  9054                           ; BSR set to: 0
  9055   00CB50  C093  FFD9         	movff	put_fat@p,fsr2l
  9056   00CB54  C094  FFDA         	movff	put_fat@p+1,fsr2h
  9057   00CB58  C091  FFDF         	movff	_put_fat$1789,indf2
  9058                           
  9059                           ;mcc_generated_files/fatfs/ff.c: 1242:    fs->wflag = 1;
  9060   00CB5C  EE20 F003          	lfsr	2,3
  9061   00CB60  5177               	movf	put_fat@fs& (0+255),w,b
  9062   00CB62  26D9               	addwf	fsr2l,f,c
  9063   00CB64  5178               	movf	(put_fat@fs+1)& (0+255),w,b
  9064   00CB66  22DA               	addwfc	fsr2h,f,c
  9065   00CB68  0E01               	movlw	1
  9066   00CB6A  6EDF               	movwf	indf2,c
  9067                           
  9068                           ;mcc_generated_files/fatfs/ff.c: 1243:    break;
  9069   00CB6C  EFED  F066         	goto	l6451
  9070   00CB70                     l6425:
  9071                           
  9072                           ; BSR set to: 0
  9073                           ;mcc_generated_files/fatfs/ff.c: 1246:    res = move_window(fs, fs->fatbase + (clst / ((
      +                          (UINT)512) / 2)));
  9074   00CB70  C077  F070         	movff	put_fat@fs,move_window@fs
  9075   00CB74  C078  F071         	movff	put_fat@fs+1,move_window@fs+1
  9076   00CB78  EE20 F023          	lfsr	2,35
  9077   00CB7C  5177               	movf	put_fat@fs& (0+255),w,b
  9078   00CB7E  26D9               	addwf	fsr2l,f,c
  9079   00CB80  5178               	movf	(put_fat@fs+1)& (0+255),w,b
  9080   00CB82  22DA               	addwfc	fsr2h,f,c
  9081   00CB84  CFDE F081          	movff	postinc2,??_put_fat
  9082   00CB88  CFDE F082          	movff	postinc2,??_put_fat+1
  9083   00CB8C  CFDE F083          	movff	postinc2,??_put_fat+2
  9084   00CB90  CFDE F084          	movff	postinc2,??_put_fat+3
  9085   00CB94  C079  F085         	movff	put_fat@clst,??_put_fat+4
  9086   00CB98  C07A  F086         	movff	put_fat@clst+1,??_put_fat+5
  9087   00CB9C  C07B  F087         	movff	put_fat@clst+2,??_put_fat+6
  9088   00CBA0  C07C  F088         	movff	put_fat@clst+3,??_put_fat+7
  9089   00CBA4  C086  F085         	movff	??_put_fat+5,??_put_fat+4
  9090   00CBA8  C087  F086         	movff	??_put_fat+6,??_put_fat+5
  9091   00CBAC  C088  F087         	movff	??_put_fat+7,??_put_fat+6
  9092   00CBB0  6B88               	clrf	(??_put_fat+7)& (0+255),b
  9093   00CBB2  5181               	movf	??_put_fat& (0+255),w,b
  9094   00CBB4  2585               	addwf	(??_put_fat+4)& (0+255),w,b
  9095   00CBB6  6F72               	movwf	move_window@sector& (0+255),b
  9096   00CBB8  5182               	movf	(??_put_fat+1)& (0+255),w,b
  9097   00CBBA  2186               	addwfc	(??_put_fat+5)& (0+255),w,b
  9098   00CBBC  6F73               	movwf	(move_window@sector+1)& (0+255),b
  9099   00CBBE  5183               	movf	(??_put_fat+2)& (0+255),w,b
  9100   00CBC0  2187               	addwfc	(??_put_fat+6)& (0+255),w,b
  9101   00CBC2  6F74               	movwf	(move_window@sector+2)& (0+255),b
  9102   00CBC4  5184               	movf	(??_put_fat+3)& (0+255),w,b
  9103   00CBC6  2188               	addwfc	(??_put_fat+7)& (0+255),w,b
  9104   00CBC8  6F75               	movwf	(move_window@sector+3)& (0+255),b
  9105   00CBCA  ECBF  F04A         	call	_move_window	;wreg free
  9106   00CBCE  0100               	movlb	0	; () banked
  9107   00CBD0  6F97               	movwf	put_fat@res& (0+255),b
  9108   00CBD2                     
  9109                           ; BSR set to: 0
  9110                           ;mcc_generated_files/fatfs/ff.c: 1247:    if (res != FR_OK) break;
  9111   00CBD2  5197               	movf	put_fat@res& (0+255),w,b
  9112   00CBD4  B4D8               	btfsc	status,2,c
  9113   00CBD6  EFEF  F065         	goto	u8051
  9114   00CBDA  EFF1  F065         	goto	u8050
  9115   00CBDE                     u8051:
  9116   00CBDE  EFF3  F065         	goto	l6431
  9117   00CBE2                     u8050:
  9118   00CBE2  EFED  F066         	goto	l6451
  9119   00CBE6                     l6431:
  9120                           
  9121                           ; BSR set to: 0
  9122                           ;mcc_generated_files/fatfs/ff.c: 1248:    st_word(fs->win + clst * 2 % ((UINT)512), (WOR
      +                          D)val);
  9123   00CBE6  C079  F081         	movff	put_fat@clst,??_put_fat
  9124   00CBEA  C07A  F082         	movff	put_fat@clst+1,??_put_fat+1
  9125   00CBEE  90D8               	bcf	status,0,c
  9126   00CBF0  3781               	rlcf	??_put_fat& (0+255),f,b
  9127   00CBF2  3782               	rlcf	(??_put_fat+1)& (0+255),f,b
  9128   00CBF4  0EFF               	movlw	255
  9129   00CBF6  1581               	andwf	??_put_fat& (0+255),w,b
  9130   00CBF8  6F83               	movwf	(??_put_fat+2)& (0+255),b
  9131   00CBFA  0E01               	movlw	1
  9132   00CBFC  1582               	andwf	(??_put_fat+1)& (0+255),w,b
  9133   00CBFE  6F84               	movwf	(??_put_fat+3)& (0+255),b
  9134   00CC00  5183               	movf	(??_put_fat+2)& (0+255),w,b
  9135   00CC02  2577               	addwf	put_fat@fs& (0+255),w,b
  9136   00CC04  6F85               	movwf	(??_put_fat+4)& (0+255),b
  9137   00CC06  5184               	movf	(??_put_fat+3)& (0+255),w,b
  9138   00CC08  2178               	addwfc	(put_fat@fs+1)& (0+255),w,b
  9139   00CC0A  6F86               	movwf	(??_put_fat+5)& (0+255),b
  9140   00CC0C  0E33               	movlw	51
  9141   00CC0E  2585               	addwf	(??_put_fat+4)& (0+255),w,b
  9142   00CC10  6E01               	movwf	st_word@ptr^0,c
  9143   00CC12  0E00               	movlw	0
  9144   00CC14  2186               	addwfc	(??_put_fat+5)& (0+255),w,b
  9145   00CC16  6E02               	movwf	(st_word@ptr+1)^0,c
  9146   00CC18  C07D  F003         	movff	put_fat@val,st_word@val
  9147   00CC1C  C07E  F004         	movff	put_fat@val+1,st_word@val+1
  9148   00CC20  EC9E  F045         	call	_st_word	;wreg free
  9149   00CC24                     
  9150                           ;mcc_generated_files/fatfs/ff.c: 1249:    fs->wflag = 1;
  9151   00CC24  0100               	movlb	0	; () banked
  9152   00CC26  EE20 F003          	lfsr	2,3
  9153   00CC2A  5177               	movf	put_fat@fs& (0+255),w,b
  9154   00CC2C  26D9               	addwf	fsr2l,f,c
  9155   00CC2E  5178               	movf	(put_fat@fs+1)& (0+255),w,b
  9156   00CC30  22DA               	addwfc	fsr2h,f,c
  9157   00CC32  0E01               	movlw	1
  9158   00CC34  6EDF               	movwf	indf2,c
  9159                           
  9160                           ;mcc_generated_files/fatfs/ff.c: 1250:    break;
  9161   00CC36  EFED  F066         	goto	l6451
  9162   00CC3A                     l6435:
  9163                           
  9164                           ; BSR set to: 0
  9165                           ;mcc_generated_files/fatfs/ff.c: 1256:    res = move_window(fs, fs->fatbase + (clst / ((
      +                          (UINT)512) / 4)));
  9166   00CC3A  C077  F070         	movff	put_fat@fs,move_window@fs
  9167   00CC3E  C078  F071         	movff	put_fat@fs+1,move_window@fs+1
  9168   00CC42  EE20 F023          	lfsr	2,35
  9169   00CC46  5177               	movf	put_fat@fs& (0+255),w,b
  9170   00CC48  26D9               	addwf	fsr2l,f,c
  9171   00CC4A  5178               	movf	(put_fat@fs+1)& (0+255),w,b
  9172   00CC4C  22DA               	addwfc	fsr2h,f,c
  9173   00CC4E  CFDE F081          	movff	postinc2,??_put_fat
  9174   00CC52  CFDE F082          	movff	postinc2,??_put_fat+1
  9175   00CC56  CFDE F083          	movff	postinc2,??_put_fat+2
  9176   00CC5A  CFDE F084          	movff	postinc2,??_put_fat+3
  9177   00CC5E  C079  F085         	movff	put_fat@clst,??_put_fat+4
  9178   00CC62  C07A  F086         	movff	put_fat@clst+1,??_put_fat+5
  9179   00CC66  C07B  F087         	movff	put_fat@clst+2,??_put_fat+6
  9180   00CC6A  C07C  F088         	movff	put_fat@clst+3,??_put_fat+7
  9181   00CC6E  0E08               	movlw	8
  9182   00CC70  EF3F  F066         	goto	u8060
  9183   00CC74                     u8065:
  9184   00CC74  90D8               	bcf	status,0,c
  9185   00CC76  3388               	rrcf	(??_put_fat+7)& (0+255),f,b
  9186   00CC78  3387               	rrcf	(??_put_fat+6)& (0+255),f,b
  9187   00CC7A  3386               	rrcf	(??_put_fat+5)& (0+255),f,b
  9188   00CC7C  3385               	rrcf	(??_put_fat+4)& (0+255),f,b
  9189   00CC7E                     u8060:
  9190   00CC7E  2EE8               	decfsz	wreg,f,c
  9191   00CC80  EF3A  F066         	goto	u8065
  9192   00CC84  5181               	movf	??_put_fat& (0+255),w,b
  9193   00CC86  2585               	addwf	(??_put_fat+4)& (0+255),w,b
  9194   00CC88  6F72               	movwf	move_window@sector& (0+255),b
  9195   00CC8A  5182               	movf	(??_put_fat+1)& (0+255),w,b
  9196   00CC8C  2186               	addwfc	(??_put_fat+5)& (0+255),w,b
  9197   00CC8E  6F73               	movwf	(move_window@sector+1)& (0+255),b
  9198   00CC90  5183               	movf	(??_put_fat+2)& (0+255),w,b
  9199   00CC92  2187               	addwfc	(??_put_fat+6)& (0+255),w,b
  9200   00CC94  6F74               	movwf	(move_window@sector+2)& (0+255),b
  9201   00CC96  5184               	movf	(??_put_fat+3)& (0+255),w,b
  9202   00CC98  2188               	addwfc	(??_put_fat+7)& (0+255),w,b
  9203   00CC9A  6F75               	movwf	(move_window@sector+3)& (0+255),b
  9204   00CC9C  ECBF  F04A         	call	_move_window	;wreg free
  9205   00CCA0  0100               	movlb	0	; () banked
  9206   00CCA2  6F97               	movwf	put_fat@res& (0+255),b
  9207   00CCA4                     
  9208                           ; BSR set to: 0
  9209                           ;mcc_generated_files/fatfs/ff.c: 1257:    if (res != FR_OK) break;
  9210   00CCA4  5197               	movf	put_fat@res& (0+255),w,b
  9211   00CCA6  B4D8               	btfsc	status,2,c
  9212   00CCA8  EF58  F066         	goto	u8071
  9213   00CCAC  EF5A  F066         	goto	u8070
  9214   00CCB0                     u8071:
  9215   00CCB0  EF5C  F066         	goto	l6443
  9216   00CCB4                     u8070:
  9217   00CCB4  EFED  F066         	goto	l6451
  9218   00CCB8                     l6443:
  9219                           
  9220                           ; BSR set to: 0
  9221                           ;mcc_generated_files/fatfs/ff.c: 1259:     val = (val & 0x0FFFFFFF) | (ld_dword(fs->win 
      +                          + clst * 4 % ((UINT)512)) & 0xF0000000);
  9222   00CCB8  C079  F081         	movff	put_fat@clst,??_put_fat
  9223   00CCBC  C07A  F082         	movff	put_fat@clst+1,??_put_fat+1
  9224   00CCC0  90D8               	bcf	status,0,c
  9225   00CCC2  3781               	rlcf	??_put_fat& (0+255),f,b
  9226   00CCC4  3782               	rlcf	(??_put_fat+1)& (0+255),f,b
  9227   00CCC6  90D8               	bcf	status,0,c
  9228   00CCC8  3781               	rlcf	??_put_fat& (0+255),f,b
  9229   00CCCA  3782               	rlcf	(??_put_fat+1)& (0+255),f,b
  9230   00CCCC  0EFF               	movlw	255
  9231   00CCCE  1581               	andwf	??_put_fat& (0+255),w,b
  9232   00CCD0  6F83               	movwf	(??_put_fat+2)& (0+255),b
  9233   00CCD2  0E01               	movlw	1
  9234   00CCD4  1582               	andwf	(??_put_fat+1)& (0+255),w,b
  9235   00CCD6  6F84               	movwf	(??_put_fat+3)& (0+255),b
  9236   00CCD8  5183               	movf	(??_put_fat+2)& (0+255),w,b
  9237   00CCDA  2577               	addwf	put_fat@fs& (0+255),w,b
  9238   00CCDC  6F85               	movwf	(??_put_fat+4)& (0+255),b
  9239   00CCDE  5184               	movf	(??_put_fat+3)& (0+255),w,b
  9240   00CCE0  2178               	addwfc	(put_fat@fs+1)& (0+255),w,b
  9241   00CCE2  6F86               	movwf	(??_put_fat+5)& (0+255),b
  9242   00CCE4  0E33               	movlw	51
  9243   00CCE6  2585               	addwf	(??_put_fat+4)& (0+255),w,b
  9244   00CCE8  6E01               	movwf	ld_dword@ptr^0,c
  9245   00CCEA  0E00               	movlw	0
  9246   00CCEC  2186               	addwfc	(??_put_fat+5)& (0+255),w,b
  9247   00CCEE  6E02               	movwf	(ld_dword@ptr+1)^0,c
  9248   00CCF0  EC63  F04A         	call	_ld_dword	;wreg free
  9249   00CCF4  0E00               	movlw	0
  9250   00CCF6  1401               	andwf	?_ld_dword^0,w,c
  9251   00CCF8  0100               	movlb	0	; () banked
  9252   00CCFA  6F87               	movwf	(??_put_fat+6)& (0+255),b
  9253   00CCFC  0E00               	movlw	0
  9254   00CCFE  1402               	andwf	(?_ld_dword+1)^0,w,c
  9255   00CD00  6F88               	movwf	(??_put_fat+7)& (0+255),b
  9256   00CD02  0E00               	movlw	0
  9257   00CD04  1403               	andwf	(?_ld_dword+2)^0,w,c
  9258   00CD06  6F89               	movwf	(??_put_fat+8)& (0+255),b
  9259   00CD08  0EF0               	movlw	240
  9260   00CD0A  1404               	andwf	(?_ld_dword+3)^0,w,c
  9261   00CD0C  6F8A               	movwf	(??_put_fat+9)& (0+255),b
  9262   00CD0E  0EFF               	movlw	255
  9263   00CD10  157D               	andwf	put_fat@val& (0+255),w,b
  9264   00CD12  6F8B               	movwf	(??_put_fat+10)& (0+255),b
  9265   00CD14  0EFF               	movlw	255
  9266   00CD16  157E               	andwf	(put_fat@val+1)& (0+255),w,b
  9267   00CD18  6F8C               	movwf	(??_put_fat+11)& (0+255),b
  9268   00CD1A  0EFF               	movlw	255
  9269   00CD1C  157F               	andwf	(put_fat@val+2)& (0+255),w,b
  9270   00CD1E  6F8D               	movwf	(??_put_fat+12)& (0+255),b
  9271   00CD20  0E0F               	movlw	15
  9272   00CD22  1580               	andwf	(put_fat@val+3)& (0+255),w,b
  9273   00CD24  6F8E               	movwf	(??_put_fat+13)& (0+255),b
  9274   00CD26  5187               	movf	(??_put_fat+6)& (0+255),w,b
  9275   00CD28  118B               	iorwf	(??_put_fat+10)& (0+255),w,b
  9276   00CD2A  6F7D               	movwf	put_fat@val& (0+255),b
  9277   00CD2C  5188               	movf	(??_put_fat+7)& (0+255),w,b
  9278   00CD2E  118C               	iorwf	(??_put_fat+11)& (0+255),w,b
  9279   00CD30  6F7E               	movwf	(put_fat@val+1)& (0+255),b
  9280   00CD32  5189               	movf	(??_put_fat+8)& (0+255),w,b
  9281   00CD34  118D               	iorwf	(??_put_fat+12)& (0+255),w,b
  9282   00CD36  6F7F               	movwf	(put_fat@val+2)& (0+255),b
  9283   00CD38  518A               	movf	(??_put_fat+9)& (0+255),w,b
  9284   00CD3A  118E               	iorwf	(??_put_fat+13)& (0+255),w,b
  9285   00CD3C  6F80               	movwf	(put_fat@val+3)& (0+255),b
  9286   00CD3E                     
  9287                           ; BSR set to: 0
  9288                           ;mcc_generated_files/fatfs/ff.c: 1261:    st_dword(fs->win + clst * 4 % ((UINT)512), val
      +                          );
  9289   00CD3E  C079  F081         	movff	put_fat@clst,??_put_fat
  9290   00CD42  C07A  F082         	movff	put_fat@clst+1,??_put_fat+1
  9291   00CD46  90D8               	bcf	status,0,c
  9292   00CD48  3781               	rlcf	??_put_fat& (0+255),f,b
  9293   00CD4A  3782               	rlcf	(??_put_fat+1)& (0+255),f,b
  9294   00CD4C  90D8               	bcf	status,0,c
  9295   00CD4E  3781               	rlcf	??_put_fat& (0+255),f,b
  9296   00CD50  3782               	rlcf	(??_put_fat+1)& (0+255),f,b
  9297   00CD52  0EFF               	movlw	255
  9298   00CD54  1581               	andwf	??_put_fat& (0+255),w,b
  9299   00CD56  6F83               	movwf	(??_put_fat+2)& (0+255),b
  9300   00CD58  0E01               	movlw	1
  9301   00CD5A  1582               	andwf	(??_put_fat+1)& (0+255),w,b
  9302   00CD5C  6F84               	movwf	(??_put_fat+3)& (0+255),b
  9303   00CD5E  5183               	movf	(??_put_fat+2)& (0+255),w,b
  9304   00CD60  2577               	addwf	put_fat@fs& (0+255),w,b
  9305   00CD62  6F85               	movwf	(??_put_fat+4)& (0+255),b
  9306   00CD64  5184               	movf	(??_put_fat+3)& (0+255),w,b
  9307   00CD66  2178               	addwfc	(put_fat@fs+1)& (0+255),w,b
  9308   00CD68  6F86               	movwf	(??_put_fat+5)& (0+255),b
  9309   00CD6A  0E33               	movlw	51
  9310   00CD6C  2585               	addwf	(??_put_fat+4)& (0+255),w,b
  9311   00CD6E  6E01               	movwf	st_dword@ptr^0,c
  9312   00CD70  0E00               	movlw	0
  9313   00CD72  2186               	addwfc	(??_put_fat+5)& (0+255),w,b
  9314   00CD74  6E02               	movwf	(st_dword@ptr+1)^0,c
  9315   00CD76  C07D  F003         	movff	put_fat@val,st_dword@val
  9316   00CD7A  C07E  F004         	movff	put_fat@val+1,st_dword@val+1
  9317   00CD7E  C07F  F005         	movff	put_fat@val+2,st_dword@val+2
  9318   00CD82  C080  F006         	movff	put_fat@val+3,st_dword@val+3
  9319   00CD86  EC84  F047         	call	_st_dword	;wreg free
  9320   00CD8A                     
  9321                           ;mcc_generated_files/fatfs/ff.c: 1262:    fs->wflag = 1;
  9322   00CD8A  0100               	movlb	0	; () banked
  9323   00CD8C  EE20 F003          	lfsr	2,3
  9324   00CD90  5177               	movf	put_fat@fs& (0+255),w,b
  9325   00CD92  26D9               	addwf	fsr2l,f,c
  9326   00CD94  5178               	movf	(put_fat@fs+1)& (0+255),w,b
  9327   00CD96  22DA               	addwfc	fsr2h,f,c
  9328   00CD98  0E01               	movlw	1
  9329   00CD9A  6EDF               	movwf	indf2,c
  9330                           
  9331                           ;mcc_generated_files/fatfs/ff.c: 1263:    break;
  9332   00CD9C  EFED  F066         	goto	l6451
  9333   00CDA0                     l6449:
  9334                           
  9335                           ; BSR set to: 0
  9336   00CDA0  C077  FFD9         	movff	put_fat@fs,fsr2l
  9337   00CDA4  C078  FFDA         	movff	put_fat@fs+1,fsr2h
  9338   00CDA8  50DF               	movf	indf2,w,c
  9339   00CDAA  6F81               	movwf	??_put_fat& (0+255),b
  9340   00CDAC  6B82               	clrf	(??_put_fat+1)& (0+255),b
  9341                           
  9342                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9343                           ; Switch size 1, requested type "simple"
  9344                           ; Number of cases is 1, Range of values is 0 to 0
  9345                           ; switch strategies available:
  9346                           ; Name         Instructions Cycles
  9347                           ; simple_byte            4     3 (average)
  9348                           ;	Chosen strategy is simple_byte
  9349   00CDAE  5182               	movf	(??_put_fat+1)& (0+255),w,b
  9350   00CDB0  0A00               	xorlw	0	; case 0
  9351   00CDB2  B4D8               	btfsc	status,2,c
  9352   00CDB4  EFDE  F066         	goto	l9285
  9353   00CDB8  EFED  F066         	goto	l6451
  9354   00CDBC                     l9285:
  9355                           
  9356                           ; BSR set to: 0
  9357                           ; Switch size 1, requested type "simple"
  9358                           ; Number of cases is 3, Range of values is 1 to 3
  9359                           ; switch strategies available:
  9360                           ; Name         Instructions Cycles
  9361                           ; simple_byte           10     6 (average)
  9362                           ;	Chosen strategy is simple_byte
  9363   00CDBC  5181               	movf	??_put_fat& (0+255),w,b
  9364   00CDBE  0A01               	xorlw	1	; case 1
  9365   00CDC0  B4D8               	btfsc	status,2,c
  9366   00CDC2  EF96  F064         	goto	l620
  9367   00CDC6  0A03               	xorlw	3	; case 2
  9368   00CDC8  B4D8               	btfsc	status,2,c
  9369   00CDCA  EFB8  F065         	goto	l6425
  9370   00CDCE  0A01               	xorlw	1	; case 3
  9371   00CDD0  B4D8               	btfsc	status,2,c
  9372   00CDD2  EF1D  F066         	goto	l6435
  9373   00CDD6  EFED  F066         	goto	l6451
  9374   00CDDA                     l6451:
  9375                           
  9376                           ; BSR set to: 0
  9377                           ;mcc_generated_files/fatfs/ff.c: 1266:  return res;
  9378   00CDDA  5197               	movf	put_fat@res& (0+255),w,b
  9379   00CDDC                     
  9380                           ; BSR set to: 0
  9381   00CDDC  0012               	return		;funcret
  9382   00CDDE                     __end_of_put_fat:
  9383                           	callstack 0
  9384                           
  9385 ;; *************** function _get_fat *****************
  9386 ;; Defined at:
  9387 ;;		line 1141 in file "mcc_generated_files/fatfs/ff.c"
  9388 ;; Parameters:    Size  Location     Type
  9389 ;;  obj             2   23[BANK0 ] PTR struct .
  9390 ;;		 -> f_rename@djn(40), f_rename@djo(40), f_mkdir@dj(40), f_unlink@sdj(40), 
  9391 ;;		 -> f_unlink@dj(40), f_getfree@obj(14), f_stat@dj(40), f_chdir@dj(40), 
  9392 ;;		 -> f_open@dj(40), file(546), Fil(546), 
  9393 ;;  clst            4   25[BANK0 ] unsigned long 
  9394 ;; Auto vars:     Size  Location     Type
  9395 ;;  val             4   39[BANK0 ] unsigned long 
  9396 ;;  fs              2   47[BANK0 ] PTR struct .
  9397 ;;		 -> drive(563), NULL(0), FatFs(563), 
  9398 ;;  bc              2   45[BANK0 ] unsigned int 
  9399 ;;  wc              2   43[BANK0 ] unsigned int 
  9400 ;; Return value:  Size  Location     Type
  9401 ;;                  4   23[BANK0 ] unsigned long 
  9402 ;; Registers used:
  9403 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  9404 ;; Tracked objects:
  9405 ;;		On entry : 0/0
  9406 ;;		On exit  : 0/0
  9407 ;;		Unchanged: 0/0
  9408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9409 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9410 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9411 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9412 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9413 ;;Total ram usage:       26 bytes
  9414 ;; Hardware stack levels used: 1
  9415 ;; Hardware stack levels required when called: 7
  9416 ;; This function calls:
  9417 ;;		_ld_dword
  9418 ;;		_ld_word
  9419 ;;		_move_window
  9420 ;; This function is called by:
  9421 ;;		_remove_chain
  9422 ;;		_create_chain
  9423 ;;		_dir_sdi
  9424 ;;		_dir_next
  9425 ;;		_f_open
  9426 ;;		_f_read
  9427 ;;		_f_lseek
  9428 ;;		_f_getfree
  9429 ;;		_f_truncate
  9430 ;; This function uses a non-reentrant model
  9431 ;;
  9432                           
  9433                           	psect	text20
  9434   00B36E                     __ptext20:
  9435                           	callstack 0
  9436   00B36E                     _get_fat:
  9437                           	callstack 21
  9438   00B36E                     
  9439                           ;mcc_generated_files/fatfs/ff.c: 1142:  FFOBJID* obj,;mcc_generated_files/fatfs/ff.c: 11
      +                          43:  DWORD clst;mcc_generated_files/fatfs/ff.c: 1145: {;mcc_generated_files/fatfs/ff.c: 
      +                          1146:  UINT wc, bc;;mcc_generated_files/fatfs/ff.c: 1147:  DWORD val;;mcc_generated_file
      +                          s/fatfs/ff.c: 1148:  FATFS *fs = obj->fs;
  9440   00B36E  C077  FFD9         	movff	get_fat@obj,fsr2l
  9441   00B372  C078  FFDA         	movff	get_fat@obj+1,fsr2h
  9442   00B376  CFDE F08F          	movff	postinc2,get_fat@fs
  9443   00B37A  CFDD F090          	movff	postdec2,get_fat@fs+1
  9444   00B37E                     
  9445                           ;mcc_generated_files/fatfs/ff.c: 1151:  if (clst < 2 || clst >= fs->n_fatent) {
  9446   00B37E  0100               	movlb	0	; () banked
  9447   00B380  517C               	movf	(get_fat@clst+3)& (0+255),w,b
  9448   00B382  117B               	iorwf	(get_fat@clst+2)& (0+255),w,b
  9449   00B384  117A               	iorwf	(get_fat@clst+1)& (0+255),w,b
  9450   00B386  E109               	bnz	u7850
  9451   00B388  0E02               	movlw	2
  9452   00B38A  5D79               	subwf	get_fat@clst& (0+255),w,b
  9453   00B38C  A0D8               	btfss	status,0,c
  9454   00B38E  EFCB  F059         	goto	u7851
  9455   00B392  EFCD  F059         	goto	u7850
  9456   00B396                     u7851:
  9457   00B396  EFE2  F059         	goto	l6331
  9458   00B39A                     u7850:
  9459   00B39A                     
  9460                           ; BSR set to: 0
  9461   00B39A  EE20 F017          	lfsr	2,23
  9462   00B39E  518F               	movf	get_fat@fs& (0+255),w,b
  9463   00B3A0  26D9               	addwf	fsr2l,f,c
  9464   00B3A2  5190               	movf	(get_fat@fs+1)& (0+255),w,b
  9465   00B3A4  22DA               	addwfc	fsr2h,f,c
  9466   00B3A6  50DE               	movf	postinc2,w,c
  9467   00B3A8  5D79               	subwf	get_fat@clst& (0+255),w,b
  9468   00B3AA  50DE               	movf	postinc2,w,c
  9469   00B3AC  597A               	subwfb	(get_fat@clst+1)& (0+255),w,b
  9470   00B3AE  50DE               	movf	postinc2,w,c
  9471   00B3B0  597B               	subwfb	(get_fat@clst+2)& (0+255),w,b
  9472   00B3B2  50DE               	movf	postinc2,w,c
  9473   00B3B4  597C               	subwfb	(get_fat@clst+3)& (0+255),w,b
  9474   00B3B6  A0D8               	btfss	status,0,c
  9475   00B3B8  EFE0  F059         	goto	u7861
  9476   00B3BC  EFE2  F059         	goto	u7860
  9477   00B3C0                     u7861:
  9478   00B3C0  EFEC  F059         	goto	l597
  9479   00B3C4                     u7860:
  9480   00B3C4                     l6331:
  9481                           
  9482                           ; BSR set to: 0
  9483                           ;mcc_generated_files/fatfs/ff.c: 1152:   val = 1;
  9484   00B3C4  0E01               	movlw	1
  9485   00B3C6  6F87               	movwf	get_fat@val& (0+255),b
  9486   00B3C8  0E00               	movlw	0
  9487   00B3CA  6F88               	movwf	(get_fat@val+1)& (0+255),b
  9488   00B3CC  0E00               	movlw	0
  9489   00B3CE  6F89               	movwf	(get_fat@val+2)& (0+255),b
  9490   00B3D0  0E00               	movlw	0
  9491   00B3D2  6F8A               	movwf	(get_fat@val+3)& (0+255),b
  9492                           
  9493                           ;mcc_generated_files/fatfs/ff.c: 1154:  } else {
  9494   00B3D4  EFAE  F05B         	goto	l600
  9495   00B3D8                     l597:
  9496                           
  9497                           ; BSR set to: 0
  9498                           ;mcc_generated_files/fatfs/ff.c: 1155:   val = 0xFFFFFFFF;
  9499   00B3D8  6987               	setf	get_fat@val& (0+255),b
  9500   00B3DA  6988               	setf	(get_fat@val+1)& (0+255),b
  9501   00B3DC  6989               	setf	(get_fat@val+2)& (0+255),b
  9502   00B3DE  698A               	setf	(get_fat@val+3)& (0+255),b
  9503                           
  9504                           ;mcc_generated_files/fatfs/ff.c: 1157:   switch (fs->fs_type) {
  9505   00B3E0  EF91  F05B         	goto	l6371
  9506   00B3E4                     l602:
  9507                           
  9508                           ; BSR set to: 0
  9509                           ;mcc_generated_files/fatfs/ff.c: 1159:    bc = (UINT)clst; bc += bc / 2;
  9510   00B3E4  C079  F08D         	movff	get_fat@clst,get_fat@bc
  9511   00B3E8  C07A  F08E         	movff	get_fat@clst+1,get_fat@bc+1
  9512   00B3EC                     
  9513                           ; BSR set to: 0
  9514   00B3EC  90D8               	bcf	status,0,c
  9515   00B3EE  318E               	rrcf	(get_fat@bc+1)& (0+255),w,b
  9516   00B3F0  6F7E               	movwf	(??_get_fat+1)& (0+255),b
  9517   00B3F2  318D               	rrcf	get_fat@bc& (0+255),w,b
  9518   00B3F4  6F7D               	movwf	??_get_fat& (0+255),b
  9519   00B3F6  517D               	movf	??_get_fat& (0+255),w,b
  9520   00B3F8  278D               	addwf	get_fat@bc& (0+255),f,b
  9521   00B3FA  517E               	movf	(??_get_fat+1)& (0+255),w,b
  9522   00B3FC  238E               	addwfc	(get_fat@bc+1)& (0+255),f,b
  9523   00B3FE                     
  9524                           ; BSR set to: 0
  9525                           ;mcc_generated_files/fatfs/ff.c: 1160:    if (move_window(fs, fs->fatbase + (bc / ((UINT
      +                          )512))) != FR_OK) break;
  9526   00B3FE  C08F  F070         	movff	get_fat@fs,move_window@fs
  9527   00B402  C090  F071         	movff	get_fat@fs+1,move_window@fs+1
  9528   00B406  EE20 F023          	lfsr	2,35
  9529   00B40A  518F               	movf	get_fat@fs& (0+255),w,b
  9530   00B40C  26D9               	addwf	fsr2l,f,c
  9531   00B40E  5190               	movf	(get_fat@fs+1)& (0+255),w,b
  9532   00B410  22DA               	addwfc	fsr2h,f,c
  9533   00B412  CFDE F07D          	movff	postinc2,??_get_fat
  9534   00B416  CFDE F07E          	movff	postinc2,??_get_fat+1
  9535   00B41A  CFDE F07F          	movff	postinc2,??_get_fat+2
  9536   00B41E  CFDE F080          	movff	postinc2,??_get_fat+3
  9537   00B422  C08D  F081         	movff	get_fat@bc,??_get_fat+4
  9538   00B426  C08E  F082         	movff	get_fat@bc+1,??_get_fat+5
  9539   00B42A  0E09               	movlw	9
  9540   00B42C  6F83               	movwf	(??_get_fat+6)& (0+255),b
  9541   00B42E                     u7875:
  9542   00B42E  90D8               	bcf	status,0,c
  9543   00B430  3382               	rrcf	(??_get_fat+5)& (0+255),f,b
  9544   00B432  3381               	rrcf	(??_get_fat+4)& (0+255),f,b
  9545   00B434  2F83               	decfsz	(??_get_fat+6)& (0+255),f,b
  9546   00B436  EF17  F05A         	goto	u7875
  9547   00B43A  5181               	movf	(??_get_fat+4)& (0+255),w,b
  9548   00B43C  257D               	addwf	??_get_fat& (0+255),w,b
  9549   00B43E  6F72               	movwf	move_window@sector& (0+255),b
  9550   00B440  5182               	movf	(??_get_fat+5)& (0+255),w,b
  9551   00B442  217E               	addwfc	(??_get_fat+1)& (0+255),w,b
  9552   00B444  6F73               	movwf	(move_window@sector+1)& (0+255),b
  9553   00B446  0E00               	movlw	0
  9554   00B448  217F               	addwfc	(??_get_fat+2)& (0+255),w,b
  9555   00B44A  6F74               	movwf	(move_window@sector+2)& (0+255),b
  9556   00B44C  0E00               	movlw	0
  9557   00B44E  2180               	addwfc	(??_get_fat+3)& (0+255),w,b
  9558   00B450  6F75               	movwf	(move_window@sector+3)& (0+255),b
  9559   00B452  ECBF  F04A         	call	_move_window	;wreg free
  9560   00B456  0900               	iorlw	0
  9561   00B458  B4D8               	btfsc	status,2,c
  9562   00B45A  EF31  F05A         	goto	u7881
  9563   00B45E  EF33  F05A         	goto	u7880
  9564   00B462                     u7881:
  9565   00B462  EF35  F05A         	goto	l6339
  9566   00B466                     u7880:
  9567   00B466  EFAE  F05B         	goto	l600
  9568   00B46A                     l6339:
  9569                           
  9570                           ;mcc_generated_files/fatfs/ff.c: 1161:    wc = fs->win[bc++ % ((UINT)512)];
  9571   00B46A  0EFF               	movlw	255
  9572   00B46C  0100               	movlb	0	; () banked
  9573   00B46E  158D               	andwf	get_fat@bc& (0+255),w,b
  9574   00B470  6F7D               	movwf	??_get_fat& (0+255),b
  9575   00B472  0E01               	movlw	1
  9576   00B474  158E               	andwf	(get_fat@bc+1)& (0+255),w,b
  9577   00B476  6F7E               	movwf	(??_get_fat+1)& (0+255),b
  9578   00B478  517D               	movf	??_get_fat& (0+255),w,b
  9579   00B47A  258F               	addwf	get_fat@fs& (0+255),w,b
  9580   00B47C  6F7F               	movwf	(??_get_fat+2)& (0+255),b
  9581   00B47E  517E               	movf	(??_get_fat+1)& (0+255),w,b
  9582   00B480  2190               	addwfc	(get_fat@fs+1)& (0+255),w,b
  9583   00B482  6F80               	movwf	(??_get_fat+3)& (0+255),b
  9584   00B484  0E33               	movlw	51
  9585   00B486  257F               	addwf	(??_get_fat+2)& (0+255),w,b
  9586   00B488  6ED9               	movwf	fsr2l,c
  9587   00B48A  0E00               	movlw	0
  9588   00B48C  2180               	addwfc	(??_get_fat+3)& (0+255),w,b
  9589   00B48E  6EDA               	movwf	fsr2h,c
  9590   00B490  50DF               	movf	indf2,w,c
  9591   00B492  6F81               	movwf	(??_get_fat+4)& (0+255),b
  9592   00B494  5181               	movf	(??_get_fat+4)& (0+255),w,b
  9593   00B496  6F8B               	movwf	get_fat@wc& (0+255),b
  9594   00B498  6B8C               	clrf	(get_fat@wc+1)& (0+255),b
  9595   00B49A                     
  9596                           ; BSR set to: 0
  9597   00B49A  4B8D               	infsnz	get_fat@bc& (0+255),f,b
  9598   00B49C  2B8E               	incf	(get_fat@bc+1)& (0+255),f,b
  9599   00B49E                     
  9600                           ; BSR set to: 0
  9601                           ;mcc_generated_files/fatfs/ff.c: 1162:    if (move_window(fs, fs->fatbase + (bc / ((UINT
      +                          )512))) != FR_OK) break;
  9602   00B49E  C08F  F070         	movff	get_fat@fs,move_window@fs
  9603   00B4A2  C090  F071         	movff	get_fat@fs+1,move_window@fs+1
  9604   00B4A6  EE20 F023          	lfsr	2,35
  9605   00B4AA  518F               	movf	get_fat@fs& (0+255),w,b
  9606   00B4AC  26D9               	addwf	fsr2l,f,c
  9607   00B4AE  5190               	movf	(get_fat@fs+1)& (0+255),w,b
  9608   00B4B0  22DA               	addwfc	fsr2h,f,c
  9609   00B4B2  CFDE F07D          	movff	postinc2,??_get_fat
  9610   00B4B6  CFDE F07E          	movff	postinc2,??_get_fat+1
  9611   00B4BA  CFDE F07F          	movff	postinc2,??_get_fat+2
  9612   00B4BE  CFDE F080          	movff	postinc2,??_get_fat+3
  9613   00B4C2  C08D  F081         	movff	get_fat@bc,??_get_fat+4
  9614   00B4C6  C08E  F082         	movff	get_fat@bc+1,??_get_fat+5
  9615   00B4CA  0E09               	movlw	9
  9616   00B4CC  6F83               	movwf	(??_get_fat+6)& (0+255),b
  9617   00B4CE                     u7895:
  9618   00B4CE  90D8               	bcf	status,0,c
  9619   00B4D0  3382               	rrcf	(??_get_fat+5)& (0+255),f,b
  9620   00B4D2  3381               	rrcf	(??_get_fat+4)& (0+255),f,b
  9621   00B4D4  2F83               	decfsz	(??_get_fat+6)& (0+255),f,b
  9622   00B4D6  EF67  F05A         	goto	u7895
  9623   00B4DA  5181               	movf	(??_get_fat+4)& (0+255),w,b
  9624   00B4DC  257D               	addwf	??_get_fat& (0+255),w,b
  9625   00B4DE  6F72               	movwf	move_window@sector& (0+255),b
  9626   00B4E0  5182               	movf	(??_get_fat+5)& (0+255),w,b
  9627   00B4E2  217E               	addwfc	(??_get_fat+1)& (0+255),w,b
  9628   00B4E4  6F73               	movwf	(move_window@sector+1)& (0+255),b
  9629   00B4E6  0E00               	movlw	0
  9630   00B4E8  217F               	addwfc	(??_get_fat+2)& (0+255),w,b
  9631   00B4EA  6F74               	movwf	(move_window@sector+2)& (0+255),b
  9632   00B4EC  0E00               	movlw	0
  9633   00B4EE  2180               	addwfc	(??_get_fat+3)& (0+255),w,b
  9634   00B4F0  6F75               	movwf	(move_window@sector+3)& (0+255),b
  9635   00B4F2  ECBF  F04A         	call	_move_window	;wreg free
  9636   00B4F6  0900               	iorlw	0
  9637   00B4F8  B4D8               	btfsc	status,2,c
  9638   00B4FA  EF81  F05A         	goto	u7901
  9639   00B4FE  EF83  F05A         	goto	u7900
  9640   00B502                     u7901:
  9641   00B502  EF85  F05A         	goto	l6347
  9642   00B506                     u7900:
  9643   00B506  EFAE  F05B         	goto	l600
  9644   00B50A                     l6347:
  9645                           
  9646                           ;mcc_generated_files/fatfs/ff.c: 1163:    wc |= fs->win[bc % ((UINT)512)] << 8;
  9647   00B50A  0EFF               	movlw	255
  9648   00B50C  0100               	movlb	0	; () banked
  9649   00B50E  158D               	andwf	get_fat@bc& (0+255),w,b
  9650   00B510  6F7D               	movwf	??_get_fat& (0+255),b
  9651   00B512  0E01               	movlw	1
  9652   00B514  158E               	andwf	(get_fat@bc+1)& (0+255),w,b
  9653   00B516  6F7E               	movwf	(??_get_fat+1)& (0+255),b
  9654   00B518  517D               	movf	??_get_fat& (0+255),w,b
  9655   00B51A  258F               	addwf	get_fat@fs& (0+255),w,b
  9656   00B51C  6F7F               	movwf	(??_get_fat+2)& (0+255),b
  9657   00B51E  517E               	movf	(??_get_fat+1)& (0+255),w,b
  9658   00B520  2190               	addwfc	(get_fat@fs+1)& (0+255),w,b
  9659   00B522  6F80               	movwf	(??_get_fat+3)& (0+255),b
  9660   00B524  0E33               	movlw	51
  9661   00B526  257F               	addwf	(??_get_fat+2)& (0+255),w,b
  9662   00B528  6ED9               	movwf	fsr2l,c
  9663   00B52A  0E00               	movlw	0
  9664   00B52C  2180               	addwfc	(??_get_fat+3)& (0+255),w,b
  9665   00B52E  6EDA               	movwf	fsr2h,c
  9666   00B530  50DF               	movf	indf2,w,c
  9667   00B532  6F81               	movwf	(??_get_fat+4)& (0+255),b
  9668   00B534  5181               	movf	(??_get_fat+4)& (0+255),w,b
  9669   00B536  6F83               	movwf	(??_get_fat+6)& (0+255),b
  9670   00B538  6B82               	clrf	(??_get_fat+5)& (0+255),b
  9671   00B53A  5182               	movf	(??_get_fat+5)& (0+255),w,b
  9672   00B53C  138B               	iorwf	get_fat@wc& (0+255),f,b
  9673   00B53E  5183               	movf	(??_get_fat+6)& (0+255),w,b
  9674   00B540  138C               	iorwf	(get_fat@wc+1)& (0+255),f,b
  9675   00B542                     
  9676                           ; BSR set to: 0
  9677                           ;mcc_generated_files/fatfs/ff.c: 1164:    val = (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
  9678   00B542  B179               	btfsc	get_fat@clst& (0+255),0,b
  9679   00B544  EFA6  F05A         	goto	u7911
  9680   00B548  EFA8  F05A         	goto	u7910
  9681   00B54C                     u7911:
  9682   00B54C  EFB0  F05A         	goto	l6353
  9683   00B550                     u7910:
  9684   00B550                     
  9685                           ; BSR set to: 0
  9686   00B550  0EFF               	movlw	255
  9687   00B552  158B               	andwf	get_fat@wc& (0+255),w,b
  9688   00B554  6F85               	movwf	_get_fat$1759& (0+255),b
  9689   00B556  0E0F               	movlw	15
  9690   00B558  158C               	andwf	(get_fat@wc+1)& (0+255),w,b
  9691   00B55A  6F86               	movwf	(_get_fat$1759+1)& (0+255),b
  9692   00B55C  EFC0  F05A         	goto	l6355
  9693   00B560                     l6353:
  9694                           
  9695                           ; BSR set to: 0
  9696   00B560  C08B  F07D         	movff	get_fat@wc,??_get_fat
  9697   00B564  C08C  F07E         	movff	get_fat@wc+1,??_get_fat+1
  9698   00B568  0E04               	movlw	4
  9699   00B56A  6F7F               	movwf	(??_get_fat+2)& (0+255),b
  9700   00B56C                     u7925:
  9701   00B56C  90D8               	bcf	status,0,c
  9702   00B56E  337E               	rrcf	(??_get_fat+1)& (0+255),f,b
  9703   00B570  337D               	rrcf	??_get_fat& (0+255),f,b
  9704   00B572  2F7F               	decfsz	(??_get_fat+2)& (0+255),f,b
  9705   00B574  EFB6  F05A         	goto	u7925
  9706   00B578  C07D  F085         	movff	??_get_fat,_get_fat$1759
  9707   00B57C  C07E  F086         	movff	??_get_fat+1,_get_fat$1759+1
  9708   00B580                     l6355:
  9709                           
  9710                           ; BSR set to: 0
  9711   00B580  C085  F087         	movff	_get_fat$1759,get_fat@val
  9712   00B584  C086  F088         	movff	_get_fat$1759+1,get_fat@val+1
  9713   00B588  6B89               	clrf	(get_fat@val+2)& (0+255),b
  9714   00B58A  6B8A               	clrf	(get_fat@val+3)& (0+255),b
  9715                           
  9716                           ;mcc_generated_files/fatfs/ff.c: 1165:    break;
  9717   00B58C  EFAE  F05B         	goto	l600
  9718   00B590                     l6357:
  9719                           
  9720                           ; BSR set to: 0
  9721                           ;mcc_generated_files/fatfs/ff.c: 1168:    if (move_window(fs, fs->fatbase + (clst / (((U
      +                          INT)512) / 2))) != FR_OK) break;
  9722   00B590  C08F  F070         	movff	get_fat@fs,move_window@fs
  9723   00B594  C090  F071         	movff	get_fat@fs+1,move_window@fs+1
  9724   00B598  EE20 F023          	lfsr	2,35
  9725   00B59C  518F               	movf	get_fat@fs& (0+255),w,b
  9726   00B59E  26D9               	addwf	fsr2l,f,c
  9727   00B5A0  5190               	movf	(get_fat@fs+1)& (0+255),w,b
  9728   00B5A2  22DA               	addwfc	fsr2h,f,c
  9729   00B5A4  CFDE F07D          	movff	postinc2,??_get_fat
  9730   00B5A8  CFDE F07E          	movff	postinc2,??_get_fat+1
  9731   00B5AC  CFDE F07F          	movff	postinc2,??_get_fat+2
  9732   00B5B0  CFDE F080          	movff	postinc2,??_get_fat+3
  9733   00B5B4  C079  F081         	movff	get_fat@clst,??_get_fat+4
  9734   00B5B8  C07A  F082         	movff	get_fat@clst+1,??_get_fat+5
  9735   00B5BC  C07B  F083         	movff	get_fat@clst+2,??_get_fat+6
  9736   00B5C0  C07C  F084         	movff	get_fat@clst+3,??_get_fat+7
  9737   00B5C4  C082  F081         	movff	??_get_fat+5,??_get_fat+4
  9738   00B5C8  C083  F082         	movff	??_get_fat+6,??_get_fat+5
  9739   00B5CC  C084  F083         	movff	??_get_fat+7,??_get_fat+6
  9740   00B5D0  6B84               	clrf	(??_get_fat+7)& (0+255),b
  9741   00B5D2  517D               	movf	??_get_fat& (0+255),w,b
  9742   00B5D4  2581               	addwf	(??_get_fat+4)& (0+255),w,b
  9743   00B5D6  6F72               	movwf	move_window@sector& (0+255),b
  9744   00B5D8  517E               	movf	(??_get_fat+1)& (0+255),w,b
  9745   00B5DA  2182               	addwfc	(??_get_fat+5)& (0+255),w,b
  9746   00B5DC  6F73               	movwf	(move_window@sector+1)& (0+255),b
  9747   00B5DE  517F               	movf	(??_get_fat+2)& (0+255),w,b
  9748   00B5E0  2183               	addwfc	(??_get_fat+6)& (0+255),w,b
  9749   00B5E2  6F74               	movwf	(move_window@sector+2)& (0+255),b
  9750   00B5E4  5180               	movf	(??_get_fat+3)& (0+255),w,b
  9751   00B5E6  2184               	addwfc	(??_get_fat+7)& (0+255),w,b
  9752   00B5E8  6F75               	movwf	(move_window@sector+3)& (0+255),b
  9753   00B5EA  ECBF  F04A         	call	_move_window	;wreg free
  9754   00B5EE  0900               	iorlw	0
  9755   00B5F0  B4D8               	btfsc	status,2,c
  9756   00B5F2  EFFD  F05A         	goto	u7931
  9757   00B5F6  EFFF  F05A         	goto	u7930
  9758   00B5FA                     u7931:
  9759   00B5FA  EF01  F05B         	goto	l6361
  9760   00B5FE                     u7930:
  9761   00B5FE  EFAE  F05B         	goto	l600
  9762   00B602                     l6361:
  9763                           
  9764                           ;mcc_generated_files/fatfs/ff.c: 1169:    val = ld_word(fs->win + clst * 2 % ((UINT)512)
      +                          );
  9765   00B602  C079  F07D         	movff	get_fat@clst,??_get_fat
  9766   00B606  C07A  F07E         	movff	get_fat@clst+1,??_get_fat+1
  9767   00B60A  90D8               	bcf	status,0,c
  9768   00B60C  0100               	movlb	0	; () banked
  9769   00B60E  377D               	rlcf	??_get_fat& (0+255),f,b
  9770   00B610  377E               	rlcf	(??_get_fat+1)& (0+255),f,b
  9771   00B612  0EFF               	movlw	255
  9772   00B614  157D               	andwf	??_get_fat& (0+255),w,b
  9773   00B616  6F7F               	movwf	(??_get_fat+2)& (0+255),b
  9774   00B618  0E01               	movlw	1
  9775   00B61A  157E               	andwf	(??_get_fat+1)& (0+255),w,b
  9776   00B61C  6F80               	movwf	(??_get_fat+3)& (0+255),b
  9777   00B61E  517F               	movf	(??_get_fat+2)& (0+255),w,b
  9778   00B620  258F               	addwf	get_fat@fs& (0+255),w,b
  9779   00B622  6F81               	movwf	(??_get_fat+4)& (0+255),b
  9780   00B624  5180               	movf	(??_get_fat+3)& (0+255),w,b
  9781   00B626  2190               	addwfc	(get_fat@fs+1)& (0+255),w,b
  9782   00B628  6F82               	movwf	(??_get_fat+5)& (0+255),b
  9783   00B62A  0E33               	movlw	51
  9784   00B62C  2581               	addwf	(??_get_fat+4)& (0+255),w,b
  9785   00B62E  6E01               	movwf	ld_word@ptr^0,c
  9786   00B630  0E00               	movlw	0
  9787   00B632  2182               	addwfc	(??_get_fat+5)& (0+255),w,b
  9788   00B634  6E02               	movwf	(ld_word@ptr+1)^0,c
  9789   00B636  ECE4  F045         	call	_ld_word	;wreg free
  9790   00B63A  C001  F087         	movff	?_ld_word,get_fat@val
  9791   00B63E  C002  F088         	movff	?_ld_word+1,get_fat@val+1
  9792   00B642  0100               	movlb	0	; () banked
  9793   00B644  6B89               	clrf	(get_fat@val+2)& (0+255),b
  9794   00B646  6B8A               	clrf	(get_fat@val+3)& (0+255),b
  9795                           
  9796                           ;mcc_generated_files/fatfs/ff.c: 1170:    break;
  9797   00B648  EFAE  F05B         	goto	l600
  9798   00B64C                     l6363:
  9799                           
  9800                           ; BSR set to: 0
  9801                           ;mcc_generated_files/fatfs/ff.c: 1173:    if (move_window(fs, fs->fatbase + (clst / (((U
      +                          INT)512) / 4))) != FR_OK) break;
  9802   00B64C  C08F  F070         	movff	get_fat@fs,move_window@fs
  9803   00B650  C090  F071         	movff	get_fat@fs+1,move_window@fs+1
  9804   00B654  EE20 F023          	lfsr	2,35
  9805   00B658  518F               	movf	get_fat@fs& (0+255),w,b
  9806   00B65A  26D9               	addwf	fsr2l,f,c
  9807   00B65C  5190               	movf	(get_fat@fs+1)& (0+255),w,b
  9808   00B65E  22DA               	addwfc	fsr2h,f,c
  9809   00B660  CFDE F07D          	movff	postinc2,??_get_fat
  9810   00B664  CFDE F07E          	movff	postinc2,??_get_fat+1
  9811   00B668  CFDE F07F          	movff	postinc2,??_get_fat+2
  9812   00B66C  CFDE F080          	movff	postinc2,??_get_fat+3
  9813   00B670  C079  F081         	movff	get_fat@clst,??_get_fat+4
  9814   00B674  C07A  F082         	movff	get_fat@clst+1,??_get_fat+5
  9815   00B678  C07B  F083         	movff	get_fat@clst+2,??_get_fat+6
  9816   00B67C  C07C  F084         	movff	get_fat@clst+3,??_get_fat+7
  9817   00B680  0E08               	movlw	8
  9818   00B682  EF48  F05B         	goto	u7940
  9819   00B686                     u7945:
  9820   00B686  90D8               	bcf	status,0,c
  9821   00B688  3384               	rrcf	(??_get_fat+7)& (0+255),f,b
  9822   00B68A  3383               	rrcf	(??_get_fat+6)& (0+255),f,b
  9823   00B68C  3382               	rrcf	(??_get_fat+5)& (0+255),f,b
  9824   00B68E  3381               	rrcf	(??_get_fat+4)& (0+255),f,b
  9825   00B690                     u7940:
  9826   00B690  2EE8               	decfsz	wreg,f,c
  9827   00B692  EF43  F05B         	goto	u7945
  9828   00B696  517D               	movf	??_get_fat& (0+255),w,b
  9829   00B698  2581               	addwf	(??_get_fat+4)& (0+255),w,b
  9830   00B69A  6F72               	movwf	move_window@sector& (0+255),b
  9831   00B69C  517E               	movf	(??_get_fat+1)& (0+255),w,b
  9832   00B69E  2182               	addwfc	(??_get_fat+5)& (0+255),w,b
  9833   00B6A0  6F73               	movwf	(move_window@sector+1)& (0+255),b
  9834   00B6A2  517F               	movf	(??_get_fat+2)& (0+255),w,b
  9835   00B6A4  2183               	addwfc	(??_get_fat+6)& (0+255),w,b
  9836   00B6A6  6F74               	movwf	(move_window@sector+2)& (0+255),b
  9837   00B6A8  5180               	movf	(??_get_fat+3)& (0+255),w,b
  9838   00B6AA  2184               	addwfc	(??_get_fat+7)& (0+255),w,b
  9839   00B6AC  6F75               	movwf	(move_window@sector+3)& (0+255),b
  9840   00B6AE  ECBF  F04A         	call	_move_window	;wreg free
  9841   00B6B2  0900               	iorlw	0
  9842   00B6B4  B4D8               	btfsc	status,2,c
  9843   00B6B6  EF5F  F05B         	goto	u7951
  9844   00B6BA  EF61  F05B         	goto	u7950
  9845   00B6BE                     u7951:
  9846   00B6BE  EF63  F05B         	goto	l6367
  9847   00B6C2                     u7950:
  9848   00B6C2  EFAE  F05B         	goto	l600
  9849   00B6C6                     l6367:
  9850                           
  9851                           ;mcc_generated_files/fatfs/ff.c: 1174:    val = ld_dword(fs->win + clst * 4 % ((UINT)512
      +                          )) & 0x0FFFFFFF;
  9852   00B6C6  C079  F07D         	movff	get_fat@clst,??_get_fat
  9853   00B6CA  C07A  F07E         	movff	get_fat@clst+1,??_get_fat+1
  9854   00B6CE  0100               	movlb	0	; () banked
  9855   00B6D0  90D8               	bcf	status,0,c
  9856   00B6D2  377D               	rlcf	??_get_fat& (0+255),f,b
  9857   00B6D4  377E               	rlcf	(??_get_fat+1)& (0+255),f,b
  9858   00B6D6  90D8               	bcf	status,0,c
  9859   00B6D8  377D               	rlcf	??_get_fat& (0+255),f,b
  9860   00B6DA  377E               	rlcf	(??_get_fat+1)& (0+255),f,b
  9861   00B6DC  0EFF               	movlw	255
  9862   00B6DE  157D               	andwf	??_get_fat& (0+255),w,b
  9863   00B6E0  6F7F               	movwf	(??_get_fat+2)& (0+255),b
  9864   00B6E2  0E01               	movlw	1
  9865   00B6E4  157E               	andwf	(??_get_fat+1)& (0+255),w,b
  9866   00B6E6  6F80               	movwf	(??_get_fat+3)& (0+255),b
  9867   00B6E8  517F               	movf	(??_get_fat+2)& (0+255),w,b
  9868   00B6EA  258F               	addwf	get_fat@fs& (0+255),w,b
  9869   00B6EC  6F81               	movwf	(??_get_fat+4)& (0+255),b
  9870   00B6EE  5180               	movf	(??_get_fat+3)& (0+255),w,b
  9871   00B6F0  2190               	addwfc	(get_fat@fs+1)& (0+255),w,b
  9872   00B6F2  6F82               	movwf	(??_get_fat+5)& (0+255),b
  9873   00B6F4  0E33               	movlw	51
  9874   00B6F6  2581               	addwf	(??_get_fat+4)& (0+255),w,b
  9875   00B6F8  6E01               	movwf	ld_dword@ptr^0,c
  9876   00B6FA  0E00               	movlw	0
  9877   00B6FC  2182               	addwfc	(??_get_fat+5)& (0+255),w,b
  9878   00B6FE  6E02               	movwf	(ld_dword@ptr+1)^0,c
  9879   00B700  EC63  F04A         	call	_ld_dword	;wreg free
  9880   00B704  0EFF               	movlw	255
  9881   00B706  1401               	andwf	?_ld_dword^0,w,c
  9882   00B708  0100               	movlb	0	; () banked
  9883   00B70A  6F87               	movwf	get_fat@val& (0+255),b
  9884   00B70C  0EFF               	movlw	255
  9885   00B70E  1402               	andwf	(?_ld_dword+1)^0,w,c
  9886   00B710  6F88               	movwf	(get_fat@val+1)& (0+255),b
  9887   00B712  0EFF               	movlw	255
  9888   00B714  1403               	andwf	(?_ld_dword+2)^0,w,c
  9889   00B716  6F89               	movwf	(get_fat@val+2)& (0+255),b
  9890   00B718  0E0F               	movlw	15
  9891   00B71A  1404               	andwf	(?_ld_dword+3)^0,w,c
  9892   00B71C  6F8A               	movwf	(get_fat@val+3)& (0+255),b
  9893                           
  9894                           ;mcc_generated_files/fatfs/ff.c: 1175:    break;
  9895   00B71E  EFAE  F05B         	goto	l600
  9896   00B722                     l6371:
  9897                           
  9898                           ; BSR set to: 0
  9899   00B722  C08F  FFD9         	movff	get_fat@fs,fsr2l
  9900   00B726  C090  FFDA         	movff	get_fat@fs+1,fsr2h
  9901   00B72A  50DF               	movf	indf2,w,c
  9902   00B72C  6F7D               	movwf	??_get_fat& (0+255),b
  9903   00B72E  6B7E               	clrf	(??_get_fat+1)& (0+255),b
  9904                           
  9905                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9906                           ; Switch size 1, requested type "simple"
  9907                           ; Number of cases is 1, Range of values is 0 to 0
  9908                           ; switch strategies available:
  9909                           ; Name         Instructions Cycles
  9910                           ; simple_byte            4     3 (average)
  9911                           ;	Chosen strategy is simple_byte
  9912   00B730  517E               	movf	(??_get_fat+1)& (0+255),w,b
  9913   00B732  0A00               	xorlw	0	; case 0
  9914   00B734  B4D8               	btfsc	status,2,c
  9915   00B736  EF9F  F05B         	goto	l9287
  9916   00B73A  EFE2  F059         	goto	l6331
  9917   00B73E                     l9287:
  9918                           
  9919                           ; BSR set to: 0
  9920                           ; Switch size 1, requested type "simple"
  9921                           ; Number of cases is 3, Range of values is 1 to 3
  9922                           ; switch strategies available:
  9923                           ; Name         Instructions Cycles
  9924                           ; simple_byte           10     6 (average)
  9925                           ;	Chosen strategy is simple_byte
  9926   00B73E  517D               	movf	??_get_fat& (0+255),w,b
  9927   00B740  0A01               	xorlw	1	; case 1
  9928   00B742  B4D8               	btfsc	status,2,c
  9929   00B744  EFF2  F059         	goto	l602
  9930   00B748  0A03               	xorlw	3	; case 2
  9931   00B74A  B4D8               	btfsc	status,2,c
  9932   00B74C  EFC8  F05A         	goto	l6357
  9933   00B750  0A01               	xorlw	1	; case 3
  9934   00B752  B4D8               	btfsc	status,2,c
  9935   00B754  EF26  F05B         	goto	l6363
  9936   00B758  EFE2  F059         	goto	l6331
  9937   00B75C                     l600:
  9938                           
  9939                           ;mcc_generated_files/fatfs/ff.c: 1207:  return val;
  9940   00B75C  C087  F077         	movff	get_fat@val,?_get_fat
  9941   00B760  C088  F078         	movff	get_fat@val+1,?_get_fat+1
  9942   00B764  C089  F079         	movff	get_fat@val+2,?_get_fat+2
  9943   00B768  C08A  F07A         	movff	get_fat@val+3,?_get_fat+3
  9944   00B76C  0012               	return		;funcret
  9945   00B76E                     __end_of_get_fat:
  9946                           	callstack 0
  9947                           
  9948 ;; *************** function _f_mount *****************
  9949 ;; Defined at:
  9950 ;;		line 3472 in file "mcc_generated_files/fatfs/ff.c"
  9951 ;; Parameters:    Size  Location     Type
  9952 ;;  fs              2  101[BANK0 ] PTR struct .
  9953 ;;		 -> drive(563), NULL(0), FatFs(563), 
  9954 ;;  path            2  103[BANK0 ] PTR const unsigned char 
  9955 ;;		 -> STR_6(3), STR_5(10), STR_4(3), STR_2(10), 
  9956 ;;		 -> STR_1(1), 
  9957 ;;  opt             1  105[BANK0 ] unsigned char 
  9958 ;; Auto vars:     Size  Location     Type
  9959 ;;  vol             2  111[BANK0 ] int 
  9960 ;;  cfs             2  109[BANK0 ] PTR struct .
  9961 ;;		 -> drive(563), NULL(0), FatFs(563), 
  9962 ;;  rp              2  107[BANK0 ] PTR const unsigned char 
  9963 ;;		 -> STR_6(3), STR_5(10), STR_4(3), STR_2(10), 
  9964 ;;		 -> STR_1(1), 
  9965 ;;  res             1  106[BANK0 ] enum E68
  9966 ;; Return value:  Size  Location     Type
  9967 ;;                  1    wreg      enum E6428
  9968 ;; Registers used:
  9969 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  9970 ;; Tracked objects:
  9971 ;;		On entry : 0/0
  9972 ;;		On exit  : 0/0
  9973 ;;		Unchanged: 0/0
  9974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9975 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9976 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9978 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9979 ;;Total ram usage:       12 bytes
  9980 ;; Hardware stack levels used: 1
  9981 ;; Hardware stack levels required when called: 9
  9982 ;; This function calls:
  9983 ;;		_find_volume
  9984 ;;		_get_ldnumber
  9985 ;; This function is called by:
  9986 ;;		_main
  9987 ;;		_FatFsDemo_Tasks
  9988 ;; This function uses a non-reentrant model
  9989 ;;
  9990                           
  9991                           	psect	text21
  9992   009716                     __ptext21:
  9993                           	callstack 0
  9994   009716                     _f_mount:
  9995                           	callstack 21
  9996   009716                     
  9997                           ;mcc_generated_files/fatfs/ff.c: 3473:  FATFS* fs,;mcc_generated_files/fatfs/ff.c: 3474:
      +                            const TCHAR* path,;mcc_generated_files/fatfs/ff.c: 3475:  BYTE opt;mcc_generated_files
      +                          /fatfs/ff.c: 3477: {;mcc_generated_files/fatfs/ff.c: 3478:  FATFS *cfs;;mcc_generated_fi
      +                          les/fatfs/ff.c: 3479:  int vol;;mcc_generated_files/fatfs/ff.c: 3480:  FRESULT res;;mcc_
      +                          generated_files/fatfs/ff.c: 3481:  const TCHAR *rp = path;
  9998   009716  C0C7  F0CB         	movff	f_mount@path,f_mount@rp
  9999   00971A  C0C8  F0CC         	movff	f_mount@path+1,f_mount@rp+1
 10000   00971E                     
 10001                           ;mcc_generated_files/fatfs/ff.c: 3485:  vol = get_ldnumber(&rp);
 10002   00971E  0ECB               	movlw	low f_mount@rp
 10003   009720  6E01               	movwf	get_ldnumber@path^0,c
 10004   009722  0E00               	movlw	high f_mount@rp
 10005   009724  6E02               	movwf	(get_ldnumber@path+1)^0,c
 10006   009726  EC1D  F04E         	call	_get_ldnumber	;wreg free
 10007   00972A  C001  F0CF         	movff	?_get_ldnumber,f_mount@vol
 10008   00972E  C002  F0D0         	movff	?_get_ldnumber+1,f_mount@vol+1
 10009   009732                     
 10010                           ;mcc_generated_files/fatfs/ff.c: 3486:  if (vol < 0) return FR_INVALID_DRIVE;
 10011   009732  0100               	movlb	0	; () banked
 10012   009734  BFD0               	btfsc	(f_mount@vol+1)& (0+255),7,b
 10013   009736  EFA1  F04B         	goto	u10770
 10014   00973A  EF9F  F04B         	goto	u10771
 10015   00973E                     u10771:
 10016   00973E  EFA4  F04B         	goto	l7975
 10017   009742                     u10770:
 10018   009742                     
 10019                           ; BSR set to: 0
 10020   009742  0E0B               	movlw	11
 10021   009744  EFF6  F04B         	goto	l977
 10022   009748                     l7975:
 10023                           
 10024                           ; BSR set to: 0
 10025                           ;mcc_generated_files/fatfs/ff.c: 3487:  cfs = FatFs[vol];
 10026   009748  90D8               	bcf	status,0,c
 10027   00974A  35CF               	rlcf	f_mount@vol& (0+255),w,b
 10028   00974C  6ED9               	movwf	fsr2l,c
 10029   00974E  35D0               	rlcf	(f_mount@vol+1)& (0+255),w,b
 10030   009750  6EDA               	movwf	fsr2h,c
 10031   009752  0EF6               	movlw	low _FatFs@ff$F1589
 10032   009754  26D9               	addwf	fsr2l,f,c
 10033   009756  0E00               	movlw	high _FatFs@ff$F1589
 10034   009758  22DA               	addwfc	fsr2h,f,c
 10035   00975A  CFDE F0CD          	movff	postinc2,f_mount@cfs
 10036   00975E  CFDD F0CE          	movff	postdec2,f_mount@cfs+1
 10037   009762                     
 10038                           ; BSR set to: 0
 10039                           ;mcc_generated_files/fatfs/ff.c: 3489:  if (cfs) {
 10040   009762  51CD               	movf	f_mount@cfs& (0+255),w,b
 10041   009764  11CE               	iorwf	(f_mount@cfs+1)& (0+255),w,b
 10042   009766  B4D8               	btfsc	status,2,c
 10043   009768  EFB8  F04B         	goto	u10781
 10044   00976C  EFBA  F04B         	goto	u10780
 10045   009770                     u10781:
 10046   009770  EFC0  F04B         	goto	l7981
 10047   009774                     u10780:
 10048   009774                     
 10049                           ; BSR set to: 0
 10050                           ;mcc_generated_files/fatfs/ff.c: 3496:   cfs->fs_type = 0;
 10051   009774  C0CD  FFD9         	movff	f_mount@cfs,fsr2l
 10052   009778  C0CE  FFDA         	movff	f_mount@cfs+1,fsr2h
 10053   00977C  0E00               	movlw	0
 10054   00977E  6EDF               	movwf	indf2,c
 10055   009780                     l7981:
 10056                           
 10057                           ; BSR set to: 0
 10058                           ;mcc_generated_files/fatfs/ff.c: 3499:  if (fs) {
 10059   009780  51C5               	movf	f_mount@fs& (0+255),w,b
 10060   009782  11C6               	iorwf	(f_mount@fs+1)& (0+255),w,b
 10061   009784  B4D8               	btfsc	status,2,c
 10062   009786  EFC7  F04B         	goto	u10791
 10063   00978A  EFC9  F04B         	goto	u10790
 10064   00978E                     u10791:
 10065   00978E  EFCF  F04B         	goto	l7985
 10066   009792                     u10790:
 10067   009792                     
 10068                           ; BSR set to: 0
 10069                           ;mcc_generated_files/fatfs/ff.c: 3500:   fs->fs_type = 0;
 10070   009792  C0C5  FFD9         	movff	f_mount@fs,fsr2l
 10071   009796  C0C6  FFDA         	movff	f_mount@fs+1,fsr2h
 10072   00979A  0E00               	movlw	0
 10073   00979C  6EDF               	movwf	indf2,c
 10074   00979E                     l7985:
 10075                           
 10076                           ; BSR set to: 0
 10077                           ;mcc_generated_files/fatfs/ff.c: 3505:  FatFs[vol] = fs;
 10078   00979E  90D8               	bcf	status,0,c
 10079   0097A0  35CF               	rlcf	f_mount@vol& (0+255),w,b
 10080   0097A2  6ED9               	movwf	fsr2l,c
 10081   0097A4  35D0               	rlcf	(f_mount@vol+1)& (0+255),w,b
 10082   0097A6  6EDA               	movwf	fsr2h,c
 10083   0097A8  0EF6               	movlw	low _FatFs@ff$F1589
 10084   0097AA  26D9               	addwf	fsr2l,f,c
 10085   0097AC  0E00               	movlw	high _FatFs@ff$F1589
 10086   0097AE  22DA               	addwfc	fsr2h,f,c
 10087   0097B0  C0C5  FFDE         	movff	f_mount@fs,postinc2
 10088   0097B4  C0C6  FFDD         	movff	f_mount@fs+1,postdec2
 10089   0097B8                     
 10090                           ; BSR set to: 0
 10091                           ;mcc_generated_files/fatfs/ff.c: 3507:  if (opt == 0) return FR_OK;
 10092   0097B8  51C9               	movf	f_mount@opt& (0+255),w,b
 10093   0097BA  A4D8               	btfss	status,2,c
 10094   0097BC  EFE2  F04B         	goto	u10801
 10095   0097C0  EFE4  F04B         	goto	u10800
 10096   0097C4                     u10801:
 10097   0097C4  EFE7  F04B         	goto	l7993
 10098   0097C8                     u10800:
 10099   0097C8                     
 10100                           ; BSR set to: 0
 10101   0097C8  0E00               	movlw	0
 10102   0097CA  EFF6  F04B         	goto	l977
 10103   0097CE                     l7993:
 10104                           
 10105                           ; BSR set to: 0
 10106                           ;mcc_generated_files/fatfs/ff.c: 3509:  res = find_volume(&path, &fs, 0);
 10107   0097CE  0EC7               	movlw	low f_mount@path
 10108   0097D0  6F7E               	movwf	find_volume@path& (0+255),b
 10109   0097D2  0E00               	movlw	high f_mount@path
 10110   0097D4  6F7F               	movwf	(find_volume@path+1)& (0+255),b
 10111   0097D6  0EC5               	movlw	low f_mount@fs
 10112   0097D8  6F80               	movwf	find_volume@rfs& (0+255),b
 10113   0097DA  0E00               	movlw	high f_mount@fs
 10114   0097DC  6F81               	movwf	(find_volume@rfs+1)& (0+255),b
 10115   0097DE  0E00               	movlw	0
 10116   0097E0  6F82               	movwf	find_volume@mode& (0+255),b
 10117   0097E2  EC1E  F079         	call	_find_volume	;wreg free
 10118   0097E6  0100               	movlb	0	; () banked
 10119   0097E8  6FCA               	movwf	f_mount@res& (0+255),b
 10120   0097EA                     
 10121                           ; BSR set to: 0
 10122                           ;mcc_generated_files/fatfs/ff.c: 3510:  return res;
 10123   0097EA  51CA               	movf	f_mount@res& (0+255),w,b
 10124   0097EC                     l977:
 10125                           
 10126                           ; BSR set to: 0
 10127   0097EC  0012               	return		;funcret
 10128   0097EE                     __end_of_f_mount:
 10129                           	callstack 0
 10130                           
 10131 ;; *************** function _find_volume *****************
 10132 ;; Defined at:
 10133 ;;		line 3203 in file "mcc_generated_files/fatfs/ff.c"
 10134 ;; Parameters:    Size  Location     Type
 10135 ;;  path            2   30[BANK0 ] PTR PTR const unsigned c
 10136 ;;		 -> f_rename@path_old(2), f_mkdir@path(2), f_unlink@path(2), f_getfree@path(2), 
 10137 ;;		 -> f_stat@path(2), f_opendir@path(2), f_chdir@path(2), f_open@path(2), 
 10138 ;;		 -> f_mount@path(2), 
 10139 ;;  rfs             2   32[BANK0 ] PTR PTR struct .
 10140 ;;		 -> f_rename@fs(2), f_mkdir@fs(2), f_unlink@fs(2), f_getfree@fs(2), 
 10141 ;;		 -> dj.obj(15), f_stat@dj(40), f_opendir@fs(2), f_chdir@fs(2), 
 10142 ;;		 -> f_open@fs(2), f_mount@fs(2), 
 10143 ;;  mode            1   34[BANK0 ] unsigned char 
 10144 ;; Auto vars:     Size  Location     Type
 10145 ;;  br             16   43[BANK0 ] unsigned long [4]
 10146 ;;  bsect           4   92[BANK0 ] unsigned long 
 10147 ;;  fasize          4   88[BANK0 ] unsigned long 
 10148 ;;  nclst           4   84[BANK0 ] unsigned long 
 10149 ;;  tsect           4   79[BANK0 ] unsigned long 
 10150 ;;  sysect          4   71[BANK0 ] unsigned long 
 10151 ;;  szbfat          4   65[BANK0 ] unsigned long 
 10152 ;;  fs              2   99[BANK0 ] PTR struct .
 10153 ;;		 -> drive(563), NULL(0), FatFs(563), 
 10154 ;;  i               2   96[BANK0 ] unsigned int 
 10155 ;;  nrsv            2   77[BANK0 ] unsigned short 
 10156 ;;  vol             2   75[BANK0 ] int 
 10157 ;;  pt              2   69[BANK0 ] PTR unsigned char 
 10158 ;;		 -> FatFs.win(512), drive.win(512), drive(563), NULL(0), 
 10159 ;;		 -> FatFs(563), 
 10160 ;;  fmt             1   98[BANK0 ] unsigned char 
 10161 ;;  stat            1   83[BANK0 ] unsigned char 
 10162 ;; Return value:  Size  Location     Type
 10163 ;;                  1    wreg      enum E68
 10164 ;; Registers used:
 10165 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 10166 ;; Tracked objects:
 10167 ;;		On entry : 0/0
 10168 ;;		On exit  : 0/0
 10169 ;;		Unchanged: 0/0
 10170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10171 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10172 ;;      Locals:         0      58       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10173 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10174 ;;      Totals:         0      71       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10175 ;;Total ram usage:       71 bytes
 10176 ;; Hardware stack levels used: 1
 10177 ;; Hardware stack levels required when called: 8
 10178 ;; This function calls:
 10179 ;;		___lldiv
 10180 ;;		___lmul
 10181 ;;		_check_fs
 10182 ;;		_disk_initialize
 10183 ;;		_disk_status
 10184 ;;		_get_ldnumber
 10185 ;;		_ld_dword
 10186 ;;		_ld_word
 10187 ;;		_move_window
 10188 ;; This function is called by:
 10189 ;;		_f_mount
 10190 ;;		_f_open
 10191 ;;		_f_chdir
 10192 ;;		_f_opendir
 10193 ;;		_f_stat
 10194 ;;		_f_getfree
 10195 ;;		_f_unlink
 10196 ;;		_f_mkdir
 10197 ;;		_f_rename
 10198 ;; This function uses a non-reentrant model
 10199 ;;
 10200                           
 10201                           	psect	text22
 10202   00F23C                     __ptext22:
 10203                           	callstack 0
 10204   00F23C                     _find_volume:
 10205                           	callstack 21
 10206   00F23C                     
 10207                           ;mcc_generated_files/fatfs/ff.c: 3204:  const TCHAR** path,;mcc_generated_files/fatfs/ff
      +                          .c: 3205:  FATFS** rfs,;mcc_generated_files/fatfs/ff.c: 3206:  BYTE mode;mcc_generated_f
      +                          iles/fatfs/ff.c: 3208: {;mcc_generated_files/fatfs/ff.c: 3209:  BYTE fmt, *pt;;mcc_gener
      +                          ated_files/fatfs/ff.c: 3210:  int vol;;mcc_generated_files/fatfs/ff.c: 3211:  DSTATUS st
      +                          at;;mcc_generated_files/fatfs/ff.c: 3212:  DWORD bsect, fasize, tsect, sysect, nclst, sz
      +                          bfat, br[4];;mcc_generated_files/fatfs/ff.c: 3213:  WORD nrsv;;mcc_generated_files/fatfs
      +                          /ff.c: 3214:  FATFS *fs;
 10208   00F23C  C080  FFD9         	movff	find_volume@rfs,fsr2l
 10209   00F240  C081  FFDA         	movff	find_volume@rfs+1,fsr2h
 10210   00F244  0E00               	movlw	0
 10211   00F246  6EDE               	movwf	postinc2,c
 10212   00F248  0E00               	movlw	0
 10213   00F24A  6EDD               	movwf	postdec2,c
 10214   00F24C                     
 10215                           ;mcc_generated_files/fatfs/ff.c: 3220:  vol = get_ldnumber(path);
 10216   00F24C  C07E  F001         	movff	find_volume@path,get_ldnumber@path
 10217   00F250  C07F  F002         	movff	find_volume@path+1,get_ldnumber@path+1
 10218   00F254  EC1D  F04E         	call	_get_ldnumber	;wreg free
 10219   00F258  C001  F0AB         	movff	?_get_ldnumber,find_volume@vol
 10220   00F25C  C002  F0AC         	movff	?_get_ldnumber+1,find_volume@vol+1
 10221   00F260                     
 10222                           ;mcc_generated_files/fatfs/ff.c: 3221:  if (vol < 0) return FR_INVALID_DRIVE;
 10223   00F260  0100               	movlb	0	; () banked
 10224   00F262  BFAC               	btfsc	(find_volume@vol+1)& (0+255),7,b
 10225   00F264  EF38  F079         	goto	u10240
 10226   00F268  EF36  F079         	goto	u10241
 10227   00F26C                     u10241:
 10228   00F26C  EF3B  F079         	goto	l7653
 10229   00F270                     u10240:
 10230   00F270                     
 10231                           ; BSR set to: 0
 10232   00F270  0E0B               	movlw	11
 10233   00F272  EF5C  F07F         	goto	l911
 10234   00F276                     l7653:
 10235                           
 10236                           ; BSR set to: 0
 10237                           ;mcc_generated_files/fatfs/ff.c: 3224:  fs = FatFs[vol];
 10238   00F276  90D8               	bcf	status,0,c
 10239   00F278  35AB               	rlcf	find_volume@vol& (0+255),w,b
 10240   00F27A  6ED9               	movwf	fsr2l,c
 10241   00F27C  35AC               	rlcf	(find_volume@vol+1)& (0+255),w,b
 10242   00F27E  6EDA               	movwf	fsr2h,c
 10243   00F280  0EF6               	movlw	low _FatFs@ff$F1589
 10244   00F282  26D9               	addwf	fsr2l,f,c
 10245   00F284  0E00               	movlw	high _FatFs@ff$F1589
 10246   00F286  22DA               	addwfc	fsr2h,f,c
 10247   00F288  CFDE F0C3          	movff	postinc2,find_volume@fs
 10248   00F28C  CFDD F0C4          	movff	postdec2,find_volume@fs+1
 10249   00F290                     
 10250                           ; BSR set to: 0
 10251                           ;mcc_generated_files/fatfs/ff.c: 3225:  if (!fs) return FR_NOT_ENABLED;
 10252   00F290  51C3               	movf	find_volume@fs& (0+255),w,b
 10253   00F292  11C4               	iorwf	(find_volume@fs+1)& (0+255),w,b
 10254   00F294  A4D8               	btfss	status,2,c
 10255   00F296  EF4F  F079         	goto	u10251
 10256   00F29A  EF51  F079         	goto	u10250
 10257   00F29E                     u10251:
 10258   00F29E  EF54  F079         	goto	l7661
 10259   00F2A2                     u10250:
 10260   00F2A2                     
 10261                           ; BSR set to: 0
 10262   00F2A2  0E0C               	movlw	12
 10263   00F2A4  EF5C  F07F         	goto	l911
 10264   00F2A8                     l7661:
 10265                           
 10266                           ; BSR set to: 0
 10267                           ;mcc_generated_files/fatfs/ff.c: 3229:  *rfs = fs;
 10268   00F2A8  C080  FFD9         	movff	find_volume@rfs,fsr2l
 10269   00F2AC  C081  FFDA         	movff	find_volume@rfs+1,fsr2h
 10270   00F2B0  C0C3  FFDE         	movff	find_volume@fs,postinc2
 10271   00F2B4  C0C4  FFDD         	movff	find_volume@fs+1,postdec2
 10272   00F2B8                     
 10273                           ; BSR set to: 0
 10274                           ;mcc_generated_files/fatfs/ff.c: 3231:  mode &= (BYTE)~0x01;
 10275   00F2B8  9182               	bcf	find_volume@mode& (0+255),0,b
 10276   00F2BA                     
 10277                           ; BSR set to: 0
 10278                           ;mcc_generated_files/fatfs/ff.c: 3232:  if (fs->fs_type != 0) {
 10279   00F2BA  C0C3  FFD9         	movff	find_volume@fs,fsr2l
 10280   00F2BE  C0C4  FFDA         	movff	find_volume@fs+1,fsr2h
 10281   00F2C2  50DF               	movf	indf2,w,c
 10282   00F2C4  B4D8               	btfsc	status,2,c
 10283   00F2C6  EF67  F079         	goto	u10261
 10284   00F2CA  EF69  F079         	goto	u10260
 10285   00F2CE                     u10261:
 10286   00F2CE  EF90  F079         	goto	l7683
 10287   00F2D2                     u10260:
 10288   00F2D2                     
 10289                           ; BSR set to: 0
 10290                           ;mcc_generated_files/fatfs/ff.c: 3233:   stat = disk_status(fs->pdrv);
 10291   00F2D2  EE20 F001          	lfsr	2,1
 10292   00F2D6  51C3               	movf	find_volume@fs& (0+255),w,b
 10293   00F2D8  26D9               	addwf	fsr2l,f,c
 10294   00F2DA  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 10295   00F2DC  22DA               	addwfc	fsr2h,f,c
 10296   00F2DE  50DF               	movf	indf2,w,c
 10297   00F2E0  EC66  F048         	call	_disk_status
 10298   00F2E4  0100               	movlb	0	; () banked
 10299   00F2E6  6FB3               	movwf	find_volume@stat& (0+255),b
 10300   00F2E8                     
 10301                           ; BSR set to: 0
 10302                           ;mcc_generated_files/fatfs/ff.c: 3235:    if (!0 && mode && (stat & 0x04)) {
 10303   00F2E8  B1B3               	btfsc	find_volume@stat& (0+255),0,b
 10304   00F2EA  EF79  F079         	goto	u10271
 10305   00F2EE  EF7B  F079         	goto	u10270
 10306   00F2F2                     u10271:
 10307   00F2F2  EF90  F079         	goto	l7683
 10308   00F2F6                     u10270:
 10309   00F2F6                     
 10310                           ; BSR set to: 0
 10311   00F2F6  5182               	movf	find_volume@mode& (0+255),w,b
 10312   00F2F8  B4D8               	btfsc	status,2,c
 10313   00F2FA  EF81  F079         	goto	u10281
 10314   00F2FE  EF83  F079         	goto	u10280
 10315   00F302                     u10281:
 10316   00F302  EF8D  F079         	goto	l7679
 10317   00F306                     u10280:
 10318   00F306                     
 10319                           ; BSR set to: 0
 10320   00F306  A5B3               	btfss	find_volume@stat& (0+255),2,b
 10321   00F308  EF88  F079         	goto	u10291
 10322   00F30C  EF8A  F079         	goto	u10290
 10323   00F310                     u10291:
 10324   00F310  EF8D  F079         	goto	l7679
 10325   00F314                     u10290:
 10326   00F314                     l7675:
 10327                           
 10328                           ; BSR set to: 0
 10329                           ;mcc_generated_files/fatfs/ff.c: 3236:     return FR_WRITE_PROTECTED;
 10330   00F314  0E0A               	movlw	10
 10331   00F316  EF5C  F07F         	goto	l911
 10332   00F31A                     l7679:
 10333                           
 10334                           ; BSR set to: 0
 10335                           ;mcc_generated_files/fatfs/ff.c: 3238:    return FR_OK;
 10336   00F31A  0E00               	movlw	0
 10337   00F31C  EF5C  F07F         	goto	l911
 10338   00F320                     l7683:
 10339                           
 10340                           ; BSR set to: 0
 10341                           ;mcc_generated_files/fatfs/ff.c: 3245:  fs->fs_type = 0;
 10342   00F320  C0C3  FFD9         	movff	find_volume@fs,fsr2l
 10343   00F324  C0C4  FFDA         	movff	find_volume@fs+1,fsr2h
 10344   00F328  0E00               	movlw	0
 10345   00F32A  6EDF               	movwf	indf2,c
 10346   00F32C                     
 10347                           ; BSR set to: 0
 10348                           ;mcc_generated_files/fatfs/ff.c: 3246:  fs->pdrv = (BYTE)(vol);
 10349   00F32C  EE20 F001          	lfsr	2,1
 10350   00F330  51C3               	movf	find_volume@fs& (0+255),w,b
 10351   00F332  26D9               	addwf	fsr2l,f,c
 10352   00F334  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 10353   00F336  22DA               	addwfc	fsr2h,f,c
 10354   00F338  C0AB  FFDF         	movff	find_volume@vol,indf2
 10355   00F33C                     
 10356                           ; BSR set to: 0
 10357                           ;mcc_generated_files/fatfs/ff.c: 3247:  stat = disk_initialize(fs->pdrv);
 10358   00F33C  EE20 F001          	lfsr	2,1
 10359   00F340  51C3               	movf	find_volume@fs& (0+255),w,b
 10360   00F342  26D9               	addwf	fsr2l,f,c
 10361   00F344  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 10362   00F346  22DA               	addwfc	fsr2h,f,c
 10363   00F348  50DF               	movf	indf2,w,c
 10364   00F34A  EC96  F046         	call	_disk_initialize
 10365   00F34E  0100               	movlb	0	; () banked
 10366   00F350  6FB3               	movwf	find_volume@stat& (0+255),b
 10367   00F352                     
 10368                           ; BSR set to: 0
 10369                           ;mcc_generated_files/fatfs/ff.c: 3248:  if (stat & 0x01) {
 10370   00F352  A1B3               	btfss	find_volume@stat& (0+255),0,b
 10371   00F354  EFAE  F079         	goto	u10301
 10372   00F358  EFB0  F079         	goto	u10300
 10373   00F35C                     u10301:
 10374   00F35C  EFB3  F079         	goto	l7695
 10375   00F360                     u10300:
 10376   00F360                     
 10377                           ; BSR set to: 0
 10378                           ;mcc_generated_files/fatfs/ff.c: 3249:   return FR_NOT_READY;
 10379   00F360  0E03               	movlw	3
 10380   00F362  EF5C  F07F         	goto	l911
 10381   00F366                     l7695:
 10382                           
 10383                           ; BSR set to: 0
 10384   00F366  5182               	movf	find_volume@mode& (0+255),w,b
 10385   00F368  B4D8               	btfsc	status,2,c
 10386   00F36A  EFB9  F079         	goto	u10311
 10387   00F36E  EFBB  F079         	goto	u10310
 10388   00F372                     u10311:
 10389   00F372  EFC4  F079         	goto	l7703
 10390   00F376                     u10310:
 10391   00F376                     
 10392                           ; BSR set to: 0
 10393   00F376  A5B3               	btfss	find_volume@stat& (0+255),2,b
 10394   00F378  EFC0  F079         	goto	u10321
 10395   00F37C  EFC2  F079         	goto	u10320
 10396   00F380                     u10321:
 10397   00F380  EFC4  F079         	goto	l7703
 10398   00F384                     u10320:
 10399   00F384  EF8A  F079         	goto	l7675
 10400   00F388                     l7703:
 10401                           
 10402                           ; BSR set to: 0
 10403                           ;mcc_generated_files/fatfs/ff.c: 3260:  bsect = 0;
 10404   00F388  0E00               	movlw	0
 10405   00F38A  6FBC               	movwf	find_volume@bsect& (0+255),b
 10406   00F38C  0E00               	movlw	0
 10407   00F38E  6FBD               	movwf	(find_volume@bsect+1)& (0+255),b
 10408   00F390  0E00               	movlw	0
 10409   00F392  6FBE               	movwf	(find_volume@bsect+2)& (0+255),b
 10410   00F394  0E00               	movlw	0
 10411   00F396  6FBF               	movwf	(find_volume@bsect+3)& (0+255),b
 10412   00F398                     
 10413                           ; BSR set to: 0
 10414                           ;mcc_generated_files/fatfs/ff.c: 3261:  fmt = check_fs(fs, bsect);
 10415   00F398  C0C3  F077         	movff	find_volume@fs,check_fs@fs
 10416   00F39C  C0C4  F078         	movff	find_volume@fs+1,check_fs@fs+1
 10417   00F3A0  C0BC  F079         	movff	find_volume@bsect,check_fs@sect
 10418   00F3A4  C0BD  F07A         	movff	find_volume@bsect+1,check_fs@sect+1
 10419   00F3A8  C0BE  F07B         	movff	find_volume@bsect+2,check_fs@sect+2
 10420   00F3AC  C0BF  F07C         	movff	find_volume@bsect+3,check_fs@sect+3
 10421   00F3B0  EC12  F050         	call	_check_fs	;wreg free
 10422   00F3B4  0100               	movlb	0	; () banked
 10423   00F3B6  6FC2               	movwf	find_volume@fmt& (0+255),b
 10424   00F3B8                     
 10425                           ; BSR set to: 0
 10426                           ;mcc_generated_files/fatfs/ff.c: 3262:  if (fmt == 2 || (fmt < 2 && 0 != 0)) {
 10427   00F3B8  0E02               	movlw	2
 10428   00F3BA  19C2               	xorwf	find_volume@fmt& (0+255),w,b
 10429   00F3BC  B4D8               	btfsc	status,2,c
 10430   00F3BE  EFE3  F079         	goto	u10331
 10431   00F3C2  EFE5  F079         	goto	u10330
 10432   00F3C6                     u10331:
 10433   00F3C6  EFE7  F079         	goto	l7713
 10434   00F3CA                     u10330:
 10435   00F3CA  EFB9  F07A         	goto	l7753
 10436   00F3CE                     l7713:
 10437                           
 10438                           ; BSR set to: 0
 10439                           ;mcc_generated_files/fatfs/ff.c: 3263:   for (i = 0; i < 4; i++) {
 10440   00F3CE  0E00               	movlw	0
 10441   00F3D0  6FC1               	movwf	(find_volume@i+1)& (0+255),b
 10442   00F3D2  0E00               	movlw	0
 10443   00F3D4  6FC0               	movwf	find_volume@i& (0+255),b
 10444   00F3D6                     l7715:
 10445                           
 10446                           ; BSR set to: 0
 10447   00F3D6  51C1               	movf	(find_volume@i+1)& (0+255),w,b
 10448   00F3D8  E109               	bnz	u10340
 10449   00F3DA  0E04               	movlw	4
 10450   00F3DC  5DC0               	subwf	find_volume@i& (0+255),w,b
 10451   00F3DE  A0D8               	btfss	status,0,c
 10452   00F3E0  EFF4  F079         	goto	u10341
 10453   00F3E4  EFF6  F079         	goto	u10340
 10454   00F3E8                     u10341:
 10455   00F3E8  EFF8  F079         	goto	l7719
 10456   00F3EC                     u10340:
 10457   00F3EC  EF56  F07A         	goto	l7733
 10458   00F3F0                     l7719:
 10459                           
 10460                           ; BSR set to: 0
 10461                           ;mcc_generated_files/fatfs/ff.c: 3264:    pt = fs->win + (446 + i * 16);
 10462   00F3F0  C0C0  F083         	movff	find_volume@i,??_find_volume
 10463   00F3F4  C0C1  F084         	movff	find_volume@i+1,??_find_volume+1
 10464   00F3F8  3B83               	swapf	??_find_volume& (0+255),f,b
 10465   00F3FA  3B84               	swapf	(??_find_volume+1)& (0+255),f,b
 10466   00F3FC  0EF0               	movlw	240
 10467   00F3FE  1784               	andwf	(??_find_volume+1)& (0+255),f,b
 10468   00F400  5183               	movf	??_find_volume& (0+255),w,b
 10469   00F402  0B0F               	andlw	15
 10470   00F404  1384               	iorwf	(??_find_volume+1)& (0+255),f,b
 10471   00F406  0EF0               	movlw	240
 10472   00F408  1783               	andwf	??_find_volume& (0+255),f,b
 10473   00F40A  5183               	movf	??_find_volume& (0+255),w,b
 10474   00F40C  25C3               	addwf	find_volume@fs& (0+255),w,b
 10475   00F40E  6F85               	movwf	(??_find_volume+2)& (0+255),b
 10476   00F410  5184               	movf	(??_find_volume+1)& (0+255),w,b
 10477   00F412  21C4               	addwfc	(find_volume@fs+1)& (0+255),w,b
 10478   00F414  6F86               	movwf	(??_find_volume+3)& (0+255),b
 10479   00F416  0EF1               	movlw	241
 10480   00F418  2585               	addwf	(??_find_volume+2)& (0+255),w,b
 10481   00F41A  6FA5               	movwf	find_volume@pt& (0+255),b
 10482   00F41C  0E01               	movlw	1
 10483   00F41E  2186               	addwfc	(??_find_volume+3)& (0+255),w,b
 10484   00F420  6FA6               	movwf	(find_volume@pt+1)& (0+255),b
 10485   00F422                     
 10486                           ; BSR set to: 0
 10487                           ;mcc_generated_files/fatfs/ff.c: 3265:    br[i] = pt[4] ? ld_dword(pt + 8) : 0;
 10488   00F422  EE20 F004          	lfsr	2,4
 10489   00F426  51A5               	movf	find_volume@pt& (0+255),w,b
 10490   00F428  26D9               	addwf	fsr2l,f,c
 10491   00F42A  51A6               	movf	(find_volume@pt+1)& (0+255),w,b
 10492   00F42C  22DA               	addwfc	fsr2h,f,c
 10493   00F42E  50DF               	movf	indf2,w,c
 10494   00F430  A4D8               	btfss	status,2,c
 10495   00F432  EF1D  F07A         	goto	u10351
 10496   00F436  EF1F  F07A         	goto	u10350
 10497   00F43A                     u10351:
 10498   00F43A  EF29  F07A         	goto	l7725
 10499   00F43E                     u10350:
 10500   00F43E                     
 10501                           ; BSR set to: 0
 10502   00F43E  0E00               	movlw	0
 10503   00F440  6F9B               	movwf	_find_volume$2377& (0+255),b
 10504   00F442  0E00               	movlw	0
 10505   00F444  6F9C               	movwf	(_find_volume$2377+1)& (0+255),b
 10506   00F446  0E00               	movlw	0
 10507   00F448  6F9D               	movwf	(_find_volume$2377+2)& (0+255),b
 10508   00F44A  0E00               	movlw	0
 10509   00F44C  6F9E               	movwf	(_find_volume$2377+3)& (0+255),b
 10510   00F44E  EF39  F07A         	goto	l7727
 10511   00F452                     l7725:
 10512                           
 10513                           ; BSR set to: 0
 10514   00F452  0E08               	movlw	8
 10515   00F454  25A5               	addwf	find_volume@pt& (0+255),w,b
 10516   00F456  6E01               	movwf	ld_dword@ptr^0,c
 10517   00F458  0E00               	movlw	0
 10518   00F45A  21A6               	addwfc	(find_volume@pt+1)& (0+255),w,b
 10519   00F45C  6E02               	movwf	(ld_dword@ptr+1)^0,c
 10520   00F45E  EC63  F04A         	call	_ld_dword	;wreg free
 10521   00F462  C001  F09B         	movff	?_ld_dword,_find_volume$2377
 10522   00F466  C002  F09C         	movff	?_ld_dword+1,_find_volume$2377+1
 10523   00F46A  C003  F09D         	movff	?_ld_dword+2,_find_volume$2377+2
 10524   00F46E  C004  F09E         	movff	?_ld_dword+3,_find_volume$2377+3
 10525   00F472                     l7727:
 10526   00F472  0E8B               	movlw	low find_volume@br
 10527   00F474  0100               	movlb	0	; () banked
 10528   00F476  6F83               	movwf	??_find_volume& (0+255),b
 10529   00F478  0E00               	movlw	high find_volume@br
 10530   00F47A  6F84               	movwf	(??_find_volume+1)& (0+255),b
 10531   00F47C  90D8               	bcf	status,0,c
 10532   00F47E  35C0               	rlcf	find_volume@i& (0+255),w,b
 10533   00F480  6ED9               	movwf	fsr2l,c
 10534   00F482  35C1               	rlcf	(find_volume@i+1)& (0+255),w,b
 10535   00F484  6EDA               	movwf	fsr2h,c
 10536   00F486  90D8               	bcf	status,0,c
 10537   00F488  36D9               	rlcf	fsr2l,f,c
 10538   00F48A  36DA               	rlcf	fsr2h,f,c
 10539   00F48C  5183               	movf	??_find_volume& (0+255),w,b
 10540   00F48E  26D9               	addwf	fsr2l,f,c
 10541   00F490  5184               	movf	(??_find_volume+1)& (0+255),w,b
 10542   00F492  22DA               	addwfc	fsr2h,f,c
 10543   00F494  C09B  FFDE         	movff	_find_volume$2377,postinc2
 10544   00F498  C09C  FFDE         	movff	_find_volume$2377+1,postinc2
 10545   00F49C  C09D  FFDE         	movff	_find_volume$2377+2,postinc2
 10546   00F4A0  C09E  FFDE         	movff	_find_volume$2377+3,postinc2
 10547   00F4A4                     
 10548                           ; BSR set to: 0
 10549                           ;mcc_generated_files/fatfs/ff.c: 3266:   }
 10550   00F4A4  4BC0               	infsnz	find_volume@i& (0+255),f,b
 10551   00F4A6  2BC1               	incf	(find_volume@i+1)& (0+255),f,b
 10552   00F4A8  EFEB  F079         	goto	l7715
 10553   00F4AC                     l7733:
 10554                           
 10555                           ; BSR set to: 0
 10556                           ;mcc_generated_files/fatfs/ff.c: 3267:   i = 0;
 10557   00F4AC  0E00               	movlw	0
 10558   00F4AE  6FC1               	movwf	(find_volume@i+1)& (0+255),b
 10559   00F4B0  0E00               	movlw	0
 10560   00F4B2  6FC0               	movwf	find_volume@i& (0+255),b
 10561   00F4B4                     
 10562                           ; BSR set to: 0
 10563                           ;mcc_generated_files/fatfs/ff.c: 3268:   if (i != 0) i--;
 10564   00F4B4  51C0               	movf	find_volume@i& (0+255),w,b
 10565   00F4B6  11C1               	iorwf	(find_volume@i+1)& (0+255),w,b
 10566   00F4B8  B4D8               	btfsc	status,2,c
 10567   00F4BA  EF61  F07A         	goto	u10361
 10568   00F4BE  EF63  F07A         	goto	u10360
 10569   00F4C2                     u10361:
 10570   00F4C2  EF66  F07A         	goto	l7739
 10571   00F4C6                     u10360:
 10572   00F4C6                     
 10573                           ; BSR set to: 0
 10574   00F4C6  07C0               	decf	find_volume@i& (0+255),f,b
 10575   00F4C8  A0D8               	btfss	status,0,c
 10576   00F4CA  07C1               	decf	(find_volume@i+1)& (0+255),f,b
 10577   00F4CC                     l7739:
 10578                           
 10579                           ; BSR set to: 0
 10580                           ;mcc_generated_files/fatfs/ff.c: 3270:    bsect = br[i];
 10581   00F4CC  0E8B               	movlw	low find_volume@br
 10582   00F4CE  6F83               	movwf	??_find_volume& (0+255),b
 10583   00F4D0  0E00               	movlw	high find_volume@br
 10584   00F4D2  6F84               	movwf	(??_find_volume+1)& (0+255),b
 10585   00F4D4  90D8               	bcf	status,0,c
 10586   00F4D6  35C0               	rlcf	find_volume@i& (0+255),w,b
 10587   00F4D8  6ED9               	movwf	fsr2l,c
 10588   00F4DA  35C1               	rlcf	(find_volume@i+1)& (0+255),w,b
 10589   00F4DC  6EDA               	movwf	fsr2h,c
 10590   00F4DE  90D8               	bcf	status,0,c
 10591   00F4E0  36D9               	rlcf	fsr2l,f,c
 10592   00F4E2  36DA               	rlcf	fsr2h,f,c
 10593   00F4E4  5183               	movf	??_find_volume& (0+255),w,b
 10594   00F4E6  26D9               	addwf	fsr2l,f,c
 10595   00F4E8  5184               	movf	(??_find_volume+1)& (0+255),w,b
 10596   00F4EA  22DA               	addwfc	fsr2h,f,c
 10597   00F4EC  CFDE F0BC          	movff	postinc2,find_volume@bsect
 10598   00F4F0  CFDE F0BD          	movff	postinc2,find_volume@bsect+1
 10599   00F4F4  CFDE F0BE          	movff	postinc2,find_volume@bsect+2
 10600   00F4F8  CFDE F0BF          	movff	postinc2,find_volume@bsect+3
 10601   00F4FC                     
 10602                           ; BSR set to: 0
 10603                           ;mcc_generated_files/fatfs/ff.c: 3271:    fmt = bsect ? check_fs(fs, bsect) : 3;
 10604   00F4FC  51BC               	movf	find_volume@bsect& (0+255),w,b
 10605   00F4FE  11BD               	iorwf	(find_volume@bsect+1)& (0+255),w,b
 10606   00F500  11BE               	iorwf	(find_volume@bsect+2)& (0+255),w,b
 10607   00F502  11BF               	iorwf	(find_volume@bsect+3)& (0+255),w,b
 10608   00F504  A4D8               	btfss	status,2,c
 10609   00F506  EF87  F07A         	goto	u10371
 10610   00F50A  EF89  F07A         	goto	u10370
 10611   00F50E                     u10371:
 10612   00F50E  EF8F  F07A         	goto	l7745
 10613   00F512                     u10370:
 10614   00F512                     
 10615                           ; BSR set to: 0
 10616   00F512  0E00               	movlw	0
 10617   00F514  6FA0               	movwf	(_find_volume$2378+1)& (0+255),b
 10618   00F516  0E03               	movlw	3
 10619   00F518  6F9F               	movwf	_find_volume$2378& (0+255),b
 10620   00F51A  EFA2  F07A         	goto	l7747
 10621   00F51E                     l7745:
 10622                           
 10623                           ; BSR set to: 0
 10624   00F51E  C0C3  F077         	movff	find_volume@fs,check_fs@fs
 10625   00F522  C0C4  F078         	movff	find_volume@fs+1,check_fs@fs+1
 10626   00F526  C0BC  F079         	movff	find_volume@bsect,check_fs@sect
 10627   00F52A  C0BD  F07A         	movff	find_volume@bsect+1,check_fs@sect+1
 10628   00F52E  C0BE  F07B         	movff	find_volume@bsect+2,check_fs@sect+2
 10629   00F532  C0BF  F07C         	movff	find_volume@bsect+3,check_fs@sect+3
 10630   00F536  EC12  F050         	call	_check_fs	;wreg free
 10631   00F53A  0100               	movlb	0	; () banked
 10632   00F53C  6F83               	movwf	??_find_volume& (0+255),b
 10633   00F53E  5183               	movf	??_find_volume& (0+255),w,b
 10634   00F540  6F9F               	movwf	_find_volume$2378& (0+255),b
 10635   00F542  6BA0               	clrf	(_find_volume$2378+1)& (0+255),b
 10636   00F544                     l7747:
 10637                           
 10638                           ; BSR set to: 0
 10639                           ;mcc_generated_files/fatfs/ff.c: 3272:   } while (0 == 0 && fmt >= 2 && ++i < 4);
 10640   00F544  C09F  F0C2         	movff	_find_volume$2378,find_volume@fmt
 10641   00F548                     
 10642                           ; BSR set to: 0
 10643   00F548  0E01               	movlw	1
 10644   00F54A  65C2               	cpfsgt	find_volume@fmt& (0+255),b
 10645   00F54C  EFAA  F07A         	goto	u10381
 10646   00F550  EFAC  F07A         	goto	u10380
 10647   00F554                     u10381:
 10648   00F554  EFB9  F07A         	goto	l7753
 10649   00F558                     u10380:
 10650   00F558                     
 10651                           ; BSR set to: 0
 10652   00F558  4BC0               	infsnz	find_volume@i& (0+255),f,b
 10653   00F55A  2BC1               	incf	(find_volume@i+1)& (0+255),f,b
 10654   00F55C  51C1               	movf	(find_volume@i+1)& (0+255),w,b
 10655   00F55E  E109               	bnz	u10390
 10656   00F560  0E04               	movlw	4
 10657   00F562  5DC0               	subwf	find_volume@i& (0+255),w,b
 10658   00F564  A0D8               	btfss	status,0,c
 10659   00F566  EFB7  F07A         	goto	u10391
 10660   00F56A  EFB9  F07A         	goto	u10390
 10661   00F56E                     u10391:
 10662   00F56E  EF66  F07A         	goto	l7739
 10663   00F572                     u10390:
 10664   00F572                     l7753:
 10665                           
 10666                           ; BSR set to: 0
 10667                           ;mcc_generated_files/fatfs/ff.c: 3274:  if (fmt == 4) return FR_DISK_ERR;
 10668   00F572  0E04               	movlw	4
 10669   00F574  19C2               	xorwf	find_volume@fmt& (0+255),w,b
 10670   00F576  A4D8               	btfss	status,2,c
 10671   00F578  EFC0  F07A         	goto	u10401
 10672   00F57C  EFC2  F07A         	goto	u10400
 10673   00F580                     u10401:
 10674   00F580  EFC5  F07A         	goto	l7759
 10675   00F584                     u10400:
 10676   00F584                     
 10677                           ; BSR set to: 0
 10678   00F584  0E01               	movlw	1
 10679   00F586  EF5C  F07F         	goto	l911
 10680   00F58A                     l7759:
 10681                           
 10682                           ; BSR set to: 0
 10683                           ;mcc_generated_files/fatfs/ff.c: 3275:  if (fmt >= 2) return FR_NO_FILESYSTEM;
 10684   00F58A  0E01               	movlw	1
 10685   00F58C  65C2               	cpfsgt	find_volume@fmt& (0+255),b
 10686   00F58E  EFCB  F07A         	goto	u10411
 10687   00F592  EFCD  F07A         	goto	u10410
 10688   00F596                     u10411:
 10689   00F596  EFD0  F07A         	goto	l7765
 10690   00F59A                     u10410:
 10691   00F59A                     l7761:
 10692   00F59A  0E0D               	movlw	13
 10693   00F59C  EF5C  F07F         	goto	l911
 10694   00F5A0                     l7765:
 10695                           
 10696                           ; BSR set to: 0
 10697                           ;mcc_generated_files/fatfs/ff.c: 3326:  {;mcc_generated_files/fatfs/ff.c: 3327:   if (ld
      +                          _word(fs->win + 11) != ((UINT)512)) return FR_NO_FILESYSTEM;
 10698   00F5A0  0E3E               	movlw	62
 10699   00F5A2  25C3               	addwf	find_volume@fs& (0+255),w,b
 10700   00F5A4  6E01               	movwf	ld_word@ptr^0,c
 10701   00F5A6  0E00               	movlw	0
 10702   00F5A8  21C4               	addwfc	(find_volume@fs+1)& (0+255),w,b
 10703   00F5AA  6E02               	movwf	(ld_word@ptr+1)^0,c
 10704   00F5AC  ECE4  F045         	call	_ld_word	;wreg free
 10705   00F5B0  0E02               	movlw	2
 10706   00F5B2  1802               	xorwf	(?_ld_word+1)^0,w,c
 10707   00F5B4  1001               	iorwf	?_ld_word^0,w,c
 10708   00F5B6  B4D8               	btfsc	status,2,c
 10709   00F5B8  EFE0  F07A         	goto	u10421
 10710   00F5BC  EFE2  F07A         	goto	u10420
 10711   00F5C0                     u10421:
 10712   00F5C0  EFE4  F07A         	goto	l7771
 10713   00F5C4                     u10420:
 10714   00F5C4  EFCD  F07A         	goto	l7761
 10715   00F5C8                     l7771:
 10716                           
 10717                           ;mcc_generated_files/fatfs/ff.c: 3329:   fasize = ld_word(fs->win + 22);
 10718   00F5C8  0E49               	movlw	73
 10719   00F5CA  0100               	movlb	0	; () banked
 10720   00F5CC  25C3               	addwf	find_volume@fs& (0+255),w,b
 10721   00F5CE  6E01               	movwf	ld_word@ptr^0,c
 10722   00F5D0  0E00               	movlw	0
 10723   00F5D2  21C4               	addwfc	(find_volume@fs+1)& (0+255),w,b
 10724   00F5D4  6E02               	movwf	(ld_word@ptr+1)^0,c
 10725   00F5D6  ECE4  F045         	call	_ld_word	;wreg free
 10726   00F5DA  C001  F0B8         	movff	?_ld_word,find_volume@fasize
 10727   00F5DE  C002  F0B9         	movff	?_ld_word+1,find_volume@fasize+1
 10728   00F5E2  0100               	movlb	0	; () banked
 10729   00F5E4  6BBA               	clrf	(find_volume@fasize+2)& (0+255),b
 10730   00F5E6  6BBB               	clrf	(find_volume@fasize+3)& (0+255),b
 10731   00F5E8                     
 10732                           ; BSR set to: 0
 10733                           ;mcc_generated_files/fatfs/ff.c: 3330:   if (fasize == 0) fasize = ld_dword(fs->win + 36
      +                          );
 10734   00F5E8  51B8               	movf	find_volume@fasize& (0+255),w,b
 10735   00F5EA  11B9               	iorwf	(find_volume@fasize+1)& (0+255),w,b
 10736   00F5EC  11BA               	iorwf	(find_volume@fasize+2)& (0+255),w,b
 10737   00F5EE  11BB               	iorwf	(find_volume@fasize+3)& (0+255),w,b
 10738   00F5F0  A4D8               	btfss	status,2,c
 10739   00F5F2  EFFD  F07A         	goto	u10431
 10740   00F5F6  EFFF  F07A         	goto	u10430
 10741   00F5FA                     u10431:
 10742   00F5FA  EF0F  F07B         	goto	l7777
 10743   00F5FE                     u10430:
 10744   00F5FE                     
 10745                           ; BSR set to: 0
 10746   00F5FE  0E57               	movlw	87
 10747   00F600  25C3               	addwf	find_volume@fs& (0+255),w,b
 10748   00F602  6E01               	movwf	ld_dword@ptr^0,c
 10749   00F604  0E00               	movlw	0
 10750   00F606  21C4               	addwfc	(find_volume@fs+1)& (0+255),w,b
 10751   00F608  6E02               	movwf	(ld_dword@ptr+1)^0,c
 10752   00F60A  EC63  F04A         	call	_ld_dword	;wreg free
 10753   00F60E  C001  F0B8         	movff	?_ld_dword,find_volume@fasize
 10754   00F612  C002  F0B9         	movff	?_ld_dword+1,find_volume@fasize+1
 10755   00F616  C003  F0BA         	movff	?_ld_dword+2,find_volume@fasize+2
 10756   00F61A  C004  F0BB         	movff	?_ld_dword+3,find_volume@fasize+3
 10757   00F61E                     l7777:
 10758                           
 10759                           ;mcc_generated_files/fatfs/ff.c: 3331:   fs->fsize = fasize;
 10760   00F61E  0100               	movlb	0	; () banked
 10761   00F620  EE20 F01B          	lfsr	2,27
 10762   00F624  51C3               	movf	find_volume@fs& (0+255),w,b
 10763   00F626  26D9               	addwf	fsr2l,f,c
 10764   00F628  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 10765   00F62A  22DA               	addwfc	fsr2h,f,c
 10766   00F62C  C0B8  FFDE         	movff	find_volume@fasize,postinc2
 10767   00F630  C0B9  FFDE         	movff	find_volume@fasize+1,postinc2
 10768   00F634  C0BA  FFDE         	movff	find_volume@fasize+2,postinc2
 10769   00F638  C0BB  FFDE         	movff	find_volume@fasize+3,postinc2
 10770   00F63C                     
 10771                           ; BSR set to: 0
 10772                           ;mcc_generated_files/fatfs/ff.c: 3333:   fs->n_fats = fs->win[16];
 10773   00F63C  EE20 F043          	lfsr	2,67
 10774   00F640  51C3               	movf	find_volume@fs& (0+255),w,b
 10775   00F642  26D9               	addwf	fsr2l,f,c
 10776   00F644  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 10777   00F646  22DA               	addwfc	fsr2h,f,c
 10778   00F648  EE10 F002          	lfsr	1,2
 10779   00F64C  51C3               	movf	find_volume@fs& (0+255),w,b
 10780   00F64E  26E1               	addwf	fsr1l,f,c
 10781   00F650  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 10782   00F652  22E2               	addwfc	fsr1h,f,c
 10783   00F654  CFDF FFE7          	movff	indf2,indf1
 10784   00F658                     
 10785                           ; BSR set to: 0
 10786                           ;mcc_generated_files/fatfs/ff.c: 3334:   if (fs->n_fats != 1 && fs->n_fats != 2) return 
      +                          FR_NO_FILESYSTEM;
 10787   00F658  EE20 F002          	lfsr	2,2
 10788   00F65C  51C3               	movf	find_volume@fs& (0+255),w,b
 10789   00F65E  26D9               	addwf	fsr2l,f,c
 10790   00F660  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 10791   00F662  22DA               	addwfc	fsr2h,f,c
 10792   00F664  04DE               	decf	postinc2,w,c
 10793   00F666  B4D8               	btfsc	status,2,c
 10794   00F668  EF38  F07B         	goto	u10441
 10795   00F66C  EF3A  F07B         	goto	u10440
 10796   00F670                     u10441:
 10797   00F670  EF4B  F07B         	goto	l7789
 10798   00F674                     u10440:
 10799   00F674                     
 10800                           ; BSR set to: 0
 10801   00F674  EE20 F002          	lfsr	2,2
 10802   00F678  51C3               	movf	find_volume@fs& (0+255),w,b
 10803   00F67A  26D9               	addwf	fsr2l,f,c
 10804   00F67C  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 10805   00F67E  22DA               	addwfc	fsr2h,f,c
 10806   00F680  0E02               	movlw	2
 10807   00F682  18DE               	xorwf	postinc2,w,c
 10808   00F684  B4D8               	btfsc	status,2,c
 10809   00F686  EF47  F07B         	goto	u10451
 10810   00F68A  EF49  F07B         	goto	u10450
 10811   00F68E                     u10451:
 10812   00F68E  EF4B  F07B         	goto	l7789
 10813   00F692                     u10450:
 10814   00F692  EFCD  F07A         	goto	l7761
 10815   00F696                     l7789:
 10816                           
 10817                           ; BSR set to: 0
 10818                           ;mcc_generated_files/fatfs/ff.c: 3335:   fasize *= fs->n_fats;
 10819   00F696  C0B8  F001         	movff	find_volume@fasize,___lmul@multiplier
 10820   00F69A  C0B9  F002         	movff	find_volume@fasize+1,___lmul@multiplier+1
 10821   00F69E  C0BA  F003         	movff	find_volume@fasize+2,___lmul@multiplier+2
 10822   00F6A2  C0BB  F004         	movff	find_volume@fasize+3,___lmul@multiplier+3
 10823   00F6A6  EE20 F002          	lfsr	2,2
 10824   00F6AA  51C3               	movf	find_volume@fs& (0+255),w,b
 10825   00F6AC  26D9               	addwf	fsr2l,f,c
 10826   00F6AE  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 10827   00F6B0  22DA               	addwfc	fsr2h,f,c
 10828   00F6B2  50DF               	movf	indf2,w,c
 10829   00F6B4  6F83               	movwf	??_find_volume& (0+255),b
 10830   00F6B6  5183               	movf	??_find_volume& (0+255),w,b
 10831   00F6B8  6E05               	movwf	___lmul@multiplicand^0,c
 10832   00F6BA  6A06               	clrf	(___lmul@multiplicand+1)^0,c
 10833   00F6BC  6A07               	clrf	(___lmul@multiplicand+2)^0,c
 10834   00F6BE  6A08               	clrf	(___lmul@multiplicand+3)^0,c
 10835   00F6C0  EC4F  F047         	call	___lmul	;wreg free
 10836   00F6C4  C001  F0B8         	movff	?___lmul,find_volume@fasize
 10837   00F6C8  C002  F0B9         	movff	?___lmul+1,find_volume@fasize+1
 10838   00F6CC  C003  F0BA         	movff	?___lmul+2,find_volume@fasize+2
 10839   00F6D0  C004  F0BB         	movff	?___lmul+3,find_volume@fasize+3
 10840   00F6D4                     
 10841                           ;mcc_generated_files/fatfs/ff.c: 3337:   fs->csize = fs->win[13];
 10842   00F6D4  0100               	movlb	0	; () banked
 10843   00F6D6  EE20 F040          	lfsr	2,64
 10844   00F6DA  51C3               	movf	find_volume@fs& (0+255),w,b
 10845   00F6DC  26D9               	addwf	fsr2l,f,c
 10846   00F6DE  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 10847   00F6E0  22DA               	addwfc	fsr2h,f,c
 10848   00F6E2  50DF               	movf	indf2,w,c
 10849   00F6E4  6F83               	movwf	??_find_volume& (0+255),b
 10850   00F6E6  6B84               	clrf	(??_find_volume+1)& (0+255),b
 10851   00F6E8  EE20 F009          	lfsr	2,9
 10852   00F6EC  51C3               	movf	find_volume@fs& (0+255),w,b
 10853   00F6EE  26D9               	addwf	fsr2l,f,c
 10854   00F6F0  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 10855   00F6F2  22DA               	addwfc	fsr2h,f,c
 10856   00F6F4  C083  FFDE         	movff	??_find_volume,postinc2
 10857   00F6F8  C084  FFDD         	movff	??_find_volume+1,postdec2
 10858   00F6FC                     
 10859                           ; BSR set to: 0
 10860                           ;mcc_generated_files/fatfs/ff.c: 3338:   if (fs->csize == 0 || (fs->csize & (fs->csize -
      +                           1))) return FR_NO_FILESYSTEM;
 10861   00F6FC  EE20 F009          	lfsr	2,9
 10862   00F700  51C3               	movf	find_volume@fs& (0+255),w,b
 10863   00F702  26D9               	addwf	fsr2l,f,c
 10864   00F704  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 10865   00F706  22DA               	addwfc	fsr2h,f,c
 10866   00F708  50DE               	movf	postinc2,w,c
 10867   00F70A  10DE               	iorwf	postinc2,w,c
 10868   00F70C  B4D8               	btfsc	status,2,c
 10869   00F70E  EF8B  F07B         	goto	u10461
 10870   00F712  EF8D  F07B         	goto	u10460
 10871   00F716                     u10461:
 10872   00F716  EFCD  F07A         	goto	l7761
 10873   00F71A                     u10460:
 10874   00F71A                     
 10875                           ; BSR set to: 0
 10876   00F71A  EE20 F009          	lfsr	2,9
 10877   00F71E  51C3               	movf	find_volume@fs& (0+255),w,b
 10878   00F720  26D9               	addwf	fsr2l,f,c
 10879   00F722  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 10880   00F724  22DA               	addwfc	fsr2h,f,c
 10881   00F726  CFDE F083          	movff	postinc2,??_find_volume
 10882   00F72A  CFDD F084          	movff	postdec2,??_find_volume+1
 10883   00F72E  EE20 F009          	lfsr	2,9
 10884   00F732  51C3               	movf	find_volume@fs& (0+255),w,b
 10885   00F734  26D9               	addwf	fsr2l,f,c
 10886   00F736  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 10887   00F738  22DA               	addwfc	fsr2h,f,c
 10888   00F73A  CFDE F085          	movff	postinc2,??_find_volume+2
 10889   00F73E  CFDD F086          	movff	postdec2,??_find_volume+3
 10890   00F742  0EFF               	movlw	255
 10891   00F744  2585               	addwf	(??_find_volume+2)& (0+255),w,b
 10892   00F746  6F87               	movwf	(??_find_volume+4)& (0+255),b
 10893   00F748  0EFF               	movlw	255
 10894   00F74A  2186               	addwfc	(??_find_volume+3)& (0+255),w,b
 10895   00F74C  6F88               	movwf	(??_find_volume+5)& (0+255),b
 10896   00F74E  5183               	movf	??_find_volume& (0+255),w,b
 10897   00F750  1587               	andwf	(??_find_volume+4)& (0+255),w,b
 10898   00F752  6F89               	movwf	(??_find_volume+6)& (0+255),b
 10899   00F754  5184               	movf	(??_find_volume+1)& (0+255),w,b
 10900   00F756  1588               	andwf	(??_find_volume+5)& (0+255),w,b
 10901   00F758  6F8A               	movwf	(??_find_volume+7)& (0+255),b
 10902   00F75A  5189               	movf	(??_find_volume+6)& (0+255),w,b
 10903   00F75C  118A               	iorwf	(??_find_volume+7)& (0+255),w,b
 10904   00F75E  B4D8               	btfsc	status,2,c
 10905   00F760  EFB4  F07B         	goto	u10471
 10906   00F764  EFB6  F07B         	goto	u10470
 10907   00F768                     u10471:
 10908   00F768  EFB8  F07B         	goto	l7801
 10909   00F76C                     u10470:
 10910   00F76C  EFCD  F07A         	goto	l7761
 10911   00F770                     l7801:
 10912                           
 10913                           ; BSR set to: 0
 10914                           ;mcc_generated_files/fatfs/ff.c: 3340:   fs->n_rootdir = ld_word(fs->win + 17);
 10915   00F770  0E44               	movlw	68
 10916   00F772  25C3               	addwf	find_volume@fs& (0+255),w,b
 10917   00F774  6E01               	movwf	ld_word@ptr^0,c
 10918   00F776  0E00               	movlw	0
 10919   00F778  21C4               	addwfc	(find_volume@fs+1)& (0+255),w,b
 10920   00F77A  6E02               	movwf	(ld_word@ptr+1)^0,c
 10921   00F77C  ECE4  F045         	call	_ld_word	;wreg free
 10922   00F780  0100               	movlb	0	; () banked
 10923   00F782  EE20 F007          	lfsr	2,7
 10924   00F786  51C3               	movf	find_volume@fs& (0+255),w,b
 10925   00F788  26D9               	addwf	fsr2l,f,c
 10926   00F78A  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 10927   00F78C  22DA               	addwfc	fsr2h,f,c
 10928   00F78E  C001  FFDE         	movff	?_ld_word,postinc2
 10929   00F792  C002  FFDD         	movff	?_ld_word+1,postdec2
 10930   00F796                     
 10931                           ; BSR set to: 0
 10932                           ;mcc_generated_files/fatfs/ff.c: 3341:   if (fs->n_rootdir % (((UINT)512) / 32)) return 
      +                          FR_NO_FILESYSTEM;
 10933   00F796  EE20 F007          	lfsr	2,7
 10934   00F79A  51C3               	movf	find_volume@fs& (0+255),w,b
 10935   00F79C  26D9               	addwf	fsr2l,f,c
 10936   00F79E  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 10937   00F7A0  22DA               	addwfc	fsr2h,f,c
 10938   00F7A2  CFDE F083          	movff	postinc2,??_find_volume
 10939   00F7A6  CFDD F084          	movff	postdec2,??_find_volume+1
 10940   00F7AA  0E0F               	movlw	15
 10941   00F7AC  1783               	andwf	??_find_volume& (0+255),f,b
 10942   00F7AE  0E00               	movlw	0
 10943   00F7B0  1784               	andwf	(??_find_volume+1)& (0+255),f,b
 10944   00F7B2  5183               	movf	??_find_volume& (0+255),w,b
 10945   00F7B4  1184               	iorwf	(??_find_volume+1)& (0+255),w,b
 10946   00F7B6  B4D8               	btfsc	status,2,c
 10947   00F7B8  EFE0  F07B         	goto	u10481
 10948   00F7BC  EFE2  F07B         	goto	u10480
 10949   00F7C0                     u10481:
 10950   00F7C0  EFE4  F07B         	goto	l7809
 10951   00F7C4                     u10480:
 10952   00F7C4  EFCD  F07A         	goto	l7761
 10953   00F7C8                     l7809:
 10954                           
 10955                           ; BSR set to: 0
 10956                           ;mcc_generated_files/fatfs/ff.c: 3343:   tsect = ld_word(fs->win + 19);
 10957   00F7C8  0E46               	movlw	70
 10958   00F7CA  25C3               	addwf	find_volume@fs& (0+255),w,b
 10959   00F7CC  6E01               	movwf	ld_word@ptr^0,c
 10960   00F7CE  0E00               	movlw	0
 10961   00F7D0  21C4               	addwfc	(find_volume@fs+1)& (0+255),w,b
 10962   00F7D2  6E02               	movwf	(ld_word@ptr+1)^0,c
 10963   00F7D4  ECE4  F045         	call	_ld_word	;wreg free
 10964   00F7D8  C001  F0AF         	movff	?_ld_word,find_volume@tsect
 10965   00F7DC  C002  F0B0         	movff	?_ld_word+1,find_volume@tsect+1
 10966   00F7E0  0100               	movlb	0	; () banked
 10967   00F7E2  6BB1               	clrf	(find_volume@tsect+2)& (0+255),b
 10968   00F7E4  6BB2               	clrf	(find_volume@tsect+3)& (0+255),b
 10969   00F7E6                     
 10970                           ; BSR set to: 0
 10971                           ;mcc_generated_files/fatfs/ff.c: 3344:   if (tsect == 0) tsect = ld_dword(fs->win + 32);
 10972   00F7E6  51AF               	movf	find_volume@tsect& (0+255),w,b
 10973   00F7E8  11B0               	iorwf	(find_volume@tsect+1)& (0+255),w,b
 10974   00F7EA  11B1               	iorwf	(find_volume@tsect+2)& (0+255),w,b
 10975   00F7EC  11B2               	iorwf	(find_volume@tsect+3)& (0+255),w,b
 10976   00F7EE  A4D8               	btfss	status,2,c
 10977   00F7F0  EFFC  F07B         	goto	u10491
 10978   00F7F4  EFFE  F07B         	goto	u10490
 10979   00F7F8                     u10491:
 10980   00F7F8  EF0E  F07C         	goto	l945
 10981   00F7FC                     u10490:
 10982   00F7FC                     
 10983                           ; BSR set to: 0
 10984   00F7FC  0E53               	movlw	83
 10985   00F7FE  25C3               	addwf	find_volume@fs& (0+255),w,b
 10986   00F800  6E01               	movwf	ld_dword@ptr^0,c
 10987   00F802  0E00               	movlw	0
 10988   00F804  21C4               	addwfc	(find_volume@fs+1)& (0+255),w,b
 10989   00F806  6E02               	movwf	(ld_dword@ptr+1)^0,c
 10990   00F808  EC63  F04A         	call	_ld_dword	;wreg free
 10991   00F80C  C001  F0AF         	movff	?_ld_dword,find_volume@tsect
 10992   00F810  C002  F0B0         	movff	?_ld_dword+1,find_volume@tsect+1
 10993   00F814  C003  F0B1         	movff	?_ld_dword+2,find_volume@tsect+2
 10994   00F818  C004  F0B2         	movff	?_ld_dword+3,find_volume@tsect+3
 10995   00F81C                     l945:
 10996                           
 10997                           ;mcc_generated_files/fatfs/ff.c: 3346:   nrsv = ld_word(fs->win + 14);
 10998   00F81C  0E41               	movlw	65
 10999   00F81E  0100               	movlb	0	; () banked
 11000   00F820  25C3               	addwf	find_volume@fs& (0+255),w,b
 11001   00F822  6E01               	movwf	ld_word@ptr^0,c
 11002   00F824  0E00               	movlw	0
 11003   00F826  21C4               	addwfc	(find_volume@fs+1)& (0+255),w,b
 11004   00F828  6E02               	movwf	(ld_word@ptr+1)^0,c
 11005   00F82A  ECE4  F045         	call	_ld_word	;wreg free
 11006   00F82E  C001  F0AD         	movff	?_ld_word,find_volume@nrsv
 11007   00F832  C002  F0AE         	movff	?_ld_word+1,find_volume@nrsv+1
 11008   00F836                     
 11009                           ;mcc_generated_files/fatfs/ff.c: 3347:   if (nrsv == 0) return FR_NO_FILESYSTEM;
 11010   00F836  0100               	movlb	0	; () banked
 11011   00F838  51AD               	movf	find_volume@nrsv& (0+255),w,b
 11012   00F83A  11AE               	iorwf	(find_volume@nrsv+1)& (0+255),w,b
 11013   00F83C  A4D8               	btfss	status,2,c
 11014   00F83E  EF23  F07C         	goto	u10501
 11015   00F842  EF25  F07C         	goto	u10500
 11016   00F846                     u10501:
 11017   00F846  EF27  F07C         	goto	l7821
 11018   00F84A                     u10500:
 11019   00F84A  EFCD  F07A         	goto	l7761
 11020   00F84E                     l7821:
 11021                           
 11022                           ; BSR set to: 0
 11023                           ;mcc_generated_files/fatfs/ff.c: 3350:   sysect = nrsv + fasize + fs->n_rootdir / (((UIN
      +                          T)512) / 32);
 11024   00F84E  EE20 F007          	lfsr	2,7
 11025   00F852  51C3               	movf	find_volume@fs& (0+255),w,b
 11026   00F854  26D9               	addwf	fsr2l,f,c
 11027   00F856  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 11028   00F858  22DA               	addwfc	fsr2h,f,c
 11029   00F85A  CFDE F083          	movff	postinc2,??_find_volume
 11030   00F85E  CFDD F084          	movff	postdec2,??_find_volume+1
 11031   00F862  0E04               	movlw	4
 11032   00F864  6F85               	movwf	(??_find_volume+2)& (0+255),b
 11033   00F866                     u10515:
 11034   00F866  90D8               	bcf	status,0,c
 11035   00F868  3384               	rrcf	(??_find_volume+1)& (0+255),f,b
 11036   00F86A  3383               	rrcf	??_find_volume& (0+255),f,b
 11037   00F86C  2F85               	decfsz	(??_find_volume+2)& (0+255),f,b
 11038   00F86E  EF33  F07C         	goto	u10515
 11039   00F872  51AD               	movf	find_volume@nrsv& (0+255),w,b
 11040   00F874  2583               	addwf	??_find_volume& (0+255),w,b
 11041   00F876  6F86               	movwf	(??_find_volume+3)& (0+255),b
 11042   00F878  51AE               	movf	(find_volume@nrsv+1)& (0+255),w,b
 11043   00F87A  2184               	addwfc	(??_find_volume+1)& (0+255),w,b
 11044   00F87C  6F87               	movwf	(??_find_volume+4)& (0+255),b
 11045   00F87E  6B88               	clrf	(??_find_volume+5)& (0+255),b
 11046   00F880  B0D8               	btfsc	status,0,c
 11047   00F882  2B88               	incf	(??_find_volume+5)& (0+255),f,b
 11048   00F884  6B89               	clrf	(??_find_volume+6)& (0+255),b
 11049   00F886  51B8               	movf	find_volume@fasize& (0+255),w,b
 11050   00F888  2586               	addwf	(??_find_volume+3)& (0+255),w,b
 11051   00F88A  6FA7               	movwf	find_volume@sysect& (0+255),b
 11052   00F88C  51B9               	movf	(find_volume@fasize+1)& (0+255),w,b
 11053   00F88E  2187               	addwfc	(??_find_volume+4)& (0+255),w,b
 11054   00F890  6FA8               	movwf	(find_volume@sysect+1)& (0+255),b
 11055   00F892  51BA               	movf	(find_volume@fasize+2)& (0+255),w,b
 11056   00F894  2188               	addwfc	(??_find_volume+5)& (0+255),w,b
 11057   00F896  6FA9               	movwf	(find_volume@sysect+2)& (0+255),b
 11058   00F898  51BB               	movf	(find_volume@fasize+3)& (0+255),w,b
 11059   00F89A  2189               	addwfc	(??_find_volume+6)& (0+255),w,b
 11060   00F89C  6FAA               	movwf	(find_volume@sysect+3)& (0+255),b
 11061   00F89E                     
 11062                           ; BSR set to: 0
 11063                           ;mcc_generated_files/fatfs/ff.c: 3351:   if (tsect < sysect) return FR_NO_FILESYSTEM;
 11064   00F89E  51A7               	movf	find_volume@sysect& (0+255),w,b
 11065   00F8A0  5DAF               	subwf	find_volume@tsect& (0+255),w,b
 11066   00F8A2  51A8               	movf	(find_volume@sysect+1)& (0+255),w,b
 11067   00F8A4  59B0               	subwfb	(find_volume@tsect+1)& (0+255),w,b
 11068   00F8A6  51A9               	movf	(find_volume@sysect+2)& (0+255),w,b
 11069   00F8A8  59B1               	subwfb	(find_volume@tsect+2)& (0+255),w,b
 11070   00F8AA  51AA               	movf	(find_volume@sysect+3)& (0+255),w,b
 11071   00F8AC  59B2               	subwfb	(find_volume@tsect+3)& (0+255),w,b
 11072   00F8AE  B0D8               	btfsc	status,0,c
 11073   00F8B0  EF5C  F07C         	goto	u10521
 11074   00F8B4  EF5E  F07C         	goto	u10520
 11075   00F8B8                     u10521:
 11076   00F8B8  EF60  F07C         	goto	l7829
 11077   00F8BC                     u10520:
 11078   00F8BC  EFCD  F07A         	goto	l7761
 11079   00F8C0                     l7829:
 11080                           
 11081                           ; BSR set to: 0
 11082                           ;mcc_generated_files/fatfs/ff.c: 3352:   nclst = (tsect - sysect) / fs->csize;
 11083   00F8C0  51A7               	movf	find_volume@sysect& (0+255),w,b
 11084   00F8C2  5DAF               	subwf	find_volume@tsect& (0+255),w,b
 11085   00F8C4  6E01               	movwf	___lldiv@dividend^0,c
 11086   00F8C6  51A8               	movf	(find_volume@sysect+1)& (0+255),w,b
 11087   00F8C8  59B0               	subwfb	(find_volume@tsect+1)& (0+255),w,b
 11088   00F8CA  6E02               	movwf	(___lldiv@dividend+1)^0,c
 11089   00F8CC  51A9               	movf	(find_volume@sysect+2)& (0+255),w,b
 11090   00F8CE  59B1               	subwfb	(find_volume@tsect+2)& (0+255),w,b
 11091   00F8D0  6E03               	movwf	(___lldiv@dividend+2)^0,c
 11092   00F8D2  51AA               	movf	(find_volume@sysect+3)& (0+255),w,b
 11093   00F8D4  59B2               	subwfb	(find_volume@tsect+3)& (0+255),w,b
 11094   00F8D6  6E04               	movwf	(___lldiv@dividend+3)^0,c
 11095   00F8D8  EE20 F009          	lfsr	2,9
 11096   00F8DC  51C3               	movf	find_volume@fs& (0+255),w,b
 11097   00F8DE  26D9               	addwf	fsr2l,f,c
 11098   00F8E0  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 11099   00F8E2  22DA               	addwfc	fsr2h,f,c
 11100   00F8E4  CFDE F083          	movff	postinc2,??_find_volume
 11101   00F8E8  CFDD F084          	movff	postdec2,??_find_volume+1
 11102   00F8EC  C083  F005         	movff	??_find_volume,___lldiv@divisor
 11103   00F8F0  C084  F006         	movff	??_find_volume+1,___lldiv@divisor+1
 11104   00F8F4  6A07               	clrf	(___lldiv@divisor+2)^0,c
 11105   00F8F6  6A08               	clrf	(___lldiv@divisor+3)^0,c
 11106   00F8F8  ECB5  F049         	call	___lldiv	;wreg free
 11107   00F8FC  C001  F0B4         	movff	?___lldiv,find_volume@nclst
 11108   00F900  C002  F0B5         	movff	?___lldiv+1,find_volume@nclst+1
 11109   00F904  C003  F0B6         	movff	?___lldiv+2,find_volume@nclst+2
 11110   00F908  C004  F0B7         	movff	?___lldiv+3,find_volume@nclst+3
 11111   00F90C                     
 11112                           ;mcc_generated_files/fatfs/ff.c: 3353:   if (nclst == 0) return FR_NO_FILESYSTEM;
 11113   00F90C  0100               	movlb	0	; () banked
 11114   00F90E  51B4               	movf	find_volume@nclst& (0+255),w,b
 11115   00F910  11B5               	iorwf	(find_volume@nclst+1)& (0+255),w,b
 11116   00F912  11B6               	iorwf	(find_volume@nclst+2)& (0+255),w,b
 11117   00F914  11B7               	iorwf	(find_volume@nclst+3)& (0+255),w,b
 11118   00F916  A4D8               	btfss	status,2,c
 11119   00F918  EF90  F07C         	goto	u10531
 11120   00F91C  EF92  F07C         	goto	u10530
 11121   00F920                     u10531:
 11122   00F920  EF94  F07C         	goto	l7837
 11123   00F924                     u10530:
 11124   00F924  EFCD  F07A         	goto	l7761
 11125   00F928                     l7837:
 11126                           
 11127                           ; BSR set to: 0
 11128                           ;mcc_generated_files/fatfs/ff.c: 3354:   fmt = 0;
 11129   00F928  0E00               	movlw	0
 11130   00F92A  6FC2               	movwf	find_volume@fmt& (0+255),b
 11131   00F92C                     
 11132                           ; BSR set to: 0
 11133                           ;mcc_generated_files/fatfs/ff.c: 3355:   if (nclst <= 0x0FFFFFF5) fmt = 3;
 11134   00F92C  0EF6               	movlw	246
 11135   00F92E  5DB4               	subwf	find_volume@nclst& (0+255),w,b
 11136   00F930  0EFF               	movlw	255
 11137   00F932  59B5               	subwfb	(find_volume@nclst+1)& (0+255),w,b
 11138   00F934  0EFF               	movlw	255
 11139   00F936  59B6               	subwfb	(find_volume@nclst+2)& (0+255),w,b
 11140   00F938  0E0F               	movlw	15
 11141   00F93A  59B7               	subwfb	(find_volume@nclst+3)& (0+255),w,b
 11142   00F93C  B0D8               	btfsc	status,0,c
 11143   00F93E  EFA3  F07C         	goto	u10541
 11144   00F942  EFA5  F07C         	goto	u10540
 11145   00F946                     u10541:
 11146   00F946  EFA7  F07C         	goto	l7843
 11147   00F94A                     u10540:
 11148   00F94A                     
 11149                           ; BSR set to: 0
 11150   00F94A  0E03               	movlw	3
 11151   00F94C  6FC2               	movwf	find_volume@fmt& (0+255),b
 11152   00F94E                     l7843:
 11153                           
 11154                           ; BSR set to: 0
 11155                           ;mcc_generated_files/fatfs/ff.c: 3356:   if (nclst <= 0xFFF5) fmt = 2;
 11156   00F94E  51B7               	movf	(find_volume@nclst+3)& (0+255),w,b
 11157   00F950  11B6               	iorwf	(find_volume@nclst+2)& (0+255),w,b
 11158   00F952  E109               	bnz	u10551
 11159   00F954  0EF6               	movlw	246
 11160   00F956  5DB4               	subwf	find_volume@nclst& (0+255),w,b
 11161   00F958  0EFF               	movlw	255
 11162   00F95A  59B5               	subwfb	(find_volume@nclst+1)& (0+255),w,b
 11163   00F95C  B0D8               	btfsc	status,0,c
 11164   00F95E  EFB3  F07C         	goto	u10551
 11165   00F962  EFB5  F07C         	goto	u10550
 11166   00F966                     u10551:
 11167   00F966  EFB7  F07C         	goto	l7847
 11168   00F96A                     u10550:
 11169   00F96A                     
 11170                           ; BSR set to: 0
 11171   00F96A  0E02               	movlw	2
 11172   00F96C  6FC2               	movwf	find_volume@fmt& (0+255),b
 11173   00F96E                     l7847:
 11174                           
 11175                           ; BSR set to: 0
 11176                           ;mcc_generated_files/fatfs/ff.c: 3357:   if (nclst <= 0xFF5) fmt = 1;
 11177   00F96E  51B7               	movf	(find_volume@nclst+3)& (0+255),w,b
 11178   00F970  11B6               	iorwf	(find_volume@nclst+2)& (0+255),w,b
 11179   00F972  E109               	bnz	u10561
 11180   00F974  0EF6               	movlw	246
 11181   00F976  5DB4               	subwf	find_volume@nclst& (0+255),w,b
 11182   00F978  0E0F               	movlw	15
 11183   00F97A  59B5               	subwfb	(find_volume@nclst+1)& (0+255),w,b
 11184   00F97C  B0D8               	btfsc	status,0,c
 11185   00F97E  EFC3  F07C         	goto	u10561
 11186   00F982  EFC5  F07C         	goto	u10560
 11187   00F986                     u10561:
 11188   00F986  EFC7  F07C         	goto	l951
 11189   00F98A                     u10560:
 11190   00F98A                     
 11191                           ; BSR set to: 0
 11192   00F98A  0E01               	movlw	1
 11193   00F98C  6FC2               	movwf	find_volume@fmt& (0+255),b
 11194   00F98E                     l951:
 11195                           
 11196                           ; BSR set to: 0
 11197                           ;mcc_generated_files/fatfs/ff.c: 3358:   if (fmt == 0) return FR_NO_FILESYSTEM;
 11198   00F98E  51C2               	movf	find_volume@fmt& (0+255),w,b
 11199   00F990  A4D8               	btfss	status,2,c
 11200   00F992  EFCD  F07C         	goto	u10571
 11201   00F996  EFCF  F07C         	goto	u10570
 11202   00F99A                     u10571:
 11203   00F99A  EFD1  F07C         	goto	l7855
 11204   00F99E                     u10570:
 11205   00F99E  EFCD  F07A         	goto	l7761
 11206   00F9A2                     l7855:
 11207                           
 11208                           ; BSR set to: 0
 11209                           ;mcc_generated_files/fatfs/ff.c: 3361:   fs->n_fatent = nclst + 2;
 11210   00F9A2  0E02               	movlw	2
 11211   00F9A4  25B4               	addwf	find_volume@nclst& (0+255),w,b
 11212   00F9A6  6F83               	movwf	??_find_volume& (0+255),b
 11213   00F9A8  0E00               	movlw	0
 11214   00F9AA  21B5               	addwfc	(find_volume@nclst+1)& (0+255),w,b
 11215   00F9AC  6F84               	movwf	(??_find_volume+1)& (0+255),b
 11216   00F9AE  0E00               	movlw	0
 11217   00F9B0  21B6               	addwfc	(find_volume@nclst+2)& (0+255),w,b
 11218   00F9B2  6F85               	movwf	(??_find_volume+2)& (0+255),b
 11219   00F9B4  0E00               	movlw	0
 11220   00F9B6  21B7               	addwfc	(find_volume@nclst+3)& (0+255),w,b
 11221   00F9B8  6F86               	movwf	(??_find_volume+3)& (0+255),b
 11222   00F9BA  EE20 F017          	lfsr	2,23
 11223   00F9BE  51C3               	movf	find_volume@fs& (0+255),w,b
 11224   00F9C0  26D9               	addwf	fsr2l,f,c
 11225   00F9C2  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 11226   00F9C4  22DA               	addwfc	fsr2h,f,c
 11227   00F9C6  C083  FFDE         	movff	??_find_volume,postinc2
 11228   00F9CA  C084  FFDE         	movff	??_find_volume+1,postinc2
 11229   00F9CE  C085  FFDE         	movff	??_find_volume+2,postinc2
 11230   00F9D2  C086  FFDE         	movff	??_find_volume+3,postinc2
 11231                           
 11232                           ;mcc_generated_files/fatfs/ff.c: 3362:   fs->volbase = bsect;
 11233   00F9D6  EE20 F01F          	lfsr	2,31
 11234   00F9DA  51C3               	movf	find_volume@fs& (0+255),w,b
 11235   00F9DC  26D9               	addwf	fsr2l,f,c
 11236   00F9DE  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 11237   00F9E0  22DA               	addwfc	fsr2h,f,c
 11238   00F9E2  C0BC  FFDE         	movff	find_volume@bsect,postinc2
 11239   00F9E6  C0BD  FFDE         	movff	find_volume@bsect+1,postinc2
 11240   00F9EA  C0BE  FFDE         	movff	find_volume@bsect+2,postinc2
 11241   00F9EE  C0BF  FFDE         	movff	find_volume@bsect+3,postinc2
 11242                           
 11243                           ;mcc_generated_files/fatfs/ff.c: 3363:   fs->fatbase = bsect + nrsv;
 11244   00F9F2  51AD               	movf	find_volume@nrsv& (0+255),w,b
 11245   00F9F4  25BC               	addwf	find_volume@bsect& (0+255),w,b
 11246   00F9F6  6F83               	movwf	??_find_volume& (0+255),b
 11247   00F9F8  51AE               	movf	(find_volume@nrsv+1)& (0+255),w,b
 11248   00F9FA  21BD               	addwfc	(find_volume@bsect+1)& (0+255),w,b
 11249   00F9FC  6F84               	movwf	(??_find_volume+1)& (0+255),b
 11250   00F9FE  0E00               	movlw	0
 11251   00FA00  21BE               	addwfc	(find_volume@bsect+2)& (0+255),w,b
 11252   00FA02  6F85               	movwf	(??_find_volume+2)& (0+255),b
 11253   00FA04  0E00               	movlw	0
 11254   00FA06  21BF               	addwfc	(find_volume@bsect+3)& (0+255),w,b
 11255   00FA08  6F86               	movwf	(??_find_volume+3)& (0+255),b
 11256   00FA0A  EE20 F023          	lfsr	2,35
 11257   00FA0E  51C3               	movf	find_volume@fs& (0+255),w,b
 11258   00FA10  26D9               	addwf	fsr2l,f,c
 11259   00FA12  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 11260   00FA14  22DA               	addwfc	fsr2h,f,c
 11261   00FA16  C083  FFDE         	movff	??_find_volume,postinc2
 11262   00FA1A  C084  FFDE         	movff	??_find_volume+1,postinc2
 11263   00FA1E  C085  FFDE         	movff	??_find_volume+2,postinc2
 11264   00FA22  C086  FFDE         	movff	??_find_volume+3,postinc2
 11265                           
 11266                           ;mcc_generated_files/fatfs/ff.c: 3364:   fs->database = bsect + sysect;
 11267   00FA26  51A7               	movf	find_volume@sysect& (0+255),w,b
 11268   00FA28  25BC               	addwf	find_volume@bsect& (0+255),w,b
 11269   00FA2A  6F83               	movwf	??_find_volume& (0+255),b
 11270   00FA2C  51A8               	movf	(find_volume@sysect+1)& (0+255),w,b
 11271   00FA2E  21BD               	addwfc	(find_volume@bsect+1)& (0+255),w,b
 11272   00FA30  6F84               	movwf	(??_find_volume+1)& (0+255),b
 11273   00FA32  51A9               	movf	(find_volume@sysect+2)& (0+255),w,b
 11274   00FA34  21BE               	addwfc	(find_volume@bsect+2)& (0+255),w,b
 11275   00FA36  6F85               	movwf	(??_find_volume+2)& (0+255),b
 11276   00FA38  51AA               	movf	(find_volume@sysect+3)& (0+255),w,b
 11277   00FA3A  21BF               	addwfc	(find_volume@bsect+3)& (0+255),w,b
 11278   00FA3C  6F86               	movwf	(??_find_volume+3)& (0+255),b
 11279   00FA3E  EE20 F02B          	lfsr	2,43
 11280   00FA42  51C3               	movf	find_volume@fs& (0+255),w,b
 11281   00FA44  26D9               	addwf	fsr2l,f,c
 11282   00FA46  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 11283   00FA48  22DA               	addwfc	fsr2h,f,c
 11284   00FA4A  C083  FFDE         	movff	??_find_volume,postinc2
 11285   00FA4E  C084  FFDE         	movff	??_find_volume+1,postinc2
 11286   00FA52  C085  FFDE         	movff	??_find_volume+2,postinc2
 11287   00FA56  C086  FFDE         	movff	??_find_volume+3,postinc2
 11288   00FA5A                     
 11289                           ; BSR set to: 0
 11290                           ;mcc_generated_files/fatfs/ff.c: 3365:   if (fmt == 3) {
 11291   00FA5A  0E03               	movlw	3
 11292   00FA5C  19C2               	xorwf	find_volume@fmt& (0+255),w,b
 11293   00FA5E  A4D8               	btfss	status,2,c
 11294   00FA60  EF34  F07D         	goto	u10581
 11295   00FA64  EF36  F07D         	goto	u10580
 11296   00FA68                     u10581:
 11297   00FA68  EF93  F07D         	goto	l7875
 11298   00FA6C                     u10580:
 11299   00FA6C                     
 11300                           ; BSR set to: 0
 11301                           ;mcc_generated_files/fatfs/ff.c: 3366:    if (ld_word(fs->win + 42) != 0) return FR_NO_F
      +                          ILESYSTEM;
 11302   00FA6C  0E5D               	movlw	93
 11303   00FA6E  25C3               	addwf	find_volume@fs& (0+255),w,b
 11304   00FA70  6E01               	movwf	ld_word@ptr^0,c
 11305   00FA72  0E00               	movlw	0
 11306   00FA74  21C4               	addwfc	(find_volume@fs+1)& (0+255),w,b
 11307   00FA76  6E02               	movwf	(ld_word@ptr+1)^0,c
 11308   00FA78  ECE4  F045         	call	_ld_word	;wreg free
 11309   00FA7C  5001               	movf	?_ld_word^0,w,c
 11310   00FA7E  1002               	iorwf	(?_ld_word+1)^0,w,c
 11311   00FA80  B4D8               	btfsc	status,2,c
 11312   00FA82  EF45  F07D         	goto	u10591
 11313   00FA86  EF47  F07D         	goto	u10590
 11314   00FA8A                     u10591:
 11315   00FA8A  EF49  F07D         	goto	l7865
 11316   00FA8E                     u10590:
 11317   00FA8E  EFCD  F07A         	goto	l7761
 11318   00FA92                     l7865:
 11319                           
 11320                           ;mcc_generated_files/fatfs/ff.c: 3367:    if (fs->n_rootdir != 0) return FR_NO_FILESYSTE
      +                          M;
 11321   00FA92  0100               	movlb	0	; () banked
 11322   00FA94  EE20 F007          	lfsr	2,7
 11323   00FA98  51C3               	movf	find_volume@fs& (0+255),w,b
 11324   00FA9A  26D9               	addwf	fsr2l,f,c
 11325   00FA9C  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 11326   00FA9E  22DA               	addwfc	fsr2h,f,c
 11327   00FAA0  50DE               	movf	postinc2,w,c
 11328   00FAA2  10DE               	iorwf	postinc2,w,c
 11329   00FAA4  B4D8               	btfsc	status,2,c
 11330   00FAA6  EF57  F07D         	goto	u10601
 11331   00FAAA  EF59  F07D         	goto	u10600
 11332   00FAAE                     u10601:
 11333   00FAAE  EF5B  F07D         	goto	l7871
 11334   00FAB2                     u10600:
 11335   00FAB2  EFCD  F07A         	goto	l7761
 11336   00FAB6                     l7871:
 11337                           
 11338                           ; BSR set to: 0
 11339                           ;mcc_generated_files/fatfs/ff.c: 3368:    fs->dirbase = ld_dword(fs->win + 44);
 11340   00FAB6  0E5F               	movlw	95
 11341   00FAB8  25C3               	addwf	find_volume@fs& (0+255),w,b
 11342   00FABA  6E01               	movwf	ld_dword@ptr^0,c
 11343   00FABC  0E00               	movlw	0
 11344   00FABE  21C4               	addwfc	(find_volume@fs+1)& (0+255),w,b
 11345   00FAC0  6E02               	movwf	(ld_dword@ptr+1)^0,c
 11346   00FAC2  EC63  F04A         	call	_ld_dword	;wreg free
 11347   00FAC6  0100               	movlb	0	; () banked
 11348   00FAC8  EE20 F027          	lfsr	2,39
 11349   00FACC  51C3               	movf	find_volume@fs& (0+255),w,b
 11350   00FACE  26D9               	addwf	fsr2l,f,c
 11351   00FAD0  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 11352   00FAD2  22DA               	addwfc	fsr2h,f,c
 11353   00FAD4  C001  FFDE         	movff	?_ld_dword,postinc2
 11354   00FAD8  C002  FFDE         	movff	?_ld_dword+1,postinc2
 11355   00FADC  C003  FFDE         	movff	?_ld_dword+2,postinc2
 11356   00FAE0  C004  FFDE         	movff	?_ld_dword+3,postinc2
 11357   00FAE4                     
 11358                           ; BSR set to: 0
 11359                           ;mcc_generated_files/fatfs/ff.c: 3369:    szbfat = fs->n_fatent * 4;
 11360   00FAE4  EE20 F017          	lfsr	2,23
 11361   00FAE8  51C3               	movf	find_volume@fs& (0+255),w,b
 11362   00FAEA  26D9               	addwf	fsr2l,f,c
 11363   00FAEC  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 11364   00FAEE  22DA               	addwfc	fsr2h,f,c
 11365   00FAF0  CFDE F083          	movff	postinc2,??_find_volume
 11366   00FAF4  CFDE F084          	movff	postinc2,??_find_volume+1
 11367   00FAF8  CFDE F085          	movff	postinc2,??_find_volume+2
 11368   00FAFC  CFDE F086          	movff	postinc2,??_find_volume+3
 11369   00FB00  0E02               	movlw	2
 11370   00FB02                     u10615:
 11371   00FB02  90D8               	bcf	status,0,c
 11372   00FB04  3783               	rlcf	??_find_volume& (0+255),f,b
 11373   00FB06  3784               	rlcf	(??_find_volume+1)& (0+255),f,b
 11374   00FB08  3785               	rlcf	(??_find_volume+2)& (0+255),f,b
 11375   00FB0A  3786               	rlcf	(??_find_volume+3)& (0+255),f,b
 11376   00FB0C  2EE8               	decfsz	wreg,f,c
 11377   00FB0E  EF81  F07D         	goto	u10615
 11378   00FB12  C083  F0A1         	movff	??_find_volume,find_volume@szbfat
 11379   00FB16  C084  F0A2         	movff	??_find_volume+1,find_volume@szbfat+1
 11380   00FB1A  C085  F0A3         	movff	??_find_volume+2,find_volume@szbfat+2
 11381   00FB1E  C086  F0A4         	movff	??_find_volume+3,find_volume@szbfat+3
 11382                           
 11383                           ;mcc_generated_files/fatfs/ff.c: 3370:   } else {
 11384   00FB22  EF32  F07E         	goto	l956
 11385   00FB26                     l7875:
 11386                           
 11387                           ; BSR set to: 0
 11388                           ;mcc_generated_files/fatfs/ff.c: 3371:    if (fs->n_rootdir == 0) return FR_NO_FILESYSTE
      +                          M;
 11389   00FB26  EE20 F007          	lfsr	2,7
 11390   00FB2A  51C3               	movf	find_volume@fs& (0+255),w,b
 11391   00FB2C  26D9               	addwf	fsr2l,f,c
 11392   00FB2E  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 11393   00FB30  22DA               	addwfc	fsr2h,f,c
 11394   00FB32  50DE               	movf	postinc2,w,c
 11395   00FB34  10DE               	iorwf	postinc2,w,c
 11396   00FB36  A4D8               	btfss	status,2,c
 11397   00FB38  EFA0  F07D         	goto	u10621
 11398   00FB3C  EFA2  F07D         	goto	u10620
 11399   00FB40                     u10621:
 11400   00FB40  EFA4  F07D         	goto	l7881
 11401   00FB44                     u10620:
 11402   00FB44  EFCD  F07A         	goto	l7761
 11403   00FB48                     l7881:
 11404                           
 11405                           ; BSR set to: 0
 11406                           ;mcc_generated_files/fatfs/ff.c: 3372:    fs->dirbase = fs->fatbase + fasize;
 11407   00FB48  EE20 F023          	lfsr	2,35
 11408   00FB4C  51C3               	movf	find_volume@fs& (0+255),w,b
 11409   00FB4E  26D9               	addwf	fsr2l,f,c
 11410   00FB50  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 11411   00FB52  22DA               	addwfc	fsr2h,f,c
 11412   00FB54  CFDE F083          	movff	postinc2,??_find_volume
 11413   00FB58  CFDE F084          	movff	postinc2,??_find_volume+1
 11414   00FB5C  CFDE F085          	movff	postinc2,??_find_volume+2
 11415   00FB60  CFDE F086          	movff	postinc2,??_find_volume+3
 11416   00FB64  51B8               	movf	find_volume@fasize& (0+255),w,b
 11417   00FB66  2583               	addwf	??_find_volume& (0+255),w,b
 11418   00FB68  6F87               	movwf	(??_find_volume+4)& (0+255),b
 11419   00FB6A  51B9               	movf	(find_volume@fasize+1)& (0+255),w,b
 11420   00FB6C  2184               	addwfc	(??_find_volume+1)& (0+255),w,b
 11421   00FB6E  6F88               	movwf	(??_find_volume+5)& (0+255),b
 11422   00FB70  51BA               	movf	(find_volume@fasize+2)& (0+255),w,b
 11423   00FB72  2185               	addwfc	(??_find_volume+2)& (0+255),w,b
 11424   00FB74  6F89               	movwf	(??_find_volume+6)& (0+255),b
 11425   00FB76  51BB               	movf	(find_volume@fasize+3)& (0+255),w,b
 11426   00FB78  2186               	addwfc	(??_find_volume+3)& (0+255),w,b
 11427   00FB7A  6F8A               	movwf	(??_find_volume+7)& (0+255),b
 11428   00FB7C  EE20 F027          	lfsr	2,39
 11429   00FB80  51C3               	movf	find_volume@fs& (0+255),w,b
 11430   00FB82  26D9               	addwf	fsr2l,f,c
 11431   00FB84  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 11432   00FB86  22DA               	addwfc	fsr2h,f,c
 11433   00FB88  C087  FFDE         	movff	??_find_volume+4,postinc2
 11434   00FB8C  C088  FFDE         	movff	??_find_volume+5,postinc2
 11435   00FB90  C089  FFDE         	movff	??_find_volume+6,postinc2
 11436   00FB94  C08A  FFDE         	movff	??_find_volume+7,postinc2
 11437   00FB98                     
 11438                           ; BSR set to: 0
 11439                           ;mcc_generated_files/fatfs/ff.c: 3373:    szbfat = (fmt == 2) ?
 11440   00FB98  0E02               	movlw	2
 11441   00FB9A  19C2               	xorwf	find_volume@fmt& (0+255),w,b
 11442   00FB9C  B4D8               	btfsc	status,2,c
 11443   00FB9E  EFD3  F07D         	goto	u10631
 11444   00FBA2  EFD5  F07D         	goto	u10630
 11445   00FBA6                     u10631:
 11446   00FBA6  EF1B  F07E         	goto	l7887
 11447   00FBAA                     u10630:
 11448   00FBAA                     
 11449                           ; BSR set to: 0
 11450   00FBAA  EE20 F017          	lfsr	2,23
 11451   00FBAE  51C3               	movf	find_volume@fs& (0+255),w,b
 11452   00FBB0  26D9               	addwf	fsr2l,f,c
 11453   00FBB2  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 11454   00FBB4  22DA               	addwfc	fsr2h,f,c
 11455   00FBB6  CFDE F083          	movff	postinc2,??_find_volume
 11456   00FBBA  CFDE F084          	movff	postinc2,??_find_volume+1
 11457   00FBBE  CFDE F085          	movff	postinc2,??_find_volume+2
 11458   00FBC2  CFDE F086          	movff	postinc2,??_find_volume+3
 11459   00FBC6  0E01               	movlw	1
 11460   00FBC8  1583               	andwf	??_find_volume& (0+255),w,b
 11461   00FBCA  6F87               	movwf	(??_find_volume+4)& (0+255),b
 11462   00FBCC  0E00               	movlw	0
 11463   00FBCE  1584               	andwf	(??_find_volume+1)& (0+255),w,b
 11464   00FBD0  6F88               	movwf	(??_find_volume+5)& (0+255),b
 11465   00FBD2  0E00               	movlw	0
 11466   00FBD4  1585               	andwf	(??_find_volume+2)& (0+255),w,b
 11467   00FBD6  6F89               	movwf	(??_find_volume+6)& (0+255),b
 11468   00FBD8  0E00               	movlw	0
 11469   00FBDA  1586               	andwf	(??_find_volume+3)& (0+255),w,b
 11470   00FBDC  6F8A               	movwf	(??_find_volume+7)& (0+255),b
 11471   00FBDE  EE20 F017          	lfsr	2,23
 11472   00FBE2  51C3               	movf	find_volume@fs& (0+255),w,b
 11473   00FBE4  26D9               	addwf	fsr2l,f,c
 11474   00FBE6  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 11475   00FBE8  22DA               	addwfc	fsr2h,f,c
 11476   00FBEA  CFDE F001          	movff	postinc2,___lmul@multiplier
 11477   00FBEE  CFDE F002          	movff	postinc2,___lmul@multiplier+1
 11478   00FBF2  CFDE F003          	movff	postinc2,___lmul@multiplier+2
 11479   00FBF6  CFDE F004          	movff	postinc2,___lmul@multiplier+3
 11480   00FBFA  0E03               	movlw	3
 11481   00FBFC  6E05               	movwf	___lmul@multiplicand^0,c
 11482   00FBFE  0E00               	movlw	0
 11483   00FC00  6E06               	movwf	(___lmul@multiplicand+1)^0,c
 11484   00FC02  0E00               	movlw	0
 11485   00FC04  6E07               	movwf	(___lmul@multiplicand+2)^0,c
 11486   00FC06  0E00               	movlw	0
 11487   00FC08  6E08               	movwf	(___lmul@multiplicand+3)^0,c
 11488   00FC0A  EC4F  F047         	call	___lmul	;wreg free
 11489   00FC0E  90D8               	bcf	status,0,c
 11490   00FC10  3204               	rrcf	(?___lmul+3)^0,f,c
 11491   00FC12  3203               	rrcf	(?___lmul+2)^0,f,c
 11492   00FC14  3202               	rrcf	(?___lmul+1)^0,f,c
 11493   00FC16  3201               	rrcf	?___lmul^0,f,c
 11494   00FC18  0100               	movlb	0	; () banked
 11495   00FC1A  5187               	movf	(??_find_volume+4)& (0+255),w,b
 11496   00FC1C  2401               	addwf	?___lmul^0,w,c
 11497   00FC1E  6FA1               	movwf	find_volume@szbfat& (0+255),b
 11498   00FC20  5188               	movf	(??_find_volume+5)& (0+255),w,b
 11499   00FC22  2002               	addwfc	(?___lmul+1)^0,w,c
 11500   00FC24  6FA2               	movwf	(find_volume@szbfat+1)& (0+255),b
 11501   00FC26  5189               	movf	(??_find_volume+6)& (0+255),w,b
 11502   00FC28  2003               	addwfc	(?___lmul+2)^0,w,c
 11503   00FC2A  6FA3               	movwf	(find_volume@szbfat+2)& (0+255),b
 11504   00FC2C  518A               	movf	(??_find_volume+7)& (0+255),w,b
 11505   00FC2E  2004               	addwfc	(?___lmul+3)^0,w,c
 11506   00FC30  6FA4               	movwf	(find_volume@szbfat+3)& (0+255),b
 11507   00FC32  EF32  F07E         	goto	l956
 11508   00FC36                     l7887:
 11509                           
 11510                           ; BSR set to: 0
 11511   00FC36  EE20 F017          	lfsr	2,23
 11512   00FC3A  51C3               	movf	find_volume@fs& (0+255),w,b
 11513   00FC3C  26D9               	addwf	fsr2l,f,c
 11514   00FC3E  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 11515   00FC40  22DA               	addwfc	fsr2h,f,c
 11516   00FC42  CFDE F083          	movff	postinc2,??_find_volume
 11517   00FC46  CFDE F084          	movff	postinc2,??_find_volume+1
 11518   00FC4A  CFDE F085          	movff	postinc2,??_find_volume+2
 11519   00FC4E  CFDE F086          	movff	postinc2,??_find_volume+3
 11520   00FC52  90D8               	bcf	status,0,c
 11521   00FC54  3583               	rlcf	??_find_volume& (0+255),w,b
 11522   00FC56  6FA1               	movwf	find_volume@szbfat& (0+255),b
 11523   00FC58  3584               	rlcf	(??_find_volume+1)& (0+255),w,b
 11524   00FC5A  6FA2               	movwf	(find_volume@szbfat+1)& (0+255),b
 11525   00FC5C  3585               	rlcf	(??_find_volume+2)& (0+255),w,b
 11526   00FC5E  6FA3               	movwf	(find_volume@szbfat+2)& (0+255),b
 11527   00FC60  3586               	rlcf	(??_find_volume+3)& (0+255),w,b
 11528   00FC62  6FA4               	movwf	(find_volume@szbfat+3)& (0+255),b
 11529   00FC64                     l956:
 11530                           
 11531                           ; BSR set to: 0
 11532                           ;mcc_generated_files/fatfs/ff.c: 3376:   if (fs->fsize < (szbfat + (((UINT)512) - 1)) / 
      +                          ((UINT)512)) return FR_NO_FILESYSTEM;
 11533   00FC64  0EFF               	movlw	255
 11534   00FC66  25A1               	addwf	find_volume@szbfat& (0+255),w,b
 11535   00FC68  6F83               	movwf	??_find_volume& (0+255),b
 11536   00FC6A  0E01               	movlw	1
 11537   00FC6C  21A2               	addwfc	(find_volume@szbfat+1)& (0+255),w,b
 11538   00FC6E  6F84               	movwf	(??_find_volume+1)& (0+255),b
 11539   00FC70  0E00               	movlw	0
 11540   00FC72  21A3               	addwfc	(find_volume@szbfat+2)& (0+255),w,b
 11541   00FC74  6F85               	movwf	(??_find_volume+2)& (0+255),b
 11542   00FC76  0E00               	movlw	0
 11543   00FC78  21A4               	addwfc	(find_volume@szbfat+3)& (0+255),w,b
 11544   00FC7A  6F86               	movwf	(??_find_volume+3)& (0+255),b
 11545   00FC7C  0E0A               	movlw	10
 11546   00FC7E  EF46  F07E         	goto	u10640
 11547   00FC82                     u10645:
 11548   00FC82  90D8               	bcf	status,0,c
 11549   00FC84  3386               	rrcf	(??_find_volume+3)& (0+255),f,b
 11550   00FC86  3385               	rrcf	(??_find_volume+2)& (0+255),f,b
 11551   00FC88  3384               	rrcf	(??_find_volume+1)& (0+255),f,b
 11552   00FC8A  3383               	rrcf	??_find_volume& (0+255),f,b
 11553   00FC8C                     u10640:
 11554   00FC8C  2EE8               	decfsz	wreg,f,c
 11555   00FC8E  EF41  F07E         	goto	u10645
 11556   00FC92  EE20 F01B          	lfsr	2,27
 11557   00FC96  51C3               	movf	find_volume@fs& (0+255),w,b
 11558   00FC98  26D9               	addwf	fsr2l,f,c
 11559   00FC9A  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 11560   00FC9C  22DA               	addwfc	fsr2h,f,c
 11561   00FC9E  5183               	movf	??_find_volume& (0+255),w,b
 11562   00FCA0  5CDE               	subwf	postinc2,w,c
 11563   00FCA2  5184               	movf	(??_find_volume+1)& (0+255),w,b
 11564   00FCA4  58DE               	subwfb	postinc2,w,c
 11565   00FCA6  5185               	movf	(??_find_volume+2)& (0+255),w,b
 11566   00FCA8  58DE               	subwfb	postinc2,w,c
 11567   00FCAA  5186               	movf	(??_find_volume+3)& (0+255),w,b
 11568   00FCAC  58DE               	subwfb	postinc2,w,c
 11569   00FCAE  B0D8               	btfsc	status,0,c
 11570   00FCB0  EF5C  F07E         	goto	u10651
 11571   00FCB4  EF5E  F07E         	goto	u10650
 11572   00FCB8                     u10651:
 11573   00FCB8  EF60  F07E         	goto	l7893
 11574   00FCBC                     u10650:
 11575   00FCBC  EFCD  F07A         	goto	l7761
 11576   00FCC0                     l7893:
 11577                           
 11578                           ; BSR set to: 0
 11579                           ;mcc_generated_files/fatfs/ff.c: 3380:   fs->last_clst = fs->free_clst = 0xFFFFFFFF;
 11580   00FCC0  EE20 F00F          	lfsr	2,15
 11581   00FCC4  51C3               	movf	find_volume@fs& (0+255),w,b
 11582   00FCC6  26D9               	addwf	fsr2l,f,c
 11583   00FCC8  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 11584   00FCCA  22DA               	addwfc	fsr2h,f,c
 11585   00FCCC  0EFF               	movlw	255
 11586   00FCCE  6EDE               	movwf	postinc2,c
 11587   00FCD0  0EFF               	movlw	255
 11588   00FCD2  6EDE               	movwf	postinc2,c
 11589   00FCD4  0EFF               	movlw	255
 11590   00FCD6  6EDE               	movwf	postinc2,c
 11591   00FCD8  0EFF               	movlw	255
 11592   00FCDA  6EDD               	movwf	postdec2,c
 11593   00FCDC  52DD               	movf	postdec2,f,c
 11594   00FCDE  52DD               	movf	postdec2,f,c
 11595   00FCE0  EE10 F00B          	lfsr	1,11
 11596   00FCE4  51C3               	movf	find_volume@fs& (0+255),w,b
 11597   00FCE6  26E1               	addwf	fsr1l,f,c
 11598   00FCE8  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 11599   00FCEA  22E2               	addwfc	fsr1h,f,c
 11600   00FCEC  CFDE FFE6          	movff	postinc2,postinc1
 11601   00FCF0  CFDE FFE6          	movff	postinc2,postinc1
 11602   00FCF4  CFDE FFE6          	movff	postinc2,postinc1
 11603   00FCF8  CFDE FFE6          	movff	postinc2,postinc1
 11604   00FCFC                     
 11605                           ; BSR set to: 0
 11606                           ;mcc_generated_files/fatfs/ff.c: 3381:   fs->fsi_flag = 0x80;
 11607   00FCFC  EE20 F004          	lfsr	2,4
 11608   00FD00  51C3               	movf	find_volume@fs& (0+255),w,b
 11609   00FD02  26D9               	addwf	fsr2l,f,c
 11610   00FD04  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 11611   00FD06  22DA               	addwfc	fsr2h,f,c
 11612   00FD08  0E80               	movlw	128
 11613   00FD0A  6EDF               	movwf	indf2,c
 11614   00FD0C                     
 11615                           ; BSR set to: 0
 11616                           ;mcc_generated_files/fatfs/ff.c: 3383:   if (fmt == 3
 11617   00FD0C  0E03               	movlw	3
 11618   00FD0E  19C2               	xorwf	find_volume@fmt& (0+255),w,b
 11619   00FD10  A4D8               	btfss	status,2,c
 11620   00FD12  EF8D  F07E         	goto	u10661
 11621   00FD16  EF8F  F07E         	goto	u10660
 11622   00FD1A                     u10661:
 11623   00FD1A  EF3D  F07F         	goto	l7913
 11624   00FD1E                     u10660:
 11625   00FD1E                     
 11626                           ; BSR set to: 0
 11627   00FD1E  0E63               	movlw	99
 11628   00FD20  25C3               	addwf	find_volume@fs& (0+255),w,b
 11629   00FD22  6E01               	movwf	ld_word@ptr^0,c
 11630   00FD24  0E00               	movlw	0
 11631   00FD26  21C4               	addwfc	(find_volume@fs+1)& (0+255),w,b
 11632   00FD28  6E02               	movwf	(ld_word@ptr+1)^0,c
 11633   00FD2A  ECE4  F045         	call	_ld_word	;wreg free
 11634   00FD2E  0401               	decf	?_ld_word^0,w,c
 11635   00FD30  1002               	iorwf	(?_ld_word+1)^0,w,c
 11636   00FD32  A4D8               	btfss	status,2,c
 11637   00FD34  EF9E  F07E         	goto	u10671
 11638   00FD38  EFA0  F07E         	goto	u10670
 11639   00FD3C                     u10671:
 11640   00FD3C  EF3D  F07F         	goto	l7913
 11641   00FD40                     u10670:
 11642   00FD40  C0C3  F070         	movff	find_volume@fs,move_window@fs
 11643   00FD44  C0C4  F071         	movff	find_volume@fs+1,move_window@fs+1
 11644   00FD48  0E01               	movlw	1
 11645   00FD4A  0100               	movlb	0	; () banked
 11646   00FD4C  25BC               	addwf	find_volume@bsect& (0+255),w,b
 11647   00FD4E  6F72               	movwf	move_window@sector& (0+255),b
 11648   00FD50  0E00               	movlw	0
 11649   00FD52  21BD               	addwfc	(find_volume@bsect+1)& (0+255),w,b
 11650   00FD54  6F73               	movwf	(move_window@sector+1)& (0+255),b
 11651   00FD56  0E00               	movlw	0
 11652   00FD58  21BE               	addwfc	(find_volume@bsect+2)& (0+255),w,b
 11653   00FD5A  6F74               	movwf	(move_window@sector+2)& (0+255),b
 11654   00FD5C  0E00               	movlw	0
 11655   00FD5E  21BF               	addwfc	(find_volume@bsect+3)& (0+255),w,b
 11656   00FD60  6F75               	movwf	(move_window@sector+3)& (0+255),b
 11657   00FD62  ECBF  F04A         	call	_move_window	;wreg free
 11658   00FD66  0900               	iorlw	0
 11659   00FD68  A4D8               	btfss	status,2,c
 11660   00FD6A  EFB9  F07E         	goto	u10681
 11661   00FD6E  EFBB  F07E         	goto	u10680
 11662   00FD72                     u10681:
 11663   00FD72  EF3D  F07F         	goto	l7913
 11664   00FD76                     u10680:
 11665   00FD76                     
 11666                           ;mcc_generated_files/fatfs/ff.c: 3386:   {;mcc_generated_files/fatfs/ff.c: 3387:    fs->
      +                          fsi_flag = 0;
 11667   00FD76  0100               	movlb	0	; () banked
 11668   00FD78  EE20 F004          	lfsr	2,4
 11669   00FD7C  51C3               	movf	find_volume@fs& (0+255),w,b
 11670   00FD7E  26D9               	addwf	fsr2l,f,c
 11671   00FD80  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 11672   00FD82  22DA               	addwfc	fsr2h,f,c
 11673   00FD84  0E00               	movlw	0
 11674   00FD86  6EDF               	movwf	indf2,c
 11675   00FD88                     
 11676                           ; BSR set to: 0
 11677                           ;mcc_generated_files/fatfs/ff.c: 3388:    if (ld_word(fs->win + 510) == 0xAA55
 11678   00FD88  0E31               	movlw	49
 11679   00FD8A  25C3               	addwf	find_volume@fs& (0+255),w,b
 11680   00FD8C  6E01               	movwf	ld_word@ptr^0,c
 11681   00FD8E  0E02               	movlw	2
 11682   00FD90  21C4               	addwfc	(find_volume@fs+1)& (0+255),w,b
 11683   00FD92  6E02               	movwf	(ld_word@ptr+1)^0,c
 11684   00FD94  ECE4  F045         	call	_ld_word	;wreg free
 11685   00FD98  0E55               	movlw	85
 11686   00FD9A  1801               	xorwf	?_ld_word^0,w,c
 11687   00FD9C  E107               	bnz	u10691
 11688   00FD9E  0EAA               	movlw	170
 11689   00FDA0  1802               	xorwf	(?_ld_word+1)^0,w,c
 11690   00FDA2  A4D8               	btfss	status,2,c
 11691   00FDA4  EFD6  F07E         	goto	u10691
 11692   00FDA8  EFD8  F07E         	goto	u10690
 11693   00FDAC                     u10691:
 11694   00FDAC  EF3D  F07F         	goto	l7913
 11695   00FDB0                     u10690:
 11696   00FDB0  0E33               	movlw	51
 11697   00FDB2  0100               	movlb	0	; () banked
 11698   00FDB4  25C3               	addwf	find_volume@fs& (0+255),w,b
 11699   00FDB6  6E01               	movwf	ld_dword@ptr^0,c
 11700   00FDB8  0E00               	movlw	0
 11701   00FDBA  21C4               	addwfc	(find_volume@fs+1)& (0+255),w,b
 11702   00FDBC  6E02               	movwf	(ld_dword@ptr+1)^0,c
 11703   00FDBE  EC63  F04A         	call	_ld_dword	;wreg free
 11704   00FDC2  0E52               	movlw	82
 11705   00FDC4  1801               	xorwf	?_ld_dword^0,w,c
 11706   00FDC6  E10D               	bnz	u10701
 11707   00FDC8  0E52               	movlw	82
 11708   00FDCA  1802               	xorwf	(?_ld_dword+1)^0,w,c
 11709   00FDCC  E10A               	bnz	u10701
 11710   00FDCE  0E61               	movlw	97
 11711   00FDD0  1803               	xorwf	(?_ld_dword+2)^0,w,c
 11712   00FDD2  E107               	bnz	u10701
 11713   00FDD4  0E41               	movlw	65
 11714   00FDD6  1804               	xorwf	(?_ld_dword+3)^0,w,c
 11715   00FDD8  A4D8               	btfss	status,2,c
 11716   00FDDA  EFF1  F07E         	goto	u10701
 11717   00FDDE  EFF3  F07E         	goto	u10700
 11718   00FDE2                     u10701:
 11719   00FDE2  EF3D  F07F         	goto	l7913
 11720   00FDE6                     u10700:
 11721   00FDE6  0E17               	movlw	23
 11722   00FDE8  0100               	movlb	0	; () banked
 11723   00FDEA  25C3               	addwf	find_volume@fs& (0+255),w,b
 11724   00FDEC  6E01               	movwf	ld_dword@ptr^0,c
 11725   00FDEE  0E02               	movlw	2
 11726   00FDF0  21C4               	addwfc	(find_volume@fs+1)& (0+255),w,b
 11727   00FDF2  6E02               	movwf	(ld_dword@ptr+1)^0,c
 11728   00FDF4  EC63  F04A         	call	_ld_dword	;wreg free
 11729   00FDF8  0E72               	movlw	114
 11730   00FDFA  1801               	xorwf	?_ld_dword^0,w,c
 11731   00FDFC  E10D               	bnz	u10711
 11732   00FDFE  0E72               	movlw	114
 11733   00FE00  1802               	xorwf	(?_ld_dword+1)^0,w,c
 11734   00FE02  E10A               	bnz	u10711
 11735   00FE04  0E41               	movlw	65
 11736   00FE06  1803               	xorwf	(?_ld_dword+2)^0,w,c
 11737   00FE08  E107               	bnz	u10711
 11738   00FE0A  0E61               	movlw	97
 11739   00FE0C  1804               	xorwf	(?_ld_dword+3)^0,w,c
 11740   00FE0E  A4D8               	btfss	status,2,c
 11741   00FE10  EF0C  F07F         	goto	u10711
 11742   00FE14  EF0E  F07F         	goto	u10710
 11743   00FE18                     u10711:
 11744   00FE18  EF3D  F07F         	goto	l7913
 11745   00FE1C                     u10710:
 11746   00FE1C                     
 11747                           ;mcc_generated_files/fatfs/ff.c: 3391:    {;mcc_generated_files/fatfs/ff.c: 3393:     fs
      +                          ->free_clst = ld_dword(fs->win + 488);
 11748   00FE1C  0E1B               	movlw	27
 11749   00FE1E  0100               	movlb	0	; () banked
 11750   00FE20  25C3               	addwf	find_volume@fs& (0+255),w,b
 11751   00FE22  6E01               	movwf	ld_dword@ptr^0,c
 11752   00FE24  0E02               	movlw	2
 11753   00FE26  21C4               	addwfc	(find_volume@fs+1)& (0+255),w,b
 11754   00FE28  6E02               	movwf	(ld_dword@ptr+1)^0,c
 11755   00FE2A  EC63  F04A         	call	_ld_dword	;wreg free
 11756   00FE2E  0100               	movlb	0	; () banked
 11757   00FE30  EE20 F00F          	lfsr	2,15
 11758   00FE34  51C3               	movf	find_volume@fs& (0+255),w,b
 11759   00FE36  26D9               	addwf	fsr2l,f,c
 11760   00FE38  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 11761   00FE3A  22DA               	addwfc	fsr2h,f,c
 11762   00FE3C  C001  FFDE         	movff	?_ld_dword,postinc2
 11763   00FE40  C002  FFDE         	movff	?_ld_dword+1,postinc2
 11764   00FE44  C003  FFDE         	movff	?_ld_dword+2,postinc2
 11765   00FE48  C004  FFDE         	movff	?_ld_dword+3,postinc2
 11766                           
 11767                           ;mcc_generated_files/fatfs/ff.c: 3396:     fs->last_clst = ld_dword(fs->win + 492);
 11768   00FE4C  0E1F               	movlw	31
 11769   00FE4E  25C3               	addwf	find_volume@fs& (0+255),w,b
 11770   00FE50  6E01               	movwf	ld_dword@ptr^0,c
 11771   00FE52  0E02               	movlw	2
 11772   00FE54  21C4               	addwfc	(find_volume@fs+1)& (0+255),w,b
 11773   00FE56  6E02               	movwf	(ld_dword@ptr+1)^0,c
 11774   00FE58  EC63  F04A         	call	_ld_dword	;wreg free
 11775   00FE5C  0100               	movlb	0	; () banked
 11776   00FE5E  EE20 F00B          	lfsr	2,11
 11777   00FE62  51C3               	movf	find_volume@fs& (0+255),w,b
 11778   00FE64  26D9               	addwf	fsr2l,f,c
 11779   00FE66  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 11780   00FE68  22DA               	addwfc	fsr2h,f,c
 11781   00FE6A  C001  FFDE         	movff	?_ld_dword,postinc2
 11782   00FE6E  C002  FFDE         	movff	?_ld_dword+1,postinc2
 11783   00FE72  C003  FFDE         	movff	?_ld_dword+2,postinc2
 11784   00FE76  C004  FFDE         	movff	?_ld_dword+3,postinc2
 11785   00FE7A                     l7913:
 11786                           
 11787                           ;mcc_generated_files/fatfs/ff.c: 3402:  };mcc_generated_files/fatfs/ff.c: 3404:  fs->fs_
      +                          type = fmt;
 11788   00FE7A  C0C3  FFD9         	movff	find_volume@fs,fsr2l
 11789   00FE7E  C0C4  FFDA         	movff	find_volume@fs+1,fsr2h
 11790   00FE82  C0C2  FFDF         	movff	find_volume@fmt,indf2
 11791   00FE86                     
 11792                           ;mcc_generated_files/fatfs/ff.c: 3405:  fs->id = ++Fsid;
 11793   00FE86  0100               	movlb	0	; () banked
 11794   00FE88  4BF4               	infsnz	_Fsid& (0+255),f,b
 11795   00FE8A  2BF5               	incf	(_Fsid+1)& (0+255),f,b
 11796   00FE8C  EE20 F005          	lfsr	2,5
 11797   00FE90  51C3               	movf	find_volume@fs& (0+255),w,b
 11798   00FE92  26D9               	addwf	fsr2l,f,c
 11799   00FE94  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 11800   00FE96  22DA               	addwfc	fsr2h,f,c
 11801   00FE98  C0F4  FFDE         	movff	_Fsid,postinc2
 11802   00FE9C  C0F5  FFDD         	movff	_Fsid+1,postdec2
 11803   00FEA0                     
 11804                           ; BSR set to: 0
 11805                           ;mcc_generated_files/fatfs/ff.c: 3413:  fs->cdir = 0;
 11806   00FEA0  EE20 F013          	lfsr	2,19
 11807   00FEA4  51C3               	movf	find_volume@fs& (0+255),w,b
 11808   00FEA6  26D9               	addwf	fsr2l,f,c
 11809   00FEA8  51C4               	movf	(find_volume@fs+1)& (0+255),w,b
 11810   00FEAA  22DA               	addwfc	fsr2h,f,c
 11811   00FEAC  6ADE               	clrf	postinc2,c
 11812   00FEAE  6ADE               	clrf	postinc2,c
 11813   00FEB0  6ADE               	clrf	postinc2,c
 11814   00FEB2  6ADD               	clrf	postdec2,c
 11815   00FEB4  EF8D  F079         	goto	l7679
 11816   00FEB8                     l911:
 11817   00FEB8  0012               	return		;funcret
 11818   00FEBA                     __end_of_find_volume:
 11819                           	callstack 0
 11820                           
 11821 ;; *************** function _ld_dword *****************
 11822 ;; Defined at:
 11823 ;;		line 581 in file "mcc_generated_files/fatfs/ff.c"
 11824 ;; Parameters:    Size  Location     Type
 11825 ;;  ptr             2    0[COMRAM] PTR const unsigned char 
 11826 ;;		 -> FatFs.win(512), drive.win(512), drive(563), NULL(0), 
 11827 ;;		 -> FatFs(563), 
 11828 ;; Auto vars:     Size  Location     Type
 11829 ;;  rv              4    9[COMRAM] unsigned long 
 11830 ;; Return value:  Size  Location     Type
 11831 ;;                  4    0[COMRAM] unsigned long 
 11832 ;; Registers used:
 11833 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11834 ;; Tracked objects:
 11835 ;;		On entry : 0/0
 11836 ;;		On exit  : 0/0
 11837 ;;		Unchanged: 0/0
 11838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11839 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11840 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11841 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11842 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11843 ;;Total ram usage:       13 bytes
 11844 ;; Hardware stack levels used: 1
 11845 ;; This function calls:
 11846 ;;		Nothing
 11847 ;; This function is called by:
 11848 ;;		_get_fat
 11849 ;;		_put_fat
 11850 ;;		_find_volume
 11851 ;;		_f_open
 11852 ;;		_get_fileinfo
 11853 ;;		_f_getfree
 11854 ;; This function uses a non-reentrant model
 11855 ;;
 11856                           
 11857                           	psect	text23
 11858   0094C6                     __ptext23:
 11859                           	callstack 0
 11860   0094C6                     _ld_dword:
 11861                           	callstack 27
 11862   0094C6                     
 11863                           ;mcc_generated_files/fatfs/ff.c: 581: static DWORD ld_dword (const BYTE* ptr);mcc_genera
      +                          ted_files/fatfs/ff.c: 582: {;mcc_generated_files/fatfs/ff.c: 583:  DWORD rv;;mcc_generat
      +                          ed_files/fatfs/ff.c: 585:  rv = ptr[3];
 11864   0094C6  EE20 F003          	lfsr	2,3
 11865   0094CA  5001               	movf	ld_dword@ptr^0,w,c
 11866   0094CC  26D9               	addwf	fsr2l,f,c
 11867   0094CE  5002               	movf	(ld_dword@ptr+1)^0,w,c
 11868   0094D0  22DA               	addwfc	fsr2h,f,c
 11869   0094D2  50DF               	movf	indf2,w,c
 11870   0094D4  6E05               	movwf	??_ld_dword^0,c
 11871   0094D6  5005               	movf	??_ld_dword^0,w,c
 11872   0094D8  6E0A               	movwf	ld_dword@rv^0,c
 11873   0094DA  6A0B               	clrf	(ld_dword@rv+1)^0,c
 11874   0094DC  6A0C               	clrf	(ld_dword@rv+2)^0,c
 11875   0094DE  6A0D               	clrf	(ld_dword@rv+3)^0,c
 11876                           
 11877                           ;mcc_generated_files/fatfs/ff.c: 586:  rv = rv << 8 | ptr[2];
 11878   0094E0  EE20 F002          	lfsr	2,2
 11879   0094E4  5001               	movf	ld_dword@ptr^0,w,c
 11880   0094E6  26D9               	addwf	fsr2l,f,c
 11881   0094E8  5002               	movf	(ld_dword@ptr+1)^0,w,c
 11882   0094EA  22DA               	addwfc	fsr2h,f,c
 11883   0094EC  50DF               	movf	indf2,w,c
 11884   0094EE  6E05               	movwf	??_ld_dword^0,c
 11885   0094F0  5005               	movf	??_ld_dword^0,w,c
 11886   0094F2  C00A  F007         	movff	ld_dword@rv,??_ld_dword+2
 11887   0094F6  C00B  F008         	movff	ld_dword@rv+1,??_ld_dword+3
 11888   0094FA  C00C  F009         	movff	ld_dword@rv+2,??_ld_dword+4
 11889   0094FE  6A06               	clrf	(??_ld_dword+1)^0,c
 11890   009500  1006               	iorwf	(??_ld_dword+1)^0,w,c
 11891   009502  6E0A               	movwf	ld_dword@rv^0,c
 11892   009504  5007               	movf	(??_ld_dword+2)^0,w,c
 11893   009506  6E0B               	movwf	(ld_dword@rv+1)^0,c
 11894   009508  5008               	movf	(??_ld_dword+3)^0,w,c
 11895   00950A  6E0C               	movwf	(ld_dword@rv+2)^0,c
 11896   00950C  5009               	movf	(??_ld_dword+4)^0,w,c
 11897   00950E  6E0D               	movwf	(ld_dword@rv+3)^0,c
 11898                           
 11899                           ;mcc_generated_files/fatfs/ff.c: 587:  rv = rv << 8 | ptr[1];
 11900   009510  EE20 F001          	lfsr	2,1
 11901   009514  5001               	movf	ld_dword@ptr^0,w,c
 11902   009516  26D9               	addwf	fsr2l,f,c
 11903   009518  5002               	movf	(ld_dword@ptr+1)^0,w,c
 11904   00951A  22DA               	addwfc	fsr2h,f,c
 11905   00951C  50DF               	movf	indf2,w,c
 11906   00951E  6E05               	movwf	??_ld_dword^0,c
 11907   009520  5005               	movf	??_ld_dword^0,w,c
 11908   009522  C00A  F007         	movff	ld_dword@rv,??_ld_dword+2
 11909   009526  C00B  F008         	movff	ld_dword@rv+1,??_ld_dword+3
 11910   00952A  C00C  F009         	movff	ld_dword@rv+2,??_ld_dword+4
 11911   00952E  6A06               	clrf	(??_ld_dword+1)^0,c
 11912   009530  1006               	iorwf	(??_ld_dword+1)^0,w,c
 11913   009532  6E0A               	movwf	ld_dword@rv^0,c
 11914   009534  5007               	movf	(??_ld_dword+2)^0,w,c
 11915   009536  6E0B               	movwf	(ld_dword@rv+1)^0,c
 11916   009538  5008               	movf	(??_ld_dword+3)^0,w,c
 11917   00953A  6E0C               	movwf	(ld_dword@rv+2)^0,c
 11918   00953C  5009               	movf	(??_ld_dword+4)^0,w,c
 11919   00953E  6E0D               	movwf	(ld_dword@rv+3)^0,c
 11920                           
 11921                           ;mcc_generated_files/fatfs/ff.c: 588:  rv = rv << 8 | ptr[0];
 11922   009540  C001  FFD9         	movff	ld_dword@ptr,fsr2l
 11923   009544  C002  FFDA         	movff	ld_dword@ptr+1,fsr2h
 11924   009548  50DF               	movf	indf2,w,c
 11925   00954A  6E05               	movwf	??_ld_dword^0,c
 11926   00954C  5005               	movf	??_ld_dword^0,w,c
 11927   00954E  C00A  F007         	movff	ld_dword@rv,??_ld_dword+2
 11928   009552  C00B  F008         	movff	ld_dword@rv+1,??_ld_dword+3
 11929   009556  C00C  F009         	movff	ld_dword@rv+2,??_ld_dword+4
 11930   00955A  6A06               	clrf	(??_ld_dword+1)^0,c
 11931   00955C  1006               	iorwf	(??_ld_dword+1)^0,w,c
 11932   00955E  6E0A               	movwf	ld_dword@rv^0,c
 11933   009560  5007               	movf	(??_ld_dword+2)^0,w,c
 11934   009562  6E0B               	movwf	(ld_dword@rv+1)^0,c
 11935   009564  5008               	movf	(??_ld_dword+3)^0,w,c
 11936   009566  6E0C               	movwf	(ld_dword@rv+2)^0,c
 11937   009568  5009               	movf	(??_ld_dword+4)^0,w,c
 11938   00956A  6E0D               	movwf	(ld_dword@rv+3)^0,c
 11939   00956C                     
 11940                           ;mcc_generated_files/fatfs/ff.c: 589:  return rv;
 11941   00956C  C00A  F001         	movff	ld_dword@rv,?_ld_dword
 11942   009570  C00B  F002         	movff	ld_dword@rv+1,?_ld_dword+1
 11943   009574  C00C  F003         	movff	ld_dword@rv+2,?_ld_dword+2
 11944   009578  C00D  F004         	movff	ld_dword@rv+3,?_ld_dword+3
 11945   00957C  0012               	return		;funcret
 11946   00957E                     __end_of_ld_dword:
 11947                           	callstack 0
 11948                           
 11949 ;; *************** function _get_ldnumber *****************
 11950 ;; Defined at:
 11951 ;;		line 3102 in file "mcc_generated_files/fatfs/ff.c"
 11952 ;; Parameters:    Size  Location     Type
 11953 ;;  path            2    0[COMRAM] PTR PTR const unsigned c
 11954 ;;		 -> f_rename@path_old(2), f_rename@path_new(2), f_mkdir@path(2), f_unlink@path(2), 
 11955 ;;		 -> f_getfree@path(2), f_stat@path(2), f_opendir@path(2), f_chdir@path(2), 
 11956 ;;		 -> f_chdrive@path(2), f_open@path(2), f_mount@path(2), f_mount@rp(2), 
 11957 ;; Auto vars:     Size  Location     Type
 11958 ;;  tp              2   11[COMRAM] PTR const unsigned char 
 11959 ;;		 -> STR_6(3), STR_5(10), STR_4(3), STR_2(10), 
 11960 ;;		 -> STR_1(1), 
 11961 ;;  vol             2    9[COMRAM] int 
 11962 ;;  tt              2    6[COMRAM] PTR const unsigned char 
 11963 ;;		 -> STR_6(3), STR_5(10), STR_4(3), STR_2(10), 
 11964 ;;		 -> STR_1(1), 
 11965 ;;  i               2    4[COMRAM] int 
 11966 ;;  tc              1    8[COMRAM] unsigned char 
 11967 ;; Return value:  Size  Location     Type
 11968 ;;                  2    0[COMRAM] int 
 11969 ;; Registers used:
 11970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11971 ;; Tracked objects:
 11972 ;;		On entry : 0/0
 11973 ;;		On exit  : 0/0
 11974 ;;		Unchanged: 0/0
 11975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11976 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11977 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11978 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11979 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11980 ;;Total ram usage:       13 bytes
 11981 ;; Hardware stack levels used: 1
 11982 ;; This function calls:
 11983 ;;		Nothing
 11984 ;; This function is called by:
 11985 ;;		_find_volume
 11986 ;;		_f_mount
 11987 ;;		_f_chdrive
 11988 ;;		_f_rename
 11989 ;; This function uses a non-reentrant model
 11990 ;;
 11991                           
 11992                           	psect	text24
 11993   009C3A                     __ptext24:
 11994                           	callstack 0
 11995   009C3A                     _get_ldnumber:
 11996                           	callstack 28
 11997   009C3A                     
 11998                           ;mcc_generated_files/fatfs/ff.c: 3103:  const TCHAR** path;mcc_generated_files/fatfs/ff.
      +                          c: 3105: {;mcc_generated_files/fatfs/ff.c: 3106:  const TCHAR *tp, *tt;;mcc_generated_fi
      +                          les/fatfs/ff.c: 3107:  TCHAR tc;;mcc_generated_files/fatfs/ff.c: 3108:  int i, vol = -1;
 11999   009C3A  680A               	setf	get_ldnumber@vol^0,c
 12000   009C3C  680B               	setf	(get_ldnumber@vol+1)^0,c
 12001   009C3E                     
 12002                           ;mcc_generated_files/fatfs/ff.c: 3114:  tt = tp = *path;
 12003   009C3E  C001  FFD9         	movff	get_ldnumber@path,fsr2l
 12004   009C42  C002  FFDA         	movff	get_ldnumber@path+1,fsr2h
 12005   009C46  CFDE F00C          	movff	postinc2,get_ldnumber@tp
 12006   009C4A  CFDD F00D          	movff	postdec2,get_ldnumber@tp+1
 12007   009C4E  C00C  F007         	movff	get_ldnumber@tp,get_ldnumber@tt
 12008   009C52  C00D  F008         	movff	get_ldnumber@tp+1,get_ldnumber@tt+1
 12009   009C56                     
 12010                           ;mcc_generated_files/fatfs/ff.c: 3115:  if (!tp) return vol;
 12011   009C56  500C               	movf	get_ldnumber@tp^0,w,c
 12012   009C58  100D               	iorwf	(get_ldnumber@tp+1)^0,w,c
 12013   009C5A  A4D8               	btfss	status,2,c
 12014   009C5C  EF32  F04E         	goto	u9751
 12015   009C60  EF34  F04E         	goto	u9750
 12016   009C64                     u9751:
 12017   009C64  EF38  F04E         	goto	l7363
 12018   009C68                     u9750:
 12019   009C68  6801               	setf	?_get_ldnumber^0,c
 12020   009C6A  6802               	setf	(?_get_ldnumber+1)^0,c
 12021   009C6C  EFC2  F04E         	goto	l886
 12022   009C70                     l7363:
 12023   009C70  C007  FFF6         	movff	get_ldnumber@tt,tblptrl
 12024   009C74  C008  FFF7         	movff	get_ldnumber@tt+1,tblptrh
 12025   009C78                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12026   009C78  6AF8               	clrf	tblptru,c
 12027   009C7A                     	endif
 12028   009C7A                     	if	0	;tblptru may be non-zero
 12029   009C7A                     	endif
 12030   009C7A  0008               	tblrd		*
 12031   009C7C  CFF5 F009          	movff	tablat,get_ldnumber@tc
 12032   009C80  4A07               	infsnz	get_ldnumber@tt^0,f,c
 12033   009C82  2A08               	incf	(get_ldnumber@tt+1)^0,f,c
 12034   009C84  0E20               	movlw	32
 12035   009C86  6409               	cpfsgt	get_ldnumber@tc^0,c
 12036   009C88  EF48  F04E         	goto	u9761
 12037   009C8C  EF4A  F04E         	goto	u9760
 12038   009C90                     u9761:
 12039   009C90  EF53  F04E         	goto	l7375
 12040   009C94                     u9760:
 12041   009C94  0E3A               	movlw	58
 12042   009C96  1809               	xorwf	get_ldnumber@tc^0,w,c
 12043   009C98  A4D8               	btfss	status,2,c
 12044   009C9A  EF51  F04E         	goto	u9771
 12045   009C9E  EF53  F04E         	goto	u9770
 12046   009CA2                     u9771:
 12047   009CA2  EF38  F04E         	goto	l7363
 12048   009CA6                     u9770:
 12049   009CA6                     l7375:
 12050                           
 12051                           ;mcc_generated_files/fatfs/ff.c: 3118:  if (tc == ':') {
 12052   009CA6  0E3A               	movlw	58
 12053   009CA8  1809               	xorwf	get_ldnumber@tc^0,w,c
 12054   009CAA  A4D8               	btfss	status,2,c
 12055   009CAC  EF5A  F04E         	goto	u9781
 12056   009CB0  EF5C  F04E         	goto	u9780
 12057   009CB4                     u9781:
 12058   009CB4  EFBB  F04E         	goto	l895
 12059   009CB8                     u9780:
 12060   009CB8                     
 12061                           ;mcc_generated_files/fatfs/ff.c: 3119:   i = 1;
 12062   009CB8  0E00               	movlw	0
 12063   009CBA  6E06               	movwf	(get_ldnumber@i+1)^0,c
 12064   009CBC  0E01               	movlw	1
 12065   009CBE  6E05               	movwf	get_ldnumber@i^0,c
 12066   009CC0                     
 12067                           ;mcc_generated_files/fatfs/ff.c: 3120:   if (((*tp) >= '0' && (*tp) <= '9') && tp + 2 ==
      +                           tt) {
 12068   009CC0  C00C  FFF6         	movff	get_ldnumber@tp,tblptrl
 12069   009CC4  C00D  FFF7         	movff	get_ldnumber@tp+1,tblptrh
 12070   009CC8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12071   009CC8  6AF8               	clrf	tblptru,c
 12072   009CCA                     	endif
 12073   009CCA                     	if	0	;tblptru may be non-zero
 12074   009CCA                     	endif
 12075   009CCA  0E2F               	movlw	47
 12076   009CCC  0008               	tblrd		*
 12077   009CCE  64F5               	cpfsgt	tablat,c
 12078   009CD0  EF6C  F04E         	goto	u9791
 12079   009CD4  EF6E  F04E         	goto	u9790
 12080   009CD8                     u9791:
 12081   009CD8  EF9C  F04E         	goto	l7387
 12082   009CDC                     u9790:
 12083   009CDC  C00C  FFF6         	movff	get_ldnumber@tp,tblptrl
 12084   009CE0  C00D  FFF7         	movff	get_ldnumber@tp+1,tblptrh
 12085   009CE4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12086   009CE4  6AF8               	clrf	tblptru,c
 12087   009CE6                     	endif
 12088   009CE6                     	if	0	;tblptru may be non-zero
 12089   009CE6                     	endif
 12090   009CE6  0E3A               	movlw	58
 12091   009CE8  0008               	tblrd		*
 12092   009CEA  60F5               	cpfslt	tablat,c
 12093   009CEC  EF7A  F04E         	goto	u9801
 12094   009CF0  EF7C  F04E         	goto	u9800
 12095   009CF4                     u9801:
 12096   009CF4  EF9C  F04E         	goto	l7387
 12097   009CF8                     u9800:
 12098   009CF8  0E02               	movlw	2
 12099   009CFA  240C               	addwf	get_ldnumber@tp^0,w,c
 12100   009CFC  6E03               	movwf	??_get_ldnumber^0,c
 12101   009CFE  0E00               	movlw	0
 12102   009D00  200D               	addwfc	(get_ldnumber@tp+1)^0,w,c
 12103   009D02  6E04               	movwf	(??_get_ldnumber+1)^0,c
 12104   009D04  5007               	movf	get_ldnumber@tt^0,w,c
 12105   009D06  1803               	xorwf	??_get_ldnumber^0,w,c
 12106   009D08  E107               	bnz	u9811
 12107   009D0A  5008               	movf	(get_ldnumber@tt+1)^0,w,c
 12108   009D0C  1804               	xorwf	(??_get_ldnumber+1)^0,w,c
 12109   009D0E  A4D8               	btfss	status,2,c
 12110   009D10  EF8C  F04E         	goto	u9811
 12111   009D14  EF8E  F04E         	goto	u9810
 12112   009D18                     u9811:
 12113   009D18  EF9C  F04E         	goto	l7387
 12114   009D1C                     u9810:
 12115   009D1C                     
 12116                           ;mcc_generated_files/fatfs/ff.c: 3121:    i = (int)*tp - '0';
 12117   009D1C  C00C  FFF6         	movff	get_ldnumber@tp,tblptrl
 12118   009D20  C00D  FFF7         	movff	get_ldnumber@tp+1,tblptrh
 12119   009D24                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12120   009D24  6AF8               	clrf	tblptru,c
 12121   009D26                     	endif
 12122   009D26                     	if	0	;tblptru may be non-zero
 12123   009D26                     	endif
 12124   009D26  0008               	tblrd		*
 12125   009D28  CFF5 F003          	movff	tablat,??_get_ldnumber
 12126   009D2C  0ED0               	movlw	208
 12127   009D2E  2403               	addwf	??_get_ldnumber^0,w,c
 12128   009D30  6E05               	movwf	get_ldnumber@i^0,c
 12129   009D32  6A06               	clrf	(get_ldnumber@i+1)^0,c
 12130   009D34  0EFF               	movlw	255
 12131   009D36  2206               	addwfc	(get_ldnumber@i+1)^0,f,c
 12132   009D38                     l7387:
 12133                           
 12134                           ;mcc_generated_files/fatfs/ff.c: 3136:   if (i < 1) {
 12135   009D38  BE06               	btfsc	(get_ldnumber@i+1)^0,7,c
 12136   009D3A  EFA9  F04E         	goto	u9820
 12137   009D3E  5006               	movf	(get_ldnumber@i+1)^0,w,c
 12138   009D40  E106               	bnz	u9821
 12139   009D42  0405               	decf	get_ldnumber@i^0,w,c
 12140   009D44  B0D8               	btfsc	status,0,c
 12141   009D46  EFA7  F04E         	goto	u9821
 12142   009D4A  EFA9  F04E         	goto	u9820
 12143   009D4E                     u9821:
 12144   009D4E  EFB5  F04E         	goto	l7393
 12145   009D52                     u9820:
 12146   009D52                     
 12147                           ;mcc_generated_files/fatfs/ff.c: 3137:    vol = i;
 12148   009D52  C005  F00A         	movff	get_ldnumber@i,get_ldnumber@vol
 12149   009D56  C006  F00B         	movff	get_ldnumber@i+1,get_ldnumber@vol+1
 12150   009D5A                     
 12151                           ;mcc_generated_files/fatfs/ff.c: 3138:    *path = tt;
 12152   009D5A  C001  FFD9         	movff	get_ldnumber@path,fsr2l
 12153   009D5E  C002  FFDA         	movff	get_ldnumber@path+1,fsr2h
 12154   009D62  C007  FFDE         	movff	get_ldnumber@tt,postinc2
 12155   009D66  C008  FFDD         	movff	get_ldnumber@tt+1,postdec2
 12156   009D6A                     l7393:
 12157                           
 12158                           ;mcc_generated_files/fatfs/ff.c: 3140:   return vol;
 12159   009D6A  C00A  F001         	movff	get_ldnumber@vol,?_get_ldnumber
 12160   009D6E  C00B  F002         	movff	get_ldnumber@vol+1,?_get_ldnumber+1
 12161   009D72  EFC2  F04E         	goto	l886
 12162   009D76                     l895:
 12163                           
 12164                           ;mcc_generated_files/fatfs/ff.c: 3162:  vol = CurrVol;
 12165   009D76  C0FC  F00A         	movff	_CurrVol,get_ldnumber@vol
 12166   009D7A  6A0B               	clrf	(get_ldnumber@vol+1)^0,c
 12167                           
 12168                           ;mcc_generated_files/fatfs/ff.c: 3166:  return vol;
 12169   009D7C  C00A  F001         	movff	get_ldnumber@vol,?_get_ldnumber
 12170   009D80  C00B  F002         	movff	get_ldnumber@vol+1,?_get_ldnumber+1
 12171   009D84                     l886:
 12172   009D84  0012               	return		;funcret
 12173   009D86                     __end_of_get_ldnumber:
 12174                           	callstack 0
 12175                           
 12176 ;; *************** function _disk_initialize *****************
 12177 ;; Defined at:
 12178 ;;		line 60 in file "mcc_generated_files/fatfs/diskio.c"
 12179 ;; Parameters:    Size  Location     Type
 12180 ;;  pdrv            1    wreg     unsigned char 
 12181 ;; Auto vars:     Size  Location     Type
 12182 ;;  pdrv            1   86[COMRAM] unsigned char 
 12183 ;;  stat            1   87[COMRAM] unsigned char 
 12184 ;; Return value:  Size  Location     Type
 12185 ;;                  1    wreg      unsigned char 
 12186 ;; Registers used:
 12187 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 12188 ;; Tracked objects:
 12189 ;;		On entry : 0/0
 12190 ;;		On exit  : 0/0
 12191 ;;		Unchanged: 0/0
 12192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12194 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12195 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12196 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12197 ;;Total ram usage:        4 bytes
 12198 ;; Hardware stack levels used: 1
 12199 ;; Hardware stack levels required when called: 3
 12200 ;; This function calls:
 12201 ;;		_SD_SPI_MediaInitialize
 12202 ;; This function is called by:
 12203 ;;		_find_volume
 12204 ;; This function uses a non-reentrant model
 12205 ;;
 12206                           
 12207                           	psect	text25
 12208   008D2C                     __ptext25:
 12209                           	callstack 0
 12210   008D2C                     _disk_initialize:
 12211                           	callstack 25
 12212                           
 12213                           ;incstack = 0
 12214                           ;disk_initialize@pdrv stored from wreg
 12215   008D2C  6E57               	movwf	disk_initialize@pdrv^0,c
 12216   008D2E                     
 12217                           ;mcc_generated_files/fatfs/diskio.c: 61:     BYTE pdrv;mcc_generated_files/fatfs/diskio.
      +                          c: 63: {;mcc_generated_files/fatfs/diskio.c: 64:     DSTATUS stat = 0x01;
 12218   008D2E  0E01               	movlw	1
 12219   008D30  6E58               	movwf	disk_initialize@stat^0,c
 12220                           
 12221                           ;mcc_generated_files/fatfs/diskio.c: 66:     switch (pdrv) {
 12222   008D32  EFAD  F046         	goto	l7081
 12223   008D36                     l7073:
 12224                           
 12225                           ;mcc_generated_files/fatfs/diskio.c: 68:             if(SD_SPI_MediaInitialize() == 1)
 12226   008D36  ECFF  F070         	call	_SD_SPI_MediaInitialize	;wreg free
 12227   008D3A  06E8               	decf	wreg,f,c
 12228   008D3C  A4D8               	btfss	status,2,c
 12229   008D3E  EFA3  F046         	goto	u9261
 12230   008D42  EFA5  F046         	goto	u9260
 12231   008D46                     u9261:
 12232   008D46  EFA9  F046         	goto	l7077
 12233   008D4A                     u9260:
 12234   008D4A                     
 12235                           ;mcc_generated_files/fatfs/diskio.c: 69:             {;mcc_generated_files/fatfs/diskio.
      +                          c: 70:                 stat = RES_OK;
 12236   008D4A  0E00               	movlw	0
 12237   008D4C  6E58               	movwf	disk_initialize@stat^0,c
 12238                           
 12239                           ;mcc_generated_files/fatfs/diskio.c: 71:             }
 12240   008D4E  EFBE  F046         	goto	l7083
 12241   008D52                     l7077:
 12242                           
 12243                           ;mcc_generated_files/fatfs/diskio.c: 73:             {;mcc_generated_files/fatfs/diskio.
      +                          c: 74:                 stat = RES_ERROR;
 12244   008D52  0E01               	movlw	1
 12245   008D54  6E58               	movwf	disk_initialize@stat^0,c
 12246   008D56  EFBE  F046         	goto	l7083
 12247   008D5A                     l7081:
 12248   008D5A  5057               	movf	disk_initialize@pdrv^0,w,c
 12249   008D5C  6E55               	movwf	??_disk_initialize^0,c
 12250   008D5E  6A56               	clrf	(??_disk_initialize+1)^0,c
 12251                           
 12252                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12253                           ; Switch size 1, requested type "simple"
 12254                           ; Number of cases is 1, Range of values is 0 to 0
 12255                           ; switch strategies available:
 12256                           ; Name         Instructions Cycles
 12257                           ; simple_byte            4     3 (average)
 12258                           ;	Chosen strategy is simple_byte
 12259   008D60  5056               	movf	(??_disk_initialize+1)^0,w,c
 12260   008D62  0A00               	xorlw	0	; case 0
 12261   008D64  B4D8               	btfsc	status,2,c
 12262   008D66  EFB7  F046         	goto	l9289
 12263   008D6A  EFBE  F046         	goto	l7083
 12264   008D6E                     l9289:
 12265                           
 12266                           ; Switch size 1, requested type "simple"
 12267                           ; Number of cases is 1, Range of values is 0 to 0
 12268                           ; switch strategies available:
 12269                           ; Name         Instructions Cycles
 12270                           ; simple_byte            4     3 (average)
 12271                           ;	Chosen strategy is simple_byte
 12272   008D6E  5055               	movf	??_disk_initialize^0,w,c
 12273   008D70  0A00               	xorlw	0	; case 0
 12274   008D72  B4D8               	btfsc	status,2,c
 12275   008D74  EF9B  F046         	goto	l7073
 12276   008D78  EFBE  F046         	goto	l7083
 12277   008D7C                     l7083:
 12278                           
 12279                           ;mcc_generated_files/fatfs/diskio.c: 81:     return stat;
 12280   008D7C  5058               	movf	disk_initialize@stat^0,w,c
 12281   008D7E  0012               	return		;funcret
 12282   008D80                     __end_of_disk_initialize:
 12283                           	callstack 0
 12284                           
 12285 ;; *************** function _SD_SPI_MediaInitialize *****************
 12286 ;; Defined at:
 12287 ;;		line 494 in file "mcc_generated_files/sd_spi/sd_spi.c"
 12288 ;; Parameters:    Size  Location     Type
 12289 ;;		None
 12290 ;; Auto vars:     Size  Location     Type
 12291 ;;  CSDResponse    20   45[COMRAM] unsigned char [20]
 12292 ;;  response        5   77[COMRAM] struct .
 12293 ;;  c_size          4   73[COMRAM] unsigned long 
 12294 ;;  timeout         2   82[COMRAM] unsigned short 
 12295 ;;  count           1   72[COMRAM] unsigned char 
 12296 ;;  block_len       1   71[COMRAM] unsigned char 
 12297 ;;  index           1   70[COMRAM] unsigned char 
 12298 ;;  c_size_mult     1   69[COMRAM] unsigned char 
 12299 ;; Return value:  Size  Location     Type
 12300 ;;                  1    wreg      _Bool 
 12301 ;; Registers used:
 12302 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 12303 ;; Tracked objects:
 12304 ;;		On entry : 0/0
 12305 ;;		On exit  : 0/0
 12306 ;;		Unchanged: 0/0
 12307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12309 ;;      Locals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12310 ;;      Temps:         11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12311 ;;      Totals:        50       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12312 ;;Total ram usage:       50 bytes
 12313 ;; Hardware stack levels used: 1
 12314 ;; Hardware stack levels required when called: 2
 12315 ;; This function calls:
 12316 ;;		_SDFAST_open
 12317 ;;		_SDSLOW_open
 12318 ;;		_SD_SPI_DelayMilliseconds
 12319 ;;		_SD_SendCmd
 12320 ;;		_SPI1_Close
 12321 ;;		_SPI1_ExchangeByte
 12322 ;;		___lmul
 12323 ;; This function is called by:
 12324 ;;		_disk_initialize
 12325 ;; This function uses a non-reentrant model
 12326 ;;
 12327                           
 12328                           	psect	text26
 12329   00E1FE                     __ptext26:
 12330                           	callstack 0
 12331   00E1FE                     _SD_SPI_MediaInitialize:
 12332                           	callstack 25
 12333   00E1FE                     
 12334                           ;mcc_generated_files/sd_spi/sd_spi.c: 496:     uint16_t timeout;;mcc_generated_files/sd_
      +                          spi/sd_spi.c: 497:     SD_RESPONSE response;;mcc_generated_files/sd_spi/sd_spi.c: 498:  
      +                             uint8_t CSDResponse[20];;mcc_generated_files/sd_spi/sd_spi.c: 499:     uint8_t count,
      +                           index;;mcc_generated_files/sd_spi/sd_spi.c: 500:     uint32_t c_size;;mcc_generated_fil
      +                          es/sd_spi/sd_spi.c: 501:     uint8_t c_size_mult;;mcc_generated_files/sd_spi/sd_spi.c: 5
      +                          02:     uint8_t block_len;;mcc_generated_files/sd_spi/sd_spi.c: 504:     mediaInformatio
      +                          n.state = SD_STATE_NOT_INITIALIZED;
 12335   00E1FE  0E00               	movlw	0
 12336   00E200  0101               	movlb	1	; () banked
 12337   00E202  6F53               	movwf	(_mediaInformation+3)& (0+255),b
 12338                           
 12339                           ;mcc_generated_files/sd_spi/sd_spi.c: 505:     mediaInformation.errorCode = MEDIA_NO_ERR
      +                          OR;
 12340   00E204  0E00               	movlw	0
 12341   00E206  6F50               	movwf	_mediaInformation& (0+255),b
 12342                           
 12343                           ;mcc_generated_files/sd_spi/sd_spi.c: 506:     mediaInformation.finalLBA = 0x00000000;
 12344   00E208  0E00               	movlw	0
 12345   00E20A  6F54               	movwf	(_mediaInformation+4)& (0+255),b
 12346   00E20C  0E00               	movlw	0
 12347   00E20E  6F55               	movwf	(_mediaInformation+5)& (0+255),b
 12348   00E210  0E00               	movlw	0
 12349   00E212  6F56               	movwf	(_mediaInformation+6)& (0+255),b
 12350   00E214  0E00               	movlw	0
 12351   00E216  6F57               	movwf	(_mediaInformation+7)& (0+255),b
 12352                           
 12353                           ;mcc_generated_files/sd_spi/sd_spi.c: 507:     mediaInformation.gSDMode = 0;
 12354   00E218  0E00               	movlw	0
 12355   00E21A  6F58               	movwf	(_mediaInformation+8)& (0+255),b
 12356   00E21C                     
 12357                           ; BSR set to: 1
 12358   00E21C  848B               	bsf	139,2,c	;volatile
 12359   00E21E                     
 12360                           ; BSR set to: 1
 12361                           ;mcc_generated_files/sd_spi/sd_spi.c: 513:     if( spiMaster[SDSLOW].spiOpen() == 0 )
 12362   00E21E  0EA1               	movlw	low (_spiMaster+22)
 12363   00E220  6EF6               	movwf	tblptrl,c
 12364   00E222  0EFF               	movlw	high (_spiMaster+22)
 12365   00E224  6EF7               	movwf	tblptrh,c
 12366   00E226                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12367   00E226  6AF8               	clrf	tblptru,c
 12368   00E228                     	endif
 12369   00E228                     	if	0	;tblptru may be non-zero
 12370   00E228                     	endif
 12371   00E228  0009               	tblrd		*+
 12372   00E22A  CFF5 F023          	movff	tablat,??_SD_SPI_MediaInitialize
 12373   00E22E  0009               	tblrd		*+
 12374   00E230  CFF5 F024          	movff	tablat,??_SD_SPI_MediaInitialize+1
 12375   00E234  D802               	call	u8438
 12376   00E236  EF26  F071         	goto	u8439
 12377   00E23A                     u8438:
 12378   00E23A  0005               	push	
 12379   00E23C  6EFA               	movwf	pclath,c
 12380   00E23E  5023               	movf	??_SD_SPI_MediaInitialize^0,w,c
 12381   00E240  6EFD               	movwf	tosl,c
 12382   00E242  5024               	movf	(??_SD_SPI_MediaInitialize+1)^0,w,c
 12383   00E244  6EFE               	movwf	tosh,c
 12384   00E246  6AFF               	clrf	tosu,c
 12385   00E248  50FA               	movf	pclath,w,c
 12386   00E24A  0012               	return		;indir
 12387   00E24C                     u8439:
 12388   00E24C  0900               	iorlw	0
 12389   00E24E  A4D8               	btfss	status,2,c
 12390   00E250  EF2C  F071         	goto	u8441
 12391   00E254  EF2E  F071         	goto	u8440
 12392   00E258                     u8441:
 12393   00E258  EF31  F071         	goto	l6633
 12394   00E25C                     u8440:
 12395   00E25C                     l6629:
 12396                           
 12397                           ;mcc_generated_files/sd_spi/sd_spi.c: 514:     {;mcc_generated_files/sd_spi/sd_spi.c: 51
      +                          5:         return 0;
 12398   00E25C  0E00               	movlw	0
 12399   00E25E  EFE5  F074         	goto	l211
 12400   00E262                     l6633:
 12401                           
 12402                           ;mcc_generated_files/sd_spi/sd_spi.c: 523:     SD_SPI_DelayMilliseconds(30u);
 12403   00E262  0E1E               	movlw	30
 12404   00E264  ECED  F046         	call	_SD_SPI_DelayMilliseconds
 12405   00E268                     
 12406                           ;mcc_generated_files/sd_spi/sd_spi.c: 526:     timeout = 100;
 12407   00E268  0E00               	movlw	0
 12408   00E26A  6E54               	movwf	(SD_SPI_MediaInitialize@timeout+1)^0,c
 12409   00E26C  0E64               	movlw	100
 12410   00E26E  6E53               	movwf	SD_SPI_MediaInitialize@timeout^0,c
 12411   00E270                     l6637:
 12412   00E270  848B               	bsf	139,2,c	;volatile
 12413   00E272                     
 12414                           ;mcc_generated_files/sd_spi/sd_spi.c: 534:         (void)spiMaster[SDFAST].exchangeByte(
      +                          0xFF);
 12415   00E272  0E8F               	movlw	low (_spiMaster+4)
 12416   00E274  6EF6               	movwf	tblptrl,c
 12417   00E276  0EFF               	movlw	high (_spiMaster+4)
 12418   00E278  6EF7               	movwf	tblptrh,c
 12419   00E27A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12420   00E27A  6AF8               	clrf	tblptru,c
 12421   00E27C                     	endif
 12422   00E27C                     	if	0	;tblptru may be non-zero
 12423   00E27C                     	endif
 12424   00E27C  0009               	tblrd		*+
 12425   00E27E  CFF5 F023          	movff	tablat,??_SD_SPI_MediaInitialize
 12426   00E282  0009               	tblrd		*+
 12427   00E284  CFF5 F024          	movff	tablat,??_SD_SPI_MediaInitialize+1
 12428   00E288  D802               	call	u8458
 12429   00E28A  EF51  F071         	goto	u8459
 12430   00E28E                     u8458:
 12431   00E28E  0005               	push	
 12432   00E290  6EFA               	movwf	pclath,c
 12433   00E292  5023               	movf	??_SD_SPI_MediaInitialize^0,w,c
 12434   00E294  6EFD               	movwf	tosl,c
 12435   00E296  5024               	movf	(??_SD_SPI_MediaInitialize+1)^0,w,c
 12436   00E298  6EFE               	movwf	tosh,c
 12437   00E29A  6AFF               	clrf	tosu,c
 12438   00E29C  50FA               	movf	pclath,w,c
 12439   00E29E  0EFF               	movlw	255
 12440   00E2A0  0012               	return		;indir
 12441   00E2A2                     u8459:
 12442   00E2A2  948B               	bcf	139,2,c	;volatile
 12443   00E2A4                     
 12444                           ;mcc_generated_files/sd_spi/sd_spi.c: 539:         timeout--;
 12445   00E2A4  0653               	decf	SD_SPI_MediaInitialize@timeout^0,f,c
 12446   00E2A6  A0D8               	btfss	status,0,c
 12447   00E2A8  0654               	decf	(SD_SPI_MediaInitialize@timeout+1)^0,f,c
 12448   00E2AA                     
 12449                           ;mcc_generated_files/sd_spi/sd_spi.c: 542:         response = SD_SendCmd(SD_GO_IDLE_STAT
      +                          E, 0x0);
 12450   00E2AA  0E00               	movlw	0
 12451   00E2AC  6E0C               	movwf	SD_SendCmd@address^0,c
 12452   00E2AE  0E00               	movlw	0
 12453   00E2B0  6E0D               	movwf	(SD_SendCmd@address+1)^0,c
 12454   00E2B2  0E00               	movlw	0
 12455   00E2B4  6E0E               	movwf	(SD_SendCmd@address+2)^0,c
 12456   00E2B6  0E00               	movlw	0
 12457   00E2B8  6E0F               	movwf	(SD_SendCmd@address+3)^0,c
 12458   00E2BA  0E00               	movlw	0
 12459   00E2BC  EC1B  F062         	call	_SD_SendCmd
 12460   00E2C0  EE20  F04E         	lfsr	2,SD_SPI_MediaInitialize@response
 12461   00E2C4  0E04               	movlw	4
 12462   00E2C6                     u8461:
 12463   00E2C6  CFEB FFDB          	movff	plusw0,plusw2
 12464   00E2CA  06E8               	decf	wreg,f,c
 12465   00E2CC  E2FC               	bc	u8461
 12466   00E2CE                     
 12467                           ;mcc_generated_files/sd_spi/sd_spi.c: 543:     }while((response.r1._byte != 0x01) && (ti
      +                          meout != 0));
 12468   00E2CE  044E               	decf	SD_SPI_MediaInitialize@response^0,w,c
 12469   00E2D0  B4D8               	btfsc	status,2,c
 12470   00E2D2  EF6D  F071         	goto	u8471
 12471   00E2D6  EF6F  F071         	goto	u8470
 12472   00E2DA                     u8471:
 12473   00E2DA  EF78  F071         	goto	l6651
 12474   00E2DE                     u8470:
 12475   00E2DE  5053               	movf	SD_SPI_MediaInitialize@timeout^0,w,c
 12476   00E2E0  1054               	iorwf	(SD_SPI_MediaInitialize@timeout+1)^0,w,c
 12477   00E2E2  A4D8               	btfss	status,2,c
 12478   00E2E4  EF76  F071         	goto	u8481
 12479   00E2E8  EF78  F071         	goto	u8480
 12480   00E2EC                     u8481:
 12481   00E2EC  EF38  F071         	goto	l6637
 12482   00E2F0                     u8480:
 12483   00E2F0                     l6651:
 12484                           
 12485                           ;mcc_generated_files/sd_spi/sd_spi.c: 552:     if(timeout == 0)
 12486   00E2F0  5053               	movf	SD_SPI_MediaInitialize@timeout^0,w,c
 12487   00E2F2  1054               	iorwf	(SD_SPI_MediaInitialize@timeout+1)^0,w,c
 12488   00E2F4  A4D8               	btfss	status,2,c
 12489   00E2F6  EF7F  F071         	goto	u8491
 12490   00E2FA  EF81  F071         	goto	u8490
 12491   00E2FE                     u8491:
 12492   00E2FE  EFDE  F071         	goto	l6675
 12493   00E302                     u8490:
 12494   00E302  848B               	bsf	139,2,c	;volatile
 12495   00E304                     
 12496                           ;mcc_generated_files/sd_spi/sd_spi.c: 555:         (void)spiMaster[SDFAST].exchangeByte(
      +                          0xFF);
 12497   00E304  0E8F               	movlw	low (_spiMaster+4)
 12498   00E306  6EF6               	movwf	tblptrl,c
 12499   00E308  0EFF               	movlw	high (_spiMaster+4)
 12500   00E30A  6EF7               	movwf	tblptrh,c
 12501   00E30C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12502   00E30C  6AF8               	clrf	tblptru,c
 12503   00E30E                     	endif
 12504   00E30E                     	if	0	;tblptru may be non-zero
 12505   00E30E                     	endif
 12506   00E30E  0009               	tblrd		*+
 12507   00E310  CFF5 F023          	movff	tablat,??_SD_SPI_MediaInitialize
 12508   00E314  0009               	tblrd		*+
 12509   00E316  CFF5 F024          	movff	tablat,??_SD_SPI_MediaInitialize+1
 12510   00E31A  D802               	call	u8508
 12511   00E31C  EF9A  F071         	goto	u8509
 12512   00E320                     u8508:
 12513   00E320  0005               	push	
 12514   00E322  6EFA               	movwf	pclath,c
 12515   00E324  5023               	movf	??_SD_SPI_MediaInitialize^0,w,c
 12516   00E326  6EFD               	movwf	tosl,c
 12517   00E328  5024               	movf	(??_SD_SPI_MediaInitialize+1)^0,w,c
 12518   00E32A  6EFE               	movwf	tosh,c
 12519   00E32C  6AFF               	clrf	tosu,c
 12520   00E32E  50FA               	movf	pclath,w,c
 12521   00E330  0EFF               	movlw	255
 12522   00E332  0012               	return		;indir
 12523   00E334                     u8509:
 12524   00E334  948B               	bcf	139,2,c	;volatile
 12525   00E336                     
 12526                           ;mcc_generated_files/sd_spi/sd_spi.c: 562:         (void)SD_SendCmd(SD_STOP_TRANSMISSION
      +                          , 0x0);
 12527   00E336  0E00               	movlw	0
 12528   00E338  6E0C               	movwf	SD_SendCmd@address^0,c
 12529   00E33A  0E00               	movlw	0
 12530   00E33C  6E0D               	movwf	(SD_SendCmd@address+1)^0,c
 12531   00E33E  0E00               	movlw	0
 12532   00E340  6E0E               	movwf	(SD_SendCmd@address+2)^0,c
 12533   00E342  0E00               	movlw	0
 12534   00E344  6E0F               	movwf	(SD_SendCmd@address+3)^0,c
 12535   00E346  0E05               	movlw	5
 12536   00E348  EC1B  F062         	call	_SD_SendCmd
 12537   00E34C                     
 12538                           ;mcc_generated_files/sd_spi/sd_spi.c: 564:         response = SD_SendCmd(SD_GO_IDLE_STAT
      +                          E, 0x0);
 12539   00E34C  0E00               	movlw	0
 12540   00E34E  6E0C               	movwf	SD_SendCmd@address^0,c
 12541   00E350  0E00               	movlw	0
 12542   00E352  6E0D               	movwf	(SD_SendCmd@address+1)^0,c
 12543   00E354  0E00               	movlw	0
 12544   00E356  6E0E               	movwf	(SD_SendCmd@address+2)^0,c
 12545   00E358  0E00               	movlw	0
 12546   00E35A  6E0F               	movwf	(SD_SendCmd@address+3)^0,c
 12547   00E35C  0E00               	movlw	0
 12548   00E35E  EC1B  F062         	call	_SD_SendCmd
 12549   00E362  EE20  F04E         	lfsr	2,SD_SPI_MediaInitialize@response
 12550   00E366  0E04               	movlw	4
 12551   00E368                     u8511:
 12552   00E368  CFEB FFDB          	movff	plusw0,plusw2
 12553   00E36C  06E8               	decf	wreg,f,c
 12554   00E36E  E2FC               	bc	u8511
 12555   00E370                     
 12556                           ;mcc_generated_files/sd_spi/sd_spi.c: 565:         if(response.r1._byte != 0x01)
 12557   00E370  044E               	decf	SD_SPI_MediaInitialize@response^0,w,c
 12558   00E372  B4D8               	btfsc	status,2,c
 12559   00E374  EFBE  F071         	goto	u8521
 12560   00E378  EFC0  F071         	goto	u8520
 12561   00E37C                     u8521:
 12562   00E37C  EFDE  F071         	goto	l6675
 12563   00E380                     u8520:
 12564   00E380                     
 12565                           ;mcc_generated_files/sd_spi/sd_spi.c: 566:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 574:             mediaInformation.errorCode = MEDIA_CANNOT_INITIALIZE;
 12566   00E380  0E02               	movlw	2
 12567   00E382  0101               	movlb	1	; () banked
 12568   00E384  6F50               	movwf	_mediaInformation& (0+255),b
 12569   00E386                     
 12570                           ; BSR set to: 1
 12571   00E386  848B               	bsf	139,2,c	;volatile
 12572   00E388                     
 12573                           ; BSR set to: 1
 12574                           ;mcc_generated_files/sd_spi/sd_spi.c: 577:             spiMaster[SDFAST].spiClose();
 12575   00E388  0E8B               	movlw	low _spiMaster
 12576   00E38A  6EF6               	movwf	tblptrl,c
 12577   00E38C                     	if	1	;There is more than 1 active tblptr byte
 12578   00E38C  0EFF               	movlw	high _spiMaster
 12579   00E38E  6EF7               	movwf	tblptrh,c
 12580   00E390                     	endif
 12581   00E390                     	if	1	;There are 3 active tblptr bytes
 12582   00E390  0E00               	movlw	low (_spiMaster shr (0+16))
 12583   00E392  6EF8               	movwf	tblptru,c
 12584   00E394                     	endif
 12585   00E394  0009               	tblrd		*+
 12586   00E396  CFF5 F023          	movff	tablat,??_SD_SPI_MediaInitialize
 12587   00E39A  0009               	tblrd		*+
 12588   00E39C  CFF5 F024          	movff	tablat,??_SD_SPI_MediaInitialize+1
 12589   00E3A0  D802               	call	u8538
 12590   00E3A2  EFDC  F071         	goto	u8539
 12591   00E3A6                     u8538:
 12592   00E3A6  0005               	push	
 12593   00E3A8  6EFA               	movwf	pclath,c
 12594   00E3AA  5023               	movf	??_SD_SPI_MediaInitialize^0,w,c
 12595   00E3AC  6EFD               	movwf	tosl,c
 12596   00E3AE  5024               	movf	(??_SD_SPI_MediaInitialize+1)^0,w,c
 12597   00E3B0  6EFE               	movwf	tosh,c
 12598   00E3B2  6AFF               	clrf	tosu,c
 12599   00E3B4  50FA               	movf	pclath,w,c
 12600   00E3B6  0012               	return		;indir
 12601   00E3B8                     u8539:
 12602   00E3B8  EF2E  F071         	goto	l6629
 12603   00E3BC                     l6675:
 12604                           
 12605                           ;mcc_generated_files/sd_spi/sd_spi.c: 598:     response = SD_SendCmd(SD_SEND_IF_COND, 0x
      +                          1AA);
 12606   00E3BC  0EAA               	movlw	170
 12607   00E3BE  6E0C               	movwf	SD_SendCmd@address^0,c
 12608   00E3C0  0E01               	movlw	1
 12609   00E3C2  6E0D               	movwf	(SD_SendCmd@address+1)^0,c
 12610   00E3C4  0E00               	movlw	0
 12611   00E3C6  6E0E               	movwf	(SD_SendCmd@address+2)^0,c
 12612   00E3C8  0E00               	movlw	0
 12613   00E3CA  6E0F               	movwf	(SD_SendCmd@address+3)^0,c
 12614   00E3CC  0E02               	movlw	2
 12615   00E3CE  EC1B  F062         	call	_SD_SendCmd
 12616   00E3D2  EE20  F04E         	lfsr	2,SD_SPI_MediaInitialize@response
 12617   00E3D6  0E04               	movlw	4
 12618   00E3D8                     u8541:
 12619   00E3D8  CFEB FFDB          	movff	plusw0,plusw2
 12620   00E3DC  06E8               	decf	wreg,f,c
 12621   00E3DE  E2FC               	bc	u8541
 12622   00E3E0                     
 12623                           ;mcc_generated_files/sd_spi/sd_spi.c: 599:     if(((response.r7.bytewise.argument._retur
      +                          nVal & 0xFFF) == 0x1AA) && (!response.r7.bitwise.bits.ILLEGAL_CMD))
 12624   00E3E0  EE20  F04F         	lfsr	2,SD_SPI_MediaInitialize@response+1
 12625   00E3E4  0EFF               	movlw	255
 12626   00E3E6  14DE               	andwf	postinc2,w,c
 12627   00E3E8  6E23               	movwf	??_SD_SPI_MediaInitialize^0,c
 12628   00E3EA  0E0F               	movlw	15
 12629   00E3EC  14DE               	andwf	postinc2,w,c
 12630   00E3EE  6E24               	movwf	(??_SD_SPI_MediaInitialize+1)^0,c
 12631   00E3F0  0E00               	movlw	0
 12632   00E3F2  14DE               	andwf	postinc2,w,c
 12633   00E3F4  6E25               	movwf	(??_SD_SPI_MediaInitialize+2)^0,c
 12634   00E3F6  0E00               	movlw	0
 12635   00E3F8  14DE               	andwf	postinc2,w,c
 12636   00E3FA  6E26               	movwf	(??_SD_SPI_MediaInitialize+3)^0,c
 12637   00E3FC  0EAA               	movlw	170
 12638   00E3FE  1823               	xorwf	??_SD_SPI_MediaInitialize^0,w,c
 12639   00E400  E108               	bnz	u8551
 12640   00E402  0424               	decf	(??_SD_SPI_MediaInitialize+1)^0,w,c
 12641   00E404  1025               	iorwf	(??_SD_SPI_MediaInitialize+2)^0,w,c
 12642   00E406  1026               	iorwf	(??_SD_SPI_MediaInitialize+3)^0,w,c
 12643   00E408  A4D8               	btfss	status,2,c
 12644   00E40A  EF09  F072         	goto	u8551
 12645   00E40E  EF0B  F072         	goto	u8550
 12646   00E412                     u8551:
 12647   00E412  EF84  F072         	goto	l6711
 12648   00E416                     u8550:
 12649   00E416  B44E               	btfsc	SD_SPI_MediaInitialize@response^0,2,c
 12650   00E418  EF10  F072         	goto	u8561
 12651   00E41C  EF12  F072         	goto	u8560
 12652   00E420                     u8561:
 12653   00E420  EF84  F072         	goto	l6711
 12654   00E424                     u8560:
 12655   00E424  0E00               	movlw	0
 12656   00E426  6E0C               	movwf	SD_SendCmd@address^0,c
 12657   00E428  0E00               	movlw	0
 12658   00E42A  6E0D               	movwf	(SD_SendCmd@address+1)^0,c
 12659   00E42C  0E00               	movlw	0
 12660   00E42E  6E0E               	movwf	(SD_SendCmd@address+2)^0,c
 12661   00E430  0E00               	movlw	0
 12662   00E432  6E0F               	movwf	(SD_SendCmd@address+3)^0,c
 12663   00E434  0E10               	movlw	16
 12664   00E436  EC1B  F062         	call	_SD_SendCmd
 12665   00E43A                     
 12666                           ;mcc_generated_files/sd_spi/sd_spi.c: 617:         for(timeout = 0; timeout < 0xFFFF; ti
      +                          meout++)
 12667   00E43A  0E00               	movlw	0
 12668   00E43C  6E54               	movwf	(SD_SPI_MediaInitialize@timeout+1)^0,c
 12669   00E43E  0E00               	movlw	0
 12670   00E440  6E53               	movwf	SD_SPI_MediaInitialize@timeout^0,c
 12671   00E442                     l6689:
 12672                           
 12673                           ;mcc_generated_files/sd_spi/sd_spi.c: 618:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 620:             (void)SD_SendCmd(SD_APP_CMD, 0x00000000);
 12674   00E442  0E00               	movlw	0
 12675   00E444  6E0C               	movwf	SD_SendCmd@address^0,c
 12676   00E446  0E00               	movlw	0
 12677   00E448  6E0D               	movwf	(SD_SendCmd@address+1)^0,c
 12678   00E44A  0E00               	movlw	0
 12679   00E44C  6E0E               	movwf	(SD_SendCmd@address+2)^0,c
 12680   00E44E  0E00               	movlw	0
 12681   00E450  6E0F               	movwf	(SD_SendCmd@address+3)^0,c
 12682   00E452  0E0F               	movlw	15
 12683   00E454  EC1B  F062         	call	_SD_SendCmd
 12684                           
 12685                           ;mcc_generated_files/sd_spi/sd_spi.c: 625:             response = SD_SendCmd(SD_SD_SEND_
      +                          OP_COND,0x40000000);
 12686   00E458  0E00               	movlw	0
 12687   00E45A  6E0C               	movwf	SD_SendCmd@address^0,c
 12688   00E45C  0E00               	movlw	0
 12689   00E45E  6E0D               	movwf	(SD_SendCmd@address+1)^0,c
 12690   00E460  0E00               	movlw	0
 12691   00E462  6E0E               	movwf	(SD_SendCmd@address+2)^0,c
 12692   00E464  0E40               	movlw	64
 12693   00E466  6E0F               	movwf	(SD_SendCmd@address+3)^0,c
 12694   00E468  0E12               	movlw	18
 12695   00E46A  EC1B  F062         	call	_SD_SendCmd
 12696   00E46E  EE20  F04E         	lfsr	2,SD_SPI_MediaInitialize@response
 12697   00E472  0E04               	movlw	4
 12698   00E474                     u8571:
 12699   00E474  CFEB FFDB          	movff	plusw0,plusw2
 12700   00E478  06E8               	decf	wreg,f,c
 12701   00E47A  E2FC               	bc	u8571
 12702   00E47C                     
 12703                           ;mcc_generated_files/sd_spi/sd_spi.c: 631:             if(response.r1._byte == 0)
 12704   00E47C  504E               	movf	SD_SPI_MediaInitialize@response^0,w,c
 12705   00E47E  A4D8               	btfss	status,2,c
 12706   00E480  EF44  F072         	goto	u8581
 12707   00E484  EF46  F072         	goto	u8580
 12708   00E488                     u8581:
 12709   00E488  EF48  F072         	goto	l6695
 12710   00E48C                     u8580:
 12711   00E48C  EF54  F072         	goto	l6699
 12712   00E490                     l6695:
 12713                           
 12714                           ;mcc_generated_files/sd_spi/sd_spi.c: 635:         }
 12715   00E490  4A53               	infsnz	SD_SPI_MediaInitialize@timeout^0,f,c
 12716   00E492  2A54               	incf	(SD_SPI_MediaInitialize@timeout+1)^0,f,c
 12717   00E494  2853               	incf	SD_SPI_MediaInitialize@timeout^0,w,c
 12718   00E496  E106               	bnz	u8591
 12719   00E498  2854               	incf	(SD_SPI_MediaInitialize@timeout+1)^0,w,c
 12720   00E49A  A4D8               	btfss	status,2,c
 12721   00E49C  EF52  F072         	goto	u8591
 12722   00E4A0  EF54  F072         	goto	u8590
 12723   00E4A4                     u8591:
 12724   00E4A4  EF21  F072         	goto	l6689
 12725   00E4A8                     u8590:
 12726   00E4A8                     l6699:
 12727                           
 12728                           ;mcc_generated_files/sd_spi/sd_spi.c: 637:         if(timeout >= 0xFFFF)
 12729   00E4A8  2853               	incf	SD_SPI_MediaInitialize@timeout^0,w,c
 12730   00E4AA  E106               	bnz	u8601
 12731   00E4AC  2854               	incf	(SD_SPI_MediaInitialize@timeout+1)^0,w,c
 12732   00E4AE  A4D8               	btfss	status,2,c
 12733   00E4B0  EF5C  F072         	goto	u8601
 12734   00E4B4  EF5E  F072         	goto	u8600
 12735   00E4B8                     u8601:
 12736   00E4B8  EF61  F072         	goto	l6703
 12737   00E4BC                     u8600:
 12738   00E4BC                     
 12739                           ;mcc_generated_files/sd_spi/sd_spi.c: 638:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 639:             mediaInformation.errorCode = MEDIA_CANNOT_INITIALIZE;
 12740   00E4BC  0E02               	movlw	2
 12741   00E4BE  0101               	movlb	1	; () banked
 12742   00E4C0  6F50               	movwf	_mediaInformation& (0+255),b
 12743   00E4C2                     l6703:
 12744                           
 12745                           ;mcc_generated_files/sd_spi/sd_spi.c: 644:         response = SD_SendCmd(SD_READ_OCR, 0x
      +                          0);
 12746   00E4C2  0E00               	movlw	0
 12747   00E4C4  6E0C               	movwf	SD_SendCmd@address^0,c
 12748   00E4C6  0E00               	movlw	0
 12749   00E4C8  6E0D               	movwf	(SD_SendCmd@address+1)^0,c
 12750   00E4CA  0E00               	movlw	0
 12751   00E4CC  6E0E               	movwf	(SD_SendCmd@address+2)^0,c
 12752   00E4CE  0E00               	movlw	0
 12753   00E4D0  6E0F               	movwf	(SD_SendCmd@address+3)^0,c
 12754   00E4D2  0E10               	movlw	16
 12755   00E4D4  EC1B  F062         	call	_SD_SendCmd
 12756   00E4D8  EE20  F04E         	lfsr	2,SD_SPI_MediaInitialize@response
 12757   00E4DC  0E04               	movlw	4
 12758   00E4DE                     u8611:
 12759   00E4DE  CFEB FFDB          	movff	plusw0,plusw2
 12760   00E4E2  06E8               	decf	wreg,f,c
 12761   00E4E4  E2FC               	bc	u8611
 12762   00E4E6                     
 12763                           ;mcc_generated_files/sd_spi/sd_spi.c: 648:         if(response.r7.bytewise.argument._ret
      +                          urnVal & 0x40000000)
 12764   00E4E6  AC52               	btfss	(SD_SPI_MediaInitialize@response+4)^0,6,c
 12765   00E4E8  EF78  F072         	goto	u8621
 12766   00E4EC  EF7A  F072         	goto	u8620
 12767   00E4F0                     u8621:
 12768   00E4F0  EF7F  F072         	goto	l6709
 12769   00E4F4                     u8620:
 12770   00E4F4                     
 12771                           ;mcc_generated_files/sd_spi/sd_spi.c: 649:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 650:             mediaInformation.gSDMode = 1;
 12772   00E4F4  0E01               	movlw	1
 12773   00E4F6  0101               	movlb	1	; () banked
 12774   00E4F8  6F58               	movwf	(_mediaInformation+8)& (0+255),b
 12775                           
 12776                           ;mcc_generated_files/sd_spi/sd_spi.c: 651:         }
 12777   00E4FA  EFC1  F072         	goto	l248
 12778   00E4FE                     l6709:
 12779                           
 12780                           ;mcc_generated_files/sd_spi/sd_spi.c: 653:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 654:             mediaInformation.gSDMode = 0;
 12781   00E4FE  0E00               	movlw	0
 12782   00E500  0101               	movlb	1	; () banked
 12783   00E502  6F58               	movwf	(_mediaInformation+8)& (0+255),b
 12784   00E504  EFC1  F072         	goto	l248
 12785   00E508                     l6711:
 12786                           
 12787                           ;mcc_generated_files/sd_spi/sd_spi.c: 661:     {;mcc_generated_files/sd_spi/sd_spi.c: 66
      +                          6:         SD_SPI_DelayMilliseconds(1u);
 12788   00E508  0E01               	movlw	1
 12789   00E50A  ECED  F046         	call	_SD_SPI_DelayMilliseconds
 12790   00E50E  948B               	bcf	139,2,c	;volatile
 12791   00E510                     
 12792                           ;mcc_generated_files/sd_spi/sd_spi.c: 671:         mediaInformation.gSDMode = 0;
 12793   00E510  0E00               	movlw	0
 12794   00E512  0101               	movlb	1	; () banked
 12795   00E514  6F58               	movwf	(_mediaInformation+8)& (0+255),b
 12796   00E516                     
 12797                           ; BSR set to: 1
 12798                           ;mcc_generated_files/sd_spi/sd_spi.c: 673:         timeout = 0x1FFF;
 12799   00E516  0E1F               	movlw	31
 12800   00E518  6E54               	movwf	(SD_SPI_MediaInitialize@timeout+1)^0,c
 12801   00E51A  6853               	setf	SD_SPI_MediaInitialize@timeout^0,c
 12802   00E51C                     l6719:
 12803                           
 12804                           ;mcc_generated_files/sd_spi/sd_spi.c: 675:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 677:             response = SD_SendCmd(SD_SEND_OP_COND, 0x00000000);
 12805   00E51C  0E00               	movlw	0
 12806   00E51E  6E0C               	movwf	SD_SendCmd@address^0,c
 12807   00E520  0E00               	movlw	0
 12808   00E522  6E0D               	movwf	(SD_SendCmd@address+1)^0,c
 12809   00E524  0E00               	movlw	0
 12810   00E526  6E0E               	movwf	(SD_SendCmd@address+2)^0,c
 12811   00E528  0E00               	movlw	0
 12812   00E52A  6E0F               	movwf	(SD_SendCmd@address+3)^0,c
 12813   00E52C  0E01               	movlw	1
 12814   00E52E  EC1B  F062         	call	_SD_SendCmd
 12815   00E532  EE20  F04E         	lfsr	2,SD_SPI_MediaInitialize@response
 12816   00E536  0E04               	movlw	4
 12817   00E538                     u8631:
 12818   00E538  CFEB FFDB          	movff	plusw0,plusw2
 12819   00E53C  06E8               	decf	wreg,f,c
 12820   00E53E  E2FC               	bc	u8631
 12821   00E540                     
 12822                           ;mcc_generated_files/sd_spi/sd_spi.c: 678:             timeout--;
 12823   00E540  0653               	decf	SD_SPI_MediaInitialize@timeout^0,f,c
 12824   00E542  A0D8               	btfss	status,0,c
 12825   00E544  0654               	decf	(SD_SPI_MediaInitialize@timeout+1)^0,f,c
 12826   00E546                     
 12827                           ;mcc_generated_files/sd_spi/sd_spi.c: 679:         }while((response.r1._byte != 0x00) &&
      +                           (timeout != 0));
 12828   00E546  504E               	movf	SD_SPI_MediaInitialize@response^0,w,c
 12829   00E548  B4D8               	btfsc	status,2,c
 12830   00E54A  EFA9  F072         	goto	u8641
 12831   00E54E  EFAB  F072         	goto	u8640
 12832   00E552                     u8641:
 12833   00E552  EFB4  F072         	goto	l6727
 12834   00E556                     u8640:
 12835   00E556  5053               	movf	SD_SPI_MediaInitialize@timeout^0,w,c
 12836   00E558  1054               	iorwf	(SD_SPI_MediaInitialize@timeout+1)^0,w,c
 12837   00E55A  A4D8               	btfss	status,2,c
 12838   00E55C  EFB2  F072         	goto	u8651
 12839   00E560  EFB4  F072         	goto	u8650
 12840   00E564                     u8651:
 12841   00E564  EF8E  F072         	goto	l6719
 12842   00E568                     u8650:
 12843   00E568                     l6727:
 12844                           
 12845                           ;mcc_generated_files/sd_spi/sd_spi.c: 682:         if(timeout == 0)
 12846   00E568  5053               	movf	SD_SPI_MediaInitialize@timeout^0,w,c
 12847   00E56A  1054               	iorwf	(SD_SPI_MediaInitialize@timeout+1)^0,w,c
 12848   00E56C  A4D8               	btfss	status,2,c
 12849   00E56E  EFBB  F072         	goto	u8661
 12850   00E572  EFBD  F072         	goto	u8660
 12851   00E576                     u8661:
 12852   00E576  EFC1  F072         	goto	l248
 12853   00E57A                     u8660:
 12854   00E57A                     
 12855                           ;mcc_generated_files/sd_spi/sd_spi.c: 683:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 684:             mediaInformation.errorCode = MEDIA_CANNOT_INITIALIZE;
 12856   00E57A  0E02               	movlw	2
 12857   00E57C  0101               	movlb	1	; () banked
 12858   00E57E  6F50               	movwf	_mediaInformation& (0+255),b
 12859   00E580                     
 12860                           ; BSR set to: 1
 12861   00E580  848B               	bsf	139,2,c	;volatile
 12862   00E582                     l248:
 12863   00E582  848B               	bsf	139,2,c	;volatile
 12864   00E584                     
 12865                           ;mcc_generated_files/sd_spi/sd_spi.c: 699:     spiMaster[SDFAST].spiClose();
 12866   00E584  0E8B               	movlw	low _spiMaster
 12867   00E586  6EF6               	movwf	tblptrl,c
 12868   00E588                     	if	1	;There is more than 1 active tblptr byte
 12869   00E588  0EFF               	movlw	high _spiMaster
 12870   00E58A  6EF7               	movwf	tblptrh,c
 12871   00E58C                     	endif
 12872   00E58C                     	if	1	;There are 3 active tblptr bytes
 12873   00E58C  0E00               	movlw	low (_spiMaster shr (0+16))
 12874   00E58E  6EF8               	movwf	tblptru,c
 12875   00E590                     	endif
 12876   00E590  0009               	tblrd		*+
 12877   00E592  CFF5 F023          	movff	tablat,??_SD_SPI_MediaInitialize
 12878   00E596  0009               	tblrd		*+
 12879   00E598  CFF5 F024          	movff	tablat,??_SD_SPI_MediaInitialize+1
 12880   00E59C  D802               	call	u8678
 12881   00E59E  EFDA  F072         	goto	u8679
 12882   00E5A2                     u8678:
 12883   00E5A2  0005               	push	
 12884   00E5A4  6EFA               	movwf	pclath,c
 12885   00E5A6  5023               	movf	??_SD_SPI_MediaInitialize^0,w,c
 12886   00E5A8  6EFD               	movwf	tosl,c
 12887   00E5AA  5024               	movf	(??_SD_SPI_MediaInitialize+1)^0,w,c
 12888   00E5AC  6EFE               	movwf	tosh,c
 12889   00E5AE  6AFF               	clrf	tosu,c
 12890   00E5B0  50FA               	movf	pclath,w,c
 12891   00E5B2  0012               	return		;indir
 12892   00E5B4                     u8679:
 12893   00E5B4                     
 12894                           ;mcc_generated_files/sd_spi/sd_spi.c: 700:     if(spiMaster[SDFAST].spiOpen() == 0)
 12895   00E5B4  0E8D               	movlw	low (_spiMaster+2)
 12896   00E5B6  6EF6               	movwf	tblptrl,c
 12897   00E5B8  0EFF               	movlw	high (_spiMaster+2)
 12898   00E5BA  6EF7               	movwf	tblptrh,c
 12899   00E5BC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12900   00E5BC  6AF8               	clrf	tblptru,c
 12901   00E5BE                     	endif
 12902   00E5BE                     	if	0	;tblptru may be non-zero
 12903   00E5BE                     	endif
 12904   00E5BE  0009               	tblrd		*+
 12905   00E5C0  CFF5 F023          	movff	tablat,??_SD_SPI_MediaInitialize
 12906   00E5C4  0009               	tblrd		*+
 12907   00E5C6  CFF5 F024          	movff	tablat,??_SD_SPI_MediaInitialize+1
 12908   00E5CA  D802               	call	u8688
 12909   00E5CC  EFF1  F072         	goto	u8689
 12910   00E5D0                     u8688:
 12911   00E5D0  0005               	push	
 12912   00E5D2  6EFA               	movwf	pclath,c
 12913   00E5D4  5023               	movf	??_SD_SPI_MediaInitialize^0,w,c
 12914   00E5D6  6EFD               	movwf	tosl,c
 12915   00E5D8  5024               	movf	(??_SD_SPI_MediaInitialize+1)^0,w,c
 12916   00E5DA  6EFE               	movwf	tosh,c
 12917   00E5DC  6AFF               	clrf	tosu,c
 12918   00E5DE  50FA               	movf	pclath,w,c
 12919   00E5E0  0012               	return		;indir
 12920   00E5E2                     u8689:
 12921   00E5E2  0900               	iorlw	0
 12922   00E5E4  A4D8               	btfss	status,2,c
 12923   00E5E6  EFF7  F072         	goto	u8691
 12924   00E5EA  EFF9  F072         	goto	u8690
 12925   00E5EE                     u8691:
 12926   00E5EE  EFFB  F072         	goto	l251
 12927   00E5F2                     u8690:
 12928   00E5F2  EF2E  F071         	goto	l6629
 12929   00E5F6                     l251:
 12930   00E5F6  948B               	bcf	139,2,c	;volatile
 12931   00E5F8                     
 12932                           ;mcc_generated_files/sd_spi/sd_spi.c: 708:     timeout = (uint16_t)20;
 12933   00E5F8  0E00               	movlw	0
 12934   00E5FA  6E54               	movwf	(SD_SPI_MediaInitialize@timeout+1)^0,c
 12935   00E5FC  0E14               	movlw	20
 12936   00E5FE  6E53               	movwf	SD_SPI_MediaInitialize@timeout^0,c
 12937   00E600                     l6743:
 12938                           
 12939                           ;mcc_generated_files/sd_spi/sd_spi.c: 710:     {;mcc_generated_files/sd_spi/sd_spi.c: 71
      +                          2:         response = SD_SendCmd(SD_SEND_CSD, 0x00);
 12940   00E600  0E00               	movlw	0
 12941   00E602  6E0C               	movwf	SD_SendCmd@address^0,c
 12942   00E604  0E00               	movlw	0
 12943   00E606  6E0D               	movwf	(SD_SendCmd@address+1)^0,c
 12944   00E608  0E00               	movlw	0
 12945   00E60A  6E0E               	movwf	(SD_SendCmd@address+2)^0,c
 12946   00E60C  0E00               	movlw	0
 12947   00E60E  6E0F               	movwf	(SD_SendCmd@address+3)^0,c
 12948   00E610  0E03               	movlw	3
 12949   00E612  EC1B  F062         	call	_SD_SendCmd
 12950   00E616  EE20  F04E         	lfsr	2,SD_SPI_MediaInitialize@response
 12951   00E61A  0E04               	movlw	4
 12952   00E61C                     u8701:
 12953   00E61C  CFEB FFDB          	movff	plusw0,plusw2
 12954   00E620  06E8               	decf	wreg,f,c
 12955   00E622  E2FC               	bc	u8701
 12956   00E624                     
 12957                           ;mcc_generated_files/sd_spi/sd_spi.c: 713:         timeout--;
 12958   00E624  0653               	decf	SD_SPI_MediaInitialize@timeout^0,f,c
 12959   00E626  A0D8               	btfss	status,0,c
 12960   00E628  0654               	decf	(SD_SPI_MediaInitialize@timeout+1)^0,f,c
 12961   00E62A                     
 12962                           ;mcc_generated_files/sd_spi/sd_spi.c: 714:     }while((response.r1._byte != 0x00) && (ti
      +                          meout != 0));
 12963   00E62A  504E               	movf	SD_SPI_MediaInitialize@response^0,w,c
 12964   00E62C  B4D8               	btfsc	status,2,c
 12965   00E62E  EF1B  F073         	goto	u8711
 12966   00E632  EF1D  F073         	goto	u8710
 12967   00E636                     u8711:
 12968   00E636  EF26  F073         	goto	l6751
 12969   00E63A                     u8710:
 12970   00E63A  5053               	movf	SD_SPI_MediaInitialize@timeout^0,w,c
 12971   00E63C  1054               	iorwf	(SD_SPI_MediaInitialize@timeout+1)^0,w,c
 12972   00E63E  A4D8               	btfss	status,2,c
 12973   00E640  EF24  F073         	goto	u8721
 12974   00E644  EF26  F073         	goto	u8720
 12975   00E648                     u8721:
 12976   00E648  EF00  F073         	goto	l6743
 12977   00E64C                     u8720:
 12978   00E64C                     l6751:
 12979                           
 12980                           ;mcc_generated_files/sd_spi/sd_spi.c: 716:     if(timeout == 0x00)
 12981   00E64C  5053               	movf	SD_SPI_MediaInitialize@timeout^0,w,c
 12982   00E64E  1054               	iorwf	(SD_SPI_MediaInitialize@timeout+1)^0,w,c
 12983   00E650  A4D8               	btfss	status,2,c
 12984   00E652  EF2D  F073         	goto	u8731
 12985   00E656  EF2F  F073         	goto	u8730
 12986   00E65A                     u8731:
 12987   00E65A  EF4D  F073         	goto	l6763
 12988   00E65E                     u8730:
 12989   00E65E                     
 12990                           ;mcc_generated_files/sd_spi/sd_spi.c: 717:     {;mcc_generated_files/sd_spi/sd_spi.c: 71
      +                          9:         mediaInformation.errorCode = MEDIA_CANNOT_INITIALIZE;
 12991   00E65E  0E02               	movlw	2
 12992   00E660  0101               	movlb	1	; () banked
 12993   00E662  6F50               	movwf	_mediaInformation& (0+255),b
 12994   00E664                     
 12995                           ; BSR set to: 1
 12996   00E664  848B               	bsf	139,2,c	;volatile
 12997   00E666                     
 12998                           ; BSR set to: 1
 12999                           ;mcc_generated_files/sd_spi/sd_spi.c: 722:         spiMaster[SDFAST].spiClose();
 13000   00E666  0E8B               	movlw	low _spiMaster
 13001   00E668  6EF6               	movwf	tblptrl,c
 13002   00E66A                     	if	1	;There is more than 1 active tblptr byte
 13003   00E66A  0EFF               	movlw	high _spiMaster
 13004   00E66C  6EF7               	movwf	tblptrh,c
 13005   00E66E                     	endif
 13006   00E66E                     	if	1	;There are 3 active tblptr bytes
 13007   00E66E  0E00               	movlw	low (_spiMaster shr (0+16))
 13008   00E670  6EF8               	movwf	tblptru,c
 13009   00E672                     	endif
 13010   00E672  0009               	tblrd		*+
 13011   00E674  CFF5 F023          	movff	tablat,??_SD_SPI_MediaInitialize
 13012   00E678  0009               	tblrd		*+
 13013   00E67A  CFF5 F024          	movff	tablat,??_SD_SPI_MediaInitialize+1
 13014   00E67E  D802               	call	u8748
 13015   00E680  EF4B  F073         	goto	u8749
 13016   00E684                     u8748:
 13017   00E684  0005               	push	
 13018   00E686  6EFA               	movwf	pclath,c
 13019   00E688  5023               	movf	??_SD_SPI_MediaInitialize^0,w,c
 13020   00E68A  6EFD               	movwf	tosl,c
 13021   00E68C  5024               	movf	(??_SD_SPI_MediaInitialize+1)^0,w,c
 13022   00E68E  6EFE               	movwf	tosh,c
 13023   00E690  6AFF               	clrf	tosu,c
 13024   00E692  50FA               	movf	pclath,w,c
 13025   00E694  0012               	return		;indir
 13026   00E696                     u8749:
 13027   00E696  EF2E  F071         	goto	l6629
 13028   00E69A                     l6763:
 13029                           
 13030                           ;mcc_generated_files/sd_spi/sd_spi.c: 729:     index = 0;
 13031   00E69A  0E00               	movlw	0
 13032   00E69C  6E47               	movwf	SD_SPI_MediaInitialize@index^0,c
 13033                           
 13034                           ;mcc_generated_files/sd_spi/sd_spi.c: 730:     for (count = 0; count < 20u; count ++)
 13035   00E69E  0E00               	movlw	0
 13036   00E6A0  6E49               	movwf	SD_SPI_MediaInitialize@count^0,c
 13037   00E6A2                     l6769:
 13038                           
 13039                           ;mcc_generated_files/sd_spi/sd_spi.c: 731:     {;mcc_generated_files/sd_spi/sd_spi.c: 73
      +                          2:         CSDResponse[index] = spiMaster[SDFAST].exchangeByte(0xFF);
 13040   00E6A2  0E2E               	movlw	low SD_SPI_MediaInitialize@CSDResponse
 13041   00E6A4  2447               	addwf	SD_SPI_MediaInitialize@index^0,w,c
 13042   00E6A6  6ED9               	movwf	fsr2l,c
 13043   00E6A8  6ADA               	clrf	fsr2h,c
 13044   00E6AA  0E00               	movlw	high SD_SPI_MediaInitialize@CSDResponse
 13045   00E6AC  22DA               	addwfc	fsr2h,f,c
 13046   00E6AE  0E8F               	movlw	low (_spiMaster+4)
 13047   00E6B0  6EF6               	movwf	tblptrl,c
 13048   00E6B2  0EFF               	movlw	high (_spiMaster+4)
 13049   00E6B4  6EF7               	movwf	tblptrh,c
 13050   00E6B6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13051   00E6B6  6AF8               	clrf	tblptru,c
 13052   00E6B8                     	endif
 13053   00E6B8                     	if	0	;tblptru may be non-zero
 13054   00E6B8                     	endif
 13055   00E6B8  0009               	tblrd		*+
 13056   00E6BA  CFF5 F023          	movff	tablat,??_SD_SPI_MediaInitialize
 13057   00E6BE  0009               	tblrd		*+
 13058   00E6C0  CFF5 F024          	movff	tablat,??_SD_SPI_MediaInitialize+1
 13059   00E6C4  D802               	call	u8758
 13060   00E6C6  EF6F  F073         	goto	u8759
 13061   00E6CA                     u8758:
 13062   00E6CA  0005               	push	
 13063   00E6CC  6EFA               	movwf	pclath,c
 13064   00E6CE  5023               	movf	??_SD_SPI_MediaInitialize^0,w,c
 13065   00E6D0  6EFD               	movwf	tosl,c
 13066   00E6D2  5024               	movf	(??_SD_SPI_MediaInitialize+1)^0,w,c
 13067   00E6D4  6EFE               	movwf	tosh,c
 13068   00E6D6  6AFF               	clrf	tosu,c
 13069   00E6D8  50FA               	movf	pclath,w,c
 13070   00E6DA  0EFF               	movlw	255
 13071   00E6DC  0012               	return		;indir
 13072   00E6DE                     u8759:
 13073   00E6DE  6EDF               	movwf	indf2,c
 13074   00E6E0                     
 13075                           ;mcc_generated_files/sd_spi/sd_spi.c: 733:         index++;
 13076   00E6E0  2A47               	incf	SD_SPI_MediaInitialize@index^0,f,c
 13077   00E6E2                     
 13078                           ;mcc_generated_files/sd_spi/sd_spi.c: 736:         if((count == 0) && (CSDResponse[0] ==
      +                           SD_TOKEN_START))
 13079   00E6E2  5049               	movf	SD_SPI_MediaInitialize@count^0,w,c
 13080   00E6E4  A4D8               	btfss	status,2,c
 13081   00E6E6  EF77  F073         	goto	u8761
 13082   00E6EA  EF79  F073         	goto	u8760
 13083   00E6EE                     u8761:
 13084   00E6EE  EF84  F073         	goto	l6779
 13085   00E6F2                     u8760:
 13086   00E6F2  0EFE               	movlw	254
 13087   00E6F4  182E               	xorwf	SD_SPI_MediaInitialize@CSDResponse^0,w,c
 13088   00E6F6  A4D8               	btfss	status,2,c
 13089   00E6F8  EF80  F073         	goto	u8771
 13090   00E6FC  EF82  F073         	goto	u8770
 13091   00E700                     u8771:
 13092   00E700  EF84  F073         	goto	l6779
 13093   00E704                     u8770:
 13094   00E704                     
 13095                           ;mcc_generated_files/sd_spi/sd_spi.c: 737:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 739:             index = 0;
 13096   00E704  0E00               	movlw	0
 13097   00E706  6E47               	movwf	SD_SPI_MediaInitialize@index^0,c
 13098   00E708                     l6779:
 13099                           
 13100                           ;mcc_generated_files/sd_spi/sd_spi.c: 741:     }
 13101   00E708  2A49               	incf	SD_SPI_MediaInitialize@count^0,f,c
 13102   00E70A  0E13               	movlw	19
 13103   00E70C  6449               	cpfsgt	SD_SPI_MediaInitialize@count^0,c
 13104   00E70E  EF8B  F073         	goto	u8781
 13105   00E712  EF8D  F073         	goto	u8780
 13106   00E716                     u8781:
 13107   00E716  EF51  F073         	goto	l6769
 13108   00E71A                     u8780:
 13109   00E71A                     
 13110                           ;mcc_generated_files/sd_spi/sd_spi.c: 763:     mediaInformation.sectorSize = 512u;
 13111   00E71A  0E02               	movlw	2
 13112   00E71C  0101               	movlb	1	; () banked
 13113   00E71E  6F52               	movwf	(_mediaInformation+2)& (0+255),b
 13114   00E720  0E00               	movlw	0
 13115   00E722  6F51               	movwf	(_mediaInformation+1)& (0+255),b
 13116   00E724                     
 13117                           ; BSR set to: 1
 13118                           ;mcc_generated_files/sd_spi/sd_spi.c: 769:     if(CSDResponse[0] & 0xC0)
 13119   00E724  C02E  F023         	movff	SD_SPI_MediaInitialize@CSDResponse,??_SD_SPI_MediaInitialize
 13120   00E728  0EC0               	movlw	192
 13121   00E72A  1623               	andwf	??_SD_SPI_MediaInitialize^0,f,c
 13122   00E72C  B4D8               	btfsc	status,2,c
 13123   00E72E  EF9B  F073         	goto	u8791
 13124   00E732  EF9D  F073         	goto	u8790
 13125   00E736                     u8791:
 13126   00E736  EFE3  F073         	goto	l6789
 13127   00E73A                     u8790:
 13128   00E73A                     
 13129                           ; BSR set to: 1
 13130                           ;mcc_generated_files/sd_spi/sd_spi.c: 770:     {;mcc_generated_files/sd_spi/sd_spi.c: 77
      +                          5:         c_size = (((uint32_t)CSDResponse[7] & 0x3F) << 16) | ((uint16_t)CSDResponse[8
      +                          ] << 8) | CSDResponse[9];
 13131   00E73A  5036               	movf	(SD_SPI_MediaInitialize@CSDResponse+8)^0,w,c
 13132   00E73C  6E24               	movwf	(??_SD_SPI_MediaInitialize+1)^0,c
 13133   00E73E  6A23               	clrf	??_SD_SPI_MediaInitialize^0,c
 13134   00E740  C035  F025         	movff	SD_SPI_MediaInitialize@CSDResponse+7,??_SD_SPI_MediaInitialize+2
 13135   00E744  0E3F               	movlw	63
 13136   00E746  1625               	andwf	(??_SD_SPI_MediaInitialize+2)^0,f,c
 13137   00E748  C025  F026         	movff	??_SD_SPI_MediaInitialize+2,??_SD_SPI_MediaInitialize+3
 13138   00E74C  6A27               	clrf	(??_SD_SPI_MediaInitialize+4)^0,c
 13139   00E74E  6A28               	clrf	(??_SD_SPI_MediaInitialize+5)^0,c
 13140   00E750  6A29               	clrf	(??_SD_SPI_MediaInitialize+6)^0,c
 13141   00E752  C027  F029         	movff	??_SD_SPI_MediaInitialize+4,??_SD_SPI_MediaInitialize+6
 13142   00E756  C026  F028         	movff	??_SD_SPI_MediaInitialize+3,??_SD_SPI_MediaInitialize+5
 13143   00E75A  6A27               	clrf	(??_SD_SPI_MediaInitialize+4)^0,c
 13144   00E75C  6A26               	clrf	(??_SD_SPI_MediaInitialize+3)^0,c
 13145   00E75E  5023               	movf	??_SD_SPI_MediaInitialize^0,w,c
 13146   00E760  1026               	iorwf	(??_SD_SPI_MediaInitialize+3)^0,w,c
 13147   00E762  6E2A               	movwf	(??_SD_SPI_MediaInitialize+7)^0,c
 13148   00E764  5024               	movf	(??_SD_SPI_MediaInitialize+1)^0,w,c
 13149   00E766  1027               	iorwf	(??_SD_SPI_MediaInitialize+4)^0,w,c
 13150   00E768  6E2B               	movwf	(??_SD_SPI_MediaInitialize+8)^0,c
 13151   00E76A  0E00               	movlw	0
 13152   00E76C  1028               	iorwf	(??_SD_SPI_MediaInitialize+5)^0,w,c
 13153   00E76E  6E2C               	movwf	(??_SD_SPI_MediaInitialize+9)^0,c
 13154   00E770  0E00               	movlw	0
 13155   00E772  1029               	iorwf	(??_SD_SPI_MediaInitialize+6)^0,w,c
 13156   00E774  6E2D               	movwf	(??_SD_SPI_MediaInitialize+10)^0,c
 13157   00E776  5037               	movf	(SD_SPI_MediaInitialize@CSDResponse+9)^0,w,c
 13158   00E778  102A               	iorwf	(??_SD_SPI_MediaInitialize+7)^0,w,c
 13159   00E77A  6E4A               	movwf	SD_SPI_MediaInitialize@c_size^0,c
 13160   00E77C  502B               	movf	(??_SD_SPI_MediaInitialize+8)^0,w,c
 13161   00E77E  6E4B               	movwf	(SD_SPI_MediaInitialize@c_size+1)^0,c
 13162   00E780  502C               	movf	(??_SD_SPI_MediaInitialize+9)^0,w,c
 13163   00E782  6E4C               	movwf	(SD_SPI_MediaInitialize@c_size+2)^0,c
 13164   00E784  502D               	movf	(??_SD_SPI_MediaInitialize+10)^0,w,c
 13165   00E786  6E4D               	movwf	(SD_SPI_MediaInitialize@c_size+3)^0,c
 13166                           
 13167                           ;mcc_generated_files/sd_spi/sd_spi.c: 777:         mediaInformation.finalLBA = ((uint32_
      +                          t)(c_size + 1) * (uint16_t)(1024u)) - 1;
 13168   00E788  C04A  F023         	movff	SD_SPI_MediaInitialize@c_size,??_SD_SPI_MediaInitialize
 13169   00E78C  C04B  F024         	movff	SD_SPI_MediaInitialize@c_size+1,??_SD_SPI_MediaInitialize+1
 13170   00E790  C04C  F025         	movff	SD_SPI_MediaInitialize@c_size+2,??_SD_SPI_MediaInitialize+2
 13171   00E794  C04D  F026         	movff	SD_SPI_MediaInitialize@c_size+3,??_SD_SPI_MediaInitialize+3
 13172   00E798  0E0A               	movlw	10
 13173   00E79A                     u8805:
 13174   00E79A  90D8               	bcf	status,0,c
 13175   00E79C  3623               	rlcf	??_SD_SPI_MediaInitialize^0,f,c
 13176   00E79E  3624               	rlcf	(??_SD_SPI_MediaInitialize+1)^0,f,c
 13177   00E7A0  3625               	rlcf	(??_SD_SPI_MediaInitialize+2)^0,f,c
 13178   00E7A2  3626               	rlcf	(??_SD_SPI_MediaInitialize+3)^0,f,c
 13179   00E7A4  2EE8               	decfsz	wreg,f,c
 13180   00E7A6  EFCD  F073         	goto	u8805
 13181   00E7AA  0EFF               	movlw	255
 13182   00E7AC  2423               	addwf	??_SD_SPI_MediaInitialize^0,w,c
 13183   00E7AE  6F54               	movwf	(_mediaInformation+4)& (0+255),b
 13184   00E7B0  0E03               	movlw	3
 13185   00E7B2  2024               	addwfc	(??_SD_SPI_MediaInitialize+1)^0,w,c
 13186   00E7B4  6F55               	movwf	(_mediaInformation+5)& (0+255),b
 13187   00E7B6  0E00               	movlw	0
 13188   00E7B8  2025               	addwfc	(??_SD_SPI_MediaInitialize+2)^0,w,c
 13189   00E7BA  6F56               	movwf	(_mediaInformation+6)& (0+255),b
 13190   00E7BC  0E00               	movlw	0
 13191   00E7BE  2026               	addwfc	(??_SD_SPI_MediaInitialize+3)^0,w,c
 13192   00E7C0  6F57               	movwf	(_mediaInformation+7)& (0+255),b
 13193                           
 13194                           ;mcc_generated_files/sd_spi/sd_spi.c: 778:     }
 13195   00E7C2  EF90  F074         	goto	l6795
 13196   00E7C6                     l6789:
 13197                           
 13198                           ; BSR set to: 1
 13199                           ;mcc_generated_files/sd_spi/sd_spi.c: 780:     {;mcc_generated_files/sd_spi/sd_spi.c: 78
      +                          4:         c_size = ((uint32_t)CSDResponse[6] << 16) | ((uint16_t)CSDResponse[7] << 8) |
      +                           CSDResponse[8];
 13200   00E7C6  5035               	movf	(SD_SPI_MediaInitialize@CSDResponse+7)^0,w,c
 13201   00E7C8  6E24               	movwf	(??_SD_SPI_MediaInitialize+1)^0,c
 13202   00E7CA  6A23               	clrf	??_SD_SPI_MediaInitialize^0,c
 13203   00E7CC  C034  F025         	movff	SD_SPI_MediaInitialize@CSDResponse+6,??_SD_SPI_MediaInitialize+2
 13204   00E7D0  6A26               	clrf	(??_SD_SPI_MediaInitialize+3)^0,c
 13205   00E7D2  6A27               	clrf	(??_SD_SPI_MediaInitialize+4)^0,c
 13206   00E7D4  6A28               	clrf	(??_SD_SPI_MediaInitialize+5)^0,c
 13207   00E7D6  C026  F028         	movff	??_SD_SPI_MediaInitialize+3,??_SD_SPI_MediaInitialize+5
 13208   00E7DA  C025  F027         	movff	??_SD_SPI_MediaInitialize+2,??_SD_SPI_MediaInitialize+4
 13209   00E7DE  6A26               	clrf	(??_SD_SPI_MediaInitialize+3)^0,c
 13210   00E7E0  6A25               	clrf	(??_SD_SPI_MediaInitialize+2)^0,c
 13211   00E7E2  5023               	movf	??_SD_SPI_MediaInitialize^0,w,c
 13212   00E7E4  1025               	iorwf	(??_SD_SPI_MediaInitialize+2)^0,w,c
 13213   00E7E6  6E29               	movwf	(??_SD_SPI_MediaInitialize+6)^0,c
 13214   00E7E8  5024               	movf	(??_SD_SPI_MediaInitialize+1)^0,w,c
 13215   00E7EA  1026               	iorwf	(??_SD_SPI_MediaInitialize+3)^0,w,c
 13216   00E7EC  6E2A               	movwf	(??_SD_SPI_MediaInitialize+7)^0,c
 13217   00E7EE  0E00               	movlw	0
 13218   00E7F0  1027               	iorwf	(??_SD_SPI_MediaInitialize+4)^0,w,c
 13219   00E7F2  6E2B               	movwf	(??_SD_SPI_MediaInitialize+8)^0,c
 13220   00E7F4  0E00               	movlw	0
 13221   00E7F6  1028               	iorwf	(??_SD_SPI_MediaInitialize+5)^0,w,c
 13222   00E7F8  6E2C               	movwf	(??_SD_SPI_MediaInitialize+9)^0,c
 13223   00E7FA  5036               	movf	(SD_SPI_MediaInitialize@CSDResponse+8)^0,w,c
 13224   00E7FC  1029               	iorwf	(??_SD_SPI_MediaInitialize+6)^0,w,c
 13225   00E7FE  6E4A               	movwf	SD_SPI_MediaInitialize@c_size^0,c
 13226   00E800  502A               	movf	(??_SD_SPI_MediaInitialize+7)^0,w,c
 13227   00E802  6E4B               	movwf	(SD_SPI_MediaInitialize@c_size+1)^0,c
 13228   00E804  502B               	movf	(??_SD_SPI_MediaInitialize+8)^0,w,c
 13229   00E806  6E4C               	movwf	(SD_SPI_MediaInitialize@c_size+2)^0,c
 13230   00E808  502C               	movf	(??_SD_SPI_MediaInitialize+9)^0,w,c
 13231   00E80A  6E4D               	movwf	(SD_SPI_MediaInitialize@c_size+3)^0,c
 13232                           
 13233                           ;mcc_generated_files/sd_spi/sd_spi.c: 785:         c_size &= 0x0003FFC0;
 13234   00E80C  0EC0               	movlw	192
 13235   00E80E  164A               	andwf	SD_SPI_MediaInitialize@c_size^0,f,c
 13236   00E810  0EFF               	movlw	255
 13237   00E812  164B               	andwf	(SD_SPI_MediaInitialize@c_size+1)^0,f,c
 13238   00E814  0E03               	movlw	3
 13239   00E816  164C               	andwf	(SD_SPI_MediaInitialize@c_size+2)^0,f,c
 13240   00E818  0E00               	movlw	0
 13241   00E81A  164D               	andwf	(SD_SPI_MediaInitialize@c_size+3)^0,f,c
 13242                           
 13243                           ;mcc_generated_files/sd_spi/sd_spi.c: 786:         c_size = c_size >> 6;
 13244   00E81C  C04A  F023         	movff	SD_SPI_MediaInitialize@c_size,??_SD_SPI_MediaInitialize
 13245   00E820  C04B  F024         	movff	SD_SPI_MediaInitialize@c_size+1,??_SD_SPI_MediaInitialize+1
 13246   00E824  C04C  F025         	movff	SD_SPI_MediaInitialize@c_size+2,??_SD_SPI_MediaInitialize+2
 13247   00E828  C04D  F026         	movff	SD_SPI_MediaInitialize@c_size+3,??_SD_SPI_MediaInitialize+3
 13248   00E82C  0E07               	movlw	7
 13249   00E82E  EF1E  F074         	goto	u8810
 13250   00E832                     u8815:
 13251   00E832  90D8               	bcf	status,0,c
 13252   00E834  3226               	rrcf	(??_SD_SPI_MediaInitialize+3)^0,f,c
 13253   00E836  3225               	rrcf	(??_SD_SPI_MediaInitialize+2)^0,f,c
 13254   00E838  3224               	rrcf	(??_SD_SPI_MediaInitialize+1)^0,f,c
 13255   00E83A  3223               	rrcf	??_SD_SPI_MediaInitialize^0,f,c
 13256   00E83C                     u8810:
 13257   00E83C  2EE8               	decfsz	wreg,f,c
 13258   00E83E  EF19  F074         	goto	u8815
 13259   00E842  C023  F04A         	movff	??_SD_SPI_MediaInitialize,SD_SPI_MediaInitialize@c_size
 13260   00E846  C024  F04B         	movff	??_SD_SPI_MediaInitialize+1,SD_SPI_MediaInitialize@c_size+1
 13261   00E84A  C025  F04C         	movff	??_SD_SPI_MediaInitialize+2,SD_SPI_MediaInitialize@c_size+2
 13262   00E84E  C026  F04D         	movff	??_SD_SPI_MediaInitialize+3,SD_SPI_MediaInitialize@c_size+3
 13263                           
 13264                           ;mcc_generated_files/sd_spi/sd_spi.c: 789:         c_size_mult = ((uint16_t)((CSDRespons
      +                          e[9] & 0x03) << 1)) | ((uint16_t)((CSDResponse[10] & 0x80) >> 7));
 13265   00E852  C037  F023         	movff	SD_SPI_MediaInitialize@CSDResponse+9,??_SD_SPI_MediaInitialize
 13266   00E856  0E03               	movlw	3
 13267   00E858  1623               	andwf	??_SD_SPI_MediaInitialize^0,f,c
 13268   00E85A  6A24               	clrf	(??_SD_SPI_MediaInitialize+1)^0,c
 13269   00E85C  AE38               	btfss	(SD_SPI_MediaInitialize@CSDResponse+10)^0,7,c
 13270   00E85E  D001               	bra	u8825
 13271   00E860  2A24               	incf	(??_SD_SPI_MediaInitialize+1)^0,f,c
 13272   00E862                     u8825:
 13273   00E862  3024               	rrcf	(??_SD_SPI_MediaInitialize+1)^0,w,c
 13274   00E864  3423               	rlcf	??_SD_SPI_MediaInitialize^0,w,c
 13275   00E866  6E46               	movwf	SD_SPI_MediaInitialize@c_size_mult^0,c
 13276                           
 13277                           ;mcc_generated_files/sd_spi/sd_spi.c: 792:         block_len = CSDResponse[5] & 0x0F;
 13278   00E868  5033               	movf	(SD_SPI_MediaInitialize@CSDResponse+5)^0,w,c
 13279   00E86A  0B0F               	andlw	15
 13280   00E86C  6E48               	movwf	SD_SPI_MediaInitialize@block_len^0,c
 13281                           
 13282                           ;mcc_generated_files/sd_spi/sd_spi.c: 794:         block_len = 1 << (block_len - 9);
 13283   00E86E  C048  F023         	movff	SD_SPI_MediaInitialize@block_len,??_SD_SPI_MediaInitialize
 13284   00E872  0EF7               	movlw	-9
 13285   00E874  2623               	addwf	??_SD_SPI_MediaInitialize^0,f,c
 13286   00E876  0E01               	movlw	1
 13287   00E878  6E24               	movwf	(??_SD_SPI_MediaInitialize+1)^0,c
 13288   00E87A  2A23               	incf	??_SD_SPI_MediaInitialize^0,f,c
 13289   00E87C  EF42  F074         	goto	u8834
 13290   00E880                     u8835:
 13291   00E880  90D8               	bcf	status,0,c
 13292   00E882  3624               	rlcf	(??_SD_SPI_MediaInitialize+1)^0,f,c
 13293   00E884                     u8834:
 13294   00E884  2E23               	decfsz	??_SD_SPI_MediaInitialize^0,f,c
 13295   00E886  EF40  F074         	goto	u8835
 13296   00E88A  5024               	movf	(??_SD_SPI_MediaInitialize+1)^0,w,c
 13297   00E88C  6E48               	movwf	SD_SPI_MediaInitialize@block_len^0,c
 13298   00E88E                     
 13299                           ;mcc_generated_files/sd_spi/sd_spi.c: 799:         mediaInformation.finalLBA = ((uint32_
      +                          t)(c_size + 1) * (uint16_t)((uint16_t)1 << (c_size_mult + 2)) * block_len) - 1;
 13300   00E88E  0E01               	movlw	1
 13301   00E890  244A               	addwf	SD_SPI_MediaInitialize@c_size^0,w,c
 13302   00E892  6E01               	movwf	___lmul@multiplier^0,c
 13303   00E894  0E00               	movlw	0
 13304   00E896  204B               	addwfc	(SD_SPI_MediaInitialize@c_size+1)^0,w,c
 13305   00E898  6E02               	movwf	(___lmul@multiplier+1)^0,c
 13306   00E89A  0E00               	movlw	0
 13307   00E89C  204C               	addwfc	(SD_SPI_MediaInitialize@c_size+2)^0,w,c
 13308   00E89E  6E03               	movwf	(___lmul@multiplier+2)^0,c
 13309   00E8A0  0E00               	movlw	0
 13310   00E8A2  204D               	addwfc	(SD_SPI_MediaInitialize@c_size+3)^0,w,c
 13311   00E8A4  6E04               	movwf	(___lmul@multiplier+3)^0,c
 13312   00E8A6  C046  F023         	movff	SD_SPI_MediaInitialize@c_size_mult,??_SD_SPI_MediaInitialize
 13313   00E8AA  0E02               	movlw	2
 13314   00E8AC  2623               	addwf	??_SD_SPI_MediaInitialize^0,f,c
 13315   00E8AE  0E01               	movlw	1
 13316   00E8B0  6E24               	movwf	(??_SD_SPI_MediaInitialize+1)^0,c
 13317   00E8B2  0E00               	movlw	0
 13318   00E8B4  6E25               	movwf	(??_SD_SPI_MediaInitialize+2)^0,c
 13319   00E8B6  2A23               	incf	??_SD_SPI_MediaInitialize^0,f,c
 13320   00E8B8  EF61  F074         	goto	u8844
 13321   00E8BC                     u8845:
 13322   00E8BC  90D8               	bcf	status,0,c
 13323   00E8BE  3624               	rlcf	(??_SD_SPI_MediaInitialize+1)^0,f,c
 13324   00E8C0  3625               	rlcf	(??_SD_SPI_MediaInitialize+2)^0,f,c
 13325   00E8C2                     u8844:
 13326   00E8C2  2E23               	decfsz	??_SD_SPI_MediaInitialize^0,f,c
 13327   00E8C4  EF5E  F074         	goto	u8845
 13328   00E8C8  C024  F005         	movff	??_SD_SPI_MediaInitialize+1,___lmul@multiplicand
 13329   00E8CC  C025  F006         	movff	??_SD_SPI_MediaInitialize+2,___lmul@multiplicand+1
 13330   00E8D0  6A07               	clrf	(___lmul@multiplicand+2)^0,c
 13331   00E8D2  6A08               	clrf	(___lmul@multiplicand+3)^0,c
 13332   00E8D4  EC4F  F047         	call	___lmul
 13333   00E8D8  C001  F042         	movff	?___lmul,_SD_SPI_MediaInitialize$4163
 13334   00E8DC  C002  F043         	movff	?___lmul+1,_SD_SPI_MediaInitialize$4163+1
 13335   00E8E0  C003  F044         	movff	?___lmul+2,_SD_SPI_MediaInitialize$4163+2
 13336   00E8E4  C004  F045         	movff	?___lmul+3,_SD_SPI_MediaInitialize$4163+3
 13337   00E8E8                     
 13338                           ;mcc_generated_files/sd_spi/sd_spi.c: 799:         mediaInformation.finalLBA = ((uint32_
      +                          t)(c_size + 1) * (uint16_t)((uint16_t)1 << (c_size_mult + 2)) * block_len) - 1;
 13339   00E8E8  C042  F001         	movff	_SD_SPI_MediaInitialize$4163,___lmul@multiplier
 13340   00E8EC  C043  F002         	movff	_SD_SPI_MediaInitialize$4163+1,___lmul@multiplier+1
 13341   00E8F0  C044  F003         	movff	_SD_SPI_MediaInitialize$4163+2,___lmul@multiplier+2
 13342   00E8F4  C045  F004         	movff	_SD_SPI_MediaInitialize$4163+3,___lmul@multiplier+3
 13343   00E8F8  5048               	movf	SD_SPI_MediaInitialize@block_len^0,w,c
 13344   00E8FA  6E05               	movwf	___lmul@multiplicand^0,c
 13345   00E8FC  6A06               	clrf	(___lmul@multiplicand+1)^0,c
 13346   00E8FE  6A07               	clrf	(___lmul@multiplicand+2)^0,c
 13347   00E900  6A08               	clrf	(___lmul@multiplicand+3)^0,c
 13348   00E902  EC4F  F047         	call	___lmul	;wreg free
 13349   00E906  0EFF               	movlw	255
 13350   00E908  2401               	addwf	?___lmul^0,w,c
 13351   00E90A  0101               	movlb	1	; () banked
 13352   00E90C  6F54               	movwf	(_mediaInformation+4)& (0+255),b
 13353   00E90E  0EFF               	movlw	255
 13354   00E910  2002               	addwfc	(?___lmul+1)^0,w,c
 13355   00E912  6F55               	movwf	(_mediaInformation+5)& (0+255),b
 13356   00E914  0EFF               	movlw	255
 13357   00E916  2003               	addwfc	(?___lmul+2)^0,w,c
 13358   00E918  6F56               	movwf	(_mediaInformation+6)& (0+255),b
 13359   00E91A  0EFF               	movlw	255
 13360   00E91C  2004               	addwfc	(?___lmul+3)^0,w,c
 13361   00E91E  6F57               	movwf	(_mediaInformation+7)& (0+255),b
 13362   00E920                     l6795:
 13363                           
 13364                           ; BSR set to: 1
 13365                           ;mcc_generated_files/sd_spi/sd_spi.c: 805:     (void)SD_SendCmd(SD_CRC_ON_OFF, 0x0);
 13366   00E920  0E00               	movlw	0
 13367   00E922  6E0C               	movwf	SD_SendCmd@address^0,c
 13368   00E924  0E00               	movlw	0
 13369   00E926  6E0D               	movwf	(SD_SendCmd@address+1)^0,c
 13370   00E928  0E00               	movlw	0
 13371   00E92A  6E0E               	movwf	(SD_SendCmd@address+2)^0,c
 13372   00E92C  0E00               	movlw	0
 13373   00E92E  6E0F               	movwf	(SD_SendCmd@address+3)^0,c
 13374   00E930  0E11               	movlw	17
 13375   00E932  EC1B  F062         	call	_SD_SendCmd
 13376   00E936                     
 13377                           ;mcc_generated_files/sd_spi/sd_spi.c: 808:     (void)SD_SendCmd(SD_SET_BLOCK_LENGTH , me
      +                          diaInformation.sectorSize);
 13378   00E936  C151  F00C         	movff	_mediaInformation+1,SD_SendCmd@address
 13379   00E93A  C152  F00D         	movff	_mediaInformation+2,SD_SendCmd@address+1
 13380   00E93E  6A0E               	clrf	(SD_SendCmd@address+2)^0,c
 13381   00E940  6A0F               	clrf	(SD_SendCmd@address+3)^0,c
 13382   00E942  0E07               	movlw	7
 13383   00E944  EC1B  F062         	call	_SD_SendCmd
 13384   00E948  848B               	bsf	139,2,c	;volatile
 13385   00E94A                     
 13386                           ;mcc_generated_files/sd_spi/sd_spi.c: 814:     if(mediaInformation.errorCode == MEDIA_NO
      +                          _ERROR)
 13387   00E94A  0101               	movlb	1	; () banked
 13388   00E94C  5150               	movf	_mediaInformation& (0+255),w,b
 13389   00E94E  A4D8               	btfss	status,2,c
 13390   00E950  EFAC  F074         	goto	u8851
 13391   00E954  EFAE  F074         	goto	u8850
 13392   00E958                     u8851:
 13393   00E958  EFCB  F074         	goto	l6811
 13394   00E95C                     u8850:
 13395   00E95C                     
 13396                           ; BSR set to: 1
 13397                           ;mcc_generated_files/sd_spi/sd_spi.c: 815:     {;mcc_generated_files/sd_spi/sd_spi.c: 81
      +                          6:         mediaInformation.state = SD_STATE_READY_FOR_COMMAND;
 13398   00E95C  0E01               	movlw	1
 13399   00E95E  6F53               	movwf	(_mediaInformation+3)& (0+255),b
 13400   00E960                     
 13401                           ; BSR set to: 1
 13402                           ;mcc_generated_files/sd_spi/sd_spi.c: 817:         spiMaster[SDFAST].spiClose();
 13403   00E960  0E8B               	movlw	low _spiMaster
 13404   00E962  6EF6               	movwf	tblptrl,c
 13405   00E964                     	if	1	;There is more than 1 active tblptr byte
 13406   00E964  0EFF               	movlw	high _spiMaster
 13407   00E966  6EF7               	movwf	tblptrh,c
 13408   00E968                     	endif
 13409   00E968                     	if	1	;There are 3 active tblptr bytes
 13410   00E968  0E00               	movlw	low (_spiMaster shr (0+16))
 13411   00E96A  6EF8               	movwf	tblptru,c
 13412   00E96C                     	endif
 13413   00E96C  0009               	tblrd		*+
 13414   00E96E  CFF5 F023          	movff	tablat,??_SD_SPI_MediaInitialize
 13415   00E972  0009               	tblrd		*+
 13416   00E974  CFF5 F024          	movff	tablat,??_SD_SPI_MediaInitialize+1
 13417   00E978  D802               	call	u8868
 13418   00E97A  EFC8  F074         	goto	u8869
 13419   00E97E                     u8868:
 13420   00E97E  0005               	push	
 13421   00E980  6EFA               	movwf	pclath,c
 13422   00E982  5023               	movf	??_SD_SPI_MediaInitialize^0,w,c
 13423   00E984  6EFD               	movwf	tosl,c
 13424   00E986  5024               	movf	(??_SD_SPI_MediaInitialize+1)^0,w,c
 13425   00E988  6EFE               	movwf	tosh,c
 13426   00E98A  6AFF               	clrf	tosu,c
 13427   00E98C  50FA               	movf	pclath,w,c
 13428   00E98E  0012               	return		;indir
 13429   00E990                     u8869:
 13430   00E990                     
 13431                           ;mcc_generated_files/sd_spi/sd_spi.c: 818:         return 1;
 13432   00E990  0E01               	movlw	1
 13433   00E992  EFE5  F074         	goto	l211
 13434   00E996                     l6811:
 13435                           
 13436                           ; BSR set to: 1
 13437                           ;mcc_generated_files/sd_spi/sd_spi.c: 821:     spiMaster[SDFAST].spiClose();
 13438   00E996  0E8B               	movlw	low _spiMaster
 13439   00E998  6EF6               	movwf	tblptrl,c
 13440   00E99A                     	if	1	;There is more than 1 active tblptr byte
 13441   00E99A  0EFF               	movlw	high _spiMaster
 13442   00E99C  6EF7               	movwf	tblptrh,c
 13443   00E99E                     	endif
 13444   00E99E                     	if	1	;There are 3 active tblptr bytes
 13445   00E99E  0E00               	movlw	low (_spiMaster shr (0+16))
 13446   00E9A0  6EF8               	movwf	tblptru,c
 13447   00E9A2                     	endif
 13448   00E9A2  0009               	tblrd		*+
 13449   00E9A4  CFF5 F023          	movff	tablat,??_SD_SPI_MediaInitialize
 13450   00E9A8  0009               	tblrd		*+
 13451   00E9AA  CFF5 F024          	movff	tablat,??_SD_SPI_MediaInitialize+1
 13452   00E9AE  D802               	call	u8878
 13453   00E9B0  EFE3  F074         	goto	u8879
 13454   00E9B4                     u8878:
 13455   00E9B4  0005               	push	
 13456   00E9B6  6EFA               	movwf	pclath,c
 13457   00E9B8  5023               	movf	??_SD_SPI_MediaInitialize^0,w,c
 13458   00E9BA  6EFD               	movwf	tosl,c
 13459   00E9BC  5024               	movf	(??_SD_SPI_MediaInitialize+1)^0,w,c
 13460   00E9BE  6EFE               	movwf	tosh,c
 13461   00E9C0  6AFF               	clrf	tosu,c
 13462   00E9C2  50FA               	movf	pclath,w,c
 13463   00E9C4  0012               	return		;indir
 13464   00E9C6                     u8879:
 13465   00E9C6  EF2E  F071         	goto	l6629
 13466   00E9CA                     l211:
 13467   00E9CA  0012               	return		;funcret
 13468   00E9CC                     __end_of_SD_SPI_MediaInitialize:
 13469                           	callstack 0
 13470                           
 13471 ;; *************** function ___lmul *****************
 13472 ;; Defined at:
 13473 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
 13474 ;; Parameters:    Size  Location     Type
 13475 ;;  multiplier      4    0[COMRAM] unsigned long 
 13476 ;;  multiplicand    4    4[COMRAM] unsigned long 
 13477 ;; Auto vars:     Size  Location     Type
 13478 ;;  product         4    8[COMRAM] unsigned long 
 13479 ;; Return value:  Size  Location     Type
 13480 ;;                  4    0[COMRAM] unsigned long 
 13481 ;; Registers used:
 13482 ;;		wreg, status,2, status,0
 13483 ;; Tracked objects:
 13484 ;;		On entry : 0/0
 13485 ;;		On exit  : 0/0
 13486 ;;		Unchanged: 0/0
 13487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13488 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13489 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13491 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13492 ;;Total ram usage:       12 bytes
 13493 ;; Hardware stack levels used: 1
 13494 ;; This function calls:
 13495 ;;		Nothing
 13496 ;; This function is called by:
 13497 ;;		_SD_SPI_MediaInitialize
 13498 ;;		_clst2sect
 13499 ;;		_find_volume
 13500 ;; This function uses a non-reentrant model
 13501 ;;
 13502                           
 13503                           	psect	text27
 13504   008E9E                     __ptext27:
 13505                           	callstack 0
 13506   008E9E                     ___lmul:
 13507                           	callstack 28
 13508   008E9E  0E00               	movlw	0
 13509   008EA0  6E09               	movwf	___lmul@product^0,c
 13510   008EA2  0E00               	movlw	0
 13511   008EA4  6E0A               	movwf	(___lmul@product+1)^0,c
 13512   008EA6  0E00               	movlw	0
 13513   008EA8  6E0B               	movwf	(___lmul@product+2)^0,c
 13514   008EAA  0E00               	movlw	0
 13515   008EAC  6E0C               	movwf	(___lmul@product+3)^0,c
 13516   008EAE                     l6297:
 13517   008EAE  A001               	btfss	___lmul@multiplier^0,0,c
 13518   008EB0  EF5C  F047         	goto	u7811
 13519   008EB4  EF5E  F047         	goto	u7810
 13520   008EB8                     u7811:
 13521   008EB8  EF66  F047         	goto	l6301
 13522   008EBC                     u7810:
 13523   008EBC  5005               	movf	___lmul@multiplicand^0,w,c
 13524   008EBE  2609               	addwf	___lmul@product^0,f,c
 13525   008EC0  5006               	movf	(___lmul@multiplicand+1)^0,w,c
 13526   008EC2  220A               	addwfc	(___lmul@product+1)^0,f,c
 13527   008EC4  5007               	movf	(___lmul@multiplicand+2)^0,w,c
 13528   008EC6  220B               	addwfc	(___lmul@product+2)^0,f,c
 13529   008EC8  5008               	movf	(___lmul@multiplicand+3)^0,w,c
 13530   008ECA  220C               	addwfc	(___lmul@product+3)^0,f,c
 13531   008ECC                     l6301:
 13532   008ECC  90D8               	bcf	status,0,c
 13533   008ECE  3605               	rlcf	___lmul@multiplicand^0,f,c
 13534   008ED0  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
 13535   008ED2  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
 13536   008ED4  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
 13537   008ED6  90D8               	bcf	status,0,c
 13538   008ED8  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
 13539   008EDA  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
 13540   008EDC  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
 13541   008EDE  3201               	rrcf	___lmul@multiplier^0,f,c
 13542   008EE0  5001               	movf	___lmul@multiplier^0,w,c
 13543   008EE2  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
 13544   008EE4  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
 13545   008EE6  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
 13546   008EE8  A4D8               	btfss	status,2,c
 13547   008EEA  EF79  F047         	goto	u7821
 13548   008EEE  EF7B  F047         	goto	u7820
 13549   008EF2                     u7821:
 13550   008EF2  EF57  F047         	goto	l6297
 13551   008EF6                     u7820:
 13552   008EF6  C009  F001         	movff	___lmul@product,?___lmul
 13553   008EFA  C00A  F002         	movff	___lmul@product+1,?___lmul+1
 13554   008EFE  C00B  F003         	movff	___lmul@product+2,?___lmul+2
 13555   008F02  C00C  F004         	movff	___lmul@product+3,?___lmul+3
 13556   008F06  0012               	return		;funcret
 13557   008F08                     __end_of___lmul:
 13558                           	callstack 0
 13559                           
 13560 ;; *************** function _SD_SPI_DelayMilliseconds *****************
 13561 ;; Defined at:
 13562 ;;		line 483 in file "mcc_generated_files/sd_spi/sd_spi.c"
 13563 ;; Parameters:    Size  Location     Type
 13564 ;;  milliseconds    1    wreg     unsigned char 
 13565 ;; Auto vars:     Size  Location     Type
 13566 ;;  milliseconds    1    5[COMRAM] unsigned char 
 13567 ;;  timeout         2    3[COMRAM] unsigned short 
 13568 ;; Return value:  Size  Location     Type
 13569 ;;                  1    wreg      void 
 13570 ;; Registers used:
 13571 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13572 ;; Tracked objects:
 13573 ;;		On entry : 0/0
 13574 ;;		On exit  : 0/0
 13575 ;;		Unchanged: 0/0
 13576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13578 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13579 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13580 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13581 ;;Total ram usage:        5 bytes
 13582 ;; Hardware stack levels used: 1
 13583 ;; Hardware stack levels required when called: 1
 13584 ;; This function calls:
 13585 ;;		_SPI1_ExchangeByte
 13586 ;; This function is called by:
 13587 ;;		_SD_SPI_MediaInitialize
 13588 ;; This function uses a non-reentrant model
 13589 ;;
 13590                           
 13591                           	psect	text28
 13592   008DDA                     __ptext28:
 13593                           	callstack 0
 13594   008DDA                     _SD_SPI_DelayMilliseconds:
 13595                           	callstack 25
 13596                           
 13597                           ;incstack = 0
 13598                           ;SD_SPI_DelayMilliseconds@milliseconds stored from wreg
 13599   008DDA  6E06               	movwf	SD_SPI_DelayMilliseconds@milliseconds^0,c
 13600   008DDC                     
 13601                           ;mcc_generated_files/sd_spi/sd_spi.c: 483: static void SD_SPI_DelayMilliseconds(uint8_t 
      +                          milliseconds);mcc_generated_files/sd_spi/sd_spi.c: 484: {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 485:     uint16_t timeout = 50u * milliseconds;
 13602   008DDC  5006               	movf	SD_SPI_DelayMilliseconds@milliseconds^0,w,c
 13603   008DDE  0D32               	mullw	50
 13604   008DE0  CFF3 F004          	movff	prodl,SD_SPI_DelayMilliseconds@timeout
 13605   008DE4  CFF4 F005          	movff	prodh,SD_SPI_DelayMilliseconds@timeout+1
 13606   008DE8  848B               	bsf	139,2,c	;volatile
 13607   008DEA  EF0F  F047         	goto	l6479
 13608   008DEE                     l6477:
 13609                           
 13610                           ;mcc_generated_files/sd_spi/sd_spi.c: 489:     {;mcc_generated_files/sd_spi/sd_spi.c: 49
      +                          0:         (void)spiMaster[SDFAST].exchangeByte(0xFF);
 13611   008DEE  0E8F               	movlw	low (_spiMaster+4)
 13612   008DF0  6EF6               	movwf	tblptrl,c
 13613   008DF2  0EFF               	movlw	high (_spiMaster+4)
 13614   008DF4  6EF7               	movwf	tblptrh,c
 13615   008DF6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13616   008DF6  6AF8               	clrf	tblptru,c
 13617   008DF8                     	endif
 13618   008DF8                     	if	0	;tblptru may be non-zero
 13619   008DF8                     	endif
 13620   008DF8  0009               	tblrd		*+
 13621   008DFA  CFF5 F002          	movff	tablat,??_SD_SPI_DelayMilliseconds
 13622   008DFE  0009               	tblrd		*+
 13623   008E00  CFF5 F003          	movff	tablat,??_SD_SPI_DelayMilliseconds+1
 13624   008E04  D802               	call	u8108
 13625   008E06  EF0F  F047         	goto	u8109
 13626   008E0A                     u8108:
 13627   008E0A  0005               	push	
 13628   008E0C  6EFA               	movwf	pclath,c
 13629   008E0E  5002               	movf	??_SD_SPI_DelayMilliseconds^0,w,c
 13630   008E10  6EFD               	movwf	tosl,c
 13631   008E12  5003               	movf	(??_SD_SPI_DelayMilliseconds+1)^0,w,c
 13632   008E14  6EFE               	movwf	tosh,c
 13633   008E16  6AFF               	clrf	tosu,c
 13634   008E18  50FA               	movf	pclath,w,c
 13635   008E1A  0EFF               	movlw	255
 13636   008E1C  0012               	return		;indir
 13637   008E1E                     u8109:
 13638   008E1E                     l6479:
 13639                           
 13640                           ;mcc_generated_files/sd_spi/sd_spi.c: 488:     while(timeout--)
 13641   008E1E  0604               	decf	SD_SPI_DelayMilliseconds@timeout^0,f,c
 13642   008E20  A0D8               	btfss	status,0,c
 13643   008E22  0605               	decf	(SD_SPI_DelayMilliseconds@timeout+1)^0,f,c
 13644   008E24  2804               	incf	SD_SPI_DelayMilliseconds@timeout^0,w,c
 13645   008E26  E106               	bnz	u8111
 13646   008E28  2805               	incf	(SD_SPI_DelayMilliseconds@timeout+1)^0,w,c
 13647   008E2A  A4D8               	btfss	status,2,c
 13648   008E2C  EF1A  F047         	goto	u8111
 13649   008E30  EF1C  F047         	goto	u8110
 13650   008E34                     u8111:
 13651   008E34  EFF7  F046         	goto	l6477
 13652   008E38                     u8110:
 13653   008E38  0012               	return		;funcret
 13654   008E3A                     __end_of_SD_SPI_DelayMilliseconds:
 13655                           	callstack 0
 13656                           
 13657 ;; *************** function _check_fs *****************
 13658 ;; Defined at:
 13659 ;;		line 3176 in file "mcc_generated_files/fatfs/ff.c"
 13660 ;; Parameters:    Size  Location     Type
 13661 ;;  fs              2   23[BANK0 ] PTR struct .
 13662 ;;		 -> drive(563), NULL(0), FatFs(563), 
 13663 ;;  sect            4   25[BANK0 ] unsigned long 
 13664 ;; Auto vars:     Size  Location     Type
 13665 ;;		None
 13666 ;; Return value:  Size  Location     Type
 13667 ;;                  1    wreg      unsigned char 
 13668 ;; Registers used:
 13669 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 13670 ;; Tracked objects:
 13671 ;;		On entry : 0/0
 13672 ;;		On exit  : 0/0
 13673 ;;		Unchanged: 0/0
 13674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13675 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13677 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13678 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13679 ;;Total ram usage:        7 bytes
 13680 ;; Hardware stack levels used: 1
 13681 ;; Hardware stack levels required when called: 7
 13682 ;; This function calls:
 13683 ;;		_ld_word
 13684 ;;		_mem_cmp
 13685 ;;		_move_window
 13686 ;; This function is called by:
 13687 ;;		_find_volume
 13688 ;; This function uses a non-reentrant model
 13689 ;;
 13690                           
 13691                           	psect	text29
 13692   00A024                     __ptext29:
 13693                           	callstack 0
 13694   00A024                     _check_fs:
 13695                           	callstack 21
 13696   00A024                     
 13697                           ;mcc_generated_files/fatfs/ff.c: 3177:  FATFS* fs,;mcc_generated_files/fatfs/ff.c: 3178:
      +                            DWORD sect;mcc_generated_files/fatfs/ff.c: 3180: {;mcc_generated_files/fatfs/ff.c: 318
      +                          1:  fs->wflag = 0; fs->winsect = 0xFFFFFFFF;
 13698   00A024  0100               	movlb	0	; () banked
 13699   00A026  EE20 F003          	lfsr	2,3
 13700   00A02A  5177               	movf	check_fs@fs& (0+255),w,b
 13701   00A02C  26D9               	addwf	fsr2l,f,c
 13702   00A02E  5178               	movf	(check_fs@fs+1)& (0+255),w,b
 13703   00A030  22DA               	addwfc	fsr2h,f,c
 13704   00A032  0E00               	movlw	0
 13705   00A034  6EDF               	movwf	indf2,c
 13706   00A036  EE20 F02F          	lfsr	2,47
 13707   00A03A  5177               	movf	check_fs@fs& (0+255),w,b
 13708   00A03C  26D9               	addwf	fsr2l,f,c
 13709   00A03E  5178               	movf	(check_fs@fs+1)& (0+255),w,b
 13710   00A040  22DA               	addwfc	fsr2h,f,c
 13711   00A042  0EFF               	movlw	255
 13712   00A044  6EDE               	movwf	postinc2,c
 13713   00A046  0EFF               	movlw	255
 13714   00A048  6EDE               	movwf	postinc2,c
 13715   00A04A  0EFF               	movlw	255
 13716   00A04C  6EDE               	movwf	postinc2,c
 13717   00A04E  0EFF               	movlw	255
 13718   00A050  6EDD               	movwf	postdec2,c
 13719   00A052                     
 13720                           ; BSR set to: 0
 13721                           ;mcc_generated_files/fatfs/ff.c: 3182:  if (move_window(fs, sect) != FR_OK) return 4;
 13722   00A052  C077  F070         	movff	check_fs@fs,move_window@fs
 13723   00A056  C078  F071         	movff	check_fs@fs+1,move_window@fs+1
 13724   00A05A  C079  F072         	movff	check_fs@sect,move_window@sector
 13725   00A05E  C07A  F073         	movff	check_fs@sect+1,move_window@sector+1
 13726   00A062  C07B  F074         	movff	check_fs@sect+2,move_window@sector+2
 13727   00A066  C07C  F075         	movff	check_fs@sect+3,move_window@sector+3
 13728   00A06A  ECBF  F04A         	call	_move_window
 13729   00A06E  0900               	iorlw	0
 13730   00A070  B4D8               	btfsc	status,2,c
 13731   00A072  EF3D  F050         	goto	u9831
 13732   00A076  EF3F  F050         	goto	u9830
 13733   00A07A                     u9831:
 13734   00A07A  EF42  F050         	goto	l7405
 13735   00A07E                     u9830:
 13736   00A07E  0E04               	movlw	4
 13737   00A080  EFC1  F050         	goto	l901
 13738   00A084                     l7405:
 13739                           
 13740                           ;mcc_generated_files/fatfs/ff.c: 3184:  if (ld_word(fs->win + 510) != 0xAA55) return 3;
 13741   00A084  0E31               	movlw	49
 13742   00A086  0100               	movlb	0	; () banked
 13743   00A088  2577               	addwf	check_fs@fs& (0+255),w,b
 13744   00A08A  6E01               	movwf	ld_word@ptr^0,c
 13745   00A08C  0E02               	movlw	2
 13746   00A08E  2178               	addwfc	(check_fs@fs+1)& (0+255),w,b
 13747   00A090  6E02               	movwf	(ld_word@ptr+1)^0,c
 13748   00A092  ECE4  F045         	call	_ld_word	;wreg free
 13749   00A096  0E55               	movlw	85
 13750   00A098  1801               	xorwf	?_ld_word^0,w,c
 13751   00A09A  E109               	bnz	u9840
 13752   00A09C  0EAA               	movlw	170
 13753   00A09E  1802               	xorwf	(?_ld_word+1)^0,w,c
 13754   00A0A0  B4D8               	btfsc	status,2,c
 13755   00A0A2  EF55  F050         	goto	u9841
 13756   00A0A6  EF57  F050         	goto	u9840
 13757   00A0AA                     u9841:
 13758   00A0AA  EF5A  F050         	goto	l7411
 13759   00A0AE                     u9840:
 13760   00A0AE  0E03               	movlw	3
 13761   00A0B0  EFC1  F050         	goto	l901
 13762   00A0B4                     l7411:
 13763                           
 13764                           ;mcc_generated_files/fatfs/ff.c: 3189:  if (fs->win[0] == 0xE9 || fs->win[0] == 0xEB || 
      +                          fs->win[0] == 0xE8) {
 13765   00A0B4  0100               	movlb	0	; () banked
 13766   00A0B6  EE20 F033          	lfsr	2,51
 13767   00A0BA  5177               	movf	check_fs@fs& (0+255),w,b
 13768   00A0BC  26D9               	addwf	fsr2l,f,c
 13769   00A0BE  5178               	movf	(check_fs@fs+1)& (0+255),w,b
 13770   00A0C0  22DA               	addwfc	fsr2h,f,c
 13771   00A0C2  0EE9               	movlw	233
 13772   00A0C4  18DE               	xorwf	postinc2,w,c
 13773   00A0C6  B4D8               	btfsc	status,2,c
 13774   00A0C8  EF68  F050         	goto	u9851
 13775   00A0CC  EF6A  F050         	goto	u9850
 13776   00A0D0                     u9851:
 13777   00A0D0  EF88  F050         	goto	l7417
 13778   00A0D4                     u9850:
 13779   00A0D4                     
 13780                           ; BSR set to: 0
 13781   00A0D4  EE20 F033          	lfsr	2,51
 13782   00A0D8  5177               	movf	check_fs@fs& (0+255),w,b
 13783   00A0DA  26D9               	addwf	fsr2l,f,c
 13784   00A0DC  5178               	movf	(check_fs@fs+1)& (0+255),w,b
 13785   00A0DE  22DA               	addwfc	fsr2h,f,c
 13786   00A0E0  0EEB               	movlw	235
 13787   00A0E2  18DE               	xorwf	postinc2,w,c
 13788   00A0E4  B4D8               	btfsc	status,2,c
 13789   00A0E6  EF77  F050         	goto	u9861
 13790   00A0EA  EF79  F050         	goto	u9860
 13791   00A0EE                     u9861:
 13792   00A0EE  EF88  F050         	goto	l7417
 13793   00A0F2                     u9860:
 13794   00A0F2                     
 13795                           ; BSR set to: 0
 13796   00A0F2  EE20 F033          	lfsr	2,51
 13797   00A0F6  5177               	movf	check_fs@fs& (0+255),w,b
 13798   00A0F8  26D9               	addwf	fsr2l,f,c
 13799   00A0FA  5178               	movf	(check_fs@fs+1)& (0+255),w,b
 13800   00A0FC  22DA               	addwfc	fsr2h,f,c
 13801   00A0FE  0EE8               	movlw	232
 13802   00A100  18DE               	xorwf	postinc2,w,c
 13803   00A102  A4D8               	btfss	status,2,c
 13804   00A104  EF86  F050         	goto	u9871
 13805   00A108  EF88  F050         	goto	u9870
 13806   00A10C                     u9871:
 13807   00A10C  EFC0  F050         	goto	l7429
 13808   00A110                     u9870:
 13809   00A110                     l7417:
 13810                           
 13811                           ; BSR set to: 0
 13812                           ;mcc_generated_files/fatfs/ff.c: 3190:   if (!mem_cmp(fs->win + 54, "FAT", 3)) return 0;
 13813   00A110  0E69               	movlw	105
 13814   00A112  2577               	addwf	check_fs@fs& (0+255),w,b
 13815   00A114  6E01               	movwf	mem_cmp@dst^0,c
 13816   00A116  0E00               	movlw	0
 13817   00A118  2178               	addwfc	(check_fs@fs+1)& (0+255),w,b
 13818   00A11A  6E02               	movwf	(mem_cmp@dst+1)^0,c
 13819   00A11C  0EF7               	movlw	low STR_9
 13820   00A11E  6E03               	movwf	mem_cmp@src^0,c
 13821   00A120  0EFF               	movlw	high STR_9
 13822   00A122  6E04               	movwf	(mem_cmp@src+1)^0,c
 13823   00A124  0E00               	movlw	0
 13824   00A126  6E06               	movwf	(mem_cmp@cnt+1)^0,c
 13825   00A128  0E03               	movlw	3
 13826   00A12A  6E05               	movwf	mem_cmp@cnt^0,c
 13827   00A12C  EC27  F049         	call	_mem_cmp	;wreg free
 13828   00A130  5001               	movf	?_mem_cmp^0,w,c
 13829   00A132  1002               	iorwf	(?_mem_cmp+1)^0,w,c
 13830   00A134  A4D8               	btfss	status,2,c
 13831   00A136  EF9F  F050         	goto	u9881
 13832   00A13A  EFA1  F050         	goto	u9880
 13833   00A13E                     u9881:
 13834   00A13E  EFA4  F050         	goto	l7423
 13835   00A142                     u9880:
 13836   00A142                     l7419:
 13837   00A142  0E00               	movlw	0
 13838   00A144  EFC1  F050         	goto	l901
 13839   00A148                     l7423:
 13840                           
 13841                           ;mcc_generated_files/fatfs/ff.c: 3191:   if (!mem_cmp(fs->win + 82, "FAT32", 5)) return 
      +                          0;
 13842   00A148  0E85               	movlw	133
 13843   00A14A  0100               	movlb	0	; () banked
 13844   00A14C  2577               	addwf	check_fs@fs& (0+255),w,b
 13845   00A14E  6E01               	movwf	mem_cmp@dst^0,c
 13846   00A150  0E00               	movlw	0
 13847   00A152  2178               	addwfc	(check_fs@fs+1)& (0+255),w,b
 13848   00A154  6E02               	movwf	(mem_cmp@dst+1)^0,c
 13849   00A156  0EF1               	movlw	low STR_11
 13850   00A158  6E03               	movwf	mem_cmp@src^0,c
 13851   00A15A  0EFF               	movlw	high STR_11
 13852   00A15C  6E04               	movwf	(mem_cmp@src+1)^0,c
 13853   00A15E  0E00               	movlw	0
 13854   00A160  6E06               	movwf	(mem_cmp@cnt+1)^0,c
 13855   00A162  0E05               	movlw	5
 13856   00A164  6E05               	movwf	mem_cmp@cnt^0,c
 13857   00A166  EC27  F049         	call	_mem_cmp	;wreg free
 13858   00A16A  5001               	movf	?_mem_cmp^0,w,c
 13859   00A16C  1002               	iorwf	(?_mem_cmp+1)^0,w,c
 13860   00A16E  A4D8               	btfss	status,2,c
 13861   00A170  EFBC  F050         	goto	u9891
 13862   00A174  EFBE  F050         	goto	u9890
 13863   00A178                     u9891:
 13864   00A178  EFC0  F050         	goto	l7429
 13865   00A17C                     u9890:
 13866   00A17C  EFA1  F050         	goto	l7419
 13867   00A180                     l7429:
 13868                           
 13869                           ;mcc_generated_files/fatfs/ff.c: 3193:  return 2;
 13870   00A180  0E02               	movlw	2
 13871   00A182                     l901:
 13872   00A182  0012               	return		;funcret
 13873   00A184                     __end_of_check_fs:
 13874                           	callstack 0
 13875                           
 13876 ;; *************** function _mem_cmp *****************
 13877 ;; Defined at:
 13878 ;;		line 671 in file "mcc_generated_files/fatfs/ff.c"
 13879 ;; Parameters:    Size  Location     Type
 13880 ;;  dst             2    0[COMRAM] PTR const void 
 13881 ;;		 -> FatFs.win(512), drive.win(512), drive(563), NULL(0), 
 13882 ;;		 -> FatFs(563), 
 13883 ;;  src             2    2[COMRAM] PTR const void 
 13884 ;;		 -> djn.fn(12), f_rename@djn(40), djo.fn(12), f_rename@djo(40), 
 13885 ;;		 -> dj.fn(12), f_mkdir@dj(40), dj.fn(12), f_unlink@dj(40), 
 13886 ;;		 -> dj.fn(12), f_stat@dj(40), dj.fn(12), f_chdir@dj(40), 
 13887 ;;		 -> dj.fn(12), f_open@dj(40), STR_12(6), STR_10(4), 
 13888 ;;  cnt             2    4[COMRAM] unsigned int 
 13889 ;; Auto vars:     Size  Location     Type
 13890 ;;  r               2   12[COMRAM] int 
 13891 ;;  s               2   10[COMRAM] PTR const unsigned char 
 13892 ;;		 -> djn.fn(12), f_rename@djn(40), djo.fn(12), f_rename@djo(40), 
 13893 ;;		 -> dj.fn(12), f_mkdir@dj(40), dj.fn(12), f_unlink@dj(40), 
 13894 ;;		 -> dj.fn(12), f_stat@dj(40), dj.fn(12), f_chdir@dj(40), 
 13895 ;;		 -> dj.fn(12), f_open@dj(40), STR_12(6), STR_10(4), 
 13896 ;;  d               2    8[COMRAM] PTR const unsigned char 
 13897 ;;		 -> FatFs.win(512), drive.win(512), drive(563), NULL(0), 
 13898 ;;		 -> FatFs(563), 
 13899 ;; Return value:  Size  Location     Type
 13900 ;;                  2    0[COMRAM] int 
 13901 ;; Registers used:
 13902 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 13903 ;; Tracked objects:
 13904 ;;		On entry : 0/0
 13905 ;;		On exit  : 0/0
 13906 ;;		Unchanged: 0/0
 13907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13908 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13909 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13910 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13911 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13912 ;;Total ram usage:       14 bytes
 13913 ;; Hardware stack levels used: 1
 13914 ;; This function calls:
 13915 ;;		Nothing
 13916 ;; This function is called by:
 13917 ;;		_dir_find
 13918 ;;		_check_fs
 13919 ;; This function uses a non-reentrant model
 13920 ;;
 13921                           
 13922                           	psect	text30
 13923   00924E                     __ptext30:
 13924                           	callstack 0
 13925   00924E                     _mem_cmp:
 13926                           	callstack 27
 13927   00924E                     
 13928                           ;mcc_generated_files/fatfs/ff.c: 671: static int mem_cmp (const void* dst, const void* s
      +                          rc, UINT cnt);mcc_generated_files/fatfs/ff.c: 672: {;mcc_generated_files/fatfs/ff.c: 673
      +                          :  const BYTE *d = (const BYTE *)dst, *s = (const BYTE *)src;
 13929   00924E  C001  F009         	movff	mem_cmp@dst,mem_cmp@d
 13930   009252  C002  F00A         	movff	mem_cmp@dst+1,mem_cmp@d+1
 13931   009256  C003  F00B         	movff	mem_cmp@src,mem_cmp@s
 13932   00925A  C004  F00C         	movff	mem_cmp@src+1,mem_cmp@s+1
 13933   00925E                     l6861:
 13934                           
 13935                           ;mcc_generated_files/fatfs/ff.c: 677:   r = *d++ - *s++;
 13936   00925E  C009  FFD9         	movff	mem_cmp@d,fsr2l
 13937   009262  C00A  FFDA         	movff	mem_cmp@d+1,fsr2h
 13938   009266  50DF               	movf	indf2,w,c
 13939   009268  6E07               	movwf	??_mem_cmp^0,c
 13940   00926A  C00B  FFF6         	movff	mem_cmp@s,tblptrl
 13941   00926E  C00C  FFF7         	movff	mem_cmp@s+1,tblptrh
 13942   009272  0E00               	movlw	low (__mediumconst shr (0+16))
 13943   009274  6EF8               	movwf	tblptru,c
 13944   009276  0E0F               	movlw	(high __ramtop+-1)
 13945   009278  64F7               	cpfsgt	tblptrh,c
 13946   00927A  D003               	bra	u8917
 13947   00927C  0008               	tblrd		*
 13948   00927E  50F5               	movf	tablat,w,c
 13949   009280  D005               	bra	u8910
 13950   009282                     u8917:
 13951   009282  CFF6 FFE9          	movff	tblptrl,fsr0l
 13952   009286  CFF7 FFEA          	movff	tblptrh,fsr0h
 13953   00928A  50EF               	movf	indf0,w,c
 13954   00928C                     u8910:
 13955   00928C  6E08               	movwf	(??_mem_cmp+1)^0,c
 13956   00928E  5008               	movf	(??_mem_cmp+1)^0,w,c
 13957   009290  5C07               	subwf	??_mem_cmp^0,w,c
 13958   009292  6E0D               	movwf	mem_cmp@r^0,c
 13959   009294  6A0E               	clrf	(mem_cmp@r+1)^0,c
 13960   009296  A0D8               	btfss	status,0,c
 13961   009298  060E               	decf	(mem_cmp@r+1)^0,f,c
 13962   00929A  4A0B               	infsnz	mem_cmp@s^0,f,c
 13963   00929C  2A0C               	incf	(mem_cmp@s+1)^0,f,c
 13964   00929E  4A09               	infsnz	mem_cmp@d^0,f,c
 13965   0092A0  2A0A               	incf	(mem_cmp@d+1)^0,f,c
 13966   0092A2                     
 13967                           ;mcc_generated_files/fatfs/ff.c: 678:  } while (--cnt && r == 0);
 13968   0092A2  0605               	decf	mem_cmp@cnt^0,f,c
 13969   0092A4  A0D8               	btfss	status,0,c
 13970   0092A6  0606               	decf	(mem_cmp@cnt+1)^0,f,c
 13971   0092A8  5005               	movf	mem_cmp@cnt^0,w,c
 13972   0092AA  1006               	iorwf	(mem_cmp@cnt+1)^0,w,c
 13973   0092AC  B4D8               	btfsc	status,2,c
 13974   0092AE  EF5B  F049         	goto	u8921
 13975   0092B2  EF5D  F049         	goto	u8920
 13976   0092B6                     u8921:
 13977   0092B6  EF66  F049         	goto	l553
 13978   0092BA                     u8920:
 13979   0092BA  500D               	movf	mem_cmp@r^0,w,c
 13980   0092BC  100E               	iorwf	(mem_cmp@r+1)^0,w,c
 13981   0092BE  B4D8               	btfsc	status,2,c
 13982   0092C0  EF64  F049         	goto	u8931
 13983   0092C4  EF66  F049         	goto	u8930
 13984   0092C8                     u8931:
 13985   0092C8  EF2F  F049         	goto	l6861
 13986   0092CC                     u8930:
 13987   0092CC                     l553:
 13988                           
 13989                           ;mcc_generated_files/fatfs/ff.c: 680:  return r;
 13990   0092CC  C00D  F001         	movff	mem_cmp@r,?_mem_cmp
 13991   0092D0  C00E  F002         	movff	mem_cmp@r+1,?_mem_cmp+1
 13992   0092D4  0012               	return		;funcret
 13993   0092D6                     __end_of_mem_cmp:
 13994                           	callstack 0
 13995                           
 13996 ;; *************** function _ld_word *****************
 13997 ;; Defined at:
 13998 ;;		line 572 in file "mcc_generated_files/fatfs/ff.c"
 13999 ;; Parameters:    Size  Location     Type
 14000 ;;  ptr             2    0[COMRAM] PTR const unsigned char 
 14001 ;;		 -> FatFs.win(512), drive.win(512), drive(563), NULL(0), 
 14002 ;;		 -> FatFs(563), 
 14003 ;; Auto vars:     Size  Location     Type
 14004 ;;  rv              2    5[COMRAM] unsigned short 
 14005 ;; Return value:  Size  Location     Type
 14006 ;;                  2    0[COMRAM] unsigned short 
 14007 ;; Registers used:
 14008 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14009 ;; Tracked objects:
 14010 ;;		On entry : 0/0
 14011 ;;		On exit  : 0/0
 14012 ;;		Unchanged: 0/0
 14013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14014 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14015 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14016 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14017 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14018 ;;Total ram usage:        7 bytes
 14019 ;; Hardware stack levels used: 1
 14020 ;; This function calls:
 14021 ;;		Nothing
 14022 ;; This function is called by:
 14023 ;;		_get_fat
 14024 ;;		_ld_clust
 14025 ;;		_check_fs
 14026 ;;		_find_volume
 14027 ;;		_get_fileinfo
 14028 ;;		_f_getfree
 14029 ;; This function uses a non-reentrant model
 14030 ;;
 14031                           
 14032                           	psect	text31
 14033   008BC8                     __ptext31:
 14034                           	callstack 0
 14035   008BC8                     _ld_word:
 14036                           	callstack 27
 14037   008BC8                     
 14038                           ;mcc_generated_files/fatfs/ff.c: 572: static WORD ld_word (const BYTE* ptr);mcc_generate
      +                          d_files/fatfs/ff.c: 573: {;mcc_generated_files/fatfs/ff.c: 574:  WORD rv;;mcc_generated_
      +                          files/fatfs/ff.c: 576:  rv = ptr[1];
 14039   008BC8  EE20 F001          	lfsr	2,1
 14040   008BCC  5001               	movf	ld_word@ptr^0,w,c
 14041   008BCE  26D9               	addwf	fsr2l,f,c
 14042   008BD0  5002               	movf	(ld_word@ptr+1)^0,w,c
 14043   008BD2  22DA               	addwfc	fsr2h,f,c
 14044   008BD4  50DF               	movf	indf2,w,c
 14045   008BD6  6E03               	movwf	??_ld_word^0,c
 14046   008BD8  5003               	movf	??_ld_word^0,w,c
 14047   008BDA  6E06               	movwf	ld_word@rv^0,c
 14048   008BDC  6A07               	clrf	(ld_word@rv+1)^0,c
 14049                           
 14050                           ;mcc_generated_files/fatfs/ff.c: 577:  rv = rv << 8 | ptr[0];
 14051   008BDE  C001  FFD9         	movff	ld_word@ptr,fsr2l
 14052   008BE2  C002  FFDA         	movff	ld_word@ptr+1,fsr2h
 14053   008BE6  50DF               	movf	indf2,w,c
 14054   008BE8  6E03               	movwf	??_ld_word^0,c
 14055   008BEA  5006               	movf	ld_word@rv^0,w,c
 14056   008BEC  6E04               	movwf	(??_ld_word+1)^0,c
 14057   008BEE  5003               	movf	??_ld_word^0,w,c
 14058   008BF0  6E06               	movwf	ld_word@rv^0,c
 14059   008BF2  C004  F007         	movff	??_ld_word+1,ld_word@rv+1
 14060   008BF6                     
 14061                           ;mcc_generated_files/fatfs/ff.c: 578:  return rv;
 14062   008BF6  C006  F001         	movff	ld_word@rv,?_ld_word
 14063   008BFA  C007  F002         	movff	ld_word@rv+1,?_ld_word+1
 14064   008BFE  0012               	return		;funcret
 14065   008C00                     __end_of_ld_word:
 14066                           	callstack 0
 14067                           
 14068 ;; *************** function ___lldiv *****************
 14069 ;; Defined at:
 14070 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__lldiv.c"
 14071 ;; Parameters:    Size  Location     Type
 14072 ;;  dividend        4    0[COMRAM] unsigned long 
 14073 ;;  divisor         4    4[COMRAM] unsigned long 
 14074 ;; Auto vars:     Size  Location     Type
 14075 ;;  quotient        4    8[COMRAM] unsigned long 
 14076 ;;  counter         1   12[COMRAM] unsigned char 
 14077 ;; Return value:  Size  Location     Type
 14078 ;;                  4    0[COMRAM] unsigned long 
 14079 ;; Registers used:
 14080 ;;		wreg, status,2, status,0
 14081 ;; Tracked objects:
 14082 ;;		On entry : 0/0
 14083 ;;		On exit  : 0/0
 14084 ;;		Unchanged: 0/0
 14085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14086 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14087 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14089 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14090 ;;Total ram usage:       13 bytes
 14091 ;; Hardware stack levels used: 1
 14092 ;; This function calls:
 14093 ;;		Nothing
 14094 ;; This function is called by:
 14095 ;;		_find_volume
 14096 ;;		_f_lseek
 14097 ;; This function uses a non-reentrant model
 14098 ;;
 14099                           
 14100                           	psect	text32
 14101   00936A                     __ptext32:
 14102                           	callstack 0
 14103   00936A                     ___lldiv:
 14104                           	callstack 28
 14105   00936A  0E00               	movlw	0
 14106   00936C  6E09               	movwf	___lldiv@quotient^0,c
 14107   00936E  0E00               	movlw	0
 14108   009370  6E0A               	movwf	(___lldiv@quotient+1)^0,c
 14109   009372  0E00               	movlw	0
 14110   009374  6E0B               	movwf	(___lldiv@quotient+2)^0,c
 14111   009376  0E00               	movlw	0
 14112   009378  6E0C               	movwf	(___lldiv@quotient+3)^0,c
 14113   00937A  5005               	movf	___lldiv@divisor^0,w,c
 14114   00937C  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
 14115   00937E  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
 14116   009380  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
 14117   009382  B4D8               	btfsc	status,2,c
 14118   009384  EFC6  F049         	goto	u9961
 14119   009388  EFC8  F049         	goto	u9960
 14120   00938C                     u9961:
 14121   00938C  EFFE  F049         	goto	l1307
 14122   009390                     u9960:
 14123   009390  0E01               	movlw	1
 14124   009392  6E0D               	movwf	___lldiv@counter^0,c
 14125   009394  EFD2  F049         	goto	l7463
 14126   009398                     l7461:
 14127   009398  90D8               	bcf	status,0,c
 14128   00939A  3605               	rlcf	___lldiv@divisor^0,f,c
 14129   00939C  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
 14130   00939E  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
 14131   0093A0  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
 14132   0093A2  2A0D               	incf	___lldiv@counter^0,f,c
 14133   0093A4                     l7463:
 14134   0093A4  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
 14135   0093A6  EFD7  F049         	goto	u9971
 14136   0093AA  EFD9  F049         	goto	u9970
 14137   0093AE                     u9971:
 14138   0093AE  EFCC  F049         	goto	l7461
 14139   0093B2                     u9970:
 14140   0093B2                     l7465:
 14141   0093B2  90D8               	bcf	status,0,c
 14142   0093B4  3609               	rlcf	___lldiv@quotient^0,f,c
 14143   0093B6  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
 14144   0093B8  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
 14145   0093BA  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
 14146   0093BC  5005               	movf	___lldiv@divisor^0,w,c
 14147   0093BE  5C01               	subwf	___lldiv@dividend^0,w,c
 14148   0093C0  5006               	movf	(___lldiv@divisor+1)^0,w,c
 14149   0093C2  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
 14150   0093C4  5007               	movf	(___lldiv@divisor+2)^0,w,c
 14151   0093C6  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
 14152   0093C8  5008               	movf	(___lldiv@divisor+3)^0,w,c
 14153   0093CA  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
 14154   0093CC  A0D8               	btfss	status,0,c
 14155   0093CE  EFEB  F049         	goto	u9981
 14156   0093D2  EFED  F049         	goto	u9980
 14157   0093D6                     u9981:
 14158   0093D6  EFF6  F049         	goto	l7473
 14159   0093DA                     u9980:
 14160   0093DA  5005               	movf	___lldiv@divisor^0,w,c
 14161   0093DC  5E01               	subwf	___lldiv@dividend^0,f,c
 14162   0093DE  5006               	movf	(___lldiv@divisor+1)^0,w,c
 14163   0093E0  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
 14164   0093E2  5007               	movf	(___lldiv@divisor+2)^0,w,c
 14165   0093E4  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
 14166   0093E6  5008               	movf	(___lldiv@divisor+3)^0,w,c
 14167   0093E8  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
 14168   0093EA  8009               	bsf	___lldiv@quotient^0,0,c
 14169   0093EC                     l7473:
 14170   0093EC  90D8               	bcf	status,0,c
 14171   0093EE  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
 14172   0093F0  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
 14173   0093F2  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
 14174   0093F4  3205               	rrcf	___lldiv@divisor^0,f,c
 14175   0093F6  2E0D               	decfsz	___lldiv@counter^0,f,c
 14176   0093F8  EFD9  F049         	goto	l7465
 14177   0093FC                     l1307:
 14178   0093FC  C009  F001         	movff	___lldiv@quotient,?___lldiv
 14179   009400  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 14180   009404  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 14181   009408  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 14182   00940C  0012               	return		;funcret
 14183   00940E                     __end_of___lldiv:
 14184                           	callstack 0
 14185                           
 14186 ;; *************** function _f_close *****************
 14187 ;; Defined at:
 14188 ;;		line 4012 in file "mcc_generated_files/fatfs/ff.c"
 14189 ;; Parameters:    Size  Location     Type
 14190 ;;  fp              2   31[BANK0 ] PTR struct .
 14191 ;;		 -> file(546), Fil(546), 
 14192 ;; Auto vars:     Size  Location     Type
 14193 ;;  fs              2   33[BANK0 ] PTR struct .
 14194 ;;		 -> drive(563), NULL(0), FatFs(563), 
 14195 ;;  res             1   35[BANK0 ] enum E68
 14196 ;; Return value:  Size  Location     Type
 14197 ;;                  1    wreg      enum E6428
 14198 ;; Registers used:
 14199 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 14200 ;; Tracked objects:
 14201 ;;		On entry : 0/0
 14202 ;;		On exit  : 0/0
 14203 ;;		Unchanged: 0/0
 14204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14205 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14206 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14208 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14209 ;;Total ram usage:        5 bytes
 14210 ;; Hardware stack levels used: 1
 14211 ;; Hardware stack levels required when called: 8
 14212 ;; This function calls:
 14213 ;;		_f_sync
 14214 ;;		_validate
 14215 ;; This function is called by:
 14216 ;;		_main
 14217 ;;		_FatFsDemo_Tasks
 14218 ;; This function uses a non-reentrant model
 14219 ;;
 14220                           
 14221                           	psect	text33
 14222   008D80                     __ptext33:
 14223                           	callstack 0
 14224   008D80                     _f_close:
 14225                           	callstack 22
 14226   008D80                     
 14227                           ;mcc_generated_files/fatfs/ff.c: 4013:  FIL* fp;mcc_generated_files/fatfs/ff.c: 4015: {;
      +                          mcc_generated_files/fatfs/ff.c: 4016:  FRESULT res;;mcc_generated_files/fatfs/ff.c: 4017
      +                          :  FATFS *fs;;mcc_generated_files/fatfs/ff.c: 4020:  res = f_sync(fp);
 14228   008D80  C07F  F078         	movff	f_close@fp,f_sync@fp
 14229   008D84  C080  F079         	movff	f_close@fp+1,f_sync@fp+1
 14230   008D88  EC52  F053         	call	_f_sync	;wreg free
 14231   008D8C  0100               	movlb	0	; () banked
 14232   008D8E  6F83               	movwf	f_close@res& (0+255),b
 14233   008D90                     
 14234                           ; BSR set to: 0
 14235                           ;mcc_generated_files/fatfs/ff.c: 4021:  if (res == FR_OK)
 14236   008D90  5183               	movf	f_close@res& (0+255),w,b
 14237   008D92  A4D8               	btfss	status,2,c
 14238   008D94  EFCE  F046         	goto	u11431
 14239   008D98  EFD0  F046         	goto	u11430
 14240   008D9C                     u11431:
 14241   008D9C  EFEC  F046         	goto	l1099
 14242   008DA0                     u11430:
 14243   008DA0                     
 14244                           ; BSR set to: 0
 14245                           ;mcc_generated_files/fatfs/ff.c: 4023:  {;mcc_generated_files/fatfs/ff.c: 4024:   res = 
      +                          validate(&fp->obj, &fs);
 14246   008DA0  C07F  F005         	movff	f_close@fp,validate@obj
 14247   008DA4  C080  F006         	movff	f_close@fp+1,validate@obj+1
 14248   008DA8  0E81               	movlw	low f_close@fs
 14249   008DAA  6E07               	movwf	validate@rfs^0,c
 14250   008DAC  0E00               	movlw	high f_close@fs
 14251   008DAE  6E08               	movwf	(validate@rfs+1)^0,c
 14252   008DB0  EC68  F04C         	call	_validate	;wreg free
 14253   008DB4  0100               	movlb	0	; () banked
 14254   008DB6  6F83               	movwf	f_close@res& (0+255),b
 14255   008DB8                     
 14256                           ; BSR set to: 0
 14257                           ;mcc_generated_files/fatfs/ff.c: 4025:   if (res == FR_OK) {
 14258   008DB8  5183               	movf	f_close@res& (0+255),w,b
 14259   008DBA  A4D8               	btfss	status,2,c
 14260   008DBC  EFE2  F046         	goto	u11441
 14261   008DC0  EFE4  F046         	goto	u11440
 14262   008DC4                     u11441:
 14263   008DC4  EFEC  F046         	goto	l1099
 14264   008DC8                     u11440:
 14265   008DC8                     
 14266                           ; BSR set to: 0
 14267                           ;mcc_generated_files/fatfs/ff.c: 4030:    fp->obj.fs = 0;
 14268   008DC8  C07F  FFD9         	movff	f_close@fp,fsr2l
 14269   008DCC  C080  FFDA         	movff	f_close@fp+1,fsr2h
 14270   008DD0  0E00               	movlw	0
 14271   008DD2  6EDE               	movwf	postinc2,c
 14272   008DD4  0E00               	movlw	0
 14273   008DD6  6EDD               	movwf	postdec2,c
 14274   008DD8                     l1099:
 14275                           
 14276                           ; BSR set to: 0
 14277   008DD8  0012               	return		;funcret
 14278   008DDA                     __end_of_f_close:
 14279                           	callstack 0
 14280                           
 14281 ;; *************** function _f_sync *****************
 14282 ;; Defined at:
 14283 ;;		line 3931 in file "mcc_generated_files/fatfs/ff.c"
 14284 ;; Parameters:    Size  Location     Type
 14285 ;;  fp              2   24[BANK0 ] PTR struct .
 14286 ;;		 -> file(546), Fil(546), 
 14287 ;; Auto vars:     Size  Location     Type
 14288 ;;  tm              4    0        unsigned long 
 14289 ;;  fs              2   29[BANK0 ] PTR struct .
 14290 ;;		 -> drive(563), NULL(0), FatFs(563), 
 14291 ;;  dir             2   27[BANK0 ] PTR unsigned char 
 14292 ;;		 -> drive(563), NULL(0), FatFs(563), 
 14293 ;;  res             1   26[BANK0 ] enum E68
 14294 ;; Return value:  Size  Location     Type
 14295 ;;                  1    wreg      enum E68
 14296 ;; Registers used:
 14297 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 14298 ;; Tracked objects:
 14299 ;;		On entry : 0/0
 14300 ;;		On exit  : 0/0
 14301 ;;		Unchanged: 0/0
 14302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14303 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14304 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14306 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14307 ;;Total ram usage:        7 bytes
 14308 ;; Hardware stack levels used: 1
 14309 ;; Hardware stack levels required when called: 7
 14310 ;; This function calls:
 14311 ;;		_disk_write
 14312 ;;		_move_window
 14313 ;;		_st_clust
 14314 ;;		_st_dword
 14315 ;;		_st_word
 14316 ;;		_sync_fs
 14317 ;;		_validate
 14318 ;; This function is called by:
 14319 ;;		_f_close
 14320 ;; This function uses a non-reentrant model
 14321 ;;
 14322                           
 14323                           	psect	text34
 14324   00A6A4                     __ptext34:
 14325                           	callstack 0
 14326   00A6A4                     _f_sync:
 14327                           	callstack 22
 14328   00A6A4                     
 14329                           ;mcc_generated_files/fatfs/ff.c: 3932:  FIL* fp;mcc_generated_files/fatfs/ff.c: 3934: {;
      +                          mcc_generated_files/fatfs/ff.c: 3935:  FRESULT res;;mcc_generated_files/fatfs/ff.c: 3936
      +                          :  FATFS *fs;;mcc_generated_files/fatfs/ff.c: 3937:  DWORD tm;;mcc_generated_files/fatfs
      +                          /ff.c: 3938:  BYTE *dir;;mcc_generated_files/fatfs/ff.c: 3941:  res = validate(&fp->obj,
      +                           &fs);
 14330   00A6A4  C078  F005         	movff	f_sync@fp,validate@obj
 14331   00A6A8  C079  F006         	movff	f_sync@fp+1,validate@obj+1
 14332   00A6AC  0E7D               	movlw	low f_sync@fs
 14333   00A6AE  6E07               	movwf	validate@rfs^0,c
 14334   00A6B0  0E00               	movlw	high f_sync@fs
 14335   00A6B2  6E08               	movwf	(validate@rfs+1)^0,c
 14336   00A6B4  EC68  F04C         	call	_validate	;wreg free
 14337   00A6B8  0100               	movlb	0	; () banked
 14338   00A6BA  6F7A               	movwf	f_sync@res& (0+255),b
 14339   00A6BC                     
 14340                           ; BSR set to: 0
 14341                           ;mcc_generated_files/fatfs/ff.c: 3942:  if (res == FR_OK) {
 14342   00A6BC  517A               	movf	f_sync@res& (0+255),w,b
 14343   00A6BE  A4D8               	btfss	status,2,c
 14344   00A6C0  EF64  F053         	goto	u10721
 14345   00A6C4  EF66  F053         	goto	u10720
 14346   00A6C8                     u10721:
 14347   00A6C8  EF4F  F054         	goto	l7959
 14348   00A6CC                     u10720:
 14349   00A6CC                     
 14350                           ; BSR set to: 0
 14351                           ;mcc_generated_files/fatfs/ff.c: 3943:   if (fp->flag & 0x40) {
 14352   00A6CC  EE20 F00E          	lfsr	2,14
 14353   00A6D0  5178               	movf	f_sync@fp& (0+255),w,b
 14354   00A6D2  26D9               	addwf	fsr2l,f,c
 14355   00A6D4  5179               	movf	(f_sync@fp+1)& (0+255),w,b
 14356   00A6D6  22DA               	addwfc	fsr2h,f,c
 14357   00A6D8  ACDF               	btfss	indf2,6,c
 14358   00A6DA  EF71  F053         	goto	u10731
 14359   00A6DE  EF73  F053         	goto	u10730
 14360   00A6E2                     u10731:
 14361   00A6E2  EF4F  F054         	goto	l7959
 14362   00A6E6                     u10730:
 14363   00A6E6                     
 14364                           ; BSR set to: 0
 14365                           ;mcc_generated_files/fatfs/ff.c: 3945:    if (fp->flag & 0x80) {
 14366   00A6E6  EE20 F00E          	lfsr	2,14
 14367   00A6EA  5178               	movf	f_sync@fp& (0+255),w,b
 14368   00A6EC  26D9               	addwf	fsr2l,f,c
 14369   00A6EE  5179               	movf	(f_sync@fp+1)& (0+255),w,b
 14370   00A6F0  22DA               	addwfc	fsr2h,f,c
 14371   00A6F2  AEDF               	btfss	indf2,7,c
 14372   00A6F4  EF7E  F053         	goto	u10741
 14373   00A6F8  EF80  F053         	goto	u10740
 14374   00A6FC                     u10741:
 14375   00A6FC  EFB5  F053         	goto	l7939
 14376   00A700                     u10740:
 14377   00A700                     
 14378                           ; BSR set to: 0
 14379                           ;mcc_generated_files/fatfs/ff.c: 3946:     if (disk_write(fs->pdrv, fp->buf, fp->sect, 1
      +                          ) != RES_OK) return FR_DISK_ERR;
 14380   00A700  0E22               	movlw	34
 14381   00A702  2578               	addwf	f_sync@fp& (0+255),w,b
 14382   00A704  6E4D               	movwf	disk_write@buff^0,c
 14383   00A706  0E00               	movlw	0
 14384   00A708  2179               	addwfc	(f_sync@fp+1)& (0+255),w,b
 14385   00A70A  6E4E               	movwf	(disk_write@buff+1)^0,c
 14386   00A70C  EE20 F018          	lfsr	2,24
 14387   00A710  5178               	movf	f_sync@fp& (0+255),w,b
 14388   00A712  26D9               	addwf	fsr2l,f,c
 14389   00A714  5179               	movf	(f_sync@fp+1)& (0+255),w,b
 14390   00A716  22DA               	addwfc	fsr2h,f,c
 14391   00A718  CFDE F04F          	movff	postinc2,disk_write@sector
 14392   00A71C  CFDE F050          	movff	postinc2,disk_write@sector+1
 14393   00A720  CFDE F051          	movff	postinc2,disk_write@sector+2
 14394   00A724  CFDE F052          	movff	postinc2,disk_write@sector+3
 14395   00A728  0E00               	movlw	0
 14396   00A72A  6E54               	movwf	(disk_write@count+1)^0,c
 14397   00A72C  0E01               	movlw	1
 14398   00A72E  6E53               	movwf	disk_write@count^0,c
 14399   00A730  EE20 F001          	lfsr	2,1
 14400   00A734  517D               	movf	f_sync@fs& (0+255),w,b
 14401   00A736  26D9               	addwf	fsr2l,f,c
 14402   00A738  517E               	movf	(f_sync@fs+1)& (0+255),w,b
 14403   00A73A  22DA               	addwfc	fsr2h,f,c
 14404   00A73C  50DF               	movf	indf2,w,c
 14405   00A73E  EC2C  F048         	call	_disk_write
 14406   00A742  0900               	iorlw	0
 14407   00A744  B4D8               	btfsc	status,2,c
 14408   00A746  EFA7  F053         	goto	u10751
 14409   00A74A  EFA9  F053         	goto	u10750
 14410   00A74E                     u10751:
 14411   00A74E  EFAC  F053         	goto	l7937
 14412   00A752                     u10750:
 14413   00A752  0E01               	movlw	1
 14414   00A754  EF50  F054         	goto	l1093
 14415   00A758                     l7937:
 14416                           
 14417                           ;mcc_generated_files/fatfs/ff.c: 3947:     fp->flag &= (BYTE)~0x80;
 14418   00A758  0100               	movlb	0	; () banked
 14419   00A75A  EE20 F00E          	lfsr	2,14
 14420   00A75E  5178               	movf	f_sync@fp& (0+255),w,b
 14421   00A760  26D9               	addwf	fsr2l,f,c
 14422   00A762  5179               	movf	(f_sync@fp+1)& (0+255),w,b
 14423   00A764  22DA               	addwfc	fsr2h,f,c
 14424   00A766  0E7F               	movlw	127
 14425   00A768  16DF               	andwf	indf2,f,c
 14426   00A76A                     l7939:
 14427   00A76A                     
 14428                           ; BSR set to: 0
 14429                           ;mcc_generated_files/fatfs/ff.c: 3983:    {;mcc_generated_files/fatfs/ff.c: 3984:     re
      +                          s = move_window(fs, fp->dir_sect);
 14430   00A76A  C07D  F070         	movff	f_sync@fs,move_window@fs
 14431   00A76E  C07E  F071         	movff	f_sync@fs+1,move_window@fs+1
 14432   00A772  EE20 F01C          	lfsr	2,28
 14433   00A776  5178               	movf	f_sync@fp& (0+255),w,b
 14434   00A778  26D9               	addwf	fsr2l,f,c
 14435   00A77A  5179               	movf	(f_sync@fp+1)& (0+255),w,b
 14436   00A77C  22DA               	addwfc	fsr2h,f,c
 14437   00A77E  CFDE F072          	movff	postinc2,move_window@sector
 14438   00A782  CFDE F073          	movff	postinc2,move_window@sector+1
 14439   00A786  CFDE F074          	movff	postinc2,move_window@sector+2
 14440   00A78A  CFDE F075          	movff	postinc2,move_window@sector+3
 14441   00A78E  ECBF  F04A         	call	_move_window	;wreg free
 14442   00A792  0100               	movlb	0	; () banked
 14443   00A794  6F7A               	movwf	f_sync@res& (0+255),b
 14444   00A796                     
 14445                           ; BSR set to: 0
 14446                           ;mcc_generated_files/fatfs/ff.c: 3985:     if (res == FR_OK) {
 14447   00A796  517A               	movf	f_sync@res& (0+255),w,b
 14448   00A798  A4D8               	btfss	status,2,c
 14449   00A79A  EFD1  F053         	goto	u10761
 14450   00A79E  EFD3  F053         	goto	u10760
 14451   00A7A2                     u10761:
 14452   00A7A2  EF4F  F054         	goto	l7959
 14453   00A7A6                     u10760:
 14454   00A7A6                     
 14455                           ; BSR set to: 0
 14456                           ;mcc_generated_files/fatfs/ff.c: 3986:      dir = fp->dir_ptr;
 14457   00A7A6  EE20 F020          	lfsr	2,32
 14458   00A7AA  5178               	movf	f_sync@fp& (0+255),w,b
 14459   00A7AC  26D9               	addwf	fsr2l,f,c
 14460   00A7AE  5179               	movf	(f_sync@fp+1)& (0+255),w,b
 14461   00A7B0  22DA               	addwfc	fsr2h,f,c
 14462   00A7B2  CFDE F07B          	movff	postinc2,f_sync@dir
 14463   00A7B6  CFDD F07C          	movff	postdec2,f_sync@dir+1
 14464                           
 14465                           ;mcc_generated_files/fatfs/ff.c: 3987:      dir[11] |= 0x20;
 14466   00A7BA  EE20 F00B          	lfsr	2,11
 14467   00A7BE  517B               	movf	f_sync@dir& (0+255),w,b
 14468   00A7C0  26D9               	addwf	fsr2l,f,c
 14469   00A7C2  517C               	movf	(f_sync@dir+1)& (0+255),w,b
 14470   00A7C4  22DA               	addwfc	fsr2h,f,c
 14471   00A7C6  0E00               	movlw	0
 14472   00A7C8  8ADB               	bsf	plusw2,5,c
 14473   00A7CA                     
 14474                           ; BSR set to: 0
 14475                           ;mcc_generated_files/fatfs/ff.c: 3988:      st_clust(fp->obj.fs, dir, fp->obj.sclust);
 14476   00A7CA  C078  FFD9         	movff	f_sync@fp,fsr2l
 14477   00A7CE  C079  FFDA         	movff	f_sync@fp+1,fsr2h
 14478   00A7D2  CFDE F005          	movff	postinc2,st_clust@fs
 14479   00A7D6  CFDD F006          	movff	postdec2,st_clust@fs+1
 14480   00A7DA  C07B  F007         	movff	f_sync@dir,st_clust@dir
 14481   00A7DE  C07C  F008         	movff	f_sync@dir+1,st_clust@dir+1
 14482   00A7E2  EE20 F006          	lfsr	2,6
 14483   00A7E6  5178               	movf	f_sync@fp& (0+255),w,b
 14484   00A7E8  26D9               	addwf	fsr2l,f,c
 14485   00A7EA  5179               	movf	(f_sync@fp+1)& (0+255),w,b
 14486   00A7EC  22DA               	addwfc	fsr2h,f,c
 14487   00A7EE  CFDE F009          	movff	postinc2,st_clust@cl
 14488   00A7F2  CFDE F00A          	movff	postinc2,st_clust@cl+1
 14489   00A7F6  CFDE F00B          	movff	postinc2,st_clust@cl+2
 14490   00A7FA  CFDE F00C          	movff	postinc2,st_clust@cl+3
 14491   00A7FE  EC1F  F046         	call	_st_clust	;wreg free
 14492   00A802                     
 14493                           ;mcc_generated_files/fatfs/ff.c: 3989:      st_dword(dir + 28, (DWORD)fp->obj.objsize);
 14494   00A802  0E1C               	movlw	28
 14495   00A804  0100               	movlb	0	; () banked
 14496   00A806  257B               	addwf	f_sync@dir& (0+255),w,b
 14497   00A808  6E01               	movwf	st_dword@ptr^0,c
 14498   00A80A  0E00               	movlw	0
 14499   00A80C  217C               	addwfc	(f_sync@dir+1)& (0+255),w,b
 14500   00A80E  6E02               	movwf	(st_dword@ptr+1)^0,c
 14501   00A810  EE20 F00A          	lfsr	2,10
 14502   00A814  5178               	movf	f_sync@fp& (0+255),w,b
 14503   00A816  26D9               	addwf	fsr2l,f,c
 14504   00A818  5179               	movf	(f_sync@fp+1)& (0+255),w,b
 14505   00A81A  22DA               	addwfc	fsr2h,f,c
 14506   00A81C  CFDE F003          	movff	postinc2,st_dword@val
 14507   00A820  CFDE F004          	movff	postinc2,st_dword@val+1
 14508   00A824  CFDE F005          	movff	postinc2,st_dword@val+2
 14509   00A828  CFDE F006          	movff	postinc2,st_dword@val+3
 14510   00A82C  EC84  F047         	call	_st_dword	;wreg free
 14511   00A830                     
 14512                           ;mcc_generated_files/fatfs/ff.c: 3990:      st_dword(dir + 22, tm);
 14513   00A830  0E16               	movlw	22
 14514   00A832  0100               	movlb	0	; () banked
 14515   00A834  257B               	addwf	f_sync@dir& (0+255),w,b
 14516   00A836  6E01               	movwf	st_dword@ptr^0,c
 14517   00A838  0E00               	movlw	0
 14518   00A83A  217C               	addwfc	(f_sync@dir+1)& (0+255),w,b
 14519   00A83C  6E02               	movwf	(st_dword@ptr+1)^0,c
 14520   00A83E  0E00               	movlw	0
 14521   00A840  6E03               	movwf	st_dword@val^0,c
 14522   00A842  0E00               	movlw	0
 14523   00A844  6E04               	movwf	(st_dword@val+1)^0,c
 14524   00A846  0E46               	movlw	70
 14525   00A848  6E05               	movwf	(st_dword@val+2)^0,c
 14526   00A84A  0E56               	movlw	86
 14527   00A84C  6E06               	movwf	(st_dword@val+3)^0,c
 14528   00A84E  EC84  F047         	call	_st_dword	;wreg free
 14529   00A852                     
 14530                           ;mcc_generated_files/fatfs/ff.c: 3991:      st_word(dir + 18, 0);
 14531   00A852  0E12               	movlw	18
 14532   00A854  0100               	movlb	0	; () banked
 14533   00A856  257B               	addwf	f_sync@dir& (0+255),w,b
 14534   00A858  6E01               	movwf	st_word@ptr^0,c
 14535   00A85A  0E00               	movlw	0
 14536   00A85C  217C               	addwfc	(f_sync@dir+1)& (0+255),w,b
 14537   00A85E  6E02               	movwf	(st_word@ptr+1)^0,c
 14538   00A860  0E00               	movlw	0
 14539   00A862  6E04               	movwf	(st_word@val+1)^0,c
 14540   00A864  0E00               	movlw	0
 14541   00A866  6E03               	movwf	st_word@val^0,c
 14542   00A868  EC9E  F045         	call	_st_word	;wreg free
 14543                           
 14544                           ;mcc_generated_files/fatfs/ff.c: 3992:      fs->wflag = 1;
 14545   00A86C  0100               	movlb	0	; () banked
 14546   00A86E  EE20 F003          	lfsr	2,3
 14547   00A872  517D               	movf	f_sync@fs& (0+255),w,b
 14548   00A874  26D9               	addwf	fsr2l,f,c
 14549   00A876  517E               	movf	(f_sync@fs+1)& (0+255),w,b
 14550   00A878  22DA               	addwfc	fsr2h,f,c
 14551   00A87A  0E01               	movlw	1
 14552   00A87C  6EDF               	movwf	indf2,c
 14553   00A87E                     
 14554                           ; BSR set to: 0
 14555                           ;mcc_generated_files/fatfs/ff.c: 3993:      res = sync_fs(fs);
 14556   00A87E  C07D  F05C         	movff	f_sync@fs,sync_fs@fs
 14557   00A882  C07E  F05D         	movff	f_sync@fs+1,sync_fs@fs+1
 14558   00A886  EC53  F052         	call	_sync_fs	;wreg free
 14559   00A88A  0100               	movlb	0	; () banked
 14560   00A88C  6F7A               	movwf	f_sync@res& (0+255),b
 14561   00A88E                     
 14562                           ; BSR set to: 0
 14563                           ;mcc_generated_files/fatfs/ff.c: 3994:      fp->flag &= (BYTE)~0x40;
 14564   00A88E  EE20 F00E          	lfsr	2,14
 14565   00A892  5178               	movf	f_sync@fp& (0+255),w,b
 14566   00A894  26D9               	addwf	fsr2l,f,c
 14567   00A896  5179               	movf	(f_sync@fp+1)& (0+255),w,b
 14568   00A898  22DA               	addwfc	fsr2h,f,c
 14569   00A89A  0EBF               	movlw	191
 14570   00A89C  16DF               	andwf	indf2,f,c
 14571   00A89E                     l7959:
 14572                           
 14573                           ; BSR set to: 0
 14574                           ;mcc_generated_files/fatfs/ff.c: 4000:  return res;
 14575   00A89E  517A               	movf	f_sync@res& (0+255),w,b
 14576   00A8A0                     l1093:
 14577   00A8A0  0012               	return		;funcret
 14578   00A8A2                     __end_of_f_sync:
 14579                           	callstack 0
 14580                           
 14581 ;; *************** function _validate *****************
 14582 ;; Defined at:
 14583 ;;		line 3428 in file "mcc_generated_files/fatfs/ff.c"
 14584 ;; Parameters:    Size  Location     Type
 14585 ;;  obj             2    4[COMRAM] PTR struct .
 14586 ;;		 -> file(546), Fil(546), 
 14587 ;;  rfs             2    6[COMRAM] PTR PTR struct .
 14588 ;;		 -> f_truncate@fs(2), f_readdir@fs(2), f_closedir@fs(2), f_lseek@fs(2), 
 14589 ;;		 -> f_close@fs(2), f_sync@fs(2), f_write@fs(2), f_read@fs(2), 
 14590 ;; Auto vars:     Size  Location     Type
 14591 ;;  res             1   14[COMRAM] enum E68
 14592 ;; Return value:  Size  Location     Type
 14593 ;;                  1    wreg      enum E68
 14594 ;; Registers used:
 14595 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14596 ;; Tracked objects:
 14597 ;;		On entry : 0/0
 14598 ;;		On exit  : 0/0
 14599 ;;		Unchanged: 0/0
 14600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14601 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14602 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14603 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14604 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14605 ;;Total ram usage:       11 bytes
 14606 ;; Hardware stack levels used: 1
 14607 ;; Hardware stack levels required when called: 2
 14608 ;; This function calls:
 14609 ;;		_disk_status
 14610 ;; This function is called by:
 14611 ;;		_f_write
 14612 ;;		_f_sync
 14613 ;;		_f_close
 14614 ;;		_f_read
 14615 ;;		_f_lseek
 14616 ;;		_f_closedir
 14617 ;;		_f_readdir
 14618 ;;		_f_truncate
 14619 ;; This function uses a non-reentrant model
 14620 ;;
 14621                           
 14622                           	psect	text35
 14623   0098D0                     __ptext35:
 14624                           	callstack 0
 14625   0098D0                     _validate:
 14626                           	callstack 27
 14627   0098D0                     
 14628                           ;mcc_generated_files/fatfs/ff.c: 3429:  FFOBJID* obj,;mcc_generated_files/fatfs/ff.c: 34
      +                          30:  FATFS** rfs;mcc_generated_files/fatfs/ff.c: 3432: {;mcc_generated_files/fatfs/ff.c:
      +                           3433:  FRESULT res = FR_INVALID_OBJECT;
 14629   0098D0  0E09               	movlw	9
 14630   0098D2  6E0F               	movwf	validate@res^0,c
 14631   0098D4                     
 14632                           ;mcc_generated_files/fatfs/ff.c: 3436:  if (obj && obj->fs && obj->fs->fs_type && obj->i
      +                          d == obj->fs->id) {
 14633   0098D4  5005               	movf	validate@obj^0,w,c
 14634   0098D6  1006               	iorwf	(validate@obj+1)^0,w,c
 14635   0098D8  B4D8               	btfsc	status,2,c
 14636   0098DA  EF71  F04C         	goto	u9901
 14637   0098DE  EF73  F04C         	goto	u9900
 14638   0098E2                     u9901:
 14639   0098E2  EFC7  F04C         	goto	l967
 14640   0098E6                     u9900:
 14641   0098E6  C005  FFD9         	movff	validate@obj,fsr2l
 14642   0098EA  C006  FFDA         	movff	validate@obj+1,fsr2h
 14643   0098EE  50DE               	movf	postinc2,w,c
 14644   0098F0  10DE               	iorwf	postinc2,w,c
 14645   0098F2  B4D8               	btfsc	status,2,c
 14646   0098F4  EF7E  F04C         	goto	u9911
 14647   0098F8  EF80  F04C         	goto	u9910
 14648   0098FC                     u9911:
 14649   0098FC  EFC7  F04C         	goto	l967
 14650   009900                     u9910:
 14651   009900  C005  FFD9         	movff	validate@obj,fsr2l
 14652   009904  C006  FFDA         	movff	validate@obj+1,fsr2h
 14653   009908  CFDE F009          	movff	postinc2,??_validate
 14654   00990C  CFDD F00A          	movff	postdec2,??_validate+1
 14655   009910  C009  FFD9         	movff	??_validate,fsr2l
 14656   009914  C00A  FFDA         	movff	??_validate+1,fsr2h
 14657   009918  50DF               	movf	indf2,w,c
 14658   00991A  B4D8               	btfsc	status,2,c
 14659   00991C  EF92  F04C         	goto	u9921
 14660   009920  EF94  F04C         	goto	u9920
 14661   009924                     u9921:
 14662   009924  EFC7  F04C         	goto	l967
 14663   009928                     u9920:
 14664   009928  C005  FFD9         	movff	validate@obj,fsr2l
 14665   00992C  C006  FFDA         	movff	validate@obj+1,fsr2h
 14666   009930  EE10 F005          	lfsr	1,5
 14667   009934  50DE               	movf	postinc2,w,c
 14668   009936  26E1               	addwf	fsr1l,f,c
 14669   009938  50DD               	movf	postdec2,w,c
 14670   00993A  22E2               	addwfc	fsr1h,f,c
 14671   00993C  EE20 F002          	lfsr	2,2
 14672   009940  5005               	movf	validate@obj^0,w,c
 14673   009942  26D9               	addwf	fsr2l,f,c
 14674   009944  5006               	movf	(validate@obj+1)^0,w,c
 14675   009946  22DA               	addwfc	fsr2h,f,c
 14676   009948  50E6               	movf	postinc1,w,c
 14677   00994A  18DE               	xorwf	postinc2,w,c
 14678   00994C  E107               	bnz	u9931
 14679   00994E  50E6               	movf	postinc1,w,c
 14680   009950  18DE               	xorwf	postinc2,w,c
 14681   009952  A4D8               	btfss	status,2,c
 14682   009954  EFAE  F04C         	goto	u9931
 14683   009958  EFB0  F04C         	goto	u9930
 14684   00995C                     u9931:
 14685   00995C  EFC7  F04C         	goto	l967
 14686   009960                     u9930:
 14687   009960                     
 14688                           ;mcc_generated_files/fatfs/ff.c: 3448:   if (!(disk_status(obj->fs->pdrv) & 0x01)) {
 14689   009960  C005  FFD9         	movff	validate@obj,fsr2l
 14690   009964  C006  FFDA         	movff	validate@obj+1,fsr2h
 14691   009968  EE10 F001          	lfsr	1,1
 14692   00996C  50DE               	movf	postinc2,w,c
 14693   00996E  26E1               	addwf	fsr1l,f,c
 14694   009970  50DD               	movf	postdec2,w,c
 14695   009972  22E2               	addwfc	fsr1h,f,c
 14696   009974  50E7               	movf	indf1,w,c
 14697   009976  EC66  F048         	call	_disk_status
 14698   00997A  6E09               	movwf	??_validate^0,c
 14699   00997C  B009               	btfsc	??_validate^0,0,c
 14700   00997E  EFC3  F04C         	goto	u9941
 14701   009982  EFC5  F04C         	goto	u9940
 14702   009986                     u9941:
 14703   009986  EFC7  F04C         	goto	l967
 14704   00998A                     u9940:
 14705   00998A                     
 14706                           ;mcc_generated_files/fatfs/ff.c: 3449:    res = FR_OK;
 14707   00998A  0E00               	movlw	0
 14708   00998C  6E0F               	movwf	validate@res^0,c
 14709   00998E                     l967:
 14710                           
 14711                           ;mcc_generated_files/fatfs/ff.c: 3453:  *rfs = (res == FR_OK) ? obj->fs : 0;
 14712   00998E  500F               	movf	validate@res^0,w,c
 14713   009990  B4D8               	btfsc	status,2,c
 14714   009992  EFCD  F04C         	goto	u9951
 14715   009996  EFCF  F04C         	goto	u9950
 14716   00999A                     u9951:
 14717   00999A  EFD5  F04C         	goto	l7449
 14718   00999E                     u9950:
 14719   00999E  0E00               	movlw	0
 14720   0099A0  6E0D               	movwf	_validate$2409^0,c
 14721   0099A2  0E00               	movlw	0
 14722   0099A4  6E0E               	movwf	(_validate$2409+1)^0,c
 14723   0099A6  EFDD  F04C         	goto	l972
 14724   0099AA                     l7449:
 14725   0099AA  C005  FFD9         	movff	validate@obj,fsr2l
 14726   0099AE  C006  FFDA         	movff	validate@obj+1,fsr2h
 14727   0099B2  CFDE F00D          	movff	postinc2,_validate$2409
 14728   0099B6  CFDD F00E          	movff	postdec2,_validate$2409+1
 14729   0099BA                     l972:
 14730   0099BA  C007  FFD9         	movff	validate@rfs,fsr2l
 14731   0099BE  C008  FFDA         	movff	validate@rfs+1,fsr2h
 14732   0099C2  C00D  FFDE         	movff	_validate$2409,postinc2
 14733   0099C6  C00E  FFDD         	movff	_validate$2409+1,postdec2
 14734   0099CA                     
 14735                           ;mcc_generated_files/fatfs/ff.c: 3454:  return res;
 14736   0099CA  500F               	movf	validate@res^0,w,c
 14737   0099CC  0012               	return		;funcret
 14738   0099CE                     __end_of_validate:
 14739                           	callstack 0
 14740                           
 14741 ;; *************** function _disk_status *****************
 14742 ;; Defined at:
 14743 ;;		line 23 in file "mcc_generated_files/fatfs/diskio.c"
 14744 ;; Parameters:    Size  Location     Type
 14745 ;;  pdrv            1    wreg     unsigned char 
 14746 ;; Auto vars:     Size  Location     Type
 14747 ;;  pdrv            1    2[COMRAM] unsigned char 
 14748 ;;  stat            1    3[COMRAM] unsigned char 
 14749 ;; Return value:  Size  Location     Type
 14750 ;;                  1    wreg      unsigned char 
 14751 ;; Registers used:
 14752 ;;		wreg, status,2, status,0, cstack
 14753 ;; Tracked objects:
 14754 ;;		On entry : 0/0
 14755 ;;		On exit  : 0/0
 14756 ;;		Unchanged: 0/0
 14757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14759 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14760 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14761 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14762 ;;Total ram usage:        4 bytes
 14763 ;; Hardware stack levels used: 1
 14764 ;; Hardware stack levels required when called: 1
 14765 ;; This function calls:
 14766 ;;		_SD_SPI_IsMediaInitialized
 14767 ;;		_SD_SPI_IsMediaPresent
 14768 ;;		_SD_SPI_IsWriteProtected
 14769 ;; This function is called by:
 14770 ;;		_find_volume
 14771 ;;		_validate
 14772 ;; This function uses a non-reentrant model
 14773 ;;
 14774                           
 14775                           	psect	text36
 14776   0090CC                     __ptext36:
 14777                           	callstack 0
 14778   0090CC                     _disk_status:
 14779                           	callstack 27
 14780                           
 14781                           ;incstack = 0
 14782                           ;disk_status@pdrv stored from wreg
 14783   0090CC  6E03               	movwf	disk_status@pdrv^0,c
 14784   0090CE                     
 14785                           ;mcc_generated_files/fatfs/diskio.c: 24:     BYTE pdrv;mcc_generated_files/fatfs/diskio.
      +                          c: 26: {;mcc_generated_files/fatfs/diskio.c: 27:     DSTATUS stat = 0x01;
 14786   0090CE  0E01               	movlw	1
 14787   0090D0  6E04               	movwf	disk_status@stat^0,c
 14788                           
 14789                           ;mcc_generated_files/fatfs/diskio.c: 29:     switch (pdrv) {
 14790   0090D2  EF91  F048         	goto	l6833
 14791   0090D6                     l6819:
 14792                           
 14793                           ;mcc_generated_files/fatfs/diskio.c: 32:             if ( SD_SPI_IsMediaPresent() == 0)
 14794   0090D6  EC4D  F045         	call	_SD_SPI_IsMediaPresent	;wreg free
 14795   0090DA  0900               	iorlw	0
 14796   0090DC  A4D8               	btfss	status,2,c
 14797   0090DE  EF73  F048         	goto	u8881
 14798   0090E2  EF75  F048         	goto	u8880
 14799   0090E6                     u8881:
 14800   0090E6  EF79  F048         	goto	l6823
 14801   0090EA                     u8880:
 14802   0090EA                     
 14803                           ;mcc_generated_files/fatfs/diskio.c: 33:             {;mcc_generated_files/fatfs/diskio.
      +                          c: 34:                stat = 0x02;
 14804   0090EA  0E02               	movlw	2
 14805   0090EC  6E04               	movwf	disk_status@stat^0,c
 14806                           
 14807                           ;mcc_generated_files/fatfs/diskio.c: 35:             }
 14808   0090EE  EF84  F048         	goto	l6827
 14809   0090F2                     l6823:
 14810   0090F2  EC85  F045         	call	_SD_SPI_IsMediaInitialized	;wreg free
 14811   0090F6  06E8               	decf	wreg,f,c
 14812   0090F8  A4D8               	btfss	status,2,c
 14813   0090FA  EF81  F048         	goto	u8891
 14814   0090FE  EF83  F048         	goto	u8890
 14815   009102                     u8891:
 14816   009102  EF84  F048         	goto	l6827
 14817   009106                     u8890:
 14818   009106                     
 14819                           ;mcc_generated_files/fatfs/diskio.c: 37:             {;mcc_generated_files/fatfs/diskio.
      +                          c: 38:                 stat &= ~0x01;
 14820   009106  9004               	bcf	disk_status@stat^0,0,c
 14821   009108                     l6827:
 14822                           
 14823                           ;mcc_generated_files/fatfs/diskio.c: 41:             if ( SD_SPI_IsWriteProtected() == 1
      +                          )
 14824   009108  EC4F  F045         	call	_SD_SPI_IsWriteProtected	;wreg free
 14825   00910C  06E8               	decf	wreg,f,c
 14826   00910E  A4D8               	btfss	status,2,c
 14827   009110  EF8C  F048         	goto	u8901
 14828   009114  EF8E  F048         	goto	u8900
 14829   009118                     u8901:
 14830   009118  EFA2  F048         	goto	l6835
 14831   00911C                     u8900:
 14832   00911C                     
 14833                           ;mcc_generated_files/fatfs/diskio.c: 42:             {;mcc_generated_files/fatfs/diskio.
      +                          c: 43:                 stat |= 0x04;
 14834   00911C  8404               	bsf	disk_status@stat^0,2,c
 14835   00911E  EFA2  F048         	goto	l6835
 14836   009122                     l6833:
 14837   009122  5003               	movf	disk_status@pdrv^0,w,c
 14838   009124  6E01               	movwf	??_disk_status^0,c
 14839   009126  6A02               	clrf	(??_disk_status+1)^0,c
 14840                           
 14841                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14842                           ; Switch size 1, requested type "simple"
 14843                           ; Number of cases is 1, Range of values is 0 to 0
 14844                           ; switch strategies available:
 14845                           ; Name         Instructions Cycles
 14846                           ; simple_byte            4     3 (average)
 14847                           ;	Chosen strategy is simple_byte
 14848   009128  5002               	movf	(??_disk_status+1)^0,w,c
 14849   00912A  0A00               	xorlw	0	; case 0
 14850   00912C  B4D8               	btfsc	status,2,c
 14851   00912E  EF9B  F048         	goto	l9291
 14852   009132  EFA2  F048         	goto	l6835
 14853   009136                     l9291:
 14854                           
 14855                           ; Switch size 1, requested type "simple"
 14856                           ; Number of cases is 1, Range of values is 0 to 0
 14857                           ; switch strategies available:
 14858                           ; Name         Instructions Cycles
 14859                           ; simple_byte            4     3 (average)
 14860                           ;	Chosen strategy is simple_byte
 14861   009136  5001               	movf	??_disk_status^0,w,c
 14862   009138  0A00               	xorlw	0	; case 0
 14863   00913A  B4D8               	btfsc	status,2,c
 14864   00913C  EF6B  F048         	goto	l6819
 14865   009140  EFA2  F048         	goto	l6835
 14866   009144                     l6835:
 14867                           
 14868                           ;mcc_generated_files/fatfs/diskio.c: 51:     return stat;
 14869   009144  5004               	movf	disk_status@stat^0,w,c
 14870   009146  0012               	return		;funcret
 14871   009148                     __end_of_disk_status:
 14872                           	callstack 0
 14873                           
 14874 ;; *************** function _SD_SPI_IsWriteProtected *****************
 14875 ;; Defined at:
 14876 ;;		line 475 in file "mcc_generated_files/sd_spi/sd_spi.c"
 14877 ;; Parameters:    Size  Location     Type
 14878 ;;		None
 14879 ;; Auto vars:     Size  Location     Type
 14880 ;;		None
 14881 ;; Return value:  Size  Location     Type
 14882 ;;                  1    wreg      _Bool 
 14883 ;; Registers used:
 14884 ;;		wreg
 14885 ;; Tracked objects:
 14886 ;;		On entry : 0/0
 14887 ;;		On exit  : 0/0
 14888 ;;		Unchanged: 0/0
 14889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14894 ;;Total ram usage:        0 bytes
 14895 ;; Hardware stack levels used: 1
 14896 ;; This function calls:
 14897 ;;		Nothing
 14898 ;; This function is called by:
 14899 ;;		_disk_status
 14900 ;; This function uses a non-reentrant model
 14901 ;;
 14902                           
 14903                           	psect	text37
 14904   008A9E                     __ptext37:
 14905                           	callstack 0
 14906   008A9E                     _SD_SPI_IsWriteProtected:
 14907                           	callstack 27
 14908   008A9E                     
 14909                           ;mcc_generated_files/sd_spi/sd_spi.c: 477:     return 0 ? 1 : 0;
 14910   008A9E  0E00               	movlw	0
 14911   008AA0  0012               	return		;funcret
 14912   008AA2                     __end_of_SD_SPI_IsWriteProtected:
 14913                           	callstack 0
 14914                           
 14915 ;; *************** function _SD_SPI_IsMediaPresent *****************
 14916 ;; Defined at:
 14917 ;;		line 367 in file "mcc_generated_files/sd_spi/sd_spi.c"
 14918 ;; Parameters:    Size  Location     Type
 14919 ;;		None
 14920 ;; Auto vars:     Size  Location     Type
 14921 ;;		None
 14922 ;; Return value:  Size  Location     Type
 14923 ;;                  1    wreg      _Bool 
 14924 ;; Registers used:
 14925 ;;		wreg
 14926 ;; Tracked objects:
 14927 ;;		On entry : 0/0
 14928 ;;		On exit  : 0/0
 14929 ;;		Unchanged: 0/0
 14930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14935 ;;Total ram usage:        0 bytes
 14936 ;; Hardware stack levels used: 1
 14937 ;; This function calls:
 14938 ;;		Nothing
 14939 ;; This function is called by:
 14940 ;;		_disk_status
 14941 ;;		_FatFsDemo_Tasks
 14942 ;; This function uses a non-reentrant model
 14943 ;;
 14944                           
 14945                           	psect	text38
 14946   008A9A                     __ptext38:
 14947                           	callstack 0
 14948   008A9A                     _SD_SPI_IsMediaPresent:
 14949                           	callstack 27
 14950   008A9A                     
 14951                           ;mcc_generated_files/sd_spi/sd_spi.c: 369:     return 1 ? 1: 0;
 14952   008A9A  0E01               	movlw	1
 14953   008A9C  0012               	return		;funcret
 14954   008A9E                     __end_of_SD_SPI_IsMediaPresent:
 14955                           	callstack 0
 14956                           
 14957 ;; *************** function _SD_SPI_IsMediaInitialized *****************
 14958 ;; Defined at:
 14959 ;;		line 470 in file "mcc_generated_files/sd_spi/sd_spi.c"
 14960 ;; Parameters:    Size  Location     Type
 14961 ;;		None
 14962 ;; Auto vars:     Size  Location     Type
 14963 ;;		None
 14964 ;; Return value:  Size  Location     Type
 14965 ;;                  1    wreg      _Bool 
 14966 ;; Registers used:
 14967 ;;		wreg, status,2
 14968 ;; Tracked objects:
 14969 ;;		On entry : 0/0
 14970 ;;		On exit  : 0/0
 14971 ;;		Unchanged: 0/0
 14972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14977 ;;Total ram usage:        0 bytes
 14978 ;; Hardware stack levels used: 1
 14979 ;; This function calls:
 14980 ;;		Nothing
 14981 ;; This function is called by:
 14982 ;;		_disk_status
 14983 ;; This function uses a non-reentrant model
 14984 ;;
 14985                           
 14986                           	psect	text39
 14987   008B0A                     __ptext39:
 14988                           	callstack 0
 14989   008B0A                     _SD_SPI_IsMediaInitialized:
 14990                           	callstack 27
 14991   008B0A                     
 14992                           ;mcc_generated_files/sd_spi/sd_spi.c: 472:     return (mediaInformation.state != SD_STAT
      +                          E_NOT_INITIALIZED);
 14993   008B0A  0101               	movlb	1	; () banked
 14994   008B0C  5153               	movf	(_mediaInformation+3)& (0+255),w,b
 14995   008B0E  A4D8               	btfss	status,2,c
 14996   008B10  EF8C  F045         	goto	u8081
 14997   008B14  EF8F  F045         	goto	u8080
 14998   008B18                     u8081:
 14999   008B18  0E01               	movlw	1
 15000   008B1A  EF90  F045         	goto	u8090
 15001   008B1E                     u8080:
 15002   008B1E  0E00               	movlw	0
 15003   008B20                     u8090:
 15004   008B20                     
 15005                           ; BSR set to: 1
 15006   008B20  0012               	return		;funcret
 15007   008B22                     __end_of_SD_SPI_IsMediaInitialized:
 15008                           	callstack 0
 15009                           
 15010 ;; *************** function _sync_fs *****************
 15011 ;; Defined at:
 15012 ;;		line 1087 in file "mcc_generated_files/fatfs/ff.c"
 15013 ;; Parameters:    Size  Location     Type
 15014 ;;  fs              2   91[COMRAM] PTR struct .
 15015 ;;		 -> drive(563), NULL(0), FatFs(563), 
 15016 ;; Auto vars:     Size  Location     Type
 15017 ;;  res             1   93[COMRAM] enum E68
 15018 ;; Return value:  Size  Location     Type
 15019 ;;                  1    wreg      enum E68
 15020 ;; Registers used:
 15021 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 15022 ;; Tracked objects:
 15023 ;;		On entry : 0/0
 15024 ;;		On exit  : 0/0
 15025 ;;		Unchanged: 0/0
 15026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15027 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15028 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15029 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15030 ;;      Totals:         3       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15031 ;;Total ram usage:       11 bytes
 15032 ;; Hardware stack levels used: 1
 15033 ;; Hardware stack levels required when called: 6
 15034 ;; This function calls:
 15035 ;;		_disk_ioctl
 15036 ;;		_disk_write
 15037 ;;		_mem_set
 15038 ;;		_st_dword
 15039 ;;		_st_word
 15040 ;;		_sync_window
 15041 ;; This function is called by:
 15042 ;;		_f_sync
 15043 ;;		_f_unlink
 15044 ;;		_f_mkdir
 15045 ;;		_f_rename
 15046 ;; This function uses a non-reentrant model
 15047 ;;
 15048                           
 15049                           	psect	text40
 15050   00A4A6                     __ptext40:
 15051                           	callstack 0
 15052   00A4A6                     _sync_fs:
 15053                           	callstack 22
 15054   00A4A6                     
 15055                           ;mcc_generated_files/fatfs/ff.c: 1088:  FATFS* fs;mcc_generated_files/fatfs/ff.c: 1090: 
      +                          {;mcc_generated_files/fatfs/ff.c: 1091:  FRESULT res;;mcc_generated_files/fatfs/ff.c: 10
      +                          94:  res = sync_window(fs);
 15056   00A4A6  C05C  F059         	movff	sync_fs@fs,sync_window@fs
 15057   00A4AA  C05D  F05A         	movff	sync_fs@fs+1,sync_window@fs+1
 15058   00A4AE  EC84  F051         	call	_sync_window	;wreg free
 15059   00A4B2  6E5E               	movwf	sync_fs@res^0,c
 15060   00A4B4                     
 15061                           ;mcc_generated_files/fatfs/ff.c: 1095:  if (res == FR_OK) {
 15062   00A4B4  505E               	movf	sync_fs@res^0,w,c
 15063   00A4B6  A4D8               	btfss	status,2,c
 15064   00A4B8  EF60  F052         	goto	u9301
 15065   00A4BC  EF62  F052         	goto	u9300
 15066   00A4C0                     u9301:
 15067   00A4C0  EF50  F053         	goto	l587
 15068   00A4C4                     u9300:
 15069   00A4C4                     
 15070                           ;mcc_generated_files/fatfs/ff.c: 1096:   if (fs->fs_type == 3 && fs->fsi_flag == 1) {
 15071   00A4C4  C05C  FFD9         	movff	sync_fs@fs,fsr2l
 15072   00A4C8  C05D  FFDA         	movff	sync_fs@fs+1,fsr2h
 15073   00A4CC  0E03               	movlw	3
 15074   00A4CE  18DE               	xorwf	postinc2,w,c
 15075   00A4D0  A4D8               	btfss	status,2,c
 15076   00A4D2  EF6D  F052         	goto	u9311
 15077   00A4D6  EF6F  F052         	goto	u9310
 15078   00A4DA                     u9311:
 15079   00A4DA  EF37  F053         	goto	l7117
 15080   00A4DE                     u9310:
 15081   00A4DE  EE20 F004          	lfsr	2,4
 15082   00A4E2  505C               	movf	sync_fs@fs^0,w,c
 15083   00A4E4  26D9               	addwf	fsr2l,f,c
 15084   00A4E6  505D               	movf	(sync_fs@fs+1)^0,w,c
 15085   00A4E8  22DA               	addwfc	fsr2h,f,c
 15086   00A4EA  04DE               	decf	postinc2,w,c
 15087   00A4EC  A4D8               	btfss	status,2,c
 15088   00A4EE  EF7B  F052         	goto	u9321
 15089   00A4F2  EF7D  F052         	goto	u9320
 15090   00A4F6                     u9321:
 15091   00A4F6  EF37  F053         	goto	l7117
 15092   00A4FA                     u9320:
 15093   00A4FA                     
 15094                           ;mcc_generated_files/fatfs/ff.c: 1098:    mem_set(fs->win, 0, ((UINT)512));
 15095   00A4FA  0E33               	movlw	51
 15096   00A4FC  245C               	addwf	sync_fs@fs^0,w,c
 15097   00A4FE  6E01               	movwf	mem_set@dst^0,c
 15098   00A500  0E00               	movlw	0
 15099   00A502  205D               	addwfc	(sync_fs@fs+1)^0,w,c
 15100   00A504  6E02               	movwf	(mem_set@dst+1)^0,c
 15101   00A506  0E00               	movlw	0
 15102   00A508  6E04               	movwf	(mem_set@val+1)^0,c
 15103   00A50A  0E00               	movlw	0
 15104   00A50C  6E03               	movwf	mem_set@val^0,c
 15105   00A50E  0E02               	movlw	2
 15106   00A510  6E06               	movwf	(mem_set@cnt+1)^0,c
 15107   00A512  0E00               	movlw	0
 15108   00A514  6E05               	movwf	mem_set@cnt^0,c
 15109   00A516  ECCB  F045         	call	_mem_set	;wreg free
 15110                           
 15111                           ;mcc_generated_files/fatfs/ff.c: 1099:    st_word(fs->win + 510, 0xAA55);
 15112   00A51A  0E31               	movlw	49
 15113   00A51C  245C               	addwf	sync_fs@fs^0,w,c
 15114   00A51E  6E01               	movwf	st_word@ptr^0,c
 15115   00A520  0E02               	movlw	2
 15116   00A522  205D               	addwfc	(sync_fs@fs+1)^0,w,c
 15117   00A524  6E02               	movwf	(st_word@ptr+1)^0,c
 15118   00A526  0EAA               	movlw	170
 15119   00A528  6E04               	movwf	(st_word@val+1)^0,c
 15120   00A52A  0E55               	movlw	85
 15121   00A52C  6E03               	movwf	st_word@val^0,c
 15122   00A52E  EC9E  F045         	call	_st_word	;wreg free
 15123                           
 15124                           ;mcc_generated_files/fatfs/ff.c: 1100:    st_dword(fs->win + 0, 0x41615252);
 15125   00A532  0E33               	movlw	51
 15126   00A534  245C               	addwf	sync_fs@fs^0,w,c
 15127   00A536  6E01               	movwf	st_dword@ptr^0,c
 15128   00A538  0E00               	movlw	0
 15129   00A53A  205D               	addwfc	(sync_fs@fs+1)^0,w,c
 15130   00A53C  6E02               	movwf	(st_dword@ptr+1)^0,c
 15131   00A53E  0E52               	movlw	82
 15132   00A540  6E03               	movwf	st_dword@val^0,c
 15133   00A542  0E52               	movlw	82
 15134   00A544  6E04               	movwf	(st_dword@val+1)^0,c
 15135   00A546  0E61               	movlw	97
 15136   00A548  6E05               	movwf	(st_dword@val+2)^0,c
 15137   00A54A  0E41               	movlw	65
 15138   00A54C  6E06               	movwf	(st_dword@val+3)^0,c
 15139   00A54E  EC84  F047         	call	_st_dword	;wreg free
 15140                           
 15141                           ;mcc_generated_files/fatfs/ff.c: 1101:    st_dword(fs->win + 484, 0x61417272);
 15142   00A552  0E17               	movlw	23
 15143   00A554  245C               	addwf	sync_fs@fs^0,w,c
 15144   00A556  6E01               	movwf	st_dword@ptr^0,c
 15145   00A558  0E02               	movlw	2
 15146   00A55A  205D               	addwfc	(sync_fs@fs+1)^0,w,c
 15147   00A55C  6E02               	movwf	(st_dword@ptr+1)^0,c
 15148   00A55E  0E72               	movlw	114
 15149   00A560  6E03               	movwf	st_dword@val^0,c
 15150   00A562  0E72               	movlw	114
 15151   00A564  6E04               	movwf	(st_dword@val+1)^0,c
 15152   00A566  0E41               	movlw	65
 15153   00A568  6E05               	movwf	(st_dword@val+2)^0,c
 15154   00A56A  0E61               	movlw	97
 15155   00A56C  6E06               	movwf	(st_dword@val+3)^0,c
 15156   00A56E  EC84  F047         	call	_st_dword	;wreg free
 15157                           
 15158                           ;mcc_generated_files/fatfs/ff.c: 1102:    st_dword(fs->win + 488, fs->free_clst);
 15159   00A572  0E1B               	movlw	27
 15160   00A574  245C               	addwf	sync_fs@fs^0,w,c
 15161   00A576  6E01               	movwf	st_dword@ptr^0,c
 15162   00A578  0E02               	movlw	2
 15163   00A57A  205D               	addwfc	(sync_fs@fs+1)^0,w,c
 15164   00A57C  6E02               	movwf	(st_dword@ptr+1)^0,c
 15165   00A57E  EE20 F00F          	lfsr	2,15
 15166   00A582  505C               	movf	sync_fs@fs^0,w,c
 15167   00A584  26D9               	addwf	fsr2l,f,c
 15168   00A586  505D               	movf	(sync_fs@fs+1)^0,w,c
 15169   00A588  22DA               	addwfc	fsr2h,f,c
 15170   00A58A  CFDE F003          	movff	postinc2,st_dword@val
 15171   00A58E  CFDE F004          	movff	postinc2,st_dword@val+1
 15172   00A592  CFDE F005          	movff	postinc2,st_dword@val+2
 15173   00A596  CFDE F006          	movff	postinc2,st_dword@val+3
 15174   00A59A  EC84  F047         	call	_st_dword	;wreg free
 15175                           
 15176                           ;mcc_generated_files/fatfs/ff.c: 1103:    st_dword(fs->win + 492, fs->last_clst);
 15177   00A59E  0E1F               	movlw	31
 15178   00A5A0  245C               	addwf	sync_fs@fs^0,w,c
 15179   00A5A2  6E01               	movwf	st_dword@ptr^0,c
 15180   00A5A4  0E02               	movlw	2
 15181   00A5A6  205D               	addwfc	(sync_fs@fs+1)^0,w,c
 15182   00A5A8  6E02               	movwf	(st_dword@ptr+1)^0,c
 15183   00A5AA  EE20 F00B          	lfsr	2,11
 15184   00A5AE  505C               	movf	sync_fs@fs^0,w,c
 15185   00A5B0  26D9               	addwf	fsr2l,f,c
 15186   00A5B2  505D               	movf	(sync_fs@fs+1)^0,w,c
 15187   00A5B4  22DA               	addwfc	fsr2h,f,c
 15188   00A5B6  CFDE F003          	movff	postinc2,st_dword@val
 15189   00A5BA  CFDE F004          	movff	postinc2,st_dword@val+1
 15190   00A5BE  CFDE F005          	movff	postinc2,st_dword@val+2
 15191   00A5C2  CFDE F006          	movff	postinc2,st_dword@val+3
 15192   00A5C6  EC84  F047         	call	_st_dword	;wreg free
 15193   00A5CA                     
 15194                           ;mcc_generated_files/fatfs/ff.c: 1105:    fs->winsect = fs->volbase + 1;
 15195   00A5CA  EE20 F01F          	lfsr	2,31
 15196   00A5CE  505C               	movf	sync_fs@fs^0,w,c
 15197   00A5D0  26D9               	addwf	fsr2l,f,c
 15198   00A5D2  505D               	movf	(sync_fs@fs+1)^0,w,c
 15199   00A5D4  22DA               	addwfc	fsr2h,f,c
 15200   00A5D6  CFDE F070          	movff	postinc2,??_sync_fs
 15201   00A5DA  CFDE F071          	movff	postinc2,??_sync_fs+1
 15202   00A5DE  CFDE F072          	movff	postinc2,??_sync_fs+2
 15203   00A5E2  CFDE F073          	movff	postinc2,??_sync_fs+3
 15204   00A5E6  0E01               	movlw	1
 15205   00A5E8  0100               	movlb	0	; () banked
 15206   00A5EA  2570               	addwf	??_sync_fs& (0+255),w,b
 15207   00A5EC  6F74               	movwf	(??_sync_fs+4)& (0+255),b
 15208   00A5EE  0E00               	movlw	0
 15209   00A5F0  2171               	addwfc	(??_sync_fs+1)& (0+255),w,b
 15210   00A5F2  6F75               	movwf	(??_sync_fs+5)& (0+255),b
 15211   00A5F4  0E00               	movlw	0
 15212   00A5F6  2172               	addwfc	(??_sync_fs+2)& (0+255),w,b
 15213   00A5F8  6F76               	movwf	(??_sync_fs+6)& (0+255),b
 15214   00A5FA  0E00               	movlw	0
 15215   00A5FC  2173               	addwfc	(??_sync_fs+3)& (0+255),w,b
 15216   00A5FE  6F77               	movwf	(??_sync_fs+7)& (0+255),b
 15217   00A600  EE20 F02F          	lfsr	2,47
 15218   00A604  505C               	movf	sync_fs@fs^0,w,c
 15219   00A606  26D9               	addwf	fsr2l,f,c
 15220   00A608  505D               	movf	(sync_fs@fs+1)^0,w,c
 15221   00A60A  22DA               	addwfc	fsr2h,f,c
 15222   00A60C  C074  FFDE         	movff	??_sync_fs+4,postinc2
 15223   00A610  C075  FFDE         	movff	??_sync_fs+5,postinc2
 15224   00A614  C076  FFDE         	movff	??_sync_fs+6,postinc2
 15225   00A618  C077  FFDE         	movff	??_sync_fs+7,postinc2
 15226   00A61C                     
 15227                           ; BSR set to: 0
 15228                           ;mcc_generated_files/fatfs/ff.c: 1106:    disk_write(fs->pdrv, fs->win, fs->winsect, 1);
 15229   00A61C  0E33               	movlw	51
 15230   00A61E  245C               	addwf	sync_fs@fs^0,w,c
 15231   00A620  6E4D               	movwf	disk_write@buff^0,c
 15232   00A622  0E00               	movlw	0
 15233   00A624  205D               	addwfc	(sync_fs@fs+1)^0,w,c
 15234   00A626  6E4E               	movwf	(disk_write@buff+1)^0,c
 15235   00A628  EE20 F02F          	lfsr	2,47
 15236   00A62C  505C               	movf	sync_fs@fs^0,w,c
 15237   00A62E  26D9               	addwf	fsr2l,f,c
 15238   00A630  505D               	movf	(sync_fs@fs+1)^0,w,c
 15239   00A632  22DA               	addwfc	fsr2h,f,c
 15240   00A634  CFDE F04F          	movff	postinc2,disk_write@sector
 15241   00A638  CFDE F050          	movff	postinc2,disk_write@sector+1
 15242   00A63C  CFDE F051          	movff	postinc2,disk_write@sector+2
 15243   00A640  CFDE F052          	movff	postinc2,disk_write@sector+3
 15244   00A644  0E00               	movlw	0
 15245   00A646  6E54               	movwf	(disk_write@count+1)^0,c
 15246   00A648  0E01               	movlw	1
 15247   00A64A  6E53               	movwf	disk_write@count^0,c
 15248   00A64C  EE20 F001          	lfsr	2,1
 15249   00A650  505C               	movf	sync_fs@fs^0,w,c
 15250   00A652  26D9               	addwf	fsr2l,f,c
 15251   00A654  505D               	movf	(sync_fs@fs+1)^0,w,c
 15252   00A656  22DA               	addwfc	fsr2h,f,c
 15253   00A658  50DF               	movf	indf2,w,c
 15254   00A65A  EC2C  F048         	call	_disk_write
 15255   00A65E                     
 15256                           ;mcc_generated_files/fatfs/ff.c: 1107:    fs->fsi_flag = 0;
 15257   00A65E  EE20 F004          	lfsr	2,4
 15258   00A662  505C               	movf	sync_fs@fs^0,w,c
 15259   00A664  26D9               	addwf	fsr2l,f,c
 15260   00A666  505D               	movf	(sync_fs@fs+1)^0,w,c
 15261   00A668  22DA               	addwfc	fsr2h,f,c
 15262   00A66A  0E00               	movlw	0
 15263   00A66C  6EDF               	movwf	indf2,c
 15264   00A66E                     l7117:
 15265                           
 15266                           ;mcc_generated_files/fatfs/ff.c: 1110:   if (disk_ioctl(fs->pdrv, 0, 0) != RES_OK) res =
      +                           FR_DISK_ERR;
 15267   00A66E  0E00               	movlw	0
 15268   00A670  6E01               	movwf	disk_ioctl@cmd^0,c
 15269   00A672  0E00               	movlw	0
 15270   00A674  6E02               	movwf	disk_ioctl@buff^0,c
 15271   00A676  0E00               	movlw	0
 15272   00A678  6E03               	movwf	(disk_ioctl@buff+1)^0,c
 15273   00A67A  EE20 F001          	lfsr	2,1
 15274   00A67E  505C               	movf	sync_fs@fs^0,w,c
 15275   00A680  26D9               	addwf	fsr2l,f,c
 15276   00A682  505D               	movf	(sync_fs@fs+1)^0,w,c
 15277   00A684  22DA               	addwfc	fsr2h,f,c
 15278   00A686  50DF               	movf	indf2,w,c
 15279   00A688  ECB2  F045         	call	_disk_ioctl
 15280   00A68C  0900               	iorlw	0
 15281   00A68E  B4D8               	btfsc	status,2,c
 15282   00A690  EF4C  F053         	goto	u9331
 15283   00A694  EF4E  F053         	goto	u9330
 15284   00A698                     u9331:
 15285   00A698  EF50  F053         	goto	l587
 15286   00A69C                     u9330:
 15287   00A69C  0E01               	movlw	1
 15288   00A69E  6E5E               	movwf	sync_fs@res^0,c
 15289   00A6A0                     l587:
 15290                           
 15291                           ;mcc_generated_files/fatfs/ff.c: 1113:  return res;
 15292   00A6A0  505E               	movf	sync_fs@res^0,w,c
 15293   00A6A2  0012               	return		;funcret
 15294   00A6A4                     __end_of_sync_fs:
 15295                           	callstack 0
 15296                           
 15297 ;; *************** function _st_dword *****************
 15298 ;; Defined at:
 15299 ;;		line 616 in file "mcc_generated_files/fatfs/ff.c"
 15300 ;; Parameters:    Size  Location     Type
 15301 ;;  ptr             2    0[COMRAM] PTR unsigned char 
 15302 ;;		 -> FatFs.win(512), drive.win(512), drive(563), NULL(0), 
 15303 ;;		 -> FatFs(563), 
 15304 ;;  val             4    2[COMRAM] unsigned long 
 15305 ;; Auto vars:     Size  Location     Type
 15306 ;;		None
 15307 ;; Return value:  Size  Location     Type
 15308 ;;                  1    wreg      void 
 15309 ;; Registers used:
 15310 ;;		fsr2l, fsr2h, status,2, status,0
 15311 ;; Tracked objects:
 15312 ;;		On entry : 0/0
 15313 ;;		On exit  : 0/0
 15314 ;;		Unchanged: 0/0
 15315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15316 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15319 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15320 ;;Total ram usage:        6 bytes
 15321 ;; Hardware stack levels used: 1
 15322 ;; This function calls:
 15323 ;;		Nothing
 15324 ;; This function is called by:
 15325 ;;		_sync_fs
 15326 ;;		_put_fat
 15327 ;;		_f_open
 15328 ;;		_f_sync
 15329 ;;		_f_mkdir
 15330 ;; This function uses a non-reentrant model
 15331 ;;
 15332                           
 15333                           	psect	text41
 15334   008F08                     __ptext41:
 15335                           	callstack 0
 15336   008F08                     _st_dword:
 15337                           	callstack 27
 15338   008F08                     
 15339                           ;mcc_generated_files/fatfs/ff.c: 616: static void st_dword (BYTE* ptr, DWORD val);mcc_ge
      +                          nerated_files/fatfs/ff.c: 617: {;mcc_generated_files/fatfs/ff.c: 618:  *ptr++ = (BYTE)va
      +                          l; val >>= 8;
 15340   008F08  C001  FFD9         	movff	st_dword@ptr,fsr2l
 15341   008F0C  C002  FFDA         	movff	st_dword@ptr+1,fsr2h
 15342   008F10  C003  FFDF         	movff	st_dword@val,indf2
 15343   008F14  4A01               	infsnz	st_dword@ptr^0,f,c
 15344   008F16  2A02               	incf	(st_dword@ptr+1)^0,f,c
 15345   008F18  C004  F003         	movff	st_dword@val+1,st_dword@val
 15346   008F1C  C005  F004         	movff	st_dword@val+2,st_dword@val+1
 15347   008F20  C006  F005         	movff	st_dword@val+3,st_dword@val+2
 15348   008F24  6A06               	clrf	(st_dword@val+3)^0,c
 15349   008F26                     
 15350                           ;mcc_generated_files/fatfs/ff.c: 619:  *ptr++ = (BYTE)val; val >>= 8;
 15351   008F26  C001  FFD9         	movff	st_dword@ptr,fsr2l
 15352   008F2A  C002  FFDA         	movff	st_dword@ptr+1,fsr2h
 15353   008F2E  C003  FFDF         	movff	st_dword@val,indf2
 15354   008F32  4A01               	infsnz	st_dword@ptr^0,f,c
 15355   008F34  2A02               	incf	(st_dword@ptr+1)^0,f,c
 15356   008F36  C004  F003         	movff	st_dword@val+1,st_dword@val
 15357   008F3A  C005  F004         	movff	st_dword@val+2,st_dword@val+1
 15358   008F3E  C006  F005         	movff	st_dword@val+3,st_dword@val+2
 15359   008F42  6A06               	clrf	(st_dword@val+3)^0,c
 15360   008F44                     
 15361                           ;mcc_generated_files/fatfs/ff.c: 620:  *ptr++ = (BYTE)val; val >>= 8;
 15362   008F44  C001  FFD9         	movff	st_dword@ptr,fsr2l
 15363   008F48  C002  FFDA         	movff	st_dword@ptr+1,fsr2h
 15364   008F4C  C003  FFDF         	movff	st_dword@val,indf2
 15365   008F50  4A01               	infsnz	st_dword@ptr^0,f,c
 15366   008F52  2A02               	incf	(st_dword@ptr+1)^0,f,c
 15367   008F54  C004  F003         	movff	st_dword@val+1,st_dword@val
 15368   008F58  C005  F004         	movff	st_dword@val+2,st_dword@val+1
 15369   008F5C  C006  F005         	movff	st_dword@val+3,st_dword@val+2
 15370   008F60  6A06               	clrf	(st_dword@val+3)^0,c
 15371   008F62                     
 15372                           ;mcc_generated_files/fatfs/ff.c: 621:  *ptr++ = (BYTE)val;
 15373   008F62  C001  FFD9         	movff	st_dword@ptr,fsr2l
 15374   008F66  C002  FFDA         	movff	st_dword@ptr+1,fsr2h
 15375   008F6A  C003  FFDF         	movff	st_dword@val,indf2
 15376   008F6E  4A01               	infsnz	st_dword@ptr^0,f,c
 15377   008F70  2A02               	incf	(st_dword@ptr+1)^0,f,c
 15378   008F72  0012               	return		;funcret
 15379   008F74                     __end_of_st_dword:
 15380                           	callstack 0
 15381                           
 15382 ;; *************** function _mem_set *****************
 15383 ;; Defined at:
 15384 ;;		line 660 in file "mcc_generated_files/fatfs/ff.c"
 15385 ;; Parameters:    Size  Location     Type
 15386 ;;  dst             2    0[COMRAM] PTR void 
 15387 ;;		 -> FatFs.win(512), drive.win(512), djn.fn(12), f_rename@djn(40), 
 15388 ;;		 -> djo.fn(12), f_rename@djo(40), dj.fn(12), f_mkdir@dj(40), 
 15389 ;;		 -> dj.fn(12), f_unlink@dj(40), dj.fn(12), f_stat@dj(40), 
 15390 ;;		 -> dj.fn(12), f_chdir@dj(40), dj.fn(12), f_open@dj(40), 
 15391 ;;		 -> file(546), drive(563), NULL(0), Fil(546), 
 15392 ;;		 -> FatFs(563), 
 15393 ;;  val             2    2[COMRAM] int 
 15394 ;;  cnt             2    4[COMRAM] unsigned int 
 15395 ;; Auto vars:     Size  Location     Type
 15396 ;;  d               2    6[COMRAM] PTR unsigned char 
 15397 ;;		 -> FatFs.win(512), drive.win(512), djn.fn(12), f_rename@djn(40), 
 15398 ;;		 -> djo.fn(12), f_rename@djo(40), dj.fn(12), f_mkdir@dj(40), 
 15399 ;;		 -> dj.fn(12), f_unlink@dj(40), dj.fn(12), f_stat@dj(40), 
 15400 ;;		 -> dj.fn(12), f_chdir@dj(40), dj.fn(12), f_open@dj(40), 
 15401 ;;		 -> file(546), drive(563), NULL(0), Fil(546), 
 15402 ;;		 -> FatFs(563), 
 15403 ;; Return value:  Size  Location     Type
 15404 ;;                  1    wreg      void 
 15405 ;; Registers used:
 15406 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15407 ;; Tracked objects:
 15408 ;;		On entry : 0/0
 15409 ;;		On exit  : 0/0
 15410 ;;		Unchanged: 0/0
 15411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15412 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15413 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15415 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15416 ;;Total ram usage:        8 bytes
 15417 ;; Hardware stack levels used: 1
 15418 ;; This function calls:
 15419 ;;		Nothing
 15420 ;; This function is called by:
 15421 ;;		_sync_fs
 15422 ;;		_dir_clear
 15423 ;;		_dir_register
 15424 ;;		_create_name
 15425 ;;		_f_open
 15426 ;;		_f_mkdir
 15427 ;; This function uses a non-reentrant model
 15428 ;;
 15429                           
 15430                           	psect	text42
 15431   008B96                     __ptext42:
 15432                           	callstack 0
 15433   008B96                     _mem_set:
 15434                           	callstack 29
 15435   008B96                     
 15436                           ;mcc_generated_files/fatfs/ff.c: 660: static void mem_set (void* dst, int val, UINT cnt)
      +                          ;mcc_generated_files/fatfs/ff.c: 661: {;mcc_generated_files/fatfs/ff.c: 662:  BYTE *d = 
      +                          (BYTE*)dst;
 15437   008B96  C001  F007         	movff	mem_set@dst,mem_set@d
 15438   008B9A  C002  F008         	movff	mem_set@dst+1,mem_set@d+1
 15439   008B9E                     l6307:
 15440                           
 15441                           ;mcc_generated_files/fatfs/ff.c: 665:   *d++ = (BYTE)val;
 15442   008B9E  C007  FFD9         	movff	mem_set@d,fsr2l
 15443   008BA2  C008  FFDA         	movff	mem_set@d+1,fsr2h
 15444   008BA6  C003  FFDF         	movff	mem_set@val,indf2
 15445   008BAA  4A07               	infsnz	mem_set@d^0,f,c
 15446   008BAC  2A08               	incf	(mem_set@d+1)^0,f,c
 15447   008BAE                     
 15448                           ;mcc_generated_files/fatfs/ff.c: 666:  } while (--cnt);
 15449   008BAE  0605               	decf	mem_set@cnt^0,f,c
 15450   008BB0  A0D8               	btfss	status,0,c
 15451   008BB2  0606               	decf	(mem_set@cnt+1)^0,f,c
 15452   008BB4  5005               	movf	mem_set@cnt^0,w,c
 15453   008BB6  1006               	iorwf	(mem_set@cnt+1)^0,w,c
 15454   008BB8  A4D8               	btfss	status,2,c
 15455   008BBA  EFE1  F045         	goto	u7831
 15456   008BBE  EFE3  F045         	goto	u7830
 15457   008BC2                     u7831:
 15458   008BC2  EFCF  F045         	goto	l6307
 15459   008BC6                     u7830:
 15460   008BC6  0012               	return		;funcret
 15461   008BC8                     __end_of_mem_set:
 15462                           	callstack 0
 15463                           
 15464 ;; *************** function _disk_ioctl *****************
 15465 ;; Defined at:
 15466 ;;		line 158 in file "mcc_generated_files/fatfs/diskio.c"
 15467 ;; Parameters:    Size  Location     Type
 15468 ;;  pdrv            1    wreg     unsigned char 
 15469 ;;  cmd             1    0[COMRAM] unsigned char 
 15470 ;;  buff            2    1[COMRAM] PTR void 
 15471 ;;		 -> NULL(0), 
 15472 ;; Auto vars:     Size  Location     Type
 15473 ;;  pdrv            1    5[COMRAM] unsigned char 
 15474 ;;  res             1    0        enum E12
 15475 ;; Return value:  Size  Location     Type
 15476 ;;                  1    wreg      enum E12
 15477 ;; Registers used:
 15478 ;;		wreg, status,2, status,0
 15479 ;; Tracked objects:
 15480 ;;		On entry : 0/0
 15481 ;;		On exit  : 0/0
 15482 ;;		Unchanged: 0/0
 15483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15484 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15485 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15486 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15487 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15488 ;;Total ram usage:        6 bytes
 15489 ;; Hardware stack levels used: 1
 15490 ;; This function calls:
 15491 ;;		Nothing
 15492 ;; This function is called by:
 15493 ;;		_sync_fs
 15494 ;; This function uses a non-reentrant model
 15495 ;;
 15496                           
 15497                           	psect	text43
 15498   008B64                     __ptext43:
 15499                           	callstack 0
 15500   008B64                     _disk_ioctl:
 15501                           	callstack 27
 15502                           
 15503                           ;incstack = 0
 15504                           ;disk_ioctl@pdrv stored from wreg
 15505   008B64  6E06               	movwf	disk_ioctl@pdrv^0,c
 15506   008B66                     
 15507                           ;mcc_generated_files/fatfs/diskio.c: 166:     switch (pdrv) {
 15508   008B66  EFB8  F045         	goto	l6847
 15509   008B6A                     l481:
 15510                           
 15511                           ;mcc_generated_files/fatfs/diskio.c: 168:             return res;
 15512   008B6A  0E00               	movlw	0
 15513   008B6C  EFCA  F045         	goto	l482
 15514   008B70                     l6847:
 15515   008B70  5006               	movf	disk_ioctl@pdrv^0,w,c
 15516   008B72  6E04               	movwf	??_disk_ioctl^0,c
 15517   008B74  6A05               	clrf	(??_disk_ioctl+1)^0,c
 15518                           
 15519                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15520                           ; Switch size 1, requested type "simple"
 15521                           ; Number of cases is 1, Range of values is 0 to 0
 15522                           ; switch strategies available:
 15523                           ; Name         Instructions Cycles
 15524                           ; simple_byte            4     3 (average)
 15525                           ;	Chosen strategy is simple_byte
 15526   008B76  5005               	movf	(??_disk_ioctl+1)^0,w,c
 15527   008B78  0A00               	xorlw	0	; case 0
 15528   008B7A  B4D8               	btfsc	status,2,c
 15529   008B7C  EFC2  F045         	goto	l9293
 15530   008B80  EFC9  F045         	goto	l6849
 15531   008B84                     l9293:
 15532                           
 15533                           ; Switch size 1, requested type "simple"
 15534                           ; Number of cases is 1, Range of values is 0 to 0
 15535                           ; switch strategies available:
 15536                           ; Name         Instructions Cycles
 15537                           ; simple_byte            4     3 (average)
 15538                           ;	Chosen strategy is simple_byte
 15539   008B84  5004               	movf	??_disk_ioctl^0,w,c
 15540   008B86  0A00               	xorlw	0	; case 0
 15541   008B88  B4D8               	btfsc	status,2,c
 15542   008B8A  EFB5  F045         	goto	l481
 15543   008B8E  EFC9  F045         	goto	l6849
 15544   008B92                     l6849:
 15545                           
 15546                           ;mcc_generated_files/fatfs/diskio.c: 174:     return RES_PARERR;
 15547   008B92  0E04               	movlw	4
 15548   008B94                     l482:
 15549   008B94  0012               	return		;funcret
 15550   008B96                     __end_of_disk_ioctl:
 15551                           	callstack 0
 15552                           
 15553 ;; *************** function _st_clust *****************
 15554 ;; Defined at:
 15555 ;;		line 1842 in file "mcc_generated_files/fatfs/ff.c"
 15556 ;; Parameters:    Size  Location     Type
 15557 ;;  fs              2    4[COMRAM] PTR struct .
 15558 ;;		 -> drive(563), NULL(0), FatFs(563), 
 15559 ;;  dir             2    6[COMRAM] PTR unsigned char 
 15560 ;;		 -> FatFs.win(512), drive.win(512), drive(563), NULL(0), 
 15561 ;;		 -> FatFs(563), 
 15562 ;;  cl              4    8[COMRAM] unsigned long 
 15563 ;; Auto vars:     Size  Location     Type
 15564 ;;		None
 15565 ;; Return value:  Size  Location     Type
 15566 ;;                  1    wreg      void 
 15567 ;; Registers used:
 15568 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15569 ;; Tracked objects:
 15570 ;;		On entry : 0/0
 15571 ;;		On exit  : 0/0
 15572 ;;		Unchanged: 0/0
 15573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15574 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15576 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15577 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15578 ;;Total ram usage:        9 bytes
 15579 ;; Hardware stack levels used: 1
 15580 ;; Hardware stack levels required when called: 1
 15581 ;; This function calls:
 15582 ;;		_st_word
 15583 ;; This function is called by:
 15584 ;;		_f_open
 15585 ;;		_f_sync
 15586 ;;		_f_mkdir
 15587 ;;		_f_rename
 15588 ;; This function uses a non-reentrant model
 15589 ;;
 15590                           
 15591                           	psect	text44
 15592   008C3E                     __ptext44:
 15593                           	callstack 0
 15594   008C3E                     _st_clust:
 15595                           	callstack 28
 15596   008C3E                     
 15597                           ;mcc_generated_files/fatfs/ff.c: 1843:  FATFS* fs,;mcc_generated_files/fatfs/ff.c: 1844:
      +                            BYTE* dir,;mcc_generated_files/fatfs/ff.c: 1845:  DWORD cl;mcc_generated_files/fatfs/f
      +                          f.c: 1847: {;mcc_generated_files/fatfs/ff.c: 1848:  st_word(dir + 26, (WORD)cl);
 15598   008C3E  0E1A               	movlw	26
 15599   008C40  2407               	addwf	st_clust@dir^0,w,c
 15600   008C42  6E01               	movwf	st_word@ptr^0,c
 15601   008C44  0E00               	movlw	0
 15602   008C46  2008               	addwfc	(st_clust@dir+1)^0,w,c
 15603   008C48  6E02               	movwf	(st_word@ptr+1)^0,c
 15604   008C4A  C009  F003         	movff	st_clust@cl,st_word@val
 15605   008C4E  C00A  F004         	movff	st_clust@cl+1,st_word@val+1
 15606   008C52  EC9E  F045         	call	_st_word	;wreg free
 15607   008C56                     
 15608                           ;mcc_generated_files/fatfs/ff.c: 1849:  if (fs->fs_type == 3) {
 15609   008C56  C005  FFD9         	movff	st_clust@fs,fsr2l
 15610   008C5A  C006  FFDA         	movff	st_clust@fs+1,fsr2h
 15611   008C5E  0E03               	movlw	3
 15612   008C60  18DE               	xorwf	postinc2,w,c
 15613   008C62  A4D8               	btfss	status,2,c
 15614   008C64  EF36  F046         	goto	u9421
 15615   008C68  EF38  F046         	goto	u9420
 15616   008C6C                     u9421:
 15617   008C6C  EF44  F046         	goto	l777
 15618   008C70                     u9420:
 15619   008C70                     
 15620                           ;mcc_generated_files/fatfs/ff.c: 1850:   st_word(dir + 20, (WORD)(cl >> 16));
 15621   008C70  0E14               	movlw	20
 15622   008C72  2407               	addwf	st_clust@dir^0,w,c
 15623   008C74  6E01               	movwf	st_word@ptr^0,c
 15624   008C76  0E00               	movlw	0
 15625   008C78  2008               	addwfc	(st_clust@dir+1)^0,w,c
 15626   008C7A  6E02               	movwf	(st_word@ptr+1)^0,c
 15627   008C7C  C00B  F003         	movff	st_clust@cl+2,st_word@val
 15628   008C80  C00C  F004         	movff	st_clust@cl+3,st_word@val+1
 15629   008C84  EC9E  F045         	call	_st_word	;wreg free
 15630   008C88                     l777:
 15631   008C88  0012               	return		;funcret
 15632   008C8A                     __end_of_st_clust:
 15633                           	callstack 0
 15634                           
 15635 ;; *************** function _st_word *****************
 15636 ;; Defined at:
 15637 ;;		line 610 in file "mcc_generated_files/fatfs/ff.c"
 15638 ;; Parameters:    Size  Location     Type
 15639 ;;  ptr             2    0[COMRAM] PTR unsigned char 
 15640 ;;		 -> FatFs.win(512), drive.win(512), drive(563), NULL(0), 
 15641 ;;		 -> FatFs(563), 
 15642 ;;  val             2    2[COMRAM] unsigned short 
 15643 ;; Auto vars:     Size  Location     Type
 15644 ;;		None
 15645 ;; Return value:  Size  Location     Type
 15646 ;;                  1    wreg      void 
 15647 ;; Registers used:
 15648 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15649 ;; Tracked objects:
 15650 ;;		On entry : 0/0
 15651 ;;		On exit  : 0/0
 15652 ;;		Unchanged: 0/0
 15653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15654 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15657 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15658 ;;Total ram usage:        4 bytes
 15659 ;; Hardware stack levels used: 1
 15660 ;; This function calls:
 15661 ;;		Nothing
 15662 ;; This function is called by:
 15663 ;;		_sync_fs
 15664 ;;		_put_fat
 15665 ;;		_st_clust
 15666 ;;		_f_sync
 15667 ;; This function uses a non-reentrant model
 15668 ;;
 15669                           
 15670                           	psect	text45
 15671   008B3C                     __ptext45:
 15672                           	callstack 0
 15673   008B3C                     _st_word:
 15674                           	callstack 27
 15675   008B3C                     
 15676                           ;mcc_generated_files/fatfs/ff.c: 610: static void st_word (BYTE* ptr, WORD val);mcc_gene
      +                          rated_files/fatfs/ff.c: 611: {;mcc_generated_files/fatfs/ff.c: 612:  *ptr++ = (BYTE)val;
      +                           val >>= 8;
 15677   008B3C  C001  FFD9         	movff	st_word@ptr,fsr2l
 15678   008B40  C002  FFDA         	movff	st_word@ptr+1,fsr2h
 15679   008B44  C003  FFDF         	movff	st_word@val,indf2
 15680   008B48  4A01               	infsnz	st_word@ptr^0,f,c
 15681   008B4A  2A02               	incf	(st_word@ptr+1)^0,f,c
 15682   008B4C  5004               	movf	(st_word@val+1)^0,w,c
 15683   008B4E  6E03               	movwf	st_word@val^0,c
 15684   008B50  6A04               	clrf	(st_word@val+1)^0,c
 15685   008B52                     
 15686                           ;mcc_generated_files/fatfs/ff.c: 613:  *ptr++ = (BYTE)val;
 15687   008B52  C001  FFD9         	movff	st_word@ptr,fsr2l
 15688   008B56  C002  FFDA         	movff	st_word@ptr+1,fsr2h
 15689   008B5A  C003  FFDF         	movff	st_word@val,indf2
 15690   008B5E  4A01               	infsnz	st_word@ptr^0,f,c
 15691   008B60  2A02               	incf	(st_word@ptr+1)^0,f,c
 15692   008B62  0012               	return		;funcret
 15693   008B64                     __end_of_st_word:
 15694                           	callstack 0
 15695                           
 15696 ;; *************** function _move_window *****************
 15697 ;; Defined at:
 15698 ;;		line 1056 in file "mcc_generated_files/fatfs/ff.c"
 15699 ;; Parameters:    Size  Location     Type
 15700 ;;  fs              2   16[BANK0 ] PTR struct .
 15701 ;;		 -> drive(563), NULL(0), FatFs(563), 
 15702 ;;  sector          4   18[BANK0 ] unsigned long 
 15703 ;; Auto vars:     Size  Location     Type
 15704 ;;  res             1   22[BANK0 ] enum E68
 15705 ;; Return value:  Size  Location     Type
 15706 ;;                  1    wreg      enum E68
 15707 ;; Registers used:
 15708 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 15709 ;; Tracked objects:
 15710 ;;		On entry : 0/0
 15711 ;;		On exit  : 0/0
 15712 ;;		Unchanged: 0/0
 15713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15714 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15715 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15716 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15717 ;;      Totals:         4       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15718 ;;Total ram usage:       11 bytes
 15719 ;; Hardware stack levels used: 1
 15720 ;; Hardware stack levels required when called: 6
 15721 ;; This function calls:
 15722 ;;		_disk_read
 15723 ;;		_sync_window
 15724 ;; This function is called by:
 15725 ;;		_get_fat
 15726 ;;		_put_fat
 15727 ;;		_dir_alloc
 15728 ;;		_dir_find
 15729 ;;		_dir_register
 15730 ;;		_check_fs
 15731 ;;		_find_volume
 15732 ;;		_f_open
 15733 ;;		_f_sync
 15734 ;;		_dir_read
 15735 ;;		_dir_remove
 15736 ;;		_f_getfree
 15737 ;;		_f_rename
 15738 ;; This function uses a non-reentrant model
 15739 ;;
 15740                           
 15741                           	psect	text46
 15742   00957E                     __ptext46:
 15743                           	callstack 0
 15744   00957E                     _move_window:
 15745                           	callstack 21
 15746   00957E                     
 15747                           ;mcc_generated_files/fatfs/ff.c: 1057:  FATFS* fs,;mcc_generated_files/fatfs/ff.c: 1058:
      +                            DWORD sector;mcc_generated_files/fatfs/ff.c: 1060: {;mcc_generated_files/fatfs/ff.c: 1
      +                          061:  FRESULT res = FR_OK;
 15748   00957E  0E00               	movlw	0
 15749   009580  0100               	movlb	0	; () banked
 15750   009582  6F76               	movwf	move_window@res& (0+255),b
 15751   009584                     
 15752                           ; BSR set to: 0
 15753                           ;mcc_generated_files/fatfs/ff.c: 1064:  if (sector != fs->winsect) {
 15754   009584  EE20 F02F          	lfsr	2,47
 15755   009588  5170               	movf	move_window@fs& (0+255),w,b
 15756   00958A  26D9               	addwf	fsr2l,f,c
 15757   00958C  5171               	movf	(move_window@fs+1)& (0+255),w,b
 15758   00958E  22DA               	addwfc	fsr2h,f,c
 15759   009590  5172               	movf	move_window@sector& (0+255),w,b
 15760   009592  18DE               	xorwf	postinc2,w,c
 15761   009594  E10F               	bnz	u7780
 15762   009596  5173               	movf	(move_window@sector+1)& (0+255),w,b
 15763   009598  18DE               	xorwf	postinc2,w,c
 15764   00959A  E10C               	bnz	u7780
 15765   00959C  5174               	movf	(move_window@sector+2)& (0+255),w,b
 15766   00959E  18DE               	xorwf	postinc2,w,c
 15767   0095A0  E109               	bnz	u7780
 15768   0095A2  5175               	movf	(move_window@sector+3)& (0+255),w,b
 15769   0095A4  18DE               	xorwf	postinc2,w,c
 15770   0095A6  B4D8               	btfsc	status,2,c
 15771   0095A8  EFD8  F04A         	goto	u7781
 15772   0095AC  EFDA  F04A         	goto	u7780
 15773   0095B0                     u7781:
 15774   0095B0  EF23  F04B         	goto	l6291
 15775   0095B4                     u7780:
 15776   0095B4                     
 15777                           ; BSR set to: 0
 15778                           ;mcc_generated_files/fatfs/ff.c: 1066:   res = sync_window(fs);
 15779   0095B4  C070  F059         	movff	move_window@fs,sync_window@fs
 15780   0095B8  C071  F05A         	movff	move_window@fs+1,sync_window@fs+1
 15781   0095BC  EC84  F051         	call	_sync_window	;wreg free
 15782   0095C0  0100               	movlb	0	; () banked
 15783   0095C2  6F76               	movwf	move_window@res& (0+255),b
 15784   0095C4                     
 15785                           ; BSR set to: 0
 15786                           ;mcc_generated_files/fatfs/ff.c: 1068:   if (res == FR_OK) {
 15787   0095C4  5176               	movf	move_window@res& (0+255),w,b
 15788   0095C6  A4D8               	btfss	status,2,c
 15789   0095C8  EFE8  F04A         	goto	u7791
 15790   0095CC  EFEA  F04A         	goto	u7790
 15791   0095D0                     u7791:
 15792   0095D0  EF23  F04B         	goto	l6291
 15793   0095D4                     u7790:
 15794   0095D4                     
 15795                           ; BSR set to: 0
 15796                           ;mcc_generated_files/fatfs/ff.c: 1069:    if (disk_read(fs->pdrv, fs->win, sector, 1) !=
      +                           RES_OK) {
 15797   0095D4  0E33               	movlw	51
 15798   0095D6  2570               	addwf	move_window@fs& (0+255),w,b
 15799   0095D8  6E4A               	movwf	disk_read@buff^0,c
 15800   0095DA  0E00               	movlw	0
 15801   0095DC  2171               	addwfc	(move_window@fs+1)& (0+255),w,b
 15802   0095DE  6E4B               	movwf	(disk_read@buff+1)^0,c
 15803   0095E0  C072  F04C         	movff	move_window@sector,disk_read@sector
 15804   0095E4  C073  F04D         	movff	move_window@sector+1,disk_read@sector+1
 15805   0095E8  C074  F04E         	movff	move_window@sector+2,disk_read@sector+2
 15806   0095EC  C075  F04F         	movff	move_window@sector+3,disk_read@sector+3
 15807   0095F0  0E00               	movlw	0
 15808   0095F2  6E51               	movwf	(disk_read@count+1)^0,c
 15809   0095F4  0E01               	movlw	1
 15810   0095F6  6E50               	movwf	disk_read@count^0,c
 15811   0095F8  EE20 F001          	lfsr	2,1
 15812   0095FC  5170               	movf	move_window@fs& (0+255),w,b
 15813   0095FE  26D9               	addwf	fsr2l,f,c
 15814   009600  5171               	movf	(move_window@fs+1)& (0+255),w,b
 15815   009602  22DA               	addwfc	fsr2h,f,c
 15816   009604  50DF               	movf	indf2,w,c
 15817   009606  ECF2  F047         	call	_disk_read
 15818   00960A  0900               	iorlw	0
 15819   00960C  B4D8               	btfsc	status,2,c
 15820   00960E  EF0B  F04B         	goto	u7801
 15821   009612  EF0D  F04B         	goto	u7800
 15822   009616                     u7801:
 15823   009616  EF14  F04B         	goto	l6289
 15824   00961A                     u7800:
 15825   00961A                     
 15826                           ;mcc_generated_files/fatfs/ff.c: 1070:     sector = 0xFFFFFFFF;
 15827   00961A  0100               	movlb	0	; () banked
 15828   00961C  6972               	setf	move_window@sector& (0+255),b
 15829   00961E  6973               	setf	(move_window@sector+1)& (0+255),b
 15830   009620  6974               	setf	(move_window@sector+2)& (0+255),b
 15831   009622  6975               	setf	(move_window@sector+3)& (0+255),b
 15832   009624                     
 15833                           ; BSR set to: 0
 15834                           ;mcc_generated_files/fatfs/ff.c: 1071:     res = FR_DISK_ERR;
 15835   009624  0E01               	movlw	1
 15836   009626  6F76               	movwf	move_window@res& (0+255),b
 15837   009628                     l6289:
 15838                           
 15839                           ;mcc_generated_files/fatfs/ff.c: 1073:    fs->winsect = sector;
 15840   009628  0100               	movlb	0	; () banked
 15841   00962A  EE20 F02F          	lfsr	2,47
 15842   00962E  5170               	movf	move_window@fs& (0+255),w,b
 15843   009630  26D9               	addwf	fsr2l,f,c
 15844   009632  5171               	movf	(move_window@fs+1)& (0+255),w,b
 15845   009634  22DA               	addwfc	fsr2h,f,c
 15846   009636  C072  FFDE         	movff	move_window@sector,postinc2
 15847   00963A  C073  FFDE         	movff	move_window@sector+1,postinc2
 15848   00963E  C074  FFDE         	movff	move_window@sector+2,postinc2
 15849   009642  C075  FFDE         	movff	move_window@sector+3,postinc2
 15850   009646                     l6291:
 15851                           
 15852                           ; BSR set to: 0
 15853                           ;mcc_generated_files/fatfs/ff.c: 1076:  return res;
 15854   009646  5176               	movf	move_window@res& (0+255),w,b
 15855   009648                     
 15856                           ; BSR set to: 0
 15857   009648  0012               	return		;funcret
 15858   00964A                     __end_of_move_window:
 15859                           	callstack 0
 15860                           
 15861 ;; *************** function _sync_window *****************
 15862 ;; Defined at:
 15863 ;;		line 1034 in file "mcc_generated_files/fatfs/ff.c"
 15864 ;; Parameters:    Size  Location     Type
 15865 ;;  fs              2   88[COMRAM] PTR struct .
 15866 ;;		 -> drive(563), NULL(0), FatFs(563), 
 15867 ;; Auto vars:     Size  Location     Type
 15868 ;;  res             1   90[COMRAM] enum E68
 15869 ;; Return value:  Size  Location     Type
 15870 ;;                  1    wreg      enum E68
 15871 ;; Registers used:
 15872 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 15873 ;; Tracked objects:
 15874 ;;		On entry : 0/0
 15875 ;;		On exit  : 0/0
 15876 ;;		Unchanged: 0/0
 15877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15878 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15879 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15880 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15881 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15882 ;;Total ram usage:       19 bytes
 15883 ;; Hardware stack levels used: 1
 15884 ;; Hardware stack levels required when called: 5
 15885 ;; This function calls:
 15886 ;;		_disk_write
 15887 ;; This function is called by:
 15888 ;;		_move_window
 15889 ;;		_sync_fs
 15890 ;;		_dir_clear
 15891 ;;		_f_mkdir
 15892 ;; This function uses a non-reentrant model
 15893 ;;
 15894                           
 15895                           	psect	text47
 15896   00A308                     __ptext47:
 15897                           	callstack 0
 15898   00A308                     _sync_window:
 15899                           	callstack 21
 15900   00A308                     
 15901                           ;mcc_generated_files/fatfs/ff.c: 1035:  FATFS* fs;mcc_generated_files/fatfs/ff.c: 1037: 
      +                          {;mcc_generated_files/fatfs/ff.c: 1038:  FRESULT res = FR_OK;
 15902   00A308  0E00               	movlw	0
 15903   00A30A  6E5B               	movwf	sync_window@res^0,c
 15904   00A30C                     
 15905                           ;mcc_generated_files/fatfs/ff.c: 1041:  if (fs->wflag) {
 15906   00A30C  EE20 F003          	lfsr	2,3
 15907   00A310  5059               	movf	sync_window@fs^0,w,c
 15908   00A312  26D9               	addwf	fsr2l,f,c
 15909   00A314  505A               	movf	(sync_window@fs+1)^0,w,c
 15910   00A316  22DA               	addwfc	fsr2h,f,c
 15911   00A318  50DF               	movf	indf2,w,c
 15912   00A31A  B4D8               	btfsc	status,2,c
 15913   00A31C  EF92  F051         	goto	u7741
 15914   00A320  EF94  F051         	goto	u7740
 15915   00A324                     u7741:
 15916   00A324  EF51  F052         	goto	l573
 15917   00A328                     u7740:
 15918   00A328                     
 15919                           ;mcc_generated_files/fatfs/ff.c: 1042:   if (disk_write(fs->pdrv, fs->win, fs->winsect, 
      +                          1) == RES_OK) {
 15920   00A328  0E33               	movlw	51
 15921   00A32A  2459               	addwf	sync_window@fs^0,w,c
 15922   00A32C  6E4D               	movwf	disk_write@buff^0,c
 15923   00A32E  0E00               	movlw	0
 15924   00A330  205A               	addwfc	(sync_window@fs+1)^0,w,c
 15925   00A332  6E4E               	movwf	(disk_write@buff+1)^0,c
 15926   00A334  EE20 F02F          	lfsr	2,47
 15927   00A338  5059               	movf	sync_window@fs^0,w,c
 15928   00A33A  26D9               	addwf	fsr2l,f,c
 15929   00A33C  505A               	movf	(sync_window@fs+1)^0,w,c
 15930   00A33E  22DA               	addwfc	fsr2h,f,c
 15931   00A340  CFDE F04F          	movff	postinc2,disk_write@sector
 15932   00A344  CFDE F050          	movff	postinc2,disk_write@sector+1
 15933   00A348  CFDE F051          	movff	postinc2,disk_write@sector+2
 15934   00A34C  CFDE F052          	movff	postinc2,disk_write@sector+3
 15935   00A350  0E00               	movlw	0
 15936   00A352  6E54               	movwf	(disk_write@count+1)^0,c
 15937   00A354  0E01               	movlw	1
 15938   00A356  6E53               	movwf	disk_write@count^0,c
 15939   00A358  EE20 F001          	lfsr	2,1
 15940   00A35C  5059               	movf	sync_window@fs^0,w,c
 15941   00A35E  26D9               	addwf	fsr2l,f,c
 15942   00A360  505A               	movf	(sync_window@fs+1)^0,w,c
 15943   00A362  22DA               	addwfc	fsr2h,f,c
 15944   00A364  50DF               	movf	indf2,w,c
 15945   00A366  EC2C  F048         	call	_disk_write
 15946   00A36A  0900               	iorlw	0
 15947   00A36C  A4D8               	btfss	status,2,c
 15948   00A36E  EFBB  F051         	goto	u7751
 15949   00A372  EFBD  F051         	goto	u7750
 15950   00A376                     u7751:
 15951   00A376  EF4F  F052         	goto	l6231
 15952   00A37A                     u7750:
 15953   00A37A                     
 15954                           ;mcc_generated_files/fatfs/ff.c: 1043:    fs->wflag = 0;
 15955   00A37A  EE20 F003          	lfsr	2,3
 15956   00A37E  5059               	movf	sync_window@fs^0,w,c
 15957   00A380  26D9               	addwf	fsr2l,f,c
 15958   00A382  505A               	movf	(sync_window@fs+1)^0,w,c
 15959   00A384  22DA               	addwfc	fsr2h,f,c
 15960   00A386  0E00               	movlw	0
 15961   00A388  6EDF               	movwf	indf2,c
 15962   00A38A                     
 15963                           ;mcc_generated_files/fatfs/ff.c: 1044:    if (fs->winsect - fs->fatbase < fs->fsize) {
 15964   00A38A  EE20 F01B          	lfsr	2,27
 15965   00A38E  5059               	movf	sync_window@fs^0,w,c
 15966   00A390  26D9               	addwf	fsr2l,f,c
 15967   00A392  505A               	movf	(sync_window@fs+1)^0,w,c
 15968   00A394  22DA               	addwfc	fsr2h,f,c
 15969   00A396  EE10 F023          	lfsr	1,35
 15970   00A39A  5059               	movf	sync_window@fs^0,w,c
 15971   00A39C  26E1               	addwf	fsr1l,f,c
 15972   00A39E  505A               	movf	(sync_window@fs+1)^0,w,c
 15973   00A3A0  22E2               	addwfc	fsr1h,f,c
 15974   00A3A2  CFE6 F064          	movff	postinc1,??_sync_window+4
 15975   00A3A6  CFE6 F065          	movff	postinc1,??_sync_window+5
 15976   00A3AA  CFE6 F066          	movff	postinc1,??_sync_window+6
 15977   00A3AE  CFE6 F067          	movff	postinc1,??_sync_window+7
 15978   00A3B2  EE10 F02F          	lfsr	1,47
 15979   00A3B6  5059               	movf	sync_window@fs^0,w,c
 15980   00A3B8  26E1               	addwf	fsr1l,f,c
 15981   00A3BA  505A               	movf	(sync_window@fs+1)^0,w,c
 15982   00A3BC  22E2               	addwfc	fsr1h,f,c
 15983   00A3BE  CFE6 F068          	movff	postinc1,??_sync_window+8
 15984   00A3C2  CFE6 F069          	movff	postinc1,??_sync_window+9
 15985   00A3C6  CFE6 F06A          	movff	postinc1,??_sync_window+10
 15986   00A3CA  CFE6 F06B          	movff	postinc1,??_sync_window+11
 15987   00A3CE  0100               	movlb	0	; () banked
 15988   00A3D0  5164               	movf	(??_sync_window+4)& (0+255),w,b
 15989   00A3D2  5D68               	subwf	(??_sync_window+8)& (0+255),w,b
 15990   00A3D4  6F6C               	movwf	(??_sync_window+12)& (0+255),b
 15991   00A3D6  5165               	movf	(??_sync_window+5)& (0+255),w,b
 15992   00A3D8  5969               	subwfb	(??_sync_window+9)& (0+255),w,b
 15993   00A3DA  6F6D               	movwf	(??_sync_window+13)& (0+255),b
 15994   00A3DC  5166               	movf	(??_sync_window+6)& (0+255),w,b
 15995   00A3DE  596A               	subwfb	(??_sync_window+10)& (0+255),w,b
 15996   00A3E0  6F6E               	movwf	(??_sync_window+14)& (0+255),b
 15997   00A3E2  5167               	movf	(??_sync_window+7)& (0+255),w,b
 15998   00A3E4  596B               	subwfb	(??_sync_window+11)& (0+255),w,b
 15999   00A3E6  6F6F               	movwf	(??_sync_window+15)& (0+255),b
 16000   00A3E8  50DE               	movf	postinc2,w,c
 16001   00A3EA  5D6C               	subwf	(??_sync_window+12)& (0+255),w,b
 16002   00A3EC  50DE               	movf	postinc2,w,c
 16003   00A3EE  596D               	subwfb	(??_sync_window+13)& (0+255),w,b
 16004   00A3F0  50DE               	movf	postinc2,w,c
 16005   00A3F2  596E               	subwfb	(??_sync_window+14)& (0+255),w,b
 16006   00A3F4  50DE               	movf	postinc2,w,c
 16007   00A3F6  596F               	subwfb	(??_sync_window+15)& (0+255),w,b
 16008   00A3F8  B0D8               	btfsc	status,0,c
 16009   00A3FA  EF01  F052         	goto	u7761
 16010   00A3FE  EF03  F052         	goto	u7760
 16011   00A402                     u7761:
 16012   00A402  EF51  F052         	goto	l573
 16013   00A406                     u7760:
 16014   00A406                     
 16015                           ; BSR set to: 0
 16016                           ;mcc_generated_files/fatfs/ff.c: 1045:     if (fs->n_fats == 2) disk_write(fs->pdrv, fs-
      +                          >win, fs->winsect + fs->fsize, 1);
 16017   00A406  EE20 F002          	lfsr	2,2
 16018   00A40A  5059               	movf	sync_window@fs^0,w,c
 16019   00A40C  26D9               	addwf	fsr2l,f,c
 16020   00A40E  505A               	movf	(sync_window@fs+1)^0,w,c
 16021   00A410  22DA               	addwfc	fsr2h,f,c
 16022   00A412  0E02               	movlw	2
 16023   00A414  18DE               	xorwf	postinc2,w,c
 16024   00A416  A4D8               	btfss	status,2,c
 16025   00A418  EF10  F052         	goto	u7771
 16026   00A41C  EF12  F052         	goto	u7770
 16027   00A420                     u7771:
 16028   00A420  EF51  F052         	goto	l573
 16029   00A424                     u7770:
 16030   00A424                     
 16031                           ; BSR set to: 0
 16032   00A424  0E33               	movlw	51
 16033   00A426  2459               	addwf	sync_window@fs^0,w,c
 16034   00A428  6E4D               	movwf	disk_write@buff^0,c
 16035   00A42A  0E00               	movlw	0
 16036   00A42C  205A               	addwfc	(sync_window@fs+1)^0,w,c
 16037   00A42E  6E4E               	movwf	(disk_write@buff+1)^0,c
 16038   00A430  EE20 F01B          	lfsr	2,27
 16039   00A434  5059               	movf	sync_window@fs^0,w,c
 16040   00A436  26D9               	addwf	fsr2l,f,c
 16041   00A438  505A               	movf	(sync_window@fs+1)^0,w,c
 16042   00A43A  22DA               	addwfc	fsr2h,f,c
 16043   00A43C  CFDE F060          	movff	postinc2,??_sync_window
 16044   00A440  CFDE F061          	movff	postinc2,??_sync_window+1
 16045   00A444  CFDE F062          	movff	postinc2,??_sync_window+2
 16046   00A448  CFDE F063          	movff	postinc2,??_sync_window+3
 16047   00A44C  EE20 F02F          	lfsr	2,47
 16048   00A450  5059               	movf	sync_window@fs^0,w,c
 16049   00A452  26D9               	addwf	fsr2l,f,c
 16050   00A454  505A               	movf	(sync_window@fs+1)^0,w,c
 16051   00A456  22DA               	addwfc	fsr2h,f,c
 16052   00A458  CFDE F064          	movff	postinc2,??_sync_window+4
 16053   00A45C  CFDE F065          	movff	postinc2,??_sync_window+5
 16054   00A460  CFDE F066          	movff	postinc2,??_sync_window+6
 16055   00A464  CFDE F067          	movff	postinc2,??_sync_window+7
 16056   00A468  5160               	movf	??_sync_window& (0+255),w,b
 16057   00A46A  2564               	addwf	(??_sync_window+4)& (0+255),w,b
 16058   00A46C  6E4F               	movwf	disk_write@sector^0,c
 16059   00A46E  5161               	movf	(??_sync_window+1)& (0+255),w,b
 16060   00A470  2165               	addwfc	(??_sync_window+5)& (0+255),w,b
 16061   00A472  6E50               	movwf	(disk_write@sector+1)^0,c
 16062   00A474  5162               	movf	(??_sync_window+2)& (0+255),w,b
 16063   00A476  2166               	addwfc	(??_sync_window+6)& (0+255),w,b
 16064   00A478  6E51               	movwf	(disk_write@sector+2)^0,c
 16065   00A47A  5163               	movf	(??_sync_window+3)& (0+255),w,b
 16066   00A47C  2167               	addwfc	(??_sync_window+7)& (0+255),w,b
 16067   00A47E  6E52               	movwf	(disk_write@sector+3)^0,c
 16068   00A480  0E00               	movlw	0
 16069   00A482  6E54               	movwf	(disk_write@count+1)^0,c
 16070   00A484  0E01               	movlw	1
 16071   00A486  6E53               	movwf	disk_write@count^0,c
 16072   00A488  EE20 F001          	lfsr	2,1
 16073   00A48C  5059               	movf	sync_window@fs^0,w,c
 16074   00A48E  26D9               	addwf	fsr2l,f,c
 16075   00A490  505A               	movf	(sync_window@fs+1)^0,w,c
 16076   00A492  22DA               	addwfc	fsr2h,f,c
 16077   00A494  50DF               	movf	indf2,w,c
 16078   00A496  EC2C  F048         	call	_disk_write
 16079   00A49A  EF51  F052         	goto	l573
 16080   00A49E                     l6231:
 16081                           
 16082                           ;mcc_generated_files/fatfs/ff.c: 1048:    res = FR_DISK_ERR;
 16083   00A49E  0E01               	movlw	1
 16084   00A4A0  6E5B               	movwf	sync_window@res^0,c
 16085   00A4A2                     l573:
 16086                           
 16087                           ;mcc_generated_files/fatfs/ff.c: 1051:  return res;
 16088   00A4A2  505B               	movf	sync_window@res^0,w,c
 16089   00A4A4  0012               	return		;funcret
 16090   00A4A6                     __end_of_sync_window:
 16091                           	callstack 0
 16092                           
 16093 ;; *************** function _disk_write *****************
 16094 ;; Defined at:
 16095 ;;		line 124 in file "mcc_generated_files/fatfs/diskio.c"
 16096 ;; Parameters:    Size  Location     Type
 16097 ;;  pdrv            1    wreg     unsigned char 
 16098 ;;  buff            2   76[COMRAM] PTR const unsigned char 
 16099 ;;		 -> FatFs.win(512), Fil.buf(512), drive.win(512), file.buf(512), 
 16100 ;;		 -> file(546), drive(563), FatFsDemo_Tasks@data(13), NULL(0), 
 16101 ;;		 -> STR_3(15), Fil(546), FatFs(563), 
 16102 ;;  sector          4   78[COMRAM] unsigned long 
 16103 ;;  count           2   82[COMRAM] unsigned int 
 16104 ;; Auto vars:     Size  Location     Type
 16105 ;;  pdrv            1   86[COMRAM] unsigned char 
 16106 ;;  res             1   87[COMRAM] enum E12
 16107 ;; Return value:  Size  Location     Type
 16108 ;;                  1    wreg      enum E12
 16109 ;; Registers used:
 16110 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 16111 ;; Tracked objects:
 16112 ;;		On entry : 0/0
 16113 ;;		On exit  : 0/0
 16114 ;;		Unchanged: 0/0
 16115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16116 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16117 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16118 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16119 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16120 ;;Total ram usage:       12 bytes
 16121 ;; Hardware stack levels used: 1
 16122 ;; Hardware stack levels required when called: 4
 16123 ;; This function calls:
 16124 ;;		_SD_SPI_SectorWrite
 16125 ;; This function is called by:
 16126 ;;		_sync_window
 16127 ;;		_sync_fs
 16128 ;;		_dir_clear
 16129 ;;		_f_write
 16130 ;;		_f_sync
 16131 ;;		_f_read
 16132 ;;		_f_lseek
 16133 ;;		_f_truncate
 16134 ;; This function uses a non-reentrant model
 16135 ;;
 16136                           
 16137                           	psect	text48
 16138   009058                     __ptext48:
 16139                           	callstack 0
 16140   009058                     _disk_write:
 16141                           	callstack 25
 16142                           
 16143                           ;incstack = 0
 16144                           ;disk_write@pdrv stored from wreg
 16145   009058  6E57               	movwf	disk_write@pdrv^0,c
 16146   00905A                     
 16147                           ;mcc_generated_files/fatfs/diskio.c: 125:     BYTE pdrv,;mcc_generated_files/fatfs/diski
      +                          o.c: 126:     const BYTE *buff,;mcc_generated_files/fatfs/diskio.c: 127:     DWORD secto
      +                          r,;mcc_generated_files/fatfs/diskio.c: 128:     UINT count;mcc_generated_files/fatfs/dis
      +                          kio.c: 130: {;mcc_generated_files/fatfs/diskio.c: 131:     DRESULT res = RES_PARERR;
 16148   00905A  0E04               	movlw	4
 16149   00905C  6E58               	movwf	disk_write@res^0,c
 16150                           
 16151                           ;mcc_generated_files/fatfs/diskio.c: 133:     switch (pdrv) {
 16152   00905E  EF53  F048         	goto	l6187
 16153   009062                     l6179:
 16154                           
 16155                           ;mcc_generated_files/fatfs/diskio.c: 135:             if(SD_SPI_SectorWrite(sector, buff
      +                          , count) == 1)
 16156   009062  C04F  F032         	movff	disk_write@sector,SD_SPI_SectorWrite@sector_address
 16157   009066  C050  F033         	movff	disk_write@sector+1,SD_SPI_SectorWrite@sector_address+1
 16158   00906A  C051  F034         	movff	disk_write@sector+2,SD_SPI_SectorWrite@sector_address+2
 16159   00906E  C052  F035         	movff	disk_write@sector+3,SD_SPI_SectorWrite@sector_address+3
 16160   009072  C04D  F036         	movff	disk_write@buff,SD_SPI_SectorWrite@buffer
 16161   009076  C04E  F037         	movff	disk_write@buff+1,SD_SPI_SectorWrite@buffer+1
 16162   00907A  C053  F038         	movff	disk_write@count,SD_SPI_SectorWrite@sector_count
 16163   00907E  C054  F039         	movff	disk_write@count+1,SD_SPI_SectorWrite@sector_count+1
 16164   009082  EC82  F04D         	call	_SD_SPI_SectorWrite	;wreg free
 16165   009086  06E8               	decf	wreg,f,c
 16166   009088  A4D8               	btfss	status,2,c
 16167   00908A  EF49  F048         	goto	u7721
 16168   00908E  EF4B  F048         	goto	u7720
 16169   009092                     u7721:
 16170   009092  EF4F  F048         	goto	l6183
 16171   009096                     u7720:
 16172   009096                     
 16173                           ;mcc_generated_files/fatfs/diskio.c: 136:             {;mcc_generated_files/fatfs/diskio
      +                          .c: 137:                 res = RES_OK;
 16174   009096  0E00               	movlw	0
 16175   009098  6E58               	movwf	disk_write@res^0,c
 16176                           
 16177                           ;mcc_generated_files/fatfs/diskio.c: 138:             }
 16178   00909A  EF64  F048         	goto	l6189
 16179   00909E                     l6183:
 16180                           
 16181                           ;mcc_generated_files/fatfs/diskio.c: 140:             {;mcc_generated_files/fatfs/diskio
      +                          .c: 141:                 res = RES_ERROR;
 16182   00909E  0E01               	movlw	1
 16183   0090A0  6E58               	movwf	disk_write@res^0,c
 16184   0090A2  EF64  F048         	goto	l6189
 16185   0090A6                     l6187:
 16186   0090A6  5057               	movf	disk_write@pdrv^0,w,c
 16187   0090A8  6E55               	movwf	??_disk_write^0,c
 16188   0090AA  6A56               	clrf	(??_disk_write+1)^0,c
 16189                           
 16190                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16191                           ; Switch size 1, requested type "simple"
 16192                           ; Number of cases is 1, Range of values is 0 to 0
 16193                           ; switch strategies available:
 16194                           ; Name         Instructions Cycles
 16195                           ; simple_byte            4     3 (average)
 16196                           ;	Chosen strategy is simple_byte
 16197   0090AC  5056               	movf	(??_disk_write+1)^0,w,c
 16198   0090AE  0A00               	xorlw	0	; case 0
 16199   0090B0  B4D8               	btfsc	status,2,c
 16200   0090B2  EF5D  F048         	goto	l9295
 16201   0090B6  EF64  F048         	goto	l6189
 16202   0090BA                     l9295:
 16203                           
 16204                           ; Switch size 1, requested type "simple"
 16205                           ; Number of cases is 1, Range of values is 0 to 0
 16206                           ; switch strategies available:
 16207                           ; Name         Instructions Cycles
 16208                           ; simple_byte            4     3 (average)
 16209                           ;	Chosen strategy is simple_byte
 16210   0090BA  5055               	movf	??_disk_write^0,w,c
 16211   0090BC  0A00               	xorlw	0	; case 0
 16212   0090BE  B4D8               	btfsc	status,2,c
 16213   0090C0  EF31  F048         	goto	l6179
 16214   0090C4  EF64  F048         	goto	l6189
 16215   0090C8                     l6189:
 16216                           
 16217                           ;mcc_generated_files/fatfs/diskio.c: 149:     return res;
 16218   0090C8  5058               	movf	disk_write@res^0,w,c
 16219   0090CA  0012               	return		;funcret
 16220   0090CC                     __end_of_disk_write:
 16221                           	callstack 0
 16222                           
 16223 ;; *************** function _SD_SPI_SectorWrite *****************
 16224 ;; Defined at:
 16225 ;;		line 426 in file "mcc_generated_files/sd_spi/sd_spi.c"
 16226 ;; Parameters:    Size  Location     Type
 16227 ;;  sector_addre    4   49[COMRAM] unsigned long 
 16228 ;;  buffer          2   53[COMRAM] PTR const unsigned char 
 16229 ;;		 -> FatFs.win(512), Fil.buf(512), drive.win(512), file.buf(512), 
 16230 ;;		 -> file(546), drive(563), FatFsDemo_Tasks@data(13), NULL(0), 
 16231 ;;		 -> STR_3(15), Fil(546), FatFs(563), 
 16232 ;;  sector_count    2   55[COMRAM] unsigned short 
 16233 ;; Auto vars:     Size  Location     Type
 16234 ;;  info           13   63[COMRAM] struct SD_ASYNC_IO
 16235 ;;  i               2   61[COMRAM] unsigned short 
 16236 ;;  status          1   60[COMRAM] unsigned char 
 16237 ;;  result          1   59[COMRAM] _Bool 
 16238 ;; Return value:  Size  Location     Type
 16239 ;;                  1    wreg      _Bool 
 16240 ;; Registers used:
 16241 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 16242 ;; Tracked objects:
 16243 ;;		On entry : 0/0
 16244 ;;		On exit  : 0/0
 16245 ;;		Unchanged: 0/0
 16246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16247 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16248 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16249 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16250 ;;      Totals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16251 ;;Total ram usage:       27 bytes
 16252 ;; Hardware stack levels used: 1
 16253 ;; Hardware stack levels required when called: 3
 16254 ;; This function calls:
 16255 ;;		_SDFAST_open
 16256 ;;		_SDSLOW_open
 16257 ;;		_SD_SPI_AsyncWriteTasks
 16258 ;;		_SPI1_Close
 16259 ;; This function is called by:
 16260 ;;		_disk_write
 16261 ;; This function uses a non-reentrant model
 16262 ;;
 16263                           
 16264                           	psect	text49
 16265   009B04                     __ptext49:
 16266                           	callstack 0
 16267   009B04                     _SD_SPI_SectorWrite:
 16268                           	callstack 25
 16269   009B04                     
 16270                           ;mcc_generated_files/sd_spi/sd_spi.c: 426: _Bool SD_SPI_SectorWrite(uint32_t sector_addr
      +                          ess, const uint8_t* buffer, uint16_t sector_count);mcc_generated_files/sd_spi/sd_spi.c: 
      +                          427: {;mcc_generated_files/sd_spi/sd_spi.c: 428:     struct SD_ASYNC_IO info;;mcc_genera
      +                          ted_files/sd_spi/sd_spi.c: 429:     uint8_t status;;mcc_generated_files/sd_spi/sd_spi.c:
      +                           430:     _Bool result = 0;
 16271   009B04  0E00               	movlw	0
 16272   009B06  6E3C               	movwf	SD_SPI_SectorWrite@result^0,c
 16273                           
 16274                           ;mcc_generated_files/sd_spi/sd_spi.c: 431:     uint16_t i;;mcc_generated_files/sd_spi/sd
      +                          _spi.c: 433:     for(i=0; i<sector_count; i++)
 16275   009B08  0E00               	movlw	0
 16276   009B0A  6E3F               	movwf	(SD_SPI_SectorWrite@i+1)^0,c
 16277   009B0C  0E00               	movlw	0
 16278   009B0E  6E3E               	movwf	SD_SPI_SectorWrite@i^0,c
 16279   009B10  EF10  F04E         	goto	l6135
 16280   009B14                     l6107:
 16281                           
 16282                           ;mcc_generated_files/sd_spi/sd_spi.c: 434:     {;mcc_generated_files/sd_spi/sd_spi.c: 43
      +                          6:         info.wNumBytes = 1 << 9;
 16283   009B14  0E02               	movlw	2
 16284   009B16  6E41               	movwf	(SD_SPI_SectorWrite@info+1)^0,c
 16285   009B18  0E00               	movlw	0
 16286   009B1A  6E40               	movwf	SD_SPI_SectorWrite@info^0,c
 16287                           
 16288                           ;mcc_generated_files/sd_spi/sd_spi.c: 437:         info.dwBytesRemaining = 1 << 9;
 16289   009B1C  0E00               	movlw	0
 16290   009B1E  6E42               	movwf	(SD_SPI_SectorWrite@info+2)^0,c
 16291   009B20  0E02               	movlw	2
 16292   009B22  6E43               	movwf	(SD_SPI_SectorWrite@info+3)^0,c
 16293   009B24  0E00               	movlw	0
 16294   009B26  6E44               	movwf	(SD_SPI_SectorWrite@info+4)^0,c
 16295   009B28  0E00               	movlw	0
 16296   009B2A  6E45               	movwf	(SD_SPI_SectorWrite@info+5)^0,c
 16297   009B2C                     
 16298                           ;mcc_generated_files/sd_spi/sd_spi.c: 438:         info.pBuffer = (uint8_t*)buffer + (i 
      +                          << 9);
 16299   009B2C  C03E  F03A         	movff	SD_SPI_SectorWrite@i,??_SD_SPI_SectorWrite
 16300   009B30  C03F  F03B         	movff	SD_SPI_SectorWrite@i+1,??_SD_SPI_SectorWrite+1
 16301   009B34  0E09               	movlw	9
 16302   009B36                     u7585:
 16303   009B36  90D8               	bcf	status,0,c
 16304   009B38  363A               	rlcf	??_SD_SPI_SectorWrite^0,f,c
 16305   009B3A  363B               	rlcf	(??_SD_SPI_SectorWrite+1)^0,f,c
 16306   009B3C  2EE8               	decfsz	wreg,f,c
 16307   009B3E  EF9B  F04D         	goto	u7585
 16308   009B42  503A               	movf	??_SD_SPI_SectorWrite^0,w,c
 16309   009B44  2436               	addwf	SD_SPI_SectorWrite@buffer^0,w,c
 16310   009B46  6E46               	movwf	(SD_SPI_SectorWrite@info+6)^0,c
 16311   009B48  503B               	movf	(??_SD_SPI_SectorWrite+1)^0,w,c
 16312   009B4A  2037               	addwfc	(SD_SPI_SectorWrite@buffer+1)^0,w,c
 16313   009B4C  6E47               	movwf	(SD_SPI_SectorWrite@info+7)^0,c
 16314   009B4E                     
 16315                           ;mcc_generated_files/sd_spi/sd_spi.c: 439:         info.dwAddress = sector_address + i;
 16316   009B4E  503E               	movf	SD_SPI_SectorWrite@i^0,w,c
 16317   009B50  2432               	addwf	SD_SPI_SectorWrite@sector_address^0,w,c
 16318   009B52  6E48               	movwf	(SD_SPI_SectorWrite@info+8)^0,c
 16319   009B54  503F               	movf	(SD_SPI_SectorWrite@i+1)^0,w,c
 16320   009B56  2033               	addwfc	(SD_SPI_SectorWrite@sector_address+1)^0,w,c
 16321   009B58  6E49               	movwf	(SD_SPI_SectorWrite@info+9)^0,c
 16322   009B5A  0E00               	movlw	0
 16323   009B5C  2034               	addwfc	(SD_SPI_SectorWrite@sector_address+2)^0,w,c
 16324   009B5E  6E4A               	movwf	(SD_SPI_SectorWrite@info+10)^0,c
 16325   009B60  0E00               	movlw	0
 16326   009B62  2035               	addwfc	(SD_SPI_SectorWrite@sector_address+3)^0,w,c
 16327   009B64  6E4B               	movwf	(SD_SPI_SectorWrite@info+11)^0,c
 16328                           
 16329                           ;mcc_generated_files/sd_spi/sd_spi.c: 440:         info.bStateVariable = 0x01;
 16330   009B66  0E01               	movlw	1
 16331   009B68  6E4C               	movwf	(SD_SPI_SectorWrite@info+12)^0,c
 16332   009B6A                     
 16333                           ;mcc_generated_files/sd_spi/sd_spi.c: 442:         if( spiMaster[SDFAST].spiOpen() == 0 
      +                          )
 16334   009B6A  0E8D               	movlw	low (_spiMaster+2)
 16335   009B6C  6EF6               	movwf	tblptrl,c
 16336   009B6E  0EFF               	movlw	high (_spiMaster+2)
 16337   009B70  6EF7               	movwf	tblptrh,c
 16338   009B72                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16339   009B72  6AF8               	clrf	tblptru,c
 16340   009B74                     	endif
 16341   009B74                     	if	0	;tblptru may be non-zero
 16342   009B74                     	endif
 16343   009B74  0009               	tblrd		*+
 16344   009B76  CFF5 F03A          	movff	tablat,??_SD_SPI_SectorWrite
 16345   009B7A  0009               	tblrd		*+
 16346   009B7C  CFF5 F03B          	movff	tablat,??_SD_SPI_SectorWrite+1
 16347   009B80  D802               	call	u7598
 16348   009B82  EFCC  F04D         	goto	u7599
 16349   009B86                     u7598:
 16350   009B86  0005               	push	
 16351   009B88  6EFA               	movwf	pclath,c
 16352   009B8A  503A               	movf	??_SD_SPI_SectorWrite^0,w,c
 16353   009B8C  6EFD               	movwf	tosl,c
 16354   009B8E  503B               	movf	(??_SD_SPI_SectorWrite+1)^0,w,c
 16355   009B90  6EFE               	movwf	tosh,c
 16356   009B92  6AFF               	clrf	tosu,c
 16357   009B94  50FA               	movf	pclath,w,c
 16358   009B96  0012               	return		;indir
 16359   009B98                     u7599:
 16360   009B98  0900               	iorlw	0
 16361   009B9A  A4D8               	btfss	status,2,c
 16362   009B9C  EFD2  F04D         	goto	u7601
 16363   009BA0  EFD4  F04D         	goto	u7600
 16364   009BA4                     u7601:
 16365   009BA4  EFD7  F04D         	goto	l181
 16366   009BA8                     u7600:
 16367   009BA8                     
 16368                           ;mcc_generated_files/sd_spi/sd_spi.c: 443:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 444:             return 0;
 16369   009BA8  0E00               	movlw	0
 16370   009BAA  EF1C  F04E         	goto	l180
 16371   009BAE                     l181:
 16372   009BAE  948B               	bcf	139,2,c	;volatile
 16373   009BB0                     l6119:
 16374                           
 16375                           ;mcc_generated_files/sd_spi/sd_spi.c: 449:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 450:             status = SD_SPI_AsyncWriteTasks(&info);
 16376   009BB0  0E40               	movlw	low SD_SPI_SectorWrite@info
 16377   009BB2  6E23               	movwf	SD_SPI_AsyncWriteTasks@info^0,c
 16378   009BB4  0E00               	movlw	high SD_SPI_SectorWrite@info
 16379   009BB6  6E24               	movwf	(SD_SPI_AsyncWriteTasks@info+1)^0,c
 16380   009BB8  ECC7  F069         	call	_SD_SPI_AsyncWriteTasks	;wreg free
 16381   009BBC  6E3D               	movwf	SD_SPI_SectorWrite@status^0,c
 16382   009BBE                     
 16383                           ;mcc_generated_files/sd_spi/sd_spi.c: 451:             if(status == 0x00)
 16384   009BBE  503D               	movf	SD_SPI_SectorWrite@status^0,w,c
 16385   009BC0  A4D8               	btfss	status,2,c
 16386   009BC2  EFE5  F04D         	goto	u7611
 16387   009BC6  EFE7  F04D         	goto	u7610
 16388   009BCA                     u7611:
 16389   009BCA  EFEB  F04D         	goto	l6127
 16390   009BCE                     u7610:
 16391   009BCE                     
 16392                           ;mcc_generated_files/sd_spi/sd_spi.c: 452:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 453:                 result = 1;
 16393   009BCE  0E01               	movlw	1
 16394   009BD0  6E3C               	movwf	SD_SPI_SectorWrite@result^0,c
 16395                           
 16396                           ;mcc_generated_files/sd_spi/sd_spi.c: 454:                 break;
 16397   009BD2  EFF5  F04D         	goto	l189
 16398   009BD6                     l6127:
 16399   009BD6  283D               	incf	SD_SPI_SectorWrite@status^0,w,c
 16400   009BD8  A4D8               	btfss	status,2,c
 16401   009BDA  EFF1  F04D         	goto	u7621
 16402   009BDE  EFF3  F04D         	goto	u7620
 16403   009BE2                     u7621:
 16404   009BE2  EFD8  F04D         	goto	l6119
 16405   009BE6                     u7620:
 16406   009BE6                     
 16407                           ;mcc_generated_files/sd_spi/sd_spi.c: 457:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 458:                 result = 0;
 16408   009BE6  0E00               	movlw	0
 16409   009BE8  6E3C               	movwf	SD_SPI_SectorWrite@result^0,c
 16410   009BEA                     l189:
 16411   009BEA  848B               	bsf	139,2,c	;volatile
 16412   009BEC                     
 16413                           ;mcc_generated_files/sd_spi/sd_spi.c: 464:         spiMaster[SDFAST].spiClose();
 16414   009BEC  0E8B               	movlw	low _spiMaster
 16415   009BEE  6EF6               	movwf	tblptrl,c
 16416   009BF0                     	if	1	;There is more than 1 active tblptr byte
 16417   009BF0  0EFF               	movlw	high _spiMaster
 16418   009BF2  6EF7               	movwf	tblptrh,c
 16419   009BF4                     	endif
 16420   009BF4                     	if	1	;There are 3 active tblptr bytes
 16421   009BF4  0E00               	movlw	low (_spiMaster shr (0+16))
 16422   009BF6  6EF8               	movwf	tblptru,c
 16423   009BF8                     	endif
 16424   009BF8  0009               	tblrd		*+
 16425   009BFA  CFF5 F03A          	movff	tablat,??_SD_SPI_SectorWrite
 16426   009BFE  0009               	tblrd		*+
 16427   009C00  CFF5 F03B          	movff	tablat,??_SD_SPI_SectorWrite+1
 16428   009C04  D802               	call	u7638
 16429   009C06  EF0E  F04E         	goto	u7639
 16430   009C0A                     u7638:
 16431   009C0A  0005               	push	
 16432   009C0C  6EFA               	movwf	pclath,c
 16433   009C0E  503A               	movf	??_SD_SPI_SectorWrite^0,w,c
 16434   009C10  6EFD               	movwf	tosl,c
 16435   009C12  503B               	movf	(??_SD_SPI_SectorWrite+1)^0,w,c
 16436   009C14  6EFE               	movwf	tosh,c
 16437   009C16  6AFF               	clrf	tosu,c
 16438   009C18  50FA               	movf	pclath,w,c
 16439   009C1A  0012               	return		;indir
 16440   009C1C                     u7639:
 16441   009C1C                     
 16442                           ;mcc_generated_files/sd_spi/sd_spi.c: 465:     }
 16443   009C1C  4A3E               	infsnz	SD_SPI_SectorWrite@i^0,f,c
 16444   009C1E  2A3F               	incf	(SD_SPI_SectorWrite@i+1)^0,f,c
 16445   009C20                     l6135:
 16446   009C20  5038               	movf	SD_SPI_SectorWrite@sector_count^0,w,c
 16447   009C22  5C3E               	subwf	SD_SPI_SectorWrite@i^0,w,c
 16448   009C24  5039               	movf	(SD_SPI_SectorWrite@sector_count+1)^0,w,c
 16449   009C26  583F               	subwfb	(SD_SPI_SectorWrite@i+1)^0,w,c
 16450   009C28  A0D8               	btfss	status,0,c
 16451   009C2A  EF19  F04E         	goto	u7641
 16452   009C2E  EF1B  F04E         	goto	u7640
 16453   009C32                     u7641:
 16454   009C32  EF8A  F04D         	goto	l6107
 16455   009C36                     u7640:
 16456   009C36                     
 16457                           ;mcc_generated_files/sd_spi/sd_spi.c: 467:     return result;
 16458   009C36  503C               	movf	SD_SPI_SectorWrite@result^0,w,c
 16459   009C38                     l180:
 16460   009C38  0012               	return		;funcret
 16461   009C3A                     __end_of_SD_SPI_SectorWrite:
 16462                           	callstack 0
 16463                           
 16464 ;; *************** function _SD_SPI_AsyncWriteTasks *****************
 16465 ;; Defined at:
 16466 ;;		line 1001 in file "mcc_generated_files/sd_spi/sd_spi.c"
 16467 ;; Parameters:    Size  Location     Type
 16468 ;;  info            2   34[COMRAM] PTR struct SD_ASYNC_IO
 16469 ;;		 -> SD_SPI_SectorWrite@info(13), 
 16470 ;; Auto vars:     Size  Location     Type
 16471 ;;  response        5   40[COMRAM] struct .
 16472 ;;  preEraseBloc    4   45[COMRAM] unsigned long 
 16473 ;; Return value:  Size  Location     Type
 16474 ;;                  1    wreg      unsigned char 
 16475 ;; Registers used:
 16476 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 16477 ;; Tracked objects:
 16478 ;;		On entry : 0/0
 16479 ;;		On exit  : 0/0
 16480 ;;		Unchanged: 0/0
 16481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16482 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16483 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16484 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16485 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16486 ;;Total ram usage:       15 bytes
 16487 ;; Hardware stack levels used: 1
 16488 ;; Hardware stack levels required when called: 2
 16489 ;; This function calls:
 16490 ;;		_SD_SendCmd
 16491 ;;		_SPI1_ExchangeBlock
 16492 ;;		_SPI1_ExchangeByte
 16493 ;; This function is called by:
 16494 ;;		_SD_SPI_SectorWrite
 16495 ;; This function uses a non-reentrant model
 16496 ;;
 16497                           
 16498                           	psect	text50
 16499   00D38E                     __ptext50:
 16500                           	callstack 0
 16501   00D38E                     _SD_SPI_AsyncWriteTasks:
 16502                           	callstack 25
 16503   00D38E                     
 16504                           ;mcc_generated_files/sd_spi/sd_spi.c: 1001: static uint8_t SD_SPI_AsyncWriteTasks(struct
      +                           SD_ASYNC_IO* info);mcc_generated_files/sd_spi/sd_spi.c: 1002: {;mcc_generated_files/sd_
      +                          spi/sd_spi.c: 1003:     static uint8_t data_byte;;mcc_generated_files/sd_spi/sd_spi.c: 1
      +                          004:     static uint16_t blockCounter;;mcc_generated_files/sd_spi/sd_spi.c: 1005:     st
      +                          atic uint32_t WriteTimeout;;mcc_generated_files/sd_spi/sd_spi.c: 1006:     static uint8_
      +                          t command;;mcc_generated_files/sd_spi/sd_spi.c: 1007:     uint32_t preEraseBlockCount;
 16505   00D38E  EFF7  F06C         	goto	l5913
 16506   00D392                     l5727:
 16507                           
 16508                           ;mcc_generated_files/sd_spi/sd_spi.c: 1014:             return 0x00;
 16509   00D392  0E00               	movlw	0
 16510   00D394  EF22  F06D         	goto	l317
 16511   00D398                     l5731:
 16512                           
 16513                           ;mcc_generated_files/sd_spi/sd_spi.c: 1018:             mediaInformation.state = SD_STAT
      +                          E_BUSY;
 16514   00D398  0E02               	movlw	2
 16515   00D39A  0101               	movlb	1	; () banked
 16516   00D39C  6F53               	movwf	(_mediaInformation+3)& (0+255),b
 16517                           
 16518                           ;mcc_generated_files/sd_spi/sd_spi.c: 1019:             blockCounter = 512u;
 16519   00D39E  0E02               	movlw	2
 16520   00D3A0  0100               	movlb	0	; () banked
 16521   00D3A2  6FF9               	movwf	(SD_SPI_AsyncWriteTasks@blockCounter+1)& (0+255),b
 16522   00D3A4  0E00               	movlw	0
 16523   00D3A6  6FF8               	movwf	SD_SPI_AsyncWriteTasks@blockCounter& (0+255),b
 16524   00D3A8                     
 16525                           ; BSR set to: 0
 16526                           ;mcc_generated_files/sd_spi/sd_spi.c: 1024:             ioInfo = *info;
 16527   00D3A8  C023  FFD9         	movff	SD_SPI_AsyncWriteTasks@info,fsr2l
 16528   00D3AC  C024  FFDA         	movff	SD_SPI_AsyncWriteTasks@info+1,fsr2h
 16529   00D3B0  EE11  F059         	lfsr	1,_ioInfo
 16530   00D3B4  0E0C               	movlw	12
 16531   00D3B6                     u6901:
 16532   00D3B6  CFDB FFE3          	movff	plusw2,plusw1
 16533   00D3BA  06E8               	decf	wreg,f,c
 16534   00D3BC  E2FC               	bc	u6901
 16535   00D3BE                     
 16536                           ; BSR set to: 0
 16537                           ;mcc_generated_files/sd_spi/sd_spi.c: 1028:             if(ioInfo.dwBytesRemaining <= 51
      +                          2u)
 16538   00D3BE  0101               	movlb	1	; () banked
 16539   00D3C0  515E               	movf	(_ioInfo+5)& (0+255),w,b
 16540   00D3C2  115D               	iorwf	(_ioInfo+4)& (0+255),w,b
 16541   00D3C4  E108               	bnz	u6911
 16542   00D3C6  055B               	decf	(_ioInfo+2)& (0+255),w,b
 16543   00D3C8  0E02               	movlw	2
 16544   00D3CA  595C               	subwfb	(_ioInfo+3)& (0+255),w,b
 16545   00D3CC  B0D8               	btfsc	status,0,c
 16546   00D3CE  EFEB  F069         	goto	u6911
 16547   00D3D2  EFED  F069         	goto	u6910
 16548   00D3D6                     u6911:
 16549   00D3D6  EFF2  F069         	goto	l5739
 16550   00D3DA                     u6910:
 16551   00D3DA                     
 16552                           ; BSR set to: 1
 16553                           ;mcc_generated_files/sd_spi/sd_spi.c: 1029:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1030:                 command = SD_WRITE_SINGLE_BLOCK;
 16554   00D3DA  0E0A               	movlw	10
 16555   00D3DC  0100               	movlb	0	; () banked
 16556   00D3DE  6FFD               	movwf	SD_SPI_AsyncWriteTasks@command& (0+255),b
 16557                           
 16558                           ;mcc_generated_files/sd_spi/sd_spi.c: 1031:             }
 16559   00D3E0  EF46  F06A         	goto	l5753
 16560   00D3E4                     l5739:
 16561                           
 16562                           ; BSR set to: 1
 16563                           ;mcc_generated_files/sd_spi/sd_spi.c: 1033:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1034:                 command = SD_WRITE_MULTI_BLOCK;
 16564   00D3E4  0E0B               	movlw	11
 16565   00D3E6  0100               	movlb	0	; () banked
 16566   00D3E8  6FFD               	movwf	SD_SPI_AsyncWriteTasks@command& (0+255),b
 16567   00D3EA                     
 16568                           ; BSR set to: 0
 16569                           ;mcc_generated_files/sd_spi/sd_spi.c: 1037:                 preEraseBlockCount = (ioInfo
      +                          .dwBytesRemaining >> 9);
 16570   00D3EA  C15B  F025         	movff	_ioInfo+2,??_SD_SPI_AsyncWriteTasks
 16571   00D3EE  C15C  F026         	movff	_ioInfo+3,??_SD_SPI_AsyncWriteTasks+1
 16572   00D3F2  C15D  F027         	movff	_ioInfo+4,??_SD_SPI_AsyncWriteTasks+2
 16573   00D3F6  C15E  F028         	movff	_ioInfo+5,??_SD_SPI_AsyncWriteTasks+3
 16574   00D3FA  0E0A               	movlw	10
 16575   00D3FC  EF05  F06A         	goto	u6920
 16576   00D400                     u6925:
 16577   00D400  90D8               	bcf	status,0,c
 16578   00D402  3228               	rrcf	(??_SD_SPI_AsyncWriteTasks+3)^0,f,c
 16579   00D404  3227               	rrcf	(??_SD_SPI_AsyncWriteTasks+2)^0,f,c
 16580   00D406  3226               	rrcf	(??_SD_SPI_AsyncWriteTasks+1)^0,f,c
 16581   00D408  3225               	rrcf	??_SD_SPI_AsyncWriteTasks^0,f,c
 16582   00D40A                     u6920:
 16583   00D40A  2EE8               	decfsz	wreg,f,c
 16584   00D40C  EF00  F06A         	goto	u6925
 16585   00D410  C025  F02E         	movff	??_SD_SPI_AsyncWriteTasks,SD_SPI_AsyncWriteTasks@preEraseBlockCount
 16586   00D414  C026  F02F         	movff	??_SD_SPI_AsyncWriteTasks+1,SD_SPI_AsyncWriteTasks@preEraseBlockCount+1
 16587   00D418  C027  F030         	movff	??_SD_SPI_AsyncWriteTasks+2,SD_SPI_AsyncWriteTasks@preEraseBlockCount+2
 16588   00D41C  C028  F031         	movff	??_SD_SPI_AsyncWriteTasks+3,SD_SPI_AsyncWriteTasks@preEraseBlockCount+3
 16589   00D420                     
 16590                           ; BSR set to: 0
 16591                           ;mcc_generated_files/sd_spi/sd_spi.c: 1039:                 if(preEraseBlockCount == 0)
 16592   00D420  502E               	movf	SD_SPI_AsyncWriteTasks@preEraseBlockCount^0,w,c
 16593   00D422  102F               	iorwf	(SD_SPI_AsyncWriteTasks@preEraseBlockCount+1)^0,w,c
 16594   00D424  1030               	iorwf	(SD_SPI_AsyncWriteTasks@preEraseBlockCount+2)^0,w,c
 16595   00D426  1031               	iorwf	(SD_SPI_AsyncWriteTasks@preEraseBlockCount+3)^0,w,c
 16596   00D428  A4D8               	btfss	status,2,c
 16597   00D42A  EF19  F06A         	goto	u6931
 16598   00D42E  EF1B  F06A         	goto	u6930
 16599   00D432                     u6931:
 16600   00D432  EF21  F06A         	goto	l5747
 16601   00D436                     u6930:
 16602   00D436                     
 16603                           ; BSR set to: 0
 16604                           ;mcc_generated_files/sd_spi/sd_spi.c: 1040:                 {;mcc_generated_files/sd_spi
      +                          /sd_spi.c: 1041:                     preEraseBlockCount++;
 16605   00D436  0E01               	movlw	1
 16606   00D438  262E               	addwf	SD_SPI_AsyncWriteTasks@preEraseBlockCount^0,f,c
 16607   00D43A  0E00               	movlw	0
 16608   00D43C  222F               	addwfc	(SD_SPI_AsyncWriteTasks@preEraseBlockCount+1)^0,f,c
 16609   00D43E  2230               	addwfc	(SD_SPI_AsyncWriteTasks@preEraseBlockCount+2)^0,f,c
 16610   00D440  2231               	addwfc	(SD_SPI_AsyncWriteTasks@preEraseBlockCount+3)^0,f,c
 16611   00D442                     l5747:
 16612                           
 16613                           ; BSR set to: 0
 16614                           ;mcc_generated_files/sd_spi/sd_spi.c: 1047:                 response = SD_SendCmd(SD_APP
      +                          _CMD, 0x00000000);
 16615   00D442  0E00               	movlw	0
 16616   00D444  6E0C               	movwf	SD_SendCmd@address^0,c
 16617   00D446  0E00               	movlw	0
 16618   00D448  6E0D               	movwf	(SD_SendCmd@address+1)^0,c
 16619   00D44A  0E00               	movlw	0
 16620   00D44C  6E0E               	movwf	(SD_SendCmd@address+2)^0,c
 16621   00D44E  0E00               	movlw	0
 16622   00D450  6E0F               	movwf	(SD_SendCmd@address+3)^0,c
 16623   00D452  0E0F               	movlw	15
 16624   00D454  EC1B  F062         	call	_SD_SendCmd
 16625   00D458  EE20  F029         	lfsr	2,SD_SPI_AsyncWriteTasks@response
 16626   00D45C  0E04               	movlw	4
 16627   00D45E                     u6941:
 16628   00D45E  CFEB FFDB          	movff	plusw0,plusw2
 16629   00D462  06E8               	decf	wreg,f,c
 16630   00D464  E2FC               	bc	u6941
 16631   00D466                     
 16632                           ;mcc_generated_files/sd_spi/sd_spi.c: 1048:                 if(response.r1._byte == 0x00
      +                          )
 16633   00D466  5029               	movf	SD_SPI_AsyncWriteTasks@response^0,w,c
 16634   00D468  A4D8               	btfss	status,2,c
 16635   00D46A  EF39  F06A         	goto	u6951
 16636   00D46E  EF3B  F06A         	goto	u6950
 16637   00D472                     u6951:
 16638   00D472  EF46  F06A         	goto	l5753
 16639   00D476                     u6950:
 16640   00D476                     
 16641                           ;mcc_generated_files/sd_spi/sd_spi.c: 1049:                 {;mcc_generated_files/sd_spi
      +                          /sd_spi.c: 1050:                     SD_SendCmd(SD_SET_WRITE_BLOCK_ERASE_COUNT , preEras
      +                          eBlockCount);
 16642   00D476  C02E  F00C         	movff	SD_SPI_AsyncWriteTasks@preEraseBlockCount,SD_SendCmd@address
 16643   00D47A  C02F  F00D         	movff	SD_SPI_AsyncWriteTasks@preEraseBlockCount+1,SD_SendCmd@address+1
 16644   00D47E  C030  F00E         	movff	SD_SPI_AsyncWriteTasks@preEraseBlockCount+2,SD_SendCmd@address+2
 16645   00D482  C031  F00F         	movff	SD_SPI_AsyncWriteTasks@preEraseBlockCount+3,SD_SendCmd@address+3
 16646   00D486  0E13               	movlw	19
 16647   00D488  EC1B  F062         	call	_SD_SendCmd
 16648   00D48C                     l5753:
 16649                           
 16650                           ;mcc_generated_files/sd_spi/sd_spi.c: 1059:             if (mediaInformation.gSDMode == 
      +                          0)
 16651   00D48C  0101               	movlb	1	; () banked
 16652   00D48E  5158               	movf	(_mediaInformation+8)& (0+255),w,b
 16653   00D490  A4D8               	btfss	status,2,c
 16654   00D492  EF4D  F06A         	goto	u6961
 16655   00D496  EF4F  F06A         	goto	u6960
 16656   00D49A                     u6961:
 16657   00D49A  EF58  F06A         	goto	l5757
 16658   00D49E                     u6960:
 16659   00D49E                     
 16660                           ; BSR set to: 1
 16661                           ;mcc_generated_files/sd_spi/sd_spi.c: 1060:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1061:                 ioInfo.dwAddress <<= 9;
 16662   00D49E  0E09               	movlw	9
 16663   00D4A0                     u6975:
 16664   00D4A0  90D8               	bcf	status,0,c
 16665   00D4A2  3761               	rlcf	(_ioInfo+8)& (0+255),f,b
 16666   00D4A4  3762               	rlcf	(_ioInfo+9)& (0+255),f,b
 16667   00D4A6  3763               	rlcf	(_ioInfo+10)& (0+255),f,b
 16668   00D4A8  3764               	rlcf	(_ioInfo+11)& (0+255),f,b
 16669   00D4AA  2EE8               	decfsz	wreg,f,c
 16670   00D4AC  EF50  F06A         	goto	u6975
 16671   00D4B0                     l5757:
 16672                           
 16673                           ; BSR set to: 1
 16674                           ;mcc_generated_files/sd_spi/sd_spi.c: 1066:             response = SD_SendCmd(command, i
      +                          oInfo.dwAddress);
 16675   00D4B0  C161  F00C         	movff	_ioInfo+8,SD_SendCmd@address
 16676   00D4B4  C162  F00D         	movff	_ioInfo+9,SD_SendCmd@address+1
 16677   00D4B8  C163  F00E         	movff	_ioInfo+10,SD_SendCmd@address+2
 16678   00D4BC  C164  F00F         	movff	_ioInfo+11,SD_SendCmd@address+3
 16679   00D4C0  0100               	movlb	0	; () banked
 16680   00D4C2  51FD               	movf	SD_SPI_AsyncWriteTasks@command& (0+255),w,b
 16681   00D4C4  EC1B  F062         	call	_SD_SendCmd
 16682   00D4C8  EE20  F029         	lfsr	2,SD_SPI_AsyncWriteTasks@response
 16683   00D4CC  0E04               	movlw	4
 16684   00D4CE                     u6981:
 16685   00D4CE  CFEB FFDB          	movff	plusw0,plusw2
 16686   00D4D2  06E8               	decf	wreg,f,c
 16687   00D4D4  E2FC               	bc	u6981
 16688   00D4D6                     
 16689                           ;mcc_generated_files/sd_spi/sd_spi.c: 1069:             if(response.r1._byte != 0x00)
 16690   00D4D6  5029               	movf	SD_SPI_AsyncWriteTasks@response^0,w,c
 16691   00D4D8  B4D8               	btfsc	status,2,c
 16692   00D4DA  EF71  F06A         	goto	u6991
 16693   00D4DE  EF73  F06A         	goto	u6990
 16694   00D4E2                     u6991:
 16695   00D4E2  EF7E  F06A         	goto	l5769
 16696   00D4E6                     u6990:
 16697   00D4E6                     
 16698                           ;mcc_generated_files/sd_spi/sd_spi.c: 1070:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1072:                 info->bStateVariable = 0xFF;
 16699   00D4E6  EE20 F00C          	lfsr	2,12
 16700   00D4EA  5023               	movf	SD_SPI_AsyncWriteTasks@info^0,w,c
 16701   00D4EC  26D9               	addwf	fsr2l,f,c
 16702   00D4EE  5024               	movf	(SD_SPI_AsyncWriteTasks@info+1)^0,w,c
 16703   00D4F0  22DA               	addwfc	fsr2h,f,c
 16704   00D4F2  0EFF               	movlw	255
 16705   00D4F4  6EDF               	movwf	indf2,c
 16706   00D4F6                     l5763:
 16707                           
 16708                           ;mcc_generated_files/sd_spi/sd_spi.c: 1073:                 return 0xFF;
 16709   00D4F6  0EFF               	movlw	255
 16710   00D4F8  EF22  F06D         	goto	l317
 16711   00D4FC                     l5769:
 16712                           
 16713                           ;mcc_generated_files/sd_spi/sd_spi.c: 1076:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1078:                 info->bStateVariable = 0x02;
 16714   00D4FC  EE20 F00C          	lfsr	2,12
 16715   00D500  5023               	movf	SD_SPI_AsyncWriteTasks@info^0,w,c
 16716   00D502  26D9               	addwf	fsr2l,f,c
 16717   00D504  5024               	movf	(SD_SPI_AsyncWriteTasks@info+1)^0,w,c
 16718   00D506  22DA               	addwfc	fsr2h,f,c
 16719   00D508  0E02               	movlw	2
 16720   00D50A  6EDF               	movwf	indf2,c
 16721   00D50C                     l5771:
 16722                           
 16723                           ;mcc_generated_files/sd_spi/sd_spi.c: 1080:             return 0x02;
 16724   00D50C  0E02               	movlw	2
 16725   00D50E  EF22  F06D         	goto	l317
 16726   00D512                     l5775:
 16727                           
 16728                           ;mcc_generated_files/sd_spi/sd_spi.c: 1085:             if(blockCounter == 512u)
 16729   00D512  0E02               	movlw	2
 16730   00D514  0100               	movlb	0	; () banked
 16731   00D516  19F9               	xorwf	(SD_SPI_AsyncWriteTasks@blockCounter+1)& (0+255),w,b
 16732   00D518  11F8               	iorwf	SD_SPI_AsyncWriteTasks@blockCounter& (0+255),w,b
 16733   00D51A  A4D8               	btfss	status,2,c
 16734   00D51C  EF92  F06A         	goto	u7001
 16735   00D520  EF94  F06A         	goto	u7000
 16736   00D524                     u7001:
 16737   00D524  EFCF  F06A         	goto	l5783
 16738   00D528                     u7000:
 16739   00D528                     
 16740                           ; BSR set to: 0
 16741                           ;mcc_generated_files/sd_spi/sd_spi.c: 1086:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1088:                 if(command == SD_WRITE_MULTI_BLOCK)
 16742   00D528  0E0B               	movlw	11
 16743   00D52A  19FD               	xorwf	SD_SPI_AsyncWriteTasks@command& (0+255),w,b
 16744   00D52C  A4D8               	btfss	status,2,c
 16745   00D52E  EF9B  F06A         	goto	u7011
 16746   00D532  EF9D  F06A         	goto	u7010
 16747   00D536                     u7011:
 16748   00D536  EFB7  F06A         	goto	l5781
 16749   00D53A                     u7010:
 16750   00D53A                     
 16751                           ; BSR set to: 0
 16752                           ;mcc_generated_files/sd_spi/sd_spi.c: 1089:                 {;mcc_generated_files/sd_spi
      +                          /sd_spi.c: 1090:                     (void)spiMaster[SDFAST].exchangeByte(SD_TOKEN_START
      +                          _MULTI_BLOCK);
 16753   00D53A  0E8F               	movlw	low (_spiMaster+4)
 16754   00D53C  6EF6               	movwf	tblptrl,c
 16755   00D53E  0EFF               	movlw	high (_spiMaster+4)
 16756   00D540  6EF7               	movwf	tblptrh,c
 16757   00D542                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16758   00D542  6AF8               	clrf	tblptru,c
 16759   00D544                     	endif
 16760   00D544                     	if	0	;tblptru may be non-zero
 16761   00D544                     	endif
 16762   00D544  0009               	tblrd		*+
 16763   00D546  CFF5 F025          	movff	tablat,??_SD_SPI_AsyncWriteTasks
 16764   00D54A  0009               	tblrd		*+
 16765   00D54C  CFF5 F026          	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 16766   00D550  D802               	call	u7028
 16767   00D552  EFB5  F06A         	goto	u7029
 16768   00D556                     u7028:
 16769   00D556  0005               	push	
 16770   00D558  6EFA               	movwf	pclath,c
 16771   00D55A  5025               	movf	??_SD_SPI_AsyncWriteTasks^0,w,c
 16772   00D55C  6EFD               	movwf	tosl,c
 16773   00D55E  5026               	movf	(??_SD_SPI_AsyncWriteTasks+1)^0,w,c
 16774   00D560  6EFE               	movwf	tosh,c
 16775   00D562  6AFF               	clrf	tosu,c
 16776   00D564  50FA               	movf	pclath,w,c
 16777   00D566  0EFC               	movlw	252
 16778   00D568  0012               	return		;indir
 16779   00D56A                     u7029:
 16780                           
 16781                           ;mcc_generated_files/sd_spi/sd_spi.c: 1091:                 }
 16782   00D56A  EFCF  F06A         	goto	l5783
 16783   00D56E                     l5781:
 16784                           
 16785                           ; BSR set to: 0
 16786                           ;mcc_generated_files/sd_spi/sd_spi.c: 1093:                 {;mcc_generated_files/sd_spi
      +                          /sd_spi.c: 1095:                     (void)spiMaster[SDFAST].exchangeByte(SD_TOKEN_START
      +                          );
 16787   00D56E  0E8F               	movlw	low (_spiMaster+4)
 16788   00D570  6EF6               	movwf	tblptrl,c
 16789   00D572  0EFF               	movlw	high (_spiMaster+4)
 16790   00D574  6EF7               	movwf	tblptrh,c
 16791   00D576                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16792   00D576  6AF8               	clrf	tblptru,c
 16793   00D578                     	endif
 16794   00D578                     	if	0	;tblptru may be non-zero
 16795   00D578                     	endif
 16796   00D578  0009               	tblrd		*+
 16797   00D57A  CFF5 F025          	movff	tablat,??_SD_SPI_AsyncWriteTasks
 16798   00D57E  0009               	tblrd		*+
 16799   00D580  CFF5 F026          	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 16800   00D584  D802               	call	u7038
 16801   00D586  EFCF  F06A         	goto	u7039
 16802   00D58A                     u7038:
 16803   00D58A  0005               	push	
 16804   00D58C  6EFA               	movwf	pclath,c
 16805   00D58E  5025               	movf	??_SD_SPI_AsyncWriteTasks^0,w,c
 16806   00D590  6EFD               	movwf	tosl,c
 16807   00D592  5026               	movf	(??_SD_SPI_AsyncWriteTasks+1)^0,w,c
 16808   00D594  6EFE               	movwf	tosh,c
 16809   00D596  6AFF               	clrf	tosu,c
 16810   00D598  50FA               	movf	pclath,w,c
 16811   00D59A  0EFE               	movlw	254
 16812   00D59C  0012               	return		;indir
 16813   00D59E                     u7039:
 16814   00D59E                     l5783:
 16815                           
 16816                           ;mcc_generated_files/sd_spi/sd_spi.c: 1101:             ioInfo.wNumBytes = info->wNumByt
      +                          es;
 16817   00D59E  C023  FFD9         	movff	SD_SPI_AsyncWriteTasks@info,fsr2l
 16818   00D5A2  C024  FFDA         	movff	SD_SPI_AsyncWriteTasks@info+1,fsr2h
 16819   00D5A6  CFDE F159          	movff	postinc2,_ioInfo
 16820   00D5AA  CFDD F15A          	movff	postdec2,_ioInfo+1
 16821   00D5AE                     
 16822                           ;mcc_generated_files/sd_spi/sd_spi.c: 1102:             ioInfo.pBuffer = info->pBuffer;
 16823   00D5AE  EE20 F006          	lfsr	2,6
 16824   00D5B2  5023               	movf	SD_SPI_AsyncWriteTasks@info^0,w,c
 16825   00D5B4  26D9               	addwf	fsr2l,f,c
 16826   00D5B6  5024               	movf	(SD_SPI_AsyncWriteTasks@info+1)^0,w,c
 16827   00D5B8  22DA               	addwfc	fsr2h,f,c
 16828   00D5BA  CFDE F15F          	movff	postinc2,_ioInfo+6
 16829   00D5BE  CFDD F160          	movff	postdec2,_ioInfo+7
 16830   00D5C2                     
 16831                           ;mcc_generated_files/sd_spi/sd_spi.c: 1105:             ioInfo.dwBytesRemaining -= ioInf
      +                          o.wNumBytes;
 16832   00D5C2  0101               	movlb	1	; () banked
 16833   00D5C4  5159               	movf	_ioInfo& (0+255),w,b
 16834   00D5C6  6E25               	movwf	??_SD_SPI_AsyncWriteTasks^0,c
 16835   00D5C8  515A               	movf	(_ioInfo+1)& (0+255),w,b
 16836   00D5CA  6E26               	movwf	(??_SD_SPI_AsyncWriteTasks+1)^0,c
 16837   00D5CC  6A27               	clrf	(??_SD_SPI_AsyncWriteTasks+2)^0,c
 16838   00D5CE  6A28               	clrf	(??_SD_SPI_AsyncWriteTasks+3)^0,c
 16839   00D5D0  5025               	movf	??_SD_SPI_AsyncWriteTasks^0,w,c
 16840   00D5D2  5F5B               	subwf	(_ioInfo+2)& (0+255),f,b
 16841   00D5D4  5026               	movf	(??_SD_SPI_AsyncWriteTasks+1)^0,w,c
 16842   00D5D6  5B5C               	subwfb	(_ioInfo+3)& (0+255),f,b
 16843   00D5D8  5027               	movf	(??_SD_SPI_AsyncWriteTasks+2)^0,w,c
 16844   00D5DA  5B5D               	subwfb	(_ioInfo+4)& (0+255),f,b
 16845   00D5DC  5028               	movf	(??_SD_SPI_AsyncWriteTasks+3)^0,w,c
 16846   00D5DE  5B5E               	subwfb	(_ioInfo+5)& (0+255),f,b
 16847   00D5E0                     
 16848                           ; BSR set to: 1
 16849                           ;mcc_generated_files/sd_spi/sd_spi.c: 1106:             blockCounter -= ioInfo.wNumBytes
      +                          ;
 16850   00D5E0  5159               	movf	_ioInfo& (0+255),w,b
 16851   00D5E2  0100               	movlb	0	; () banked
 16852   00D5E4  5FF8               	subwf	SD_SPI_AsyncWriteTasks@blockCounter& (0+255),f,b
 16853   00D5E6  0101               	movlb	1	; () banked
 16854   00D5E8  515A               	movf	(_ioInfo+1)& (0+255),w,b
 16855   00D5EA  0100               	movlb	0	; () banked
 16856   00D5EC  5BF9               	subwfb	(SD_SPI_AsyncWriteTasks@blockCounter+1)& (0+255),f,b
 16857   00D5EE                     
 16858                           ; BSR set to: 0
 16859                           ;mcc_generated_files/sd_spi/sd_spi.c: 1108:             spiMaster[SDFAST].exchangeBlock(
      +                          ioInfo.pBuffer, ioInfo.wNumBytes);
 16860   00D5EE  C15F  F001         	movff	_ioInfo+6,SPI1_ExchangeBlock@block
 16861   00D5F2  C160  F002         	movff	_ioInfo+7,SPI1_ExchangeBlock@block+1
 16862   00D5F6  C159  F003         	movff	_ioInfo,SPI1_ExchangeBlock@blockSize
 16863   00D5FA  C15A  F004         	movff	_ioInfo+1,SPI1_ExchangeBlock@blockSize+1
 16864   00D5FE  0E91               	movlw	low (_spiMaster+6)
 16865   00D600  6EF6               	movwf	tblptrl,c
 16866   00D602  0EFF               	movlw	high (_spiMaster+6)
 16867   00D604  6EF7               	movwf	tblptrh,c
 16868   00D606                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16869   00D606  6AF8               	clrf	tblptru,c
 16870   00D608                     	endif
 16871   00D608                     	if	0	;tblptru may be non-zero
 16872   00D608                     	endif
 16873   00D608  0009               	tblrd		*+
 16874   00D60A  CFF5 F025          	movff	tablat,??_SD_SPI_AsyncWriteTasks
 16875   00D60E  0009               	tblrd		*+
 16876   00D610  CFF5 F026          	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 16877   00D614  D802               	call	u7048
 16878   00D616  EF16  F06B         	goto	u7049
 16879   00D61A                     u7048:
 16880   00D61A  0005               	push	
 16881   00D61C  6EFA               	movwf	pclath,c
 16882   00D61E  5025               	movf	??_SD_SPI_AsyncWriteTasks^0,w,c
 16883   00D620  6EFD               	movwf	tosl,c
 16884   00D622  5026               	movf	(??_SD_SPI_AsyncWriteTasks+1)^0,w,c
 16885   00D624  6EFE               	movwf	tosh,c
 16886   00D626  6AFF               	clrf	tosu,c
 16887   00D628  50FA               	movf	pclath,w,c
 16888   00D62A  0012               	return		;indir
 16889   00D62C                     u7049:
 16890   00D62C                     
 16891                           ;mcc_generated_files/sd_spi/sd_spi.c: 1112:             if(blockCounter == 0)
 16892   00D62C  0100               	movlb	0	; () banked
 16893   00D62E  51F8               	movf	SD_SPI_AsyncWriteTasks@blockCounter& (0+255),w,b
 16894   00D630  11F9               	iorwf	(SD_SPI_AsyncWriteTasks@blockCounter+1)& (0+255),w,b
 16895   00D632  A4D8               	btfss	status,2,c
 16896   00D634  EF1E  F06B         	goto	u7051
 16897   00D638  EF20  F06B         	goto	u7050
 16898   00D63C                     u7051:
 16899   00D63C  EF86  F06A         	goto	l5771
 16900   00D640                     u7050:
 16901   00D640                     
 16902                           ; BSR set to: 0
 16903                           ;mcc_generated_files/sd_spi/sd_spi.c: 1113:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1114:                 blockCounter = 512u;
 16904   00D640  0E02               	movlw	2
 16905   00D642  6FF9               	movwf	(SD_SPI_AsyncWriteTasks@blockCounter+1)& (0+255),b
 16906   00D644  0E00               	movlw	0
 16907   00D646  6FF8               	movwf	SD_SPI_AsyncWriteTasks@blockCounter& (0+255),b
 16908   00D648                     
 16909                           ; BSR set to: 0
 16910                           ;mcc_generated_files/sd_spi/sd_spi.c: 1117:                 (void)spiMaster[SDFAST].exch
      +                          angeByte(0xFF);
 16911   00D648  0E8F               	movlw	low (_spiMaster+4)
 16912   00D64A  6EF6               	movwf	tblptrl,c
 16913   00D64C  0EFF               	movlw	high (_spiMaster+4)
 16914   00D64E  6EF7               	movwf	tblptrh,c
 16915   00D650                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16916   00D650  6AF8               	clrf	tblptru,c
 16917   00D652                     	endif
 16918   00D652                     	if	0	;tblptru may be non-zero
 16919   00D652                     	endif
 16920   00D652  0009               	tblrd		*+
 16921   00D654  CFF5 F025          	movff	tablat,??_SD_SPI_AsyncWriteTasks
 16922   00D658  0009               	tblrd		*+
 16923   00D65A  CFF5 F026          	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 16924   00D65E  D802               	call	u7068
 16925   00D660  EF3C  F06B         	goto	u7069
 16926   00D664                     u7068:
 16927   00D664  0005               	push	
 16928   00D666  6EFA               	movwf	pclath,c
 16929   00D668  5025               	movf	??_SD_SPI_AsyncWriteTasks^0,w,c
 16930   00D66A  6EFD               	movwf	tosl,c
 16931   00D66C  5026               	movf	(??_SD_SPI_AsyncWriteTasks+1)^0,w,c
 16932   00D66E  6EFE               	movwf	tosh,c
 16933   00D670  6AFF               	clrf	tosu,c
 16934   00D672  50FA               	movf	pclath,w,c
 16935   00D674  0EFF               	movlw	255
 16936   00D676  0012               	return		;indir
 16937   00D678                     u7069:
 16938   00D678                     
 16939                           ;mcc_generated_files/sd_spi/sd_spi.c: 1118:                 (void)spiMaster[SDFAST].exch
      +                          angeByte(0xFF);
 16940   00D678  0E8F               	movlw	low (_spiMaster+4)
 16941   00D67A  6EF6               	movwf	tblptrl,c
 16942   00D67C  0EFF               	movlw	high (_spiMaster+4)
 16943   00D67E  6EF7               	movwf	tblptrh,c
 16944   00D680                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16945   00D680  6AF8               	clrf	tblptru,c
 16946   00D682                     	endif
 16947   00D682                     	if	0	;tblptru may be non-zero
 16948   00D682                     	endif
 16949   00D682  0009               	tblrd		*+
 16950   00D684  CFF5 F025          	movff	tablat,??_SD_SPI_AsyncWriteTasks
 16951   00D688  0009               	tblrd		*+
 16952   00D68A  CFF5 F026          	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 16953   00D68E  D802               	call	u7078
 16954   00D690  EF54  F06B         	goto	u7079
 16955   00D694                     u7078:
 16956   00D694  0005               	push	
 16957   00D696  6EFA               	movwf	pclath,c
 16958   00D698  5025               	movf	??_SD_SPI_AsyncWriteTasks^0,w,c
 16959   00D69A  6EFD               	movwf	tosl,c
 16960   00D69C  5026               	movf	(??_SD_SPI_AsyncWriteTasks+1)^0,w,c
 16961   00D69E  6EFE               	movwf	tosh,c
 16962   00D6A0  6AFF               	clrf	tosu,c
 16963   00D6A2  50FA               	movf	pclath,w,c
 16964   00D6A4  0EFF               	movlw	255
 16965   00D6A6  0012               	return		;indir
 16966   00D6A8                     u7079:
 16967   00D6A8                     
 16968                           ;mcc_generated_files/sd_spi/sd_spi.c: 1122:                 if((spiMaster[SDFAST].exchan
      +                          geByte(0xFF) & 0x1F) != SD_TOKEN_DATA_ACCEPTED)
 16969   00D6A8  0E8F               	movlw	low (_spiMaster+4)
 16970   00D6AA  6EF6               	movwf	tblptrl,c
 16971   00D6AC  0EFF               	movlw	high (_spiMaster+4)
 16972   00D6AE  6EF7               	movwf	tblptrh,c
 16973   00D6B0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16974   00D6B0  6AF8               	clrf	tblptru,c
 16975   00D6B2                     	endif
 16976   00D6B2                     	if	0	;tblptru may be non-zero
 16977   00D6B2                     	endif
 16978   00D6B2  0009               	tblrd		*+
 16979   00D6B4  CFF5 F025          	movff	tablat,??_SD_SPI_AsyncWriteTasks
 16980   00D6B8  0009               	tblrd		*+
 16981   00D6BA  CFF5 F026          	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 16982   00D6BE  D802               	call	u7088
 16983   00D6C0  EF6C  F06B         	goto	u7089
 16984   00D6C4                     u7088:
 16985   00D6C4  0005               	push	
 16986   00D6C6  6EFA               	movwf	pclath,c
 16987   00D6C8  5025               	movf	??_SD_SPI_AsyncWriteTasks^0,w,c
 16988   00D6CA  6EFD               	movwf	tosl,c
 16989   00D6CC  5026               	movf	(??_SD_SPI_AsyncWriteTasks+1)^0,w,c
 16990   00D6CE  6EFE               	movwf	tosh,c
 16991   00D6D0  6AFF               	clrf	tosu,c
 16992   00D6D2  50FA               	movf	pclath,w,c
 16993   00D6D4  0EFF               	movlw	255
 16994   00D6D6  0012               	return		;indir
 16995   00D6D8                     u7089:
 16996   00D6D8  0B1F               	andlw	31
 16997   00D6DA  0A05               	xorlw	5
 16998   00D6DC  B4D8               	btfsc	status,2,c
 16999   00D6DE  EF73  F06B         	goto	u7091
 17000   00D6E2  EF75  F06B         	goto	u7090
 17001   00D6E6                     u7091:
 17002   00D6E6  EF80  F06B         	goto	l5809
 17003   00D6EA                     u7090:
 17004   00D6EA                     
 17005                           ;mcc_generated_files/sd_spi/sd_spi.c: 1123:                 {;mcc_generated_files/sd_spi
      +                          /sd_spi.c: 1126:                     info->bStateVariable = 0xFE;
 17006   00D6EA  EE20 F00C          	lfsr	2,12
 17007   00D6EE  5023               	movf	SD_SPI_AsyncWriteTasks@info^0,w,c
 17008   00D6F0  26D9               	addwf	fsr2l,f,c
 17009   00D6F2  5024               	movf	(SD_SPI_AsyncWriteTasks@info+1)^0,w,c
 17010   00D6F4  22DA               	addwfc	fsr2h,f,c
 17011   00D6F6  0EFE               	movlw	254
 17012   00D6F8  6EDF               	movwf	indf2,c
 17013   00D6FA                     l5805:
 17014                           
 17015                           ;mcc_generated_files/sd_spi/sd_spi.c: 1127:                     return 0x03;
 17016   00D6FA  0E03               	movlw	3
 17017   00D6FC  EF22  F06D         	goto	l317
 17018   00D700                     l5809:
 17019                           
 17020                           ;mcc_generated_files/sd_spi/sd_spi.c: 1133:                 info->bStateVariable = 0x03;
 17021   00D700  EE20 F00C          	lfsr	2,12
 17022   00D704  5023               	movf	SD_SPI_AsyncWriteTasks@info^0,w,c
 17023   00D706  26D9               	addwf	fsr2l,f,c
 17024   00D708  5024               	movf	(SD_SPI_AsyncWriteTasks@info+1)^0,w,c
 17025   00D70A  22DA               	addwfc	fsr2h,f,c
 17026   00D70C  0E03               	movlw	3
 17027   00D70E  6EDF               	movwf	indf2,c
 17028   00D710                     
 17029                           ;mcc_generated_files/sd_spi/sd_spi.c: 1134:                 WriteTimeout = (uint32_t)0xA
      +                          0000;
 17030   00D710  0E00               	movlw	0
 17031   00D712  0101               	movlb	1	; () banked
 17032   00D714  6F66               	movwf	SD_SPI_AsyncWriteTasks@WriteTimeout& (0+255),b
 17033   00D716  0E00               	movlw	0
 17034   00D718  6F67               	movwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+1)& (0+255),b
 17035   00D71A  0E0A               	movlw	10
 17036   00D71C  6F68               	movwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+2)& (0+255),b
 17037   00D71E  0E00               	movlw	0
 17038   00D720  6F69               	movwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+3)& (0+255),b
 17039   00D722  EF7D  F06B         	goto	l5805
 17040   00D726                     l5821:
 17041                           
 17042                           ;mcc_generated_files/sd_spi/sd_spi.c: 1143:             if(WriteTimeout != 0)
 17043   00D726  0101               	movlb	1	; () banked
 17044   00D728  5166               	movf	SD_SPI_AsyncWriteTasks@WriteTimeout& (0+255),w,b
 17045   00D72A  1167               	iorwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+1)& (0+255),w,b
 17046   00D72C  1168               	iorwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+2)& (0+255),w,b
 17047   00D72E  1169               	iorwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+3)& (0+255),w,b
 17048   00D730  B4D8               	btfsc	status,2,c
 17049   00D732  EF9D  F06B         	goto	u7101
 17050   00D736  EF9F  F06B         	goto	u7100
 17051   00D73A                     u7101:
 17052   00D73A  EF66  F06C         	goto	l5869
 17053   00D73E                     u7100:
 17054   00D73E                     
 17055                           ; BSR set to: 1
 17056                           ;mcc_generated_files/sd_spi/sd_spi.c: 1144:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1145:                 WriteTimeout--;
 17057   00D73E  0766               	decf	SD_SPI_AsyncWriteTasks@WriteTimeout& (0+255),f,b
 17058   00D740  0E00               	movlw	0
 17059   00D742  5B67               	subwfb	(SD_SPI_AsyncWriteTasks@WriteTimeout+1)& (0+255),f,b
 17060   00D744  5B68               	subwfb	(SD_SPI_AsyncWriteTasks@WriteTimeout+2)& (0+255),f,b
 17061   00D746  5B69               	subwfb	(SD_SPI_AsyncWriteTasks@WriteTimeout+3)& (0+255),f,b
 17062   00D748                     
 17063                           ; BSR set to: 1
 17064                           ;mcc_generated_files/sd_spi/sd_spi.c: 1146:                 (void)spiMaster[SDFAST].exch
      +                          angeByte(0xFF);
 17065   00D748  0E8F               	movlw	low (_spiMaster+4)
 17066   00D74A  6EF6               	movwf	tblptrl,c
 17067   00D74C  0EFF               	movlw	high (_spiMaster+4)
 17068   00D74E  6EF7               	movwf	tblptrh,c
 17069   00D750                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17070   00D750  6AF8               	clrf	tblptru,c
 17071   00D752                     	endif
 17072   00D752                     	if	0	;tblptru may be non-zero
 17073   00D752                     	endif
 17074   00D752  0009               	tblrd		*+
 17075   00D754  CFF5 F025          	movff	tablat,??_SD_SPI_AsyncWriteTasks
 17076   00D758  0009               	tblrd		*+
 17077   00D75A  CFF5 F026          	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 17078   00D75E  D802               	call	u7118
 17079   00D760  EFBC  F06B         	goto	u7119
 17080   00D764                     u7118:
 17081   00D764  0005               	push	
 17082   00D766  6EFA               	movwf	pclath,c
 17083   00D768  5025               	movf	??_SD_SPI_AsyncWriteTasks^0,w,c
 17084   00D76A  6EFD               	movwf	tosl,c
 17085   00D76C  5026               	movf	(??_SD_SPI_AsyncWriteTasks+1)^0,w,c
 17086   00D76E  6EFE               	movwf	tosh,c
 17087   00D770  6AFF               	clrf	tosu,c
 17088   00D772  50FA               	movf	pclath,w,c
 17089   00D774  0EFF               	movlw	255
 17090   00D776  0012               	return		;indir
 17091   00D778                     u7119:
 17092   00D778                     
 17093                           ;mcc_generated_files/sd_spi/sd_spi.c: 1147:                 data_byte = spiMaster[SDFAST
      +                          ].exchangeByte(0xFF);
 17094   00D778  0E8F               	movlw	low (_spiMaster+4)
 17095   00D77A  6EF6               	movwf	tblptrl,c
 17096   00D77C  0EFF               	movlw	high (_spiMaster+4)
 17097   00D77E  6EF7               	movwf	tblptrh,c
 17098   00D780                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17099   00D780  6AF8               	clrf	tblptru,c
 17100   00D782                     	endif
 17101   00D782                     	if	0	;tblptru may be non-zero
 17102   00D782                     	endif
 17103   00D782  0009               	tblrd		*+
 17104   00D784  CFF5 F025          	movff	tablat,??_SD_SPI_AsyncWriteTasks
 17105   00D788  0009               	tblrd		*+
 17106   00D78A  CFF5 F026          	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 17107   00D78E  D802               	call	u7128
 17108   00D790  EFD4  F06B         	goto	u7129
 17109   00D794                     u7128:
 17110   00D794  0005               	push	
 17111   00D796  6EFA               	movwf	pclath,c
 17112   00D798  5025               	movf	??_SD_SPI_AsyncWriteTasks^0,w,c
 17113   00D79A  6EFD               	movwf	tosl,c
 17114   00D79C  5026               	movf	(??_SD_SPI_AsyncWriteTasks+1)^0,w,c
 17115   00D79E  6EFE               	movwf	tosh,c
 17116   00D7A0  6AFF               	clrf	tosu,c
 17117   00D7A2  50FA               	movf	pclath,w,c
 17118   00D7A4  0EFF               	movlw	255
 17119   00D7A6  0012               	return		;indir
 17120   00D7A8                     u7129:
 17121   00D7A8  0100               	movlb	0	; () banked
 17122   00D7AA  6FFE               	movwf	SD_SPI_AsyncWriteTasks@data_byte& (0+255),b
 17123   00D7AC                     
 17124                           ; BSR set to: 0
 17125                           ;mcc_generated_files/sd_spi/sd_spi.c: 1148:                 if(data_byte != 0x00)
 17126   00D7AC  51FE               	movf	SD_SPI_AsyncWriteTasks@data_byte& (0+255),w,b
 17127   00D7AE  B4D8               	btfsc	status,2,c
 17128   00D7B0  EFDC  F06B         	goto	u7131
 17129   00D7B4  EFDE  F06B         	goto	u7130
 17130   00D7B8                     u7131:
 17131   00D7B8  EF7D  F06B         	goto	l5805
 17132   00D7BC                     u7130:
 17133   00D7BC                     
 17134                           ; BSR set to: 0
 17135                           ;mcc_generated_files/sd_spi/sd_spi.c: 1149:                 {;mcc_generated_files/sd_spi
      +                          /sd_spi.c: 1153:                     if(ioInfo.dwBytesRemaining == 0)
 17136   00D7BC  0101               	movlb	1	; () banked
 17137   00D7BE  515B               	movf	(_ioInfo+2)& (0+255),w,b
 17138   00D7C0  115C               	iorwf	(_ioInfo+3)& (0+255),w,b
 17139   00D7C2  115D               	iorwf	(_ioInfo+4)& (0+255),w,b
 17140   00D7C4  115E               	iorwf	(_ioInfo+5)& (0+255),w,b
 17141   00D7C6  A4D8               	btfss	status,2,c
 17142   00D7C8  EFE8  F06B         	goto	u7141
 17143   00D7CC  EFEA  F06B         	goto	u7140
 17144   00D7D0                     u7141:
 17145   00D7D0  EF5C  F06C         	goto	l5857
 17146   00D7D4                     u7140:
 17147   00D7D4                     
 17148                           ; BSR set to: 1
 17149                           ;mcc_generated_files/sd_spi/sd_spi.c: 1154:                     {;mcc_generated_files/sd
      +                          _spi/sd_spi.c: 1155:                         WriteTimeout = (uint32_t)0xA0000;
 17150   00D7D4  0E00               	movlw	0
 17151   00D7D6  6F66               	movwf	SD_SPI_AsyncWriteTasks@WriteTimeout& (0+255),b
 17152   00D7D8  0E00               	movlw	0
 17153   00D7DA  6F67               	movwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+1)& (0+255),b
 17154   00D7DC  0E0A               	movlw	10
 17155   00D7DE  6F68               	movwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+2)& (0+255),b
 17156   00D7E0  0E00               	movlw	0
 17157   00D7E2  6F69               	movwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+3)& (0+255),b
 17158   00D7E4                     
 17159                           ; BSR set to: 1
 17160                           ;mcc_generated_files/sd_spi/sd_spi.c: 1156:                         if(command == SD_WRI
      +                          TE_MULTI_BLOCK)
 17161   00D7E4  0E0B               	movlw	11
 17162   00D7E6  0100               	movlb	0	; () banked
 17163   00D7E8  19FD               	xorwf	SD_SPI_AsyncWriteTasks@command& (0+255),w,b
 17164   00D7EA  A4D8               	btfss	status,2,c
 17165   00D7EC  EFFA  F06B         	goto	u7151
 17166   00D7F0  EFFC  F06B         	goto	u7150
 17167   00D7F4                     u7151:
 17168   00D7F4  EF36  F06C         	goto	l338
 17169   00D7F8                     u7150:
 17170   00D7F8                     
 17171                           ; BSR set to: 0
 17172                           ;mcc_generated_files/sd_spi/sd_spi.c: 1157:                         {;mcc_generated_file
      +                          s/sd_spi/sd_spi.c: 1159:                             (void)spiMaster[SDFAST].exchangeByt
      +                          e(SD_TOKEN_STOP_TRANSMISSION);
 17173   00D7F8  0E8F               	movlw	low (_spiMaster+4)
 17174   00D7FA  6EF6               	movwf	tblptrl,c
 17175   00D7FC  0EFF               	movlw	high (_spiMaster+4)
 17176   00D7FE  6EF7               	movwf	tblptrh,c
 17177   00D800                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17178   00D800  6AF8               	clrf	tblptru,c
 17179   00D802                     	endif
 17180   00D802                     	if	0	;tblptru may be non-zero
 17181   00D802                     	endif
 17182   00D802  0009               	tblrd		*+
 17183   00D804  CFF5 F025          	movff	tablat,??_SD_SPI_AsyncWriteTasks
 17184   00D808  0009               	tblrd		*+
 17185   00D80A  CFF5 F026          	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 17186   00D80E  D802               	call	u7168
 17187   00D810  EF14  F06C         	goto	u7169
 17188   00D814                     u7168:
 17189   00D814  0005               	push	
 17190   00D816  6EFA               	movwf	pclath,c
 17191   00D818  5025               	movf	??_SD_SPI_AsyncWriteTasks^0,w,c
 17192   00D81A  6EFD               	movwf	tosl,c
 17193   00D81C  5026               	movf	(??_SD_SPI_AsyncWriteTasks+1)^0,w,c
 17194   00D81E  6EFE               	movwf	tosh,c
 17195   00D820  6AFF               	clrf	tosu,c
 17196   00D822  50FA               	movf	pclath,w,c
 17197   00D824  0EFD               	movlw	253
 17198   00D826  0012               	return		;indir
 17199   00D828                     u7169:
 17200                           
 17201                           ;mcc_generated_files/sd_spi/sd_spi.c: 1166:                             (void)spiMaster[
      +                          SDFAST].exchangeByte(0xFF);
 17202   00D828  0E8F               	movlw	low (_spiMaster+4)
 17203   00D82A  6EF6               	movwf	tblptrl,c
 17204   00D82C  0EFF               	movlw	high (_spiMaster+4)
 17205   00D82E  6EF7               	movwf	tblptrh,c
 17206   00D830                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17207   00D830  6AF8               	clrf	tblptru,c
 17208   00D832                     	endif
 17209   00D832                     	if	0	;tblptru may be non-zero
 17210   00D832                     	endif
 17211   00D832  0009               	tblrd		*+
 17212   00D834  CFF5 F025          	movff	tablat,??_SD_SPI_AsyncWriteTasks
 17213   00D838  0009               	tblrd		*+
 17214   00D83A  CFF5 F026          	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 17215   00D83E  D802               	call	u7178
 17216   00D840  EF2C  F06C         	goto	u7179
 17217   00D844                     u7178:
 17218   00D844  0005               	push	
 17219   00D846  6EFA               	movwf	pclath,c
 17220   00D848  5025               	movf	??_SD_SPI_AsyncWriteTasks^0,w,c
 17221   00D84A  6EFD               	movwf	tosl,c
 17222   00D84C  5026               	movf	(??_SD_SPI_AsyncWriteTasks+1)^0,w,c
 17223   00D84E  6EFE               	movwf	tosh,c
 17224   00D850  6AFF               	clrf	tosu,c
 17225   00D852  50FA               	movf	pclath,w,c
 17226   00D854  0EFF               	movlw	255
 17227   00D856  0012               	return		;indir
 17228   00D858                     u7179:
 17229   00D858                     
 17230                           ;mcc_generated_files/sd_spi/sd_spi.c: 1169:                             info->bStateVari
      +                          able = 0x04;
 17231   00D858  EE20 F00C          	lfsr	2,12
 17232   00D85C  5023               	movf	SD_SPI_AsyncWriteTasks@info^0,w,c
 17233   00D85E  26D9               	addwf	fsr2l,f,c
 17234   00D860  5024               	movf	(SD_SPI_AsyncWriteTasks@info+1)^0,w,c
 17235   00D862  22DA               	addwfc	fsr2h,f,c
 17236   00D864  0E04               	movlw	4
 17237   00D866  6EDF               	movwf	indf2,c
 17238   00D868  EF7D  F06B         	goto	l5805
 17239   00D86C                     l338:
 17240                           
 17241                           ; BSR set to: 0
 17242   00D86C  848B               	bsf	139,2,c	;volatile
 17243   00D86E                     
 17244                           ; BSR set to: 0
 17245                           ;mcc_generated_files/sd_spi/sd_spi.c: 1178:                             (void)spiMaster[
      +                          SDFAST].exchangeByte(0xFF);
 17246   00D86E  0E8F               	movlw	low (_spiMaster+4)
 17247   00D870  6EF6               	movwf	tblptrl,c
 17248   00D872  0EFF               	movlw	high (_spiMaster+4)
 17249   00D874  6EF7               	movwf	tblptrh,c
 17250   00D876                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17251   00D876  6AF8               	clrf	tblptru,c
 17252   00D878                     	endif
 17253   00D878                     	if	0	;tblptru may be non-zero
 17254   00D878                     	endif
 17255   00D878  0009               	tblrd		*+
 17256   00D87A  CFF5 F025          	movff	tablat,??_SD_SPI_AsyncWriteTasks
 17257   00D87E  0009               	tblrd		*+
 17258   00D880  CFF5 F026          	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 17259   00D884  D802               	call	u7188
 17260   00D886  EF4F  F06C         	goto	u7189
 17261   00D88A                     u7188:
 17262   00D88A  0005               	push	
 17263   00D88C  6EFA               	movwf	pclath,c
 17264   00D88E  5025               	movf	??_SD_SPI_AsyncWriteTasks^0,w,c
 17265   00D890  6EFD               	movwf	tosl,c
 17266   00D892  5026               	movf	(??_SD_SPI_AsyncWriteTasks+1)^0,w,c
 17267   00D894  6EFE               	movwf	tosh,c
 17268   00D896  6AFF               	clrf	tosu,c
 17269   00D898  50FA               	movf	pclath,w,c
 17270   00D89A  0EFF               	movlw	255
 17271   00D89C  0012               	return		;indir
 17272   00D89E                     u7189:
 17273   00D89E                     
 17274                           ;mcc_generated_files/sd_spi/sd_spi.c: 1179:                             info->bStateVari
      +                          able = 0x00;
 17275   00D89E  EE20 F00C          	lfsr	2,12
 17276   00D8A2  5023               	movf	SD_SPI_AsyncWriteTasks@info^0,w,c
 17277   00D8A4  26D9               	addwf	fsr2l,f,c
 17278   00D8A6  5024               	movf	(SD_SPI_AsyncWriteTasks@info+1)^0,w,c
 17279   00D8A8  22DA               	addwfc	fsr2h,f,c
 17280   00D8AA  0E00               	movlw	0
 17281   00D8AC  6EDF               	movwf	indf2,c
 17282   00D8AE                     l5851:
 17283                           
 17284                           ;mcc_generated_files/sd_spi/sd_spi.c: 1180:                             mediaInformation
      +                          .state = SD_STATE_READY_FOR_COMMAND;
 17285   00D8AE  0E01               	movlw	1
 17286   00D8B0  0101               	movlb	1	; () banked
 17287   00D8B2  6F53               	movwf	(_mediaInformation+3)& (0+255),b
 17288   00D8B4  EFC9  F069         	goto	l5727
 17289   00D8B8                     l5857:
 17290                           
 17291                           ; BSR set to: 1
 17292                           ;mcc_generated_files/sd_spi/sd_spi.c: 1186:                     info->bStateVariable = 0
      +                          x02;
 17293   00D8B8  EE20 F00C          	lfsr	2,12
 17294   00D8BC  5023               	movf	SD_SPI_AsyncWriteTasks@info^0,w,c
 17295   00D8BE  26D9               	addwf	fsr2l,f,c
 17296   00D8C0  5024               	movf	(SD_SPI_AsyncWriteTasks@info+1)^0,w,c
 17297   00D8C2  22DA               	addwfc	fsr2h,f,c
 17298   00D8C4  0E02               	movlw	2
 17299   00D8C6  6EDF               	movwf	indf2,c
 17300   00D8C8  EF86  F06A         	goto	l5771
 17301   00D8CC                     l5869:
 17302                           
 17303                           ; BSR set to: 1
 17304                           ;mcc_generated_files/sd_spi/sd_spi.c: 1196:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1199:                 info->bStateVariable = 0xFE;
 17305   00D8CC  EE20 F00C          	lfsr	2,12
 17306   00D8D0  5023               	movf	SD_SPI_AsyncWriteTasks@info^0,w,c
 17307   00D8D2  26D9               	addwf	fsr2l,f,c
 17308   00D8D4  5024               	movf	(SD_SPI_AsyncWriteTasks@info+1)^0,w,c
 17309   00D8D6  22DA               	addwfc	fsr2h,f,c
 17310   00D8D8  0EFE               	movlw	254
 17311   00D8DA  6EDF               	movwf	indf2,c
 17312   00D8DC  EF7D  F06B         	goto	l5805
 17313   00D8E0                     l5875:
 17314                           
 17315                           ;mcc_generated_files/sd_spi/sd_spi.c: 1208:             if(WriteTimeout != 0)
 17316   00D8E0  0101               	movlb	1	; () banked
 17317   00D8E2  5166               	movf	SD_SPI_AsyncWriteTasks@WriteTimeout& (0+255),w,b
 17318   00D8E4  1167               	iorwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+1)& (0+255),w,b
 17319   00D8E6  1168               	iorwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+2)& (0+255),w,b
 17320   00D8E8  1169               	iorwf	(SD_SPI_AsyncWriteTasks@WriteTimeout+3)& (0+255),w,b
 17321   00D8EA  B4D8               	btfsc	status,2,c
 17322   00D8EC  EF7A  F06C         	goto	u7191
 17323   00D8F0  EF7C  F06C         	goto	u7190
 17324   00D8F4                     u7191:
 17325   00D8F4  EFC6  F06C         	goto	l5897
 17326   00D8F8                     u7190:
 17327   00D8F8                     
 17328                           ; BSR set to: 1
 17329                           ;mcc_generated_files/sd_spi/sd_spi.c: 1209:             {;mcc_generated_files/sd_spi/sd_
      +                          spi.c: 1210:                 WriteTimeout--;
 17330   00D8F8  0766               	decf	SD_SPI_AsyncWriteTasks@WriteTimeout& (0+255),f,b
 17331   00D8FA  0E00               	movlw	0
 17332   00D8FC  5B67               	subwfb	(SD_SPI_AsyncWriteTasks@WriteTimeout+1)& (0+255),f,b
 17333   00D8FE  5B68               	subwfb	(SD_SPI_AsyncWriteTasks@WriteTimeout+2)& (0+255),f,b
 17334   00D900  5B69               	subwfb	(SD_SPI_AsyncWriteTasks@WriteTimeout+3)& (0+255),f,b
 17335   00D902                     
 17336                           ; BSR set to: 1
 17337                           ;mcc_generated_files/sd_spi/sd_spi.c: 1211:                 data_byte = spiMaster[SDFAST
      +                          ].exchangeByte(0xFF);
 17338   00D902  0E8F               	movlw	low (_spiMaster+4)
 17339   00D904  6EF6               	movwf	tblptrl,c
 17340   00D906  0EFF               	movlw	high (_spiMaster+4)
 17341   00D908  6EF7               	movwf	tblptrh,c
 17342   00D90A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17343   00D90A  6AF8               	clrf	tblptru,c
 17344   00D90C                     	endif
 17345   00D90C                     	if	0	;tblptru may be non-zero
 17346   00D90C                     	endif
 17347   00D90C  0009               	tblrd		*+
 17348   00D90E  CFF5 F025          	movff	tablat,??_SD_SPI_AsyncWriteTasks
 17349   00D912  0009               	tblrd		*+
 17350   00D914  CFF5 F026          	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 17351   00D918  D802               	call	u7208
 17352   00D91A  EF99  F06C         	goto	u7209
 17353   00D91E                     u7208:
 17354   00D91E  0005               	push	
 17355   00D920  6EFA               	movwf	pclath,c
 17356   00D922  5025               	movf	??_SD_SPI_AsyncWriteTasks^0,w,c
 17357   00D924  6EFD               	movwf	tosl,c
 17358   00D926  5026               	movf	(??_SD_SPI_AsyncWriteTasks+1)^0,w,c
 17359   00D928  6EFE               	movwf	tosh,c
 17360   00D92A  6AFF               	clrf	tosu,c
 17361   00D92C  50FA               	movf	pclath,w,c
 17362   00D92E  0EFF               	movlw	255
 17363   00D930  0012               	return		;indir
 17364   00D932                     u7209:
 17365   00D932  0100               	movlb	0	; () banked
 17366   00D934  6FFE               	movwf	SD_SPI_AsyncWriteTasks@data_byte& (0+255),b
 17367   00D936                     
 17368                           ; BSR set to: 0
 17369                           ;mcc_generated_files/sd_spi/sd_spi.c: 1213:                 if(data_byte != 0x00)
 17370   00D936  51FE               	movf	SD_SPI_AsyncWriteTasks@data_byte& (0+255),w,b
 17371   00D938  B4D8               	btfsc	status,2,c
 17372   00D93A  EFA1  F06C         	goto	u7211
 17373   00D93E  EFA3  F06C         	goto	u7210
 17374   00D942                     u7211:
 17375   00D942  EF7D  F06B         	goto	l5805
 17376   00D946                     u7210:
 17377   00D946                     
 17378                           ; BSR set to: 0
 17379   00D946  848B               	bsf	139,2,c	;volatile
 17380   00D948                     
 17381                           ; BSR set to: 0
 17382                           ;mcc_generated_files/sd_spi/sd_spi.c: 1223:                     (void)spiMaster[SDFAST].
      +                          exchangeByte(0xFF);
 17383   00D948  0E8F               	movlw	low (_spiMaster+4)
 17384   00D94A  6EF6               	movwf	tblptrl,c
 17385   00D94C  0EFF               	movlw	high (_spiMaster+4)
 17386   00D94E  6EF7               	movwf	tblptrh,c
 17387   00D950                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17388   00D950  6AF8               	clrf	tblptru,c
 17389   00D952                     	endif
 17390   00D952                     	if	0	;tblptru may be non-zero
 17391   00D952                     	endif
 17392   00D952  0009               	tblrd		*+
 17393   00D954  CFF5 F025          	movff	tablat,??_SD_SPI_AsyncWriteTasks
 17394   00D958  0009               	tblrd		*+
 17395   00D95A  CFF5 F026          	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 17396   00D95E  D802               	call	u7228
 17397   00D960  EFBC  F06C         	goto	u7229
 17398   00D964                     u7228:
 17399   00D964  0005               	push	
 17400   00D966  6EFA               	movwf	pclath,c
 17401   00D968  5025               	movf	??_SD_SPI_AsyncWriteTasks^0,w,c
 17402   00D96A  6EFD               	movwf	tosl,c
 17403   00D96C  5026               	movf	(??_SD_SPI_AsyncWriteTasks+1)^0,w,c
 17404   00D96E  6EFE               	movwf	tosh,c
 17405   00D970  6AFF               	clrf	tosu,c
 17406   00D972  50FA               	movf	pclath,w,c
 17407   00D974  0EFF               	movlw	255
 17408   00D976  0012               	return		;indir
 17409   00D978                     u7229:
 17410   00D978                     
 17411                           ;mcc_generated_files/sd_spi/sd_spi.c: 1224:                     info->bStateVariable = 0
      +                          x00;
 17412   00D978  EE20 F00C          	lfsr	2,12
 17413   00D97C  5023               	movf	SD_SPI_AsyncWriteTasks@info^0,w,c
 17414   00D97E  26D9               	addwf	fsr2l,f,c
 17415   00D980  5024               	movf	(SD_SPI_AsyncWriteTasks@info+1)^0,w,c
 17416   00D982  22DA               	addwfc	fsr2h,f,c
 17417   00D984  0E00               	movlw	0
 17418   00D986  6EDF               	movwf	indf2,c
 17419   00D988  EF57  F06C         	goto	l5851
 17420   00D98C                     l5897:
 17421                           
 17422                           ;mcc_generated_files/sd_spi/sd_spi.c: 1235:             (void)SD_SendCmd(SD_STOP_TRANSMI
      +                          SSION, 0x00000000);
 17423   00D98C  0E00               	movlw	0
 17424   00D98E  6E0C               	movwf	SD_SendCmd@address^0,c
 17425   00D990  0E00               	movlw	0
 17426   00D992  6E0D               	movwf	(SD_SendCmd@address+1)^0,c
 17427   00D994  0E00               	movlw	0
 17428   00D996  6E0E               	movwf	(SD_SendCmd@address+2)^0,c
 17429   00D998  0E00               	movlw	0
 17430   00D99A  6E0F               	movwf	(SD_SendCmd@address+3)^0,c
 17431   00D99C  0E05               	movlw	5
 17432   00D99E  EC1B  F062         	call	_SD_SendCmd
 17433   00D9A2  848B               	bsf	139,2,c	;volatile
 17434   00D9A4                     
 17435                           ;mcc_generated_files/sd_spi/sd_spi.c: 1237:             (void)spiMaster[SDFAST].exchange
      +                          Byte(0xFF);
 17436   00D9A4  0E8F               	movlw	low (_spiMaster+4)
 17437   00D9A6  6EF6               	movwf	tblptrl,c
 17438   00D9A8  0EFF               	movlw	high (_spiMaster+4)
 17439   00D9AA  6EF7               	movwf	tblptrh,c
 17440   00D9AC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17441   00D9AC  6AF8               	clrf	tblptru,c
 17442   00D9AE                     	endif
 17443   00D9AE                     	if	0	;tblptru may be non-zero
 17444   00D9AE                     	endif
 17445   00D9AE  0009               	tblrd		*+
 17446   00D9B0  CFF5 F025          	movff	tablat,??_SD_SPI_AsyncWriteTasks
 17447   00D9B4  0009               	tblrd		*+
 17448   00D9B6  CFF5 F026          	movff	tablat,??_SD_SPI_AsyncWriteTasks+1
 17449   00D9BA  D802               	call	u7238
 17450   00D9BC  EFEA  F06C         	goto	u7239
 17451   00D9C0                     u7238:
 17452   00D9C0  0005               	push	
 17453   00D9C2  6EFA               	movwf	pclath,c
 17454   00D9C4  5025               	movf	??_SD_SPI_AsyncWriteTasks^0,w,c
 17455   00D9C6  6EFD               	movwf	tosl,c
 17456   00D9C8  5026               	movf	(??_SD_SPI_AsyncWriteTasks+1)^0,w,c
 17457   00D9CA  6EFE               	movwf	tosh,c
 17458   00D9CC  6AFF               	clrf	tosu,c
 17459   00D9CE  50FA               	movf	pclath,w,c
 17460   00D9D0  0EFF               	movlw	255
 17461   00D9D2  0012               	return		;indir
 17462   00D9D4                     u7239:
 17463   00D9D4                     
 17464                           ;mcc_generated_files/sd_spi/sd_spi.c: 1238:             info->bStateVariable = 0xFF;
 17465   00D9D4  EE20 F00C          	lfsr	2,12
 17466   00D9D8  5023               	movf	SD_SPI_AsyncWriteTasks@info^0,w,c
 17467   00D9DA  26D9               	addwf	fsr2l,f,c
 17468   00D9DC  5024               	movf	(SD_SPI_AsyncWriteTasks@info+1)^0,w,c
 17469   00D9DE  22DA               	addwfc	fsr2h,f,c
 17470   00D9E0  0EFF               	movlw	255
 17471   00D9E2  6EDF               	movwf	indf2,c
 17472   00D9E4                     l5905:
 17473                           
 17474                           ;mcc_generated_files/sd_spi/sd_spi.c: 1242:             mediaInformation.state = SD_STAT
      +                          E_READY_FOR_COMMAND;
 17475   00D9E4  0E01               	movlw	1
 17476   00D9E6  0101               	movlb	1	; () banked
 17477   00D9E8  6F53               	movwf	(_mediaInformation+3)& (0+255),b
 17478   00D9EA  EF7B  F06A         	goto	l5763
 17479   00D9EE                     l5913:
 17480   00D9EE  EE20 F00C          	lfsr	2,12
 17481   00D9F2  5023               	movf	SD_SPI_AsyncWriteTasks@info^0,w,c
 17482   00D9F4  26D9               	addwf	fsr2l,f,c
 17483   00D9F6  5024               	movf	(SD_SPI_AsyncWriteTasks@info+1)^0,w,c
 17484   00D9F8  22DA               	addwfc	fsr2h,f,c
 17485   00D9FA  50DF               	movf	indf2,w,c
 17486   00D9FC  6E25               	movwf	??_SD_SPI_AsyncWriteTasks^0,c
 17487   00D9FE  6A26               	clrf	(??_SD_SPI_AsyncWriteTasks+1)^0,c
 17488                           
 17489                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17490                           ; Switch size 1, requested type "simple"
 17491                           ; Number of cases is 1, Range of values is 0 to 0
 17492                           ; switch strategies available:
 17493                           ; Name         Instructions Cycles
 17494                           ; simple_byte            4     3 (average)
 17495                           ;	Chosen strategy is simple_byte
 17496   00DA00  5026               	movf	(??_SD_SPI_AsyncWriteTasks+1)^0,w,c
 17497   00DA02  0A00               	xorlw	0	; case 0
 17498   00DA04  B4D8               	btfsc	status,2,c
 17499   00DA06  EF07  F06D         	goto	l9297
 17500   00DA0A  EFF2  F06C         	goto	l5905
 17501   00DA0E                     l9297:
 17502                           
 17503                           ; Switch size 1, requested type "simple"
 17504                           ; Number of cases is 6, Range of values is 0 to 254
 17505                           ; switch strategies available:
 17506                           ; Name         Instructions Cycles
 17507                           ; simple_byte           19    10 (average)
 17508                           ;	Chosen strategy is simple_byte
 17509   00DA0E  5025               	movf	??_SD_SPI_AsyncWriteTasks^0,w,c
 17510   00DA10  0A00               	xorlw	0	; case 0
 17511   00DA12  B4D8               	btfsc	status,2,c
 17512   00DA14  EFC9  F069         	goto	l5727
 17513   00DA18  0A01               	xorlw	1	; case 1
 17514   00DA1A  B4D8               	btfsc	status,2,c
 17515   00DA1C  EFCC  F069         	goto	l5731
 17516   00DA20  0A03               	xorlw	3	; case 2
 17517   00DA22  B4D8               	btfsc	status,2,c
 17518   00DA24  EF89  F06A         	goto	l5775
 17519   00DA28  0A01               	xorlw	1	; case 3
 17520   00DA2A  B4D8               	btfsc	status,2,c
 17521   00DA2C  EF93  F06B         	goto	l5821
 17522   00DA30  0A07               	xorlw	7	; case 4
 17523   00DA32  B4D8               	btfsc	status,2,c
 17524   00DA34  EF70  F06C         	goto	l5875
 17525   00DA38  0AFA               	xorlw	250	; case 254
 17526   00DA3A  B4D8               	btfsc	status,2,c
 17527   00DA3C  EFC6  F06C         	goto	l5897
 17528   00DA40  EFF2  F06C         	goto	l5905
 17529   00DA44                     l317:
 17530   00DA44  0012               	return		;funcret
 17531   00DA46                     __end_of_SD_SPI_AsyncWriteTasks:
 17532                           	callstack 0
 17533                           
 17534 ;; *************** function _disk_read *****************
 17535 ;; Defined at:
 17536 ;;		line 90 in file "mcc_generated_files/fatfs/diskio.c"
 17537 ;; Parameters:    Size  Location     Type
 17538 ;;  pdrv            1    wreg     unsigned char 
 17539 ;;  buff            2   73[COMRAM] PTR unsigned char 
 17540 ;;		 -> file(546), drive(563), NULL(0), Fil(546), 
 17541 ;;		 -> FatFs(563), 
 17542 ;;  sector          4   75[COMRAM] unsigned long 
 17543 ;;  count           2   79[COMRAM] unsigned int 
 17544 ;; Auto vars:     Size  Location     Type
 17545 ;;  pdrv            1   83[COMRAM] unsigned char 
 17546 ;;  res             1   84[COMRAM] enum E12
 17547 ;; Return value:  Size  Location     Type
 17548 ;;                  1    wreg      enum E12
 17549 ;; Registers used:
 17550 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 17551 ;; Tracked objects:
 17552 ;;		On entry : 0/0
 17553 ;;		On exit  : 0/0
 17554 ;;		Unchanged: 0/0
 17555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17556 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17557 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17558 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17559 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17560 ;;Total ram usage:       12 bytes
 17561 ;; Hardware stack levels used: 1
 17562 ;; Hardware stack levels required when called: 4
 17563 ;; This function calls:
 17564 ;;		_SD_SPI_SectorRead
 17565 ;; This function is called by:
 17566 ;;		_move_window
 17567 ;;		_f_open
 17568 ;;		_f_write
 17569 ;;		_f_read
 17570 ;;		_f_lseek
 17571 ;; This function uses a non-reentrant model
 17572 ;;
 17573                           
 17574                           	psect	text51
 17575   008FE4                     __ptext51:
 17576                           	callstack 0
 17577   008FE4                     _disk_read:
 17578                           	callstack 25
 17579                           
 17580                           ;incstack = 0
 17581                           ;disk_read@pdrv stored from wreg
 17582   008FE4  6E54               	movwf	disk_read@pdrv^0,c
 17583   008FE6                     
 17584                           ;mcc_generated_files/fatfs/diskio.c: 91:     BYTE pdrv,;mcc_generated_files/fatfs/diskio
      +                          .c: 92:     BYTE *buff,;mcc_generated_files/fatfs/diskio.c: 93:     DWORD sector,;mcc_ge
      +                          nerated_files/fatfs/diskio.c: 94:     UINT count;mcc_generated_files/fatfs/diskio.c: 96:
      +                           {;mcc_generated_files/fatfs/diskio.c: 97:     DRESULT res = RES_PARERR;
 17585   008FE6  0E04               	movlw	4
 17586   008FE8  6E55               	movwf	disk_read@res^0,c
 17587                           
 17588                           ;mcc_generated_files/fatfs/diskio.c: 99:     switch (pdrv) {
 17589   008FEA  EF19  F048         	goto	l6207
 17590   008FEE                     l6199:
 17591                           
 17592                           ;mcc_generated_files/fatfs/diskio.c: 101:             if(SD_SPI_SectorRead(sector, buff,
      +                           count) == 1)
 17593   008FEE  C04C  F02F         	movff	disk_read@sector,SD_SPI_SectorRead@sector_address
 17594   008FF2  C04D  F030         	movff	disk_read@sector+1,SD_SPI_SectorRead@sector_address+1
 17595   008FF6  C04E  F031         	movff	disk_read@sector+2,SD_SPI_SectorRead@sector_address+2
 17596   008FFA  C04F  F032         	movff	disk_read@sector+3,SD_SPI_SectorRead@sector_address+3
 17597   008FFE  C04A  F033         	movff	disk_read@buff,SD_SPI_SectorRead@buffer
 17598   009002  C04B  F034         	movff	disk_read@buff+1,SD_SPI_SectorRead@buffer+1
 17599   009006  C050  F035         	movff	disk_read@count,SD_SPI_SectorRead@sector_count
 17600   00900A  C051  F036         	movff	disk_read@count+1,SD_SPI_SectorRead@sector_count+1
 17601   00900E  ECE7  F04C         	call	_SD_SPI_SectorRead
 17602   009012  06E8               	decf	wreg,f,c
 17603   009014  A4D8               	btfss	status,2,c
 17604   009016  EF0F  F048         	goto	u7731
 17605   00901A  EF11  F048         	goto	u7730
 17606   00901E                     u7731:
 17607   00901E  EF15  F048         	goto	l6203
 17608   009022                     u7730:
 17609   009022                     
 17610                           ;mcc_generated_files/fatfs/diskio.c: 102:             {;mcc_generated_files/fatfs/diskio
      +                          .c: 103:                 res = RES_OK;
 17611   009022  0E00               	movlw	0
 17612   009024  6E55               	movwf	disk_read@res^0,c
 17613                           
 17614                           ;mcc_generated_files/fatfs/diskio.c: 104:             }
 17615   009026  EF2A  F048         	goto	l6209
 17616   00902A                     l6203:
 17617                           
 17618                           ;mcc_generated_files/fatfs/diskio.c: 106:             {;mcc_generated_files/fatfs/diskio
      +                          .c: 107:                 res = RES_ERROR;
 17619   00902A  0E01               	movlw	1
 17620   00902C  6E55               	movwf	disk_read@res^0,c
 17621   00902E  EF2A  F048         	goto	l6209
 17622   009032                     l6207:
 17623   009032  5054               	movf	disk_read@pdrv^0,w,c
 17624   009034  6E52               	movwf	??_disk_read^0,c
 17625   009036  6A53               	clrf	(??_disk_read+1)^0,c
 17626                           
 17627                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17628                           ; Switch size 1, requested type "simple"
 17629                           ; Number of cases is 1, Range of values is 0 to 0
 17630                           ; switch strategies available:
 17631                           ; Name         Instructions Cycles
 17632                           ; simple_byte            4     3 (average)
 17633                           ;	Chosen strategy is simple_byte
 17634   009038  5053               	movf	(??_disk_read+1)^0,w,c
 17635   00903A  0A00               	xorlw	0	; case 0
 17636   00903C  B4D8               	btfsc	status,2,c
 17637   00903E  EF23  F048         	goto	l9299
 17638   009042  EF2A  F048         	goto	l6209
 17639   009046                     l9299:
 17640                           
 17641                           ; Switch size 1, requested type "simple"
 17642                           ; Number of cases is 1, Range of values is 0 to 0
 17643                           ; switch strategies available:
 17644                           ; Name         Instructions Cycles
 17645                           ; simple_byte            4     3 (average)
 17646                           ;	Chosen strategy is simple_byte
 17647   009046  5052               	movf	??_disk_read^0,w,c
 17648   009048  0A00               	xorlw	0	; case 0
 17649   00904A  B4D8               	btfsc	status,2,c
 17650   00904C  EFF7  F047         	goto	l6199
 17651   009050  EF2A  F048         	goto	l6209
 17652   009054                     l6209:
 17653                           
 17654                           ;mcc_generated_files/fatfs/diskio.c: 115:     return res;
 17655   009054  5055               	movf	disk_read@res^0,w,c
 17656   009056  0012               	return		;funcret
 17657   009058                     __end_of_disk_read:
 17658                           	callstack 0
 17659                           
 17660 ;; *************** function _SD_SPI_SectorRead *****************
 17661 ;; Defined at:
 17662 ;;		line 382 in file "mcc_generated_files/sd_spi/sd_spi.c"
 17663 ;; Parameters:    Size  Location     Type
 17664 ;;  sector_addre    4   46[COMRAM] unsigned long 
 17665 ;;  buffer          2   50[COMRAM] PTR unsigned char 
 17666 ;;		 -> file(546), drive(563), NULL(0), Fil(546), 
 17667 ;;		 -> FatFs(563), 
 17668 ;;  sector_count    2   52[COMRAM] unsigned short 
 17669 ;; Auto vars:     Size  Location     Type
 17670 ;;  info           13   60[COMRAM] struct SD_ASYNC_IO
 17671 ;;  i               2   58[COMRAM] unsigned short 
 17672 ;;  status          1   57[COMRAM] unsigned char 
 17673 ;;  result          1   56[COMRAM] _Bool 
 17674 ;; Return value:  Size  Location     Type
 17675 ;;                  1    wreg      _Bool 
 17676 ;; Registers used:
 17677 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 17678 ;; Tracked objects:
 17679 ;;		On entry : 0/0
 17680 ;;		On exit  : 0/0
 17681 ;;		Unchanged: 0/0
 17682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17683 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17684 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17685 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17686 ;;      Totals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17687 ;;Total ram usage:       27 bytes
 17688 ;; Hardware stack levels used: 1
 17689 ;; Hardware stack levels required when called: 3
 17690 ;; This function calls:
 17691 ;;		_SDFAST_open
 17692 ;;		_SDSLOW_open
 17693 ;;		_SD_SPI_AsyncReadTasks
 17694 ;;		_SPI1_Close
 17695 ;; This function is called by:
 17696 ;;		_disk_read
 17697 ;; This function uses a non-reentrant model
 17698 ;;
 17699                           
 17700                           	psect	text52
 17701   0099CE                     __ptext52:
 17702                           	callstack 0
 17703   0099CE                     _SD_SPI_SectorRead:
 17704                           	callstack 25
 17705   0099CE                     
 17706                           ;mcc_generated_files/sd_spi/sd_spi.c: 382: _Bool SD_SPI_SectorRead(uint32_t sector_addre
      +                          ss, uint8_t* buffer, uint16_t sector_count);mcc_generated_files/sd_spi/sd_spi.c: 383: {;
      +                          mcc_generated_files/sd_spi/sd_spi.c: 384:     struct SD_ASYNC_IO info;;mcc_generated_fil
      +                          es/sd_spi/sd_spi.c: 385:     uint8_t status;;mcc_generated_files/sd_spi/sd_spi.c: 386:  
      +                             _Bool result = 0;
 17707   0099CE  0E00               	movlw	0
 17708   0099D0  6E39               	movwf	SD_SPI_SectorRead@result^0,c
 17709                           
 17710                           ;mcc_generated_files/sd_spi/sd_spi.c: 387:     uint16_t i;;mcc_generated_files/sd_spi/sd
      +                          _spi.c: 389:     for(i=0; i<sector_count; i++)
 17711   0099D2  0E00               	movlw	0
 17712   0099D4  6E3C               	movwf	(SD_SPI_SectorRead@i+1)^0,c
 17713   0099D6  0E00               	movlw	0
 17714   0099D8  6E3B               	movwf	SD_SPI_SectorRead@i^0,c
 17715   0099DA  EF75  F04D         	goto	l6171
 17716   0099DE                     l6143:
 17717                           
 17718                           ;mcc_generated_files/sd_spi/sd_spi.c: 390:     {;mcc_generated_files/sd_spi/sd_spi.c: 39
      +                          2:         info.wNumBytes = 1 << 9;
 17719   0099DE  0E02               	movlw	2
 17720   0099E0  6E3E               	movwf	(SD_SPI_SectorRead@info+1)^0,c
 17721   0099E2  0E00               	movlw	0
 17722   0099E4  6E3D               	movwf	SD_SPI_SectorRead@info^0,c
 17723                           
 17724                           ;mcc_generated_files/sd_spi/sd_spi.c: 393:         info.dwBytesRemaining = 1 << 9;
 17725   0099E6  0E00               	movlw	0
 17726   0099E8  6E3F               	movwf	(SD_SPI_SectorRead@info+2)^0,c
 17727   0099EA  0E02               	movlw	2
 17728   0099EC  6E40               	movwf	(SD_SPI_SectorRead@info+3)^0,c
 17729   0099EE  0E00               	movlw	0
 17730   0099F0  6E41               	movwf	(SD_SPI_SectorRead@info+4)^0,c
 17731   0099F2  0E00               	movlw	0
 17732   0099F4  6E42               	movwf	(SD_SPI_SectorRead@info+5)^0,c
 17733   0099F6                     
 17734                           ;mcc_generated_files/sd_spi/sd_spi.c: 394:         info.pBuffer = buffer + (i << 9);
 17735   0099F6  C03B  F037         	movff	SD_SPI_SectorRead@i,??_SD_SPI_SectorRead
 17736   0099FA  C03C  F038         	movff	SD_SPI_SectorRead@i+1,??_SD_SPI_SectorRead+1
 17737   0099FE  0E09               	movlw	9
 17738   009A00                     u7655:
 17739   009A00  90D8               	bcf	status,0,c
 17740   009A02  3637               	rlcf	??_SD_SPI_SectorRead^0,f,c
 17741   009A04  3638               	rlcf	(??_SD_SPI_SectorRead+1)^0,f,c
 17742   009A06  2EE8               	decfsz	wreg,f,c
 17743   009A08  EF00  F04D         	goto	u7655
 17744   009A0C  5037               	movf	??_SD_SPI_SectorRead^0,w,c
 17745   009A0E  2433               	addwf	SD_SPI_SectorRead@buffer^0,w,c
 17746   009A10  6E43               	movwf	(SD_SPI_SectorRead@info+6)^0,c
 17747   009A12  5038               	movf	(??_SD_SPI_SectorRead+1)^0,w,c
 17748   009A14  2034               	addwfc	(SD_SPI_SectorRead@buffer+1)^0,w,c
 17749   009A16  6E44               	movwf	(SD_SPI_SectorRead@info+7)^0,c
 17750   009A18                     
 17751                           ;mcc_generated_files/sd_spi/sd_spi.c: 395:         info.dwAddress = sector_address + i;
 17752   009A18  503B               	movf	SD_SPI_SectorRead@i^0,w,c
 17753   009A1A  242F               	addwf	SD_SPI_SectorRead@sector_address^0,w,c
 17754   009A1C  6E45               	movwf	(SD_SPI_SectorRead@info+8)^0,c
 17755   009A1E  503C               	movf	(SD_SPI_SectorRead@i+1)^0,w,c
 17756   009A20  2030               	addwfc	(SD_SPI_SectorRead@sector_address+1)^0,w,c
 17757   009A22  6E46               	movwf	(SD_SPI_SectorRead@info+9)^0,c
 17758   009A24  0E00               	movlw	0
 17759   009A26  2031               	addwfc	(SD_SPI_SectorRead@sector_address+2)^0,w,c
 17760   009A28  6E47               	movwf	(SD_SPI_SectorRead@info+10)^0,c
 17761   009A2A  0E00               	movlw	0
 17762   009A2C  2032               	addwfc	(SD_SPI_SectorRead@sector_address+3)^0,w,c
 17763   009A2E  6E48               	movwf	(SD_SPI_SectorRead@info+11)^0,c
 17764                           
 17765                           ;mcc_generated_files/sd_spi/sd_spi.c: 396:         info.bStateVariable = 0x01;
 17766   009A30  0E01               	movlw	1
 17767   009A32  6E49               	movwf	(SD_SPI_SectorRead@info+12)^0,c
 17768   009A34                     
 17769                           ;mcc_generated_files/sd_spi/sd_spi.c: 398:         if( spiMaster[SDFAST].spiOpen() == 0 
      +                          )
 17770   009A34  0E8D               	movlw	low (_spiMaster+2)
 17771   009A36  6EF6               	movwf	tblptrl,c
 17772   009A38  0EFF               	movlw	high (_spiMaster+2)
 17773   009A3A  6EF7               	movwf	tblptrh,c
 17774   009A3C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17775   009A3C  6AF8               	clrf	tblptru,c
 17776   009A3E                     	endif
 17777   009A3E                     	if	0	;tblptru may be non-zero
 17778   009A3E                     	endif
 17779   009A3E  0009               	tblrd		*+
 17780   009A40  CFF5 F037          	movff	tablat,??_SD_SPI_SectorRead
 17781   009A44  0009               	tblrd		*+
 17782   009A46  CFF5 F038          	movff	tablat,??_SD_SPI_SectorRead+1
 17783   009A4A  D802               	call	u7668
 17784   009A4C  EF31  F04D         	goto	u7669
 17785   009A50                     u7668:
 17786   009A50  0005               	push	
 17787   009A52  6EFA               	movwf	pclath,c
 17788   009A54  5037               	movf	??_SD_SPI_SectorRead^0,w,c
 17789   009A56  6EFD               	movwf	tosl,c
 17790   009A58  5038               	movf	(??_SD_SPI_SectorRead+1)^0,w,c
 17791   009A5A  6EFE               	movwf	tosh,c
 17792   009A5C  6AFF               	clrf	tosu,c
 17793   009A5E  50FA               	movf	pclath,w,c
 17794   009A60  0012               	return		;indir
 17795   009A62                     u7669:
 17796   009A62  0900               	iorlw	0
 17797   009A64  A4D8               	btfss	status,2,c
 17798   009A66  EF37  F04D         	goto	u7671
 17799   009A6A  EF39  F04D         	goto	u7670
 17800   009A6E                     u7671:
 17801   009A6E  EF3C  F04D         	goto	l164
 17802   009A72                     u7670:
 17803   009A72                     
 17804                           ;mcc_generated_files/sd_spi/sd_spi.c: 399:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 400:             return 0;
 17805   009A72  0E00               	movlw	0
 17806   009A74  EF81  F04D         	goto	l163
 17807   009A78                     l164:
 17808   009A78  948B               	bcf	139,2,c	;volatile
 17809   009A7A                     l6155:
 17810                           
 17811                           ;mcc_generated_files/sd_spi/sd_spi.c: 405:         {;mcc_generated_files/sd_spi/sd_spi.c
      +                          : 406:             status = SD_SPI_AsyncReadTasks(&info);
 17812   009A7A  0E3D               	movlw	low SD_SPI_SectorRead@info
 17813   009A7C  6E23               	movwf	SD_SPI_AsyncReadTasks@info^0,c
 17814   009A7E  0E00               	movlw	high SD_SPI_SectorRead@info
 17815   009A80  6E24               	movwf	(SD_SPI_AsyncReadTasks@info+1)^0,c
 17816   009A82  ECEC  F05F         	call	_SD_SPI_AsyncReadTasks	;wreg free
 17817   009A86  6E3A               	movwf	SD_SPI_SectorRead@status^0,c
 17818   009A88                     
 17819                           ;mcc_generated_files/sd_spi/sd_spi.c: 407:             if(status == 0x00)
 17820   009A88  503A               	movf	SD_SPI_SectorRead@status^0,w,c
 17821   009A8A  A4D8               	btfss	status,2,c
 17822   009A8C  EF4A  F04D         	goto	u7681
 17823   009A90  EF4C  F04D         	goto	u7680
 17824   009A94                     u7681:
 17825   009A94  EF50  F04D         	goto	l6163
 17826   009A98                     u7680:
 17827   009A98                     
 17828                           ;mcc_generated_files/sd_spi/sd_spi.c: 408:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 409:                 result = 1;
 17829   009A98  0E01               	movlw	1
 17830   009A9A  6E39               	movwf	SD_SPI_SectorRead@result^0,c
 17831                           
 17832                           ;mcc_generated_files/sd_spi/sd_spi.c: 410:                 break;
 17833   009A9C  EF5A  F04D         	goto	l172
 17834   009AA0                     l6163:
 17835   009AA0  283A               	incf	SD_SPI_SectorRead@status^0,w,c
 17836   009AA2  A4D8               	btfss	status,2,c
 17837   009AA4  EF56  F04D         	goto	u7691
 17838   009AA8  EF58  F04D         	goto	u7690
 17839   009AAC                     u7691:
 17840   009AAC  EF3D  F04D         	goto	l6155
 17841   009AB0                     u7690:
 17842   009AB0                     
 17843                           ;mcc_generated_files/sd_spi/sd_spi.c: 413:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 414:                 result = 0;
 17844   009AB0  0E00               	movlw	0
 17845   009AB2  6E39               	movwf	SD_SPI_SectorRead@result^0,c
 17846   009AB4                     l172:
 17847   009AB4  848B               	bsf	139,2,c	;volatile
 17848   009AB6                     
 17849                           ;mcc_generated_files/sd_spi/sd_spi.c: 420:         spiMaster[SDFAST].spiClose();
 17850   009AB6  0E8B               	movlw	low _spiMaster
 17851   009AB8  6EF6               	movwf	tblptrl,c
 17852   009ABA                     	if	1	;There is more than 1 active tblptr byte
 17853   009ABA  0EFF               	movlw	high _spiMaster
 17854   009ABC  6EF7               	movwf	tblptrh,c
 17855   009ABE                     	endif
 17856   009ABE                     	if	1	;There are 3 active tblptr bytes
 17857   009ABE  0E00               	movlw	low (_spiMaster shr (0+16))
 17858   009AC0  6EF8               	movwf	tblptru,c
 17859   009AC2                     	endif
 17860   009AC2  0009               	tblrd		*+
 17861   009AC4  CFF5 F037          	movff	tablat,??_SD_SPI_SectorRead
 17862   009AC8  0009               	tblrd		*+
 17863   009ACA  CFF5 F038          	movff	tablat,??_SD_SPI_SectorRead+1
 17864   009ACE  D802               	call	u7708
 17865   009AD0  EF73  F04D         	goto	u7709
 17866   009AD4                     u7708:
 17867   009AD4  0005               	push	
 17868   009AD6  6EFA               	movwf	pclath,c
 17869   009AD8  5037               	movf	??_SD_SPI_SectorRead^0,w,c
 17870   009ADA  6EFD               	movwf	tosl,c
 17871   009ADC  5038               	movf	(??_SD_SPI_SectorRead+1)^0,w,c
 17872   009ADE  6EFE               	movwf	tosh,c
 17873   009AE0  6AFF               	clrf	tosu,c
 17874   009AE2  50FA               	movf	pclath,w,c
 17875   009AE4  0012               	return		;indir
 17876   009AE6                     u7709:
 17877   009AE6                     
 17878                           ;mcc_generated_files/sd_spi/sd_spi.c: 421:     }
 17879   009AE6  4A3B               	infsnz	SD_SPI_SectorRead@i^0,f,c
 17880   009AE8  2A3C               	incf	(SD_SPI_SectorRead@i+1)^0,f,c
 17881   009AEA                     l6171:
 17882   009AEA  5035               	movf	SD_SPI_SectorRead@sector_count^0,w,c
 17883   009AEC  5C3B               	subwf	SD_SPI_SectorRead@i^0,w,c
 17884   009AEE  5036               	movf	(SD_SPI_SectorRead@sector_count+1)^0,w,c
 17885   009AF0  583C               	subwfb	(SD_SPI_SectorRead@i+1)^0,w,c
 17886   009AF2  A0D8               	btfss	status,0,c
 17887   009AF4  EF7E  F04D         	goto	u7711
 17888   009AF8  EF80  F04D         	goto	u7710
 17889   009AFC                     u7711:
 17890   009AFC  EFEF  F04C         	goto	l6143
 17891   009B00                     u7710:
 17892   009B00                     
 17893                           ;mcc_generated_files/sd_spi/sd_spi.c: 423:     return result;
 17894   009B00  5039               	movf	SD_SPI_SectorRead@result^0,w,c
 17895   009B02                     l163:
 17896   009B02  0012               	return		;funcret
 17897   009B04                     __end_of_SD_SPI_SectorRead:
 17898                           	callstack 0
 17899                           
 17900 ;; *************** function _SPI1_Close *****************
 17901 ;; Defined at:
 17902 ;;		line 89 in file "mcc_generated_files/spi1.c"
 17903 ;; Parameters:    Size  Location     Type
 17904 ;;		None
 17905 ;; Auto vars:     Size  Location     Type
 17906 ;;		None
 17907 ;; Return value:  Size  Location     Type
 17908 ;;                  1    wreg      void 
 17909 ;; Registers used:
 17910 ;;		None
 17911 ;; Tracked objects:
 17912 ;;		On entry : 0/0
 17913 ;;		On exit  : 0/0
 17914 ;;		Unchanged: 0/0
 17915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17920 ;;Total ram usage:        0 bytes
 17921 ;; Hardware stack levels used: 1
 17922 ;; This function calls:
 17923 ;;		Nothing
 17924 ;; This function is called by:
 17925 ;;		_SD_SPI_SectorWrite
 17926 ;;		_SD_SPI_SectorRead
 17927 ;;		_SD_SPI_MediaInitialize
 17928 ;; This function uses a non-reentrant model
 17929 ;;
 17930                           
 17931                           	psect	text53
 17932   008A96                     __ptext53:
 17933                           	callstack 0
 17934   008A96                     _SPI1_Close:
 17935                           	callstack 27
 17936   008A96                     
 17937                           ;mcc_generated_files/spi1.c: 91:     SSP1CON1bits.SSPEN = 0;
 17938   008A96  9AC6               	bcf	198,5,c	;volatile
 17939   008A98  0012               	return		;funcret
 17940   008A9A                     __end_of_SPI1_Close:
 17941                           	callstack 0
 17942                           
 17943 ;; *************** function _SD_SPI_AsyncReadTasks *****************
 17944 ;; Defined at:
 17945 ;;		line 825 in file "mcc_generated_files/sd_spi/sd_spi.c"
 17946 ;; Parameters:    Size  Location     Type
 17947 ;;  info            2   34[COMRAM] PTR struct SD_ASYNC_IO
 17948 ;;		 -> SD_SPI_SectorRead@info(13), 
 17949 ;; Auto vars:     Size  Location     Type
 17950 ;;  response        5   40[COMRAM] struct .
 17951 ;;  bData           1   45[COMRAM] unsigned char 
 17952 ;; Return value:  Size  Location     Type
 17953 ;;                  1    wreg      unsigned char 
 17954 ;; Registers used:
 17955 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 17956 ;; Tracked objects:
 17957 ;;		On entry : 0/0
 17958 ;;		On exit  : 0/0
 17959 ;;		Unchanged: 0/0
 17960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17961 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17962 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17963 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17964 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17965 ;;Total ram usage:       12 bytes
 17966 ;; Hardware stack levels used: 1
 17967 ;; Hardware stack levels required when called: 2
 17968 ;; This function calls:
 17969 ;;		_SD_SendCmd
 17970 ;;		_SPI1_ExchangeBlock
 17971 ;;		_SPI1_ExchangeByte
 17972 ;;		_memset
 17973 ;; This function is called by:
 17974 ;;		_SD_SPI_SectorRead
 17975 ;; This function uses a non-reentrant model
 17976 ;;
 17977                           
 17978                           	psect	text54
 17979   00BFD8                     __ptext54:
 17980                           	callstack 0
 17981   00BFD8                     _SD_SPI_AsyncReadTasks:
 17982                           	callstack 25
 17983   00BFD8                     
 17984                           ;mcc_generated_files/sd_spi/sd_spi.c: 825: static uint8_t SD_SPI_AsyncReadTasks(struct S
      +                          D_ASYNC_IO* info);mcc_generated_files/sd_spi/sd_spi.c: 826: {;mcc_generated_files/sd_spi
      +                          /sd_spi.c: 827:     uint8_t bData;;mcc_generated_files/sd_spi/sd_spi.c: 828:     SD_RESP
      +                          ONSE response;;mcc_generated_files/sd_spi/sd_spi.c: 829:     static uint16_t blockCounte
      +                          r;;mcc_generated_files/sd_spi/sd_spi.c: 830:     static uint32_t longTimeoutCounter;;mcc
      +                          _generated_files/sd_spi/sd_spi.c: 831:     static _Bool SingleBlockRead;
 17985   00BFD8  EFEF  F061         	goto	l6097
 17986   00BFDC                     l5965:
 17987                           
 17988                           ;mcc_generated_files/sd_spi/sd_spi.c: 837:             return 0x00;
 17989   00BFDC  0E00               	movlw	0
 17990   00BFDE  EF1A  F062         	goto	l278
 17991   00BFE2                     l5969:
 17992                           
 17993                           ;mcc_generated_files/sd_spi/sd_spi.c: 842:             mediaInformation.state = SD_STATE
      +                          _BUSY;
 17994   00BFE2  0E02               	movlw	2
 17995   00BFE4  0101               	movlb	1	; () banked
 17996   00BFE6  6F53               	movwf	(_mediaInformation+3)& (0+255),b
 17997                           
 17998                           ;mcc_generated_files/sd_spi/sd_spi.c: 843:             blockCounter = 512u;
 17999   00BFE8  0E02               	movlw	2
 18000   00BFEA  0100               	movlb	0	; () banked
 18001   00BFEC  6FFB               	movwf	(SD_SPI_AsyncReadTasks@blockCounter+1)& (0+255),b
 18002   00BFEE  0E00               	movlw	0
 18003   00BFF0  6FFA               	movwf	SD_SPI_AsyncReadTasks@blockCounter& (0+255),b
 18004   00BFF2                     
 18005                           ; BSR set to: 0
 18006                           ;mcc_generated_files/sd_spi/sd_spi.c: 844:             ioInfo = *info;
 18007   00BFF2  C023  FFD9         	movff	SD_SPI_AsyncReadTasks@info,fsr2l
 18008   00BFF6  C024  FFDA         	movff	SD_SPI_AsyncReadTasks@info+1,fsr2h
 18009   00BFFA  EE11  F059         	lfsr	1,_ioInfo
 18010   00BFFE  0E0C               	movlw	12
 18011   00C000                     u7381:
 18012   00C000  CFDB FFE3          	movff	plusw2,plusw1
 18013   00C004  06E8               	decf	wreg,f,c
 18014   00C006  E2FC               	bc	u7381
 18015   00C008                     
 18016                           ; BSR set to: 0
 18017                           ;mcc_generated_files/sd_spi/sd_spi.c: 850:             if (mediaInformation.gSDMode == 0
      +                          )
 18018   00C008  0101               	movlb	1	; () banked
 18019   00C00A  5158               	movf	(_mediaInformation+8)& (0+255),w,b
 18020   00C00C  A4D8               	btfss	status,2,c
 18021   00C00E  EF0B  F060         	goto	u7391
 18022   00C012  EF0D  F060         	goto	u7390
 18023   00C016                     u7391:
 18024   00C016  EF16  F060         	goto	l280
 18025   00C01A                     u7390:
 18026   00C01A                     
 18027                           ; BSR set to: 1
 18028                           ;mcc_generated_files/sd_spi/sd_spi.c: 851:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 852:                 ioInfo.dwAddress <<= 9;
 18029   00C01A  0E09               	movlw	9
 18030   00C01C                     u7405:
 18031   00C01C  90D8               	bcf	status,0,c
 18032   00C01E  3761               	rlcf	(_ioInfo+8)& (0+255),f,b
 18033   00C020  3762               	rlcf	(_ioInfo+9)& (0+255),f,b
 18034   00C022  3763               	rlcf	(_ioInfo+10)& (0+255),f,b
 18035   00C024  3764               	rlcf	(_ioInfo+11)& (0+255),f,b
 18036   00C026  2EE8               	decfsz	wreg,f,c
 18037   00C028  EF0E  F060         	goto	u7405
 18038   00C02C                     l280:
 18039                           
 18040                           ; BSR set to: 1
 18041                           ;mcc_generated_files/sd_spi/sd_spi.c: 854:             if(ioInfo.dwBytesRemaining <= 512
      +                          u)
 18042   00C02C  515E               	movf	(_ioInfo+5)& (0+255),w,b
 18043   00C02E  115D               	iorwf	(_ioInfo+4)& (0+255),w,b
 18044   00C030  E108               	bnz	u7411
 18045   00C032  055B               	decf	(_ioInfo+2)& (0+255),w,b
 18046   00C034  0E02               	movlw	2
 18047   00C036  595C               	subwfb	(_ioInfo+3)& (0+255),w,b
 18048   00C038  B0D8               	btfsc	status,0,c
 18049   00C03A  EF21  F060         	goto	u7411
 18050   00C03E  EF23  F060         	goto	u7410
 18051   00C042                     u7411:
 18052   00C042  EF3A  F060         	goto	l5981
 18053   00C046                     u7410:
 18054   00C046                     
 18055                           ; BSR set to: 1
 18056                           ;mcc_generated_files/sd_spi/sd_spi.c: 855:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 856:                 SingleBlockRead = 1;
 18057   00C046  0E01               	movlw	1
 18058   00C048  0100               	movlb	0	; () banked
 18059   00C04A  6FFF               	movwf	SD_SPI_AsyncReadTasks@SingleBlockRead& (0+255),b
 18060   00C04C                     
 18061                           ; BSR set to: 0
 18062                           ;mcc_generated_files/sd_spi/sd_spi.c: 857:                 response = SD_SendCmd(SD_READ
      +                          _SINGLE_BLOCK, ioInfo.dwAddress);
 18063   00C04C  C161  F00C         	movff	_ioInfo+8,SD_SendCmd@address
 18064   00C050  C162  F00D         	movff	_ioInfo+9,SD_SendCmd@address+1
 18065   00C054  C163  F00E         	movff	_ioInfo+10,SD_SendCmd@address+2
 18066   00C058  C164  F00F         	movff	_ioInfo+11,SD_SendCmd@address+3
 18067   00C05C  0E08               	movlw	8
 18068   00C05E  EC1B  F062         	call	_SD_SendCmd
 18069   00C062  EE20  F029         	lfsr	2,SD_SPI_AsyncReadTasks@response
 18070   00C066  0E04               	movlw	4
 18071   00C068                     u7421:
 18072   00C068  CFEB FFDB          	movff	plusw0,plusw2
 18073   00C06C  06E8               	decf	wreg,f,c
 18074   00C06E  E2FC               	bc	u7421
 18075                           
 18076                           ;mcc_generated_files/sd_spi/sd_spi.c: 858:             }
 18077   00C070  EF4F  F060         	goto	l5985
 18078   00C074                     l5981:
 18079                           
 18080                           ; BSR set to: 1
 18081                           ;mcc_generated_files/sd_spi/sd_spi.c: 860:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 861:                 SingleBlockRead = 0;
 18082   00C074  0E00               	movlw	0
 18083   00C076  0100               	movlb	0	; () banked
 18084   00C078  6FFF               	movwf	SD_SPI_AsyncReadTasks@SingleBlockRead& (0+255),b
 18085   00C07A                     
 18086                           ; BSR set to: 0
 18087                           ;mcc_generated_files/sd_spi/sd_spi.c: 862:                 response = SD_SendCmd(SD_READ
      +                          _MULTI_BLOCK, ioInfo.dwAddress);
 18088   00C07A  C161  F00C         	movff	_ioInfo+8,SD_SendCmd@address
 18089   00C07E  C162  F00D         	movff	_ioInfo+9,SD_SendCmd@address+1
 18090   00C082  C163  F00E         	movff	_ioInfo+10,SD_SendCmd@address+2
 18091   00C086  C164  F00F         	movff	_ioInfo+11,SD_SendCmd@address+3
 18092   00C08A  0E09               	movlw	9
 18093   00C08C  EC1B  F062         	call	_SD_SendCmd
 18094   00C090  EE20  F029         	lfsr	2,SD_SPI_AsyncReadTasks@response
 18095   00C094  0E04               	movlw	4
 18096   00C096                     u7431:
 18097   00C096  CFEB FFDB          	movff	plusw0,plusw2
 18098   00C09A  06E8               	decf	wreg,f,c
 18099   00C09C  E2FC               	bc	u7431
 18100   00C09E                     l5985:
 18101                           
 18102                           ;mcc_generated_files/sd_spi/sd_spi.c: 869:             if(response.r1._byte != 0x00)
 18103   00C09E  5029               	movf	SD_SPI_AsyncReadTasks@response^0,w,c
 18104   00C0A0  B4D8               	btfsc	status,2,c
 18105   00C0A2  EF55  F060         	goto	u7441
 18106   00C0A6  EF57  F060         	goto	u7440
 18107   00C0AA                     u7441:
 18108   00C0AA  EF62  F060         	goto	l5993
 18109   00C0AE                     u7440:
 18110   00C0AE                     
 18111                           ;mcc_generated_files/sd_spi/sd_spi.c: 870:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 872:                 info->bStateVariable = 0xFE;
 18112   00C0AE  EE20 F00C          	lfsr	2,12
 18113   00C0B2  5023               	movf	SD_SPI_AsyncReadTasks@info^0,w,c
 18114   00C0B4  26D9               	addwf	fsr2l,f,c
 18115   00C0B6  5024               	movf	(SD_SPI_AsyncReadTasks@info+1)^0,w,c
 18116   00C0B8  22DA               	addwfc	fsr2h,f,c
 18117   00C0BA  0EFE               	movlw	254
 18118   00C0BC  6EDF               	movwf	indf2,c
 18119   00C0BE                     l5989:
 18120                           
 18121                           ;mcc_generated_files/sd_spi/sd_spi.c: 873:                 return 0x01;
 18122   00C0BE  0E01               	movlw	1
 18123   00C0C0  EF1A  F062         	goto	l278
 18124   00C0C4                     l5993:
 18125                           
 18126                           ;mcc_generated_files/sd_spi/sd_spi.c: 879:             longTimeoutCounter = (uint32_t)0x
      +                          40000;
 18127   00C0C4  0E00               	movlw	0
 18128   00C0C6  0101               	movlb	1	; () banked
 18129   00C0C8  6F6A               	movwf	SD_SPI_AsyncReadTasks@longTimeoutCounter& (0+255),b
 18130   00C0CA  0E00               	movlw	0
 18131   00C0CC  6F6B               	movwf	(SD_SPI_AsyncReadTasks@longTimeoutCounter+1)& (0+255),b
 18132   00C0CE  0E04               	movlw	4
 18133   00C0D0  6F6C               	movwf	(SD_SPI_AsyncReadTasks@longTimeoutCounter+2)& (0+255),b
 18134   00C0D2  0E00               	movlw	0
 18135   00C0D4  6F6D               	movwf	(SD_SPI_AsyncReadTasks@longTimeoutCounter+3)& (0+255),b
 18136   00C0D6                     
 18137                           ; BSR set to: 1
 18138                           ;mcc_generated_files/sd_spi/sd_spi.c: 880:             info->bStateVariable = 0x03;
 18139   00C0D6  EE20 F00C          	lfsr	2,12
 18140   00C0DA  5023               	movf	SD_SPI_AsyncReadTasks@info^0,w,c
 18141   00C0DC  26D9               	addwf	fsr2l,f,c
 18142   00C0DE  5024               	movf	(SD_SPI_AsyncReadTasks@info+1)^0,w,c
 18143   00C0E0  22DA               	addwfc	fsr2h,f,c
 18144   00C0E2  0E03               	movlw	3
 18145   00C0E4  6EDF               	movwf	indf2,c
 18146   00C0E6  EF5F  F060         	goto	l5989
 18147   00C0EA                     l6001:
 18148                           
 18149                           ;mcc_generated_files/sd_spi/sd_spi.c: 888:             if(longTimeoutCounter != 0x000000
      +                          00)
 18150   00C0EA  0101               	movlb	1	; () banked
 18151   00C0EC  516A               	movf	SD_SPI_AsyncReadTasks@longTimeoutCounter& (0+255),w,b
 18152   00C0EE  116B               	iorwf	(SD_SPI_AsyncReadTasks@longTimeoutCounter+1)& (0+255),w,b
 18153   00C0F0  116C               	iorwf	(SD_SPI_AsyncReadTasks@longTimeoutCounter+2)& (0+255),w,b
 18154   00C0F2  116D               	iorwf	(SD_SPI_AsyncReadTasks@longTimeoutCounter+3)& (0+255),w,b
 18155   00C0F4  B4D8               	btfsc	status,2,c
 18156   00C0F6  EF7F  F060         	goto	u7451
 18157   00C0FA  EF81  F060         	goto	u7450
 18158   00C0FE                     u7451:
 18159   00C0FE  EFC5  F060         	goto	l6029
 18160   00C102                     u7450:
 18161   00C102                     
 18162                           ; BSR set to: 1
 18163                           ;mcc_generated_files/sd_spi/sd_spi.c: 889:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 890:                 longTimeoutCounter--;
 18164   00C102  076A               	decf	SD_SPI_AsyncReadTasks@longTimeoutCounter& (0+255),f,b
 18165   00C104  0E00               	movlw	0
 18166   00C106  5B6B               	subwfb	(SD_SPI_AsyncReadTasks@longTimeoutCounter+1)& (0+255),f,b
 18167   00C108  5B6C               	subwfb	(SD_SPI_AsyncReadTasks@longTimeoutCounter+2)& (0+255),f,b
 18168   00C10A  5B6D               	subwfb	(SD_SPI_AsyncReadTasks@longTimeoutCounter+3)& (0+255),f,b
 18169   00C10C                     
 18170                           ; BSR set to: 1
 18171                           ;mcc_generated_files/sd_spi/sd_spi.c: 891:                 bData = spiMaster[SDFAST].exc
      +                          hangeByte(0xFF);
 18172   00C10C  0E8F               	movlw	low (_spiMaster+4)
 18173   00C10E  6EF6               	movwf	tblptrl,c
 18174   00C110  0EFF               	movlw	high (_spiMaster+4)
 18175   00C112  6EF7               	movwf	tblptrh,c
 18176   00C114                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 18177   00C114  6AF8               	clrf	tblptru,c
 18178   00C116                     	endif
 18179   00C116                     	if	0	;tblptru may be non-zero
 18180   00C116                     	endif
 18181   00C116  0009               	tblrd		*+
 18182   00C118  CFF5 F025          	movff	tablat,??_SD_SPI_AsyncReadTasks
 18183   00C11C  0009               	tblrd		*+
 18184   00C11E  CFF5 F026          	movff	tablat,??_SD_SPI_AsyncReadTasks+1
 18185   00C122  D802               	call	u7468
 18186   00C124  EF9E  F060         	goto	u7469
 18187   00C128                     u7468:
 18188   00C128  0005               	push	
 18189   00C12A  6EFA               	movwf	pclath,c
 18190   00C12C  5025               	movf	??_SD_SPI_AsyncReadTasks^0,w,c
 18191   00C12E  6EFD               	movwf	tosl,c
 18192   00C130  5026               	movf	(??_SD_SPI_AsyncReadTasks+1)^0,w,c
 18193   00C132  6EFE               	movwf	tosh,c
 18194   00C134  6AFF               	clrf	tosu,c
 18195   00C136  50FA               	movf	pclath,w,c
 18196   00C138  0EFF               	movlw	255
 18197   00C13A  0012               	return		;indir
 18198   00C13C                     u7469:
 18199   00C13C  6E2E               	movwf	SD_SPI_AsyncReadTasks@bData^0,c
 18200   00C13E                     
 18201                           ;mcc_generated_files/sd_spi/sd_spi.c: 893:                 if(bData != SD_TOKEN_FLOATING
      +                          _BUS)
 18202   00C13E  282E               	incf	SD_SPI_AsyncReadTasks@bData^0,w,c
 18203   00C140  B4D8               	btfsc	status,2,c
 18204   00C142  EFA5  F060         	goto	u7471
 18205   00C146  EFA7  F060         	goto	u7470
 18206   00C14A                     u7471:
 18207   00C14A  EF5F  F060         	goto	l5989
 18208   00C14E                     u7470:
 18209   00C14E                     
 18210                           ;mcc_generated_files/sd_spi/sd_spi.c: 894:                 {;mcc_generated_files/sd_spi/
      +                          sd_spi.c: 895:                     if(bData == SD_TOKEN_START)
 18211   00C14E  0EFE               	movlw	254
 18212   00C150  182E               	xorwf	SD_SPI_AsyncReadTasks@bData^0,w,c
 18213   00C152  A4D8               	btfss	status,2,c
 18214   00C154  EFAE  F060         	goto	u7481
 18215   00C158  EFB0  F060         	goto	u7480
 18216   00C15C                     u7481:
 18217   00C15C  EFBB  F060         	goto	l6019
 18218   00C160                     u7480:
 18219   00C160                     
 18220                           ;mcc_generated_files/sd_spi/sd_spi.c: 896:                     {;mcc_generated_files/sd_
      +                          spi/sd_spi.c: 899:                         info->bStateVariable = 0x02;
 18221   00C160  EE20 F00C          	lfsr	2,12
 18222   00C164  5023               	movf	SD_SPI_AsyncReadTasks@info^0,w,c
 18223   00C166  26D9               	addwf	fsr2l,f,c
 18224   00C168  5024               	movf	(SD_SPI_AsyncReadTasks@info+1)^0,w,c
 18225   00C16A  22DA               	addwfc	fsr2h,f,c
 18226   00C16C  0E02               	movlw	2
 18227   00C16E  6EDF               	movwf	indf2,c
 18228   00C170                     l6013:
 18229                           
 18230                           ;mcc_generated_files/sd_spi/sd_spi.c: 900:                         return 0x02;
 18231   00C170  0E02               	movlw	2
 18232   00C172  EF1A  F062         	goto	l278
 18233   00C176                     l6019:
 18234                           
 18235                           ;mcc_generated_files/sd_spi/sd_spi.c: 903:                     {;mcc_generated_files/sd_
      +                          spi/sd_spi.c: 906:                         info->bStateVariable = 0xFE;
 18236   00C176  EE20 F00C          	lfsr	2,12
 18237   00C17A  5023               	movf	SD_SPI_AsyncReadTasks@info^0,w,c
 18238   00C17C  26D9               	addwf	fsr2l,f,c
 18239   00C17E  5024               	movf	(SD_SPI_AsyncReadTasks@info+1)^0,w,c
 18240   00C180  22DA               	addwfc	fsr2h,f,c
 18241   00C182  0EFE               	movlw	254
 18242   00C184  6EDF               	movwf	indf2,c
 18243   00C186  EF5F  F060         	goto	l5989
 18244   00C18A                     l6029:
 18245                           
 18246                           ; BSR set to: 1
 18247                           ;mcc_generated_files/sd_spi/sd_spi.c: 917:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 920:                 info->bStateVariable = 0xFE;
 18248   00C18A  EE20 F00C          	lfsr	2,12
 18249   00C18E  5023               	movf	SD_SPI_AsyncReadTasks@info^0,w,c
 18250   00C190  26D9               	addwf	fsr2l,f,c
 18251   00C192  5024               	movf	(SD_SPI_AsyncReadTasks@info+1)^0,w,c
 18252   00C194  22DA               	addwfc	fsr2h,f,c
 18253   00C196  0EFE               	movlw	254
 18254   00C198  6EDF               	movwf	indf2,c
 18255   00C19A  EF5F  F060         	goto	l5989
 18256   00C19E                     l6035:
 18257                           
 18258                           ;mcc_generated_files/sd_spi/sd_spi.c: 929:             if(ioInfo.dwBytesRemaining != 0x0
      +                          0000000)
 18259   00C19E  0101               	movlb	1	; () banked
 18260   00C1A0  515B               	movf	(_ioInfo+2)& (0+255),w,b
 18261   00C1A2  115C               	iorwf	(_ioInfo+3)& (0+255),w,b
 18262   00C1A4  115D               	iorwf	(_ioInfo+4)& (0+255),w,b
 18263   00C1A6  115E               	iorwf	(_ioInfo+5)& (0+255),w,b
 18264   00C1A8  B4D8               	btfsc	status,2,c
 18265   00C1AA  EFD9  F060         	goto	u7491
 18266   00C1AE  EFDB  F060         	goto	u7490
 18267   00C1B2                     u7491:
 18268   00C1B2  EF83  F061         	goto	l6065
 18269   00C1B6                     u7490:
 18270   00C1B6                     
 18271                           ; BSR set to: 1
 18272                           ;mcc_generated_files/sd_spi/sd_spi.c: 930:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 933:                 ioInfo.wNumBytes = info->wNumBytes;
 18273   00C1B6  C023  FFD9         	movff	SD_SPI_AsyncReadTasks@info,fsr2l
 18274   00C1BA  C024  FFDA         	movff	SD_SPI_AsyncReadTasks@info+1,fsr2h
 18275   00C1BE  CFDE F159          	movff	postinc2,_ioInfo
 18276   00C1C2  CFDD F15A          	movff	postdec2,_ioInfo+1
 18277   00C1C6                     
 18278                           ; BSR set to: 1
 18279                           ;mcc_generated_files/sd_spi/sd_spi.c: 934:                 ioInfo.pBuffer = info->pBuffe
      +                          r;
 18280   00C1C6  EE20 F006          	lfsr	2,6
 18281   00C1CA  5023               	movf	SD_SPI_AsyncReadTasks@info^0,w,c
 18282   00C1CC  26D9               	addwf	fsr2l,f,c
 18283   00C1CE  5024               	movf	(SD_SPI_AsyncReadTasks@info+1)^0,w,c
 18284   00C1D0  22DA               	addwfc	fsr2h,f,c
 18285   00C1D2  CFDE F15F          	movff	postinc2,_ioInfo+6
 18286   00C1D6  CFDD F160          	movff	postdec2,_ioInfo+7
 18287                           
 18288                           ;mcc_generated_files/sd_spi/sd_spi.c: 937:                 ioInfo.dwBytesRemaining -= io
      +                          Info.wNumBytes;
 18289   00C1DA  5159               	movf	_ioInfo& (0+255),w,b
 18290   00C1DC  6E25               	movwf	??_SD_SPI_AsyncReadTasks^0,c
 18291   00C1DE  515A               	movf	(_ioInfo+1)& (0+255),w,b
 18292   00C1E0  6E26               	movwf	(??_SD_SPI_AsyncReadTasks+1)^0,c
 18293   00C1E2  6A27               	clrf	(??_SD_SPI_AsyncReadTasks+2)^0,c
 18294   00C1E4  6A28               	clrf	(??_SD_SPI_AsyncReadTasks+3)^0,c
 18295   00C1E6  5025               	movf	??_SD_SPI_AsyncReadTasks^0,w,c
 18296   00C1E8  5F5B               	subwf	(_ioInfo+2)& (0+255),f,b
 18297   00C1EA  5026               	movf	(??_SD_SPI_AsyncReadTasks+1)^0,w,c
 18298   00C1EC  5B5C               	subwfb	(_ioInfo+3)& (0+255),f,b
 18299   00C1EE  5027               	movf	(??_SD_SPI_AsyncReadTasks+2)^0,w,c
 18300   00C1F0  5B5D               	subwfb	(_ioInfo+4)& (0+255),f,b
 18301   00C1F2  5028               	movf	(??_SD_SPI_AsyncReadTasks+3)^0,w,c
 18302   00C1F4  5B5E               	subwfb	(_ioInfo+5)& (0+255),f,b
 18303                           
 18304                           ;mcc_generated_files/sd_spi/sd_spi.c: 938:                 blockCounter -= ioInfo.wNumBy
      +                          tes;
 18305   00C1F6  5159               	movf	_ioInfo& (0+255),w,b
 18306   00C1F8  0100               	movlb	0	; () banked
 18307   00C1FA  5FFA               	subwf	SD_SPI_AsyncReadTasks@blockCounter& (0+255),f,b
 18308   00C1FC  0101               	movlb	1	; () banked
 18309   00C1FE  515A               	movf	(_ioInfo+1)& (0+255),w,b
 18310   00C200  0100               	movlb	0	; () banked
 18311   00C202  5BFB               	subwfb	(SD_SPI_AsyncReadTasks@blockCounter+1)& (0+255),f,b
 18312   00C204                     
 18313                           ; BSR set to: 0
 18314                           ;mcc_generated_files/sd_spi/sd_spi.c: 942:                 (void)memset(ioInfo.pBuffer, 
      +                          0xFF, ioInfo.wNumBytes);
 18315   00C204  C15F  F001         	movff	_ioInfo+6,memset@dest
 18316   00C208  C160  F002         	movff	_ioInfo+7,memset@dest+1
 18317   00C20C  0E00               	movlw	0
 18318   00C20E  6E04               	movwf	(memset@c+1)^0,c
 18319   00C210  6803               	setf	memset@c^0,c
 18320   00C212  C159  F005         	movff	_ioInfo,memset@n
 18321   00C216  C15A  F006         	movff	_ioInfo+1,memset@n+1
 18322   00C21A  ECA6  F056         	call	_memset
 18323   00C21E                     
 18324                           ;mcc_generated_files/sd_spi/sd_spi.c: 943:                 spiMaster[SDFAST].exchangeBlo
      +                          ck(ioInfo.pBuffer, ioInfo.wNumBytes);
 18325   00C21E  C15F  F001         	movff	_ioInfo+6,SPI1_ExchangeBlock@block
 18326   00C222  C160  F002         	movff	_ioInfo+7,SPI1_ExchangeBlock@block+1
 18327   00C226  C159  F003         	movff	_ioInfo,SPI1_ExchangeBlock@blockSize
 18328   00C22A  C15A  F004         	movff	_ioInfo+1,SPI1_ExchangeBlock@blockSize+1
 18329   00C22E  0E91               	movlw	low (_spiMaster+6)
 18330   00C230  6EF6               	movwf	tblptrl,c
 18331   00C232  0EFF               	movlw	high (_spiMaster+6)
 18332   00C234  6EF7               	movwf	tblptrh,c
 18333   00C236                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 18334   00C236  6AF8               	clrf	tblptru,c
 18335   00C238                     	endif
 18336   00C238                     	if	0	;tblptru may be non-zero
 18337   00C238                     	endif
 18338   00C238  0009               	tblrd		*+
 18339   00C23A  CFF5 F025          	movff	tablat,??_SD_SPI_AsyncReadTasks
 18340   00C23E  0009               	tblrd		*+
 18341   00C240  CFF5 F026          	movff	tablat,??_SD_SPI_AsyncReadTasks+1
 18342   00C244  D802               	call	u7508
 18343   00C246  EF2E  F061         	goto	u7509
 18344   00C24A                     u7508:
 18345   00C24A  0005               	push	
 18346   00C24C  6EFA               	movwf	pclath,c
 18347   00C24E  5025               	movf	??_SD_SPI_AsyncReadTasks^0,w,c
 18348   00C250  6EFD               	movwf	tosl,c
 18349   00C252  5026               	movf	(??_SD_SPI_AsyncReadTasks+1)^0,w,c
 18350   00C254  6EFE               	movwf	tosh,c
 18351   00C256  6AFF               	clrf	tosu,c
 18352   00C258  50FA               	movf	pclath,w,c
 18353   00C25A  0012               	return		;indir
 18354   00C25C                     u7509:
 18355   00C25C                     
 18356                           ;mcc_generated_files/sd_spi/sd_spi.c: 948:                 if(blockCounter == 0)
 18357   00C25C  0100               	movlb	0	; () banked
 18358   00C25E  51FA               	movf	SD_SPI_AsyncReadTasks@blockCounter& (0+255),w,b
 18359   00C260  11FB               	iorwf	(SD_SPI_AsyncReadTasks@blockCounter+1)& (0+255),w,b
 18360   00C262  A4D8               	btfss	status,2,c
 18361   00C264  EF36  F061         	goto	u7511
 18362   00C268  EF38  F061         	goto	u7510
 18363   00C26C                     u7511:
 18364   00C26C  EFB8  F060         	goto	l6013
 18365   00C270                     u7510:
 18366   00C270                     
 18367                           ; BSR set to: 0
 18368                           ;mcc_generated_files/sd_spi/sd_spi.c: 949:                 {;mcc_generated_files/sd_spi/
      +                          sd_spi.c: 951:                     (void)spiMaster[SDFAST].exchangeByte(0xFF);
 18369   00C270  0E8F               	movlw	low (_spiMaster+4)
 18370   00C272  6EF6               	movwf	tblptrl,c
 18371   00C274  0EFF               	movlw	high (_spiMaster+4)
 18372   00C276  6EF7               	movwf	tblptrh,c
 18373   00C278                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 18374   00C278  6AF8               	clrf	tblptru,c
 18375   00C27A                     	endif
 18376   00C27A                     	if	0	;tblptru may be non-zero
 18377   00C27A                     	endif
 18378   00C27A  0009               	tblrd		*+
 18379   00C27C  CFF5 F025          	movff	tablat,??_SD_SPI_AsyncReadTasks
 18380   00C280  0009               	tblrd		*+
 18381   00C282  CFF5 F026          	movff	tablat,??_SD_SPI_AsyncReadTasks+1
 18382   00C286  D802               	call	u7528
 18383   00C288  EF50  F061         	goto	u7529
 18384   00C28C                     u7528:
 18385   00C28C  0005               	push	
 18386   00C28E  6EFA               	movwf	pclath,c
 18387   00C290  5025               	movf	??_SD_SPI_AsyncReadTasks^0,w,c
 18388   00C292  6EFD               	movwf	tosl,c
 18389   00C294  5026               	movf	(??_SD_SPI_AsyncReadTasks+1)^0,w,c
 18390   00C296  6EFE               	movwf	tosh,c
 18391   00C298  6AFF               	clrf	tosu,c
 18392   00C29A  50FA               	movf	pclath,w,c
 18393   00C29C  0EFF               	movlw	255
 18394   00C29E  0012               	return		;indir
 18395   00C2A0                     u7529:
 18396                           
 18397                           ;mcc_generated_files/sd_spi/sd_spi.c: 952:                     (void)spiMaster[SDFAST].e
      +                          xchangeByte(0xFF);
 18398   00C2A0  0E8F               	movlw	low (_spiMaster+4)
 18399   00C2A2  6EF6               	movwf	tblptrl,c
 18400   00C2A4  0EFF               	movlw	high (_spiMaster+4)
 18401   00C2A6  6EF7               	movwf	tblptrh,c
 18402   00C2A8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 18403   00C2A8  6AF8               	clrf	tblptru,c
 18404   00C2AA                     	endif
 18405   00C2AA                     	if	0	;tblptru may be non-zero
 18406   00C2AA                     	endif
 18407   00C2AA  0009               	tblrd		*+
 18408   00C2AC  CFF5 F025          	movff	tablat,??_SD_SPI_AsyncReadTasks
 18409   00C2B0  0009               	tblrd		*+
 18410   00C2B2  CFF5 F026          	movff	tablat,??_SD_SPI_AsyncReadTasks+1
 18411   00C2B6  D802               	call	u7538
 18412   00C2B8  EF68  F061         	goto	u7539
 18413   00C2BC                     u7538:
 18414   00C2BC  0005               	push	
 18415   00C2BE  6EFA               	movwf	pclath,c
 18416   00C2C0  5025               	movf	??_SD_SPI_AsyncReadTasks^0,w,c
 18417   00C2C2  6EFD               	movwf	tosl,c
 18418   00C2C4  5026               	movf	(??_SD_SPI_AsyncReadTasks+1)^0,w,c
 18419   00C2C6  6EFE               	movwf	tosh,c
 18420   00C2C8  6AFF               	clrf	tosu,c
 18421   00C2CA  50FA               	movf	pclath,w,c
 18422   00C2CC  0EFF               	movlw	255
 18423   00C2CE  0012               	return		;indir
 18424   00C2D0                     u7539:
 18425   00C2D0                     
 18426                           ;mcc_generated_files/sd_spi/sd_spi.c: 958:                     if(ioInfo.dwBytesRemainin
      +                          g != 0x00000000)
 18427   00C2D0  0101               	movlb	1	; () banked
 18428   00C2D2  515B               	movf	(_ioInfo+2)& (0+255),w,b
 18429   00C2D4  115C               	iorwf	(_ioInfo+3)& (0+255),w,b
 18430   00C2D6  115D               	iorwf	(_ioInfo+4)& (0+255),w,b
 18431   00C2D8  115E               	iorwf	(_ioInfo+5)& (0+255),w,b
 18432   00C2DA  B4D8               	btfsc	status,2,c
 18433   00C2DC  EF72  F061         	goto	u7541
 18434   00C2E0  EF74  F061         	goto	u7540
 18435   00C2E4                     u7541:
 18436   00C2E4  EF7C  F061         	goto	l6053
 18437   00C2E8                     u7540:
 18438   00C2E8                     
 18439                           ; BSR set to: 1
 18440                           ;mcc_generated_files/sd_spi/sd_spi.c: 959:                     {;mcc_generated_files/sd_
      +                          spi/sd_spi.c: 960:                         info->bStateVariable = 0x03;
 18441   00C2E8  EE20 F00C          	lfsr	2,12
 18442   00C2EC  5023               	movf	SD_SPI_AsyncReadTasks@info^0,w,c
 18443   00C2EE  26D9               	addwf	fsr2l,f,c
 18444   00C2F0  5024               	movf	(SD_SPI_AsyncReadTasks@info+1)^0,w,c
 18445   00C2F2  22DA               	addwfc	fsr2h,f,c
 18446   00C2F4  0E03               	movlw	3
 18447   00C2F6  6EDF               	movwf	indf2,c
 18448   00C2F8                     l6053:
 18449                           
 18450                           ; BSR set to: 1
 18451                           ;mcc_generated_files/sd_spi/sd_spi.c: 962:                     blockCounter = 512u;
 18452   00C2F8  0E02               	movlw	2
 18453   00C2FA  0100               	movlb	0	; () banked
 18454   00C2FC  6FFB               	movwf	(SD_SPI_AsyncReadTasks@blockCounter+1)& (0+255),b
 18455   00C2FE  0E00               	movlw	0
 18456   00C300  6FFA               	movwf	SD_SPI_AsyncReadTasks@blockCounter& (0+255),b
 18457   00C302  EF5F  F060         	goto	l5989
 18458   00C306                     l6065:
 18459                           
 18460                           ; BSR set to: 1
 18461                           ;mcc_generated_files/sd_spi/sd_spi.c: 969:             {;mcc_generated_files/sd_spi/sd_s
      +                          pi.c: 974:                 if(SingleBlockRead == 0)
 18462   00C306  0100               	movlb	0	; () banked
 18463   00C308  51FF               	movf	SD_SPI_AsyncReadTasks@SingleBlockRead& (0+255),w,b
 18464   00C30A  A4D8               	btfss	status,2,c
 18465   00C30C  EF8A  F061         	goto	u7551
 18466   00C310  EF8C  F061         	goto	u7550
 18467   00C314                     u7551:
 18468   00C314  EF97  F061         	goto	l6069
 18469   00C318                     u7550:
 18470   00C318                     
 18471                           ; BSR set to: 0
 18472                           ;mcc_generated_files/sd_spi/sd_spi.c: 975:                 {;mcc_generated_files/sd_spi/
      +                          sd_spi.c: 976:                     (void)SD_SendCmd(SD_STOP_TRANSMISSION, 0x00000000);
 18473   00C318  0E00               	movlw	0
 18474   00C31A  6E0C               	movwf	SD_SendCmd@address^0,c
 18475   00C31C  0E00               	movlw	0
 18476   00C31E  6E0D               	movwf	(SD_SendCmd@address+1)^0,c
 18477   00C320  0E00               	movlw	0
 18478   00C322  6E0E               	movwf	(SD_SendCmd@address+2)^0,c
 18479   00C324  0E00               	movlw	0
 18480   00C326  6E0F               	movwf	(SD_SendCmd@address+3)^0,c
 18481   00C328  0E05               	movlw	5
 18482   00C32A  EC1B  F062         	call	_SD_SendCmd
 18483   00C32E                     l6069:
 18484   00C32E  848B               	bsf	139,2,c	;volatile
 18485   00C330                     
 18486                           ;mcc_generated_files/sd_spi/sd_spi.c: 979:                 (void)spiMaster[SDFAST].excha
      +                          ngeByte(0xFF);
 18487   00C330  0E8F               	movlw	low (_spiMaster+4)
 18488   00C332  6EF6               	movwf	tblptrl,c
 18489   00C334  0EFF               	movlw	high (_spiMaster+4)
 18490   00C336  6EF7               	movwf	tblptrh,c
 18491   00C338                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 18492   00C338  6AF8               	clrf	tblptru,c
 18493   00C33A                     	endif
 18494   00C33A                     	if	0	;tblptru may be non-zero
 18495   00C33A                     	endif
 18496   00C33A  0009               	tblrd		*+
 18497   00C33C  CFF5 F025          	movff	tablat,??_SD_SPI_AsyncReadTasks
 18498   00C340  0009               	tblrd		*+
 18499   00C342  CFF5 F026          	movff	tablat,??_SD_SPI_AsyncReadTasks+1
 18500   00C346  D802               	call	u7568
 18501   00C348  EFB0  F061         	goto	u7569
 18502   00C34C                     u7568:
 18503   00C34C  0005               	push	
 18504   00C34E  6EFA               	movwf	pclath,c
 18505   00C350  5025               	movf	??_SD_SPI_AsyncReadTasks^0,w,c
 18506   00C352  6EFD               	movwf	tosl,c
 18507   00C354  5026               	movf	(??_SD_SPI_AsyncReadTasks+1)^0,w,c
 18508   00C356  6EFE               	movwf	tosh,c
 18509   00C358  6AFF               	clrf	tosu,c
 18510   00C35A  50FA               	movf	pclath,w,c
 18511   00C35C  0EFF               	movlw	255
 18512   00C35E  0012               	return		;indir
 18513   00C360                     u7569:
 18514   00C360                     
 18515                           ;mcc_generated_files/sd_spi/sd_spi.c: 980:                 info->bStateVariable = 0x00;
 18516   00C360  EE20 F00C          	lfsr	2,12
 18517   00C364  5023               	movf	SD_SPI_AsyncReadTasks@info^0,w,c
 18518   00C366  26D9               	addwf	fsr2l,f,c
 18519   00C368  5024               	movf	(SD_SPI_AsyncReadTasks@info+1)^0,w,c
 18520   00C36A  22DA               	addwfc	fsr2h,f,c
 18521   00C36C  0E00               	movlw	0
 18522   00C36E  6EDF               	movwf	indf2,c
 18523   00C370                     
 18524                           ;mcc_generated_files/sd_spi/sd_spi.c: 981:                 mediaInformation.state = SD_S
      +                          TATE_READY_FOR_COMMAND;
 18525   00C370  0E01               	movlw	1
 18526   00C372  0101               	movlb	1	; () banked
 18527   00C374  6F53               	movwf	(_mediaInformation+3)& (0+255),b
 18528   00C376  EFEE  F05F         	goto	l5965
 18529   00C37A                     l6081:
 18530                           
 18531                           ;mcc_generated_files/sd_spi/sd_spi.c: 986:             info->bStateVariable = 0xFF;
 18532   00C37A  EE20 F00C          	lfsr	2,12
 18533   00C37E  5023               	movf	SD_SPI_AsyncReadTasks@info^0,w,c
 18534   00C380  26D9               	addwf	fsr2l,f,c
 18535   00C382  5024               	movf	(SD_SPI_AsyncReadTasks@info+1)^0,w,c
 18536   00C384  22DA               	addwfc	fsr2h,f,c
 18537   00C386  0EFF               	movlw	255
 18538   00C388  6EDF               	movwf	indf2,c
 18539   00C38A  0E00               	movlw	0
 18540   00C38C  6E0C               	movwf	SD_SendCmd@address^0,c
 18541   00C38E  0E00               	movlw	0
 18542   00C390  6E0D               	movwf	(SD_SendCmd@address+1)^0,c
 18543   00C392  0E00               	movlw	0
 18544   00C394  6E0E               	movwf	(SD_SendCmd@address+2)^0,c
 18545   00C396  0E00               	movlw	0
 18546   00C398  6E0F               	movwf	(SD_SendCmd@address+3)^0,c
 18547   00C39A  0E05               	movlw	5
 18548   00C39C  EC1B  F062         	call	_SD_SendCmd
 18549   00C3A0                     l6085:
 18550   00C3A0  848B               	bsf	139,2,c	;volatile
 18551   00C3A2                     
 18552                           ;mcc_generated_files/sd_spi/sd_spi.c: 994:             (void)spiMaster[SDFAST].exchangeB
      +                          yte(0xFF);
 18553   00C3A2  0E8F               	movlw	low (_spiMaster+4)
 18554   00C3A4  6EF6               	movwf	tblptrl,c
 18555   00C3A6  0EFF               	movlw	high (_spiMaster+4)
 18556   00C3A8  6EF7               	movwf	tblptrh,c
 18557   00C3AA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 18558   00C3AA  6AF8               	clrf	tblptru,c
 18559   00C3AC                     	endif
 18560   00C3AC                     	if	0	;tblptru may be non-zero
 18561   00C3AC                     	endif
 18562   00C3AC  0009               	tblrd		*+
 18563   00C3AE  CFF5 F025          	movff	tablat,??_SD_SPI_AsyncReadTasks
 18564   00C3B2  0009               	tblrd		*+
 18565   00C3B4  CFF5 F026          	movff	tablat,??_SD_SPI_AsyncReadTasks+1
 18566   00C3B8  D802               	call	u7578
 18567   00C3BA  EFE9  F061         	goto	u7579
 18568   00C3BE                     u7578:
 18569   00C3BE  0005               	push	
 18570   00C3C0  6EFA               	movwf	pclath,c
 18571   00C3C2  5025               	movf	??_SD_SPI_AsyncReadTasks^0,w,c
 18572   00C3C4  6EFD               	movwf	tosl,c
 18573   00C3C6  5026               	movf	(??_SD_SPI_AsyncReadTasks+1)^0,w,c
 18574   00C3C8  6EFE               	movwf	tosh,c
 18575   00C3CA  6AFF               	clrf	tosu,c
 18576   00C3CC  50FA               	movf	pclath,w,c
 18577   00C3CE  0EFF               	movlw	255
 18578   00C3D0  0012               	return		;indir
 18579   00C3D2                     u7579:
 18580   00C3D2                     
 18581                           ;mcc_generated_files/sd_spi/sd_spi.c: 995:             mediaInformation.state = SD_STATE
      +                          _READY_FOR_COMMAND;
 18582   00C3D2  0E01               	movlw	1
 18583   00C3D4  0101               	movlb	1	; () banked
 18584   00C3D6  6F53               	movwf	(_mediaInformation+3)& (0+255),b
 18585   00C3D8                     
 18586                           ; BSR set to: 1
 18587                           ;mcc_generated_files/sd_spi/sd_spi.c: 996:             return 0xFF;
 18588   00C3D8  0EFF               	movlw	255
 18589   00C3DA  EF1A  F062         	goto	l278
 18590   00C3DE                     l6097:
 18591   00C3DE  EE20 F00C          	lfsr	2,12
 18592   00C3E2  5023               	movf	SD_SPI_AsyncReadTasks@info^0,w,c
 18593   00C3E4  26D9               	addwf	fsr2l,f,c
 18594   00C3E6  5024               	movf	(SD_SPI_AsyncReadTasks@info+1)^0,w,c
 18595   00C3E8  22DA               	addwfc	fsr2h,f,c
 18596   00C3EA  50DF               	movf	indf2,w,c
 18597   00C3EC  6E25               	movwf	??_SD_SPI_AsyncReadTasks^0,c
 18598   00C3EE  6A26               	clrf	(??_SD_SPI_AsyncReadTasks+1)^0,c
 18599                           
 18600                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18601                           ; Switch size 1, requested type "simple"
 18602                           ; Number of cases is 1, Range of values is 0 to 0
 18603                           ; switch strategies available:
 18604                           ; Name         Instructions Cycles
 18605                           ; simple_byte            4     3 (average)
 18606                           ;	Chosen strategy is simple_byte
 18607   00C3F0  5026               	movf	(??_SD_SPI_AsyncReadTasks+1)^0,w,c
 18608   00C3F2  0A00               	xorlw	0	; case 0
 18609   00C3F4  B4D8               	btfsc	status,2,c
 18610   00C3F6  EFFF  F061         	goto	l9301
 18611   00C3FA  EFD0  F061         	goto	l6085
 18612   00C3FE                     l9301:
 18613                           
 18614                           ; Switch size 1, requested type "simple"
 18615                           ; Number of cases is 6, Range of values is 0 to 255
 18616                           ; switch strategies available:
 18617                           ; Name         Instructions Cycles
 18618                           ; simple_byte           19    10 (average)
 18619                           ;	Chosen strategy is simple_byte
 18620   00C3FE  5025               	movf	??_SD_SPI_AsyncReadTasks^0,w,c
 18621   00C400  0A00               	xorlw	0	; case 0
 18622   00C402  B4D8               	btfsc	status,2,c
 18623   00C404  EFEE  F05F         	goto	l5965
 18624   00C408  0A01               	xorlw	1	; case 1
 18625   00C40A  B4D8               	btfsc	status,2,c
 18626   00C40C  EFF1  F05F         	goto	l5969
 18627   00C410  0A03               	xorlw	3	; case 2
 18628   00C412  B4D8               	btfsc	status,2,c
 18629   00C414  EFCF  F060         	goto	l6035
 18630   00C418  0A01               	xorlw	1	; case 3
 18631   00C41A  B4D8               	btfsc	status,2,c
 18632   00C41C  EF75  F060         	goto	l6001
 18633   00C420  0AFD               	xorlw	253	; case 254
 18634   00C422  B4D8               	btfsc	status,2,c
 18635   00C424  EFBD  F061         	goto	l6081
 18636   00C428  0A01               	xorlw	1	; case 255
 18637   00C42A  B4D8               	btfsc	status,2,c
 18638   00C42C  EFD0  F061         	goto	l6085
 18639   00C430  EFD0  F061         	goto	l6085
 18640   00C434                     l278:
 18641   00C434  0012               	return		;funcret
 18642   00C436                     __end_of_SD_SPI_AsyncReadTasks:
 18643                           	callstack 0
 18644                           
 18645 ;; *************** function _memset *****************
 18646 ;; Defined at:
 18647 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memset.c"
 18648 ;; Parameters:    Size  Location     Type
 18649 ;;  dest            2    0[COMRAM] PTR void 
 18650 ;;		 -> file(546), drive(563), FatFsDemo_Tasks@data(13), NULL(0), 
 18651 ;;		 -> STR_3(15), Fil(546), FatFs(563), 
 18652 ;;  c               2    2[COMRAM] int 
 18653 ;;  n               2    4[COMRAM] unsigned int 
 18654 ;; Auto vars:     Size  Location     Type
 18655 ;;  s               2   12[COMRAM] PTR unsigned char 
 18656 ;;		 -> file(546), drive(563), FatFsDemo_Tasks@data(13), NULL(0), 
 18657 ;;		 -> STR_3(15), Fil(546), FatFs(563), 
 18658 ;;  k               2   10[COMRAM] unsigned int 
 18659 ;; Return value:  Size  Location     Type
 18660 ;;                  2    0[COMRAM] PTR void 
 18661 ;; Registers used:
 18662 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 18663 ;; Tracked objects:
 18664 ;;		On entry : 0/0
 18665 ;;		On exit  : 0/0
 18666 ;;		Unchanged: 0/0
 18667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18668 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18669 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18670 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18671 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18672 ;;Total ram usage:       14 bytes
 18673 ;; Hardware stack levels used: 1
 18674 ;; This function calls:
 18675 ;;		Nothing
 18676 ;; This function is called by:
 18677 ;;		_SD_SPI_AsyncReadTasks
 18678 ;; This function uses a non-reentrant model
 18679 ;;
 18680                           
 18681                           	psect	text55
 18682   00AD4C                     __ptext55:
 18683                           	callstack 0
 18684   00AD4C                     _memset:
 18685                           	callstack 26
 18686   00AD4C  C001  F00D         	movff	memset@dest,memset@s
 18687   00AD50  C002  F00E         	movff	memset@dest+1,memset@s+1
 18688   00AD54  5005               	movf	memset@n^0,w,c
 18689   00AD56  1006               	iorwf	(memset@n+1)^0,w,c
 18690   00AD58  A4D8               	btfss	status,2,c
 18691   00AD5A  EFB1  F056         	goto	u7241
 18692   00AD5E  EFB3  F056         	goto	u7240
 18693   00AD62                     u7241:
 18694   00AD62  EFB5  F056         	goto	l5925
 18695   00AD66                     u7240:
 18696   00AD66  EFF1  F057         	goto	l1961
 18697   00AD6A                     l5925:
 18698   00AD6A  C00D  FFF6         	movff	memset@s,tblptrl
 18699   00AD6E  C00E  FFF7         	movff	memset@s+1,tblptrh
 18700   00AD72  0E00               	movlw	low (__mediumconst shr (0+16))
 18701   00AD74  6EF8               	movwf	tblptru,c
 18702   00AD76  0E0F               	movlw	(high __ramtop+-1)
 18703   00AD78  64F7               	cpfsgt	tblptrh,c
 18704   00AD7A  D004               	bra	u7257
 18705   00AD7C  C003  FFF5         	movff	memset@c,tablat
 18706   00AD80  000C               	tblwt		*
 18707   00AD82  D006               	bra	u7250
 18708   00AD84                     u7257:
 18709   00AD84  CFF6 FFE9          	movff	tblptrl,fsr0l
 18710   00AD88  CFF7 FFEA          	movff	tblptrh,fsr0h
 18711   00AD8C  C003  FFEF         	movff	memset@c,indf0
 18712   00AD90                     u7250:
 18713   00AD90  5005               	movf	memset@n^0,w,c
 18714   00AD92  240D               	addwf	memset@s^0,w,c
 18715   00AD94  6E07               	movwf	??_memset^0,c
 18716   00AD96  5006               	movf	(memset@n+1)^0,w,c
 18717   00AD98  200E               	addwfc	(memset@s+1)^0,w,c
 18718   00AD9A  6E08               	movwf	(??_memset+1)^0,c
 18719   00AD9C  0EFF               	movlw	255
 18720   00AD9E  2407               	addwf	??_memset^0,w,c
 18721   00ADA0  6E09               	movwf	(??_memset+2)^0,c
 18722   00ADA2  0EFF               	movlw	255
 18723   00ADA4  2008               	addwfc	(??_memset+1)^0,w,c
 18724   00ADA6  6E0A               	movwf	(??_memset+3)^0,c
 18725   00ADA8  C009  FFF6         	movff	??_memset+2,tblptrl
 18726   00ADAC  C00A  FFF7         	movff	??_memset+3,tblptrh
 18727   00ADB0  0E00               	movlw	low (__mediumconst shr (0+16))
 18728   00ADB2  6EF8               	movwf	tblptru,c
 18729   00ADB4  0E0F               	movlw	(high __ramtop+-1)
 18730   00ADB6  64F7               	cpfsgt	tblptrh,c
 18731   00ADB8  D004               	bra	u7267
 18732   00ADBA  C003  FFF5         	movff	memset@c,tablat
 18733   00ADBE  000C               	tblwt		*
 18734   00ADC0  D006               	bra	u7260
 18735   00ADC2                     u7267:
 18736   00ADC2  CFF6 FFE9          	movff	tblptrl,fsr0l
 18737   00ADC6  CFF7 FFEA          	movff	tblptrh,fsr0h
 18738   00ADCA  C003  FFEF         	movff	memset@c,indf0
 18739   00ADCE                     u7260:
 18740   00ADCE  5006               	movf	(memset@n+1)^0,w,c
 18741   00ADD0  E107               	bnz	u7271
 18742   00ADD2  0E03               	movlw	3
 18743   00ADD4  5C05               	subwf	memset@n^0,w,c
 18744   00ADD6  B0D8               	btfsc	status,0,c
 18745   00ADD8  EFF0  F056         	goto	u7271
 18746   00ADDC  EFF2  F056         	goto	u7270
 18747   00ADE0                     u7271:
 18748   00ADE0  EFF4  F056         	goto	l5933
 18749   00ADE4                     u7270:
 18750   00ADE4  EFF1  F057         	goto	l1961
 18751   00ADE8                     l5933:
 18752   00ADE8  0E01               	movlw	1
 18753   00ADEA  240D               	addwf	memset@s^0,w,c
 18754   00ADEC  6E07               	movwf	??_memset^0,c
 18755   00ADEE  0E00               	movlw	0
 18756   00ADF0  200E               	addwfc	(memset@s+1)^0,w,c
 18757   00ADF2  6E08               	movwf	(??_memset+1)^0,c
 18758   00ADF4  C007  FFF6         	movff	??_memset,tblptrl
 18759   00ADF8  C008  FFF7         	movff	??_memset+1,tblptrh
 18760   00ADFC  0E00               	movlw	low (__mediumconst shr (0+16))
 18761   00ADFE  6EF8               	movwf	tblptru,c
 18762   00AE00  0E0F               	movlw	(high __ramtop+-1)
 18763   00AE02  64F7               	cpfsgt	tblptrh,c
 18764   00AE04  D004               	bra	u7287
 18765   00AE06  C003  FFF5         	movff	memset@c,tablat
 18766   00AE0A  000C               	tblwt		*
 18767   00AE0C  D006               	bra	u7280
 18768   00AE0E                     u7287:
 18769   00AE0E  CFF6 FFE9          	movff	tblptrl,fsr0l
 18770   00AE12  CFF7 FFEA          	movff	tblptrh,fsr0h
 18771   00AE16  C003  FFEF         	movff	memset@c,indf0
 18772   00AE1A                     u7280:
 18773   00AE1A  0E02               	movlw	2
 18774   00AE1C  240D               	addwf	memset@s^0,w,c
 18775   00AE1E  6E07               	movwf	??_memset^0,c
 18776   00AE20  0E00               	movlw	0
 18777   00AE22  200E               	addwfc	(memset@s+1)^0,w,c
 18778   00AE24  6E08               	movwf	(??_memset+1)^0,c
 18779   00AE26  C007  FFF6         	movff	??_memset,tblptrl
 18780   00AE2A  C008  FFF7         	movff	??_memset+1,tblptrh
 18781   00AE2E  0E00               	movlw	low (__mediumconst shr (0+16))
 18782   00AE30  6EF8               	movwf	tblptru,c
 18783   00AE32  0E0F               	movlw	(high __ramtop+-1)
 18784   00AE34  64F7               	cpfsgt	tblptrh,c
 18785   00AE36  D004               	bra	u7297
 18786   00AE38  C003  FFF5         	movff	memset@c,tablat
 18787   00AE3C  000C               	tblwt		*
 18788   00AE3E  D006               	bra	u7290
 18789   00AE40                     u7297:
 18790   00AE40  CFF6 FFE9          	movff	tblptrl,fsr0l
 18791   00AE44  CFF7 FFEA          	movff	tblptrh,fsr0h
 18792   00AE48  C003  FFEF         	movff	memset@c,indf0
 18793   00AE4C                     u7290:
 18794   00AE4C  5005               	movf	memset@n^0,w,c
 18795   00AE4E  240D               	addwf	memset@s^0,w,c
 18796   00AE50  6E07               	movwf	??_memset^0,c
 18797   00AE52  5006               	movf	(memset@n+1)^0,w,c
 18798   00AE54  200E               	addwfc	(memset@s+1)^0,w,c
 18799   00AE56  6E08               	movwf	(??_memset+1)^0,c
 18800   00AE58  0EFE               	movlw	254
 18801   00AE5A  2407               	addwf	??_memset^0,w,c
 18802   00AE5C  6E09               	movwf	(??_memset+2)^0,c
 18803   00AE5E  0EFF               	movlw	255
 18804   00AE60  2008               	addwfc	(??_memset+1)^0,w,c
 18805   00AE62  6E0A               	movwf	(??_memset+3)^0,c
 18806   00AE64  C009  FFF6         	movff	??_memset+2,tblptrl
 18807   00AE68  C00A  FFF7         	movff	??_memset+3,tblptrh
 18808   00AE6C  0E00               	movlw	low (__mediumconst shr (0+16))
 18809   00AE6E  6EF8               	movwf	tblptru,c
 18810   00AE70  0E0F               	movlw	(high __ramtop+-1)
 18811   00AE72  64F7               	cpfsgt	tblptrh,c
 18812   00AE74  D004               	bra	u7307
 18813   00AE76  C003  FFF5         	movff	memset@c,tablat
 18814   00AE7A  000C               	tblwt		*
 18815   00AE7C  D006               	bra	u7300
 18816   00AE7E                     u7307:
 18817   00AE7E  CFF6 FFE9          	movff	tblptrl,fsr0l
 18818   00AE82  CFF7 FFEA          	movff	tblptrh,fsr0h
 18819   00AE86  C003  FFEF         	movff	memset@c,indf0
 18820   00AE8A                     u7300:
 18821   00AE8A  5005               	movf	memset@n^0,w,c
 18822   00AE8C  240D               	addwf	memset@s^0,w,c
 18823   00AE8E  6E07               	movwf	??_memset^0,c
 18824   00AE90  5006               	movf	(memset@n+1)^0,w,c
 18825   00AE92  200E               	addwfc	(memset@s+1)^0,w,c
 18826   00AE94  6E08               	movwf	(??_memset+1)^0,c
 18827   00AE96  0EFD               	movlw	253
 18828   00AE98  2407               	addwf	??_memset^0,w,c
 18829   00AE9A  6E09               	movwf	(??_memset+2)^0,c
 18830   00AE9C  0EFF               	movlw	255
 18831   00AE9E  2008               	addwfc	(??_memset+1)^0,w,c
 18832   00AEA0  6E0A               	movwf	(??_memset+3)^0,c
 18833   00AEA2  C009  FFF6         	movff	??_memset+2,tblptrl
 18834   00AEA6  C00A  FFF7         	movff	??_memset+3,tblptrh
 18835   00AEAA  0E00               	movlw	low (__mediumconst shr (0+16))
 18836   00AEAC  6EF8               	movwf	tblptru,c
 18837   00AEAE  0E0F               	movlw	(high __ramtop+-1)
 18838   00AEB0  64F7               	cpfsgt	tblptrh,c
 18839   00AEB2  D004               	bra	u7317
 18840   00AEB4  C003  FFF5         	movff	memset@c,tablat
 18841   00AEB8  000C               	tblwt		*
 18842   00AEBA  D006               	bra	u7310
 18843   00AEBC                     u7317:
 18844   00AEBC  CFF6 FFE9          	movff	tblptrl,fsr0l
 18845   00AEC0  CFF7 FFEA          	movff	tblptrh,fsr0h
 18846   00AEC4  C003  FFEF         	movff	memset@c,indf0
 18847   00AEC8                     u7310:
 18848   00AEC8  5006               	movf	(memset@n+1)^0,w,c
 18849   00AECA  E107               	bnz	u7321
 18850   00AECC  0E07               	movlw	7
 18851   00AECE  5C05               	subwf	memset@n^0,w,c
 18852   00AED0  B0D8               	btfsc	status,0,c
 18853   00AED2  EF6D  F057         	goto	u7321
 18854   00AED6  EF6F  F057         	goto	u7320
 18855   00AEDA                     u7321:
 18856   00AEDA  EF71  F057         	goto	l5939
 18857   00AEDE                     u7320:
 18858   00AEDE  EFF1  F057         	goto	l1961
 18859   00AEE2                     l5939:
 18860   00AEE2  0E03               	movlw	3
 18861   00AEE4  240D               	addwf	memset@s^0,w,c
 18862   00AEE6  6E07               	movwf	??_memset^0,c
 18863   00AEE8  0E00               	movlw	0
 18864   00AEEA  200E               	addwfc	(memset@s+1)^0,w,c
 18865   00AEEC  6E08               	movwf	(??_memset+1)^0,c
 18866   00AEEE  C007  FFF6         	movff	??_memset,tblptrl
 18867   00AEF2  C008  FFF7         	movff	??_memset+1,tblptrh
 18868   00AEF6  0E00               	movlw	low (__mediumconst shr (0+16))
 18869   00AEF8  6EF8               	movwf	tblptru,c
 18870   00AEFA  0E0F               	movlw	(high __ramtop+-1)
 18871   00AEFC  64F7               	cpfsgt	tblptrh,c
 18872   00AEFE  D004               	bra	u7337
 18873   00AF00  C003  FFF5         	movff	memset@c,tablat
 18874   00AF04  000C               	tblwt		*
 18875   00AF06  D006               	bra	u7330
 18876   00AF08                     u7337:
 18877   00AF08  CFF6 FFE9          	movff	tblptrl,fsr0l
 18878   00AF0C  CFF7 FFEA          	movff	tblptrh,fsr0h
 18879   00AF10  C003  FFEF         	movff	memset@c,indf0
 18880   00AF14                     u7330:
 18881   00AF14  5005               	movf	memset@n^0,w,c
 18882   00AF16  240D               	addwf	memset@s^0,w,c
 18883   00AF18  6E07               	movwf	??_memset^0,c
 18884   00AF1A  5006               	movf	(memset@n+1)^0,w,c
 18885   00AF1C  200E               	addwfc	(memset@s+1)^0,w,c
 18886   00AF1E  6E08               	movwf	(??_memset+1)^0,c
 18887   00AF20  0EFC               	movlw	252
 18888   00AF22  2407               	addwf	??_memset^0,w,c
 18889   00AF24  6E09               	movwf	(??_memset+2)^0,c
 18890   00AF26  0EFF               	movlw	255
 18891   00AF28  2008               	addwfc	(??_memset+1)^0,w,c
 18892   00AF2A  6E0A               	movwf	(??_memset+3)^0,c
 18893   00AF2C  C009  FFF6         	movff	??_memset+2,tblptrl
 18894   00AF30  C00A  FFF7         	movff	??_memset+3,tblptrh
 18895   00AF34  0E00               	movlw	low (__mediumconst shr (0+16))
 18896   00AF36  6EF8               	movwf	tblptru,c
 18897   00AF38  0E0F               	movlw	(high __ramtop+-1)
 18898   00AF3A  64F7               	cpfsgt	tblptrh,c
 18899   00AF3C  D004               	bra	u7347
 18900   00AF3E  C003  FFF5         	movff	memset@c,tablat
 18901   00AF42  000C               	tblwt		*
 18902   00AF44  D006               	bra	u7340
 18903   00AF46                     u7347:
 18904   00AF46  CFF6 FFE9          	movff	tblptrl,fsr0l
 18905   00AF4A  CFF7 FFEA          	movff	tblptrh,fsr0h
 18906   00AF4E  C003  FFEF         	movff	memset@c,indf0
 18907   00AF52                     u7340:
 18908   00AF52  5006               	movf	(memset@n+1)^0,w,c
 18909   00AF54  E107               	bnz	u7351
 18910   00AF56  0E09               	movlw	9
 18911   00AF58  5C05               	subwf	memset@n^0,w,c
 18912   00AF5A  B0D8               	btfsc	status,0,c
 18913   00AF5C  EFB2  F057         	goto	u7351
 18914   00AF60  EFB4  F057         	goto	u7350
 18915   00AF64                     u7351:
 18916   00AF64  EFB6  F057         	goto	l5945
 18917   00AF68                     u7350:
 18918   00AF68  EFF1  F057         	goto	l1961
 18919   00AF6C                     l5945:
 18920   00AF6C  C00D  F007         	movff	memset@s,??_memset
 18921   00AF70  C00E  F008         	movff	memset@s+1,??_memset+1
 18922   00AF74  1E07               	comf	??_memset^0,f,c
 18923   00AF76  1E08               	comf	(??_memset+1)^0,f,c
 18924   00AF78  4A07               	infsnz	??_memset^0,f,c
 18925   00AF7A  2A08               	incf	(??_memset+1)^0,f,c
 18926   00AF7C  0E03               	movlw	3
 18927   00AF7E  1407               	andwf	??_memset^0,w,c
 18928   00AF80  6E0B               	movwf	memset@k^0,c
 18929   00AF82  6A0C               	clrf	(memset@k+1)^0,c
 18930   00AF84  500B               	movf	memset@k^0,w,c
 18931   00AF86  260D               	addwf	memset@s^0,f,c
 18932   00AF88  500C               	movf	(memset@k+1)^0,w,c
 18933   00AF8A  220E               	addwfc	(memset@s+1)^0,f,c
 18934   00AF8C  500B               	movf	memset@k^0,w,c
 18935   00AF8E  5E05               	subwf	memset@n^0,f,c
 18936   00AF90  500C               	movf	(memset@k+1)^0,w,c
 18937   00AF92  5A06               	subwfb	(memset@n+1)^0,f,c
 18938   00AF94  0EFC               	movlw	252
 18939   00AF96  1605               	andwf	memset@n^0,f,c
 18940   00AF98  0EFF               	movlw	255
 18941   00AF9A  1606               	andwf	(memset@n+1)^0,f,c
 18942   00AF9C  EFE8  F057         	goto	l5953
 18943   00AFA0                     l5947:
 18944   00AFA0  C00D  FFF6         	movff	memset@s,tblptrl
 18945   00AFA4  C00E  FFF7         	movff	memset@s+1,tblptrh
 18946   00AFA8  0E00               	movlw	low (__mediumconst shr (0+16))
 18947   00AFAA  6EF8               	movwf	tblptru,c
 18948   00AFAC  0E0F               	movlw	(high __ramtop+-1)
 18949   00AFAE  64F7               	cpfsgt	tblptrh,c
 18950   00AFB0  D004               	bra	u7367
 18951   00AFB2  C003  FFF5         	movff	memset@c,tablat
 18952   00AFB6  000C               	tblwt		*
 18953   00AFB8  D006               	bra	u7360
 18954   00AFBA                     u7367:
 18955   00AFBA  CFF6 FFE9          	movff	tblptrl,fsr0l
 18956   00AFBE  CFF7 FFEA          	movff	tblptrh,fsr0h
 18957   00AFC2  C003  FFEF         	movff	memset@c,indf0
 18958   00AFC6                     u7360:
 18959   00AFC6  0605               	decf	memset@n^0,f,c
 18960   00AFC8  A0D8               	btfss	status,0,c
 18961   00AFCA  0606               	decf	(memset@n+1)^0,f,c
 18962   00AFCC  4A0D               	infsnz	memset@s^0,f,c
 18963   00AFCE  2A0E               	incf	(memset@s+1)^0,f,c
 18964   00AFD0                     l5953:
 18965   00AFD0  5005               	movf	memset@n^0,w,c
 18966   00AFD2  1006               	iorwf	(memset@n+1)^0,w,c
 18967   00AFD4  A4D8               	btfss	status,2,c
 18968   00AFD6  EFEF  F057         	goto	u7371
 18969   00AFDA  EFF1  F057         	goto	u7370
 18970   00AFDE                     u7371:
 18971   00AFDE  EFD0  F057         	goto	l5947
 18972   00AFE2                     u7370:
 18973   00AFE2                     l1961:
 18974   00AFE2  0012               	return		;funcret
 18975   00AFE4                     __end_of_memset:
 18976                           	callstack 0
 18977                           
 18978 ;; *************** function _SPI1_ExchangeBlock *****************
 18979 ;; Defined at:
 18980 ;;		line 102 in file "mcc_generated_files/spi1.c"
 18981 ;; Parameters:    Size  Location     Type
 18982 ;;  block           2    0[COMRAM] PTR void 
 18983 ;;		 -> file(546), drive(563), FatFsDemo_Tasks@data(13), NULL(0), 
 18984 ;;		 -> STR_3(15), Fil(546), FatFs(563), 
 18985 ;;  blockSize       2    2[COMRAM] unsigned int 
 18986 ;; Auto vars:     Size  Location     Type
 18987 ;;  data            2    4[COMRAM] PTR unsigned char 
 18988 ;;		 -> file(546), drive(563), FatFsDemo_Tasks@data(13), NULL(0), 
 18989 ;;		 -> STR_3(15), Fil(546), FatFs(563), 
 18990 ;; Return value:  Size  Location     Type
 18991 ;;                  1    wreg      void 
 18992 ;; Registers used:
 18993 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 18994 ;; Tracked objects:
 18995 ;;		On entry : 0/0
 18996 ;;		On exit  : 0/0
 18997 ;;		Unchanged: 0/0
 18998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18999 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19000 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19002 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19003 ;;Total ram usage:        6 bytes
 19004 ;; Hardware stack levels used: 1
 19005 ;; This function calls:
 19006 ;;		Nothing
 19007 ;; This function is called by:
 19008 ;;		_SD_SPI_AsyncWriteTasks
 19009 ;;		_SD_SPI_AsyncReadTasks
 19010 ;; This function uses a non-reentrant model
 19011 ;;
 19012                           
 19013                           	psect	text56
 19014   0091C8                     __ptext56:
 19015                           	callstack 0
 19016   0091C8                     _SPI1_ExchangeBlock:
 19017                           	callstack 26
 19018   0091C8                     
 19019                           ;mcc_generated_files/spi1.c: 102: void SPI1_ExchangeBlock(void *block, size_t blockSize)
      +                          ;mcc_generated_files/spi1.c: 103: {;mcc_generated_files/spi1.c: 104:     uint8_t *data =
      +                           block;
 19020   0091C8  C001  F005         	movff	SPI1_ExchangeBlock@block,SPI1_ExchangeBlock@data
 19021   0091CC  C002  F006         	movff	SPI1_ExchangeBlock@block+1,SPI1_ExchangeBlock@data+1
 19022                           
 19023                           ;mcc_generated_files/spi1.c: 105:     while(blockSize--)
 19024   0091D0  EF19  F049         	goto	l5663
 19025   0091D4                     l5657:
 19026                           
 19027                           ;mcc_generated_files/spi1.c: 106:     {;mcc_generated_files/spi1.c: 107:         SSP1BUF
      +                           = *data;
 19028   0091D4  C005  FFF6         	movff	SPI1_ExchangeBlock@data,tblptrl
 19029   0091D8  C006  FFF7         	movff	SPI1_ExchangeBlock@data+1,tblptrh
 19030   0091DC  0E00               	movlw	low (__mediumconst shr (0+16))
 19031   0091DE  6EF8               	movwf	tblptru,c
 19032   0091E0  0E0F               	movlw	(high __ramtop+-1)
 19033   0091E2  64F7               	cpfsgt	tblptrh,c
 19034   0091E4  D003               	bra	u6617
 19035   0091E6  0008               	tblrd		*
 19036   0091E8  50F5               	movf	tablat,w,c
 19037   0091EA  D005               	bra	u6610
 19038   0091EC                     u6617:
 19039   0091EC  CFF6 FFE9          	movff	tblptrl,fsr0l
 19040   0091F0  CFF7 FFEA          	movff	tblptrh,fsr0h
 19041   0091F4  50EF               	movf	indf0,w,c
 19042   0091F6                     u6610:
 19043   0091F6  6EC9               	movwf	201,c	;volatile
 19044   0091F8                     l106:
 19045   0091F8  A69E               	btfss	158,3,c	;volatile
 19046   0091FA  EF01  F049         	goto	u6621
 19047   0091FE  EF03  F049         	goto	u6620
 19048   009202                     u6621:
 19049   009202  EFFC  F048         	goto	l106
 19050   009206                     u6620:
 19051   009206                     
 19052                           ;mcc_generated_files/spi1.c: 109:         PIR1bits.SSP1IF = 0;
 19053   009206  969E               	bcf	158,3,c	;volatile
 19054   009208                     
 19055                           ;mcc_generated_files/spi1.c: 110:         *data++ = SSP1BUF;
 19056   009208  C005  FFF6         	movff	SPI1_ExchangeBlock@data,tblptrl
 19057   00920C  C006  FFF7         	movff	SPI1_ExchangeBlock@data+1,tblptrh
 19058   009210  0E00               	movlw	low (__mediumconst shr (0+16))
 19059   009212  6EF8               	movwf	tblptru,c
 19060   009214  0E0F               	movlw	(high __ramtop+-1)
 19061   009216  64F7               	cpfsgt	tblptrh,c
 19062   009218  D004               	bra	u6637
 19063   00921A  CFC9 FFF5          	movff	4041,tablat	;volatile
 19064   00921E  000C               	tblwt		*
 19065   009220  D006               	bra	u6630
 19066   009222                     u6637:
 19067   009222  CFF6 FFE9          	movff	tblptrl,fsr0l
 19068   009226  CFF7 FFEA          	movff	tblptrh,fsr0h
 19069   00922A  CFC9 FFEF          	movff	4041,indf0	;volatile
 19070   00922E                     u6630:
 19071   00922E  4A05               	infsnz	SPI1_ExchangeBlock@data^0,f,c
 19072   009230  2A06               	incf	(SPI1_ExchangeBlock@data+1)^0,f,c
 19073   009232                     l5663:
 19074                           
 19075                           ;mcc_generated_files/spi1.c: 105:     while(blockSize--)
 19076   009232  0603               	decf	SPI1_ExchangeBlock@blockSize^0,f,c
 19077   009234  A0D8               	btfss	status,0,c
 19078   009236  0604               	decf	(SPI1_ExchangeBlock@blockSize+1)^0,f,c
 19079   009238  2803               	incf	SPI1_ExchangeBlock@blockSize^0,w,c
 19080   00923A  E106               	bnz	u6641
 19081   00923C  2804               	incf	(SPI1_ExchangeBlock@blockSize+1)^0,w,c
 19082   00923E  A4D8               	btfss	status,2,c
 19083   009240  EF24  F049         	goto	u6641
 19084   009244  EF26  F049         	goto	u6640
 19085   009248                     u6641:
 19086   009248  EFEA  F048         	goto	l5657
 19087   00924C                     u6640:
 19088   00924C  0012               	return		;funcret
 19089   00924E                     __end_of_SPI1_ExchangeBlock:
 19090                           	callstack 0
 19091                           
 19092 ;; *************** function _SD_SendCmd *****************
 19093 ;; Defined at:
 19094 ;;		line 1247 in file "mcc_generated_files/sd_spi/sd_spi.c"
 19095 ;; Parameters:    Size  Location     Type
 19096 ;;  cmd             1    wreg     unsigned char 
 19097 ;;  address         4   11[COMRAM] unsigned long 
 19098 ;; Auto vars:     Size  Location     Type
 19099 ;;  cmd             1   28[COMRAM] unsigned char 
 19100 ;;  response        5   29[COMRAM] struct .
 19101 ;;  address_byte    4   22[COMRAM] unsigned char [4]
 19102 ;;  longTimeout     4   18[COMRAM] unsigned long 
 19103 ;;  timeout         2   26[COMRAM] unsigned short 
 19104 ;; Return value:  Size  Location     Type
 19105 ;;                  5   11[COMRAM] struct .
 19106 ;; Registers used:
 19107 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 19108 ;; Tracked objects:
 19109 ;;		On entry : 0/0
 19110 ;;		On exit  : 0/0
 19111 ;;		Unchanged: 0/0
 19112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19113 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19114 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19115 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19116 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19117 ;;Total ram usage:       23 bytes
 19118 ;; Hardware stack levels used: 1
 19119 ;; Hardware stack levels required when called: 1
 19120 ;; This function calls:
 19121 ;;		_SPI1_ExchangeByte
 19122 ;;		_memcpy
 19123 ;; This function is called by:
 19124 ;;		_SD_SPI_MediaInitialize
 19125 ;;		_SD_SPI_AsyncReadTasks
 19126 ;;		_SD_SPI_AsyncWriteTasks
 19127 ;; This function uses a non-reentrant model
 19128 ;;
 19129                           
 19130                           	psect	text57
 19131   00C436                     __ptext57:
 19132                           	callstack 0
 19133   00C436                     _SD_SendCmd:
 19134                           	callstack 25
 19135                           
 19136                           ;incstack = 0
 19137                           ;SD_SendCmd@cmd stored from wreg
 19138   00C436  6E1D               	movwf	SD_SendCmd@cmd^0,c
 19139   00C438  948B               	bcf	139,2,c	;volatile
 19140   00C43A                     
 19141                           ;mcc_generated_files/sd_spi/sd_spi.c: 1256:     (void)memcpy(address_bytes, &address, si
      +                          zeof(address));
 19142   00C43A  0E17               	movlw	low SD_SendCmd@address_bytes
 19143   00C43C  6E01               	movwf	memcpy@d1^0,c
 19144   00C43E  0E00               	movlw	high SD_SendCmd@address_bytes
 19145   00C440  6E02               	movwf	(memcpy@d1+1)^0,c
 19146   00C442  0E0C               	movlw	low SD_SendCmd@address
 19147   00C444  6E03               	movwf	memcpy@s1^0,c
 19148   00C446  0E00               	movlw	high SD_SendCmd@address
 19149   00C448  6E04               	movwf	(memcpy@s1+1)^0,c
 19150   00C44A  0E00               	movlw	0
 19151   00C44C  6E06               	movwf	(memcpy@n+1)^0,c
 19152   00C44E  0E04               	movlw	4
 19153   00C450  6E05               	movwf	memcpy@n^0,c
 19154   00C452  EC45  F046         	call	_memcpy
 19155   00C456                     
 19156                           ;mcc_generated_files/sd_spi/sd_spi.c: 1258:     (void)spiMaster[SDFAST].exchangeByte(sdm
      +                          mc_cmdtable[cmd].CmdCode | (1<<6));
 19157   00C456  0E8F               	movlw	low (_spiMaster+4)
 19158   00C458  6EF6               	movwf	tblptrl,c
 19159   00C45A  0EFF               	movlw	high (_spiMaster+4)
 19160   00C45C  6EF7               	movwf	tblptrh,c
 19161   00C45E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19162   00C45E  6AF8               	clrf	tblptru,c
 19163   00C460                     	endif
 19164   00C460                     	if	0	;tblptru may be non-zero
 19165   00C460                     	endif
 19166   00C460  0009               	tblrd		*+
 19167   00C462  CFF5 F011          	movff	tablat,??_SD_SendCmd
 19168   00C466  0009               	tblrd		*+
 19169   00C468  CFF5 F012          	movff	tablat,??_SD_SendCmd+1
 19170   00C46C  D802               	call	u6658
 19171   00C46E  EF50  F062         	goto	u6659
 19172   00C472                     u6658:
 19173   00C472  0005               	push	
 19174   00C474  6EFA               	movwf	pclath,c
 19175   00C476  5011               	movf	??_SD_SendCmd^0,w,c
 19176   00C478  6EFD               	movwf	tosl,c
 19177   00C47A  5012               	movf	(??_SD_SendCmd+1)^0,w,c
 19178   00C47C  6EFE               	movwf	tosh,c
 19179   00C47E  6AFF               	clrf	tosu,c
 19180   00C480  50FA               	movf	pclath,w,c
 19181   00C482  501D               	movf	SD_SendCmd@cmd^0,w,c
 19182   00C484  0D04               	mullw	4
 19183   00C486  0E3B               	movlw	low _sdmmc_cmdtable
 19184   00C488  24F3               	addwf	243,w,c
 19185   00C48A  6EF6               	movwf	tblptrl,c
 19186   00C48C  0EFF               	movlw	high _sdmmc_cmdtable
 19187   00C48E  20F4               	addwfc	244,w,c
 19188   00C490  6EF7               	movwf	tblptrh,c
 19189   00C492                     	if	1	;There are 3 active tblptr bytes
 19190   00C492  6AF8               	clrf	tblptru,c
 19191   00C494  0E00               	movlw	low (__mediumconst shr (0+16))
 19192   00C496  22F8               	addwfc	tblptru,f,c
 19193   00C498                     	endif
 19194   00C498  0008               	tblrd		*
 19195   00C49A  50F5               	movf	tablat,w,c
 19196   00C49C  0940               	iorlw	64
 19197   00C49E  0012               	return		;indir
 19198   00C4A0                     u6659:
 19199   00C4A0                     
 19200                           ;mcc_generated_files/sd_spi/sd_spi.c: 1260:     (void)spiMaster[SDFAST].exchangeByte(add
      +                          ress_bytes[3]);
 19201   00C4A0  0E8F               	movlw	low (_spiMaster+4)
 19202   00C4A2  6EF6               	movwf	tblptrl,c
 19203   00C4A4  0EFF               	movlw	high (_spiMaster+4)
 19204   00C4A6  6EF7               	movwf	tblptrh,c
 19205   00C4A8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19206   00C4A8  6AF8               	clrf	tblptru,c
 19207   00C4AA                     	endif
 19208   00C4AA                     	if	0	;tblptru may be non-zero
 19209   00C4AA                     	endif
 19210   00C4AA  0009               	tblrd		*+
 19211   00C4AC  CFF5 F011          	movff	tablat,??_SD_SendCmd
 19212   00C4B0  0009               	tblrd		*+
 19213   00C4B2  CFF5 F012          	movff	tablat,??_SD_SendCmd+1
 19214   00C4B6  D802               	call	u6668
 19215   00C4B8  EF68  F062         	goto	u6669
 19216   00C4BC                     u6668:
 19217   00C4BC  0005               	push	
 19218   00C4BE  6EFA               	movwf	pclath,c
 19219   00C4C0  5011               	movf	??_SD_SendCmd^0,w,c
 19220   00C4C2  6EFD               	movwf	tosl,c
 19221   00C4C4  5012               	movf	(??_SD_SendCmd+1)^0,w,c
 19222   00C4C6  6EFE               	movwf	tosh,c
 19223   00C4C8  6AFF               	clrf	tosu,c
 19224   00C4CA  50FA               	movf	pclath,w,c
 19225   00C4CC  501A               	movf	(SD_SendCmd@address_bytes+3)^0,w,c
 19226   00C4CE  0012               	return		;indir
 19227   00C4D0                     u6669:
 19228   00C4D0                     
 19229                           ;mcc_generated_files/sd_spi/sd_spi.c: 1261:     (void)spiMaster[SDFAST].exchangeByte(add
      +                          ress_bytes[2]);
 19230   00C4D0  0E8F               	movlw	low (_spiMaster+4)
 19231   00C4D2  6EF6               	movwf	tblptrl,c
 19232   00C4D4  0EFF               	movlw	high (_spiMaster+4)
 19233   00C4D6  6EF7               	movwf	tblptrh,c
 19234   00C4D8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19235   00C4D8  6AF8               	clrf	tblptru,c
 19236   00C4DA                     	endif
 19237   00C4DA                     	if	0	;tblptru may be non-zero
 19238   00C4DA                     	endif
 19239   00C4DA  0009               	tblrd		*+
 19240   00C4DC  CFF5 F011          	movff	tablat,??_SD_SendCmd
 19241   00C4E0  0009               	tblrd		*+
 19242   00C4E2  CFF5 F012          	movff	tablat,??_SD_SendCmd+1
 19243   00C4E6  D802               	call	u6678
 19244   00C4E8  EF80  F062         	goto	u6679
 19245   00C4EC                     u6678:
 19246   00C4EC  0005               	push	
 19247   00C4EE  6EFA               	movwf	pclath,c
 19248   00C4F0  5011               	movf	??_SD_SendCmd^0,w,c
 19249   00C4F2  6EFD               	movwf	tosl,c
 19250   00C4F4  5012               	movf	(??_SD_SendCmd+1)^0,w,c
 19251   00C4F6  6EFE               	movwf	tosh,c
 19252   00C4F8  6AFF               	clrf	tosu,c
 19253   00C4FA  50FA               	movf	pclath,w,c
 19254   00C4FC  5019               	movf	(SD_SendCmd@address_bytes+2)^0,w,c
 19255   00C4FE  0012               	return		;indir
 19256   00C500                     u6679:
 19257   00C500                     
 19258                           ;mcc_generated_files/sd_spi/sd_spi.c: 1262:     (void)spiMaster[SDFAST].exchangeByte(add
      +                          ress_bytes[1]);
 19259   00C500  0E8F               	movlw	low (_spiMaster+4)
 19260   00C502  6EF6               	movwf	tblptrl,c
 19261   00C504  0EFF               	movlw	high (_spiMaster+4)
 19262   00C506  6EF7               	movwf	tblptrh,c
 19263   00C508                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19264   00C508  6AF8               	clrf	tblptru,c
 19265   00C50A                     	endif
 19266   00C50A                     	if	0	;tblptru may be non-zero
 19267   00C50A                     	endif
 19268   00C50A  0009               	tblrd		*+
 19269   00C50C  CFF5 F011          	movff	tablat,??_SD_SendCmd
 19270   00C510  0009               	tblrd		*+
 19271   00C512  CFF5 F012          	movff	tablat,??_SD_SendCmd+1
 19272   00C516  D802               	call	u6688
 19273   00C518  EF98  F062         	goto	u6689
 19274   00C51C                     u6688:
 19275   00C51C  0005               	push	
 19276   00C51E  6EFA               	movwf	pclath,c
 19277   00C520  5011               	movf	??_SD_SendCmd^0,w,c
 19278   00C522  6EFD               	movwf	tosl,c
 19279   00C524  5012               	movf	(??_SD_SendCmd+1)^0,w,c
 19280   00C526  6EFE               	movwf	tosh,c
 19281   00C528  6AFF               	clrf	tosu,c
 19282   00C52A  50FA               	movf	pclath,w,c
 19283   00C52C  5018               	movf	(SD_SendCmd@address_bytes+1)^0,w,c
 19284   00C52E  0012               	return		;indir
 19285   00C530                     u6689:
 19286   00C530                     
 19287                           ;mcc_generated_files/sd_spi/sd_spi.c: 1263:     (void)spiMaster[SDFAST].exchangeByte(add
      +                          ress_bytes[0]);
 19288   00C530  0E8F               	movlw	low (_spiMaster+4)
 19289   00C532  6EF6               	movwf	tblptrl,c
 19290   00C534  0EFF               	movlw	high (_spiMaster+4)
 19291   00C536  6EF7               	movwf	tblptrh,c
 19292   00C538                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19293   00C538  6AF8               	clrf	tblptru,c
 19294   00C53A                     	endif
 19295   00C53A                     	if	0	;tblptru may be non-zero
 19296   00C53A                     	endif
 19297   00C53A  0009               	tblrd		*+
 19298   00C53C  CFF5 F011          	movff	tablat,??_SD_SendCmd
 19299   00C540  0009               	tblrd		*+
 19300   00C542  CFF5 F012          	movff	tablat,??_SD_SendCmd+1
 19301   00C546  D802               	call	u6698
 19302   00C548  EFB0  F062         	goto	u6699
 19303   00C54C                     u6698:
 19304   00C54C  0005               	push	
 19305   00C54E  6EFA               	movwf	pclath,c
 19306   00C550  5011               	movf	??_SD_SendCmd^0,w,c
 19307   00C552  6EFD               	movwf	tosl,c
 19308   00C554  5012               	movf	(??_SD_SendCmd+1)^0,w,c
 19309   00C556  6EFE               	movwf	tosh,c
 19310   00C558  6AFF               	clrf	tosu,c
 19311   00C55A  50FA               	movf	pclath,w,c
 19312   00C55C  5017               	movf	SD_SendCmd@address_bytes^0,w,c
 19313   00C55E  0012               	return		;indir
 19314   00C560                     u6699:
 19315   00C560                     
 19316                           ;mcc_generated_files/sd_spi/sd_spi.c: 1265:     (void)spiMaster[SDFAST].exchangeByte(sdm
      +                          mc_cmdtable[cmd].CRC);
 19317   00C560  0E8F               	movlw	low (_spiMaster+4)
 19318   00C562  6EF6               	movwf	tblptrl,c
 19319   00C564  0EFF               	movlw	high (_spiMaster+4)
 19320   00C566  6EF7               	movwf	tblptrh,c
 19321   00C568                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19322   00C568  6AF8               	clrf	tblptru,c
 19323   00C56A                     	endif
 19324   00C56A                     	if	0	;tblptru may be non-zero
 19325   00C56A                     	endif
 19326   00C56A  0009               	tblrd		*+
 19327   00C56C  CFF5 F011          	movff	tablat,??_SD_SendCmd
 19328   00C570  0009               	tblrd		*+
 19329   00C572  CFF5 F012          	movff	tablat,??_SD_SendCmd+1
 19330   00C576  D802               	call	u6708
 19331   00C578  EFD8  F062         	goto	u6709
 19332   00C57C                     u6708:
 19333   00C57C  0005               	push	
 19334   00C57E  6EFA               	movwf	pclath,c
 19335   00C580  5011               	movf	??_SD_SendCmd^0,w,c
 19336   00C582  6EFD               	movwf	tosl,c
 19337   00C584  5012               	movf	(??_SD_SendCmd+1)^0,w,c
 19338   00C586  6EFE               	movwf	tosh,c
 19339   00C588  6AFF               	clrf	tosu,c
 19340   00C58A  50FA               	movf	pclath,w,c
 19341   00C58C  501D               	movf	SD_SendCmd@cmd^0,w,c
 19342   00C58E  0D04               	mullw	4
 19343   00C590  0E01               	movlw	1
 19344   00C592  26F3               	addwf	243,f,c
 19345   00C594  0E00               	movlw	0
 19346   00C596  22F4               	addwfc	244,f,c
 19347   00C598  0E3B               	movlw	low _sdmmc_cmdtable
 19348   00C59A  24F3               	addwf	243,w,c
 19349   00C59C  6EF6               	movwf	tblptrl,c
 19350   00C59E  0EFF               	movlw	high _sdmmc_cmdtable
 19351   00C5A0  20F4               	addwfc	244,w,c
 19352   00C5A2  6EF7               	movwf	tblptrh,c
 19353   00C5A4                     	if	1	;There are 3 active tblptr bytes
 19354   00C5A4  6AF8               	clrf	tblptru,c
 19355   00C5A6  0E00               	movlw	low (__mediumconst shr (0+16))
 19356   00C5A8  22F8               	addwfc	tblptru,f,c
 19357   00C5AA                     	endif
 19358   00C5AA  0008               	tblrd		*
 19359   00C5AC  50F5               	movf	tablat,w,c
 19360   00C5AE  0012               	return		;indir
 19361   00C5B0                     u6709:
 19362   00C5B0                     
 19363                           ;mcc_generated_files/sd_spi/sd_spi.c: 1270:     if(cmd == SD_STOP_TRANSMISSION)
 19364   00C5B0  0E05               	movlw	5
 19365   00C5B2  181D               	xorwf	SD_SendCmd@cmd^0,w,c
 19366   00C5B4  A4D8               	btfss	status,2,c
 19367   00C5B6  EFDF  F062         	goto	u6711
 19368   00C5BA  EFE1  F062         	goto	u6710
 19369   00C5BE                     u6711:
 19370   00C5BE  EFF9  F062         	goto	l5683
 19371   00C5C2                     u6710:
 19372   00C5C2                     
 19373                           ;mcc_generated_files/sd_spi/sd_spi.c: 1271:     {;mcc_generated_files/sd_spi/sd_spi.c: 1
      +                          272:         (void)spiMaster[SDFAST].exchangeByte(0xFF);
 19374   00C5C2  0E8F               	movlw	low (_spiMaster+4)
 19375   00C5C4  6EF6               	movwf	tblptrl,c
 19376   00C5C6  0EFF               	movlw	high (_spiMaster+4)
 19377   00C5C8  6EF7               	movwf	tblptrh,c
 19378   00C5CA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19379   00C5CA  6AF8               	clrf	tblptru,c
 19380   00C5CC                     	endif
 19381   00C5CC                     	if	0	;tblptru may be non-zero
 19382   00C5CC                     	endif
 19383   00C5CC  0009               	tblrd		*+
 19384   00C5CE  CFF5 F011          	movff	tablat,??_SD_SendCmd
 19385   00C5D2  0009               	tblrd		*+
 19386   00C5D4  CFF5 F012          	movff	tablat,??_SD_SendCmd+1
 19387   00C5D8  D802               	call	u6728
 19388   00C5DA  EFF9  F062         	goto	u6729
 19389   00C5DE                     u6728:
 19390   00C5DE  0005               	push	
 19391   00C5E0  6EFA               	movwf	pclath,c
 19392   00C5E2  5011               	movf	??_SD_SendCmd^0,w,c
 19393   00C5E4  6EFD               	movwf	tosl,c
 19394   00C5E6  5012               	movf	(??_SD_SendCmd+1)^0,w,c
 19395   00C5E8  6EFE               	movwf	tosh,c
 19396   00C5EA  6AFF               	clrf	tosu,c
 19397   00C5EC  50FA               	movf	pclath,w,c
 19398   00C5EE  0EFF               	movlw	255
 19399   00C5F0  0012               	return		;indir
 19400   00C5F2                     u6729:
 19401   00C5F2                     l5683:
 19402                           
 19403                           ;mcc_generated_files/sd_spi/sd_spi.c: 1278:     timeout = (uint16_t)20;
 19404   00C5F2  0E00               	movlw	0
 19405   00C5F4  6E1C               	movwf	(SD_SendCmd@timeout+1)^0,c
 19406   00C5F6  0E14               	movlw	20
 19407   00C5F8  6E1B               	movwf	SD_SendCmd@timeout^0,c
 19408   00C5FA                     l5685:
 19409                           
 19410                           ;mcc_generated_files/sd_spi/sd_spi.c: 1280:     {;mcc_generated_files/sd_spi/sd_spi.c: 1
      +                          281:         response.r1._byte = spiMaster[SDFAST].exchangeByte(0xFF);
 19411   00C5FA  0E8F               	movlw	low (_spiMaster+4)
 19412   00C5FC  6EF6               	movwf	tblptrl,c
 19413   00C5FE  0EFF               	movlw	high (_spiMaster+4)
 19414   00C600  6EF7               	movwf	tblptrh,c
 19415   00C602                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19416   00C602  6AF8               	clrf	tblptru,c
 19417   00C604                     	endif
 19418   00C604                     	if	0	;tblptru may be non-zero
 19419   00C604                     	endif
 19420   00C604  0009               	tblrd		*+
 19421   00C606  CFF5 F011          	movff	tablat,??_SD_SendCmd
 19422   00C60A  0009               	tblrd		*+
 19423   00C60C  CFF5 F012          	movff	tablat,??_SD_SendCmd+1
 19424   00C610  D802               	call	u6738
 19425   00C612  EF15  F063         	goto	u6739
 19426   00C616                     u6738:
 19427   00C616  0005               	push	
 19428   00C618  6EFA               	movwf	pclath,c
 19429   00C61A  5011               	movf	??_SD_SendCmd^0,w,c
 19430   00C61C  6EFD               	movwf	tosl,c
 19431   00C61E  5012               	movf	(??_SD_SendCmd+1)^0,w,c
 19432   00C620  6EFE               	movwf	tosh,c
 19433   00C622  6AFF               	clrf	tosu,c
 19434   00C624  50FA               	movf	pclath,w,c
 19435   00C626  0EFF               	movlw	255
 19436   00C628  0012               	return		;indir
 19437   00C62A                     u6739:
 19438   00C62A  6E1E               	movwf	SD_SendCmd@response^0,c
 19439   00C62C                     
 19440                           ;mcc_generated_files/sd_spi/sd_spi.c: 1282:         timeout--;
 19441   00C62C  061B               	decf	SD_SendCmd@timeout^0,f,c
 19442   00C62E  A0D8               	btfss	status,0,c
 19443   00C630  061C               	decf	(SD_SendCmd@timeout+1)^0,f,c
 19444   00C632                     
 19445                           ;mcc_generated_files/sd_spi/sd_spi.c: 1283:     }while((response.r1._byte == SD_TOKEN_FL
      +                          OATING_BUS) && (timeout != 0));
 19446   00C632  281E               	incf	SD_SendCmd@response^0,w,c
 19447   00C634  A4D8               	btfss	status,2,c
 19448   00C636  EF1F  F063         	goto	u6741
 19449   00C63A  EF21  F063         	goto	u6740
 19450   00C63E                     u6741:
 19451   00C63E  EF2A  F063         	goto	l5693
 19452   00C642                     u6740:
 19453   00C642  501B               	movf	SD_SendCmd@timeout^0,w,c
 19454   00C644  101C               	iorwf	(SD_SendCmd@timeout+1)^0,w,c
 19455   00C646  A4D8               	btfss	status,2,c
 19456   00C648  EF28  F063         	goto	u6751
 19457   00C64C  EF2A  F063         	goto	u6750
 19458   00C650                     u6751:
 19459   00C650  EFFD  F062         	goto	l5685
 19460   00C654                     u6750:
 19461   00C654                     l5693:
 19462                           
 19463                           ;mcc_generated_files/sd_spi/sd_spi.c: 1286:     if(sdmmc_cmdtable[cmd].responsetype == S
      +                          D_RESPONSE_R2)
 19464   00C654  501D               	movf	SD_SendCmd@cmd^0,w,c
 19465   00C656  0D04               	mullw	4
 19466   00C658  0E02               	movlw	2
 19467   00C65A  26F3               	addwf	243,f,c
 19468   00C65C  0E00               	movlw	0
 19469   00C65E  22F4               	addwfc	244,f,c
 19470   00C660  0E3B               	movlw	low _sdmmc_cmdtable
 19471   00C662  24F3               	addwf	243,w,c
 19472   00C664  6EF6               	movwf	tblptrl,c
 19473   00C666  0EFF               	movlw	high _sdmmc_cmdtable
 19474   00C668  20F4               	addwfc	244,w,c
 19475   00C66A  6EF7               	movwf	tblptrh,c
 19476   00C66C                     	if	1	;There are 3 active tblptr bytes
 19477   00C66C  6AF8               	clrf	tblptru,c
 19478   00C66E  0E00               	movlw	low (__mediumconst shr (0+16))
 19479   00C670  22F8               	addwfc	tblptru,f,c
 19480   00C672                     	endif
 19481   00C672  0008               	tblrd		*
 19482   00C674  50F5               	movf	tablat,w,c
 19483   00C676  0A02               	xorlw	2
 19484   00C678  A4D8               	btfss	status,2,c
 19485   00C67A  EF41  F063         	goto	u6761
 19486   00C67E  EF43  F063         	goto	u6760
 19487   00C682                     u6761:
 19488   00C682  EF60  F063         	goto	l5699
 19489   00C686                     u6760:
 19490   00C686                     
 19491                           ;mcc_generated_files/sd_spi/sd_spi.c: 1287:     {;mcc_generated_files/sd_spi/sd_spi.c: 1
      +                          288:         response.r2._byte1 = response.r1._byte;
 19492   00C686  C01E  F01F         	movff	SD_SendCmd@response,SD_SendCmd@response+1
 19493   00C68A                     
 19494                           ;mcc_generated_files/sd_spi/sd_spi.c: 1289:         response.r2._byte0 = spiMaster[SDFAS
      +                          T].exchangeByte(0xFF);
 19495   00C68A  0E8F               	movlw	low (_spiMaster+4)
 19496   00C68C  6EF6               	movwf	tblptrl,c
 19497   00C68E  0EFF               	movlw	high (_spiMaster+4)
 19498   00C690  6EF7               	movwf	tblptrh,c
 19499   00C692                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19500   00C692  6AF8               	clrf	tblptru,c
 19501   00C694                     	endif
 19502   00C694                     	if	0	;tblptru may be non-zero
 19503   00C694                     	endif
 19504   00C694  0009               	tblrd		*+
 19505   00C696  CFF5 F011          	movff	tablat,??_SD_SendCmd
 19506   00C69A  0009               	tblrd		*+
 19507   00C69C  CFF5 F012          	movff	tablat,??_SD_SendCmd+1
 19508   00C6A0  D802               	call	u6778
 19509   00C6A2  EF5D  F063         	goto	u6779
 19510   00C6A6                     u6778:
 19511   00C6A6  0005               	push	
 19512   00C6A8  6EFA               	movwf	pclath,c
 19513   00C6AA  5011               	movf	??_SD_SendCmd^0,w,c
 19514   00C6AC  6EFD               	movwf	tosl,c
 19515   00C6AE  5012               	movf	(??_SD_SendCmd+1)^0,w,c
 19516   00C6B0  6EFE               	movwf	tosh,c
 19517   00C6B2  6AFF               	clrf	tosu,c
 19518   00C6B4  50FA               	movf	pclath,w,c
 19519   00C6B6  0EFF               	movlw	255
 19520   00C6B8  0012               	return		;indir
 19521   00C6BA                     u6779:
 19522   00C6BA  6E1E               	movwf	SD_SendCmd@response^0,c
 19523                           
 19524                           ;mcc_generated_files/sd_spi/sd_spi.c: 1290:     }
 19525   00C6BC  EF33  F064         	goto	l362
 19526   00C6C0                     l5699:
 19527   00C6C0  501D               	movf	SD_SendCmd@cmd^0,w,c
 19528   00C6C2  0D04               	mullw	4
 19529   00C6C4  0E02               	movlw	2
 19530   00C6C6  26F3               	addwf	243,f,c
 19531   00C6C8  0E00               	movlw	0
 19532   00C6CA  22F4               	addwfc	244,f,c
 19533   00C6CC  0E3B               	movlw	low _sdmmc_cmdtable
 19534   00C6CE  24F3               	addwf	243,w,c
 19535   00C6D0  6EF6               	movwf	tblptrl,c
 19536   00C6D2  0EFF               	movlw	high _sdmmc_cmdtable
 19537   00C6D4  20F4               	addwfc	244,w,c
 19538   00C6D6  6EF7               	movwf	tblptrh,c
 19539   00C6D8                     	if	1	;There are 3 active tblptr bytes
 19540   00C6D8  6AF8               	clrf	tblptru,c
 19541   00C6DA  0E00               	movlw	low (__mediumconst shr (0+16))
 19542   00C6DC  22F8               	addwfc	tblptru,f,c
 19543   00C6DE                     	endif
 19544   00C6DE  0008               	tblrd		*
 19545   00C6E0  50F5               	movf	tablat,w,c
 19546   00C6E2  06E8               	decf	wreg,f,c
 19547   00C6E4  A4D8               	btfss	status,2,c
 19548   00C6E6  EF77  F063         	goto	u6781
 19549   00C6EA  EF79  F063         	goto	u6780
 19550   00C6EE                     u6781:
 19551   00C6EE  EFB6  F063         	goto	l5713
 19552   00C6F2                     u6780:
 19553   00C6F2                     
 19554                           ;mcc_generated_files/sd_spi/sd_spi.c: 1292:     {;mcc_generated_files/sd_spi/sd_spi.c: 1
      +                          300:         longTimeout = (uint32_t)0xA0000;
 19555   00C6F2  0E00               	movlw	0
 19556   00C6F4  6E13               	movwf	SD_SendCmd@longTimeout^0,c
 19557   00C6F6  0E00               	movlw	0
 19558   00C6F8  6E14               	movwf	(SD_SendCmd@longTimeout+1)^0,c
 19559   00C6FA  0E0A               	movlw	10
 19560   00C6FC  6E15               	movwf	(SD_SendCmd@longTimeout+2)^0,c
 19561   00C6FE  0E00               	movlw	0
 19562   00C700  6E16               	movwf	(SD_SendCmd@longTimeout+3)^0,c
 19563   00C702                     l5703:
 19564                           
 19565                           ;mcc_generated_files/sd_spi/sd_spi.c: 1302:         {;mcc_generated_files/sd_spi/sd_spi.
      +                          c: 1303:             response.r1._byte = spiMaster[SDFAST].exchangeByte(0xFF);
 19566   00C702  0E8F               	movlw	low (_spiMaster+4)
 19567   00C704  6EF6               	movwf	tblptrl,c
 19568   00C706  0EFF               	movlw	high (_spiMaster+4)
 19569   00C708  6EF7               	movwf	tblptrh,c
 19570   00C70A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19571   00C70A  6AF8               	clrf	tblptru,c
 19572   00C70C                     	endif
 19573   00C70C                     	if	0	;tblptru may be non-zero
 19574   00C70C                     	endif
 19575   00C70C  0009               	tblrd		*+
 19576   00C70E  CFF5 F011          	movff	tablat,??_SD_SendCmd
 19577   00C712  0009               	tblrd		*+
 19578   00C714  CFF5 F012          	movff	tablat,??_SD_SendCmd+1
 19579   00C718  D802               	call	u6798
 19580   00C71A  EF99  F063         	goto	u6799
 19581   00C71E                     u6798:
 19582   00C71E  0005               	push	
 19583   00C720  6EFA               	movwf	pclath,c
 19584   00C722  5011               	movf	??_SD_SendCmd^0,w,c
 19585   00C724  6EFD               	movwf	tosl,c
 19586   00C726  5012               	movf	(??_SD_SendCmd+1)^0,w,c
 19587   00C728  6EFE               	movwf	tosh,c
 19588   00C72A  6AFF               	clrf	tosu,c
 19589   00C72C  50FA               	movf	pclath,w,c
 19590   00C72E  0EFF               	movlw	255
 19591   00C730  0012               	return		;indir
 19592   00C732                     u6799:
 19593   00C732  6E1E               	movwf	SD_SendCmd@response^0,c
 19594   00C734                     
 19595                           ;mcc_generated_files/sd_spi/sd_spi.c: 1304:             longTimeout--;
 19596   00C734  0613               	decf	SD_SendCmd@longTimeout^0,f,c
 19597   00C736  0E00               	movlw	0
 19598   00C738  5A14               	subwfb	(SD_SendCmd@longTimeout+1)^0,f,c
 19599   00C73A  5A15               	subwfb	(SD_SendCmd@longTimeout+2)^0,f,c
 19600   00C73C  5A16               	subwfb	(SD_SendCmd@longTimeout+3)^0,f,c
 19601   00C73E                     
 19602                           ;mcc_generated_files/sd_spi/sd_spi.c: 1305:         }while((response.r1._byte == 0x00) &
      +                          & (longTimeout != 0));
 19603   00C73E  501E               	movf	SD_SendCmd@response^0,w,c
 19604   00C740  A4D8               	btfss	status,2,c
 19605   00C742  EFA5  F063         	goto	u6801
 19606   00C746  EFA7  F063         	goto	u6800
 19607   00C74A                     u6801:
 19608   00C74A  EFB2  F063         	goto	l5711
 19609   00C74E                     u6800:
 19610   00C74E  5013               	movf	SD_SendCmd@longTimeout^0,w,c
 19611   00C750  1014               	iorwf	(SD_SendCmd@longTimeout+1)^0,w,c
 19612   00C752  1015               	iorwf	(SD_SendCmd@longTimeout+2)^0,w,c
 19613   00C754  1016               	iorwf	(SD_SendCmd@longTimeout+3)^0,w,c
 19614   00C756  A4D8               	btfss	status,2,c
 19615   00C758  EFB0  F063         	goto	u6811
 19616   00C75C  EFB2  F063         	goto	u6810
 19617   00C760                     u6811:
 19618   00C760  EF81  F063         	goto	l5703
 19619   00C764                     u6810:
 19620   00C764                     l5711:
 19621                           
 19622                           ;mcc_generated_files/sd_spi/sd_spi.c: 1307:         response.r1._byte = 0x00;
 19623   00C764  0E00               	movlw	0
 19624   00C766  6E1E               	movwf	SD_SendCmd@response^0,c
 19625                           
 19626                           ;mcc_generated_files/sd_spi/sd_spi.c: 1308:     }
 19627   00C768  EF33  F064         	goto	l362
 19628   00C76C                     l5713:
 19629   00C76C  501D               	movf	SD_SendCmd@cmd^0,w,c
 19630   00C76E  0D04               	mullw	4
 19631   00C770  0E02               	movlw	2
 19632   00C772  26F3               	addwf	243,f,c
 19633   00C774  0E00               	movlw	0
 19634   00C776  22F4               	addwfc	244,f,c
 19635   00C778  0E3B               	movlw	low _sdmmc_cmdtable
 19636   00C77A  24F3               	addwf	243,w,c
 19637   00C77C  6EF6               	movwf	tblptrl,c
 19638   00C77E  0EFF               	movlw	high _sdmmc_cmdtable
 19639   00C780  20F4               	addwfc	244,w,c
 19640   00C782  6EF7               	movwf	tblptrh,c
 19641   00C784                     	if	1	;There are 3 active tblptr bytes
 19642   00C784  6AF8               	clrf	tblptru,c
 19643   00C786  0E00               	movlw	low (__mediumconst shr (0+16))
 19644   00C788  22F8               	addwfc	tblptru,f,c
 19645   00C78A                     	endif
 19646   00C78A  0008               	tblrd		*
 19647   00C78C  50F5               	movf	tablat,w,c
 19648   00C78E  0A04               	xorlw	4
 19649   00C790  A4D8               	btfss	status,2,c
 19650   00C792  EFCD  F063         	goto	u6821
 19651   00C796  EFCF  F063         	goto	u6820
 19652   00C79A                     u6821:
 19653   00C79A  EF33  F064         	goto	l362
 19654   00C79E                     u6820:
 19655   00C79E                     
 19656                           ;mcc_generated_files/sd_spi/sd_spi.c: 1310:     {;mcc_generated_files/sd_spi/sd_spi.c: 1
      +                          316:         response.r7.bytewise.argument._byte3 = spiMaster[SDFAST].exchangeByte(0xFF)
      +                          ;
 19657   00C79E  0E8F               	movlw	low (_spiMaster+4)
 19658   00C7A0  6EF6               	movwf	tblptrl,c
 19659   00C7A2  0EFF               	movlw	high (_spiMaster+4)
 19660   00C7A4  6EF7               	movwf	tblptrh,c
 19661   00C7A6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19662   00C7A6  6AF8               	clrf	tblptru,c
 19663   00C7A8                     	endif
 19664   00C7A8                     	if	0	;tblptru may be non-zero
 19665   00C7A8                     	endif
 19666   00C7A8  0009               	tblrd		*+
 19667   00C7AA  CFF5 F011          	movff	tablat,??_SD_SendCmd
 19668   00C7AE  0009               	tblrd		*+
 19669   00C7B0  CFF5 F012          	movff	tablat,??_SD_SendCmd+1
 19670   00C7B4  D802               	call	u6838
 19671   00C7B6  EFE7  F063         	goto	u6839
 19672   00C7BA                     u6838:
 19673   00C7BA  0005               	push	
 19674   00C7BC  6EFA               	movwf	pclath,c
 19675   00C7BE  5011               	movf	??_SD_SendCmd^0,w,c
 19676   00C7C0  6EFD               	movwf	tosl,c
 19677   00C7C2  5012               	movf	(??_SD_SendCmd+1)^0,w,c
 19678   00C7C4  6EFE               	movwf	tosh,c
 19679   00C7C6  6AFF               	clrf	tosu,c
 19680   00C7C8  50FA               	movf	pclath,w,c
 19681   00C7CA  0EFF               	movlw	255
 19682   00C7CC  0012               	return		;indir
 19683   00C7CE                     u6839:
 19684   00C7CE  6E22               	movwf	(SD_SendCmd@response+4)^0,c
 19685                           
 19686                           ;mcc_generated_files/sd_spi/sd_spi.c: 1317:         response.r7.bytewise.argument._byte2
      +                           = spiMaster[SDFAST].exchangeByte(0xFF);
 19687   00C7D0  0E8F               	movlw	low (_spiMaster+4)
 19688   00C7D2  6EF6               	movwf	tblptrl,c
 19689   00C7D4  0EFF               	movlw	high (_spiMaster+4)
 19690   00C7D6  6EF7               	movwf	tblptrh,c
 19691   00C7D8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19692   00C7D8  6AF8               	clrf	tblptru,c
 19693   00C7DA                     	endif
 19694   00C7DA                     	if	0	;tblptru may be non-zero
 19695   00C7DA                     	endif
 19696   00C7DA  0009               	tblrd		*+
 19697   00C7DC  CFF5 F011          	movff	tablat,??_SD_SendCmd
 19698   00C7E0  0009               	tblrd		*+
 19699   00C7E2  CFF5 F012          	movff	tablat,??_SD_SendCmd+1
 19700   00C7E6  D802               	call	u6848
 19701   00C7E8  EF00  F064         	goto	u6849
 19702   00C7EC                     u6848:
 19703   00C7EC  0005               	push	
 19704   00C7EE  6EFA               	movwf	pclath,c
 19705   00C7F0  5011               	movf	??_SD_SendCmd^0,w,c
 19706   00C7F2  6EFD               	movwf	tosl,c
 19707   00C7F4  5012               	movf	(??_SD_SendCmd+1)^0,w,c
 19708   00C7F6  6EFE               	movwf	tosh,c
 19709   00C7F8  6AFF               	clrf	tosu,c
 19710   00C7FA  50FA               	movf	pclath,w,c
 19711   00C7FC  0EFF               	movlw	255
 19712   00C7FE  0012               	return		;indir
 19713   00C800                     u6849:
 19714   00C800  6E21               	movwf	(SD_SendCmd@response+3)^0,c
 19715                           
 19716                           ;mcc_generated_files/sd_spi/sd_spi.c: 1318:         response.r7.bytewise.argument._byte1
      +                           = spiMaster[SDFAST].exchangeByte(0xFF);
 19717   00C802  0E8F               	movlw	low (_spiMaster+4)
 19718   00C804  6EF6               	movwf	tblptrl,c
 19719   00C806  0EFF               	movlw	high (_spiMaster+4)
 19720   00C808  6EF7               	movwf	tblptrh,c
 19721   00C80A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19722   00C80A  6AF8               	clrf	tblptru,c
 19723   00C80C                     	endif
 19724   00C80C                     	if	0	;tblptru may be non-zero
 19725   00C80C                     	endif
 19726   00C80C  0009               	tblrd		*+
 19727   00C80E  CFF5 F011          	movff	tablat,??_SD_SendCmd
 19728   00C812  0009               	tblrd		*+
 19729   00C814  CFF5 F012          	movff	tablat,??_SD_SendCmd+1
 19730   00C818  D802               	call	u6858
 19731   00C81A  EF19  F064         	goto	u6859
 19732   00C81E                     u6858:
 19733   00C81E  0005               	push	
 19734   00C820  6EFA               	movwf	pclath,c
 19735   00C822  5011               	movf	??_SD_SendCmd^0,w,c
 19736   00C824  6EFD               	movwf	tosl,c
 19737   00C826  5012               	movf	(??_SD_SendCmd+1)^0,w,c
 19738   00C828  6EFE               	movwf	tosh,c
 19739   00C82A  6AFF               	clrf	tosu,c
 19740   00C82C  50FA               	movf	pclath,w,c
 19741   00C82E  0EFF               	movlw	255
 19742   00C830  0012               	return		;indir
 19743   00C832                     u6859:
 19744   00C832  6E20               	movwf	(SD_SendCmd@response+2)^0,c
 19745                           
 19746                           ;mcc_generated_files/sd_spi/sd_spi.c: 1319:         response.r7.bytewise.argument._byte0
      +                           = spiMaster[SDFAST].exchangeByte(0xFF);
 19747   00C834  0E8F               	movlw	low (_spiMaster+4)
 19748   00C836  6EF6               	movwf	tblptrl,c
 19749   00C838  0EFF               	movlw	high (_spiMaster+4)
 19750   00C83A  6EF7               	movwf	tblptrh,c
 19751   00C83C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19752   00C83C  6AF8               	clrf	tblptru,c
 19753   00C83E                     	endif
 19754   00C83E                     	if	0	;tblptru may be non-zero
 19755   00C83E                     	endif
 19756   00C83E  0009               	tblrd		*+
 19757   00C840  CFF5 F011          	movff	tablat,??_SD_SendCmd
 19758   00C844  0009               	tblrd		*+
 19759   00C846  CFF5 F012          	movff	tablat,??_SD_SendCmd+1
 19760   00C84A  D802               	call	u6868
 19761   00C84C  EF32  F064         	goto	u6869
 19762   00C850                     u6868:
 19763   00C850  0005               	push	
 19764   00C852  6EFA               	movwf	pclath,c
 19765   00C854  5011               	movf	??_SD_SendCmd^0,w,c
 19766   00C856  6EFD               	movwf	tosl,c
 19767   00C858  5012               	movf	(??_SD_SendCmd+1)^0,w,c
 19768   00C85A  6EFE               	movwf	tosh,c
 19769   00C85C  6AFF               	clrf	tosu,c
 19770   00C85E  50FA               	movf	pclath,w,c
 19771   00C860  0EFF               	movlw	255
 19772   00C862  0012               	return		;indir
 19773   00C864                     u6869:
 19774   00C864  6E1F               	movwf	(SD_SendCmd@response+1)^0,c
 19775   00C866                     l362:
 19776                           
 19777                           ;mcc_generated_files/sd_spi/sd_spi.c: 1325:     (void)spiMaster[SDFAST].exchangeByte(0xF
      +                          F);
 19778   00C866  0E8F               	movlw	low (_spiMaster+4)
 19779   00C868  6EF6               	movwf	tblptrl,c
 19780   00C86A  0EFF               	movlw	high (_spiMaster+4)
 19781   00C86C  6EF7               	movwf	tblptrh,c
 19782   00C86E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19783   00C86E  6AF8               	clrf	tblptru,c
 19784   00C870                     	endif
 19785   00C870                     	if	0	;tblptru may be non-zero
 19786   00C870                     	endif
 19787   00C870  0009               	tblrd		*+
 19788   00C872  CFF5 F011          	movff	tablat,??_SD_SendCmd
 19789   00C876  0009               	tblrd		*+
 19790   00C878  CFF5 F012          	movff	tablat,??_SD_SendCmd+1
 19791   00C87C  D802               	call	u6878
 19792   00C87E  EF4B  F064         	goto	u6879
 19793   00C882                     u6878:
 19794   00C882  0005               	push	
 19795   00C884  6EFA               	movwf	pclath,c
 19796   00C886  5011               	movf	??_SD_SendCmd^0,w,c
 19797   00C888  6EFD               	movwf	tosl,c
 19798   00C88A  5012               	movf	(??_SD_SendCmd+1)^0,w,c
 19799   00C88C  6EFE               	movwf	tosh,c
 19800   00C88E  6AFF               	clrf	tosu,c
 19801   00C890  50FA               	movf	pclath,w,c
 19802   00C892  0EFF               	movlw	255
 19803   00C894  0012               	return		;indir
 19804   00C896                     u6879:
 19805   00C896                     
 19806                           ;mcc_generated_files/sd_spi/sd_spi.c: 1328:     if( sdmmc_cmdtable[cmd].moreDataExpected
      +                           == 0 )
 19807   00C896  501D               	movf	SD_SendCmd@cmd^0,w,c
 19808   00C898  0D04               	mullw	4
 19809   00C89A  0E03               	movlw	3
 19810   00C89C  26F3               	addwf	243,f,c
 19811   00C89E  0E00               	movlw	0
 19812   00C8A0  22F4               	addwfc	244,f,c
 19813   00C8A2  0E3B               	movlw	low _sdmmc_cmdtable
 19814   00C8A4  24F3               	addwf	243,w,c
 19815   00C8A6  6EF6               	movwf	tblptrl,c
 19816   00C8A8  0EFF               	movlw	high _sdmmc_cmdtable
 19817   00C8AA  20F4               	addwfc	244,w,c
 19818   00C8AC  6EF7               	movwf	tblptrh,c
 19819   00C8AE                     	if	1	;There are 3 active tblptr bytes
 19820   00C8AE  6AF8               	clrf	tblptru,c
 19821   00C8B0  0E00               	movlw	low (__mediumconst shr (0+16))
 19822   00C8B2  22F8               	addwfc	tblptru,f,c
 19823   00C8B4                     	endif
 19824   00C8B4  0008               	tblrd		*
 19825   00C8B6  50F5               	movf	tablat,w,c
 19826   00C8B8  0900               	iorlw	0
 19827   00C8BA  A4D8               	btfss	status,2,c
 19828   00C8BC  EF62  F064         	goto	u6881
 19829   00C8C0  EF64  F064         	goto	u6880
 19830   00C8C4                     u6881:
 19831   00C8C4  EF65  F064         	goto	l5719
 19832   00C8C8                     u6880:
 19833   00C8C8  848B               	bsf	139,2,c	;volatile
 19834   00C8CA                     l5719:
 19835                           
 19836                           ;mcc_generated_files/sd_spi/sd_spi.c: 1333:     return(response);
 19837   00C8CA  EE20  F01E         	lfsr	2,SD_SendCmd@response
 19838   00C8CE  EE00  F00C         	lfsr	0,?_SD_SendCmd
 19839   00C8D2  0E04               	movlw	4
 19840   00C8D4                     u6891:
 19841   00C8D4  CFDB FFEB          	movff	plusw2,plusw0
 19842   00C8D8  06E8               	decf	wreg,f,c
 19843   00C8DA  E2FC               	bc	u6891
 19844   00C8DC  0012               	return		;funcret
 19845   00C8DE                     __end_of_SD_SendCmd:
 19846                           	callstack 0
 19847                           
 19848 ;; *************** function _memcpy *****************
 19849 ;; Defined at:
 19850 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
 19851 ;; Parameters:    Size  Location     Type
 19852 ;;  d1              2    0[COMRAM] PTR void 
 19853 ;;		 -> SD_SendCmd@address_bytes(4), 
 19854 ;;  s1              2    2[COMRAM] PTR const void 
 19855 ;;		 -> SD_SendCmd@address(4), 
 19856 ;;  n               2    4[COMRAM] unsigned int 
 19857 ;; Auto vars:     Size  Location     Type
 19858 ;;  s               2    8[COMRAM] PTR const unsigned char 
 19859 ;;		 -> SD_SendCmd@address(4), 
 19860 ;;  d               2    6[COMRAM] PTR unsigned char 
 19861 ;;		 -> SD_SendCmd@address_bytes(4), 
 19862 ;;  tmp             1   10[COMRAM] unsigned char 
 19863 ;; Return value:  Size  Location     Type
 19864 ;;                  2    0[COMRAM] PTR void 
 19865 ;; Registers used:
 19866 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19867 ;; Tracked objects:
 19868 ;;		On entry : 0/0
 19869 ;;		On exit  : 0/0
 19870 ;;		Unchanged: 0/0
 19871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19872 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19873 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19875 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19876 ;;Total ram usage:       11 bytes
 19877 ;; Hardware stack levels used: 1
 19878 ;; This function calls:
 19879 ;;		Nothing
 19880 ;; This function is called by:
 19881 ;;		_SD_SendCmd
 19882 ;; This function uses a non-reentrant model
 19883 ;;
 19884                           
 19885                           	psect	text58
 19886   008C8A                     __ptext58:
 19887                           	callstack 0
 19888   008C8A                     _memcpy:
 19889                           	callstack 25
 19890   008C8A  C003  F009         	movff	memcpy@s1,memcpy@s
 19891   008C8E  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
 19892   008C92  C001  F007         	movff	memcpy@d1,memcpy@d
 19893   008C96  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
 19894   008C9A  EF5F  F046         	goto	l5633
 19895   008C9E                     l5625:
 19896   008C9E  C009  FFD9         	movff	memcpy@s,fsr2l
 19897   008CA2  C00A  FFDA         	movff	memcpy@s+1,fsr2h
 19898   008CA6  50DF               	movf	indf2,w,c
 19899   008CA8  6E0B               	movwf	memcpy@tmp^0,c
 19900   008CAA  4A09               	infsnz	memcpy@s^0,f,c
 19901   008CAC  2A0A               	incf	(memcpy@s+1)^0,f,c
 19902   008CAE  C007  FFD9         	movff	memcpy@d,fsr2l
 19903   008CB2  C008  FFDA         	movff	memcpy@d+1,fsr2h
 19904   008CB6  C00B  FFDF         	movff	memcpy@tmp,indf2
 19905   008CBA  4A07               	infsnz	memcpy@d^0,f,c
 19906   008CBC  2A08               	incf	(memcpy@d+1)^0,f,c
 19907   008CBE                     l5633:
 19908   008CBE  0605               	decf	memcpy@n^0,f,c
 19909   008CC0  A0D8               	btfss	status,0,c
 19910   008CC2  0606               	decf	(memcpy@n+1)^0,f,c
 19911   008CC4  2805               	incf	memcpy@n^0,w,c
 19912   008CC6  E106               	bnz	u6591
 19913   008CC8  2806               	incf	(memcpy@n+1)^0,w,c
 19914   008CCA  A4D8               	btfss	status,2,c
 19915   008CCC  EF6A  F046         	goto	u6591
 19916   008CD0  EF6C  F046         	goto	u6590
 19917   008CD4                     u6591:
 19918   008CD4  EF4F  F046         	goto	l5625
 19919   008CD8                     u6590:
 19920   008CD8  0012               	return		;funcret
 19921   008CDA                     __end_of_memcpy:
 19922                           	callstack 0
 19923                           
 19924 ;; *************** function _SPI1_ExchangeByte *****************
 19925 ;; Defined at:
 19926 ;;		line 94 in file "mcc_generated_files/spi1.c"
 19927 ;; Parameters:    Size  Location     Type
 19928 ;;  data            1    wreg     unsigned char 
 19929 ;; Auto vars:     Size  Location     Type
 19930 ;;  data            1    0[COMRAM] unsigned char 
 19931 ;; Return value:  Size  Location     Type
 19932 ;;                  1    wreg      unsigned char 
 19933 ;; Registers used:
 19934 ;;		wreg, status,2
 19935 ;; Tracked objects:
 19936 ;;		On entry : 0/0
 19937 ;;		On exit  : 0/0
 19938 ;;		Unchanged: 0/0
 19939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19941 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19943 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19944 ;;Total ram usage:        1 bytes
 19945 ;; Hardware stack levels used: 1
 19946 ;; This function calls:
 19947 ;;		Nothing
 19948 ;; This function is called by:
 19949 ;;		_SPI1_WriteBlock
 19950 ;;		_SPI1_ReadBlock
 19951 ;;		_SD_SendCmd
 19952 ;;		_SD_SPI_AsyncWriteTasks
 19953 ;;		_SD_SPI_AsyncReadTasks
 19954 ;;		_SD_SPI_DelayMilliseconds
 19955 ;;		_SD_SPI_MediaInitialize
 19956 ;; This function uses a non-reentrant model
 19957 ;;
 19958                           
 19959                           	psect	text59
 19960   008B22                     __ptext59:
 19961                           	callstack 0
 19962   008B22                     _SPI1_ExchangeByte:
 19963                           	callstack 26
 19964                           
 19965                           ;incstack = 0
 19966                           ;SPI1_ExchangeByte@data stored from wreg
 19967   008B22  6E01               	movwf	SPI1_ExchangeByte@data^0,c
 19968   008B24                     
 19969                           ;mcc_generated_files/spi1.c: 94: uint8_t SPI1_ExchangeByte(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 95: {;mcc_generated_files/spi1.c: 96:     SSP1BUF = data;
 19970   008B24  C001  FFC9         	movff	SPI1_ExchangeByte@data,4041	;volatile
 19971   008B28                     l98:
 19972   008B28  A69E               	btfss	158,3,c	;volatile
 19973   008B2A  EF99  F045         	goto	u6581
 19974   008B2E  EF9B  F045         	goto	u6580
 19975   008B32                     u6581:
 19976   008B32  EF94  F045         	goto	l98
 19977   008B36                     u6580:
 19978   008B36                     
 19979                           ;mcc_generated_files/spi1.c: 98:     PIR1bits.SSP1IF = 0;
 19980   008B36  969E               	bcf	158,3,c	;volatile
 19981                           
 19982                           ;mcc_generated_files/spi1.c: 99:     return SSP1BUF;
 19983   008B38  50C9               	movf	201,w,c	;volatile
 19984   008B3A  0012               	return		;funcret
 19985   008B3C                     __end_of_SPI1_ExchangeByte:
 19986                           	callstack 0
 19987                           
 19988 ;; *************** function _SDFAST_open *****************
 19989 ;; Defined at:
 19990 ;;		line 43 in file "mcc_generated_files/drivers/spi_master.c"
 19991 ;; Parameters:    Size  Location     Type
 19992 ;;		None
 19993 ;; Auto vars:     Size  Location     Type
 19994 ;;		None
 19995 ;; Return value:  Size  Location     Type
 19996 ;;                  1    wreg      _Bool 
 19997 ;; Registers used:
 19998 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19999 ;; Tracked objects:
 20000 ;;		On entry : 0/0
 20001 ;;		On exit  : 0/0
 20002 ;;		Unchanged: 0/0
 20003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20008 ;;Total ram usage:        0 bytes
 20009 ;; Hardware stack levels used: 1
 20010 ;; Hardware stack levels required when called: 1
 20011 ;; This function calls:
 20012 ;;		_SPI1_Open
 20013 ;; This function is called by:
 20014 ;;		_spi_master_open
 20015 ;;		_SD_SPI_SectorWrite
 20016 ;;		_SD_SPI_SectorRead
 20017 ;;		_SD_SPI_MediaInitialize
 20018 ;; This function uses a non-reentrant model
 20019 ;;
 20020                           
 20021                           	psect	text60
 20022   008AAA                     __ptext60:
 20023                           	callstack 0
 20024   008AAA                     _SDFAST_open:
 20025                           	callstack 26
 20026   008AAA                     
 20027                           ;mcc_generated_files/drivers/spi_master.c: 44:     return SPI1_Open(SDFAST_CONFIG);
 20028   008AAA  0E00               	movlw	0
 20029   008AAC  EC07  F04A         	call	_SPI1_Open
 20030   008AB0  0012               	return		;funcret
 20031   008AB2                     __end_of_SDFAST_open:
 20032                           	callstack 0
 20033                           
 20034 ;; *************** function _SDSLOW_open *****************
 20035 ;; Defined at:
 20036 ;;		line 47 in file "mcc_generated_files/drivers/spi_master.c"
 20037 ;; Parameters:    Size  Location     Type
 20038 ;;		None
 20039 ;; Auto vars:     Size  Location     Type
 20040 ;;		None
 20041 ;; Return value:  Size  Location     Type
 20042 ;;                  1    wreg      _Bool 
 20043 ;; Registers used:
 20044 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20045 ;; Tracked objects:
 20046 ;;		On entry : 0/0
 20047 ;;		On exit  : 0/0
 20048 ;;		Unchanged: 0/0
 20049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20054 ;;Total ram usage:        0 bytes
 20055 ;; Hardware stack levels used: 1
 20056 ;; Hardware stack levels required when called: 1
 20057 ;; This function calls:
 20058 ;;		_SPI1_Open
 20059 ;; This function is called by:
 20060 ;;		_spi_master_open
 20061 ;;		_SD_SPI_SectorWrite
 20062 ;;		_SD_SPI_SectorRead
 20063 ;;		_SD_SPI_MediaInitialize
 20064 ;; This function uses a non-reentrant model
 20065 ;;
 20066                           
 20067                           	psect	text61
 20068   008AA2                     __ptext61:
 20069                           	callstack 0
 20070   008AA2                     _SDSLOW_open:
 20071                           	callstack 26
 20072   008AA2                     
 20073                           ;mcc_generated_files/drivers/spi_master.c: 48:     return SPI1_Open(SDSLOW_CONFIG);
 20074   008AA2  0E01               	movlw	1
 20075   008AA4  EC07  F04A         	call	_SPI1_Open
 20076   008AA8  0012               	return		;funcret
 20077   008AAA                     __end_of_SDSLOW_open:
 20078                           	callstack 0
 20079                           
 20080 ;; *************** function _SPI1_Open *****************
 20081 ;; Defined at:
 20082 ;;		line 74 in file "mcc_generated_files/spi1.c"
 20083 ;; Parameters:    Size  Location     Type
 20084 ;;  spi1UniqueCo    1    wreg     enum E355
 20085 ;; Auto vars:     Size  Location     Type
 20086 ;;  spi1UniqueCo    1    1[COMRAM] enum E355
 20087 ;; Return value:  Size  Location     Type
 20088 ;;                  1    wreg      _Bool 
 20089 ;; Registers used:
 20090 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 20091 ;; Tracked objects:
 20092 ;;		On entry : 0/0
 20093 ;;		On exit  : 0/0
 20094 ;;		Unchanged: 0/0
 20095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20097 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20098 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20099 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20100 ;;Total ram usage:        2 bytes
 20101 ;; Hardware stack levels used: 1
 20102 ;; This function calls:
 20103 ;;		Nothing
 20104 ;; This function is called by:
 20105 ;;		_SDFAST_open
 20106 ;;		_SDSLOW_open
 20107 ;; This function uses a non-reentrant model
 20108 ;;
 20109                           
 20110                           	psect	text62
 20111   00940E                     __ptext62:
 20112                           	callstack 0
 20113   00940E                     _SPI1_Open:
 20114                           	callstack 26
 20115                           
 20116                           ;incstack = 0
 20117                           ;SPI1_Open@spi1UniqueConfiguration stored from wreg
 20118   00940E  6E02               	movwf	SPI1_Open@spi1UniqueConfiguration^0,c
 20119   009410                     
 20120                           ;mcc_generated_files/spi1.c: 74: _Bool SPI1_Open(spi1_modes_t spi1UniqueConfiguration);m
      +                          cc_generated_files/spi1.c: 75: {;mcc_generated_files/spi1.c: 76:     if(!SSP1CON1bits.SS
      +                          PEN)
 20121   009410  BAC6               	btfsc	198,5,c	;volatile
 20122   009412  EF0D  F04A         	goto	u6601
 20123   009416  EF0F  F04A         	goto	u6600
 20124   00941A                     u6601:
 20125   00941A  EF61  F04A         	goto	l5651
 20126   00941E                     u6600:
 20127   00941E                     
 20128                           ;mcc_generated_files/spi1.c: 77:     {;mcc_generated_files/spi1.c: 78:         SSP1STAT 
      +                          = spi1_configuration[spi1UniqueConfiguration].stat;
 20129   00941E  5002               	movf	SPI1_Open@spi1UniqueConfiguration^0,w,c
 20130   009420  0D04               	mullw	4
 20131   009422  0E01               	movlw	1
 20132   009424  26F3               	addwf	243,f,c
 20133   009426  0E00               	movlw	0
 20134   009428  22F4               	addwfc	244,f,c
 20135   00942A  0EB3               	movlw	low _spi1_configuration
 20136   00942C  24F3               	addwf	243,w,c
 20137   00942E  6EF6               	movwf	tblptrl,c
 20138   009430  0EFF               	movlw	high _spi1_configuration
 20139   009432  20F4               	addwfc	244,w,c
 20140   009434  6EF7               	movwf	tblptrh,c
 20141   009436                     	if	1	;There are 3 active tblptr bytes
 20142   009436  6AF8               	clrf	tblptru,c
 20143   009438  0E00               	movlw	low (__mediumconst shr (0+16))
 20144   00943A  22F8               	addwfc	tblptru,f,c
 20145   00943C                     	endif
 20146   00943C  0008               	tblrd		*
 20147   00943E  CFF5 FFC7          	movff	tablat,4039	;volatile
 20148                           
 20149                           ;mcc_generated_files/spi1.c: 79:         SSP1CON1 = spi1_configuration[spi1UniqueConfigu
      +                          ration].con1;
 20150   009442  5002               	movf	SPI1_Open@spi1UniqueConfiguration^0,w,c
 20151   009444  0D04               	mullw	4
 20152   009446  0EB3               	movlw	low _spi1_configuration
 20153   009448  24F3               	addwf	243,w,c
 20154   00944A  6EF6               	movwf	tblptrl,c
 20155   00944C  0EFF               	movlw	high _spi1_configuration
 20156   00944E  20F4               	addwfc	244,w,c
 20157   009450  6EF7               	movwf	tblptrh,c
 20158   009452                     	if	1	;There are 3 active tblptr bytes
 20159   009452  6AF8               	clrf	tblptru,c
 20160   009454  0E00               	movlw	low (__mediumconst shr (0+16))
 20161   009456  22F8               	addwfc	tblptru,f,c
 20162   009458                     	endif
 20163   009458  0008               	tblrd		*
 20164   00945A  CFF5 FFC6          	movff	tablat,4038	;volatile
 20165   00945E                     
 20166                           ;mcc_generated_files/spi1.c: 80:         SSP1CON2 = 0x00;
 20167   00945E  0E00               	movlw	0
 20168   009460  6EC5               	movwf	197,c	;volatile
 20169   009462                     
 20170                           ;mcc_generated_files/spi1.c: 81:         SSP1ADD = spi1_configuration[spi1UniqueConfigur
      +                          ation].add;
 20171   009462  5002               	movf	SPI1_Open@spi1UniqueConfiguration^0,w,c
 20172   009464  0D04               	mullw	4
 20173   009466  0E02               	movlw	2
 20174   009468  26F3               	addwf	243,f,c
 20175   00946A  0E00               	movlw	0
 20176   00946C  22F4               	addwfc	244,f,c
 20177   00946E  0EB3               	movlw	low _spi1_configuration
 20178   009470  24F3               	addwf	243,w,c
 20179   009472  6EF6               	movwf	tblptrl,c
 20180   009474  0EFF               	movlw	high _spi1_configuration
 20181   009476  20F4               	addwfc	244,w,c
 20182   009478  6EF7               	movwf	tblptrh,c
 20183   00947A                     	if	1	;There are 3 active tblptr bytes
 20184   00947A  6AF8               	clrf	tblptru,c
 20185   00947C  0E00               	movlw	low (__mediumconst shr (0+16))
 20186   00947E  22F8               	addwfc	tblptru,f,c
 20187   009480                     	endif
 20188   009480  0008               	tblrd		*
 20189   009482  CFF5 FFC8          	movff	tablat,4040	;volatile
 20190   009486                     
 20191                           ;mcc_generated_files/spi1.c: 82:         TRISCbits.TRISC3 = spi1_configuration[spi1Uniqu
      +                          eConfiguration].operation;
 20192   009486  5002               	movf	SPI1_Open@spi1UniqueConfiguration^0,w,c
 20193   009488  0D04               	mullw	4
 20194   00948A  0E03               	movlw	3
 20195   00948C  26F3               	addwf	243,f,c
 20196   00948E  0E00               	movlw	0
 20197   009490  22F4               	addwfc	244,f,c
 20198   009492  0EB3               	movlw	low _spi1_configuration
 20199   009494  24F3               	addwf	243,w,c
 20200   009496  6EF6               	movwf	tblptrl,c
 20201   009498  0EFF               	movlw	high _spi1_configuration
 20202   00949A  20F4               	addwfc	244,w,c
 20203   00949C  6EF7               	movwf	tblptrh,c
 20204   00949E                     	if	1	;There are 3 active tblptr bytes
 20205   00949E  6AF8               	clrf	tblptru,c
 20206   0094A0  0E00               	movlw	low (__mediumconst shr (0+16))
 20207   0094A2  22F8               	addwfc	tblptru,f,c
 20208   0094A4                     	endif
 20209   0094A4  0008               	tblrd		*
 20210   0094A6  CFF5 F001          	movff	tablat,??_SPI1_Open
 20211   0094AA  4601               	rlncf	??_SPI1_Open^0,f,c
 20212   0094AC  4601               	rlncf	??_SPI1_Open^0,f,c
 20213   0094AE  4601               	rlncf	??_SPI1_Open^0,f,c
 20214   0094B0  5094               	movf	148,w,c	;volatile
 20215   0094B2  1801               	xorwf	??_SPI1_Open^0,w,c
 20216   0094B4  0BF7               	andlw	-9
 20217   0094B6  1801               	xorwf	??_SPI1_Open^0,w,c
 20218   0094B8  6E94               	movwf	148,c	;volatile
 20219   0094BA                     
 20220                           ;mcc_generated_files/spi1.c: 83:         SSP1CON1bits.SSPEN = 1;
 20221   0094BA  8AC6               	bsf	198,5,c	;volatile
 20222   0094BC                     
 20223                           ;mcc_generated_files/spi1.c: 84:         return 1;
 20224   0094BC  0E01               	movlw	1
 20225   0094BE  EF62  F04A         	goto	l92
 20226   0094C2                     l5651:
 20227                           
 20228                           ;mcc_generated_files/spi1.c: 86:     return 0;
 20229   0094C2  0E00               	movlw	0
 20230   0094C4                     l92:
 20231   0094C4  0012               	return		;funcret
 20232   0094C6                     __end_of_SPI1_Open:
 20233                           	callstack 0
 20234                           
 20235 ;; *************** function _SYSTEM_Initialize *****************
 20236 ;; Defined at:
 20237 ;;		line 50 in file "mcc_generated_files/mcc.c"
 20238 ;; Parameters:    Size  Location     Type
 20239 ;;		None
 20240 ;; Auto vars:     Size  Location     Type
 20241 ;;		None
 20242 ;; Return value:  Size  Location     Type
 20243 ;;                  1    wreg      void 
 20244 ;; Registers used:
 20245 ;;		wreg, status,2, cstack
 20246 ;; Tracked objects:
 20247 ;;		On entry : 0/0
 20248 ;;		On exit  : 0/0
 20249 ;;		Unchanged: 0/0
 20250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20255 ;;Total ram usage:        0 bytes
 20256 ;; Hardware stack levels used: 1
 20257 ;; Hardware stack levels required when called: 1
 20258 ;; This function calls:
 20259 ;;		_OSCILLATOR_Initialize
 20260 ;;		_PIN_MANAGER_Initialize
 20261 ;;		_SPI1_Initialize
 20262 ;; This function is called by:
 20263 ;;		_main
 20264 ;; This function uses a non-reentrant model
 20265 ;;
 20266                           
 20267                           	psect	text63
 20268   008AD4                     __ptext63:
 20269                           	callstack 0
 20270   008AD4                     _SYSTEM_Initialize:
 20271                           	callstack 29
 20272   008AD4                     
 20273                           ;mcc_generated_files/mcc.c: 53:     SPI1_Initialize();
 20274   008AD4  EC71  F045         	call	_SPI1_Initialize	;wreg free
 20275                           
 20276                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 20277   008AD8  EC00  F046         	call	_PIN_MANAGER_Initialize	;wreg free
 20278                           
 20279                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 20280   008ADC  EC63  F045         	call	_OSCILLATOR_Initialize	;wreg free
 20281   008AE0  0012               	return		;funcret
 20282   008AE2                     __end_of_SYSTEM_Initialize:
 20283                           	callstack 0
 20284                           
 20285 ;; *************** function _SPI1_Initialize *****************
 20286 ;; Defined at:
 20287 ;;		line 64 in file "mcc_generated_files/spi1.c"
 20288 ;; Parameters:    Size  Location     Type
 20289 ;;		None
 20290 ;; Auto vars:     Size  Location     Type
 20291 ;;		None
 20292 ;; Return value:  Size  Location     Type
 20293 ;;                  1    wreg      void 
 20294 ;; Registers used:
 20295 ;;		wreg, status,2
 20296 ;; Tracked objects:
 20297 ;;		On entry : 0/0
 20298 ;;		On exit  : 0/0
 20299 ;;		Unchanged: 0/0
 20300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20305 ;;Total ram usage:        0 bytes
 20306 ;; Hardware stack levels used: 1
 20307 ;; This function calls:
 20308 ;;		Nothing
 20309 ;; This function is called by:
 20310 ;;		_SYSTEM_Initialize
 20311 ;; This function uses a non-reentrant model
 20312 ;;
 20313                           
 20314                           	psect	text64
 20315   008AE2                     __ptext64:
 20316                           	callstack 0
 20317   008AE2                     _SPI1_Initialize:
 20318                           	callstack 29
 20319   008AE2                     
 20320                           ;mcc_generated_files/spi1.c: 67:     SSP1STAT = 0x40;
 20321   008AE2  0E40               	movlw	64
 20322   008AE4  6EC7               	movwf	199,c	;volatile
 20323                           
 20324                           ;mcc_generated_files/spi1.c: 68:     SSP1CON1 = 0x00;
 20325   008AE6  0E00               	movlw	0
 20326   008AE8  6EC6               	movwf	198,c	;volatile
 20327                           
 20328                           ;mcc_generated_files/spi1.c: 69:     SSP1ADD = 0x01;
 20329   008AEA  0E01               	movlw	1
 20330   008AEC  6EC8               	movwf	200,c	;volatile
 20331   008AEE                     
 20332                           ;mcc_generated_files/spi1.c: 70:     TRISCbits.TRISC3 = 0;
 20333   008AEE  9694               	bcf	148,3,c	;volatile
 20334   008AF0                     
 20335                           ;mcc_generated_files/spi1.c: 71:     SSP1CON1bits.SSPEN = 0;
 20336   008AF0  9AC6               	bcf	198,5,c	;volatile
 20337   008AF2  0012               	return		;funcret
 20338   008AF4                     __end_of_SPI1_Initialize:
 20339                           	callstack 0
 20340                           
 20341 ;; *************** function _PIN_MANAGER_Initialize *****************
 20342 ;; Defined at:
 20343 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 20344 ;; Parameters:    Size  Location     Type
 20345 ;;		None
 20346 ;; Auto vars:     Size  Location     Type
 20347 ;;		None
 20348 ;; Return value:  Size  Location     Type
 20349 ;;                  1    wreg      void 
 20350 ;; Registers used:
 20351 ;;		wreg, status,2
 20352 ;; Tracked objects:
 20353 ;;		On entry : 0/0
 20354 ;;		On exit  : 0/0
 20355 ;;		Unchanged: 0/0
 20356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20361 ;;Total ram usage:        0 bytes
 20362 ;; Hardware stack levels used: 1
 20363 ;; This function calls:
 20364 ;;		Nothing
 20365 ;; This function is called by:
 20366 ;;		_SYSTEM_Initialize
 20367 ;; This function uses a non-reentrant model
 20368 ;;
 20369                           
 20370                           	psect	text65
 20371   008C00                     __ptext65:
 20372                           	callstack 0
 20373   008C00                     _PIN_MANAGER_Initialize:
 20374                           	callstack 29
 20375   008C00                     
 20376                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 20377   008C00  0E00               	movlw	0
 20378   008C02  6E8D               	movwf	141,c	;volatile
 20379                           
 20380                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 20381   008C04  0E00               	movlw	0
 20382   008C06  6E8C               	movwf	140,c	;volatile
 20383                           
 20384                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 20385   008C08  0E00               	movlw	0
 20386   008C0A  6E89               	movwf	137,c	;volatile
 20387                           
 20388                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 20389   008C0C  0E00               	movlw	0
 20390   008C0E  6E8A               	movwf	138,c	;volatile
 20391                           
 20392                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 20393   008C10  0E00               	movlw	0
 20394   008C12  6E8B               	movwf	139,c	;volatile
 20395                           
 20396                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 20397   008C14  0E07               	movlw	7
 20398   008C16  6E96               	movwf	150,c	;volatile
 20399   008C18                     
 20400                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
 20401   008C18  6892               	setf	146,c	;volatile
 20402   008C1A                     
 20403                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 20404   008C1A  6893               	setf	147,c	;volatile
 20405                           
 20406                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xD3;
 20407   008C1C  0ED3               	movlw	211
 20408   008C1E  6E94               	movwf	148,c	;volatile
 20409   008C20                     
 20410                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 20411   008C20  6895               	setf	149,c	;volatile
 20412   008C22                     
 20413                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
 20414   008C22  010F               	movlb	15	; () banked
 20415   008C24  693B               	setf	59,b	;volatile
 20416                           
 20417                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xC0;
 20418   008C26  0EC0               	movlw	192
 20419   008C28  6F3A               	movwf	58,b	;volatile
 20420                           
 20421                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x3F;
 20422   008C2A  0E3F               	movlw	63
 20423   008C2C  6F39               	movwf	57,b	;volatile
 20424                           
 20425                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 20426   008C2E  0E07               	movlw	7
 20427   008C30  6F3C               	movwf	60,b	;volatile
 20428                           
 20429                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x2F;
 20430   008C32  0E2F               	movlw	47
 20431   008C34  6F38               	movwf	56,b	;volatile
 20432                           
 20433                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x00;
 20434   008C36  0E00               	movlw	0
 20435   008C38  6E61               	movwf	97,c	;volatile
 20436   008C3A                     
 20437                           ; BSR set to: 15
 20438                           ;mcc_generated_files/pin_manager.c: 88:     INTCON2bits.nRBPU = 1;
 20439   008C3A  8EF1               	bsf	241,7,c	;volatile
 20440   008C3C                     
 20441                           ; BSR set to: 15
 20442   008C3C  0012               	return		;funcret
 20443   008C3E                     __end_of_PIN_MANAGER_Initialize:
 20444                           	callstack 0
 20445                           
 20446 ;; *************** function _OSCILLATOR_Initialize *****************
 20447 ;; Defined at:
 20448 ;;		line 58 in file "mcc_generated_files/mcc.c"
 20449 ;; Parameters:    Size  Location     Type
 20450 ;;		None
 20451 ;; Auto vars:     Size  Location     Type
 20452 ;;		None
 20453 ;; Return value:  Size  Location     Type
 20454 ;;                  1    wreg      void 
 20455 ;; Registers used:
 20456 ;;		wreg, status,2
 20457 ;; Tracked objects:
 20458 ;;		On entry : 0/0
 20459 ;;		On exit  : 0/0
 20460 ;;		Unchanged: 0/0
 20461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20466 ;;Total ram usage:        0 bytes
 20467 ;; Hardware stack levels used: 1
 20468 ;; This function calls:
 20469 ;;		Nothing
 20470 ;; This function is called by:
 20471 ;;		_SYSTEM_Initialize
 20472 ;; This function uses a non-reentrant model
 20473 ;;
 20474                           
 20475                           	psect	text66
 20476   008AC6                     __ptext66:
 20477                           	callstack 0
 20478   008AC6                     _OSCILLATOR_Initialize:
 20479                           	callstack 29
 20480   008AC6                     
 20481                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x60;
 20482   008AC6  0E60               	movlw	96
 20483   008AC8  6ED3               	movwf	211,c	;volatile
 20484                           
 20485                           ;mcc_generated_files/mcc.c: 63:     OSCCON2 = 0x04;
 20486   008ACA  0E04               	movlw	4
 20487   008ACC  6ED2               	movwf	210,c	;volatile
 20488                           
 20489                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
 20490   008ACE  0E00               	movlw	0
 20491   008AD0  6E9B               	movwf	155,c	;volatile
 20492   008AD2  0012               	return		;funcret
 20493   008AD4                     __end_of_OSCILLATOR_Initialize:
 20494                           	callstack 0
 20495                           
 20496                           	psect	text67
 20497   000000                     __ptext67:
 20498                           	callstack 0
 20499   000000                     
 20500                           	psect	rparam
 20501   000000                     
 20502                           	psect	idloc
 20503                           
 20504                           ;Config register IDLOC0 @ 0x200000
 20505                           ;	unspecified, using default values
 20506   200000                     	org	2097152
 20507   200000  FF                 	db	255
 20508                           
 20509                           ;Config register IDLOC1 @ 0x200001
 20510                           ;	unspecified, using default values
 20511   200001                     	org	2097153
 20512   200001  FF                 	db	255
 20513                           
 20514                           ;Config register IDLOC2 @ 0x200002
 20515                           ;	unspecified, using default values
 20516   200002                     	org	2097154
 20517   200002  FF                 	db	255
 20518                           
 20519                           ;Config register IDLOC3 @ 0x200003
 20520                           ;	unspecified, using default values
 20521   200003                     	org	2097155
 20522   200003  FF                 	db	255
 20523                           
 20524                           ;Config register IDLOC4 @ 0x200004
 20525                           ;	unspecified, using default values
 20526   200004                     	org	2097156
 20527   200004  FF                 	db	255
 20528                           
 20529                           ;Config register IDLOC5 @ 0x200005
 20530                           ;	unspecified, using default values
 20531   200005                     	org	2097157
 20532   200005  FF                 	db	255
 20533                           
 20534                           ;Config register IDLOC6 @ 0x200006
 20535                           ;	unspecified, using default values
 20536   200006                     	org	2097158
 20537   200006  FF                 	db	255
 20538                           
 20539                           ;Config register IDLOC7 @ 0x200007
 20540                           ;	unspecified, using default values
 20541   200007                     	org	2097159
 20542   200007  FF                 	db	255
 20543                           
 20544                           	psect	config
 20545                           
 20546                           ; Padding undefined space
 20547   300000                     	org	3145728
 20548   300000  FF                 	db	255
 20549                           
 20550                           ;Config register CONFIG1H @ 0x300001
 20551                           ;	Oscillator Selection bits
 20552                           ;	FOSC = INTIO67, Internal oscillator block
 20553                           ;	4X PLL Enable
 20554                           ;	PLLCFG = OFF, Oscillator used directly
 20555                           ;	Primary clock enable bit
 20556                           ;	PRICLKEN = ON, Primary clock is always enabled
 20557                           ;	Fail-Safe Clock Monitor Enable bit
 20558                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 20559                           ;	Internal/External Oscillator Switchover bit
 20560                           ;	IESO = OFF, Oscillator Switchover mode disabled
 20561   300001                     	org	3145729
 20562   300001  28                 	db	40
 20563                           
 20564                           ;Config register CONFIG2L @ 0x300002
 20565                           ;	Power-up Timer Enable bit
 20566                           ;	PWRTEN = OFF, Power up timer disabled
 20567                           ;	Brown-out Reset Enable bits
 20568                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 20569                           ;	Brown Out Reset Voltage bits
 20570                           ;	BORV = 190, VBOR set to 1.90 V nominal
 20571   300002                     	org	3145730
 20572   300002  1F                 	db	31
 20573                           
 20574                           ;Config register CONFIG2H @ 0x300003
 20575                           ;	Watchdog Timer Enable bits
 20576                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 20577                           ;	Watchdog Timer Postscale Select bits
 20578                           ;	WDTPS = 32768, 1:32768
 20579   300003                     	org	3145731
 20580   300003  3C                 	db	60
 20581                           
 20582                           ; Padding undefined space
 20583   300004                     	org	3145732
 20584   300004  FF                 	db	255
 20585                           
 20586                           ;Config register CONFIG3H @ 0x300005
 20587                           ;	CCP2 MUX bit
 20588                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 20589                           ;	PORTB A/D Enable bit
 20590                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
 20591                           ;	P3A/CCP3 Mux bit
 20592                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 20593                           ;	HFINTOSC Fast Start-up
 20594                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 20595                           ;	Timer3 Clock input mux bit
 20596                           ;	T3CMX = PORTC0, T3CKI is on RC0
 20597                           ;	ECCP2 B output mux bit
 20598                           ;	P2BMX = PORTD2, P2B is on RD2
 20599                           ;	MCLR Pin Enable bit
 20600                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 20601   300005                     	org	3145733
 20602   300005  BF                 	db	191
 20603                           
 20604                           ;Config register CONFIG4L @ 0x300006
 20605                           ;	Stack Full/Underflow Reset Enable bit
 20606                           ;	STVREN = ON, Stack full/underflow will cause Reset
 20607                           ;	Single-Supply ICSP Enable bit
 20608                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 20609                           ;	Extended Instruction Set Enable bit
 20610                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 20611                           ;	Background Debug
 20612                           ;	DEBUG = OFF, Disabled
 20613   300006                     	org	3145734
 20614   300006  85                 	db	133
 20615                           
 20616                           ; Padding undefined space
 20617   300007                     	org	3145735
 20618   300007  FF                 	db	255
 20619                           
 20620                           ;Config register CONFIG5L @ 0x300008
 20621                           ;	Code Protection Block 0
 20622                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 20623                           ;	Code Protection Block 1
 20624                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 20625                           ;	Code Protection Block 2
 20626                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 20627                           ;	Code Protection Block 3
 20628                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 20629   300008                     	org	3145736
 20630   300008  0F                 	db	15
 20631                           
 20632                           ;Config register CONFIG5H @ 0x300009
 20633                           ;	Boot Block Code Protection bit
 20634                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 20635                           ;	Data EEPROM Code Protection bit
 20636                           ;	CPD = OFF, Data EEPROM not code-protected
 20637   300009                     	org	3145737
 20638   300009  C0                 	db	192
 20639                           
 20640                           ;Config register CONFIG6L @ 0x30000A
 20641                           ;	Write Protection Block 0
 20642                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 20643                           ;	Write Protection Block 1
 20644                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 20645                           ;	Write Protection Block 2
 20646                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 20647                           ;	Write Protection Block 3
 20648                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 20649   30000A                     	org	3145738
 20650   30000A  0F                 	db	15
 20651                           
 20652                           ;Config register CONFIG6H @ 0x30000B
 20653                           ;	Configuration Register Write Protection bit
 20654                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 20655                           ;	Boot Block Write Protection bit
 20656                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 20657                           ;	Data EEPROM Write Protection bit
 20658                           ;	WRTD = OFF, Data EEPROM not write-protected
 20659   30000B                     	org	3145739
 20660   30000B  E0                 	db	224
 20661                           
 20662                           ;Config register CONFIG7L @ 0x30000C
 20663                           ;	Table Read Protection Block 0
 20664                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 20665                           ;	Table Read Protection Block 1
 20666                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 20667                           ;	Table Read Protection Block 2
 20668                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 20669                           ;	Table Read Protection Block 3
 20670                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 20671   30000C                     	org	3145740
 20672   30000C  0F                 	db	15
 20673                           
 20674                           ;Config register CONFIG7H @ 0x30000D
 20675                           ;	Boot Block Table Read Protection bit
 20676                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 20677   30000D                     	org	3145741
 20678   30000D  40                 	db	64
 20679                           tosu	equ	0xFFF
 20680                           tosh	equ	0xFFE
 20681                           tosl	equ	0xFFD
 20682                           stkptr	equ	0xFFC
 20683                           pclatu	equ	0xFFB
 20684                           pclath	equ	0xFFA
 20685                           pcl	equ	0xFF9
 20686                           tblptru	equ	0xFF8
 20687                           tblptrh	equ	0xFF7
 20688                           tblptrl	equ	0xFF6
 20689                           tablat	equ	0xFF5
 20690                           prodh	equ	0xFF4
 20691                           prodl	equ	0xFF3
 20692                           indf0	equ	0xFEF
 20693                           postinc0	equ	0xFEE
 20694                           postdec0	equ	0xFED
 20695                           preinc0	equ	0xFEC
 20696                           plusw0	equ	0xFEB
 20697                           fsr0h	equ	0xFEA
 20698                           fsr0l	equ	0xFE9
 20699                           wreg	equ	0xFE8
 20700                           indf1	equ	0xFE7
 20701                           postinc1	equ	0xFE6
 20702                           postdec1	equ	0xFE5
 20703                           preinc1	equ	0xFE4
 20704                           plusw1	equ	0xFE3
 20705                           fsr1h	equ	0xFE2
 20706                           fsr1l	equ	0xFE1
 20707                           bsr	equ	0xFE0
 20708                           indf2	equ	0xFDF
 20709                           postinc2	equ	0xFDE
 20710                           postdec2	equ	0xFDD
 20711                           preinc2	equ	0xFDC
 20712                           plusw2	equ	0xFDB
 20713                           fsr2h	equ	0xFDA
 20714                           fsr2l	equ	0xFD9
 20715                           status	equ	0xFD8

Data Sizes:
    Strings     63
    Constant    260
    Data        22
    BSS         2251
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    148     160
    BANK1           256     67     110
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    Fil.fs	PTR struct . size(2) Largest target is 0
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    file.fs	PTR struct . size(2) Largest target is 0
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    f_open@dj.fs	PTR struct . size(2) Largest target is 0
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    f_chdir@dj.fs	PTR struct . size(2) Largest target is 0
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    f_stat@dj.fs	PTR struct . size(2) Largest target is 0
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    f_unlink@dj.fs	PTR struct . size(2) Largest target is 0
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    f_unlink@sdj.fs	PTR struct . size(2) Largest target is 0
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    f_mkdir@dj.fs	PTR struct . size(2) Largest target is 0
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    f_rename@djo.fs	PTR struct . size(2) Largest target is 0
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    f_rename@djn.fs	PTR struct . size(2) Largest target is 0
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    S515$4$0	PTR void  size(2) Largest target is 0

    S515$5$0	PTR void  size(2) Largest target is 0

    Absolute function$0	PTR FTN()void  size(2) Largest target is 0

    disk_ioctl@buff	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S515$3$0	PTR void  size(2) Largest target is 563
		 -> file(BIGRAM[546]), drive(BIGRAM[563]), FatFsDemo_Tasks@data(COMRAM[13]), NULL(NULL[0]), 
		 -> STR_3(CODE[15]), Fil(BIGRAM[546]), FatFs(BIGRAM[563]), 

    memset@dest	PTR void  size(2) Largest target is 563
		 -> file(BIGRAM[546]), drive(BIGRAM[563]), FatFsDemo_Tasks@data(COMRAM[13]), NULL(NULL[0]), 
		 -> STR_3(CODE[15]), Fil(BIGRAM[546]), FatFs(BIGRAM[563]), 

    memset@s	PTR unsigned char  size(2) Largest target is 563
		 -> file(BIGRAM[546]), drive(BIGRAM[563]), FatFsDemo_Tasks@data(COMRAM[13]), NULL(NULL[0]), 
		 -> STR_3(CODE[15]), Fil(BIGRAM[546]), FatFs(BIGRAM[563]), 

    memcpy@d1	PTR void  size(2) Largest target is 4
		 -> SD_SendCmd@address_bytes(COMRAM[4]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 4
		 -> SD_SendCmd@address_bytes(COMRAM[4]), 

    memcpy@s1	PTR const void  size(2) Largest target is 4
		 -> SD_SendCmd@address(COMRAM[4]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> SD_SendCmd@address(COMRAM[4]), 

    djn.dir	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    djn.obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    djo.dir	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    djo.obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    dj.dir	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    dj.obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    sdj.dir	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    sdj.obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    dj.dir	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    dj.obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    f_truncate@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    f_truncate@fp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    dj.dir	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    dj.obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    f_readdir@dp.dir	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    f_readdir@dp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    f_closedir@dp.dir	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    f_closedir@dp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    f_opendir@dp.dir	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    f_opendir@dp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    f_lseek@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    f_lseek@fp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    dj.dir	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    dj.obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    f_close@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    f_close@fp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    f_close@fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    f_close@fp	PTR struct . size(2) Largest target is 548
		 -> file(BIGRAM[546]), Fil(BIGRAM[546]), 

    f_sync@dir	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    f_sync@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    f_sync@fp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    f_sync@fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    f_sync@fp	PTR struct . size(2) Largest target is 548
		 -> file(BIGRAM[546]), Fil(BIGRAM[546]), 

    f_write@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    f_write@fp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    f_write@fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    f_write@fp	PTR struct . size(2) Largest target is 548
		 -> file(BIGRAM[546]), Fil(BIGRAM[546]), 

    f_write@bw	PTR unsigned int  size(2) Largest target is 2
		 -> FatFsDemo_Tasks@actualLength(COMRAM[2]), main@bw(BANK0[2]), 

    f_write@buff	PTR const void  size(2) Largest target is 15
		 -> FatFsDemo_Tasks@data(COMRAM[13]), STR_3(CODE[15]), 

    f_write@wbuff	PTR const unsigned char  size(2) Largest target is 15
		 -> FatFsDemo_Tasks@data(COMRAM[13]), STR_3(CODE[15]), 

    f_read@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    f_read@fp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    f_open@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    f_open@fp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    f_open@fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    f_open@path	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_6(CODE[3]), STR_5(CODE[10]), STR_4(CODE[3]), STR_2(CODE[10]), 
		 -> STR_1(CODE[1]), 

    f_open@fp	PTR struct . size(2) Largest target is 548
		 -> file(BIGRAM[546]), Fil(BIGRAM[546]), 

    dj.dir	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    dj.obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    f_mount@fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    f_mount@cfs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    f_mount@path	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_6(CODE[3]), STR_5(CODE[10]), STR_4(CODE[3]), STR_2(CODE[10]), 
		 -> STR_1(CODE[1]), 

    f_mount@rp	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_6(CODE[3]), STR_5(CODE[10]), STR_4(CODE[3]), STR_2(CODE[10]), 
		 -> STR_1(CODE[1]), 

    validate$2409	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    validate@rfs	PTR PTR struct . size(2) Largest target is 2
		 -> f_truncate@fs(COMRAM[2]), f_readdir@fs(COMRAM[2]), f_closedir@fs(COMRAM[2]), f_lseek@fs(COMRAM[2]), 
		 -> f_close@fs(BANK0[2]), f_sync@fs(BANK0[2]), f_write@fs(BANK0[2]), f_read@fs(COMRAM[2]), 

    validate@obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    validate@obj	PTR struct . size(2) Largest target is 548
		 -> file(BIGRAM[546]), Fil(BIGRAM[546]), 

    find_volume@pt	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs.win(BIGRAM[512]), drive.win(BIGRAM[512]), drive(BIGRAM[563]), NULL(NULL[0]), 
		 -> FatFs(BIGRAM[563]), 

    FatFs@ff$F1589	PTR struct .[1] size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    find_volume@fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    find_volume@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> f_rename@path_old(COMRAM[2]), f_mkdir@path(COMRAM[2]), f_unlink@path(COMRAM[2]), f_getfree@path(COMRAM[2]), 
		 -> f_stat@path(COMRAM[2]), f_opendir@path(COMRAM[2]), f_chdir@path(COMRAM[2]), f_open@path(BANK0[2]), 
		 -> f_mount@path(BANK0[2]), 

    find_volume@rfs	PTR PTR struct . size(2) Largest target is 42
		 -> f_rename@fs(COMRAM[2]), f_mkdir@fs(COMRAM[2]), f_unlink@fs(COMRAM[2]), f_getfree@fs(COMRAM[2]), 
		 -> dj.obj(COMRAM[15]), f_stat@dj(COMRAM[40]), f_opendir@fs(COMRAM[2]), f_chdir@fs(COMRAM[2]), 
		 -> f_open@fs(BANK1[2]), f_mount@fs(BANK0[2]), 

    check_fs@fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    get_ldnumber@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> f_rename@path_old(COMRAM[2]), f_rename@path_new(COMRAM[2]), f_mkdir@path(COMRAM[2]), f_unlink@path(COMRAM[2]), 
		 -> f_getfree@path(COMRAM[2]), f_stat@path(COMRAM[2]), f_opendir@path(COMRAM[2]), f_chdir@path(COMRAM[2]), 
		 -> f_chdrive@path(COMRAM[2]), f_open@path(BANK0[2]), f_mount@path(BANK0[2]), f_mount@rp(BANK0[2]), 

    get_ldnumber@tp	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_6(CODE[3]), STR_5(CODE[10]), STR_4(CODE[3]), STR_2(CODE[10]), 
		 -> STR_1(CODE[1]), 

    get_ldnumber@tt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_6(CODE[3]), STR_5(CODE[10]), STR_4(CODE[3]), STR_2(CODE[10]), 
		 -> STR_1(CODE[1]), 

    follow_path@path	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_6(CODE[3]), STR_5(CODE[10]), STR_4(CODE[3]), STR_2(CODE[10]), 
		 -> STR_1(CODE[1]), 

    follow_path@dp.dir	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    follow_path@dp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    follow_path@dp	PTR struct . size(2) Largest target is 42
		 -> f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), f_mkdir@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), 
		 -> f_stat@dj(COMRAM[40]), f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), 

    follow_path@fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    create_name@dp.dir	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    create_name@dp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    create_name@dp	PTR struct . size(2) Largest target is 42
		 -> f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), f_mkdir@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), 
		 -> f_stat@dj(COMRAM[40]), f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), 

    create_name@sfn	PTR unsigned char  size(2) Largest target is 42
		 -> djn.fn(COMRAM[12]), f_rename@djn(COMRAM[40]), djo.fn(COMRAM[12]), f_rename@djo(COMRAM[40]), 
		 -> dj.fn(COMRAM[12]), f_mkdir@dj(COMRAM[40]), dj.fn(COMRAM[12]), f_unlink@dj(COMRAM[40]), 
		 -> dj.fn(COMRAM[12]), f_stat@dj(COMRAM[40]), dj.fn(COMRAM[12]), f_chdir@dj(COMRAM[40]), 
		 -> dj.fn(COMRAM[12]), f_open@dj(BANK1[40]), 

    create_name@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> follow_path@path(BANK0[2]), 

    create_name@p	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_6(CODE[3]), STR_5(CODE[10]), STR_4(CODE[3]), STR_2(CODE[10]), 
		 -> STR_1(CODE[1]), 

    get_fileinfo@dp.dir	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    get_fileinfo@dp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    dir_remove@dp.dir	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    dir_remove@dp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    dir_register@dp.dir	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    dir_register@dp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    dir_register@dp	PTR struct . size(2) Largest target is 42
		 -> f_rename@djn(COMRAM[40]), f_mkdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), 

    dir_register@fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    dir_find@dp.dir	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    dir_find@dp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    dir_find@dp	PTR struct . size(2) Largest target is 42
		 -> f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), f_mkdir@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), 
		 -> f_stat@dj(COMRAM[40]), f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), 

    dir_find@fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    dir_read@dp.dir	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    dir_read@dp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    st_clust@fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    st_clust@dir	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs.win(BIGRAM[512]), drive.win(BIGRAM[512]), drive(BIGRAM[563]), NULL(NULL[0]), 
		 -> FatFs(BIGRAM[563]), 

    ld_clust@fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    ld_clust@dir	PTR const unsigned char  size(2) Largest target is 563
		 -> FatFs.win(BIGRAM[512]), drive.win(BIGRAM[512]), drive(BIGRAM[563]), NULL(NULL[0]), 
		 -> FatFs(BIGRAM[563]), 

    dir_alloc@dp.dir	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    dir_alloc@dp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    dir_alloc@dp	PTR struct . size(2) Largest target is 42
		 -> f_rename@djn(COMRAM[40]), f_mkdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), 

    dir_alloc@fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    dir_next@dp.dir	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    dir_next@dp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    dir_next@dp	PTR struct . size(2) Largest target is 42
		 -> f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), f_mkdir@dj(COMRAM[40]), f_unlink@sdj(COMRAM[40]), 
		 -> f_unlink@dj(COMRAM[40]), f_stat@dj(COMRAM[40]), f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), 

    dir_next@fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    S1564$dir	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    dir_sdi@dp.dir	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    dir_sdi@dp.obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    dir_sdi@dp	PTR struct . size(2) Largest target is 42
		 -> f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), f_mkdir@dj(COMRAM[40]), f_unlink@sdj(COMRAM[40]), 
		 -> f_unlink@dj(COMRAM[40]), f_stat@dj(COMRAM[40]), f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), 

    dir_sdi@fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    dir_clear@ibuf	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs.win(BIGRAM[512]), drive.win(BIGRAM[512]), drive(BIGRAM[563]), NULL(NULL[0]), 
		 -> FatFs(BIGRAM[563]), 

    dir_clear@fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    create_chain@obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    create_chain@obj	PTR struct . size(2) Largest target is 548
		 -> f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), f_mkdir@dj(COMRAM[40]), f_unlink@sdj(COMRAM[40]), 
		 -> f_unlink@dj(COMRAM[40]), f_stat@dj(COMRAM[40]), f_chdir@dj(COMRAM[40]), f_open@dj(BANK1[40]), 
		 -> file(BIGRAM[546]), Fil(BIGRAM[546]), 

    create_chain@fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    remove_chain@obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    remove_chain@obj	PTR struct . size(2) Largest target is 42
		 -> f_mkdir@dj(COMRAM[40]), f_unlink@dj(COMRAM[40]), f_open@dj(BANK1[40]), 

    remove_chain@fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    put_fat@p	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs.win(BIGRAM[512]), drive.win(BIGRAM[512]), drive(BIGRAM[563]), NULL(NULL[0]), 
		 -> FatFs(BIGRAM[563]), 

    put_fat@fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    get_fat@obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    get_fat@obj	PTR struct . size(2) Largest target is 548
		 -> f_rename@djn(COMRAM[40]), f_rename@djo(COMRAM[40]), f_mkdir@dj(COMRAM[40]), f_unlink@sdj(COMRAM[40]), 
		 -> f_unlink@dj(COMRAM[40]), f_getfree@obj(COMRAM[14]), f_stat@dj(COMRAM[40]), f_chdir@dj(COMRAM[40]), 
		 -> f_open@dj(BANK1[40]), file(BIGRAM[546]), Fil(BIGRAM[546]), 

    get_fat@fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    clst2sect@fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    sync_fs@fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    move_window@fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    sync_window@fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    chk_chr@str	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_8(CODE[15]), 

    mem_cmp@src	PTR const void  size(2) Largest target is 42
		 -> djn.fn(COMRAM[12]), f_rename@djn(COMRAM[40]), djo.fn(COMRAM[12]), f_rename@djo(COMRAM[40]), 
		 -> dj.fn(COMRAM[12]), f_mkdir@dj(COMRAM[40]), dj.fn(COMRAM[12]), f_unlink@dj(COMRAM[40]), 
		 -> dj.fn(COMRAM[12]), f_stat@dj(COMRAM[40]), dj.fn(COMRAM[12]), f_chdir@dj(COMRAM[40]), 
		 -> dj.fn(COMRAM[12]), f_open@dj(BANK1[40]), STR_12(CODE[6]), STR_10(CODE[4]), 

    mem_cmp@s	PTR const unsigned char  size(2) Largest target is 42
		 -> djn.fn(COMRAM[12]), f_rename@djn(COMRAM[40]), djo.fn(COMRAM[12]), f_rename@djo(COMRAM[40]), 
		 -> dj.fn(COMRAM[12]), f_mkdir@dj(COMRAM[40]), dj.fn(COMRAM[12]), f_unlink@dj(COMRAM[40]), 
		 -> dj.fn(COMRAM[12]), f_stat@dj(COMRAM[40]), dj.fn(COMRAM[12]), f_chdir@dj(COMRAM[40]), 
		 -> dj.fn(COMRAM[12]), f_open@dj(BANK1[40]), STR_12(CODE[6]), STR_10(CODE[4]), 

    mem_cmp@dst	PTR const void  size(2) Largest target is 563
		 -> FatFs.win(BIGRAM[512]), drive.win(BIGRAM[512]), drive(BIGRAM[563]), NULL(NULL[0]), 
		 -> FatFs(BIGRAM[563]), 

    mem_cmp@d	PTR const unsigned char  size(2) Largest target is 563
		 -> FatFs.win(BIGRAM[512]), drive.win(BIGRAM[512]), drive(BIGRAM[563]), NULL(NULL[0]), 
		 -> FatFs(BIGRAM[563]), 

    mem_set@dst	PTR void  size(2) Largest target is 563
		 -> FatFs.win(BIGRAM[512]), drive.win(BIGRAM[512]), djn.fn(COMRAM[12]), f_rename@djn(COMRAM[40]), 
		 -> djo.fn(COMRAM[12]), f_rename@djo(COMRAM[40]), dj.fn(COMRAM[12]), f_mkdir@dj(COMRAM[40]), 
		 -> dj.fn(COMRAM[12]), f_unlink@dj(COMRAM[40]), dj.fn(COMRAM[12]), f_stat@dj(COMRAM[40]), 
		 -> dj.fn(COMRAM[12]), f_chdir@dj(COMRAM[40]), dj.fn(COMRAM[12]), f_open@dj(BANK1[40]), 
		 -> file(BIGRAM[546]), drive(BIGRAM[563]), NULL(NULL[0]), Fil(BIGRAM[546]), 
		 -> FatFs(BIGRAM[563]), 

    mem_set@d	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs.win(BIGRAM[512]), drive.win(BIGRAM[512]), djn.fn(COMRAM[12]), f_rename@djn(COMRAM[40]), 
		 -> djo.fn(COMRAM[12]), f_rename@djo(COMRAM[40]), dj.fn(COMRAM[12]), f_mkdir@dj(COMRAM[40]), 
		 -> dj.fn(COMRAM[12]), f_unlink@dj(COMRAM[40]), dj.fn(COMRAM[12]), f_stat@dj(COMRAM[40]), 
		 -> dj.fn(COMRAM[12]), f_chdir@dj(COMRAM[40]), dj.fn(COMRAM[12]), f_open@dj(BANK1[40]), 
		 -> file(BIGRAM[546]), drive(BIGRAM[563]), NULL(NULL[0]), Fil(BIGRAM[546]), 
		 -> FatFs(BIGRAM[563]), 

    mem_cpy@src	PTR const void  size(2) Largest target is 563
		 -> FatFs.win(BIGRAM[512]), drive.win(BIGRAM[512]), djn.fn(COMRAM[12]), f_rename@djn(COMRAM[40]), 
		 -> f_rename@buf(COMRAM[32]), f_rename@djo(COMRAM[40]), dj.fn(COMRAM[12]), f_mkdir@dj(COMRAM[40]), 
		 -> dj.fn(COMRAM[12]), f_open@dj(BANK1[40]), drive(BIGRAM[563]), FatFsDemo_Tasks@data(COMRAM[13]), 
		 -> NULL(NULL[0]), STR_3(CODE[15]), FatFs(BIGRAM[563]), 

    mem_cpy@s	PTR const unsigned char  size(2) Largest target is 563
		 -> FatFs.win(BIGRAM[512]), drive.win(BIGRAM[512]), djn.fn(COMRAM[12]), f_rename@djn(COMRAM[40]), 
		 -> f_rename@buf(COMRAM[32]), f_rename@djo(COMRAM[40]), dj.fn(COMRAM[12]), f_mkdir@dj(COMRAM[40]), 
		 -> dj.fn(COMRAM[12]), f_open@dj(BANK1[40]), drive(BIGRAM[563]), FatFsDemo_Tasks@data(COMRAM[13]), 
		 -> NULL(NULL[0]), STR_3(CODE[15]), FatFs(BIGRAM[563]), 

    mem_cpy@dst	PTR void  size(2) Largest target is 563
		 -> FatFs.win(BIGRAM[512]), Fil.buf(BIGRAM[512]), drive.win(BIGRAM[512]), file.buf(BIGRAM[512]), 
		 -> f_rename@djn(COMRAM[40]), f_rename@buf(COMRAM[32]), file(BIGRAM[546]), drive(BIGRAM[563]), 
		 -> NULL(NULL[0]), Fil(BIGRAM[546]), FatFs(BIGRAM[563]), 

    mem_cpy@d	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs.win(BIGRAM[512]), Fil.buf(BIGRAM[512]), drive.win(BIGRAM[512]), file.buf(BIGRAM[512]), 
		 -> f_rename@djn(COMRAM[40]), f_rename@buf(COMRAM[32]), file(BIGRAM[546]), drive(BIGRAM[563]), 
		 -> NULL(NULL[0]), Fil(BIGRAM[546]), FatFs(BIGRAM[563]), 

    st_dword@ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs.win(BIGRAM[512]), drive.win(BIGRAM[512]), drive(BIGRAM[563]), NULL(NULL[0]), 
		 -> FatFs(BIGRAM[563]), 

    st_word@ptr	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs.win(BIGRAM[512]), drive.win(BIGRAM[512]), drive(BIGRAM[563]), NULL(NULL[0]), 
		 -> FatFs(BIGRAM[563]), 

    ld_dword@ptr	PTR const unsigned char  size(2) Largest target is 563
		 -> FatFs.win(BIGRAM[512]), drive.win(BIGRAM[512]), drive(BIGRAM[563]), NULL(NULL[0]), 
		 -> FatFs(BIGRAM[563]), 

    ld_word@ptr	PTR const unsigned char  size(2) Largest target is 563
		 -> FatFs.win(BIGRAM[512]), drive.win(BIGRAM[512]), drive(BIGRAM[563]), NULL(NULL[0]), 
		 -> FatFs(BIGRAM[563]), 

    file.dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    file.obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    disk_write@buff	PTR const unsigned char  size(2) Largest target is 563
		 -> FatFs.win(BIGRAM[512]), Fil.buf(BIGRAM[512]), drive.win(BIGRAM[512]), file.buf(BIGRAM[512]), 
		 -> file(BIGRAM[546]), drive(BIGRAM[563]), FatFsDemo_Tasks@data(COMRAM[13]), NULL(NULL[0]), 
		 -> STR_3(CODE[15]), Fil(BIGRAM[546]), FatFs(BIGRAM[563]), 

    disk_read@buff	PTR unsigned char  size(2) Largest target is 563
		 -> file(BIGRAM[546]), drive(BIGRAM[563]), NULL(NULL[0]), Fil(BIGRAM[546]), 
		 -> FatFs(BIGRAM[563]), 

    sp__memcpy	PTR void  size(2) Largest target is 4
		 -> SD_SendCmd@address_bytes(COMRAM[4]), 

    SD_SPI_AsyncWriteTasks@info.pBuffer	PTR unsigned char  size(2) Largest target is 563
		 -> file(BIGRAM[546]), drive(BIGRAM[563]), FatFsDemo_Tasks@data(COMRAM[13]), NULL(NULL[0]), 
		 -> STR_3(CODE[15]), Fil(BIGRAM[546]), FatFs(BIGRAM[563]), 

    SD_SPI_AsyncWriteTasks@info	PTR struct SD_ASYNC_IO size(2) Largest target is 14
		 -> SD_SPI_SectorWrite@info(COMRAM[13]), 

    sp__memset	PTR void  size(2) Largest target is 563
		 -> file(BIGRAM[546]), drive(BIGRAM[563]), FatFsDemo_Tasks@data(COMRAM[13]), NULL(NULL[0]), 
		 -> STR_3(CODE[15]), Fil(BIGRAM[546]), FatFs(BIGRAM[563]), 

    SD_SPI_AsyncReadTasks@info.pBuffer	PTR unsigned char  size(2) Largest target is 563
		 -> file(BIGRAM[546]), drive(BIGRAM[563]), FatFsDemo_Tasks@data(COMRAM[13]), NULL(NULL[0]), 
		 -> STR_3(CODE[15]), Fil(BIGRAM[546]), FatFs(BIGRAM[563]), 

    SD_SPI_AsyncReadTasks@info	PTR struct SD_ASYNC_IO size(2) Largest target is 14
		 -> SD_SPI_SectorRead@info(COMRAM[13]), 

    SD_SPI_SectorWrite@buffer	PTR const unsigned char  size(2) Largest target is 563
		 -> FatFs.win(BIGRAM[512]), Fil.buf(BIGRAM[512]), drive.win(BIGRAM[512]), file.buf(BIGRAM[512]), 
		 -> file(BIGRAM[546]), drive(BIGRAM[563]), FatFsDemo_Tasks@data(COMRAM[13]), NULL(NULL[0]), 
		 -> STR_3(CODE[15]), Fil(BIGRAM[546]), FatFs(BIGRAM[563]), 

    info.pBuffer	PTR unsigned char  size(2) Largest target is 563
		 -> FatFs.win(BIGRAM[512]), Fil.buf(BIGRAM[512]), drive.win(BIGRAM[512]), file.buf(BIGRAM[512]), 
		 -> file(BIGRAM[546]), drive(BIGRAM[563]), FatFsDemo_Tasks@data(COMRAM[13]), NULL(NULL[0]), 
		 -> STR_3(CODE[15]), Fil(BIGRAM[546]), FatFs(BIGRAM[563]), 

    S515$spiISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    spiMaster.spiISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S515$setSpiISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    spiMaster.setSpiISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S515$readByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ReadByte(), 

    spiMaster.readByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ReadByte(), 

    S515$writeByte	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_WriteByte(), 

    spiMaster.writeByte	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_WriteByte(), 

    S515$readBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_ReadBlock(), 

    spiMaster.readBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_ReadBlock(), 

    S515$writeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_WriteBlock(), 

    spiMaster.writeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_WriteBlock(), 

    S515$exchangeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_ExchangeBlock(), 

    spiMaster.exchangeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_ExchangeBlock(), 

    S515$exchangeByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ExchangeByte(), 

    spiMaster.exchangeByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ExchangeByte(), 

    S515$spiOpen	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SDSLOW_open(), SDFAST_open(), 

    spiMaster.spiOpen	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SDSLOW_open(), SDFAST_open(), 

    S515$spiClose	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    spiMaster.spiClose	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    SD_SPI_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 563
		 -> file(BIGRAM[546]), drive(BIGRAM[563]), NULL(NULL[0]), Fil(BIGRAM[546]), 
		 -> FatFs(BIGRAM[563]), 

    info.pBuffer	PTR unsigned char  size(2) Largest target is 563
		 -> file(BIGRAM[546]), drive(BIGRAM[563]), FatFsDemo_Tasks@data(COMRAM[13]), NULL(NULL[0]), 
		 -> STR_3(CODE[15]), Fil(BIGRAM[546]), FatFs(BIGRAM[563]), 

    S466SD_ASYNC_IO$pBuffer	PTR unsigned char  size(2) Largest target is 563
		 -> file(BIGRAM[546]), drive(BIGRAM[563]), FatFsDemo_Tasks@data(COMRAM[13]), NULL(NULL[0]), 
		 -> STR_3(CODE[15]), Fil(BIGRAM[546]), FatFs(BIGRAM[563]), 

    ioInfo.pBuffer	PTR unsigned char  size(2) Largest target is 563
		 -> file(BIGRAM[546]), drive(BIGRAM[563]), FatFsDemo_Tasks@data(COMRAM[13]), NULL(NULL[0]), 
		 -> STR_3(CODE[15]), Fil(BIGRAM[546]), FatFs(BIGRAM[563]), 

    SPI1_ExchangeBlock@block	PTR void  size(2) Largest target is 563
		 -> file(BIGRAM[546]), drive(BIGRAM[563]), FatFsDemo_Tasks@data(COMRAM[13]), NULL(NULL[0]), 
		 -> STR_3(CODE[15]), Fil(BIGRAM[546]), FatFs(BIGRAM[563]), 

    SPI1_ExchangeBlock@data	PTR unsigned char  size(2) Largest target is 563
		 -> file(BIGRAM[546]), drive(BIGRAM[563]), FatFsDemo_Tasks@data(COMRAM[13]), NULL(NULL[0]), 
		 -> STR_3(CODE[15]), Fil(BIGRAM[546]), FatFs(BIGRAM[563]), 

    S169$dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    Fil.dir_ptr	PTR unsigned char  size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    S162$fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 

    Fil.obj.fs	PTR struct . size(2) Largest target is 563
		 -> drive(BIGRAM[563]), NULL(NULL[0]), FatFs(BIGRAM[563]), 


Critical Paths under _main in COMRAM

    _f_open->_move_window
    _ld_clust->_ld_word
    _dir_find->_move_window
    _create_name->_mem_set
    _dir_register->_move_window
    _dir_alloc->_move_window
    _dir_clear->_sync_window
    _clst2sect->___lmul
    _put_fat->_move_window
    _get_fat->_move_window
    _find_volume->_move_window
    _disk_initialize->_SD_SPI_MediaInitialize
    _SD_SPI_MediaInitialize->_SD_SendCmd
    _SD_SPI_DelayMilliseconds->_SPI1_ExchangeByte
    _check_fs->_move_window
    _f_sync->_move_window
    _validate->_disk_status
    _sync_fs->_sync_window
    _st_clust->_st_word
    _move_window->_sync_window
    _sync_window->_disk_write
    _disk_write->_SD_SPI_SectorWrite
    _SD_SPI_SectorWrite->_SD_SPI_AsyncWriteTasks
    _SD_SPI_AsyncWriteTasks->_SD_SendCmd
    _disk_read->_SD_SPI_SectorRead
    _SD_SPI_SectorRead->_SD_SPI_AsyncReadTasks
    _SD_SPI_AsyncReadTasks->_SD_SendCmd
    _SD_SendCmd->_memcpy
    _SDSLOW_open->_SPI1_Open
    _SDFAST_open->_SPI1_Open

Critical Paths under _main in BANK0

    _main->_f_open
    _f_write->_create_chain
    _f_open->_follow_path
    _remove_chain->_put_fat
    _follow_path->_dir_find
    _dir_find->_dir_next
    _dir_register->_dir_alloc
    _dir_alloc->_dir_next
    _dir_sdi->_get_fat
    _dir_next->_create_chain
    _dir_clear->_sync_window
    _create_chain->_put_fat
    _put_fat->_move_window
    _get_fat->_move_window
    _f_mount->_find_volume
    _find_volume->_check_fs
    _check_fs->_move_window
    _f_close->_f_sync
    _f_sync->_sync_fs
    _sync_fs->_sync_window
    _move_window->_sync_window

Critical Paths under _main in BANK1

    _main->_f_open

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  638477
                                            146 BANK0      2     2      0
                  _SYSTEM_Initialize
                            _f_close
                            _f_mount
                             _f_open
                            _f_write
 ---------------------------------------------------------------------------------
 (1) _f_write                                             43    35      8   67462
                                             85 BANK0     43    35      8
                          _clst2sect
                       _create_chain
                          _disk_read
                         _disk_write
                            _mem_cpy
                           _validate
 ---------------------------------------------------------------------------------
 (1) _f_open                                              82    77      5  469239
                                            133 BANK0     13     8      5
                                              0 BANK1     67    67      0
                          _clst2sect
                       _dir_register
                          _disk_read
                        _find_volume
                        _follow_path
                            _get_fat
                           _ld_clust
                           _ld_dword
                            _mem_set
                        _move_window
                       _remove_chain
                           _st_clust
                           _st_dword
 ---------------------------------------------------------------------------------
 (2) _remove_chain                                        25    15     10   45535
                                             56 BANK0     25    15     10
                            _get_fat
                            _put_fat
 ---------------------------------------------------------------------------------
 (2) _follow_path                                         14    10      4  164499
                                            119 BANK0     14    10      4
                        _create_name
                           _dir_find
                            _dir_sdi
                           _ld_clust
 ---------------------------------------------------------------------------------
 (2) _ld_clust                                            12     8      4    2384
                                              7 COMRAM    12     8      4
                            _ld_word
 ---------------------------------------------------------------------------------
 (3) _dir_find                                             8     6      2  131724
                                            111 BANK0      8     6      2
                           _dir_next
                            _dir_sdi
                            _mem_cmp
                        _move_window
 ---------------------------------------------------------------------------------
 (3) _create_name                                         22    18      4    3327
                                              8 COMRAM    22    18      4
                            _chk_chr
                            _dbc_1st
                            _dbc_2nd
                            _mem_set
 ---------------------------------------------------------------------------------
 (4) _dbc_2nd                                              3     1      2      22
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _dbc_1st                                              3     1      2      22
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _chk_chr                                              6     2      4     241
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _dir_register                                         5     3      2  151519
                                            123 BANK0      5     3      2
                          _dir_alloc
                            _mem_cpy
                            _mem_set
                        _move_window
 ---------------------------------------------------------------------------------
 (2) _mem_cpy                                             10     4      6    2188
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (3) _dir_alloc                                           12     8      4  130891
                                            111 BANK0     12     8      4
                           _dir_next
                            _dir_sdi
                        _move_window
 ---------------------------------------------------------------------------------
 (3) _dir_sdi                                             30    24      6   25196
                                             49 BANK0     26    20      6
                          _clst2sect
                            _get_fat
 ---------------------------------------------------------------------------------
 (4) _dir_next                                            30    26      4   88719
                                             85 BANK0     26    22      4
                          _clst2sect
                       _create_chain
                          _dir_clear
                            _get_fat
 ---------------------------------------------------------------------------------
 (5) _dir_clear                                           18    12      6   17716
                                             91 COMRAM     2     2      0
                                             16 BANK0     16    10      6
                          _clst2sect
                         _disk_write
                            _mem_set
                        _sync_window
 ---------------------------------------------------------------------------------
 (2) _clst2sect                                           12     6      6    2143
                                             12 COMRAM    12     6      6
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) _create_chain                                        29    23      6   46069
                                             56 BANK0     29    23      6
                            _get_fat
                            _put_fat
 ---------------------------------------------------------------------------------
 (3) _put_fat                                             33    23     10   22476
                                             23 BANK0     33    23     10
                           _ld_dword
                        _move_window
                           _st_dword
                            _st_word
 ---------------------------------------------------------------------------------
 (3) _get_fat                                             26    20      6   21297
                                             23 BANK0     26    20      6
                           _ld_dword
                            _ld_word
                        _move_window
 ---------------------------------------------------------------------------------
 (1) _f_mount                                             12     7      5   51289
                                            101 BANK0     12     7      5
                        _find_volume
                       _get_ldnumber
 ---------------------------------------------------------------------------------
 (2) _find_volume                                         71    66      5   49550
                                             30 BANK0     71    66      5
                            ___lldiv
                             ___lmul
                           _check_fs
                    _disk_initialize
                        _disk_status
                       _get_ldnumber
                           _ld_dword
                            _ld_word
                        _move_window
 ---------------------------------------------------------------------------------
 (4) _ld_dword                                            13     9      4    1168
                                              0 COMRAM    13     9      4
 ---------------------------------------------------------------------------------
 (3) _get_ldnumber                                        15    13      2     733
                                              0 COMRAM    13    11      2
 ---------------------------------------------------------------------------------
 (3) _disk_initialize                                      4     4      0    4515
                                             84 COMRAM     4     4      0
             _SD_SPI_MediaInitialize
 ---------------------------------------------------------------------------------
 (4) _SD_SPI_MediaInitialize                              50    50      0    4468
                                             34 COMRAM    50    50      0
                        _SDFAST_open *
                        _SDSLOW_open *
           _SD_SPI_DelayMilliseconds
                         _SD_SendCmd
                         _SPI1_Close *
                  _SPI1_ExchangeByte *
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     816
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) _SD_SPI_DelayMilliseconds                             5     5      0      67
                                              1 COMRAM     5     5      0
                  _SPI1_ExchangeByte *
 ---------------------------------------------------------------------------------
 (3) _check_fs                                             7     1      6   19107
                                             23 BANK0      7     1      6
                            _ld_word
                            _mem_cmp
                        _move_window
 ---------------------------------------------------------------------------------
 (4) _mem_cmp                                             14     8      6     844
                                              0 COMRAM    14     8      6
 ---------------------------------------------------------------------------------
 (4) _ld_word                                              7     5      2    1230
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     564
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _f_close                                              5     3      2   50461
                                             31 BANK0      5     3      2
                             _f_sync
                           _validate
 ---------------------------------------------------------------------------------
 (2) _f_sync                                              11     9      2   48657
                                             24 BANK0      7     5      2
                         _disk_write
                        _move_window
                           _st_clust
                           _st_dword
                            _st_word
                            _sync_fs
                           _validate
 ---------------------------------------------------------------------------------
 (2) _validate                                            11     7      4    1510
                                              4 COMRAM    11     7      4
                        _disk_status
 ---------------------------------------------------------------------------------
 (3) _disk_status                                          4     4      0      48
                                              0 COMRAM     4     4      0
          _SD_SPI_IsMediaInitialized
              _SD_SPI_IsMediaPresent
            _SD_SPI_IsWriteProtected
 ---------------------------------------------------------------------------------
 (4) _SD_SPI_IsWriteProtected                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _SD_SPI_IsMediaPresent                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _SD_SPI_IsMediaInitialized                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _sync_fs                                             11     9      2   18539
                                             91 COMRAM     3     1      2
                                             16 BANK0      8     8      0
                         _disk_ioctl
                         _disk_write
                            _mem_set
                           _st_dword
                            _st_word
                        _sync_window
 ---------------------------------------------------------------------------------
 (4) _st_dword                                             6     0      6    1855
                                              0 COMRAM     6     0      6
 ---------------------------------------------------------------------------------
 (2) _mem_set                                              8     2      6    1458
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (4) _disk_ioctl                                           7     4      3     197
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (2) _st_clust                                             9     1      8    2329
                                              4 COMRAM     9     1      8
                            _st_word
 ---------------------------------------------------------------------------------
 (4) _st_word                                              4     0      4     851
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _move_window                                         11     5      6   16509
                                             91 COMRAM     4     4      0
                                             16 BANK0      7     1      6
                          _disk_read
                        _sync_window
 ---------------------------------------------------------------------------------
 (5) _sync_window                                         19    17      2    7023
                                             88 COMRAM     3     1      2
                                              0 BANK0     16    16      0
                         _disk_write
 ---------------------------------------------------------------------------------
 (2) _disk_write                                          12     4      8    6409
                                             76 COMRAM    12     4      8
                 _SD_SPI_SectorWrite
 ---------------------------------------------------------------------------------
 (3) _SD_SPI_SectorWrite                                  27    19      8    4016
                                             49 COMRAM    27    19      8
                        _SDFAST_open *
                        _SDSLOW_open *
             _SD_SPI_AsyncWriteTasks
                         _SPI1_Close *
 ---------------------------------------------------------------------------------
 (4) _SD_SPI_AsyncWriteTasks                              15    13      2    3265
                                             34 COMRAM    15    13      2
                         _SD_SendCmd
                 _SPI1_ExchangeBlock *
                  _SPI1_ExchangeByte *
 ---------------------------------------------------------------------------------
 (2) _disk_read                                           12     4      8    6374
                                             73 COMRAM    12     4      8
                  _SD_SPI_SectorRead
 ---------------------------------------------------------------------------------
 (3) _SD_SPI_SectorRead                                   27    19      8    4893
                                             46 COMRAM    27    19      8
                        _SDFAST_open *
                        _SDSLOW_open *
              _SD_SPI_AsyncReadTasks
                         _SPI1_Close *
 ---------------------------------------------------------------------------------
 (4) _SPI1_Close                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _SD_SPI_AsyncReadTasks                               12    10      2    4146
                                             34 COMRAM    12    10      2
                         _SD_SendCmd
                 _SPI1_ExchangeBlock *
                  _SPI1_ExchangeByte *
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              14     8      6     947
                                              0 COMRAM    14     8      6
 ---------------------------------------------------------------------------------
 (5) _SPI1_ExchangeBlock                                   6     2      4     302
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _SD_SendCmd                                          23    18      5    2465
                                             11 COMRAM    23    18      5
                  _SPI1_ExchangeByte *
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _SPI1_ExchangeByte                                    1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _SDSLOW_open                                          0     0      0      88
                          _SPI1_Open
 ---------------------------------------------------------------------------------
 (4) _SDFAST_open                                          0     0      0      88
                          _SPI1_Open
 ---------------------------------------------------------------------------------
 (5) _SPI1_Open                                            2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
   _f_close
     _f_sync
       _disk_write
         _SD_SPI_SectorWrite
           _SDFAST_open *
             _SPI1_Open
           _SDSLOW_open *
             _SPI1_Open
           _SD_SPI_AsyncWriteTasks *
             _SD_SendCmd
               _SPI1_ExchangeByte *
               _memcpy *
             _SPI1_ExchangeBlock *
             _SPI1_ExchangeByte *
           _SPI1_Close *
       _move_window
         _disk_read
           _SD_SPI_SectorRead
             _SDFAST_open *
             _SDSLOW_open *
             _SD_SPI_AsyncReadTasks *
               _SD_SendCmd
               _SPI1_ExchangeBlock *
               _SPI1_ExchangeByte *
               _memset *
             _SPI1_Close *
         _sync_window
           _disk_write
       _st_clust
         _st_word
       _st_dword
       _st_word
       _sync_fs
         _disk_ioctl
         _disk_write
         _mem_set
         _st_dword
         _st_word
         _sync_window
       _validate
         _disk_status
           _SD_SPI_IsMediaInitialized
           _SD_SPI_IsMediaPresent
           _SD_SPI_IsWriteProtected
     _validate
   _f_mount
     _find_volume
       ___lldiv
       ___lmul
       _check_fs
         _ld_word
         _mem_cmp
         _move_window
       _disk_initialize
         _SD_SPI_MediaInitialize
           _SDFAST_open *
           _SDSLOW_open *
           _SD_SPI_DelayMilliseconds *
             _SPI1_ExchangeByte *
           _SD_SendCmd *
           _SPI1_Close *
           _SPI1_ExchangeByte *
           ___lmul *
       _disk_status
       _get_ldnumber
       _ld_dword
       _ld_word
       _move_window
     _get_ldnumber
   _f_open
     _clst2sect
       ___lmul
     _dir_register
       _dir_alloc
         _dir_next
           _clst2sect
           _create_chain
             _get_fat
               _ld_dword
               _ld_word
               _move_window
             _put_fat
               _ld_dword
               _move_window
               _st_dword
               _st_word
           _dir_clear
             _clst2sect
             _disk_write
             _mem_set
             _sync_window
           _get_fat
         _dir_sdi
           _clst2sect
           _get_fat
         _move_window
       _mem_cpy
       _mem_set
       _move_window
     _disk_read
     _find_volume
     _follow_path
       _create_name
         _chk_chr
         _dbc_1st
         _dbc_2nd
         _mem_set
       _dir_find
         _dir_next
         _dir_sdi
         _mem_cmp
         _move_window
       _dir_sdi
       _ld_clust
         _ld_word
     _get_fat
     _ld_clust
     _ld_dword
     _mem_set
     _move_window
     _remove_chain
       _get_fat
       _put_fat
     _st_clust
     _st_dword
   _f_write
     _clst2sect
     _create_chain
     _disk_read
     _disk_write
     _mem_cpy
     _validate

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     8AA      46       56.9%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     43      6E       7       43.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     94      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRllhh       27      0       0      43        0.0%
BITBIGSFRhhllh      26      0       0      39        0.0%
BITBIGSFRllhl       24      0       0      44        0.0%
BITBIGSFRhhlhh      1D      0       0      37        0.0%
BITBIGSFRhhh         D      0       0      36        0.0%
BITBIGSFRhhlhl       8      0       0      38        0.0%
BITBIGSFRhhllll      4      0       0      41        0.0%
BITBIGSFRhll         4      0       0      42        0.0%
BITBIGSFRhhlllh      2      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     16D      45        0.0%
DATA                 0      0     A17       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Feb 07 11:31:17 2023

                SD_SPI_SectorWrite@result 003C                         _SPI1_ExchangeByte 8B22  
                             get_fat@clst 0079                  SD_SPI_SectorWrite@status 003D  
           SD_SPI_MediaInitialize@timeout 0053                        _SPI1_ExchangeBlock 91C8  
                            create_name@c 001E                              create_name@d 0013  
                            create_name@i 0018                              create_name@p 0016  
                        get_ldnumber@path 0001            SD_SPI_MediaInitialize@response 004E  
                                      l39 8C3C                                        l63 9354  
                                      l64 9362                                        l92 94C4  
                                      l95 8A98                                        l88 8AF2  
                                      l98 8B28                        ?_SPI1_ExchangeByte 0001  
                          ??_dir_register 0060                   ??_SD_SPI_IsMediaPresent 0001  
                        disk_write@sector 004F                             create_name@dp 0009  
                           create_name@ni 0014                             create_name@si 001C  
                          create_chain@cs 00B1                            create_chain@fs 00AF  
                                     l100 8B36                                       l101 8B3A  
                                     l110 924C                                       l106 91F8  
                                     l211 E9CA                                       l108 9206  
                                     l205 8E38                                       l221 E302  
                                     l151 8A9C                                       l401 8AA8  
                                     l163 9B02                                       l251 E5F6  
                                     l172 9AB4                                       l164 9A78  
                                     l180 9C38                                       l317 DA44  
                                     l181 9BAE                                       l424 8AE0  
                                     l280 C02C                                       l248 E582  
                                     l600 B75C                                       l345 D946  
                                     l362 C866                                       l354 C438  
                                     l338 D86C                                       l194 8B20  
                                     l450 9146                                       l530 957C  
                                     l602 B3E4                                       l427 8AD2  
                                     l371 C8C8                                       l620 C92C  
                                     l700 A022                                       l373 C8DC  
                                     l189 9BEA                                       l533 8B62  
                                     l197 8AA0                                       l278 C434  
                                     l542 8FE2                                       l527 8BFE  
                                     l615 B76C                                       l536 8F72  
                                     l481 8B6A                                       l553 92CC  
                                     l482 8B94                                       l554 92D4  
                                     l802 98CE                                       l562 8E9C  
                                     l570 8AC4                                       l547 8BC6  
                                     l459 8D7E                                       l723 B25A  
                                     l468 9056                                       l636 CD3E  
                                     l477 90CA                                       l573 A4A2  
                                     l901 A182                                       l717 B36C  
                                     l645 AAD2                 SD_SPI_AsyncReadTasks@info 0023  
                                     l398 8AB0                                       l590 A6A2  
                                     l670 CF30                                       l750 BAD8  
                                     l742 BB82                                       l566 8ABA  
                                     l911 FEB8                                       l639 CDDC  
                                     l584 9648                                       l578 A4A4  
                                     l594 9714                                       l826 BFD6  
                                     l587 A6A0                                       l691 D33C  
                                     l692 D37C                                       l668 D38C  
                                     l597 B3D8                                       l773 91C6  
                                     l694 D374                                       l951 F98E  
                                     l768 9ED0                                       l792 A306  
                                     l777 8C88                                       l945 F81C  
                                     l769 9ED2                                       l873 ACB2  
                                     l882 AD4A                                       l875 AC9C  
                                     l972 99BA                                       l956 FC64  
                                     l973 99CC                                       l886 9D84  
                                     l967 998E                                       l895 9D76  
                                     l984 E1FC                                       l977 97EC  
                                     l995 DB60                                       l996 DB4C  
                                     l989 E1D8                       ?_SPI1_ExchangeBlock 0001  
                                     _Fil 0D16                       ??_SPI1_ExchangeByte 0001  
                            disk_read@res 0055                            ??_create_chain 009E  
                                     tosl 000FFD                                       wreg 000FE8  
                 SPI1_ExchangeBlock@block 0001                SD_SPI_AsyncReadTasks@bData 002E  
                          create_name@sfn 001A                           create_chain@ncl 00AB  
                         create_chain@obj 0098                           create_chain@scl 00A7  
                         create_chain@res 00A6                               ld_clust@dir 000A  
                          fp__SDFAST_open 0000                                      l1010 E1D8  
                                    l1002 DD5A                                      l1004 DD36  
                                    l1063 F0A4                                      l1064 ED02  
                                    l1056 F23A                                      l1314 940C  
                                    l1307 93FC                                      l1093 A8A0  
                                    l1086 F1FC                                      l1099 8DD8  
                                    l1291 8EF6                                      l1292 8F06  
                                    l6001 C0EA                                      l6011 C160  
                                    l6003 C102                                      l6013 C170  
                                    l6005 C10C                                      l6007 C13E  
                                    l6111 9B4E                                      l1961 AFE2  
                                    l6041 C204                                      l6009 C14E  
                                    l6201 9022                                      l6121 9BBE  
                                    l6113 9B6A                                      l6105 9B04  
                                    l7001 B8BC                                      l6051 C2E8  
                                    l6043 C21E                                      l6035 C19E  
                                    l6019 C176                                      l6203 902A  
                                    l6131 9BEC                                      l6123 9BCE  
                                    l6115 9BA8                                      l6107 9B14  
                                    l7011 B980                                      l1957 8CD8  
                                    l6053 C2F8                                      l6045 C25C  
                                    l6037 C1B6                                      l6029 C18A  
                                    l6141 99CE                                      l6133 9C1C  
                                    l6109 9B2C                                      l6221 A328  
                                    l7101 A4A6                                      l6301 8ECC  
                                    l7013 B99C                                      l6071 C330  
                                    l6047 C270                                      l6039 C1C6  
                                    l6151 9A72                                      l6143 99DE  
                                    l6207 9032                                      l6127 9BD6  
                                    l6119 9BB0                                      l6135 9C20  
                                    l6223 A37A                                      l6231 A49E  
                                    l6311 8BAE                                      l7111 A5CA  
                                    l7103 A4B4                                      l6303 8ED6  
                                    l7023 B9C4                                      l7007 B8D4  
                                    l6081 C37A                                      l6073 C360  
                                    l6049 C2D0                                      l6065 C306  
                                    l6145 99F6                                      l6209 9054  
                                    l6137 9C36                                      l6129 9BE6  
                                    l6225 A38A                                      l6217 A308  
                                    l6305 8B96                                      l7113 A61C  
                                    l7105 A4C4                                      l6241 94C6  
                                    l6401 C9EC                                      l6321 96AC  
                                    l6313 964A                                      l7041 BA6E  
                                    l7033 BA18                                      l7025 B9EE  
                                    l7017 B9A2                                      l7009 B948  
                                    l8001 DA5A                                      l6091 C3D8  
                                    l6083 C38A                                      l6075 C370  
                                    l6067 C318                                      l6163 9AA0  
                                    l6155 9A7A                                      l6147 9A18  
                                    l6171 9AEA                                      l6227 A406  
                                    l6219 A30C                                      l6251 8B4C  
                                    l6307 8B9E                                      l7115 A65E  
                                    l7107 A4DE                                      l6235 8BC8  
                                    l6243 956C                                      l6331 B3C4  
                                    l6411 CAA2                                      l6403 C9F6  
                                    l6315 9656                                      l7035 BA50  
                                    l7027 BA00                                      l7019 B9BE  
                                    l7131 9DD0                                      l7123 9D86  
                                    l7211 BB84                                      l7203 A2D8  
                                    l8011 DA64                                      l5621 8B24  
                                    l5701 C6F2                                      l6085 C3A0  
                                    l6069 C32E                                      l6173 9B00  
                                    l6165 9AB0                                      l6157 9A88  
                                    l6149 9A34                                      l6181 9096  
                                    l6229 A424                                      l6253 8B52  
                                    l6309 8BAA                                      l6261 8F18  
                                    l7109 A4FA                                      l7117 A66E  
                                    l6237 8BF6                                      l6341 B49A  
                                    l6333 B3EC                                      l6325 B36E  
                                    l6421 CB24                                      l6405 CA2A  
                                    l6501 CED2                                      l6317 9698  
                                    l7061 BAF6                                      l7053 BAA8  
                                    l7037 BA68                                      l7141 9E6A  
                                    l7133 9DFC                                      l7125 9D96  
                                    l7301 BE78                                      l7221 BBD4  
                                    l7213 BB94                                      l7205 A2F2  
                                    l8101 DECE                                      l8021 DAC2  
                                    l8013 DA80                                      l8005 DA60  
                                    l5631 8CBA                                      l5623 8C8A  
                                    l5711 C764                                      l5703 C702  
                                    l6087 C3A2                                      l6167 9AB6  
                                    l6159 9A98                                      l6183 909E  
                                    l6255 8B5E                                      l6247 8B3C  
                                    l6271 8F54                                      l6263 8F26  
                                    l7119 A69C                                      l7071 8D2E  
                                    l6351 B550                                      l6343 B49E  
                                    l6335 B3FE                                      l6327 B37E  
                                    l6431 CBE6                                      l6423 CB50  
                                    l6415 CAB6                                      l6407 CA36  
                                    l6511 CF62                                      l6503 CEEE  
                                    l7047 BA88                                      l7063 BB30  
                                    l7151 9EBA                                      l7127 9DB8  
                                    l7311 BEC6                                      l7303 BE90  
                                    l7231 BC4A                                      l7223 BBFE  
                                    l7215 BBA0                                      l8111 DF8A  
                                    l8103 DEDE                                      l8031 DB10  
                                    l8023 DAD0                                      l8015 DA90  
                                    l5641 9462                                      l5625 8C9E  
                                    l5633 8CBE                                      l5705 C734  
                                    l5713 C76C                                      l6089 C3D2  
                                    l6097 C3DE                                      l6169 9AE6  
                                    l5801 D6A8                                      l6177 905A  
                                    l6281 95C4                                      l6249 8B48  
                                    l6273 8F62                                      l6265 8F32  
                                    l6257 8F08                                      l7401 A07E  
                                    l7073 8D36                                      l7081 8D5A  
                                    l6361 B602                                      l6353 B560  
                                    l6329 B39A                                      l6433 CC24  
                                    l6425 CB70                                      l6417 CADA  
                                    l6409 CA46                                      l6521 CFC2  
                                    l6505 CF02                                      l6601 9EF6  
                                    l7065 BB4C                                      l7153 9ECC  
                                    l7145 9E8A                                      l7137 9E10  
                                    l7129 9DC8                                      l7321 BF0A  
                                    l7313 BECA                                      l7241 BC96  
                                    l7233 BC5A                                      l7225 BC1A  
                                    l7217 BBBC                                      l7161 917E  
                                    l8121 E012                                      l8113 DFAA  
                                    l8105 DF00                                      l8041 DB72  
                                    l8033 DB22                                      l8025 DAD4  
                                    l8017 DA98                                      l8009 DA60  
                                    l5643 9486                                      l5651 94C2  
                                    l5635 9410                                      l5627 8CAA  
                                    l5715 C79E                                      l5707 C73E  
                                    l5723 8A96                                      l5811 D710  
                                    l5803 D6EA                                      l5731 D398  
                                    l6179 9062                                      l6187 90A6  
                                    l6283 95D4                                      l6291 9646  
                                    l6275 957E                                      l7171 8C70  
                                    l6267 8F44                                      l6259 8F14  
                                    l7411 A0B4                                      l7083 8D7C  
                                    l7075 8D4A                                      l6363 B64C  
                                    l6355 B580                                      l6347 B50A  
                                    l6339 B46A                                      l6371 B722  
                                    l6443 CCB8                                      l6435 CC3A  
                                    l6427 CBD2                                      l6419 CAE8  
                                    l6451 CDDA                                      l6531 D060  
                                    l6523 CFEC                                      l6515 CF76  
                                    l6611 9F76                                      l6603 9F22  
                                    l7067 BB80                                      l7147 9E92  
                                    l7139 9E3E                                      l7091 8F74  
                                    l7323 BF1A                                      l7315 BEE2  
                                    l7331 BF46                                      l7251 BCD4  
                                    l7235 BC62                                      l7227 BC1E  
                                    l7219 BBCC                                      l7163 91B6  
                                    l8131 E074                                      l8123 E016  
                                    l8115 DFD6                                      l8107 DF28  
                                    l8051 DC20                                      l8043 DB82  
                                    l8035 DB2A                                      l8027 DAEC  
                                    l8019 DAB2                                      l8203 ECA8  
                                    l5645 94BA                                      l5637 941E  
                                    l5629 8CAE                                      l5717 C896  
                                    l5709 C74E                                      l5661 922E  
                                    l6197 8FE6                                      l5901 D9A4  
                                    l5821 D726                                      l5805 D6FA  
                                    l5741 D3EA                                      l5733 D3A8  
                                    l5725 D38E                                      l6189 90C8  
                                    l6285 961A                                      l6277 9584  
                                    l6269 8F50                                      l6461 8A9A  
                                    l7413 A0D4                                      l7405 A084  
                                    l6701 E4BC                                      l7077 8D52  
                                    l6357 B590                                      l6349 B542  
                                    l6445 CD8A                                      l6437 CCA4  
                                    l6381 C8E4                                      l6541 D0E6  
                                    l6533 D076                                      l6525 CFFC  
                                    l6517 CF86                                      l6509 CF40  
                                    l6613 9F82                                      l6605 9F40  
                                    l7149 9EAA                                      l7093 8F96  
                                    l7341 BF92                                      l7333 BF62  
                                    l7325 BF2A                                      l7309 BEB6  
                                    l7261 BD0E                                      l7253 BCDC  
                                    l7237 BC74                                      l7245 BC9C  
                                    l7229 BC30                                      l7173 A184  
                                    l7157 9148                                      l7501 A8B2  
                                    l8141 E17A                                      l8133 E086  
                                    l8117 DFF2                                      l8125 E026  
                                    l8109 DF6E                                      l8061 DCA6  
                                    l8053 DC32                                      l8045 DBC8  
                                    l8037 DB42                                      l8029 DAFE  
                                    l8213 ED84                                      l8205 ECE6  
                                    l5647 94BC                                      l5639 945E  
                                    l5719 C8CA                                      l5671 C4D0  
                                    l5663 9232                                      l5655 91C8  
                                    l6199 8FEE                                      l5903 D9D4  
                                    l5831 D7BC                                      l5823 D73E  
                                    l5751 D476                                      l5743 D420  
                                    l5735 D3BE                                      l5727 D392  
                                    l6287 9624                                      l6279 95B4  
                                    l7167 8C3E                                      l7423 A148  
                                    l7415 A0F2                                      l7407 A0AE  
                                    l6295 8E9E                                      l6703 E4C2  
                                    l6711 E508                                      l6623 E1FE  
                                    l6367 B6C6                                      l6391 C9A2  
                                    l6383 C8FE                                      l6551 D152  
                                    l6535 D092                                      l6527 D028  
                                    l6519 CFAA                                      l6543 D0F6  
                                    l6615 9F8C                                      l6607 9F60  
                                    l7095 8FC2                                      l7343 BF9E  
                                    l7327 BF2E                                      l7271 BD4E  
                                    l7263 BD12                                      l7255 BCEC  
                                    l7247 BCB8                                      l7239 BC86  
                                    l7191 A22E                                      l7183 A1CE  
                                    l7175 A194                                      l7159 9164  
                                    l7503 A8CE                                      l8143 E1CE  
                                    l8135 E0C2                                      l8127 E038  
                                    l8119 DFF6                                      l8071 DD46  
                                    l8063 DCC6                                      l8055 DC48  
                                    l8047 DBDA                                      l8039 DB5A  
                                    l8231 EE6A                                      l8223 EDFA  
                                    l8207 ED1C                                      l8215 ED96  
                                    l8151 E9CC                                      l5681 C5C2  
                                    l5673 C500                                      l5665 C43A  
                                    l5657 91D4                                      l5921 AD4C  
                                    l5905 D9E4                                      l5833 D7D4  
                                    l5825 D748                                      l5809 D700  
                                    l5761 D4E6                                      l5745 D436  
                                    l5753 D48C                                      l5737 D3DA  
                                    l5913 D9EE                                      l6289 9628  
                                    l7169 8C56                                      l6465 8B0A  
                                    l7441 9928                                      l7433 98D0  
                                    l7417 A110                                      l6473 8DDC  
                                    l6297 8EAE                                      l6801 E94A  
                                    l6721 E540                                      l6713 E50E  
                                    l6705 E4E6                                      l6641 E2A2  
                                    l6633 E262                                      l6625 E21C  
                                    l7361 9C68                                      l6449 CDA0  
                                    l6561 D1AC                                      l6553 D162  
                                    l6545 D10C                                      l6537 D0AC  
                                    l6529 D040                                      l6481 CDDE  
                                    l6617 9FAE                                      l6609 9F6E  
                                    l7097 8FC6                                      l7345 BFAE  
                                    l7329 BF3E                                      l7281 BDD2  
                                    l7273 BD52                                      l7249 BCC8  
                                    l7193 A23E                                      l7185 A1FA  
                                    l7177 A1B6                                      l7601 ABC2  
                                    l7521 A954                                      l7505 A8F8  
                                    l8145 E1EA                                      l8137 E106  
                                    l8129 E056                                      l8081 DDAA  
                                    l8073 DD56                                      l8057 DC64  
                                    l8049 DBFE                                      l8065 DD0E  
                                    l8241 EF42                                      l8233 EE8A  
                                    l8225 EE0A                                      l8217 EDCE  
                                    l8209 ED6E                                      l8161 EA30  
                                    l8153 E9D4                                      l5691 C642  
                                    l5683 C5F2                                      l5675 C530  
                                    l5667 C456                                      l5659 9208  
                                    l5851 D8AE                                      l5835 D7E4  
                                    l5827 D778                                      l5771 D50C  
                                    l5763 D4F6                                      l5755 D49E  
                                    l5747 D442                                      l5739 D3E4  
                                    l7451 99CA                                      l7443 9960  
                                    l7435 98D4                                      l7419 A142  
                                    l6475 8DE8                                      l6299 8EBC  
                                    l6803 E95C                                      l6811 E996  
                                    l6731 E580                                      l6723 E546  
                                    l6715 E510                                      l6707 E4F4  
                                    l6651 E2F0                                      l6643 E2A4  
                                    l6635 E268                                      l6627 E21E  
                                    l7371 9C84                                      l7363 9C70  
                                    l7355 9C3A                                      l6395 C9B6  
                                    l6387 C934                                      l6379 C8DE  
                                    l6547 D11C                                      l6539 D0D6  
                                    l6491 CE62                                      l6483 CDEE  
                                    l6619 9FF8                                      l7099 8FCA  
                                    l7347 BFBA                                      l7339 BF78  
                                    l7283 BDE6                                      l7291 BE10  
                                    l7275 BD7C                                      l7267 BD26  
                                    l7259 BCF2                                      l7195 A246  
                                    l7179 A1C6                                      l7611 AC22  
                                    l7603 ABD2                                      l7531 A9A2  
                                    l8147 E1FA                                      l8139 E10E  
                                    l8091 DE66                                      l8075 DD6C  
                                    l8083 DDBE                                      l8067 DD20  
                                    l8059 DC96                                      l8251 F02A  
                                    l8243 EF90                                      l8235 EECC  
                                    l8227 EE2A                                      l8219 EDE6  
                                    l8171 EACC                                      l8155 E9E4  
                                    l5693 C654                                      l5685 C5FA  
                                    l5677 C560                                      l5669 C4A0  
                                    l5941 AF52                                      l5933 ADE8  
                                    l5925 AD6A                                      l9301 C3FE  
                                    l5837 D7F8                                      l5829 D7AC  
                                    l5781 D56E                                      l5757 D4B0  
                                    l5749 D466                                      l6469 8A9E  
                                    l6821 90EA                                      l7445 998A  
                                    l7437 98E6                                      l7461 9398  
                                    l7429 A180                                      l6477 8DEE  
                                    l6805 E960                                      l6741 E5F8  
                                    l6733 E584                                      l6725 E556  
                                    l6717 E516                                      l6709 E4FE  
                                    l6661 E370                                      l6653 E304  
                                    l6645 E2AA                                      l6637 E270  
                                    l6629 E25C                                      l7381 9CDC  
                                    l7373 9C94                                      l7365 9C80  
                                    l7357 9C3E                                      l6397 C9DA  
                                    l6389 C946                                      l6581 D27C  
                                    l6565 D1C8                                      l6549 D128  
                                    l6485 CE06                                      l6493 CE76  
                                    l7349 BFC2                                      l7293 BE20  
                                    l7277 BDAA                                      l7269 BD38  
                                    l7197 A270                                      l7189 A20E  
                                    l7621 AC72                                      l7613 AC32  
                                    l7605 ABF6                                      l7517 A914  
                                    l7525 A95A                                      l7509 A8FE  
                                    l8093 DE76                                      l8085 DDD0  
                                    l8077 DD7C                                      l8069 DD2E  
                                    l8261 F0EA                                      l8253 F070  
                                    l8245 EFA2                                      l8229 EE3C  
                                    l8181 EBB4                                      l8173 EB06  
                                    l8157 E9FC                                      l5695 C686  
                                    l5687 C62C                                      l5679 C5B0  
                                    l5951 AFCC                                      l5935 AEC8  
                                    l5927 AD90                                      l5847 D86E  
                                    l5839 D858                                      l5791 D5EE  
                                    l5783 D59E                                      l5775 D512  
                                    l5759 D4D6                                      l6823 90F2  
                                    l7447 999E                                      l7439 9900  
                                    l7471 93EA                                      l7463 93A4  
                                    l7455 936A                                      l6479 8E1E  
                                    l6807 E990                                      l6751 E64C  
                                    l6743 E600                                      l6735 E5B4  
                                    l6727 E568                                      l6719 E51C  
                                    l6663 E380                                      l6655 E334  
                                    l6647 E2CE                                      l6639 E272  
                                    l7391 9D5A                                      l7383 9CF8  
                                    l7375 9CA6                                      l7367 9C84  
                                    l7359 9C56                                      l7703 F388  
                                    l6399 C9DE                                      l6591 D350  
                                    l6583 D2AC                                      l6567 D1DE  
                                    l6559 D180                                      l6575 D226  
                                    l6495 CEA2                                      l6487 CE22  
                                    l6911 AFF4                                      l6903 AFE4  
                                    l7295 BE40                                      l7279 BDBC  
                                    l7199 A296                                      l7615 AC42  
                                    l7607 AC0E                                      l7527 A986  
                                    l7519 A944                                      l8095 DE86  
                                    l8087 DE32                                      l8079 DD7E  
                                    l8271 F168                                      l8263 F0F2  
                                    l8239 EEE2                                      l8247 EFC4  
                                    l8191 EC4E                                      l8183 EBCA  
                                    l8175 EB64                                      l8167 EA4E  
                                    l8159 EA0C                                      l7481 8C1A  
                                    l5697 C68A                                      l5689 C632  
                                    l5953 AFD0                                      l5945 AF6C  
                                    l5929 ADCE                                      l5881 D936  
                                    l5849 D89E                                      l5857 D8B8  
                                    l5793 D62C                                      l5785 D5AE  
                                    l5777 D528                                      l5769 D4FC  
                                    l6825 9106                                      l6833 9122  
                                    l6817 90CE                                      l7449 99AA  
                                    l7473 93EC                                      l7465 93B2  
                                    l7457 937A                                      l6753 E65E  
                                    l6745 E624                                      l6729 E57A  
                                    l6681 E424                                      l6665 E386  
                                    l6657 E336                                      l6649 E2DE  
                                    l7393 9D6A                                      l7385 9D1C  
                                    l7377 9CB8                                      l7801 F770  
                                    l7721 F422                                      l7713 F3CE  
                                    l7705 F398                                      l6593 D360  
                                    l6585 D2BC                                      l6577 D256  
                                    l6569 D1FE                                      l6497 CEBE  
                                    l6489 CE38                                      l6921 B078  
                                    l6913 B00C                                      l7297 BE58  
                                    l7289 BDFC                                      l7633 ACC4  
                                    l7625 AC84                                      l7617 AC52  
                                    l7553 AA22                                      l7545 A9DE  
                                    l7537 A9BC                                      l8097 DE9A  
                                    l8089 DE42                                      l8273 F170  
                                    l8265 F13E                                      l8249 EFF4  
                                    l8257 F086                                      l8193 EC64  
                                    l8185 EBFA                                      l8177 EB76  
                                    l8169 EAAC                                      l8281 F218  
                                    l7483 8C20                                      l7491 8AEE  
                                    l5955 8AAA                                      l5699 C6C0  
                                    l5947 AFA0                                      l5939 AEE2  
                                    l5971 BFF2                                      l5963 BFD8  
                                    l5883 D948                                      l5875 D8E0  
                                    l5795 D640                                      l5787 D5C2  
                                    l5779 D53A                                      l6843 8B66  
                                    l6835 9144                                      l6827 9108  
                                    l6819 90D6                                      l8291 8DA0  
                                    l7475 93F6                                      l7467 93BC  
                                    l7459 9390                                      l6771 E6E0  
                                    l6755 E664                                      l6763 E69A  
                                    l6747 E62A                                      l6691 E47C  
                                    l6683 E43A                                      l6667 E388  
                                    l6659 E34C                                      l6675 E3BC  
                                    l7387 9D38                                      l7379 9CC0  
                                    l7811 F7E6                                      l7803 F796  
                                    l7723 F43E                                      l7715 F3D6  
                                    l7707 F3B8                                      l7643 F23C  
                                    l6587 D2D8                                      l6579 D266  
                                    l6595 9ED4                                      l6931 B0D8  
                                    l6923 B08E                                      l6915 B03A  
                                    l6907 AFF4                                      l7571 9854  
                                    l7563 97EE                                      l7299 BE74  
                                    l7627 AC94                                      l7619 AC64  
                                    l7555 AA70                                      l7547 AA0E  
                                    l7539 A9D8                                      l8099 DEAE  
                                    l8275 F18A                                      l8259 F0D4  
                                    l8267 F150                                      l8283 F22A  
                                    l8187 EC32                                      l8179 EB98  
                                    l7485 8C22                                      l7477 8C00  
                                    l7493 8AF0                                      l5949 AFC6  
                                    l5981 C074                                      l5973 C008  
                                    l5965 BFDC                                      l5885 D978  
                                    l5877 D8F8                                      l5869 D8CC  
                                    l5797 D648                                      l5789 D5E0  
                                    l6829 911C                                      l8293 8DB8  
                                    l7469 93DA                                      l6861 925E  
                                    l7397 A024                                      l6781 E70A  
                                    l6773 E6E2                                      l6757 E666  
                                    l6749 E63A                                      l6677 E3E0  
                                    l7389 9D52                                      l7901 FD40  
                                    l7821 F84E                                      l7813 F7FC  
                                    l7741 F4FC                                      l7725 F452  
                                    l7733 F4AC                                      l7661 F2A8  
                                    l7653 F276                                      l7645 F24C  
                                    l6589 D326                                      l6597 9EF0  
                                    l6941 B1B2                                      l6925 B0A6  
                                    l7573 9864                                      l7565 97FE  
                                    l7637 ACE2                                      l7629 ACAA  
                                    l7557 AA96                                      l8277 F1C0  
                                    l8269 F158                                      l8197 EC78  
                                    l8381 92D6                                      l7495 8AC6  
                                    l7487 8C3A                                      l7479 8C18  
                                    l5959 8AA2                                      l5983 C07A  
                                    l5975 C01A                                      l5879 D902  
                                    l5799 D678                                      l6847 8B70  
                                    l8295 8DC8                                      l8287 8D80  
                                    l6863 929A                                      l7399 A052  
                                    l6791 E88E                                      l6783 E71A  
                                    l6775 E6F2                                      l6695 E490  
                                    l6679 E416                                      l7911 FE1C  
                                    l7903 FD76                                      l7831 F90C  
                                    l7823 F89E                                      l7815 F836  
                                    l7751 F558                                      l7743 F512  
                                    l7735 F4B4                                      l7727 F472  
                                    l7719 F3F0                                      l7671 F2F6  
                                    l7663 F2B8                                      l7655 F290  
                                    l7647 F260                                      l6951 B21C  
                                    l6943 B1DE                                      l6919 B040  
                                    l7575 988C                                      l7567 9818  
                                    l6871 8E3A                                      l7639 AD48  
                                    l7591 AB4E                                      l7583 AAD4  
                                    l7559 AAD0                                      l8279 F1E0  
                                    l8199 EC94                                      l8383 92DA  
                                    l7489 8AE2                                      l5993 C0C4  
                                    l5985 C09E                                      l5977 C046  
                                    l5969 BFE2                                      l5897 D98C  
                                    l6849 8B92                                      l8289 8D90  
                                    l6865 929E                                      l6857 924E  
                                    l6793 E8E8                                      l6785 E724  
                                    l6777 E704                                      l6769 E6A2  
                                    l6697 E494                                      l6689 E442  
                                    l7905 FD88                                      l7913 FE7A  
                                    l7841 F94A                                      l7809 F7C8  
                                    l7761 F59A                                      l7745 F51E  
                                    l7737 F4C6                                      l7729 F4A4  
                                    l7753 F572                                      l7673 F306  
                                    l7665 F2BA                                      l7657 F2A2  
                                    l7649 F270                                      l6945 B1FC  
                                    l6961 B2B2                                      l6937 B140  
                                    l6929 B0C2                                      l7577 98BA  
                                    l7569 9828                                      l6873 8E3E  
                                    l7593 AB54                                      l7585 AAE4  
                                    l7497 A8A2                                      l8385 9304  
                                    l5995 C0D6                                      l5987 C0AE  
                                    l5979 C04C                                      l5899 D9A2  
                                    l9291 9136                                      l7931 A700  
                                    l7923 A6A4                                      l6867 92A2  
                                    l6859 925E                                      l6795 E920  
                                    l6787 E73A                                      l6779 E708  
                                    l6699 E4A8                                      l7915 FE86  
                                    l7907 FDB0                                      l7843 F94E  
                                    l7771 F5C8                                      l7755 F584  
                                    l7747 F544                                      l7739 F4CC  
                                    l7691 F360                                      l7675 F314  
                                    l7667 F2D2                                      l7683 F320  
                                    l6971 B36A                                      l6963 B2CE  
                                    l6939 B16C                                      l7579 98CC  
                                    l6875 8E42                                      l6883 8AB2  
                                    l7595 AB72                                      l7587 AB02  
                                    l7499 A8A2                                      l8387 932E  
                                    l5989 C0BE                                      l9293 8B84  
                                    l7941 A76A                                      l7933 A752  
                                    l7925 A6BC                                      l6869 92BA  
                                    l6797 E936                                      l6789 E7C6  
                                    l7917 FEA0                                      l7909 FDE6  
                                    l7845 F96A                                      l7837 F928  
                                    l7829 F8C0                                      l7781 F658  
                                    l7773 F5E8                                      l7765 F5A0  
                                    l7749 F548                                      l7685 F32C  
                                    l7669 F2E8                                      l9285 CDBC  
                                    l6957 B24A                                      l6949 B202  
                                    l6877 8E60                                      l6885 8AB2  
                                    l6893 8ABC                                      l7597 AB90  
                                    l7589 AB20                                      l9295 90BA  
                                    l7951 A830                                      l7943 A796  
                                    l7927 A6CC                                      l6799 E948  
                                    l7871 FAB6                                      l7855 F9A2  
                                    l7847 F96E                                      l7839 F92C  
                                    l7791 F6D4                                      l7783 F674  
                                    l7775 F5FE                                      l7759 F58A  
                                    l7695 F366                                      l7687 F33C  
                                    l7679 F31A                                      l9287 B73E  
                                    l6991 B7EC                                      l6975 B76E  
                                    l6959 B278                                      l6879 8E8A  
                                    l6895 8ABC                                      l7599 ABA6  
                                    l9297 DA0E                                      l7953 A852  
                                    l7945 A7A6                                      l7937 A758  
                                    l7929 A6E6                                      l9289 8D6E  
                                    l7881 FB48                                      l7873 FAE4  
                                    l7865 FA92                                      l7857 FA5A  
                                    l7849 F98A                                      l7793 F6FC  
                                    l7777 F61E                                      l7697 F376  
                                    l7689 F352                                      l6985 B7D6  
                                    l6977 B77E                                      l6969 B2F4  
                                    l7963 8AD4                                      l9299 9046  
                                    l7955 A87E                                      l7947 A7CA  
                                    l7939 A76A                                      l7883 FB98  
                                    l7859 FA6C                                      l7875 FB26  
                                    l7795 F71A                                      l7779 F63C  
                                    l7971 9742                                      l6995 B7F2  
                                    l6979 B7B4                                      l7957 A88E  
                                    l7949 A802                                      l7893 FCC0  
                                    l7885 FBAA                                      l7789 F696  
                                    l7981 9780                                      l7965 9716  
                                    l6997 B820                                      l6989 B7D6  
                                    l7959 A89E                                      l7895 FCFC  
                                    l7887 FC36                                      l7983 9792  
                                    l7975 9748                                      l7967 971E  
                                    l6999 B858                                      l7897 FD0C  
                                    l7993 97CE                                      l7985 979E  
                                    l7977 9762                                      l7969 9732  
                                    l7899 FD1E                                      l7995 97EA  
                                    l7987 97B8                                      l7979 9774  
                                    l7989 97C8                                      l7999 DA46  
                                    STR_1 FFDC                                      STR_2 FFE7  
                                    STR_3 FFCE                                      STR_4 FFFB  
                                    STR_5 FFDD                                      STR_7 FFBF  
                                    STR_8 FFBF                                      STR_9 FFF7  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      _LATD 000F8C  
                                    _LATE 000F8D                                      u7000 D528  
                                    u7001 D524                                      u7010 D53A  
                                    u7011 D536                                      u7100 D73E  
                                    u7101 D73A                                      u8000 C9EC  
                                    u8001 C9E8                                      u7210 D946  
                                    u7130 D7BC                                      u7050 D640  
                                    u7211 D942                                      u7131 D7B8  
                                    u7051 D63C                                      u7300 AE8A  
                                    u7140 D7D4                                      u7028 D556  
                                    u8020 CAB2                                      u7141 D7D0  
                                    u7029 D56A                                      u8021 CAAE  
                                    u7310 AEC8                                      u7150 D7F8  
                                    u7118 D764                                      u7038 D58A  
                                    u8110 8E38                                      u8030 CAE8  
                                    u7151 D7F4                                      u7119 D778  
                                    u7039 D59E                                      u8111 8E34  
                                    u8031 CAE4                                      u8015 CA76  
                                    u6600 941E                                      u7320 AEDE  
                                    u7240 AD66                                      u7208 D91E  
                                    u7128 D794                                      u7048 D61A  
                                    u8040 CB44                                      u8200 CFEC  
                                    u8120 CE06                                      u9000 B0D8  
                                    u6601 941A                                      u7321 AEDA  
                                    u7241 AD62                                      u7209 D932  
                                    u7129 D7A8                                      u7049 D62C  
                                    u8201 CFE8                                      u8121 CE02  
                                    u9001 B0D4                                      u6610 91F6  
                                    u7330 AF14                                      u7250 AD90  
                                    u7410 C046                                      u7090 D6EA  
                                    u8050 CBE2                                      u8210 D040  
                                    u8130 CE38                                      u9010 B118  
                                    u7307 AE7E                                      u7411 C042  
                                    u7091 D6E6                                      u8051 CBDE  
                                    u8211 D03C                                      u8131 CE34  
                                    u6620 9206                                      u7340 AF52  
                                    u7260 ADCE                                      u7228 D964  
                                    u7068 D664                                      u8108 8E0A  
                                    u8060 CC7E                                      u8300 D1DE  
                                    u8220 D05C                                      u8140 CE62  
                                    u9100 B7D6                                      u9020 B13C  
                                    u6621 9202                                      u7317 AEBC  
                                    u7421 C068                                      u7405 C01C  
                                    u7229 D978                                      u7069 D678  
                                    u8109 8E1E                                      u8045 CB3A  
                                    u8301 D1DA                                      u8221 D058  
                                    u8141 CE5E                                      u9101 B7D2  
                                    u9021 B138                                      u6710 C5C2  
                                    u6630 922E                                      u7350 AF68  
                                    u7270 ADE4                                      u7510 C270  
                                    u7238 D9C0                                      u7190 D8F8  
                                    u7078 D694                                      u8070 CCB4  
                                    u8310 D1FA                                      u8230 D076  
                                    u8150 CEBE                                      u9110 B7EC  
                                    u6711 C5BE                                      u7351 AF64  
                                    u7271 ADE0                                      u7511 C26C  
                                    u7431 C096                                      u7239 D9D4  
                                    u7191 D8F4                                      u7079 D6A8  
                                    u8071 CCB0                                      u8311 D1F6  
                                    u8231 D072                                      u8151 CEBA  
                                    u9111 B7E8                                      u9015 B10E  
                                    u6800 C74E                                      u6640 924C  
                                    u7360 AFC6                                      u7280 AE1A  
                                    u7440 C0AE                                      u7168 D814  
                                    u7088 D6C4                                      u7600 9BA8  
                                    u8080 8B1E                                      u8320 D222  
                                    u8240 D0AC                                      u8160 CEEE  
                                    u8400 9FF8                                      u9200 B9EE  
                                    u9120 B820                                      u9040 B1FC  
                                    u6801 C74A                                      u6641 9248  
                                    u6617 91EC                                      u7337 AF08  
                                    u7257 AD84                                      u7441 C0AA  
                                    u7169 D828                                      u7089 D6D8  
                                    u7601 9BA4                                      u8081 8B18  
                                    u8065 CC74                                      u8321 D21E  
                                    u8241 D0A8                                      u8161 CEEA  
                                    u8401 9FF4                                      u9201 B9EA  
                                    u9121 B81C                                      u9041 B1F8  
                                    u6810 C764                                      u7370 AFE2  
                                    u7290 AE4C                                      u7450 C102  
                                    u7178 D844                                      u7610 9BCE  
                                    u8090 8B20                                      u8330 D266  
                                    u8250 D0D6                                      u8170 CF2C  
                                    u8410 A020                                      u9210 BA00  
                                    u9130 B858                                      u9050 B21C  
                                    u6811 C760                                      u7371 AFDE  
                                    u7347 AF46                                      u7267 ADC2  
                                    u7451 C0FE                                      u7179 D858  
                                    u7611 9BCA                                      u8331 D262  
                                    u8251 D0D2                                      u8171 CF28  
                                    u8411 A01A                                      u9211 B9FC  
                                    u9131 B854                                      u9051 B218  
                                    u9035 B18E                                      u6580 8B36  
                                    u6820 C79E                                      u6740 C642  
                                    u6708 C57C                                      u7540 C2E8  
                                    u7508 C24A                                      u7188 D88A  
                                    u7620 9BE6                                      u9300 A4C4  
                                    u8340 D27C                                      u8260 D10C  
                                    u8180 CF62                                      u8420 A022  
                                    u9220 BA68                                      u9140 B898  
                                    u9060 B246                                      u6581 8B32  
                                    u6821 C79A                                      u6741 C63E  
                                    u6709 C5B0                                      u6637 9222  
                                    u7541 C2E4                                      u7509 C25C  
                                    u7381 C000                                      u7189 D89E  
                                    u6901 D3B6                                      u7621 9BE2  
                                    u9301 A4C0                                      u8341 D278  
                                    u8261 D108                                      u8181 CF5E  
                                    u9221 BA64                                      u9061 B242  
                                    u6590 8CD8                                      u6750 C654  
                                    u7550 C318                                      u7470 C14E  
                                    u7390 C01A                                      u7710 9B00  
                                    u6910 D3DA                                      u9310 A4DE  
                                    u8350 D2BC                                      u8270 D152  
                                    u8190 CFAA                                      u9230 BA84  
                                    u9150 B8BC                                      u9070 B278  
                                    u6591 8CD4                                      u6751 C650  
                                    u7367 AFBA                                      u7287 AE0E  
                                    u7551 C314                                      u7471 C14A  
                                    u7391 C016                                      u7711 9AFC  
                                    u6911 D3D6                                      u9311 A4DA  
                                    u8511 E368                                      u8351 D2B8  
                                    u8271 D14E                                      u8191 CFA6  
                                    u9231 BA80                                      u9151 B8B8  
                                    u9071 B274                                      u6760 C686  
                                    u6728 C5DE                                      u7528 C28C  
                                    u7480 C160                                      u6920 D40A  
                                    u7640 9C36                                      u7720 9096  
                                    u7800 961A                                      u9320 A4FA  
                                    u8600 E4BC                                      u8520 E380  
                                    u8440 E25C                                      u8360 D326  
                                    u8280 D17C                                      u9240 BAA4  
                                    u9160 B914                                      u9080 B2F0  
                                    u9400 9ECC                                      u6761 C682  
                                    u6729 C5F2                                      u7297 AE40  
                                    u7529 C2A0                                      u7481 C15C  
                                    u7641 9C32                                      u7721 9092  
                                    u7801 9616                                      u9321 A4F6  
                                    u8601 E4B8                                      u8521 E37C  
                                    u8441 E258                                      u8361 D322  
                                    u8281 D178                                      u9241 BAA0  
                                    u9145 B88E                                      u9081 B2EC  
                                    u9401 9EC8                                      u6738 C616  
                                    u6658 C472                                      u7538 C2BC  
                                    u7490 C1B6                                      u7730 9022  
                                    u6930 D436                                      u9330 A69C  
                                    u7810 8EBC                                      u8370 D360  
                                    u8290 D1C4                                      u9250 BAD4  
                                    u9170 B948                                      u9090 B314  
                                    u9410 917E                                      u6739 C62A  
                                    u6659 C4A0                                      u7539 C2D0  
                                    u7491 C1B2                                      u7731 901E  
                                    u6931 D432                                      u9331 A698  
                                    u7811 8EB8                                      u8611 E4DE  
                                    u8371 D35C                                      u8291 D1C0  
                                    u9251 BAD0                                      u9171 B944  
                                    u9411 917A                                      u6780 C6F2  
                                    u6668 C4BC                                      u7468 C128  
                                    u7708 9AD4                                      u7740 A328  
                                    u9420 8C70                                      u7820 8EF6  
                                    u8620 E4F4                                      u8508 E320  
                                    u9260 8D4A                                      u7900 B506  
                                    u8380 9EF0                                      u9180 B99C  
                                    u9340 9DC8                                      u9500 BC30  
                                    u6781 C6EE                                      u6669 C4D0  
                                    u7469 C13C                                      u7709 9AE6  
                                    u6941 D45E                                      u6925 D400  
                                    u7741 A324                                      u9421 8C6C  
                                    u7821 8EF2                                      u8701 E61C  
                                    u8621 E4F0                                      u8541 E3D8  
                                    u8509 E334                                      u8461 E2C6  
                                    u9261 8D46                                      u7901 B502  
                                    u8381 9EEC                                      u9181 B998  
                                    u9165 B90A                                      u9341 9DC4  
                                    u9501 BC2C                                      u6838 C7BA  
                                    u6678 C4EC                                      u7670 9A72  
                                    u6950 D476                                      u7638 9C0A  
                                    u7750 A37A                                      u7830 8BC6  
                                    u8710 E63A                                      u8550 E416  
                                    u8470 E2DE                                      u8438 E23A  
                                    u7910 B550                                      u8390 9FAE  
                                    u9190 B9BE                                      u9350 9E0C  
                                    u9270 8F96                                      u9510 BC46  
                                    u9430 A1C6                                      u6839 C7CE  
                                    u6679 C500                                      u7671 9A6E  
                                    u7655 9A00                                      u6951 D472  
                                    u7639 9C1C                                      u7751 A376  
                                    u7831 8BC2                                      u8711 E636  
                                    u8631 E538                                      u8551 E412  
                                    u8471 E2DA                                      u8439 E24C  
                                    u7911 B54C                                      u8391 9FAA  
                                    u9191 B9BA                                      u9095 B30A  
                                    u9351 9E08                                      u9271 8F92  
                                    u9511 BC42                                      u9431 A1C2  
                                    u6880 C8C8                                      u6848 C7EC  
                                    u6688 C51C                                      u7568 C34C  
                                    u7680 9A98                                      u6960 D49E  
                                    u7760 A406                                      u8720 E64C  
                                    u8640 E556                                      u8560 E424  
                                    u8480 E2F0                                      u7840 9698  
                                    u9360 9E3E                                      u9280 8FC0  
                                    u9600 BDA6                                      u9520 BC74  
                                    u9440 A20A                                      u6881 C8C4  
                                    u6849 C800                                      u6689 C530  
                                    u7569 C360                                      u7681 9A94  
                                    u6961 D49A                                      u7585 9B36  
                                    u7761 A402                                      u8721 E648  
                                    u8641 E552                                      u8561 E420  
                                    u8481 E2EC                                      u7841 9694  
                                    u9361 9E3A                                      u9601 BDA2  
                                    u9521 BC70                                      u9441 A206  
                                    u6858 C81E                                      u6778 C6A6  
                                    u6698 C54C                                      u7578 C3BE  
                                    u7690 9AB0                                      u7770 A424  
                                    u8810 E83C                                      u8730 E65E  
                                    u8650 E568                                      u8538 E3A6  
                                    u8490 E302                                      u8458 E28E  
                                    u7930 B5FE                                      u7850 B39A  
                                    u9370 9E6A                                      u9290 8FE2  
                                    u9610 BDBC                                      u9530 BC86  
                                    u9450 A23E                                      u6891 C8D4  
                                    u6859 C832                                      u6779 C6BA  
                                    u6699 C560                                      u7579 C3D2  
                                    u7691 9AAC                                      u7771 A420  
                                    u8731 E65A                                      u8651 E564  
                                    u8571 E474                                      u8539 E3B8  
                                    u8491 E2FE                                      u8459 E2A2  
                                    u7931 B5FA                                      u7851 B396  
                                    u9371 9E66                                      u9291 8FDE  
                                    u9611 BDB8                                      u9531 BC82  
                                    u9451 A23A                                      u6868 C850  
                                    u7668 9A50                                      u7780 95B4  
                                    u8900 911C                                      u8660 E57A  
                                    u8580 E48C                                      u7940 B690  
                                    u7860 B3C4                                      u9380 9E86  
                                    u9700 BF1A                                      u9620 BDD2  
                                    u9540 BC96                                      u9460 A296  
                                    u6869 C864                                      u7669 9A62  
                                    u6981 D4CE                                      u7781 95B0  
                                    u8901 9118                                      u8805 E79A  
                                    u8661 E576                                      u8581 E488  
                                    u7925 B56C                                      u7861 B3C0  
                                    u9381 9E82                                      u9701 BF16  
                                    u9621 BDCE                                      u9541 BC92  
                                    u9461 A292                                      u6878 C882  
                                    u6798 C71E                                      u6990 D4E6  
                                    u7598 9B86                                      u7790 95D4  
                                    u8910 928C                                      u8590 E4A8  
                                    u7950 B6C2                                      u9390 9EBA  
                                    u9710 BF2A                                      u9630 BDE6  
                                    u9550 BCC8                                      u9470 A2D4  
                                    u6879 C896                                      u6799 C732  
                                    u6991 D4E2                                      u6975 D4A0  
                                    u7599 9B98                                      u7791 95D0  
                                    u8815 E832                                      u8591 E4A4  
                                    u7951 B6BE                                      u9391 9EB6  
                                    u9287 8FB6                                      u9711 BF26  
                                    u9631 BDE2                                      u9551 BCC4  
                                    u9471 A2D0                                      u8920 92BA  
                                    u8760 E6F2                                      u9800 9CF8  
                                    u7880 B466                                      u7960 C8FE  
                                    u9720 BF74                                      u9640 BDF8  
                                    u9560 BD22                                      u9480 A302  
                                    u8921 92B6                                      u8825 E862  
                                    u8761 E6EE                                      u9801 9CF4  
                                    u7945 B686                                      u7881 B462  
                                    u7961 C8FA                                      u9721 BF70  
                                    u9641 BDF4                                      u9561 BD1E  
                                    u9481 A2FE                                      u8930 92CC  
                                    u8850 E95C                                      u8834 E884  
                                    u8770 E704                                      u8690 E5F2  
                                    u9810 9D1C                                      u7970 C928  
                                    u9730 BF92                                      u9650 BE20  
                                    u9570 BD38                                      u9490 BBFE  
                                    u8931 92C8                                      u8851 E958  
                                    u8835 E880                                      u8771 E700  
                                    u8691 E5EE                                      u9811 9D18  
                                    u7875 B42E                                      u7971 C924  
                                    u9731 BF8E                                      u9651 BE1C  
                                    u9571 BD34                                      u9491 BBFA  
                                    u9900 98E6                                      u8844 E8C2  
                                    u8780 E71A                                      u8748 E684  
                                    u9820 9D52                                      u8940 8E60  
                                    u9740 BFAE                                      u9660 BE58  
                                    u9580 BD4A                                      u9901 98E2  
                                    u8917 9282                                      u8845 E8BC  
                                    u8781 E716                                      u8749 E696  
                                    u9821 9D4E                                      u8941 8E5C  
                                    u9741 BFAA                                      u9661 BE54  
                                    u9581 BD46                                      u9910 9900  
                                    u9830 A07E                                      u8790 E73A  
                                    u8758 E6CA                                      u8678 E5A2  
                                    u9750 9C68                                      u7990 C9B2  
                                    u8950 8E8A                                      u9670 BE90  
                                    u9590 BD7C                                      u9911 98FC  
                                    u9831 A07A                                      u8791 E736  
                                    u8759 E6DE                                      u8679 E5B4  
                                    u9751 9C64                                      u7895 B4CE  
                                    u7991 C9AE                                      u8951 8E86  
                                    u9671 BE8C                                      u9591 BD78  
                                    u8880 90EA                                      u9920 9928  
                                    u9840 A0AE                                      u8688 E5D0  
                                    u9760 9C94                                      u8960 B00C  
                                    u9680 BEB2                                      u8881 90E6  
                                    u9921 9924                                      u9841 A0AA  
                                    u8689 E5E2                                      u9761 9C90  
                                    u7985 C976                                      u8961 B008  
                                    u9681 BEAE                                      u8890 9106  
                                    u9930 9960                                      u9850 A0D4  
                                    u9770 9CA6                                      u8970 B03A  
                                    u9690 BF06                                      u8891 9102  
                                    u9931 995C                                      u9851 A0D0  
                                    u9771 9CA2                                      u8971 B036  
                                    u9691 BF02                                      u9940 998A  
                                    u9860 A0F2                                      u8868 E97E  
                                    u9780 9CB8                                      u8980 B08E  
                                    u9941 9986                                      u9861 A0EE  
                                    u8869 E990                                      u9781 9CB4  
                                    u8981 B08A                                      u9950 999E  
                                    u9870 A110                                      u8878 E9B4  
                                    u9790 9CDC                                      u8990 B0A6  
                                    u9951 999A                                      u9871 A10C  
                                    u8879 E9C6                                      u9791 9CD8  
                                    u8991 B0A2                                      u9960 9390  
                                    u9880 A142                                      u9961 938C  
                                    u9881 A13E                                      u9970 93B2  
                                    u9890 A17C                                      u9971 93AE  
                                    u9891 A178                                      u9980 93DA  
                                    u9981 93D6                                      u9990 A8CE  
                                    u9991 A8CA                                      _WPUB 000F61  
                                    _Fsid 00F4         SD_SPI_MediaInitialize@CSDResponse 002E  
                                    _file 0AF4                                      _main 92D6  
                            find_volume@i 00C0                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      indf0 000FEF  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    indf1 000FE7                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                    ??_SPI1_ExchangeBlock 0005                               ld_dword@ptr 0001  
                           disk_ioctl@cmd 0001                             disk_read@buff 004A  
                           disk_read@pdrv 0054                                      prodh 000FF4  
                                    prodl 000FF3                            ??_get_ldnumber 0003  
                                    start 0000                 __end_of_SPI1_ExchangeByte 8B3C  
                            ?_follow_path 00D7                              ___param_bank 000000  
                         create_name@path 000B                          create_chain@clst 009A  
                             _sync_window A308                              ?_SDFAST_open 0001  
           __end_of_OSCILLATOR_Initialize 8AD4                               ?_SPI1_Close 0001  
                                   ?_main 0001                                     STR_10 FFF7  
                                   STR_11 FFF1                                     STR_12 FFF1  
                         __end_of_dbc_2nd 8AC6          SPI1_Open@spi1UniqueConfiguration 0002  
                         __end_of_dbc_1st 8ABC                                     u10000 A8F8  
                                   u10001 A8F4                                     u10010 A914  
                         __end_of___lldiv 940E                                     u10011 A910  
                                   u10100 9864                                     u10020 A954  
                                   u10101 9860                                     u10021 A950  
                                   u10110 AB02                                     u10030 A99E  
                                   u10111 AAFE                                     u10031 A99A  
                                   u10200 AC80                                     u10120 AB20  
                                   u10040 A9B8                                     u11000 DDD0  
                                   u10201 AC7C                                     u10121 AB1C  
                                   u10041 A9B4                                     u11001 DDCC  
                                   u10210 ACAA                                     u10130 AB72  
                                   u10050 A9D8                                     u11010 DEDE  
                                   u10211 ACA6                                     u10131 AB6E  
                                   u10051 A9D4                                     u11011 DEDA  
                                   u10300 F360                                     u10220 ACC0  
                                   u10140 AB90                                     u10060 AA1E  
                                   u11100 E106                                     u11020 DF00  
                                   u10301 F35C                                     u10221 ACBC  
                                   u10141 AB8C                                     u10061 AA1A  
                                   u11101 E102                                     u11021 DEFC  
                                   u10310 F376                                     u10230 ACDE  
                                   u10150 ABC2                                     u10070 AA70  
                                   u11110 E130                                     u10311 F372  
                                   u10231 ACDA                                     u10151 ABBE  
                                   u10071 AA6C                                     u10400 F584  
                                   u10320 F384                                     u10240 F270  
                                   u10160 AC1E                                     u10080 AAD0  
                                   u11120 E1CE                                     u11040 DFF2  
                                   u11200 EB76                                     u10401 F580  
                                   u10321 F380                                     u10241 F26C  
                                   u10161 AC1A                                     u10081 AACC  
                                   u11121 E1CA                                     u11041 DFEE  
                                   u11201 EB72                                     u10410 F59A  
                                   u10330 F3CA                                     u10250 F2A2  
                                   u10090 9828                                     u10170 AC52  
                                   u11130 E1EA                                     u11050 E012  
                                   u11210 EB98                                     u10411 F596  
                                   u10331 F3C6                                     u10251 F29E  
                                   u10091 9824                                     u10171 AC4E  
                                   u11131 E1E6                                     u11115 E124  
                                   u11051 E00E                                     u11035 DF4E  
                                   u11211 EB94                                     u10500 F84A  
                                   u10420 F5C4                                     u10340 F3EC  
                                   u10260 F2D2                                     u10180 AC64  
                                   u11060 E038                                     u11220 EBCA  
                                   u11140 EA0C                                     u10501 F846  
                                   u10421 F5C0                                     u10341 F3E8  
                                   u10261 F2CE                                     u10181 AC60  
                                   u11061 E034                                     u11221 EBC6  
                                   u11141 EA08                                     u10430 F5FE  
                                   u10350 F43E                                     u10270 F2F6  
                                   u10190 AC72                                     u11070 E056  
                                   u11310 EE3C                                     u11230 EC4A  
                                   u11150 EA2C                                     u10431 F5FA  
                                   u10351 F43A                                     u10271 F2F2  
                                   u10191 AC6E                                     u11071 E052  
                                   u11311 EE38                                     u11231 EC46  
                                   u11151 EA28                                     u10600 FAB2  
                                   u10520 F8BC                                     u10440 F674  
                                   u10360 F4C6                                     u10280 F306  
                                   u11080 E086                                     u11400 F0EA  
                                   u11320 EE6A                                     u11240 EC64  
                                   u11160 EA4A                                     u10601 FAAE  
                                   u10521 F8B8                                     u10441 F670  
                                   u10361 F4C2                                     u10281 F302  
                                   u11081 E082                                     u11401 F0E6  
                                   u11321 EE66                                     u11305 EE16  
                                   u11241 EC60                                     u11161 EA46  
                                   u10530 F924                                     u10450 F692  
                                   u10370 F512                                     u10290 F314  
                                   u11090 E0C2                                     u11410 F1C0  
                                   u11330 EECC                                     u11250 EC94  
                                   u11170 EAAC                                     u10531 F920  
                                   u10515 F866                                     u10451 F68E  
                                   u10371 F50E                                     u10291 F310  
                                   u11091 E0BE                                     u11411 F1BC  
                                   u11331 EEC8                                     u11251 EC90  
                                   u11171 EAA8                                     u10700 FDE6  
                                   u10620 FB44                                     u10540 F94A  
                                   u10460 F71A                                     u10380 F558  
                                   u11420 F22A                                     u11340 EF42  
                                   u11260 ECE6                                     u11180 EB06  
                                   u10701 FDE2                                     u10621 FB40  
                                   u10541 F946                                     u10461 F716  
                                   u10381 F554                                     u11421 F226  
                                   u11341 EF3E                                     u11261 ECE2  
                                   u11181 EB02                                     u11430 8DA0  
                                   u10710 FE1C                                     u10630 FBAA  
                                   u10550 F96A                                     u10470 F76C  
                                   u10390 F572                                     u11270 ED1C  
                                   u11190 EB32                                     u11431 8D9C  
                                   u10711 FE18                                     u10631 FBA6  
                                   u10615 FB02                                     u10551 F966  
                                   u10471 F768                                     u10391 F56E  
                                   u11271 ED18                                     u10720 A6CC  
                                   u11440 8DC8                                     u10640 FC8C  
                                   u10560 F98A                                     u10480 F7C4  
                                   u10800 97C8                                     u11280 ED6E  
                                   u10721 A6C8                                     u11441 8DC4  
                                   u10561 F986                                     u10481 F7C0  
                                   u10801 97C4                                     u11281 ED6A  
                                   u10730 A6E6                                     u10650 FCBC  
                                   u10570 F99E                                     u10490 F7FC  
                                   u10810 DA5A                                     u11370 EFF4  
                                   u11290 EDE6                                     u10731 A6E2  
                                   u10651 FCB8                                     u10571 F99A  
                                   u10491 F7F8                                     u10811 DA56  
                                   u11371 EFF0                                     u11355 EF6C  
                                   u11291 EDE2                                     u11195 EB28  
                                   u10740 A700                                     u10660 FD1E  
                                   u10580 FA6C                                     u10900 DB72  
                                   u10820 DA90                                     u11380 F02A  
                                   u11620 9304                                     u10741 A6FC  
                                   u10661 FD1A                                     u10645 FC82  
                                   u10581 FA68                                     u10901 DB6E  
                                   u10821 DA8C                                     u11381 F026  
                                   u11365 EFAC                                     u11621 9300  
                                   u10750 A752                                     u10670 FD40  
                                   u10590 FA8E                                     u10910 DB82  
                                   u10830 DAC2                                     u11390 F070  
                                   u11630 932E                                     u10751 A74E  
                                   u10671 FD3C                                     u10591 FA8A  
                                   u10911 DB7E                                     u10831 DABE  
                                   u11391 F06C                                     u11631 932A  
                                   u10760 A7A6                                     u10680 FD76  
                                   u10920 DC48                                     u10840 DAD0  
                                   u10761 A7A2                                     u10681 FD72  
                                   u10921 DC44                                     u10841 DACC  
                                   u10690 FDB0                                     u10770 9742  
                                   u10930 DCA6                                     u10850 DAEC  
                                   u10691 FDAC                                     u10771 973E  
                                   u10931 DCA2                                     u10851 DAE8  
                                   u10780 9774                                     u10940 DD20  
                                   u10860 DAFE                                     u10781 9770  
                                   u10941 DD1C                                     u10861 DAFA  
                                   u10790 9792                                     u10950 DD2E  
                                   u10870 DB10                                     u10791 978E  
                                   u10951 DD2A                                     u10871 DB0C  
                                   u10960 DD46                                     u10880 DB42  
                                   u10961 DD42                                     u10881 DB3E  
                                   u10970 DD56                                     u10890 DB5A  
                                   u10971 DD52                                     u10891 DB56  
                                   u10980 DD6C                                     u10981 DD68  
                                   u10990 DD7C                                     u10991 DD78  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _TRISD 000F95  
                                   _TRISE 000F96                           __end_of_f_close 8DDA  
                                   _FatFs 08C1                           __end_of_chk_chr 8E9E  
           SD_SPI_SectorRead@sector_count 0035                                     _ExCvt FEBB  
                     ___lmul@multiplicand 0005                           __end_of_f_mount 97EE  
                         __end_of_dir_sdi B36E                     _SD_SPI_AsyncReadTasks BFD8  
                         __end_of_f_write F23C                           __end_of_get_fat B76E  
                ??_SD_SPI_AsyncWriteTasks 0025                           __end_of_ld_word 8C00  
                         __end_of_mem_cmp 92D6                           __end_of_mem_cpy 8FE4  
                         __end_of_mem_set 8BC8                                     _drive 068E  
                           find_volume@br 008B                             find_volume@fs 00C3  
                           find_volume@pt 00A5                            disk_ioctl@buff 0002  
                                   pclath 000FFA                            disk_read@count 0050  
                                   tablat 000FF5                            disk_ioctl@pdrv 0006  
                                   plusw0 000FEB                                     plusw1 000FE3  
                                   plusw2 000FDB                            fp__SDSLOW_open 0000  
                         __end_of_put_fat CDDE                                     status 000FD8  
                         __end_of_st_word 8B64                           __end_of_sync_fs A6A4  
                           get_ldnumber@i 0005                             disk_write@res 0058  
                             ?_SD_SendCmd 000C                           __initialization 8CDA  
                     disk_initialize@pdrv 0057                       disk_initialize@stat 0058  
                            __end_of_main 936A                                    ??_main 0060  
                           __activetblptr 000003                              ?_SDSLOW_open 0001  
                 _SD_SPI_IsWriteProtected 8A9E                             SD_SendCmd@cmd 001D  
                                  _ANSELA 000F38                                    _ANSELB 000F39  
                                  _ANSELC 000F3A                                    _ANSELD 000F3B  
                                  _ANSELE 000F3C                        SD_SPI_SectorRead@i 003B  
                                  _OSCCON 000FD3           SD_SPI_AsyncWriteTasks@data_byte 00FE  
                    __end_of_dir_register 98D0                          __end_of_check_fs A184  
                 ?_SD_SPI_MediaInitialize 0001                          __end_of_dir_find A308  
                       __end_of_SPI1_Open 94C6                          __end_of_dir_next BB84  
                            ?_move_window 0070                      __end_of_create_chain D38E  
                        __end_of_ld_clust 91C8                          __end_of_ld_dword 957E  
                                  ___lmul 8E9E                                 ??_dbc_2nd 0003  
                               ??_dbc_1st 0003                                 ??___lldiv 0009  
                                  _f_open DA46                                    _ioInfo 0159  
                                  _f_sync A6A4                                    _memcpy 8C8A  
                                  _memset AD4C                                 ??_f_close 0060  
                          find_volume@fmt 00C2                                    clear_0 8D02  
                                  clear_1 8D14                                    clear_2 8D20  
                          find_volume@rfs 0080                                 ??_chk_chr 0005  
                          find_volume@vol 00AB                   SD_SendCmd@address_bytes 0017  
                                  isa$std 000001                                 ??_f_mount 0060  
                               ??_dir_sdi 0097                                 ??_f_write 00BD  
                               ??_get_fat 007D                                    main@bw 00F2  
                               ??_ld_word 0003      SD_SPI_DelayMilliseconds@milliseconds 0006  
                               ??_mem_cmp 0007                                 ??_mem_cpy 0007  
                               ??_mem_set 0007                          __end_of_validate 99CE  
                  ?_SD_SPI_AsyncReadTasks 0023                      __end_of_get_ldnumber 9D86  
              ?_SD_SPI_IsMediaInitialized 0001                              __mediumconst FEBA  
                         disk_read@sector 004C                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                        __end_of_st_clust 8C8A                          __end_of_st_dword 8F74  
                               ??_put_fat 0081                                 ??_st_word 0005  
                               ??_sync_fs 0070        SD_SPI_AsyncWriteTasks@WriteTimeout 0166  
                       _SYSTEM_Initialize 8AD4            __end_of_SD_SPI_MediaInitialize E9CC  
                              __accesstop 0060                   __end_of__initialization 8D26  
                          get_ldnumber@tc 0009                            disk_write@buff 004D  
                          get_ldnumber@tp 000C                            get_ldnumber@tt 0007  
                          _SPI1_ReadBlock 000000                            disk_write@pdrv 0057  
                      ?_SYSTEM_Initialize 0001                             ___rparam_used 000001  
                           __end_of_ExCvt FF3B                            __pcstackCOMRAM 0001  
                            __pidataBANK1 8AF4                       ??_SYSTEM_Initialize 0001  
                      _SD_SPI_SectorWrite 9B04                         ??_SPI1_Initialize 0001  
                          _sdmmc_cmdtable FF3B                     SPI1_ExchangeByte@data 0001  
                     ?_SD_SPI_SectorWrite 0032                        _spi1_configuration FFB3  
           __end_of_SD_SPI_IsMediaPresent 8A9E                 ??_SD_SPI_IsWriteProtected 0001  
       __end_of_SD_SPI_IsMediaInitialized 8B22             SD_SPI_AsyncWriteTasks@command 00FD  
               __end_of_SYSTEM_Initialize 8AE2                                __pbssBANK0 00F4  
                              __pbssBANK1 0159                          _mediaInformation 0150  
                    ??_SD_SPI_SectorWrite 003A                            _SPI1_WriteByte 000000  
                        _find_volume$2377 009B                          _find_volume$2378 009F  
                  _SD_SPI_AsyncWriteTasks D38E                                   ?___lmul 0001  
                                 ?_f_open 00E5                    __end_of_sdmmc_cmdtable FF8B  
                                 ?_f_sync 0078                         ??_disk_initialize 0055  
                                 ?_memcpy 0001                                   ?_memset 0001  
                            ?_sync_window 0059                            ___lmul@product 0009  
                            ??_SPI1_Close 0001         SD_SPI_AsyncReadTasks@blockCounter 00FA  
                               ?_check_fs 0077                                _disk_ioctl 8B64  
               ?_SD_SPI_DelayMilliseconds 0001                                   _OSCCON2 000FD2  
                          follow_path@res 00E4                                _disk_write 9058  
              SD_SPI_AsyncWriteTasks@info 0023                                   _OSCTUNE 000F9B  
                                 _SSP1ADD 000FC8                            remove_chain@fs 00AF  
                                 _SSP1BUF 000FC9                                 ?_dir_find 00CF  
                               ?_dir_next 00B5           SD_SPI_SectorRead@sector_address 002F  
                     SD_SPI_SectorWrite@i 003E                                 ?_ld_clust 0008  
                               ?_ld_dword 0001                             ?_remove_chain 0098  
                                 _CurrVol 00FC                              ??_SD_SendCmd 0011  
                      __end_of_SPI1_Close 8A9A                         __end_of_dir_clear A024  
                       __end_of_dir_alloc 9ED4                                   __Hparam 0000  
                       __end_of_clst2sect 9716                                   __Lparam 0000  
                               ?_validate 0005                         __end_of_disk_read 9058  
                            _f_write$2693 00C9                                f_close@res 0083  
                               ?_st_clust 0005                                   _dbc_2nd 8ABC  
                                 _dbc_1st 8AB2                                 ?_st_dword 0001  
                                 ___lldiv 936A                                check_fs@fs 0077  
                                 _f_close 8D80                                   __pcinit 8CDA  
                                 _chk_chr 8E3A                                   __ramtop 1000  
                            _get_fat$1759 0085                                   _f_mount 9716  
                                 __ptext0 92D6                                   __ptext1 E9CC  
                                 __ptext2 DA46                                   __ptext3 A8A2  
                                 __ptext4 AAD4                                   __ptext5 9148  
                                 __ptext6 A184                                   __ptext7 BB84  
                                 __ptext8 8ABC                                   __ptext9 8AB2  
                                 _dir_sdi AFE4                                   _f_write E9CC  
                             validate@obj 0005                                   _get_fat B36E  
                             validate@res 000F                               validate@rfs 0007  
                              chk_chr@chr 0003                              _dir_register 97EE  
                              chk_chr@str 0001                                   _ld_word 8BC8  
                                 _mem_cmp 924E                                   _mem_cpy 8F74  
                   _OSCILLATOR_Initialize 8AC6                                   _mem_set 8B96  
                              ??_check_fs 007D                           find_volume@mode 0082  
                         find_volume@path 007E                     SD_SPI_SectorRead@info 003D  
                         find_volume@nrsv 00AD                      fp__SPI1_ExchangeByte 0000  
                         find_volume@stat 00B3                  ??_PIN_MANAGER_Initialize 0001  
                            _create_chain CDDE                        __end_of_SD_SendCmd C8DE  
                              ??_dir_find 00D1                                   _put_fat C8DE  
                              ??_dir_next 00B9                                   _st_word 8B3C  
                              ??_ld_clust 000C                                   _sync_fs A4A6  
                              ??_ld_dword 0005                      end_of_initialization 8D26  
                              f_open@clst 0114                                f_open@mode 00E9  
                              f_open@path 00E7                            ??_remove_chain 00A2  
                                 memcpy@d 0007                                   memcpy@n 0005  
                                 memcpy@s 0009                                   memset@c 0003  
                                 memset@k 000B                                   memset@n 0005  
                                 memset@s 000D                         __end_of_spiMaster FFB3  
                         disk_status@pdrv 0003                           disk_status@stat 0004  
                         ___lldiv@divisor 0005                                f_mount@cfs 00CD  
                              f_mount@res 00CA                                f_mount@opt 00C9  
                              f_mount@vol 00CF                           ___lldiv@counter 000D  
                            _get_ldnumber 9C3A                                ??_validate 0009  
                                 postdec1 000FE5                                   postdec2 000FDD  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                                ??_st_clust 000D  
                          move_window@res 0076                                ??_st_dword 0007  
                               _SPI1_Open 940E                                dir_clear@n 007E  
                              dir_alloc@n 00D8                          remove_chain@clst 009A  
                              dir_find@dp 00CF                                dir_find@fs 00D3  
                 ??_SD_SPI_AsyncReadTasks 0025          SD_SPI_SectorWrite@sector_address 0032  
                              dir_sdi@csz 00A1                                dir_sdi@ofs 0093  
                              dir_next@dp 00B5              SD_SPI_MediaInitialize@c_size 004A  
                              dir_next@fs 00C9                               ?_disk_ioctl 0001  
      SD_SPI_AsyncWriteTasks@blockCounter 00F8                                f_write@btw 00B9  
                              f_write@res 00CD               ??_SD_SPI_IsMediaInitialized 0001  
                             ?_disk_write 004D                                 _TRISCbits 000F94  
                              get_fat@obj 0077                                get_fat@val 0087  
                         get_ldnumber@vol 000A                           disk_write@count 0053  
                          _FatFs@ff$F1589 00F6                    SPI1_ExchangeBlock@data 0005  
                           ??_create_name 000D                                ld_clust@cl 0010  
                              ld_clust@fs 0008                           _SPI1_Initialize 8AE2  
                           ??_find_volume 0083                                ld_dword@rv 000A  
                           ??_disk_status 0001                                ?_SPI1_Open 0001  
                          __end_of___lmul 8F08                               st_clust@dir 0007  
                          __end_of_f_open E1FE                            __end_of_f_sync A8A2  
                          __end_of_memcpy 8CDA                    ?_OSCILLATOR_Initialize 0001  
                          __end_of_memset AFE4                                ld_word@ptr 0001  
                     start_initialization 8CDA                               st_dword@val 0003  
                             st_dword@ptr 0001                             fp__SPI1_Close 0000  
                              mem_cmp@cnt 0005                                mem_cmp@dst 0001  
                              mem_cmp@src 0003                                mem_cpy@cnt 0005  
                             put_fat@clst 0079                                mem_cpy@dst 0001  
                              mem_cpy@src 0003                           _disk_initialize 8D2C  
                 ?_SD_SPI_AsyncWriteTasks 0023                                mem_set@cnt 0005  
                              mem_set@dst 0001                                mem_set@val 0003  
               _SD_SPI_IsMediaInitialized 8B0A                             ??_follow_path 00DB  
                     __end_of_create_name BFD8          __end_of_SD_SPI_DelayMilliseconds 8E3A  
                                ??___lmul 0009                                  ??_f_open 00EA  
                                ??_f_sync 0060                               __pdataBANK1 0143  
                     __end_of_find_volume FEBA                       __end_of_disk_status 9148  
                                ??_memcpy 0007                                  ??_memset 0007  
                           ??_SDFAST_open 0003                        SD_SendCmd@response 001E  
                              memset@dest 0001                      __end_of_remove_chain AAD4  
                             __pbssBIGRAM 068E                             _SPI1_ReadByte 000000  
          SD_SPI_AsyncWriteTasks@response 0029                             __pcstackBANK0 0060  
                           __pcstackBANK1 0100                     _SD_SPI_IsMediaPresent 8A9A  
                       _SD_SPI_SectorRead 99CE                   __end_of_SPI1_Initialize 8AF4  
                            check_fs@sect 0079                        ?_SD_SPI_SectorRead 002F  
                         _SPI1_WriteBlock 000000            __end_of_SD_SPI_AsyncWriteTasks DA46  
                     ??_SD_SPI_SectorRead 0037           SD_SPI_DelayMilliseconds@timeout 0004  
                  _PIN_MANAGER_Initialize 8C00                             __pmediumconst FEBA  
                               _dir_clear 9ED4                                  ?_dbc_2nd 0001  
                               _dir_alloc 9D86                                  ?_dbc_1st 0001  
                                ?___lldiv 0001                                 _clst2sect 964A  
                             ??_SPI1_Open 0001                  ?_SD_SPI_IsWriteProtected 0001  
                                ?_f_close 007F                                 _disk_read 8FE4  
                                ?_chk_chr 0001                             follow_path@dp 00D7  
                           follow_path@fs 00E1                             follow_path@ns 00E3  
                           _validate$2409 000D                       __end_of_follow_path AD4C  
                                ?_f_mount 00C5                                  ?_dir_sdi 0091  
                                ?_f_write 00B5                                  ?_get_fat 0077  
                           ??_SDSLOW_open 0003                                  ?_ld_word 0001  
                                ?_mem_cmp 0001                                  ?_mem_cpy 0001  
                                ?_mem_set 0001                 __end_of_SD_SPI_SectorRead 9B04  
                     __end_of_SDFAST_open 8AB2                  ??_SD_SPI_MediaInitialize 0023  
                               f_close@fp 007F                                 f_close@fs 0081  
                                ?_put_fat 0077                                  ?_st_word 0001  
                 __end_of_disk_initialize 8D80                                  ?_sync_fs 005C  
                       find_volume@fasize 00B8  SD_SPI_AsyncWriteTasks@preEraseBlockCount 002E  
              __end_of_SPI1_ExchangeBlock 924E                   SD_SPI_SectorRead@buffer 0033  
                             _create_name BB84                                  _LATCbits 000F8B  
                       find_volume@szbfat 00A1                                 f_open@bcs 0108  
                               f_open@ofs 0110                                 f_open@res 011A  
                       find_volume@sysect 00A7                   SD_SPI_SectorRead@result 0039  
                 SD_SPI_SectorRead@status 003A            SD_SPI_SectorWrite@sector_count 0038  
                             _find_volume F23C                               _disk_status 90CC  
                           ??_move_window 005C                                 f_mount@fs 00C5  
                               f_mount@rp 00CB                           follow_path@path 00D9  
                                _PIR1bits 000F9E             SD_SPI_AsyncReadTasks@response 0029  
                               _spiMaster FF8B                             move_window@fs 0070  
                                _SSP1CON1 000FC6                                  _SSP1CON2 000FC5  
                              ?_dir_clear 0070                                 dir_find@c 00D5  
                              ?_dir_alloc 00CF                           remove_chain@obj 0098  
                         remove_chain@res 00AE                           remove_chain@nxt 00AA  
                                _SSP1STAT 000FC7                                ?_clst2sect 000D  
                               f_sync@dir 007B                                 f_sync@res 007A  
                               dir_sdi@dp 0091                                 dir_sdi@fs 00A9  
                              ?_disk_read 004A                                 f_write@cc 00D2  
                               f_write@bw 00BB                                 f_write@fp 00B5  
                               f_write@fs 00DE               SD_SPI_MediaInitialize@count 0049  
             SD_SPI_MediaInitialize@index 0047                                 get_fat@bc 008D  
                               get_fat@fs 008F                                 get_fat@wc 008B  
                _SD_SPI_DelayMilliseconds 8DDA             __end_of_SD_SPI_AsyncReadTasks C436  
                            ??_disk_ioctl 0004                    ?_SD_SPI_IsMediaPresent 0001  
                            ??_disk_write 0055                                st_clust@cl 0009  
                              st_clust@fs 0005                          ?_SPI1_Initialize 0001  
                       ___lmul@multiplier 0001                               _INTCON2bits 000FF1  
                     __end_of_SDSLOW_open 8AAA                                 copy_data0 8CEE  
                               ld_word@rv 0006                         SD_SendCmd@address 000C  
                              put_fat@res 0097                                put_fat@val 007D  
                       move_window@sector 0072                           dir_next@stretch 00B7  
                                __Hrparam 0000                                 memcpy@tmp 000B  
         __end_of_SD_SPI_IsWriteProtected 8AA2                                  __Lrparam 0000  
                             _follow_path AAD4                        __end_of_disk_ioctl 8B96  
                      __end_of_disk_write 90CC                         SD_SendCmd@timeout 001B  
                 ??_OSCILLATOR_Initialize 0001                                st_word@val 0003  
                              st_word@ptr 0001                       __end_of_move_window 964A  
                             _SDFAST_open 8AAA                                  dbc_2nd@c 0003  
             _SD_SPI_MediaInitialize$4163 0042                                  dbc_1st@c 0003  
                                _check_fs A024                     SD_SendCmd@longTimeout 0013  
                         dir_register@res 00DF                             dir_clear@ibuf 0076  
                           dir_clear@clst 0072                             dir_clear@sect 0078  
                                __ptext10 8E3A                                  __ptext11 97EE  
                                __ptext20 B36E                                  __ptext12 8F74  
                                __ptext21 9716                                  __ptext13 9D86  
                                __ptext30 924E                                  __ptext22 F23C  
                                __ptext14 AFE4                                  __ptext31 8BC8  
                                __ptext23 94C6                                  __ptext15 B76E  
                                __ptext40 A4A6                                  __ptext32 936A  
                                __ptext24 9C3A                                  __ptext16 9ED4  
                                __ptext41 8F08                                  __ptext33 8D80  
                                __ptext25 8D2C                                  __ptext17 964A  
                                __ptext50 D38E                                  __ptext42 8B96  
                                __ptext34 A6A4                                  __ptext26 E1FE  
                                __ptext18 CDDE                                  __ptext51 8FE4  
                                __ptext43 8B64                                  __ptext35 98D0  
                                __ptext27 8E9E                                  __ptext19 C8DE  
                                __ptext60 8AAA                                  __ptext52 99CE  
                                __ptext44 8C3E                                  __ptext36 90CC  
                                __ptext28 8DDA                                  __ptext61 8AA2  
                                __ptext53 8A96                                  __ptext45 8B3C  
                                __ptext37 8A9E                                  __ptext29 A024  
                                __ptext62 940E                                  __ptext54 BFD8  
                                __ptext46 957E                                  __ptext38 8A9A  
                                __ptext63 8AD4                                  __ptext55 AD4C  
                                __ptext47 A308                                  __ptext39 8B0A  
                                __ptext64 8AE2                                  __ptext56 91C8  
                                __ptext48 9058                                  __ptext65 8C00  
                                __ptext57 C436                                  __ptext49 9B04  
                                __ptext66 8AC6                                  __ptext58 8C8A  
                                __ptext67 0000                                  __ptext59 8B22  
                                _dir_find A184                              _SSP1CON1bits 000FC6  
                                _dir_next B76E                             dir_alloc@nent 00D1  
                        ?_disk_initialize 0001                                  _ld_clust 9148  
                                _ld_dword 94C6                            sync_window@res 005B  
                              sync_fs@res 005E                              _remove_chain A8A2  
                        find_volume@bsect 00BC                          find_volume@nclst 00B4  
                   fp__SPI1_ExchangeBlock 0000   SD_SPI_AsyncReadTasks@longTimeoutCounter 016A  
                        find_volume@tsect 00AF                                  f_open@dj 011B  
                                f_open@cl 010C                                  f_open@fp 00E5  
                                f_open@fs 0118                                  f_open@dw 0100  
                                f_open@sc 0104                                  _validate 98D0  
                                isa$xinst 000000                                  f_sync@fp 0078  
                                f_sync@fs 007D                               ??_dir_clear 005C  
                             ??_dir_alloc 00D3                                  _st_clust 8C3E  
                                _st_dword 8F08                               ??_clst2sect 0013  
                           ??_sync_window 0060                               ??_disk_read 0052  
             SPI1_ExchangeBlock@blockSize 0003                               _SDSLOW_open 8AA2  
                                mem_cmp@d 0009                                  mem_cmp@r 000D  
                                mem_cmp@s 000B                                _INTCONbits 000FF2  
                               put_fat@bc 0095                                  mem_cpy@d 0007  
                               put_fat@fs 0077                                  mem_cpy@s 0009  
                                mem_set@d 0007                                  memcpy@d1 0001  
                                memcpy@s1 0003                             clst2sect@clst 000F  
                     FatFsDemo_Tasks@F259 0143                            dir_register@dp 00DB  
                          dir_register@fs 00DD                              dir_clear@szb 007C  
                        ___lldiv@dividend 0001                   ?_PIN_MANAGER_Initialize 0001  
                            dir_alloc@res 00DA                             sync_window@fs 0059  
    SD_SPI_AsyncReadTasks@SingleBlockRead 00FF                               f_mount@path 00C7  
                               sync_fs@fs 005C                               _move_window 957E  
                  _SD_SPI_MediaInitialize E1FE                                  put_fat@p 0093  
                              _SPI1_Close 8A96         SD_SPI_MediaInitialize@c_size_mult 0046  
                           ?_dir_register 00DB           SD_SPI_MediaInitialize@block_len 0048  
                             dir_clear@fs 0070                               dir_alloc@dp 00CF  
                             dir_alloc@fs 00D6                          ___lldiv@quotient 0009  
                     __end_of_sync_window A4A6                               dir_find@res 00D6  
                       remove_chain@pclst 009E                             ?_create_chain 0098  
                        _create_name$2244 0011                          _create_name$2239 000F  
                            dir_next@clst 00CB                               clst2sect@fs 000D  
                             dir_sdi@clst 00A5                __end_of_SD_SPI_SectorWrite 9C3A  
          __end_of_PIN_MANAGER_Initialize 8C3E                              ?_create_name 0009  
                             dir_next@ofs 00C5                              f_write@csect 00D0  
                            f_write@wbuff 00CE                              _put_fat$1788 008F  
                            _put_fat$1789 0091                               f_write@buff 00B7  
                             f_write@clst 00D4                                _SD_SendCmd C436  
                             f_write@sect 00DA                              ?_find_volume 007E  
                             f_write@wcnt 00D8                             ?_get_ldnumber 0001  
                SD_SPI_SectorWrite@buffer 0036                              ?_disk_status 0001  
              __end_of_spi1_configuration FFBF                ??_SD_SPI_DelayMilliseconds 0002  
                  SD_SPI_SectorWrite@info 0040  
